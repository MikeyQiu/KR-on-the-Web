Neural Chinese Word Segmentation as
Sequence to Sequence Translation

Xuewen Shi, Heyan Huang, Ping Jian, Yuhang Guo,
Xiaochi Wei, and Yikun Tang

Beijing Engineering Research Center of High Volume Language Information
Processing and Cloud Computing Applications,
School of Computer Science and Technology,
Beijing Institute of Technology, Beijing 100081, China
{xwshi,hhy63,pjian,guoyuhang,wxchi,tangyk}@bit.edu.cn

Abstract. Recently, Chinese word segmentation (CWS) methods us-
ing neural networks have made impressive progress. Most of them re-
gard the CWS as a sequence labeling problem which construct models
based on local features rather than considering global information of
input sequence. In this paper, we cast the CWS as a sequence transla-
tion problem and propose a novel sequence-to-sequence CWS model with
an attention-based encoder-decoder framework. The model captures the
global information from the input and directly outputs the segmented
sequence. It can also tackle other NLP tasks with CWS jointly in an
end-to-end mode. Experiments on Weibo, PKU and MSRA benchmark
datasets show that our approach has achieved competitive performances
compared with state-of-the-art methods. Meanwhile, we successfully ap-
plied our proposed model to jointly learning CWS and Chinese spelling
correction, which demonstrates its applicability of multi-task fusion.

Keywords: Chinese word segmentation, sequence-to-sequence, Chinese
spelling correction, natural language processing

1

Introduction

Chinese word segmentation (CWS) is an important step for most Chinese nat-
ural language processing (NLP) tasks, since Chinese is usually written without
explicit word delimiters. The most popular approaches treat CWS as a sequence
labelling problem [21,14] which can be handled with supervised learning algo-
rithms, e.g. Conditional Random Fields [11,14,24,18]. However the performance
of these methods heavily depends on the design of handcrafted features.

Recently, neural networks for CWS have gained much attention as they are
capable of learning features automatically. Zheng et al. [25] adapted word embed-
ding and the neural sequence labelling architecture [7] for CWS. Chen et al. [4]
proposed gated recursive neural networks to model the combinations of context
characters. Chen et al. [5] introduced Long Short-Term Memory (LSTM) into
neural CWS models to capture the potential long-distance dependencies. The

9
1
0
2
 
v
o
N
 
9
2
 
 
]
L
C
.
s
c
[
 
 
1
v
2
8
9
2
1
.
1
1
9
1
:
v
i
X
r
a

2

X. Shi et al.

aforementioned methods predict labels of each character in the order of the se-
quence by considering context features within a ﬁxed-sized window and limited
tagging history [2]. In order to eliminate the restrictions of previous approaches,
we cast the CWS as a sequence-to-sequence translation task.

The sequence-to-sequence framework has successful applications in machine
translation [19,1,20,9], which mainly beneﬁts from (i) distributed representa-
tions of global input context information, (ii) the memory of outputs dependen-
cies among continuous timesteps and (iii) the ﬂexibilities of model fusion and
transfer.

In this paper, we conduct sequence-to-sequence CWS under an attention-
based recurrent neural network (RNN) encoder-decoder framework. The encoder
captures the whole bidirectional input information without context window lim-
itations. The attention based decoder directly outputs the segmented sequence
by simultaneously considering the global input context information and the de-
pendencies of previous outputs. Formally, given an input characters sequence x
with T words i.e. x = (x1, x2, ..., xTx ), our model directly generates an output
sequence y = (y1, y2, ..., yT ) with segmentation tags inside. For example, given
a Chinese sentence “ 我爱夏天” (I love summer) , the input x = ( 我, 爱, 夏, 天
) and the output y = ( 我, </s>, 爱, </s>, 夏, 天 ) where the symbol ‘</s>’
denotes the segmentation tag. In the post-processing step, we replace ‘</s>’
with word delimiters and join the characters sequence into a sentence as s = “我
爱夏天”.

In addition, considering that the sequence-to-sequence CWS is an end-to-end
process of natural language generation, it has the capacity of jointly learning
with other NLP tasks. In this paper, we have successfully applied our proposed
method to jointly learning CWS and Chinese spelling correction (CSC) in an end-
to-end mode, which demonstrates the applicability of the sequence-to-sequence
CWS framework.

We evaluate our model on three benchmark datasets, Weibo, PKU and
MSRA. The experimental results show that the model achieves competitive per-
formances compared with state-of-the-art methods.

The main contributions of this paper can be summarized as follows:

• We ﬁrst treat CWS as a sequence-to-sequence translation task and introduce
the attention-based encoder-decoder framework into CWS. The encoder-
decoder captures the whole bidirectional input information without context
window limitations and directly outputs the segmented sequence by simul-
taneously considering the dependencies of previous outputs and the input
information.

• We let our sequence-to-sequence CWS model simultaneously tackle other
NLP tasks, e.g., CSC, in an end-to-end mode, and we well validate its ap-
plicability in our experiments.

• We propose a post-editing method based on longest common subsequence
(LCS) [12] to deal with the probable translation errors of our CWS system.
This method solves the problem of missing information in the translation
process and improves the experiment results.

Neural Chinese Word Segmentation as Sequence to Sequence Translation

3

Illustration of the presented model for CWS. The tag ‘<eos>’ refers to the

Fig. 1.
end of the sequence.

2 Method

2.1 Attention based RNN Encoder-decoder Framework for CWS

Our approach uses the attention based RNN encoder-decoder architecture called
RNNsearch [1]. From a probabilistic perspective, our method is equivalent to
ﬁnding a character sequence y with segmentation tags inside via maximiz-
ing the conditional probability of y given a input character sequence x, i.e.,
argmaxyp(y|x).

The model contains (i) an bidirectional RNN encoder to maps the input
x = (x1, x2, ..., xTx ) into a sequence of annotations (h1, h2, ..., hTx ), and (ii) an at-
tention based RNN decoder to generate the output sequence y = (y1, y2, ..., yT ).
Fig. 1 gives an illustration of the model architecture.

2.2 bidirectional RNN Encoder

The bidirectional RNN encoder consists of forward and backward RNNs. The
−→
f reads the input sequence in the order of (from x1 to xTx ) and
forward RNN
←−
calculates the sequence (
f reads
the input sequence in the reverse order of (from xTx to x1) and calculates the

−→
h Tx ), while the backward RNN

−→
h 2, ...,

−→
h 1,

4

X. Shi et al.

sequence (
(cid:104)−→
h j

by hj =

←−
h 1,
T

←−
h 2, ...,
T (cid:105)T
←−
h j

;

.

←−
h Tx ). Finally, the annotation hj for each xj is obtained

2.3 Attention-based RNN Decoder

The attention-based RNN decoder estimates the conditional probability p(y|x)
as

p(y|x) =

p(yt|y1, ..., yt−1, x).

T
(cid:89)

t

In Eq.(1), each conditional probability is deﬁned as:

p(yt|y1, ..., yt−1, x) = g(yt−1, st, ct),

where st is the RNN hidden state for time t and computed by

(1)

(2)

(3)

The ct in Eq.(2) and Eq.(3) is the context vector computed as a weighted

sum of the annotations (h1, h2, ..., hTx ):

st = f (st−1, yt−1, ct).

ct =

αt,jhj.

Tx(cid:88)

j=1

αt,j =

exp(et,j)
k=1 exp(et,k)

,

(cid:80)Tx

The weight αt,j is computed by:

where et,j = a(st−1, hj), therein, a(·) is an attention model constructed with a
feedforward neural network.

2.4 Post-editing Method for Sequence-to-sequence CWS

We found some negative outputs of our model caused by translation errors such
as missing words and extra words. The cause of the errors is mostly due to
out-of-vocabulary or rare Chinese characters of input sequence.

Table 1 shows an example with translation errors of our sequence-to-sequence
CWS system. The original input comes from the Weibo dataset (seen in Sec-
tion 3.1). The output missed three Japanese characters “”(extreme), “の”(of)
and “ ”(parent), and introduced three extra characters “UNK” instead which
means ‘unknown word’ in the vocabulary.

Inspired by Lin and Och [12], we proposed an LCS based post-editing algo-
rithm1 (seen in Algorithm 1) to alleviate the negative impact to CWS. In the

1 Executable source code is available at

https://github.com/SourcecodeSharing/CWSpostediting

Neural Chinese Word Segmentation as Sequence to Sequence Translation

5

Table 1. An example of translation errors in our CWS system and post-editing results.

Original
input
System
output
After
post-editing
Gold
standard

岛国一超精分的小品《道の子》，看完之后我想说，为什么我没有这
么“通情达理”的老爸呢？
岛国一超精分的小品《UNK道UNK UNK子》，看完之后我想说，
为什么我没有这么“通情达理”的老爸呢？
岛国一超精分的小品《道の 子》，看完之后我想说，为什么我没有
这么“通情达理”的老爸呢？
岛国一超精分的小品《道の 子》，看完之后我想说，为什么我没有
这么“通情达理”的老爸呢？

Algorithm 1 Post-editing algorithm for our CWS system
Input:

The original input character sequence: sori;
The segmented word sequence with translation errors from sequence-to-sequence
CWS system: sseg;

Output:

Segmentation labels set: L ← {B, M, E, S};
Labeling characters in sseg with labels in L gets labseg;
lengthori ← getLength(sori), lengthseg ← getLength(sseg)
if lengthori (cid:54)= lengthseg then

Labeling characters in sori with position labels;
Extracting the longest common subsequences between sori and sseg using longest
common subsequence (LCS) algorithm: ssub = LCS(sseg, sori);
Taking sori as a reference, ﬁlling the missing characters in ssub and labeling them
with label X;
Replacing label X with labels in L according to manually prepared rules;

else

Labeling sori according to labseg;

end if
Merging the characters in sori into word sequence spe according to their segmentation
labels;
return spe;

algorithm, we deﬁne an extended word segmentation labels set {B, M, E, S, X}.
{B, M, E} represent begin, middle, end of a multi-character segmentation respec-
tively, and S represents a single character segmentation. The additional label X
in L can be seen as any other labels according to its context. For example, given
a CWS label sequence (S, S, B, E, B, X, E), the X should be transformed into
label M and in the other case of (S, X, B, E, B, M, E), the X should be treated
as label S. The above transformation strategy can be based on handcraft rules
or machine learning methods. In this paper, we use the transformation rules
written manually. Table 1 also gives an example of post-editing results.

6

X. Shi et al.

Table 2. Statistics of diﬀerent datasets. The size of training/testing datasets are given
in number of sentences (Sents), words (Words) and characters (Chars).

Datasets

Sents
Weibo
20,135
43,475
PKU
MSRA 86,924

Training
Chars
Words
688,743
421,166
1,109,947 1,826,448
2,368,391 4,050,469

Testing

Sents Words
187,877
8,592
104,372
4,261
106,873
3,985

Chars
315,865
172,733
184,355

3 Experiments

3.1 Datasets

We use three benchmark datasets, Weibo, PKU and MSRA, to evaluate our
CWS model. Statistics of all datasets are shown in Table 2.

Weibo2: this dataset is provided by NLPCC-ICCPOL 2016 shared task of
Chinese word segmentation for Micro-blog Texts [16]. The data are collected
from Sina Weibo3. Diﬀerent with the popular used newswire dataset, the texts
of the dataset are relatively informal and consists various topics. Experimental
results on this dataset are evaluated by eval.py scoring program1, which calcu-
lates standard precision (P), recall (R) and F1-score (F) and weighted precision
(P), recall (R) and F1-score (F) [15] [16] simultaneously.

PKU and MSRA4 these two datasets are provided by the second Interna-
tional Chinese Word Segmentation Bakeoﬀ [8]. We found that the PKU dataset
contains many long paragraphs consisting of multiple sentences, which has neg-
ative impacts on the training of the sequence translation models. To solve this
problem, we divide the long paragraphs in the PKU dataset into sentences. Ex-
periment results on those two datasets are evaluated by the standard Bakeoﬀ
scoring program3, which calculates P, R and F scores.

3.2 Model Setup and Pre-training

We use the RNNsearch5 model [1] to achieve our sequence-to-sequence CWS
system. The model is set with embedding size 620, 1000 hidden units and an
alphabet with the size of 7190. We also apply the Moses’ phrase-based (Moses
PB) statistical machine translation system [10] with 3-gram or 5-gram language
model as sequence-to-sequence translation baseline systems.

Since our sequence-to-sequence CWS model contains large amount numbers
(up to ten million) of free parameters, it is much more likely to be overﬁtting
when training on small datasets [17]. In fact, we make an attempt to train

2 All data and the program are available at

https://github.com/FudanNLP/NLPCC-WordSeg-Weibo

3 http://www.weibo.com
4 All data and the program are available at

http://sighan.cs.uchicago.edu/bakeoff2005/:

5 Implementations are available at https://github.com/lisa-groundhog/GroundHog

Neural Chinese Word Segmentation as Sequence to Sequence Translation

7

Table 3. Experimental results on benchmark datasets w/o pre-training.

Datasets
Weibo
PKU
MSRA

P
89.8
87.0
95.1

R
89.5
88.6
93.2

F
89.6
87.8
94.1

Table 4. Experimental results on the CWS dataset of Weibo. The contents in paren-
theses represent the results of comparison with other systems.

Groups

A

B [16]

Models

LTP [3]

S1
S2
S3
S4
S5
S6
S7
S8
S9

Moses PB w/ 3-gram LM
Moses PB w/ 5-gram LM
RNNsearch w/o ﬁne-tuning
RNNsearch

RNNsearch w/ post-editing

M

Standard Scores
F
R
P

Weighted Scores
F
R
P

83.98 90.46 87.09 69.69 80.43 74.68

94.13 94.69 94.41 79.29 81.62 80.44
94.21 95.31 94.76 78.18 81.81 79.96
94.36 95.15 94.75 78.34 81.34 79.81
93.98 94.78 94.38 78.43 81.20 79.79
93.93 94.80 94.37 76.24 79.32 77.75
93.90 94.42 94.16 75.95 78.20 77.06
93.82 94.60 94.21 75.08 77.91 76.47
93.74 94.31 94.03 74.90 77.14 76.00
92.89 93.65 93.27 71.25 73.92 72.56

92.42 92.26 92.34 76.74 77.23 76.98
92.37 92.26 92.31 76.58 77.25 76.91
86.10 88.82 87.44 68.88 75.20 71.90
92.09 92.79 92.44 75.00 78.27 76.60
78.11
93.48
(>S5)
(>S9)

79.99
(>S5)

94.60
(>S6)

76.30
(>S5)

94.04
(>S8)

the model on the benchmark datasets directly and get poor scores as shown
in Table 3. To deal with this problem, a large scale pseudo data is utilized
to pre-train our model. The Weibo, PKU and MSRA datasets are then used
for ﬁne-tuning. To construct the pseudo data, we label the UN1.0 [26] with
LTP6 [3] Chinese segmentor. The pseudo data contains 12,762,778 sentences in
the training set and 4,000 sentences in the validation set and the testing set. The
testing set of the pseudo data is used to evaluate the pre-training performance of
the model, and the result P, R and F scores are 98.2, 97.1 and 97.7 respectively
w.r.t the LTP label as the ground truth.

3.3 CWS Experiment Results

Weibo: for Weibo dataset, we compare our models with two groups of previous
works on CWS as shown in Table 4. The LTP [3] in group A is a general CWS tool

6 Available online at https://github.com/HIT-SCIR/ltp

8

X. Shi et al.

Table 5. Experimental results on the CWS benchmark datasets of PKU and MSRA.

Groups

A

B

C

M

Models

LTP [3]

Zheng et al., 2013 [25]
Pei et al., 2014 [13]
Chen et al., 2015 [4]
Chen et al., 2015 [5]
Cai and Zhao, 2016 [2]

PKU
R

P

MSRA
R

F

F

P

95.9 94.7 95.3 86.8 89.9 88.3

93.5 92.2 92.8 94.2 93.7 93.9
94.4 93.6 94.0 95.2 94.6 94.9
96.3 95.9 96.1 96.2 96.3 96.2
96.3 95.6 96.0 96.7 96.5 96.6
95.8 95.2 95.5 96.3 96.8 96.5

Zhang et al., 2013 [23]

-

-

96.1

-

-

97.4

Moses PB w/ 3-gram LM
Moses PB w/ 5-gram LM

92.9 93.0 93.0 96.0 96.2 96.1
92.7 92.8 92.7 95.9 96.3 96.1
Moses PB w/ 3-gram LM w/ CSC 92.9 93.0 92.9 95.3 96.5 95.9
Moses PB w/ 5-gram LM w/ CSC 92.6 93.2 92.9 95.9 96.3 96.1
93.1 92.7 92.9 84.1 87.9 86.0
94.7 95.3 95.0 96.2 96.0 96.1
94.9 95.4 95.1 96.3 96.1 96.2
95.2 94.6 94.9 96.1 96.1 96.1
RNNsearch w/ CSC and post-editing 95.3 94.7 95.0 96.2 96.1 96.2

RNNsearch w/o ﬁne-tuning
RNNsearch
RNNsearch w/ post-editing
RNNsearch w/ CSC

which we use to label pseudo data. S1 to S8 in Group B are submitted systems
results of NLPCC-ICCPOL 2016 shared task of Chinese word segmentation for
Micro-blog Texts [16]. Our works are shown in Group M. Since the testing set
of Weibo dataset has many out-of-vocabulary (OOV) words, our post-editing
method shows its eﬀective for enhancing our CWS results for its abilities to
recall missing words and replace extra words.

PKU and MSRA: for the two popular benchmark datasets, PKU and
MSRA, we compare our model with three groups of previous models on CWS
task as shown in Table 5. The LTP [3] in group A is same as Table 4. Group B
presents a series of published results of previous neural CWS models with pre-
trained character embeddings. The work proposed by Zhang et al. [23] in group
C is one of the state-of-the-art methods. Our post-editing method dose not
signiﬁcantly enhance the CWS results for PKU and MSRA datasets comparing
with Weibo dataset. The reason is that the text style in the two datasets is
formal and the OOV words are less common than Weibo dataset. In addition,
the sequence translation baselines of Moses PB also gained decent results without
pre-training or any external data.

According to all experimental results, our approaches still have gaps with
the state-of-the-art methods. Considering the good performance (F1-score 97.7)
on the pseudo testing data, the sequence-to-sequence CWS model has shown
its capacity on this task and the data scale may be one of main limitations for
enhancing our model.

Neural Chinese Word Segmentation as Sequence to Sequence Translation

9

Table 6. An example of modiﬁed data. The character with double underline is wrong
and the characters with single underlines are correct.

Original
input

Modiﬁed
input

Gold
standard

在这个基础上，公安机关还从原料采购等方面加以严格控制，统
一发放“准购证”。
在这个基础上，公安机关还从源料采购等方面加以严格控制，统
一发放“准购证”。
在这个基础上，公安机关还从原料采购等方面加以严格控制，统
一发放“准购证”。

Table 7. Experimental results on modiﬁed PKU data. The numbers in parentheses
represent the changes compared with the normal CWS results shown in Table 5.

Models
Modiﬁed testing data
LTP [3]
Moses PB w/ 3-gram LM
Moses PB w/ 3-gram LM w/ CSC
Moses PB w/ 5-gram LM
Moses PB w/ 5-gram LM w/ CSC
RNNsearch
RNNsearch w/ CSC

P
99.0
94.0
90.8
92.7
90.6
92.3
93.2
95.0

R
99.0
93.2
91.5
92.9
91.3
93.0
93.2
94.5

F
99.0 (-1.0)
93.6 (-1.7)
91.2 (-1.8)
92.8 (-0.1)
91.0 (-1.7)
92.6 (-0.3)
93.2 (-1.8)
94.8 (-0.1)

3.4 Learning CWS and Chinese Spelling Correction Jointly

As a sequence translation framework, the model can achieve any expected kinds
of sequence-to-sequence transformation with the reasonable training. It hence
leaves a lot of space to tackle other NLP tasks jointly.

In this paper, we apply the model to jointly learning CWS and Chinese
spelling correction (CSC). To evaluate the performance of spelling correction, we
use automatic method to build two datasets, modiﬁed PKU and MSRA, based
on assumptions that (i) most spelling errors are common with ﬁxed pattern and
(ii) the appearance of spelling errors are randomly. The details are as follows:
ﬁrstly, we construct a correct-to-wrong word pair dictionary counting from the
Chinese spelling check training dataset of SIGHAN 2014 [22] as a ﬁxed pattern
of spelling errors; secondly, we randomly select 50% sentences from PKU and
MSRA training set respectively and replace one of the correct words with the
wrong one according to the dictionary for each selected sentence. The testing set
is generated in the same way.

We treat the modiﬁed sentences and the original segmented sentences as the
input sequence and the golden standard respectively in the training procedure.
Table 6 gives an example of the modiﬁed data. In the testing procedure, we send
the sentence with wrong words into the model, and expect to get the segmented
sentence with all correct words. The results are shown in Table 7 and Table 8.
Since the general CWS tool LTP does not have the ability to correct spelling

10

X. Shi et al.

Table 8. Experimental results on modiﬁed MSRA data. The numbers in parentheses
represent the changes compared with the normal CWS results shown in Table 5.

Models
Modiﬁed testing data
LTP [3]
Moses PB w/ 3-gram LM
Moses PB w/ 3-gram LM w/ CSC
Moses PB w/ 5-gram LM
Moses PB w/ 5-gram LM w/ CSC
RNNsearch
RNNsearch w/ CSC

P
98.5
84.8
93.7
95.0
93.7
94.6
93.8
96.0

R
98.5
88.4
94.6
96.3
94.7
95.9
94.7
96.0

F
98.5 (-1.5)
86.6 (-1.7)
94.2 (-1.9)
95.6 (-0.3)
94.2 (-1.9)
95.3 (-0.7)
94.2 (-1.9)
96.0 (-0.1)

mistakes, the performance decreases. Whereas, the impact of the wrong words
is limited in our models trained to do CWS and CSC jointly.

4 Related Work

CWS using neural networks have gained much attention in recent years as they
are capable of learning features automatically. Collobert et al. [7] developed a
general neural architecture for sequence labelling tasks. Zheng et al. [25] adapted
word embedding and the neural sequence labelling architecture [7] for CWS. Pei
et al. [13] improved upon Zheng et al. [25] by modeling complicated interactions
between tags and context characters. Chen et al. [4] proposed gated recursive
neural networks to model the combinations of context characters. Chen et al. [5]
introduced LSTM into neural CWS models to capture the potential long-distance
dependencies. However, the methods above all regard CWS as sequence labelling
with local input features. Cai and Zhao [2] re-formalize CWS as a direct seg-
mentation learning task without the above constrains, but the maximum length
of words is limited.

Sequence-to-sequence Machine Translation Models. Neural sequence-
to-sequence machine translation models have rapid developments since 2014.
Cho et al. [6] proposed an RNN encoder-decoder framework with gated recur-
rent unit to learn phrase representations. Sutskever et al. [19] applied LSTM for
RNN encoder-decoder framework to establish a sequence-to-sequence translation
framework. Bahdanau et al. [1] improved upon Sutskever et al. [19] by introduc-
ing an attention mechanism. Wu et al [20] presented Google’s Neural Machine
Translation system which is serving as an online machine translation system.
Gehring et al. [9] introduce an architecture based entirely on convolutional neu-
ral networks to sequence-to-sequence learning tasks which improved translation
accuracy at an order of magnitude faster speed. Other eﬃcient sequence-to-
sequence models will be introduced into this task and compared with existing
works in our future work.

Neural Chinese Word Segmentation as Sequence to Sequence Translation

11

5 Conclusion

In this paper, we re-formalize the CWS as a sequence-to-sequence translation
problem and apply an attention based encoder-decoder model. We also make an
attempt to let the model jointly learn CWS and CSC. Furthermore, we propose
an LCS based post-editing algorithm to deal with potential translating errors.
Experimental results show that our approach achieves competitive performances
compared with state-of-the-art methods both on normal CWS and CWS with
CSC.

In the future, we plan to apply other eﬃcient sequence-to-sequence models
for CWS and study an end-to-end framework for multiple natural language pre-
processing tasks.

Acknowledgments This work was supported by the National Basic Research
Program (973) of China (No. 2013CB329303) and the National Natural Science
Foundation of China (No. 61132009).

References

1. Bahdanau, D., Cho, K., Bengio, Y.: Neural machine translation by jointly learning

to align and translate. arXiv preprint arXiv:1409.0473 (2014)

2. Cai, D., Zhao, H.: Neural word segmentation learning for chinese. arXiv preprint

arXiv:1606.04300 (2016)

3. Che, W., Li, Z., Liu, T.: Ltp: A chinese language technology platform. In: Proceed-
ings of the 23rd International Conference on Computational Linguistics: Demon-
strations. pp. 13–16. Association for Computational Linguistics (2010)

4. Chen, X., Qiu, X., Zhu, C., Huang, X.: Gated recursive neural network for chinese

word segmentation. In: ACL (1). pp. 1744–1753 (2015)

5. Chen, X., Qiu, X., Zhu, C., Liu, P., Huang, X.: Long short-term memory neural

networks for chinese word segmentation. In: EMNLP. pp. 1197–1206 (2015)

6. Cho, K., Van Merri¨enboer, B., Gulcehre, C., Bahdanau, D., Bougares, F., Schwenk,
H., Bengio, Y.: Learning phrase representations using rnn encoder-decoder for
statistical machine translation. arXiv preprint arXiv:1406.1078 (2014)

7. Collobert, R., Weston, J., Bottou, L., Karlen, M., Kavukcuoglu, K., Kuksa, P.:
Natural language processing (almost) from scratch. Journal of Machine Learning
Research 12(Aug), 2493–2537 (2011)

8. Emerson, T.: The second international chinese word segmentation bakeoﬀ. In: Pro-
ceedings of the fourth SIGHAN workshop on Chinese language Processing. vol. 133
(2005)

9. Gehring, J., Auli, M., Grangier, D., Yarats, D., Dauphin, Y.N.: Convolutional

Sequence to Sequence Learning. ArXiv e-prints (May 2017)

10. Koehn, P., Hoang, H., Birch, A., Callison-Burch, C., Federico, M., Bertoldi, N.,
Cowan, B., Shen, W., Moran, C., Zens, R., et al.: Moses: Open source toolkit for
statistical machine translation. In: Proceedings of the 45th annual meeting of the
ACL on interactive poster and demonstration sessions. pp. 177–180. Association
for Computational Linguistics (2007)

12

X. Shi et al.

11. Laﬀerty, J., McCallum, A., Pereira, F., et al.: Conditional random ﬁelds: Proba-
bilistic models for segmenting and labeling sequence data. In: Proceedings of the
eighteenth international conference on machine learning, ICML. vol. 1, pp. 282–289
(2001)

12. Lin, C.Y., Och, F.J.: Automatic evaluation of machine translation quality using
longest common subsequence and skip-bigram statistics. In: Proceedings of the
42nd Annual Meeting on Association for Computational Linguistics. p. 605. Asso-
ciation for Computational Linguistics (2004)

13. Pei, W., Ge, T., Chang, B.: Max-margin tensor neural network for chinese word

segmentation. In: ACL (1). pp. 293–303 (2014)

14. Peng, F., Feng, F., McCallum, A.: Chinese segmentation and new word detec-
tion using conditional random ﬁelds. In: Proceedings of the 20th international
conference on Computational Linguistics. p. 562. Association for Computational
Linguistics (2004)

15. Qiu, P.Q.X., Huang, X.: A new psychometric-inspired evaluation metric for chinese

word segmentation (2016)

16. Qiu, X., Qian, P., Shi, Z.: Overview of the NLPCC-ICCPOL 2016 shared task:
Chinese word segmentation for micro-blog texts. In: Proceedings of The Fifth Con-
ference on Natural Language Processing and Chinese Computing & The Twenty
Fourth International Conference on Computer Processing of Oriental Languages
(2016)

17. Srivastava, N., Hinton, G.E., Krizhevsky, A., Sutskever, I., Salakhutdinov, R.:
Dropout: a simple way to prevent neural networks from overﬁtting. Journal of
Machine Learning Research 15(1), 1929–1958 (2014)

18. Sun, X., Li, W., Wang, H., Lu, Q.: Feature-frequency–adaptive on-line training for
fast and accurate natural language processing. Computational Linguistics 40(3),
563–586 (2014)

19. Sutskever, I., Vinyals, O., Le, Q.V.: Sequence to sequence learning with neural
networks. In: Advances in neural information processing systems. pp. 3104–3112
(2014)

20. Wu, Y., Schuster, M., Chen, Z., Le, Q.V., Norouzi, M., Macherey, W., Krikun,
M., Cao, Y., Gao, Q., Macherey, K., et al.: Google’s neural machine translation
system: Bridging the gap between human and machine translation. arXiv preprint
arXiv:1609.08144 (2016)

21. Xue, N., Shen, L.: Chinese word segmentation as lmr tagging. In: Proceedings of
the Second SIGHAN Workshop on Chinese Language Processing. pp. 11212–179
(2003)

22. Yu, L.C., Lee, L.H., Tseng, Y.H., Chen, H.H., et al.: Overview of sighan 2014
bake-oﬀ for chinese spelling check. In: Proceedings of the 3rd CIPSSIGHAN Joint
Conference on Chinese Language Processing (CLP’14). pp. 126–132 (2014)

23. Zhang, L., Wang, H., Mansur, X.S.M.: Exploring representations from unlabeled

data with co-training for chinese word segmentation (2013)

24. Zhao, H., Huang, C.N., Li, M., Lu, B.L.: A uniﬁed character-based tagging frame-
work for chinese word segmentation. ACM Transactions on Asian Language Infor-
mation Processing (TALIP) 9(2), 5 (2010)

25. Zheng, X., Chen, H., Xu, T.: Deep learning for chinese word segmentation and pos

tagging. In: EMNLP. pp. 647–657 (2013)

26. Ziemski, M., Junczys-Dowmunt, M., Pouliquen, B.: The united nations parallel
corpus v1. 0. In: Proceedings of the Tenth International Conference on Language
Resources and Evaluation LREC. pp. 23–28 (2016)

