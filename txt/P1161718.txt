Deep Semantic Segmentation for Automated
Driving: Taxonomy, Roadmap and Challenges

Mennatullah Siam, Sara Elkerdawy, Martin Jagersand
University of Alberta, Canada
Email: mennatul@ualberta.ca

Senthil Yogamani
Valeo Vision Systems, Ireland
Email: senthil.yogamani@valeo.com

7
1
0
2
 
g
u
A
 
3
 
 
]
L
M

.
t
a
t
s
[
 
 
2
v
2
3
4
2
0
.
7
0
7
1
:
v
i
X
r
a

Abstract—Semantic segmentation was seen as a challenging
computer vision problem few years ago. Due to recent advance-
ments in deep learning, relatively accurate solutions are now
possible for its use in automated driving. In this paper, the
semantic segmentation problem is explored from the perspective
of automated driving. Most of the current semantic segmentation
algorithms are designed for generic images and do not incorpo-
rate prior structure and end goal for automated driving. First,
the paper begins with a generic taxonomic survey of semantic
segmentation algorithms and then discusses how it ﬁts in the
context of automated driving. Second, the particular challenges
of deploying it into a safety system which needs high level of
accuracy and robustness are listed. Third, different alternatives
instead of using an independent semantic segmentation module
are explored. Finally, an empirical evaluation of various semantic
segmentation architectures was performed on CamVid dataset in
terms of accuracy and speed. This paper is a preliminary shorter
version of a more detailed survey which is work in progress.

I. INTRODUCTION

Semantic image segmentation has witnessed tremendous
progress recently with deep learning. Semantic segmentation
is targeted towards partitioning the image into semantically
meaningful parts with various applications for that. It has been
used in robotics [1][2][3][4], medical applications [5][6], aug-
mented reality [7], and most prominently automated driving
[8][9][10][11].

Automated driving is another hot topic in the literature that
is advancing with the rapid growth in deep learning. The goal
to create an automated car started since 1989 with the work
in [12] that used single hidden layer network. However, the
limitations in neural networks at that time did not allow its
progress further on. Recently with deep learning and advances
in GPU technologies, different works on automated driving
emerged.

Two main paradigms for automated driving emerged: (1)
The mediated perception approach which parses the whole
scene and uses this information for the control decision
increasing the complexity and the cost of the system. (2)
The behavior reﬂex paradigm that relies more on end-to-end
learning to map direct sensory input to driving decision which
is an ill-posed problem due to the many possible ambiguous
decisions, such as the work in [13][14]. However, in [15] an
intermediate approach was suggested that learns affordance
indicators for the driving scene. These indicators can then
feedback on a simple controller for the ﬁnal driving decision.
The previous work on automated driving pose the important

question of whether the solution for automated driving need
semantic segmentation module or not?

A related survey in [16] on semantic segmentation litera-
ture is presented. However it is not addressing the speciﬁc
application of automated driving. This paper tries to address
this gap by reviewing the work on semantic segmentation in
the context of automated driving. This paper addresses the
question on what is the importance of semantic segmentation
in automated driving and reviews alternative approaches. The
paper is organized as follows, section II covers the literature
work on deep semantic segmentation in general. Followed by
section III that focuses on the problem of automated driving
and how can semantic segmentation be used in it. Then section
IV presents the main challenges in automated driving appli-
cations. Then alternative approaches are discussed including
end-to-end learning and multi-task learning in section V. A
comparative evaluation of semantic segmentation architectures
is presented in VI. Finally sectionVII summarizes and presents
the conclusions.

II. DEEP SEMANTIC SEGMENTATION TAXONOMY

In this section the categories of deep semantic segmen-
tation are discussed. Different work under these categories
are reviewed in further details with discussion of their lim-
itations if any and future directions. The literature work in
semantic segmentation is categorized into four subcategories:
(1) Classical Methods. (2) Fully Convolutional Networks. (3)
Structured Models. (4) Spatio-Temporal Models. The ﬁrst cat-
egory reviews the classical approaches before the emergence
of deep learning. The second category is about the main body
of work on semantic segmentation using deep learning. The
third category reviews the work that tries to utilize structure
in the problem of semantic segmentation. Thus following the
assumption that neighboring pixel labels should be coherent.
Then the fourth category exploits the temporal information
that is present in videos. Table I shows the detailed taxonomy
of semantic segmentation approaches.

A. Classical methods

Few years ago, semantic segmentation was seen as a chal-
lenging problem to achieve reasonable accuracy. The main ap-
proaches used in semantic segmentation was based on random
forest classiﬁer or conditional random ﬁelds. In [17] decision

TABLE I: Taxonomy of Semantic Segmentation Architectures

Classical Methods
Decision Forests [17][18]
CRFs [26][27]
Boosting [26][35]

Fully Convolutional Networks
Patchwise Training [19][20][21]
Pixelwise Training [28][29][30]
Multiscale [36][19][29][37][38][39]

Structured Models
Merged with CRFs [22][23][24]
Using RNNs [31]

Spatio-Temporal Models
Clockworks Net [25]
Using RNNs [32][33][34]

forests were used, where each tree was trained on random sub-
set of the training data. These methods implicitly cluster the
pixels while explicitly classifying the patch category. In [18] a
randomized decision forest was also used however instead of
using appearance based features, motion and structure features
were used. These features include surface orientation, height
above camera, and track density where faster moving objects
have sparser tracks than static objects. However, these tech-
niques rely on hand crafted features and perform pixel-wise
classiﬁcation independently without utilizing the structure in
the data.

On the other hand conditional random ﬁelds(CRF) were
proven to be a good approach for structured prediction prob-
lems. In [26][27] segmentation is formulated as CRF problem.
The energy function used in CRF formulation usually contains
unary potential and pairwise potential. The unary potential
gives a probability of whether the pixel belongs to a certain
class. While pairwise potential which is also referred to as
smoothness term ensures label consistency among connected
pixels. Boosting is another method that can be used to classify
pixels. It is based on combining multiple weak classiﬁers that
are based on some shape ﬁlter responses, as in [26][35]. How-
ever the progress in classical methods was always bounded by
the performance of the hand crafted features used. But that
was overcome with deep learning as will be discussed in the
following sections.

B. Fully Convolutional Networks(FCN)

The area of semantic segmentation using convolutional neu-
ral networks witnessed tremendous progress recently. There
were mainly three subcategories of the work that was devel-
oped. The ﬁrst [19][20][21] used patch-wise training to yield
the ﬁnal classiﬁcation. In[19] an image is fed into a Laplacian
pyramid, each scale is forwarded through a 3-stage network
to extract hierarchical features and patch-wise classiﬁcation is
used. The output is post processed with a graph based classical
segmentation method. In [21] a deep network was used for the
ﬁnal pixel-wise classiﬁcation to alleviate any post processing
needed. However, it still utilized patch-wise training.

The second subcategory [28][29][30] was focused on end-
to-end learning of pixel-wise classiﬁcation. It started with
the work in [28] that developed fully convolutional net-
works(FCN). The network learned heatmaps that was then
upsampled with-in the network using deconvolution to get
dense predictions. Unlike patch-wise training methods this
method uses the full image to infer dense predictions. In
[29] a deeper deconvolution network was developed, in which
stacked deconvolution and unpooling layers are used. In
Segnet [30] a similar approach was used where an encoder-
decoder architecture was deployed. The decoder network up-

Fig. 1: Semantic Segmentation of a typical automotive scene

sampled the feature maps by keeping the maxpooling indices
from the corresponding encoder layer. In Figure 1 an example
of the semantic segmentation output of segnet applied in an
automated driving setting is shown.

Finally, the work in [36][19][29][37][38][39] focused on
multiscale semantic segmentation. Initially in [19] the scale
issue was addressed by introducing multiple rescaled versions
of the image to the network. However with the emergence of
end-to-end learning, the skip-net architecture in [28] was used
to merge heatmaps from different resolutions. Since these ar-
chitectures rely on downsampling the image, loss of resolution
can hurt the ﬁnal prediction. The work in [39] proposed a u-
shaped architecture network where feature maps from different
initial layers are upsampled and concatenated for the next
layers. Another work in [36] introduced dilated convolutions,
which expanded the receptive ﬁeld without losing resolution
based on the dilation factor. Thus it provided a better solution
for handling multiple scales. Finally the recent work in [37]
provided a better way for handling scale. It uses attention
models that provides a mean to focus on the most relevant
features with-in the image. This attention model is able to
learn a weighting map that weighs feature maps pixel-by-pixel
from different scales.

C. Structured Models

The previous approaches in fully convolutional networks
do not utilize the structure in the data. Thus, recent work
was directed towards using the prior structure in the data.
Speciﬁcally in automotive scenes prior structure can be ex-
ploited for better segmentation. The commonly used model

to incorporate structure is conditional random ﬁeld (CRF)
[22][23][24]. In [22], CRF is used as a post processing step
after the segmentation network. In [23], CRF is also used
as post processing to a dilated convolution network to take
contextual
in [24]
the mean ﬁeld inference algorithm that is used within CRF
formulation was formulated as a recurrent network.

information into consideration. Finally,

Another way to model structure is by using a recurrent
neural network (RNN) to capture the long range dependencies
of various regions [31]. It introduced a different formulation
for solving the structured prediction problem. A Recurrent
layer is used to sweep the image horizontally and vertically,
which ensures the usage of contextual information for a better
segmentation.

D. Spatio-Temporal Models

All the discussed work was focused on still image segmen-
tation. Recently some approaches emerged for video seman-
tic segmentation that utilized temporal information [25][32]
[33][34]. In [25] introduced clockworks which are clock
signals that control
layers with
different rates. In [32] spatio temporal FCN is introduced
by using a layer grid of Long Short term memory models
(LSTMs). However conventional LSTMs do not utilize the
spatial coherence and would end up with more parameters to
learn.

the learning of different

In a recent work [33] convolutional gated recurrent net-
works was used to learn temporal information to leverage
the semantic segmentation of videos. The recurrent unit used
in this work was convolutional which enables it
to learn
both spatial and temporal information with less number of
parameters. Thus, it was easier to train and memory efﬁcient.
The work in [34] combined the power of both convolutional
gated architectures and spatial
transformers for leveraging
video semantic segmentation.

III. DEEP SEMANTIC SEGMENTATION IN AUTOMATED
DRIVING

A. Problem Structure

Semantic segmentation for automated driving has many a
priori constraints relative to a general version. In this section,
we discuss the various aspects which brings a simplifying
structure to the problem.

1) Scene Structure: Prior information could simplify model
complexity greatly. There are different types of prior infor-
mation that can be used. Spatial priors such as the fact that
lanes lie on a ground plane, or that road segmented is mostly
in the bottom half of the images. Geometric priors on the
shapes of objects, for examples lanes are thick lines that are
all converging into a vanishing point. Color priors such as the
color of trafﬁc lights or white lanes. Finally, Location priors,
for example the lane, road or buildings locations based on high
deﬁnition maps or aerial maps.

Fig. 2: Sample images from a surround-view camera network

2) Multi-camera Structure: Typically automotive systems
uses a multi-camera network. Current systems have at least
four cameras and it is increasing to more than ten cameras for
future generation systems. Figure 2 shows sample images of
the four cameras mounted on the car. It covers the entire 360◦
ﬁeld of view surrounding the car. The geometric structure of
the four cameras and the motion of the car induces a spatio-
temporal structure across the four images. For example, when
the car is turning left, the region imaged by the front camera
will be imaged by the right-mirror camera after a delay. There
is also similarity in the near-ﬁeld road surface in all the four
cameras as they belong to the same road surface.

B. Dense High Deﬁnition(HD) maps

High accuracy of Object detection is very difﬁcult to achieve
and HD maps is an important cue to improve it. There are two
types of HD maps: (1) Dense Semantic Point Cloud Maps and
(2) Landmark based Maps. The former is the dense version
where the entire scene is modeled by 3D point cloud with
semantics. Google and TomTom adopt this strategy. As this is
high end, it is expensive to cover the entire world and needs
large memory requirements. If there is good alignment, all the
static objects (road, lanes, curb, trafﬁc signs) are obtained from
the map already and dynamic objects are obtained through
background subtraction. TomTom RoadDNA[40] provides an
interface to align various sensors like Lidar, Cameras, and
others. Figure 3 illustrates this where the pre-mapped semantic
point cloud on the right is aligned with an image at run-
time with other dynamic objects. They have mapped majority
of European cities and their system provides an average
localization error within 10 cm assuming a coarse location
from GPS. Landmark based maps are based on semantic

Fig. 3: Example of High Deﬁnition (HD) map from TomTom
RoadDNA (Reproduced with permission of the copyright
owner)

Fig. 4: Illustration of dense optical ﬂow from which dense
depth for SFM can be obtained

objects instead of generic 3D point clouds. Thus it works
primarily for camera data. Mobileye and HERE follow this
strategy. This can be viewed as a simple form of the 3D point
cloud where a subset of objects is mapped using a 2D map.
In this method, object detection is leveraged to provide a HD
map and the accuracy is improved by aggregating over several
observations from different cars.

In case of a good localization, HD maps can be treated as
a dominant cue and semantic segmentation algorithm greatly
simpliﬁes to be a reﬁnement algorithm of priors obtained by
HD maps. In Figure 3, the semantic point cloud alignment
provides an accurate semantic segmentation for static objects.
Note that it does not cover distant objects like sky. This would
need a good conﬁdence measure for localization accuracy,
typically some kind of re-projection error is used. HD maps
can also be used for validation or post-processing the semantic
segmentation to eliminate false positives. For this, both land-
mark maps and semantic point cloud maps could be used.

C. Localization

Localization or depth estimation is very critical for auto-
mated driving. Having image semantics without localization
is not very useful.

1) Depth using Structure from Motion(SFM): The straight
forward approach to augment localization is to have a parallel
independent path for computing dense depth using a standard
method like structure from motion (SFM) and then augmenting
the depth to localize the objects. Dense depth is computed
to understand the spatial geometry of the scene. Accurate
Depth should help in semantic segmentation and could be
passed on as an extra channel. However, SFM estimates are
quite noisy and also the algorithm variations over time could
affect the training of the network. But in [18] some cues
from the noisy point-cloud was inferred to act as features
for segmentation. The cues proposed were: height above
the camera, distance to the camera path, projected surface
orientation, feature track density, and residual reconstruction
error. The work in[4] proposed a way of jointly estimating
the semantic segmentation and structure from motion in a
conditional random ﬁeld formulation.

2) LIDAR sensors: LIDAR sensors provide very accurate
depth estimation. However, they are not dense in the image
lattice. This leads to problems in learning a dense convo-
lutional neural networks features. But it can provide a way
to fuse semantic segmentation with depth information in a

probabilistic framework. In [41] the method fused a map
built using elastic fusion [42] and semantic segmentation from
convolutional neural networks termed as semantic fusion. The
class probabilities were maintained for each pixel in the map
and updated in an incrementally Bayesian method. The images
used in this work were from RGB-D cameras, but it provided
potential use of depth from LIDAR sensors. Generally, this is a
good research problem to be pursued as LIDAR is becoming a
standard sensor for next generation automated driving systems.
3) Joint In-the-Network Localization: There exists promis-
ing algorithms on using convolutional neural networks to
estimate structure and camera motion. A recent work in [43]
proposed depth and motion network for learning monocular
stereo. As far as the authors are aware, there is no work on
jointly estimating depth and semantics with in a network. This
can synergize and potentially aid in the estimation of each
other. It can also be trained simultaneously in an end-to-end
fashion. This problem can be of potential future direction for
further research.

IV. CHALLENGES

A. Computational Bound in Embedded Systems

On a high end automotive platform like Nvidia Tegra X1,
Enet [44] achieves around 4 fps and the proposed algorithm in
[45] achieves around 3 fps at a slightly higher accuracy. This
benchmark is for a 720P resolution and the current generation
cameras are around 2 Megapixel which will reduce the runtime
by another factor of 3X. This is clearly not acceptable for a
commercial solution to handle high speed objects for highway
driving. Reducing the resolution to VGA (640x480) brings
it close to 10 fps which is still not reasonable and reducing
resolution degrades accuracy and misses small objects which
might be critical. Additionally, for full surround view sensing
least 4 cameras need to be employed which adds in
at
another factor of 4X. However the industry is moving towards
custom hardware accelerators for CNNs which will enable the
possibility of doing multi-camera semantic segmentation at a
higher frame rate, Nvidia Xavier for instance supports 30 tera-
ops. There is also active research on efﬁcient network design
which will improve the performance.

B. Need of large annotated datasets

The real potential of deep learning was unveiled because
of the large dataset Imagenet[46]. The functional complexity
of semantic segmentation is much higher and it requires a

signiﬁcantly larger dataset relative to Imagenet. Annotation
for semantic segmentation is time consuming, typically it can
take around an hour for annotating a single image. It can be
speeded up by the availability of other cues like LIDAR or
exploiting temporal propagation and bootstrapping classiﬁer.
The popular semantic segmentation automotive datasets are
CamVid [18] and the more recent cityscapes [11]. The latter
has a size of 5000 annotation frames which is relatively small.
The algorithms trained on this dataset do not generalize well to
data tested on other cities and with unseen objects like tunnels.
To compensate for that, synthetic datasets like Synthia [9]
and Virtual KITTI [47] were created. There is some literature
which demonstrates that a combination produces reasonable
results in small datasets. But
limited for a
commercial deployment of an automated driving system.

they are still

Hence there is a recent effort

to build larger semantic
segmentation datasets like Mapillary Vistas dataset [48] and
Toronto City [49]. Mapillary dataset comprises of 25,000
images with 100 classes. It also offers large variability in terms
of weather condition, camera type and geographic coverage.
Toronto City is a massive semantic segmentation, mapping
and 3D reconstruction dataset covering 712 km2 of land, 8439
km of road and around 400,000 buildings. The annotation is
completely automated by leveraging Aerial Drone data, HD
maps, city maps and LIDARs. It is then manually veriﬁed and
reﬁned.

C. Learning Challenges

1) Class imbalance: There is severe class imbalance due
to the fact that important objects like pedestrians are under
represented unlike sky and building. This could also create
a bias to ignore small objects. This could be handled by
a weighting scheme in the error function. Another potential
solution is to use mask predictions on detected bounding boxes
of these small objects as in [50][51].

2) Unobserved Objects: Because the soft-max classiﬁer is
normalized to probability one, it doesn’t handle previous un-
seen objects. The classiﬁer matches it to one of the previously
trained classes. It is not possible to cover all possible objects
in training phase (eg: a rare animal like Kangaroo or a rare
vehicles like construction truck). This could be handled by
measuring uncertainty of the output classiﬁcation, similar to
Bayesian Segnet [52].

3) Complexity of Output: The output representation of
semantic segmentation is a set of complex contours and can
be very complex in very high textured scenes. The post pro-
cessing modules like mapping or maneuvering require a much
simpler representation of objects. This leads to a question of
learning to classify this simpler representation directly instead
of semantic segmentation.

4) Recovering individual objects: Pixel-wise Semantic seg-
mentation produces regions of same object and hence does not
provide individual objects in a segment. This might be needed
for tracking applications which tend to track objects like
pedestrians individually. One solution is to use post processing
classiﬁer to further sub-divide the regions but this could be

Fig. 5: Different application architectures - a) Classical archi-
tecture b) Shared encoder for multi-task learning c) End to
end learning d) Modular end to end learning

directly classiﬁed instead. However, a recent instance level
segmentation paradigm can segment different instances of the
same class as in [50] without the need for post processing.

5) Goal Orientation: Semantic segmentation is a generic
problem and at the moment there is no goal orientation towards
the end goal of automated driving. For example, there may
not be a need for accurate contour of objects or in detecting
irrelevant objects like sky for end driving goal. This could be
achieved by customizing the loss function (eg: weighting of
important objects) but a modular end to end system will be
scalable to automatically perform it.

6) Variable object complexity: A typical automotive scene
has large complexity variability with simple structures like
road or sky and complex structures like pedestrians. Pedestri-
ans have higher complexity due to large appearance variations
and articulations. Thus instead of using a small complexity
network across the image, a variable complexity network like
a cascaded CNN [53] will be more efﬁcient.

7) Corner Case Mining: As the object detection parts are
tightly coupled, it is difﬁcult to do hard negative mining and to
analyze corner cases. Even when the corner cases are known
conceptually, it can be hard to record video sequences for
the same. Synthetic sequences could be used to design such
scenarios.

V. ALTERNATIVE APPLICATION ARCHITECTURES

In this section different alternatives to pure semantic seg-
mentation are discussed. We present it with other possibilities
where it can be coupled.

Multi-task Learning: Since the same CNN features gen-
eralize well for various tasks beyond object detection like
ﬂow estimation, depth, correspondence, and tracking. Thus a
common CNN feature pipeline can be harmonized to be used
for various tasks. In [51], they propose a CNN encoder and
decoder for various tasks like scene classiﬁcation and vehicle
detection. A joint ﬂow estimation and semantic segmentation
in [54] was presented.

End to end learning: Human beings perform soft com-
puting and they do not perform an accurate object detection
when driving. They are goal oriented and an accurate object
detection is not necessary for safe driving. End to end has the
big advantage of not having to do any annotation as the driving
signal outputs are obtained directly from the Controller Area
Network (CAN) signals. Companies like Uber are betting this
away as they can collect lots of driving data through their taxi
ﬂeet.

The output is of fewer dimensions (brake, steering, acceler-
ation) and also temporally smooth. Hence for the same input,
mathematically this function should have a simpler functional
complexity relative to the complex output structure of semantic
segmentation. The work in [13][14] is in that direction.

Modular End to End learning: We use the term modular
end to end learning when there are auxiliary losses to ensure
safety and interpret ability. For instance, segmentation loss
can be added as an auxiliary loss for an end to end driving
CNN [55]. Using this auxiliary loss, the CNN loosely learns
to semantically segment, but it is also learns to have a better
representation for the intermediate features. It was shown in
that work that using auxiliary loss outperforms the vanilla end
to end learning. The work also uses recurrent gated unit after
the CNN to model temporal information.

VI. BENCHMARKING AND DESIGN EXPLORATION

A. Benchmarking

In this section a comparative evaluation of different seman-
tic segmentation architectures is presented. Although there
has been numerous work showing evaluation of different
architectures on CamVid [18]. However the previous work
was concerned only with the accuracy of the segmentation.
We present an evaluation of both shallower and state of the
art work in terms of mean intersection over union and speed.
The comparison is shown in Table II. Some networks that
has not been evaluated on the semantic segmentation for
automated driving are also presented. Thus covering a wider
range of potential efﬁcient architectures. This can guide further
decisions on what would best ﬁt in the automated driving
system. Although other architectures such as DeepLab[23]
show much better accuracy and are the state of the art in
segmentation, but are computationally inefﬁcient. Thus, these
architectures are not included in the comparison. Evaluation
metrics used are mean intersection over union(IoU) and per
class IoU. The running time for inference is computed in
seconds. The different architectures are evaluated on a GTX
TITAN GPU with images of resolution 480x360.

The architectures that are primarily evaluated are : (1)
Unet [39]. (2) Xception [56] which is a classiﬁcation network
that was not used in the segmentation problem before. (3)
Dilated FCN16s, an architecture that was designed to be
computationally and memory efﬁcient with reasonable accu-
racy. (4) FCN8s [28]. (5) Segnet Basic [30]. (6) Dilation8
[36]. (7)Enet [44], which is the most efﬁcient architecture for
semantic segmentation. A uniﬁed framework with the ﬁrst
ﬁve architectures is going to be publicly available to help

further research. While the results of the last two architectures
are reported from their work. Note that the mean class IoU
is computed over all classes even the ones not included in
the Table II. But, only the classes of interest were the ones
mentioned in Table II.

Although Dilation8 outperforms all previous architectures
in mean IoU it has the largest running time. This renders
it as an inefﬁcient solution to semantic segmentation for
automated driving. However, the dilated convolution idea can
be adapted in a shallower network. It uses dilated convolution
to increase receptive ﬁeld while maintaining the resolution of
the segmentation. Dilated FCN16s is an adapted version of
FCN-16s as originally introduced in [28]. Two pooling layers
are removed along with the convolutional layers in between
them and conv4/conv5 layers are reduced to two dilated
convolution layers with dilation factors of 2 and 4 respectively.
This leads to a decrease in the size of the network and its
running time for real-time applications. Another architecture
used for medical image segmentation was experimented on
turned to work second
CamVid which is called Unet. It
best on CamVid, but the running time is still not practical
for real deployment. Xception [56] is an architecture that
is mainly relying on depthwise separable convolution, that
separates the spatial convolution from depthwise convolution.
Although the network is designed for classiﬁcation, it has
been transformed to a fully convolutional network for the
purpose of segmentation. The network mean IoU was much
lower than other architectures, with a very small improvement
in the running time against Segnet. Although Segnet is not
considered as the state of the art in segmentation, but it turned
out to provide a good balance between mean IoU and speed.
In our experiments using batch normalization [57] turned to
be effective in training both Segnet and Unet. It turned to
converge faster, and it got better mean IoU of 47.3% in case
of Segnet. It is worth noting that in case of FCN8s, we were
able to reproduce similar results to the work in[32]. But this
is less by 2% than what was reported in [52].

B. Design Exploration

Deep learning is a rapidly progressing area of research.
Most of the research is disparate in which the various ideas
developed in different architectures are not formalized because
of the lack of theory. Hence it is hard to combine ideas from
two top networks from an application development perspec-
tive. Additionally the main area of active research in deep
learning is on image recognition problems (as in ImageNet
challenge) and the ideas trickle down to semantic segmenta-
tion. Additionally efﬁciency is typically not a design criteria
in academic research as majority of leading networks are very
large comprising of hundreds of layers and employ ensemble
of several networks. The work in [58] compared various
networks’ accuracy normalized to the amount of computation
and shows ResNet and GoogleNet are efﬁcient architectures.
This suffers from the same problem of treating the different
networks independently and hence does not formalize and
combine ideas.

TABLE II: Semantic Segmentation Results on CamVid. Running time in seconds, mean IoU, and perclass IoU is shown. Some
of the 11 classes are shown due to limited space.

Run-time (s) Mean Class IoU

FCN16s Dilated
Xception[56]
Segnet-Basic[30]
FCN8s[28]
Unet[39]+BN[57]
Dilation8[36]
Enet[44]

0.07
0.02
0.03
0.33
0.56
0.6474
0.047

46.7
42.8
46.4
49.7
53.9
65.3
51.3

Sky
86.3
81.9
87.0
87.6
90.2
89.9
95.1

Building
69.1
68.9
68.7
75.5
72.6
82.6
74.7

Road
87.8
86.6
86.2
87.2
89.1
92.2
95.1

Per-Class IoU
Sidewalk
63.7
62.9
60.5
67.2
67.2
75.3
86.7

Vegetation
60.8
61.6
52.0
70.6
67.7
76.2
77.8

Car
63.6
60.8
58.5
76.4
74.7
84.0
82.4

Pedestrian
21.4
19.8
25.3
27.7
34.1
56.3
67.2

Some good design choices that are accepted with-in the

it

increases

community are presented:
(1) The use of 3x3 convolutions similar to VGG architectures
[59]
turned to be useful experimentally. Especially in
scenarios where you care about the resolution of your input
such as segmentation. Since larger ﬁlter size will cause
reduction in the image resolution.
(2) The dilated convolution is considered to be the best
the receptive
practice in segmentation as
ﬁeld without downgrading resolution. Although in our
comparative evaluation Dilation8 was not suitable for real-
time applications. However that can be due to their use of a
deep network to build upon.
(3) For real-time performance shallow networks can be useful
for segmentation with a compromise in the accuracy.
(4) Batch normalization [57] turned to be a very useful trick
for better convergence during training in our experiments.
This is due to the reduction of change in distribution of
network activations. They termed that as reduction of internal
covariate shift. The covariate shift occurs due to change of
networks parameters during training.
(5) The resolution of the input
image largely affects the
segmentation, although it seems as a tiny detail. We found that
higher input image resolution can help with segmenting small
objects like pedestrian. Also, using random crops to help
reduce the class imbalance can further help the segmentation.
This can be seen in Dilation8 results, they use random crops
from the image that is then upsampled as input.
(6) Skip connections
is widely used in segmentation
architectures such as FCN8s [28] and U-net [39]. However,
the extensive use of these skip connections can lead to
overhead in memory bandwidth.

VII. CONCLUSION

In this paper, we have conducted a detailed review of
deep semantic segmentation from the perspective of automated
driving. First, we provide a generic survey of various archi-
tectures including fully convolutional network architectures
and different variants that work patch-wise, pixel-wise, or
that support multi-scale aggregation. Then we discuss the
use of structured models and spatio-temporal features in the
segmentation problem is discussed. Second, we reviewed
various semantic segmentation datasets that can be used for
automated driving setting and presented a set of challenges

to orient both the research and industrial community towards
the current bottlenecks. Finally, a comparative evaluation is
conducted on different state of the art network architectures
on an urban scene dataset including both runtime and accuracy.
The comparison included architectures that have not been tried
for automated driving scenes. Due to page limitations, the
contents of this survey are kept high level. The authors are
working on a more detailed survey which will include more
detailed analysis and discussion.

REFERENCES

[1] A. Valada, G. L. Oliveira, T. Brox, and W. Burgard, “Deep multispectral
semantic scene understanding of forested environments using multi-
modal fusion,” in The 2016 International Symposium on Experimental
Robotics (ISER 2016), 2016.

[2] T. M. Bonanni, A. Pennisi, D. Bloisi, L. Iocchi, and D. Nardi, “Human-
robot collaboration for semantic labeling of the environment,” in Pro-
ceedings of the 3rd Workshop on Semantic Perception, Mapping and
Exploration, 2013.

[3] V. Vineet, O. Miksik, M. Lidegaard, M. Nießner, S. Golodetz, V. A.
Prisacariu, O. K¨ahler, D. W. Murray, S. Izadi, P. Perez, and P. H. S.
Torr, “Incremental dense semantic stereo fusion for large-scale semantic
scene reconstruction,” in IEEE International Conference on Robotics
and Automation (ICRA), 2015.

[4] A. Kundu, Y. Li, F. Dellaert, F. Li, and J. M. Rehg, “Joint semantic
segmentation and 3d reconstruction from monocular video,” in European
Conference on Computer Vision. Springer, 2014, pp. 703–718.
¨O. C¸ ic¸ek, A. Abdulkadir, S. S. Lienkamp, T. Brox, and O. Ronneberger,
“3d u-net: learning dense volumetric segmentation from sparse anno-
tation,” in International Conference on Medical Image Computing and
Computer-Assisted Intervention. Springer, 2016, pp. 424–432.

[5]

[6] W. Zhu and X. Xie, “Adversarial deep structural networks for mammo-
graphic mass segmentation,” arXiv preprint arXiv:1612.05970, 2016.
[7] O. Miksik, V. Vineet, M. Lidegaard, R. Prasaath, M. Nießner,
S. Golodetz, S. L. Hicks, P. P´erez, S. Izadi, and P. H. Torr, “The
semantic paintbrush: Interactive 3d mapping and recognition in large
outdoor spaces,” in Proceedings of the 33rd Annual ACM Conference
on Human Factors in Computing Systems. ACM, 2015, pp. 3317–3326.
[8] H. Zhang, A. Geiger, and R. Urtasun, “Understanding high-level se-
the IEEE

mantics by modeling trafﬁc patterns,” in Proceedings of
International Conference on Computer Vision, 2013, pp. 3056–3063.
[9] G. Ros, L. Sellart, J. Materzynska, D. Vazquez, and A. M. Lopez, “The
synthia dataset: A large collection of synthetic images for semantic
segmentation of urban scenes,” in Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, 2016, pp. 3234–3243.

[10] G. J. Brostow, J. Fauqueur, and R. Cipolla, “Semantic object classes
in video: A high-deﬁnition ground truth database,” Pattern Recognition
Letters, vol. 30, no. 2, pp. 88–97, 2009.

[11] M. Cordts, M. Omran, S. Ramos, T. Rehfeld, M. Enzweiler, R. Benen-
son, U. Franke, S. Roth, and B. Schiele, “The cityscapes dataset for
semantic urban scene understanding,” arXiv preprint arXiv:1604.01685,
2016.

[12] D. A. Pomerleau, “Alvinn: An autonomous land vehicle in a neural

network,” DTIC Document, Tech. Rep., 1989.

[13] M. Bojarski, D. Del Testa, D. Dworakowski, B. Firner, B. Flepp,
P. Goyal, L. D. Jackel, M. Monfort, U. Muller, J. Zhang et al., “End
to end learning for self-driving cars,” arXiv preprint arXiv:1604.07316,
2016.

[14] U. Muller, J. Ben, E. Cosatto, B. Flepp, and Y. L. Cun, “Off-road
obstacle avoidance through end-to-end learning,” in Advances in neural
information processing systems, 2005, pp. 739–746.

[15] C. Chen, A. Seff, A. Kornhauser, and J. Xiao, “Deepdriving: Learning
affordance for direct perception in autonomous driving,” in Proceedings
of the IEEE International Conference on Computer Vision, 2015, pp.
2722–2730.

[16] H. Zhu, F. Meng, J. Cai, and S. Lu, “Beyond pixels: A comprehensive
survey from bottom-up to semantic image segmentation and cosegmen-
tation,” Journal of Visual Communication and Image Representation,
vol. 34, pp. 12–27, 2016.

[17] J. Shotton, M. Johnson, and R. Cipolla, “Semantic texton forests for
image categorization and segmentation,” in Computer vision and pattern
recognition, 2008. CVPR 2008. IEEE Conference on.
IEEE, 2008, pp.
1–8.

[18] G. J. Brostow, J. Shotton, J. Fauqueur, and R. Cipolla, “Segmentation
and recognition using structure from motion point clouds,” in European
conference on computer vision. Springer, 2008, pp. 44–57.

[19] C. Farabet, C. Couprie, L. Najman, and Y. LeCun, “Learning hierarchical
features for scene labeling,” IEEE transactions on pattern analysis and
machine intelligence, vol. 35, no. 8, pp. 1915–1929, 2013.

[20] C. Farabet, N. EDU, C. Couprie, L. Najman, and Y. LeCun, “Scene
parsing with multiscale feature learning, purity trees, and optimal
covers.”

[21] D. Grangier, L. Bottou, and R. Collobert, “Deep convolutional networks
for scene parsing,” in ICML 2009 Deep Learning Workshop, vol. 3.
Citeseer, 2009.

[22] G. Lin, C. Shen, I. Reid et al., “Efﬁcient piecewise training of
deep structured models for semantic segmentation,” arXiv preprint
arXiv:1504.01013, 2015.

[23] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and A. L.
Yuille, “Deeplab: Semantic image segmentation with deep convolutional
nets, atrous convolution, and fully connected crfs,” arXiv preprint
arXiv:1606.00915, 2016.

[24] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet, Z. Su, D. Du,
C. Huang, and P. H. Torr, “Conditional random ﬁelds as recurrent neural
networks,” in Proceedings of the IEEE International Conference on
Computer Vision, 2015, pp. 1529–1537.

[25] E. Shelhamer, K. Rakelly, J. Hoffman, and T. Darrell, “Clockwork
convnets for video semantic segmentation,” CoRR, vol. abs/1608.03609,
2016. [Online]. Available: http://arxiv.org/abs/1608.03609

[26] P. Sturgess, K. Alahari, L. Ladicky, and P. H. Torr, “Combining appear-
ance and structure from motion features for road scene understanding,”
in BMVC 2012-23rd British Machine Vision Conference. BMVA, 2009.
[27] C. Russell, P. Kohli, P. H. Torr et al., “Associative hierarchical crfs for
object class image segmentation,” in Computer Vision, 2009 IEEE 12th
International Conference on.

IEEE, 2009, pp. 739–746.

[28] J. Long, E. Shelhamer, and T. Darrell, “Fully convolutional networks
for semantic segmentation,” in Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, 2015, pp. 3431–3440.
[29] H. Noh, S. Hong, and B. Han, “Learning deconvolution network
for semantic segmentation,” in Proceedings of the IEEE International
Conference on Computer Vision, 2015, pp. 1520–1528.

[30] V. Badrinarayanan, A. Kendall, and R. Cipolla, “Segnet: A deep con-
volutional encoder-decoder architecture for image segmentation,” arXiv
preprint arXiv:1511.00561, 2015.

[31] F. Visin, M. Ciccone, A. Romero, K. Kastner, K. Cho, Y. Bengio,
M. Matteucci, and A. Courville, “Reseg: A recurrent neural network-
based model for semantic segmentation,” in Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition Workshops,
2016, pp. 41–48.

[32] M. Fayyaz, M. H. Saffar, M. Sabokrou, M. Fathy, and R. Klette,
“STFCN: spatio-temporal FCN for semantic video segmentation,”
CoRR, vol. abs/1608.05971, 2016. [Online]. Available: http://arxiv.org/
abs/1608.05971

[33] M. Siam, S. Valipour, M. Jagersand, and N. Ray, “Convolutional
gated recurrent networks for video segmentation,” arXiv preprint
arXiv:1611.05435, 2016.

[34] D. Nilsson and C. Sminchisescu, “Semantic video segmentation by gated

recurrent ﬂow propagation,” arXiv preprint arXiv:1612.08871, 2016.

[35] J. Shotton, J. Winn, C. Rother, and A. Criminisi, “Textonboost: Joint
appearance, shape and context modeling for multi-class object recog-
nition and segmentation,” in European conference on computer vision.
Springer, 2006, pp. 1–15.

[36] F. Yu and V. Koltun, “Multi-scale context aggregation by dilated

convolutions,” arXiv preprint arXiv:1511.07122, 2015.

[37] L.-C. Chen, Y. Yang, J. Wang, W. Xu, and A. L. Yuille, “Attention
to scale: Scale-aware semantic image segmentation,” arXiv preprint
arXiv:1511.03339, 2015.

[38] G.-J. Qi, “Hierarchically gated deep networks for semantic segmen-
tation,” in The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), June 2016.

[39] O. Ronneberger, P. Fischer, and T. Brox, “U-net: Convolutional net-
works for biomedical image segmentation,” in International Conference
on Medical Image Computing and Computer-Assisted Intervention.
Springer, 2015, pp. 234–241.

http://automotive.tomtom.com/products-

[40] “Tomtom

roaddna,,”
services/hd-map-roaddna/.

[41] J. McCormac, A. Handa, A. Davison, and S. Leutenegger, “Semanticfu-
sion: Dense 3d semantic mapping with convolutional neural networks,”
arXiv preprint arXiv:1609.05130, 2016.

[42] T. Whelan, S. Leutenegger, R. F. Salas-Moreno, B. Glocker, and A. J.
Davison, “Elasticfusion: Dense slam without a pose graph.” in Robotics:
science and systems, vol. 11, 2015.

[43] B. Ummenhofer, H. Zhou, J. Uhrig, N. Mayer, E. Ilg, A. Dosovitskiy,
and T. Brox, “Demon: Depth and motion network for learning monocular
stereo,” arXiv preprint arXiv:1612.02401, 2016.

[44] A. Paszke, A. Chaurasia, S. Kim, and E. Culurciello, “Enet: A deep
neural network architecture for real-time semantic segmentation,” arXiv
preprint arXiv:1606.02147, 2016.

[45] M. Treml, J. Arjona-Medina, T. Unterthiner, R. Durgesh, F. Friedmann,
P. Schuberth, A. Mayr, M. Heusel, M. Hofmarcher, M. Widrich et al.,
“Speeding up semantic segmentation for autonomous driving.”

[46] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei, “ImageNet:
A Large-Scale Hierarchical Image Database,” in CVPR09, 2009.
[47] A. Gaidon, Q. Wang, Y. Cabon, and E. Vig, “Virtual worlds as proxy for
multi-object tracking analysis,” in Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, 2016, pp. 4340–4349.

[48] “Mapillary Vistas dataset,” http://blog.mapillary.com/product/2017/05/

03/mapillary-vistas-dataset.html, 2017.

[49] S. Wang, M. Bai, G. Mattyus, H. Chu, W. Luo, B. Yang, J. Liang,
J. Cheverie, S. Fidler, and R. Urtasun, “Torontocity: Seeing the world
with a million eyes,” arXiv preprint arXiv:1612.00423, 2016.

[50] J. Dai, K. He, Y. Li, S. Ren, and J. Sun, “Instance-sensitive fully
convolutional networks,” CoRR, vol. abs/1603.08678, 2016. [Online].
Available: http://arxiv.org/abs/1603.08678

[51] M. Teichmann, M. Weber, M. Zoellner, R. Cipolla, and R. Urtasun,
“Multinet: Real-time joint semantic reasoning for autonomous driving,”
arXiv preprint arXiv:1612.07695, 2016.

[52] A. Kendall, V. Badrinarayanan, and R. Cipolla, “Bayesian segnet:
Model uncertainty in deep convolutional encoder-decoder architectures
for scene understanding,” CoRR, vol. abs/1511.02680, 2015. [Online].
Available: http://arxiv.org/abs/1511.02680

[53] X. Li, Z. Liu, P. Luo, C. C. Loy, and X. Tang, “Not all pixels are equal:
Difﬁculty-aware semantic segmentation via deep layer cascade,” arXiv
preprint arXiv:1704.01344, 2017.

[54] J. Hur and S. Roth, “Joint optical ﬂow and temporally consistent
semantic segmentation,” CoRR, vol. abs/1607.07716, 2016. [Online].
Available: http://arxiv.org/abs/1607.07716

[55] H. Xu, Y. Gao, F. Yu, and T. Darrell, “End-to-end learning of
from large-scale video datasets,” arXiv preprint

driving models
arXiv:1612.01079, 2016.

[56] F. Chollet, “Xception: Deep learning with depthwise separable convo-

lutions,” arXiv preprint arXiv:1610.02357, 2016.

[57] S. Ioffe and C. Szegedy, “Batch normalization: Accelerating deep
network training by reducing internal covariate shift,” arXiv preprint
arXiv:1502.03167, 2015.

[58] A. Canziani, A. Paszke, and E. Culurciello, “An analysis of deep
neural network models for practical applications,” arXiv preprint
arXiv:1605.07678, 2016.

[59] K. Simonyan and A. Zisserman, “Very deep convolutional networks for
large-scale image recognition,” arXiv preprint arXiv:1409.1556, 2014.

