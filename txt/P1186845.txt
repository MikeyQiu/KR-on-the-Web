Reinforced Dynamic Reasoning for Conversational Question Generation

Boyuan Pan1∗, Hao Li1, Ziyu Yao2, Deng Cai1,3, Huan Sun2
1State Key Lab of CAD&CG, Zhejiang University
2The Ohio State University
3Alibaba-Zhejiang University Joint Institute of Frontier Technologies
{panby, haolics, dcai}@zju.edu.cn
{yao.470, sun.397}@osu.edu

9
1
0
2
 
l
u
J
 
9
2
 
 
]
L
C
.
s
c
[
 
 
1
v
7
6
6
2
1
.
7
0
9
1
:
v
i
X
r
a

Abstract

This paper investigates a new task named
Conversational Question Generation (CQG)
which is to generate a question based on a pas-
sage and a conversation history (i.e., previous
turns of question-answer pairs). CQG is a cru-
cial task for developing intelligent agents that
can drive question-answering style conversa-
tions or test user understanding of a given pas-
sage. Towards that end, we propose a new ap-
proach named Reinforced Dynamic Reason-
ing (ReDR) network, which is based on the
general encoder-decoder framework but incor-
porates a reasoning procedure in a dynamic
manner to better understand what has been
asked and what to ask next about the pas-
sage. To encourage producing meaningful
questions, we leverage a popular question an-
swering (QA) model to provide feedback and
ﬁne-tune the question generator using a rein-
forcement learning mechanism. Empirical re-
sults on the recently released CoQA dataset
demonstrate the effectiveness of our method in
comparison with various baselines and model
variants. Moreover, to show the applicability
of our method, we also apply it to create multi-
turn question-answering conversations for pas-
sages in SQuAD.

1

Introduction

In this work, we study a novel task of conversa-
tional question generation (CQG) which is given
a passage and a conversation history (i.e., previ-
ous turns of question-answer pairs), to generate
the next question.

CQG is an important

task in its own right
for measuring the ability of machines to lead
a question-answering style conversation.
It can
serve as an essential component of intelligent so-
cial bots or tutoring systems, asking meaningful

∗Work done while visiting the Ohio State University.

Figure 1: An example from the CoQA dataset. Each
turn contains a question (Q) and an answer (A). The
dataset also provides a rationale (R) (i.e., a text span
from the passage) to support each answer.

and coherent questions to engage users or test stu-
dent understanding about a certain topic. On the
other hand, as shown in Figure 1, large-scale high-
quality conversational question answering (CQA)
datasets such as CoQA (Reddy et al., 2018) and
QuAC (Choi et al., 2018) can help train models to
answer sequential questions. However, manually
creating such datasets is quite costly, e.g., CoQA
spent 3.6 USD per passage on crowdsourcing for
conversation collection, and automatic CQG can
potentially help reduce the cost, especially when
there are a large set of passages available.

In recent years, automatic question generation
(QG), which aims to generate natural questions
based on a certain type of data sources including
structured knowledge bases (Serban et al., 2016b;
Guo et al., 2018) and unstructured texts (Rus et al.,

2010; Heilman and Smith, 2010; Du et al., 2017;
Du and Cardie, 2018), has been widely studied.
However, previous works mainly focus on gener-
ating standalone and independent questions based
on a given passage. To the best of our knowledge,
we are the ﬁrst to explore CQG, i.e., generating the
next question based on a passage and a conversa-
tion history.

Comparing with previous QG tasks, CQG needs
to take into account not only the given passage,
but also the conversation history, and is potentially
more challenging as it requires a deep understand-
ing of what has been asked so far and what infor-
mation should be asked for the next round, in order
to make a coherent conversation.

In this paper, we present a novel framework
named Reinforced Dynamic Reasoning (ReDR)
network. Inspired by the recent success of reading
comprehension models (Xiong et al., 2017; Seo
et al., 2017), ReDR adapts their reasoning proce-
dure (which encodes the knowledge of the passage
and the conversation history based on a coatten-
tion mechanism) and moreover dynamically up-
dates the encoding representation based on a soft
decision maker to generate a coherent question. In
addition, to encourage ReDR to generate mean-
ingful and interesting questions, ideally, one may
employ humans to provide feedback, but as widely
acknowledged, involving humans in the loop for
training models can be very costly. Therefore,
in this paper, we leverage a popular and effec-
tive reading comprehension (or QA) model (Chen
et al., 2017) to predict the answer to a generated
question and use its answer quality (which can be
seen as a proxy for real human feedback) as re-
wards to ﬁne-tune our model based on a reinforce-
ment learning mechanism (Williams, 1992).

Our contributions are summarized as follows:

• We introduce a new task of Conversational
Question Generation (CQG), which is cru-
cial for developing intelligent agents to drive
question-answering style conversations and
can potentially provide valuable datasets for
future relevant research.

• We propose a new and effective framework
for CQG, which is equipped with a dynamic
reasoning component to generate a conversa-
tional question and is further ﬁne-tuned via a
reinforcement learning mechanism.

• We show the effectiveness of our method us-

ing the recent CoQA dataset. Moreover, we
show its wide applicability by using it to cre-
ate multi-turn QA conversations for passages
in SQuAD (Rajpurkar et al., 2016).

2 Task Deﬁnition

Formally, we deﬁne the task of Conversational
Question Generation (CQG) as: Given a pas-
sage X and the previous turns of question-
answer pairs {(q1, a1), (q2, a2), ..., (qk−1, ak−1)}
about X, CQG aims to generate the next question
qk that is related to the given passage and coherent
with the previous questions and answers, i.e.,

qk = arg max

P (qk|X, q<k, a<k)

(1)

qk

where P (qk|X, q<k, a<k) is a conditional proba-
bility of generating the question qk.

3 Methodology

We show our proposed framework named Rein-
forced Dynamic Reasoning (ReDR) network in
Figure 2. Since a full passage is usually too long
and makes it hard to focus on the most relevant
information for generating the next question, our
method ﬁrst selects a text span from the passage
as the rationale at each conversation turn, and then
dynamically models the reasoning procedure for
encoding the conversation history and the selected
rationale, before ﬁnally decoding the next ques-
tion.

3.1 Rationale Selection

We simply set each sentence in the passage as the
corresponding rationale for each turn of the con-
versation. When experimenting with CoQA, we
use the rationale span provided in the dataset. Be-
sides for simplicity and efﬁciency, another reason
that we adopt this rule-based method is that pre-
vious research demonstrated that the transition of
the dialog attention is smooth (Reddy et al., 2018;
Choi et al., 2018), meaning that earlier questions
in a conversation are usually answerable by the
preceding part of the passage while later questions
tend to focus on the ending part of the passage.
The selected rationale is then leveraged by subse-
quent modules for question generation.

3.2 Encoding & Reasoning

At each turn k, we denote the conversation his-
i.e., c =
tory as a sequence of m tokens,

Figure 2: Overview of our Reinforced Dynamic Reasoning (ReDR) network. The reasoning mechanism iteratively
reads the conversation history and at each iteration, its output is dynamically combined with the previous encoding
representation through a soft decision maker (pd) as the new encoding representation, which is fed into the next
iteration. The model is ﬁnally ﬁne-tuned by the reward deﬁned by the quality of the answer predicted from a QA
model.

{c1, c2, ..., cm}, which concatenates the previous
questions and answers <q1, a1, ..., qk−1, ak−1>,
and represent the rationale as a sequence of n to-
kens, i.e., r = {r1, r2, ..., rn}. As mentioned
earlier, different from previous question genera-
tion tasks, we have two knowledge sources (i.e.,
the conversation history and the rationale) as the
inputs. A good encoding of them is crucial for
task performance and might involve a reasoning
procedure across previous question-answer pairs
and the selected rationale for determining the next
question. We feed them respectively into a bi-
directional LSTM and obtain their contextual rep-
resentations C ∈ Rd×m and R ∈ Rd×n. Inspired
by the coattention reasoning mechanism in previ-
ous reading comprehension works (Xiong et al.,
2017; Seo et al., 2017; Pan et al., 2017), we com-
pute an alignment matrix of C and R to link and
fuse the information ﬂow: S = R(cid:62)C ∈ Rn×m.
We normalize this alignment matrix column-wise
(i.e., softmax(S)) to obtain the relevance degree of
each token in the conversation history to the whole
rationale. The new representation of the conversa-
tion history w.r.t. the rationale is obtained via:

H = R · softmax(S) ∈ Rd×m

(2)

Similarly, we compute the attention over the
conversation history for each word in the ratio-
nale via softmax(S(cid:62)) and obtain the context-
dependent
the rationale by
C · softmax(S(cid:62)).
In addition, as in (Xiong

representation of

et al., 2017), we also consider the above new
representation of the conversation history and
map it to the space of rationale encodings via
H · softmax(S(cid:62)), and ﬁnally obtain the co-
dependent representation of the rationale and the
conversation history:

G = [C; H] · softmax(S(cid:62)) ∈ R2d×n

(3)

where [; ] means concatenation across row dimen-
sion. To deeply capture the interaction between
the rationale and the conversation history, we feed
the co-dependent representation G combined with
the rationale R into an integration model instanti-
ated by a bi-directional LSTM:

i = BiLSTM(u0
u0

i−1, u0

i+1, [Gi; Ri]) ∈ Rd (4)

We deﬁne the reasoning process in our paper
as Eqn. (2-4), and now obtain a matrix U0 =
[u0
n] as the encoding representation af-
ter one-layer reasoning procedure, which can be
fed into the decoder subsequently.

2, ..., u0

1, u0

3.3 Dynamic Reasoning

Oftentimes the conversation history is very infor-
mative and complicated, and one single layer of
reasoning may be insufﬁcient to comprehend the
subtle relationship among the rationale, the con-
versation history, and the to-be-generated ques-
tion. Therefore, we propose a dynamic reasoning
procedure to iteratively update the encoding repre-
sentation. We regard U0 as a new representation

of the rationale and input it to the next layer of
reasoning together with C:

copying word yt from r (only if r contains yt),
and λ is the weight to balance the two:

(cid:101)U1 = Freason(U0, C)

(5)

where Freason is the reasoning procedure (Eqn. 2-
4), and (cid:101)U1 is the hidden states of the BiLSTM in-
tegration model at the next reasoning layer. To ef-
fectively learn what information in (cid:101)U1 and U0 is
relevant to keep, we use a soft decision maker to
determine their weights:

U1 = pd (cid:12) U0 + (e1 − pd) (cid:12) (cid:101)U1
u U0 + w(cid:62)
pd = σ(w(cid:62)

g G + w(cid:62)

r R + b)

(6)

where e1 is an all-ones vector, and wu, wg, wr, b
are trainable parameters. pd ∈ Rn is the decision
maker, used as a soft switch to choose between dif-
ferent levels of reasoning. U1 is the representation
to be used for the next layer of reasoning. This it-
erative procedure halts when a maximum number
of reasoning layers N is reached (N ≥ 1). The
ﬁnal representation UN is fed into the decoder.

3.4 Decoding

The decoder generates a word by sampling from
the probability Pgen(yt|y<t, c, r) which can be
computed via:

Pgen(yt|y<t, c, r) = MLP(ot, vt)
ot = LSTM(ot−1, Emb(yt−1), vt−1)

(7)

where MLP stands for a standard multilayer per-
ceptron network, yt is the t-th word in the gen-
erated question, ot is the hidden state of the de-
coder at time step t, and Emb(·) indicates the
word embedding. vt is an attentive read of the en-
coding representation: vt = (cid:80)n
i , where
the weight αt,i ∈ (0, 1) is scored by another
MLP(ot, uN

i=1 αt,iuN

i ) network.

Observing that a question may share common
words with the rationale that it is based on and in-
spired by the widely adopted copy mechanism (Gu
et al., 2016; See et al., 2017), we also apply a
pointer network for the generator to copy words
from the rationale. Now the probability of gener-
ating target word yt becomes:

P (yt|y<t, c, r) = λPgen(yt) + (1 − λ)Ppt(yt)

(8)
where Pgen(yt)=Pgen(yt|y<t, c, r) is deﬁned ear-
lier, Ppt(yt) = (cid:80)
αt,i is the probability of

i:ri=yt

λ = σ(w(cid:62)

o ot + w(cid:62)

v vt + w(cid:62)

v , w(cid:62)

o , w(cid:62)

y Emb(yt−1) + bpt)
(9)
where w(cid:62)
y and bpt are to be learnt. To
optimize all parameters in ReDR, we adopt the
maximum likelihood estimation (MLE) approach,
i.e., maximizing the summed log likelihood of
words in a target question.

3.5 Reinforcement Learning for Fine-tuning

As shown by recent datasets like CoQA and
QuAC, human-created questions tend to be mean-
ingful and interesting. For example, in Figure 1,
given the second rationale R2 “She is a new
student at her school”, humans tend not to ask
“Where is she?”, and similarly given R3, they usu-
ally do not create the question “What happened?”.
Although both are legitimate questions, they tend
to be less interesting and meaningful compared
with the human-created ones shown in Figure 1.
The interestingness or meaningfulness of a ques-
tion is subjective and hard to deﬁne, automatically
measuring which is a difﬁcult problem itself. Ide-
ally, one can involve humans in the loop to judge
the generated question and provide feedback, but
it can be very costly, if not impossible.

Driven by such observations, we use the RE-
INFORCE (Williams, 1992) algorithm and adopt
one of the state-of-the-art reading comprehension
models DrQA (Chen et al., 2017) as a substitute
for humans to provide feedback to the question
generator. DrQA answers a question based on the
given passage and has achieved a competitive per-
formance on CoQA (Reddy et al., 2018). Dur-
ing training, we apply DrQA to answer a gener-
ated question, and compare its answer with the
human-provided answer (which is associated with
the same rationale for generating the question)1.
If the answers match well with each other, we re-
gard our generator produces a meaningful ques-
tion since it asks about the same thing as humans
do, and will assign high rewards to such questions.
Formally, we minimize the negative expected

reward for a generated question:

JRL = −Eq∼π(q|r,c)[R(a, a∗)]

(10)

where π(q|r, c) = (cid:81)
t P (yt|y<t, c, r) is the action
policy deﬁned in Eqn. (8) for producing question

1We use the CoQA dataset for training and such informa-

tion is available as shown in Figure 1.

Dataset

Passages

Training
Dev

7199
500

QA
Pairs

10.8k
8.0k

Turns per
Passage

15.0
15.9

Table 1: Statistics of the CoQA dataset.

q given rationale r and conversation history c, and
R(a, a∗) is the reward function deﬁned by the F1
score2 between the DrQA predicted answer a and
the human-provided answer a∗. For computational
efﬁciency concerns, during training, we make sure
that the ground-truth question is in the sampling
pool and use beam search to generate 5 more ques-
tions.

Note that besides providing rewards for ﬁne-
tuning our generator, DrQA model also serves an-
other purpose: When applying our framework to
any passage, we can use DrQA to produce an an-
swer to the currently generated question so that
the conversation history can be updated for the
next-turn of question generation. In addition, our
framework is not limited to DrQA and other more
advanced QA models can apply as well.

4 Experiments

4.1 Dataset
We use the CoQA dataset3 (Reddy et al., 2018) to
experiment with our ReDR and baseline methods.
CoQA contains text passages from diverse do-
mains, conversational questions and answers de-
veloped for each passage, as well as rationales
(i.e., text spans extracted from given passages) to
support answers. The dataset consists of 108k
questions in the training set and 8k questions in the
development (dev) set with a large hidden test set
for competition purpose, and our results are shown
on the dev set.

4.2 Baselines

As discussed earlier, CQG has been under-
investigated so far, and there are few existing base-
lines for our comparison. Because of their high
relevance with our task as well as their superior
performance demonstrated by previous works, we
choose to compare with the following models:

Seq2Seq
(Sutskever et al., 2014) is a basic
encoder-decoder sequence learning system, which
has been widely used for machine translation (Lu-
ong et al., 2015) and dialogue generation (Wen
et al., 2017). We concatenate the rationale and the
conversation history as the input sequence in our
setting.

NQG (Du et al., 2017) is a strong attention-
based neural network approach for question gen-
eration task. The input is the same as the above
Seq2Seq model.

4.3

Implementation Details

et

are

initialized

embeddings

(Pennington

by
Our word
glove.840B.300d
al.,
2014). We set the LSTM hidden unit size to 500
and set the number of layers of LSTMs to 2 in
both the encoder and the decoder. Optimization
is performed using stochastic gradient descent
(SGD), with an initial learning rate of 1.0. The
learning rate starts decaying at the step 15000
with a decay rate of 0.95 for every 5000 steps.
The mini-batch size for the update is set at 64. We
set the dropout (Srivastava et al., 2014) ratio as
0.3 and the beam size as 5. The maximum number
of iterations for the dynamic reasoning is set to be
3. Since the CoQA contains abstractive answers,
we apply DrQA as our question answering model
and follow Yatskar (2018) to separately train a
binary classiﬁer to produce “yes” or “no” for
yes/no questions4. Code is available at https:
//github.com/ZJULearning/ReDR.

4.4 Automatic Evaluation

Metrics We follow previous question gener-
ation work (Xu et al., 2017; Du et al., 2017) to
use BLEU5 (Papineni et al., 2002) and ROUGE-L
(Lin, 2004) to measure the relevance between the
generated question and the ground-truth one. To
evaluate the diversity of the generated questions,
we follow (Li et al., 2016a) to calculate Dist-n
(n=1,2), which is the proportion of unique n-grams
over the total number of n-grams in the generated
questions for all passages, and (Zhang et al., 2018)
to use the Ent-n (n=4) metric, which reﬂects how
evenly the n-gram distribution is over all generated
questions. For all the metrics, the larger they are,

2F1 score is the common evaluation metric for QA and is

the CoQA dev set.

deﬁned as the harmonic mean of precision and recall.

3https://stanfordnlp.github.io/coqa/

5We adopt the 4th smoothing technique as proposed in

(Chen and Cherry, 2014) for short text generation.

4Our modiﬁed DrQA model achieves 68.8 F1 scores on

Models

Vanilla Seq2Seq Model
NQG (Du et al., 2017)
With 1 Layer Reasoning, no RL
With 2 Layer Reasoning, no RL
With 3 Layer Reasoning, no RL
With Dynamic Reasoning, no RL
Reinforced Dynamic Reasoning (ReDR)

Relevance

BLEU RG-L Dist-1
0.010
26.68
7.64
0.017
31.75
13.97
0.053
32.24
16.13
0.062
33.06
17.85
32.88
17.42
0.061
0.064
33.57
19.10
0.069
34.05
19.69

Diversity
Dist-2
0.034
0.068
0.171
0.216
0.205
0.220
0.225

Ent-4
3.370
6.518
7.862
8.285
8.247
8.304
8.367

Table 2: Quantitative evaluation for conversational question generation using CoQA dataset.

the more relevant or diverse the generated ques-
tions are.

Results and Analysis
Table 2 shows the per-
formance of various models on the CoQA dataset.
As we can see, our model ReDR and its variants
perform much better than the baselines, which in-
dicates that the reasoning procedure can signiﬁ-
cantly boost the quality of the encoding represen-
tations and thus improve the question generation
performance.

To investigate the effect of the reasoning proce-
dure and ﬁne-tuning in our model design, we also
conduct an ablation study: (1) We ﬁrst test our
model with only one layer of reasoning, i.e., di-
rectly feeding the encoding representation U0 into
the decoder. The results drop a lot on all the met-
rics, which indicates that there is abundant seman-
tic information in the input text so the multi-layer
reasoning is necessary. (2) We then augment our
model with two or three layers of reasoning but
without the decision maker pd.
In other words,
we directly use the hidden states of the integra-
tion LSTM as the input to the next reasoning layer
(formally, U j = ˜U j). We can see that the per-
formance of our model increases with a two-layer
reasoning while decreases with a three-layer rea-
soning. We conjecture that the two-layer reason-
ing network is saturated for most of the input text
sequences, thus directly adding a layer of network
for all the input text seems not optimal. (3) When
we add the decision maker to dynamically com-
pute the encoding representations, the results are
greatly improved, which demonstrates that using
a dynamic procedure can distribute proper weight
of each layer to the input sequences in different
lengths and amount of information. (4) Finally, we
ﬁne-tune the model with the reinforcement learn-
ing framework, and the results show that using the

NQG ReDR Human

Naturalness
Relevance
Coherence
Richness
Answerability

1.94
1.16
1.12
1.16
1.18

1.92
2.02
1.94
2.30
1.86

2.14
2.82
2.94
2.54
2.96

Table 3: Human evaluation results on CoQA. “Human”
in the table means the original human-created questions
in CoQA.

answer quality as the reward is helpful for gener-
ating better questions.

4.5 Human Evaluation

We conduct human evaluation to measure the
quality of generated questions. We randomly sam-
pled 50 questions along with their conversation
history and the passage, and consider 5 aspects:
Naturalness, which indicates the grammaticality
and ﬂuency; Relevance, which indicates the con-
nection with the topic of the passage; Coherence,
which measures whether the generated question is
coherent with the conversation history; Richness,
which measures the amount of information con-
tained in the question. Answerability, which indi-
cates whether the question is answerable based on
the passage. For each sample, 5 people 6 are asked
to rank three questions (the ReDR question, the
NQG question and the human-created question)
by assigning each a score from {1,2,3} (the higher,
the better). For each aspect, we show the average
score across the ﬁve annotators on all samples.

Table 3 shows the results of human evaluation.
We can see that our method almost outperforms
NQG in all aspects. For Naturalness, the three

6All annotators are native English speakers.

Category

NQG ReDR Human

“what” Question
“which” Question
“when” Question
“where” Question
“who” Question
“why” Question
yes/no Question

Question Length
Explicit Coref.
Implicit Coref.

0.42
0.01
0.05
0.06
0.22
0.03
0.07

Question Type
0.45
0.01
0.07
0.08
0.06
0.15
0.08
Linguistic Feature
4.05
0.51
0.32

5.34
0.53
0.19

0.35
0.02
0.04
0.07
0.15
0.03
0.21

6.48
0.47
0.19

Table 4: Linguistic statistics for the generated ques-
tions and the human annotated questions in CoQA.

methods obtain the similar scores, which is proba-
bly because that the most generated questions are
short and ﬂuent, makes them have no signiﬁcant
difference on this aspect. We also observe that on
the Relevance, Coherence and Answerability as-
pects, there is an obvious gap between the genera-
tive models and human annotation. This indicates
that the contextual understanding is still a chal-
lenging problem for the task of the conversational
question generation.

4.6 Linguistic Analysis

We further analyze the generated questions in
terms of their linguistic features and constitutions
in Table 4, from which we draw three observa-
tions: (1) Overall, the distribution of the major
types of questions generated by ReDR is closer
to human-created questions, in comparison with
NQG. For example, ReDR generates a large por-
tion of “what” and “who” questions, similarly as
humans. (2) We observe that NQG tends to gen-
erate many single-word questions such as “Why?”
while our method successfully alleviates this prob-
lem.
(3) Both ReDR and NQG generate fewer
yes/no questions than humans, as a result of gen-
erating more “wh”-type of questions.

For the relationship between a question and
its conversation history, following the analysis in
CoQA, we randomly sample 150 questions respec-
tively from each method and observe that about
50% questions generated by ReDR contain ex-
plicit coreference markers such as “he”, “she” or
“it”, which is similar to the other two methods.

Figure 3: Example questions generated by human (i.e.,
original questions denoted as OQ), NQG and our ReDR
on CoQA.

However, NQG generates much more questions
consisting of implicit coreference markers like
“Where?” or “Who?”, which can be less meaning-
ful or not answerable as also veriﬁed in Table 3.

4.7 Case Study

In Figure 3, we show the output questions of
our ReDR and NQG on an example from CoQA
dataset. For the ﬁrst turn, both ReDR and NQG
generate a meaningful and answerable question.
For the second turn, NQG generates “What was
it?”, which is answerable and related to the con-
versation history but simpler than our question
“What kind of house did she live?”. For the third
turn, NQG generates a coherent but less meaning-
ful question “Why?”, while our method generates
“Was she alone?”, which is very similar to the
human-created question. For the last turn, NQG
produces a question that is neither coherent nor an-
swerable, while ReDR asks a much better question
“Who else?”.

To show the applicability of ReDR to generate
QA style conversations on any passages, we apply
it to passages in the SQuAD reading comprehen-
sion dataset (Rajpurkar et al., 2016) and show an
example in Figure 4. Since there are no rationales

2018; Song et al., 2018) further modeled the sur-
rounding paragraph-level information of the given
sentence. However, most of the work focused
on generating standalone questions solely based
In contrast, this
on a sentence or a paragraph.
work explores conversational question generation
and has to additionally consider the conversation
history in order to generate a coherent question,
making the task much more challenging.

Conversation Generation. Building chatbots
and conversational agents has been pursued by
many previous work (Ritter et al., 2011; Vinyals
and Le, 2015; Sordoni et al., 2015; Serban et al.,
2016a; Li et al., 2016a,b). Vinyals and Le
(2015) used a Sequence-to-Sequence neural net-
work (Sutskever et al., 2014) for generating a re-
sponse given the dialog history. Li et al. (2016a)
further optimized the response diversity by max-
imizing the mutual information between inputs
and output responses. Different from these work
where the response can be in any form (usually
a declarative statement) and is generated solely
based on the dialog history, our task is poten-
tially more challenging as it additionally restricts
the generated response to be a follow-up question
about a given passage.

Conversational Question Answering (CQA).
CQA aims to automatically answer a sequence of
questions.
It has been studied in the knowledge
base setting (Saha et al., 2018; Iyyer et al., 2017)
and is often framed as a semantic parsing problem.
Recently released large-scale datasets (Reddy
et al., 2018; Choi et al., 2018) enabled studying it
in the textual setting where the information source
used to answer questions is a given passage, and
they inspired many signiﬁcant work (Zhu et al.,
2018; Huang et al., 2018; Yatskar, 2018). How-
ever, collecting such datasets has heavily relied on
human efforts and can be very costly. Based on
one of the most popular datasets CoQA (Reddy
et al., 2018), we examine the possibility of au-
tomatically generating conversational questions,
which can potentially reduce the data collection
cost for CQA.

6 Conclusion

In this paper, we introduce the task of Conversa-
tional Question Generation (CQG), and propose a
novel framework which achieves promising per-
formance on the popular dataset CoQA. We in-

Figure 4: Our generated conversation on a SQuAD
passage. The questions are generated by our ReDR and
the answers are predicted by DrQA.

provided in the dataset for generating consecutive
questions, we ﬁrst apply our rule-based rationale
selection as introduced in Section 3.1 and then
generate a question based on the selected rationale
and the conversation history. The answers are pre-
dicted by our modiﬁed DrQA. Figure 4 shows that
our generated questions are closely related to the
passage, e.g., the ﬁrst question contains “Monday”
and the third one mentions “opening ceremony”.
Moreover, we can also generate interesting ques-
tions such as “Where?” which connects to previ-
ous questions and makes a coherent conversation.

5 Related Work

Question Generation. Generating questions
from various kinds of sources, such as texts (Rus
et al., 2010; Heilman and Smith, 2010; Mitkov
and Ha, 2003; Du et al., 2017), search queries
(Zhao et al., 2011), knowledge bases (Serban
et al., 2016b) and images (Mostafazadeh et al.,
2016), has attracted much attention recently.
Our work is most related to previous work on
generating questions from sentences or para-
graphs. Most early approaches are based on
rules and templates (Heilman and Smith, 2010;
Mitkov and Ha, 2003), while Du et al. (2017)
recently proposed to generate a question by a
Sequence-to-Sequence neural network model
(Sutskever et al., 2014) with attention (Luong
et al., 2015). Other approaches such as (Zhou
et al., 2017; Subramanian et al., 2017) take into
account the answer information in addition to the
(Du and Cardie,
given sentence or paragraph.

corporate a dynamic reasoning procedure to the
general encoder-decoder model and dynamically
update the encoding representations of the inputs.
Moreover, we use the quality of the answers pre-
dicted by a QA model as rewards and ﬁne-tune our
model via reinforcement learning. In the future,
we would like to explore how to better select the
rationale for each question. Besides, it would also
be interesting to consider using linguistic knowl-
edge such as named entities or part-of-speech tags
to improve the coherence of the conversation.

7 Acknowledgments

This research was sponsored in part by the Army
Research Ofﬁce under grant W911NF-17-1-0412,
NSF Grant IIS-1815674, the National Nature Sci-
ence Foundation of China (grant No. 61751307),
and Ohio Supercomputer Center (Center, 1987).
The views and conclusions contained herein are
those of the authors and should not be interpreted
as representing the ofﬁcial policies, either ex-
pressed or implied, of the Army Research Ofﬁce
or the U.S. Government. The U.S. Government is
authorized to reproduce and distribute reprints for
Government purposes notwithstanding any copy-
right notice herein.

References

puter center.

Ohio Supercomputer Center. 1987. Ohio supercom-

Boxing Chen and Colin Cherry. 2014. A systematic
comparison of smoothing techniques for sentence-
level bleu. In Proceedings of the Ninth Workshop on
Statistical Machine Translation, pages 362–367.

Danqi Chen, Adam Fisch, Jason Weston, and Antoine
Bordes. 2017. Reading wikipedia to answer open-
In Proceedings of the 55th An-
domain questions.
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), volume 1,
pages 1870–1879.

Eunsol Choi, He He, Mohit Iyyer, Mark Yatskar, Wen-
tau Yih, Yejin Choi, Percy Liang, and Luke Zettle-
moyer. 2018. Quac: Question answering in context.
In Proceedings of the 2018 Conference on Empiri-
cal Methods in Natural Language Processing, pages
2174–2184.

Xinya Du and Claire Cardie. 2018.

Harvest-
ing paragraph-level question-answer pairs from
wikipedia. In Proceedings of the 56th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 1907–1917.

Xinya Du, Junru Shao, and Claire Cardie. 2017. Learn-
ing to ask: Neural question generation for reading
comprehension. In Proceedings of the 55th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers), volume 1, pages
1342–1352.

Jiatao Gu, Zhengdong Lu, Hang Li, and Victor OK
Incorporating copying mechanism in
Li. 2016.
In Proceedings of
sequence-to-sequence learning.
the 54th Annual Meeting of the Association for
Computational Linguistics (ACL), volume 1, pages
1631–1640.

Daya Guo, Yibo Sun, Duyu Tang, Nan Duan, Jian Yin,
Hong Chi, James Cao, Peng Chen, and Ming Zhou.
2018. Question generation from sql queries im-
proves neural semantic parsing. In Proceedings of
the 2018 Conference on Empirical Methods in Nat-
ural Language Processing, pages 1597–1607.

Michael Heilman and Noah A Smith. 2010. Good
question!
statistical ranking for question genera-
tion. In Human Language Technologies: The 2010
Annual Conference of the North American Chap-
ter of the Association for Computational Linguistics,
pages 609–617. Association for Computational Lin-
guistics.

Hsin-Yuan Huang, Eunsol Choi, and Wen-tau Yih.
2018. Flowqa: Grasping ﬂow in history for con-
versational machine comprehension. arXiv preprint
arXiv:1810.06683.

Mohit Iyyer, Wen-tau Yih, and Ming-Wei Chang. 2017.
Search-based neural structured learning for sequen-
tial question answering. In Proceedings of the 55th
Annual Meeting of the Association for Computa-
tional Linguistics (Volume 1: Long Papers), vol-
ume 1, pages 1821–1831.

Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao,
and Bill Dolan. 2016a. A diversity-promoting ob-
jective function for neural conversation models. In
Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
pages 110–119.

Jiwei Li, Will Monroe, Alan Ritter, Dan Jurafsky,
Michel Galley, and Jianfeng Gao. 2016b. Deep rein-
forcement learning for dialogue generation. In Pro-
ceedings of the 2016 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1192–
1202.

Chin-Yew Lin. 2004. Rouge: A package for auto-
matic evaluation of summaries. Text Summarization
Branches Out.

Thang Luong, Hieu Pham, and Christopher D Man-
ning. 2015. Effective approaches to attention-based
In Proceedings of the
neural machine translation.
2015 Conference on Empirical Methods in Natural
Language Processing, pages 1412–1421.

Ruslan Mitkov and Le An Ha. 2003. Computer-aided
In Proceed-
generation of multiple-choice tests.
ings of the HLT-NAACL 03 workshop on Build-
ing educational applications using natural language
processing-Volume 2, pages 17–22. Association for
Computational Linguistics.

Nasrin Mostafazadeh, Ishan Misra, Jacob Devlin, Mar-
garet Mitchell, Xiaodong He, and Lucy Vander-
wende. 2016. Generating natural questions about
an image. In Proceedings of the 54th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), volume 1, pages 1802–
1813.

Boyuan Pan, Hao Li, Zhou Zhao, Bin Cao, Deng Cai,
and Xiaofei He. 2017. Memen: Multi-layer embed-
ding with memory networks for machine compre-
hension. arXiv preprint arXiv:1707.09098.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
In Proceedings of
uation of machine translation.
the 40th annual meeting on association for compu-
tational linguistics, pages 311–318. Association for
Computational Linguistics.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1532–
1543.

Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and
Percy Liang. 2016. Squad: 100,000+ questions for
machine comprehension of text. In Proceedings of
the 2016 Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 2383–
2392.

Siva Reddy, Danqi Chen, and Christopher D Manning.
2018. Coqa: A conversational question answering
challenge. arXiv preprint arXiv:1808.07042.

Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and
Hannaneh Hajishirzi. 2017. Bidirectional attention
ﬂow for machine comprehension. ICLR.

Iulian V Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2016a. Building
end-to-end dialogue systems using generative hier-
archical neural network models. In Thirtieth AAAI
Conference on Artiﬁcial Intelligence.

Iulian Vlad Serban, Alberto Garc´ıa-Dur´an, Caglar
Gulcehre, Sungjin Ahn, Sarath Chandar, Aaron
Courville, and Yoshua Bengio. 2016b. Generat-
ing factoid questions with recurrent neural networks:
In Pro-
The 30m factoid question-answer corpus.
ceedings of the 54th Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 1: Long
Papers), volume 1, pages 588–598.

Linfeng Song, Zhiguo Wang, Wael Hamza, Yue Zhang,
and Daniel Gildea. 2018. Leveraging context infor-
mation for natural question generation. In Proceed-
ings of the 2018 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies, Volume 2
(Short Papers), volume 2, pages 569–574.

Alessandro Sordoni, Michel Galley, Michael Auli,
Chris Brockett, Yangfeng Ji, Margaret Mitchell,
Jian-Yun Nie, Jianfeng Gao, and Bill Dolan. 2015.
A neural network approach to context-sensitive gen-
In Proceed-
eration of conversational responses.
ings of the 2015 Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
196–205.

Nitish Srivastava, Geoffrey E Hinton, Alex Krizhevsky,
Ilya Sutskever, and Ruslan Salakhutdinov. 2014.
Dropout: a simple way to prevent neural networks
from overﬁtting. Journal of Machine Learning Re-
search, 15(1):1929–1958.

Alan Ritter, Colin Cherry, and William B Dolan. 2011.
Data-driven response generation in social media. In
Proceedings of the conference on empirical methods
in natural language processing, pages 583–593. As-
sociation for Computational Linguistics.

Sandeep Subramanian, Tong Wang, Xingdi Yuan,
Saizheng Zhang, Yoshua Bengio,
and Adam
Trischler. 2017. Neural models for key phrase de-
arXiv preprint
tection and question generation.
arXiv:1706.04560.

Vasile Rus, Brendan Wyse, Paul Piwek, Mihai Lin-
tean, Svetlana Stoyanchev, and Christian Moldovan.
2010. The ﬁrst question generation shared task eval-
uation challenge. In Proceedings of the 6th Interna-
tional Natural Language Generation Conference.

Amrita Saha, Vardaan Pahuja, Mitesh M Khapra,
Karthik Sankaranarayanan, and Sarath Chandar.
2018. Complex sequential question answering: To-
wards learning to converse over linked question an-
In Thirty-
swer pairs with a knowledge graph.
Second AAAI Conference on Artiﬁcial Intelligence.

Abigail See, Peter J Liu, and Christopher D Manning.
2017. Get to the point: Summarization with pointer-
generator networks. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers).

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Advances in neural information process-
ing systems, pages 3104–3112.

Oriol Vinyals and Quoc Le. 2015. A neural conversa-
tional model. arXiv preprint arXiv:1506.05869.

Tsung-Hsien Wen, David Vandyke, Nikola Mrkˇsi´c,
Milica Gasic, Lina M Rojas Barahona, Pei-Hao Su,
Stefan Ultes, and Steve Young. 2017. A network-
based end-to-end trainable task-oriented dialogue
In Proceedings of the 15th Conference of
system.
the European Chapter of the Association for Com-
putational Linguistics: Volume 1, Long Papers, vol-
ume 1, pages 438–449.

Ronald J Williams. 1992. Simple statistical gradient-
following algorithms for connectionist reinforce-
ment learning. Machine Learning, 8(3-4):229–256.

Caiming Xiong, Victor Zhong, and Richard Socher.
2017. Dynamic coattention networks for question
answering. ICLR.

Zhen Xu, Bingquan Liu, Baoxun Wang, SUN
Chengjie, Xiaolong Wang, Zhuoran Wang, and
Chao Qi. 2017. Neural response generation via gan
with an approximate embedding layer. In Proceed-
ings of the 2017 Conference on Empirical Methods
in Natural Language Processing, pages 617–626.

Mark Yatskar. 2018.

of coqa, squad 2.0 and quac.
arXiv:1809.10735.

A qualitative comparison
arXiv preprint

Yizhe Zhang, Michel Galley, Jianfeng Gao, Zhe Gan,
Xiujun Li, Chris Brockett, and Bill Dolan. 2018.
Generating informative and diverse conversational
responses via adversarial information maximization.

In Advances in Neural Information Processing Sys-
tems, pages 1815–1825.

Shiqi Zhao, Haifeng Wang, Chao Li, Ting Liu, and
Yi Guan. 2011. Automatically generating questions
from queries for community-based question answer-
ing. In Proceedings of 5th international joint con-
ference on natural language processing, pages 929–
937.

Qingyu Zhou, Nan Yang, Furu Wei, Chuanqi Tan,
Hangbo Bao, and Ming Zhou. 2017. Neural ques-
tion generation from text: A preliminary study.
In National CCF Conference on Natural Language
Processing and Chinese Computing, pages 662–671.
Springer.

Chenguang Zhu, Michael Zeng, and Xuedong Huang.
2018. Sdnet: Contextualized attention-based deep
network for conversational question answering.
arXiv preprint arXiv:1812.03593.

