Focusing and Diffusion: Bidirectional Attentive Graph Convolutional Networks
for Skeleton-based Action Recognition

Jialin Gao1, Tong He2, Xi Zhou1, Shiming Ge3
1Shanghai Jiao Tong University 2University of California, Los Angeles
3Institute of Information Engineering, Chinese Academy of Sciences
jialin gao@sjtu.edu.cn, simpleig@cs.ucla.edu, zhouxi@cloudwalk.cn, geshiming@iie.ac.cn

9
1
0
2
 
c
e
D
 
4
2
 
 
]

V
C
.
s
c
[
 
 
1
v
1
2
5
1
1
.
2
1
9
1
:
v
i
X
r
a

Abstract

A collection of approaches based on graph convolu-
tional networks have proven success in skeleton-based ac-
tion recognition by exploring neighborhood information
and dense dependencies between intra-frame joints. How-
ever, these approaches usually ignore the spatial-temporal
global context as well as the local relation between inter-
frame and intra-frame. In this paper, we propose a focusing
and diffusion mechanism to enhance graph convolutional
networks by paying attention to the kinematic dependence
of articulated human pose in a frame and their implicit de-
pendencies over frames.
In the focusing process, we in-
troduce an attention module to learn a latent node over
the intra-frame joints to convey spatial contextual informa-
In this way, the sparse connections between joints
tion.
in a frame can be well captured, while the global context
over the entire sequence is further captured by these hid-
den nodes with a bidirectional LSTM. In the diffusing pro-
cess, the learned spatial-temporal contextual information is
passed back to the spatial joints, leading to a bidirectional
attentive graph convolutional network (BAGCN) that can
facilitate skeleton-based action recognition. Extensive ex-
periments on the challenging NTU RGB+D and Skeleton-
Kinetics benchmarks demonstrate the efﬁcacy of our ap-
proach.

1. Introduction

Action recognition is a challenging vision problem
that has been studied for years.
It plays an essential
role in various applications, such as video surveillance
[24], patient monitoring [20], robotics[40], human-machine
interaction[10] and so on [37, 40, 28]. Previous methods
mainly rely on two different data modalities: RGB im-
ages [11, 33] and skeleton points [28, 39, 40]. Compared
with 2D images, 3D (skeleton) points directly encode ob-
ject shape and motion [26, 27, 38, 5, 23, 34, 6] and thus are

Figure 1. Previous methods ignore the implicit inter-frame and
intra-frame connections, which inspired us to learn a latent trans-
former node and then convey the global spatial-temporal context
information back to spatial joints in each frame.

more robust to nuisances like fast motions, camera view-
point changes, etc.

Conventional attempts [35, 4, 22] take skeletons as a se-
quence of vectors generated by encoding all joints in the
same frame together. Some deep-learning-based methods,
such as CNNs, employ convolution operation directly on
skeletons, the irregular grid data. These approaches ignore
the intrinsically kinematic dependencies and structural in-
formation of human pose, leading to unsatisfactory perfor-
mance.

To exploit the structure of skeleton data, Yan et al. [39]
ﬁrst introduces the spatial-temporal Graph Convolutional
Network (GCN) based on coordinated joints and the nat-
ural topology of the human body. However, this prede-
ﬁned graph structure suffers from two defects, as shown
in Fig.1: 1) the graph only considers physically structural
information but ignores the semantic connections among
intra-frame joints. For example, the implicit correlation be-
tween hands and head is crucial to recognize the action of

1

”drinking.” 2) the inter-frame edges only connect the same
joints over consecutive frames, which lack modeling the
connections between inter-frame joints. Another challenge
is that a complete action lasts from several seconds to min-
utes. Thus, it is crucial to design a model that is capable
of reducing noise from irrelevant joints and focusing on in-
formative ones. Temporal context modeling is usually ex-
pected to be helpful for addressing this issue, inspired by
which in this paper we intend to capture both the physical
connections and semantic dependencies beyond the spatial
and temporal neighborhood restrictions of GCN.

Several methods, like AS-GCN[18] and 2s-AGCN[30],
attempt to overcome the aforementioned ﬁrst drawback but
they introduce additional challenges to be solved. For ob-
taining kinematic dependency, 2s-AGCN introduces a mod-
ule to learn the additional data-driven morphing graph over
layers, and AS-GCN proposes an encoder-decoder struc-
ture to capture action-speciﬁc dependencies combined with
physically structural links between joints. Nevertheless, it is
inefﬁcient to directly model the relationship between non-
neighbor joints over a fully-connected graph. These po-
tentially dense connections are also tricky to learn because
of the noise from irrelevant ones, which leads to difﬁculty
in optimization and unsatisﬁed performance. Besides, they
also ignore the correlations between inter-frame joints so
that they cannot take advantage of the temporal contextual
information.

To overcome such limitations, we introduce a focusing
and diffusion mechanism to enhance the graph convolu-
tional networks to receive information beyond the spatial
and temporal neighborhood restrictions. We ﬁrst represent
the human skeleton in each frame by constructing a focus
graph and diffusion graph. Then we propose an efﬁcient
way to propagate information over these graphs though a
learnable latent transformer node. This way captures a
sparse but informative connections between joints in each
frame, since not all the implicit correlations are activated in
an action. It also agrees with the fact that informative con-
nections may also change over the frames. During the train-
ing stage, the latent transformer node learns how to connect
the action-speciﬁc related joints and passes message forth
and back though the focusing and diffusion graphs.

However, there remains a problem of how to model the
relation between intra-frame and inter-frame joints. To
solve this, we take advantage of the latent transformer node
again. We empirically show that the node learns the infor-
mative spatial context in each frame, generating a sequence
of latent spatial nodes. To capture the temporal contex-
tual information over frames, we introduce a context-aware
module consisting of bidirectional LSTM cells to model
temporal dynamics and dependencies based on the learned
spatial latent nodes.

With the focusing and diffusion mechanism, a graph

convolutional network can selectively focus on the infor-
mative joints in each frame, capture the global spatial-
temporal contextual information and further convey it back
to augment node embedding in each frame. We also de-
velop a Bidirectional Attentive Graph Convolutional Net-
work (BAGCN) as an exemplar and evaluate its effective-
ness on two challenging public benchmarks: NTH-RGB+D
and Skeleton-Kinetics. In summary, our main contributions
are three-fold:

1) We propose a novel representation of the human
skeleton data in a single frame by constructing two
opposite-direction graphs and also introduce an efﬁ-
cient way of message passing in the graph.

2) We design a new network architecture, Bidirectional
Attentive Graph Convolutional Network (BAGCN),
that learns spatial-temporal context from human skele-
ton sequences leveraging a graph convolutional net-
works based focusing and diffusion mechanism.

3) Our BAGCN model is compared against other state-of-
the-arts methods on the challenging NTU-RGB+D and
Skeleton-Kinetics benchmarks, and demonstrate supe-
rior performance.

2. Related Work

Skeleton-based action recognition: The methods can
be divided into handcraft feature based [36, 35, 9] and deep
learning based [28, 13, 16, 39]. The former encounters chal-
lenges in designing representative features, which results in
limited recognition accuracy. But the latter is data-driven
and improves the performance by a great margin. There are
three types of deep models used widely: RNNs, CNNs and
GCNs. RNN-based [3, 28, 21, 32] methods usually take the
skeletons as a sequence of vectors and models their tem-
poral dependencies over frames. CNN-based approaches
[13, 12, 22, 16, 17] employ convolution on skeleton data by
regarding it as a pseudo-image.

Recently, graph-based methods [29, 30, 39, 18] perform
superior classiﬁcation accuracies. ST-GCN [39] is the ﬁrst
one to employ graph convolution. SR-TSL [31] uses gated
recurrent unit (GRU) to propagate messages on graphs and
uses LSTM to learn the temporal features. AS-GCN [18]
learns actional links simultaneously with structural links in
their graph model. 2s-AGCN[30] introduces an adaptive
module to construct a data-driven morphing graphs over
layers. However, these two methods meet the same difﬁ-
culties in optimization due to noise from irrelevant joints or
bones. Further, DGNN[29] constructs a directed graph and
deﬁne the message passing rules for node and edge updat-
ing. However, they ignore the implicit correlations between
intra-frame and inter-frame joints.

construct an undirected spatial temporal graph the same as
[39]. Given a spatial-temporal graph G = {V, E}, where
V = {vt
i |t = 1, · · · , T, i = 1, · · · , V } is the set of V body
joints and E = {ES , ET } is the set of intra-skeleton and
inter-frame bones. ES contains the natural connections in
articulated human pose and ET consists of the joints’ tra-
jectories between consecutive two frames. As shown in the
left part of Fig.2, the vertexes denote body joints and the
naturally connections between them represent the bone.

−→
E }, {V,

Different from previous works, we deﬁne an undirected
spatial temporal graph as two directed graphs with oppo-
site direction for each edges inspired by [14], where G =
←−
E }}, as shown in the right part of Fig.2. The
{{V,
message passing between joints is bi-directional, which is
expected to exploit the kinematics dependencies and help
the center joint and peripheral joints receive information
from each other.

ST-GCN [39] indicates that a graph with spatial conﬁg-
uration partitioning strategy exploits more location infor-
mation. We follow this conclusion and split the neighbors
into three subsets: 1) the root node itself; 2) the centripetal
group; 3) the centrifugal group. That we have S = {root,
closer, far}. It is according to the distance from the grav-
ity center of the skeleton. Hence, we deﬁne the message
passing in focus graphs from a joint vi close to the center of
gravity to a joint vj far from the center of gravity and that
direction is opposite in diffusion graphs. The bone informa-
tion e(cid:126)ij is obtained by calculating the coordinates difference
between these two points.

Let A ∈ {0, 1}n×n be the adjacency matrix of our graph
G, where A = {Af , Ad} represents the corresponding
−→
adjacency matrices to focus graph {V,
E } and diffusion
←−
E } , respectively. For each sub-graph, we have
graph {V,
s = Af and (cid:80)
(cid:80)
s = Ad
s∈S Af

s∈S Ad

3.2. Building Block with Graph Convolution

We have deﬁned the sequential skeletons as two directed
spatial-temporal graphs. The problem becomes how to
passing messages in these directed graphs. We adopt a sim-
ilar implementation of spatial graph convolution as in [15],
which employs a weighted average of neighboring features
for updating intra-frame joints’ embedding. According to
the deﬁnition in G, each graph convolution layer is followed
by a temporal convolution, so that we only need to imple-
ment graph convolution operation in a single frame case.

For message passing, we ﬁrst convey information though
focus graphs and then transform the updated features back
via diffusion graphs. Let Xin ∈ RV ×T ×C be the nodes’
embedding of our focus graph from a certain intermediate
layer. Before the focus stage, the node embedding is ﬁrst

Figure 2. Undirected graphs (left) can be modeled by explicitly
assigning two directed edges in opposite direction for each undi-
rected edge, leading to two directed graphs(right). The black node
denotes the center node and arrow indicates the passing direction.

Graph convolutional networks: Graph convolutional
networks (GCNs), which generalizes convolution from im-
age to graph, has been successfully applied in many appli-
cations. The way of constructing GCNs on graph can be
split into 2 categories: the spectral [7, 19, 15] and spatial
[1, 25] perspective. The former utilizes graph Fourier trans-
form performing convolution in frequency domain. Differ-
ently, the latter directly performs the convolution ﬁlters on
the graph according to predeﬁned rules and neighbors. We
follow the second way to construct the CNN ﬁlters on the
spatial domain.

3. Method

To obtain the physically and semantically connections
sparsely, we introduce a focusing and diffusion mechanism
to enhance the graph convolutional networks’ ability in re-
ceiving information from other joints of intra-frame and
inter-frame. First, we deﬁne focusing and diffusion graphs
based on the skeletons. Then we formulate how to convey
message over constructed graphs. Afterwards, we introduce
an exemplar of our focusing and diffusion mechanism, de-
veloping a bidirectional attentive graph convolutional net-
works.

3.1. Graph Deﬁnition

The raw skeleton data consists of a sequential articu-
lated human pose coordinates. Previous works [16, 30]

Figure 3. Illustration of our bidirectional attentive graph convolutional network for skeleton-based action recognition. Besides the stacked
spatial-temporal graph convolution, we introduce a focusing and diffusion mechanism to learn a latent transformer node and bidirectionally
convey the local context over frames. Once capturing the global spatial-temporal contextual information, spatial joints learn how much
context should be absorbed for updating node embeddings in each frame.

updated via a graph convolution

Xmid =

Ms ⊗ ˆAf

s XinWs,

(1)

(cid:88)

s∈S

1
2

1
2

sΛ

s Af

s = Λ

where ˆAf
s ∈ RV ×V is the normalized adja-
cent matrix for each group, Ms ∈ RV ×V is a learnable edge
importance weighting and ⊗ denotes element-wise produc-
tion between two matrix. Ws ∈ RC×C(cid:48)×1×1 is the weight
matrix, which is implemented via 1 × 1 convolution opera-
tion.

Then, these feature maps will be transformed to learn a
latent node during the focus stage, which performs a trans-
former to pass message to arbitrary nodes beyond the tem-
poral and spatial restrictions. This latent node also can be
regarded as the spatial context over a single frame graph.
In order to capture the temporal contextual information, we
propose to learn the context though a context-aware module,
denoted as CAM . Afterward, the learned spatial-temporal
contextual information can be conveyed back to the spatial
node in each frame. Every node learns how much context
should be used for embedding during the diffusion stage.
For notation, Ff and Fd represent the focusing and diffu-
sion function, respectively. Hence, the latent node GS and
temporal context GT during the focusing and diffusion can
be formulated as:






GS = Ff (Xmid)
GST = CAM (GS)
Xg = Fd(GST )

ˆXmid = F ([Xmid, Xg]),

where F indicates a simple fully-connected layer and [·, ·]
denotes concatenating operation.

The latent node models global spatial-temporal contex-
tual information which is selectively transferred to update
the node features in a single frame graph. Given ˆXmid en-
hanced with our focusing and diffusion mechanism, another
graph convolution operates on the diffusion graph Ad so
that the updated node embedding as:
s ⊗ ˆAd

ˆXmidW

Xout =

(cid:48)
M

(cid:88)

(3)

s,

s

(cid:48)

s∈S

1
2

1
2

s Λ

s Ad

s = Λ

where ˆAd
s ∈ RV ×V is the normalized ad-
jacent matrix for each group in diffusion graphs, M(cid:48)
s ∈
RV ×V is a learnable edge importance weighting and ⊗
denotes element-wise multiplication operator. W(cid:48)
s ∈
RC(cid:48)×C(cid:48)(cid:48)×1×1 is the weight matrix. Similar to the conven-
tional building block, we add a BN layer and a ReLU layer
atfer each graph convolution. With this building blocks, we
can construct our bidirectional attentive graph convolutional
network as shown in Fig.3, the details of which implemen-
tation is shown in next session.

3.3. Context-aware Graph Focusing and Diffusion

In this section, we illustrate an exemplar of our focus-
ing and diffusion mechanism in details, which is shown in
Fig.4. First, we introduce attentive focus module and then a
temporal context-aware module. After learning the spatial-
temporal contextual information with a latent node, we de-
velop a dynamic diffusion to convey the global context back
to spatial nodes in each frame.

(2)

3.3.1 Dynamic Attentive Focusing

The purpose of the focusing stage is to learn a latent node as
a transformer, which carries information between nodes in
a single frame graph beyond spatial neighborhood restric-
tions. Besides, this latent transformer node endows a model

(5)

(6)

build our context-aware module. A LSTM cell contains an
input gate it, a forget gate ft, a output gate ot and an input
cell gt, which are computed by the following functions:








=















it
ft
ot
gt

σ

σ

σ








tanh

W

(cid:33)

(cid:32) ˆGt
S
Ht−1

where Ht−1 is the previous hidden state at time t, W is
a transformation matrix with learnable parameters, σ and
tanh are the activation functions. ˆGt
S is the projected latent
node features, which is ˆGS = GSW2 with a weight matrix
W2 ∈ RC(cid:48)×C(cid:48)×1×1 . The memory cell ct and hidden state
Ht are updated by :

ct = ft ⊗ ct−1 + it ⊗ gt
Ht = ot ⊗ tanh(ct)

where ⊗ represents element-wise multiplication operator.

Considering the directed message passing, we stack two
bidirectional LSTM cells as our temporal context-aware
module. Thus, the learned spatial-temporal context can be
−→
H] ∈ R1×T × ˆC
formulated as GST = [

←−
H,

3.3.3 Dynamic Attentive Diffusion

For diffusion stage, we expect the neural network to learn
how much spatial-temporal context should be passed back
when updating node features. With this diffusion, one node
in a single graph can receive the information from inter-
frame and intra-frame nodes, which indicates the learned
latent node can be regarded as a transformer.

In details, the net ﬁrstly learns a weight matrix Wd ∈
RV ×T ×1 for conveying global context to every spatial node
in each frame. Then the node vi absorbs the diffused con-
textual information f vi
to concatenate with its node em-
g
bedding f vi
in. This combined node features are embedded
via a 1 × 1 convolution operation with a learnable W3 ∈
R(C(cid:48)+ ˆC)×C(cid:48)×1×1. Hence, the diffusion is formulated as:
g = Wt
f t

dGt

ST

(7)

fout = [fin, fg]W3

where [·, ·] denotes concatenating along channel dimension.

Figure 4. Implementation details of the context-aware focusing
and diffusion.

with the ability of selectively focusing on the informative
joints in each frame.

Speciﬁcally, given an input fin ∈ RV ×T ×C(cid:48)
tive focus learns a latent node GS ∈ R1×T ×C(cid:48)
isﬁes

, our atten-
, which sat-

Gt

S = Wt

f f t

inW1

(4)

where W1 ∈ RC(cid:48)×C(cid:48)×1×1 is a 1 × 1 convolution operation
for node embedding and Wf ∈ R1×T ×V is a learnable ma-
trix to focus the information over a single frame graph. It is
equivalent to the attention mechanism combining features
from all nodes over a spatial graph. In our spatial-temporal
graphs, it is also temporally dynamic and each spatial graph
in a sequence has its own attention causing a series of global
spatial contexts. A model can learn how to selectively trans-
form features to the latent node by our attentive focus and
receive their feedback in the diffusion stage.

3.3.2 Temporal Context-aware Module

4. Experiments

We exploit the temporal dependencies between learned la-
tent nodes in the graph sequence via Context-Aware Mod-
ule (CAM) for transforming global spatial-temporal con-
text. Once each spatial graph obtains its GS, the left prob-
lem is how to model the temporal contextual information
based on these. Long-Short-term Memory (LSTM) [8] has
been validated its strengths in modeling the dependencies
and dynamics in sequential data. Hence, we utilize it to

To evaluate the effectiveness of our approach, we con-
duct extensive experiments to compare with state-of-the-art
methods on two challenging benchmarks: NTU-RGB+D
[28] and Skeleton-Kinetics[39].
Considering the lim-
ited computing resources, we choose the relative smaller
NTU-RGB+D dataset to analyze the effect of components
in our Bidirectional Attentive Graph Convolutional Net-
work(BAGCN).

4.1. Datasets and Setting

NTU-RGB+D: NTU-RGB+D [28] is collected by Mi-
crosoft Kinect v2 with joints annotations.
It consists of
56,880 video samples from 60 categories of human actions.
40 distinct subjects perform various actions, which are cap-
tured by three cameras simultaneously with different hori-
zontal angles: -45o, 0o, 45o. The human pose are articu-
lated as 25 joints and their coordinates are labeled as anno-
tations. The evaluation of this dataset is divided into two
standard protocols: Cross-Subject (X-sub) and Cross-View
(X-view). In the former conﬁguration, half of the 40 sub-
jects consists of the training set and the other for testing.
For the latter, training and testing groups are split in terms
of the camera views, where the training group has 37920
video samples from camera 2 and 3. Only top-1 accuracy is
reported on both of the two protocols. Data preprocessing
follows that in [29, 28].

Skeleton-Kinetics: DeepMind Kinetics [11] human ac-
tion video dataset contains 400 human action classes, with
at least 400 video clips for each action taken from the In-
ternet. Its activity categories contains various indoors and
outdoors daily actions, like driving car and dying hair. The
skeleton-kinetics data was obtained by estimating the lo-
cation of 18 articulated joints on every frame with public
available OpenPose[2] toolbox. The annotation of these
joints consists of their 2D coordinates and 1D conﬁdence
score. We follow the same data preparation strategy in ST-
GCN [39] for fair comparison and select two bodies from
multi-person cases according to the highest average joints
conﬁdence. All the samples are resized to 300 frames by
padding. Top-1 and Top-5 classiﬁcation accuracy are cho-
sen to serve as evaluation metric with 240,000 and 20,000
clips for training and testing, respectively.

Implementation details: Here, we introduce how to im-
plement our Bidirectional Attentive Graph Convolutional
Network (BAGCN) and the training details. We concate-
nate joints and bones along the channel dimension follow-
ing [30] and fed it into networks for almost the experiments.
Our BAGCN consists of 9 building blocks and the ﬁrst
layer have 64 channels for output.
In the 4-th and 7-th
blocks, we double the number of channels while downsam-
ple the temporal length by a factor 2, as the same in ST-
GCN[39]. A data BN layer performs the normalization at
the beginning and a global average pooling layer follows the
last block to generate a 256 dimension vector for each se-
quence, which is then classiﬁed by a softmax classiﬁer. For
the context-aware focusing and diffusion, C and C
is the
input and output channels of corresponding blocks, where
and ˆC = 128. Besides, Wf and Wd share the
C (cid:48) = 1
weight and learn from fin directly using a C (cid:48) × 1 × 1 × 1
convolution. Stochastic gradient descent with 0.9 momen-
tum, weight decay with 0.0001 and Cross-entropy are ap-
plied for training. We initialize the base learning rate as 0.1

4 C

(cid:48)(cid:48)

(cid:48)(cid:48)

Table 1. Top-1 accuracy of action recognition on NTU-RGB+D
compared with state-of-the-art methods.

Methods

Cross-Subject Cross-View

Lie Group [35]
H-RNN[3]
Deep LSTM[28]
ST-LSTM[21]
STA-LSTM[32]
Temporal Conv[13]
Clip+CNN+MTLN[12]
Synthesized CNN[22]
ST-GCN[39]
Two-Stream CNN[16]
SR-TSL[31]
HCN [17]
AS-GCN[18]
2s-AGCN[30]
DGNN[29]

50.1%
59.1%
60.7%
69.2%
73.4%
74.3%
79.6%
80.0%
81.5%
83.2%
84.8%
86.5%
86.8%
88.5%
89.9%

82.8%
64.0%
67.3%
77.7%
81.2%
84.1%
84.8%
87.2%
88.3%
89.3%
92.4%
91.1%
94.2%
95.1%
96.1%

BAGCN (Ours)

90.3%

96.3%

and decay it by 10 at 30th and 40th epoch of 50 epochs for
NTU-RGB+D dataset while 20th, 40th 55th of 65 epochs
for Skeleton-Kinetics dataset. Besides, we also explore the
spatial and motion information referred in DGNN [29]. The
motion stream takes the movements of joints and the defor-
mations of bones as input, which is exploited only in the last
part in ablation study. Otherwise, all the other experiments
are based on the spatial stream for fair comparison.

4.2. Compared with State-of-the-art Methods

To validate the superior performance of the BAGCN, we
compare it with state-of-the-arts on both NTU-RGB+D and
Skeleton-Kinetics datasets.

For the former, we report the cross-subject and cross-
view protocols of all the compared methods in Tab.1. These
approaches can be divided into handcraft-based [35], RNN-
based [3, 28, 21, 32], CNN-based [13, 17, 16, 12, 22] and
recent GCN-based[39, 31, 18, 30, 29]. Our model out-
performs previous methods. Compared with our baseline
ST-GCN, the context-aware focusing and diffusion mecha-
nism enhances the performance by a great margin, which
increases from 81.5% to 90.3% and 88.3% to 96.3% in
terms of cross-subject and cross-view, respectively. This
performance gain veriﬁes the superiority and effectiveness
of BAGCN. The effect of components in BAGCN is ex-
plored in the later ablation study.

For Skeleton-Kinetics datasets, we compare with other
methods in terms of top-1 and top-5 accuracies in Tab.2.
We see that our BAGCN achieves the best performance,
which is identical to the former. From these two table, it
is found that graph-based methods exploit better kinematic

Table 2. Comparison with state-of-the-art methods of on Skeleton-
Kinetics in terms of Top-1 and Top-5 classiﬁcation accuracies.

Table 3. Comparison with the baseline ST-GCNs and focusing
ways on NTU-RGB+D validated by Cross-Subjects protocol.

Methods

Top-1

Top-5

Feature Enc. [4]
Deep LSTM [28]
Temporal Conv[13]
ST-GCN [39]
AS-GCN [18]
2s-AGCN [30]
DGNN [29]

14.9% 25.8%
16.4% 35.3%
20.3% 40.0%
30.7% 52.8&
34.8% 56.5%
36.1% 58.7%
36.9% 59.6%

BAGCN(Ours)

37.3% 60.2%

Methods

ST-GCN∗
ST-GCN [39]
A-link GCN+
S-link GCN+
AS-GCN [18]

BAGCN (wo/F)
BAGCN (max)
BAGCN (avg)
BAGCN (att)

Accuracy

81.5%
84.8%

83.2%
84.2%
86.1%

86.4%
87.4%
87.8%
89.4%

∗ Original results reported in [39] with only joints information
+ Actional links (A-link) and Structural links (S-link) learned in [18]

dependency than RNN/CNN based ones and our focusing
and diffusion mechanism can achieve the message passing
between intra-frame joints and inter-frame joints for better
recognition accuracies.

4.3. Ablation Study

In this session, we evaluate the effect of components
in our bidirectional attentive graph convolutional network.
In details, we analyze each component by testing recogni-
tion performance of BAGCN without that part on NTU-
RGB+D. Besides, we also exploit the impact from differ-
ent modalities. Compared with the X-view protocol, the
X-subject requires a model the ability to recognize actions
performed by unseen subjects, which is more challenging.

4.3.1 Attentive Focusing and Diffusion

We analyze the importance of our attentive focusing and
diffusion by exploring the different ways of focusing. First,
we delete it from our Bidirectional Attentive Graph Convo-
lutional network (BAGCN) and then investigate three types
for the focusing stage, results shown in Tab.3.

Without attentive focusing and diffusion. The origi-

nal performance in ST-GCN[39] is increased to 84.8% with
the concatenated joints and bones information, serving as
our baseline method. According to the graph construction,
our BAGCN degrades to bidirectional ST-GCN without the
focusing and diffusion, denoted as BAGCN (wo/F). The
message ﬁrst ﬂows out from the center joint to peripheral
joints and then ﬂows back after nodes updating. This mes-
sage passing way improves the performance from 84.8%
to 86.4%, that indicates the necessity for a joint node re-
ceiving information from spatial non-neighbor joints. AS-
GCN [18] also captures intra-frame dependencies beyond
physical connection to update node embeddings. It learns
actional links (A-link) and structural links (S-link) simul-
taneously, which causes difﬁculty in optimizing. The lim-
ited performance of AS-GCN (86.1%) illustrates this prob-
lem and it demonstrates the effectiveness and efﬁciency of
our proposed way of message passing in turn. On the other
hand, it indicates that dense dependencies make it hard for
the net to overcome noise from those irrelevant ones.

With other ways of focusing and diffusion. For the fo-
cus stage, a latent transformer node ﬁrst passes the spatial
contextual information in a frame and then captures tem-
poral dynamics over frames for spatial-temporal contextual
information. This global context will be conveyed back to
each spatial skeleton graph in the diffusion stage. Two more
types of focus way, average and max-pool, are investigated
for proving the importance of attentive focus. Recognition
performances are shown in the last three lines of Tab.3.

It is observed that attentive focusing and diffusion can
signiﬁcantly improve performance. For the max-pool con-
ﬁguration, our BAGCN takes embedding features of max-
imum response node to initialize the latent node in each
frame and then captures temporal contextual information
between those maximum response nodes. This captured
spatial-temporal context is demonstrated useful in augment-
ing with the spatial node embedding for every frame, ow-
ing to the performance increased by 1.0% compared with
BAGCN (wo/F). However, It is not reasonable to only focus
on the maximum responsive node and ignore those phys-
ically associated or semantically associated joint nodes in
an action. Hence, we can ﬁnd that the other two conﬁgu-
rations bring higher performance improvement. The aver-
age focus way, denoted as BAGCN (avg), emphasizes the
mean statistics of the joint nodes’ response in every graph
convolutional layer and ﬁnally achieves 87.8%. Further,
BAGCN (att) leans dynamic spatial attention over graph
layers for each frame to selectively pass message forth and
back between informative joints. It leads to around 6% per-
formance gain compared with our baseline ST-GCN. This
attentive focusing and diffusion learns a sequence of la-
tent nodes to capture spatial and temporal contextual infor-
mation from implicit connections and allows spatial nodes
learn how much context should be used when updating node

Figure 5. Illustration of the associated joints with our learned latent
transformer node in three action samples. Actions from left to
right are reading, hand waving and face wiping, respectively. The
red points represent the informative joint nodes and activated joints
associated with speciﬁc action. The larger circle denotes more
informative and relative irrelevant joints are ignored in this ﬁgure.

embedding.

4.3.2 Latent Edge Visualization

Various actions my refer to activate different joints while
ignore the irrelevant ones. Fig.5 shows some action sam-
ples and their associated joints with our learned latent trans-
former node. We choose the last graph convolutional layer
to display the implicitly sparse dependencies between joint
nodes. The attention matrix Wf ∈ RT ×V measures the
informative degree of connections between the latent trans-
former node and joints nodes. In the attentive focusing, if
the value of Wvi
f is larger than 0.8, the connection between
latent and joint will be drawn. All the connected joints re-
ﬂects the activated joint nodes related to a certain action.

It can be seen that reading action, left part in Fig.5, refers
to hands and head joints, which agrees with the kinematic
dependency. The middle part in Fig.5 displays the informa-
tive joints in hand waving and the right part of Fig.5 illus-
trates action-speciﬁc related body parts in face wiping.

4.3.3 Temporal Context-aware or not

The latent node captures spatial contextual information in
a frame and passes its message back after node updating.
In this section, we evaluate the effect of temporal context-
aware module, which is used to extract the global context
in temporal dimension. First, we delete the context-aware
and then employ two different types of LSTM for model-
ing temporal dynamics. The conﬁguration of only learn-
ing a latent node with focusing and diffusion graphs ob-
tains the 86.6% classiﬁcation accuracy in Tab.4. Its perfor-
mance is only 0.2% higher than BAGCN (wo/F). In con-
trast, results in the last two lines demonstrates the power
of temporal context-aware module. BAGCN (1-Ca) rep-
resents one direction temporal context module achieving
87.3% and BAGCN (2-Ca) denotes bi-directional one can
obtain 89.4% recognition accuracy, a higher improvement.
These improvements validate the effectiveness and neces-

Table 4. Comparison of classiﬁcation performance with or without
Context-aware (Ca) on NTU-RGB+D validation dataset in Cross-
Subjects protocol

Methods

Accuracy

ST-GCN [39]
BAGCN (wo/F)
BAGCN (wo/Ca)

BAGCN (1-Ca)
BAGCN (2-Ca)

84.8%
86.4%
86.6%

87.3%
89.4%

Table 5. Comparison of classiﬁcation performance with spatial in-
formation, motion information and their fusion on NTU-RGB+D
validation dataset in Cross-Subjects and Cross-views protocols
and Skeleton-Kinetics in top-1,5 accuracies

Methods

X-Sub

X-View

Top-1

Top5

Spatial
Motion
Fusion

89.4%
86.3%
90.3%

95.6%
94.1%
96.3%

36.4%
31.8%
37.3%

58.9%
54.9%
60.2%

sity of capturing spatial-temporal contextual information
for action recognition.

4.3.4 Two-stream or not

Inspired by previous works [16, 17, 29], we test the supple-
mentary effect of motion information in our bidirectional
attentive graph convolutional network. We perform exper-
iments to train the spatial and motion branch separately
and then employ late fusion on NTU-RGB+D dataset in
Cross-Subjects and Cross-View protocols, which are shown
in Tab.5. From this table, it can be found that the spatial
branch achieves higher classiﬁcation performance than the
motion one while fusing them together can still improve the
accuracy from 89.4% to 90.3% in Cross-subject and 95.6%
to 96.3% in cross-view.

5. Conclusion

In this paper, we introduce a focusing and diffusion
mechanism to enhance the graph convolutional network for
receiving the information beyond the spatial and temporal
neighbors restrictions. Besides, we propose a context-aware
module to capture the global spatial-temporal contextual in-
formation for modeling implicit correlations between inter-
frame and intra-frame joints. We then develop a Bidirec-
tional Attentive Graph Convolutional Network (BAGCN) as
an exemplar. This graph-based model is enhanced with our
context-aware focusing and diffusion mechanism. Its supe-
rior performance is demonstrated on two public challeng-
ing skeleton-based action recognition benchmarks: NTU-
RGB+D and Skeleton-Kinetics.

References

[1] Joan Bruna, Wojciech Zaremba, Arthur Szlam, and Yann Le-
Cun. Spectral networks and locally connected networks on
graphs. arXiv preprint arXiv:1312.6203, 2013. 3

[2] Zhe Cao, Gines Hidalgo, Tomas Simon, Shih-En Wei,
and Yaser Sheikh. Openpose:
realtime multi-person 2d
pose estimation using part afﬁnity ﬁelds. arXiv preprint
arXiv:1812.08008, 2018. 6

[3] Yong Du, Wei Wang, and Liang Wang. Hierarchical recur-
rent neural network for skeleton based action recognition. In
Proceedings of the IEEE conference on computer vision and
pattern recognition, pages 1110–1118, 2015. 2, 6

[4] Basura Fernando, Efstratios Gavves, Jose M Oramas, Amir
Ghodrati, and Tinne Tuytelaars. Modeling video evolution
In Proceedings of the IEEE Con-
for action recognition.
ference on Computer Vision and Pattern Recognition, pages
5378–5387, 2015. 1, 7

[5] Tong He, Haibin Huang, Li Yi, Yuqian Zhou, Chihao Wu,
Jue Wang, and Stefano Soatto. Geonet: Deep geodesic net-
works for point cloud analysis. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 6888–6897, 2019. 1

[6] Tong He and Stefano Soatto. Mono3d++: Monocular 3d ve-
hicle detection with two-scale 3d hypotheses and task priors.
In AAAI, 2019. 1

[7] Mikael Henaff, Joan Bruna, and Yann LeCun. Deep convo-
lutional networks on graph-structured data. arXiv preprint
arXiv:1506.05163, 2015. 3

[8] Sepp Hochreiter and J¨urgen Schmidhuber. Long short-term
memory. Neural computation, 9(8):1735–1780, 1997. 5
[9] Mohamed E Hussein, Marwan Torki, Mohammad A
Gowayyed, and Motaz El-Saban. Human action recognition
using a temporal hierarchy of covariance descriptors on 3d
joint locations. In Twenty-Third International Joint Confer-
ence on Artiﬁcial Intelligence, 2013. 2

[10] Yu-Gang Jiang, Qi Dai, Wei Liu, Xiangyang Xue, and
Chong-Wah Ngo. Human action recognition in uncon-
IEEE Trans-
strained videos by explicit motion modeling.
actions on Image Processing, 24(11):3781–3795, 2015. 1

[11] Will Kay, Joao Carreira, Karen Simonyan, Brian Zhang,
Chloe Hillier, Sudheendra Vijayanarasimhan, Fabio Viola,
Tim Green, Trevor Back, Paul Natsev, et al. The kinetics hu-
man action video dataset. arXiv preprint arXiv:1705.06950,
2017. 1, 6

[12] Qiuhong Ke, Mohammed Bennamoun, Senjian An, Ferdous
Sohel, and Farid Boussaid. A new representation of skele-
ton sequences for 3d action recognition. In Proceedings of
the IEEE conference on computer vision and pattern recog-
nition, pages 3288–3297, 2017. 2, 6

[13] Tae Soo Kim and Austin Reiter. Interpretable 3d human ac-
tion analysis with temporal convolutional networks. In 2017
IEEE conference on computer vision and pattern recognition
workshops (CVPRW), pages 1623–1631. IEEE, 2017. 2, 6, 7
[14] Thomas Kipf, Ethan Fetaya, Kuan-Chieh Wang, Max
Welling, and Richard Zemel. Neural relational inference for
interacting systems. arXiv preprint arXiv:1802.04687, 2018.
3

[15] Thomas N Kipf and Max Welling. Semi-supervised classi-
ﬁcation with graph convolutional networks. arXiv preprint
arXiv:1609.02907, 2016. 3

[16] Chao Li, Qiaoyong Zhong, Di Xie, and Shiliang Pu.
Skeleton-based action recognition with convolutional neural
networks. In 2017 IEEE International Conference on Multi-
media & Expo Workshops (ICMEW), pages 597–600. IEEE,
2017. 2, 3, 6, 8

[17] Chao Li, Qiaoyong Zhong, Di Xie, and Shiliang Pu. Co-
occurrence feature learning from skeleton data for action
recognition and detection with hierarchical aggregation.
arXiv preprint arXiv:1804.06055, 2018. 2, 6, 8

[18] Maosen Li, Siheng Chen, Xu Chen, Ya Zhang, Yanfeng
Wang, and Qi Tian. Actional-structural graph convolutional
networks for skeleton-based action recognition. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 3595–3603, 2019. 2, 6, 7

[19] Yujia Li, Daniel Tarlow, Marc Brockschmidt, and Richard
arXiv

Zemel. Gated graph sequence neural networks.
preprint arXiv:1511.05493, 2015. 3

[20] Fang Liu, Xiangmin Xu, Shuoyang Qiu, Chunmei Qing, and
Dacheng Tao. Simple to complex transfer learning for ac-
tion recognition. IEEE Transactions on Image Processing,
25(2):949–960, 2015. 1

[21] Jun Liu, Amir Shahroudy, Dong Xu, and Gang Wang.
Spatio-temporal lstm with trust gates for 3d human action
recognition. In European Conference on Computer Vision,
pages 816–833. Springer, 2016. 2, 6

[22] Mengyuan Liu, Hong Liu, and Chen Chen. Enhanced skele-
ton visualization for view invariant human action recogni-
tion. Pattern Recognition, 68:346–362, 2017. 1, 2, 6

[23] Xingyu Liu,

, Charles R Qi, and Leonidas J Guibas.
Flownet3d: Learning scene ﬂow in 3d point clouds. Proc.
Computer Vision and Pattern Recognition (CVPR), IEEE,
2019. 1

[24] Ramin Mehran, Alexis Oyama, and Mubarak Shah. Ab-
normal crowd behavior detection using social force model.
In 2009 IEEE Conference on Computer Vision and Pattern
Recognition, pages 935–942. IEEE, 2009. 1

[25] Mathias Niepert, Mohamed Ahmed,

and Konstantin
Kutzkov. Learning convolutional neural networks for graphs.
In International conference on machine learning, pages
2014–2023, 2016. 3

[26] Charles R Qi, Hao Su, Kaichun Mo, and Leonidas J Guibas.
Pointnet: Deep learning on point sets for 3d classiﬁcation
and segmentation. In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition, pages 652–660,
2017. 1

[27] Charles Ruizhongtai Qi, Li Yi, Hao Su, and Leonidas J
Guibas. Pointnet++: Deep hierarchical feature learning on
point sets in a metric space. In Advances in neural informa-
tion processing systems, pages 5099–5108, 2017. 1

[28] Amir Shahroudy, Jun Liu, Tian-Tsong Ng, and Gang Wang.
Ntu rgb+ d: A large scale dataset for 3d human activity anal-
In Proceedings of the IEEE conference on computer
ysis.
vision and pattern recognition, pages 1010–1019, 2016. 1,
2, 5, 6, 7

[29] Lei Shi, Yifan Zhang, Jian Cheng, and Hanqing Lu.
Skeleton-based action recognition with directed graph neural
networks. In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition, pages 7912–7921,
2019. 2, 6, 7, 8

[30] Lei Shi, Yifan Zhang, Jian Cheng, and Hanqing Lu. Two-
stream adaptive graph convolutional networks for skeleton-
based action recognition. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
12026–12035, 2019. 2, 3, 6, 7

[31] Chenyang Si, Ya Jing, Wei Wang, Liang Wang, and Tieniu
Tan. Skeleton-based action recognition with spatial reason-
ing and temporal stack learning. In Proceedings of the Eu-
ropean Conference on Computer Vision (ECCV), pages 103–
118, 2018. 2, 6

[32] Sijie Song, Cuiling Lan, Junliang Xing, Wenjun Zeng, and
Jiaying Liu. An end-to-end spatio-temporal attention model
for human action recognition from skeleton data. In Thirty-
ﬁrst AAAI conference on artiﬁcial intelligence, 2017. 2, 6

[33] Khurram Soomro, Amir Roshan Zamir, and Mubarak Shah.
Ucf101: A dataset of 101 human actions classes from videos
in the wild. arXiv preprint arXiv:1212.0402, 2012. 1
[34] Lorenzo Torresani, Aaron Hertzmann, and Christoph Bre-
In
gler. Learning non-rigid 3d shape from 2d motion.
Advances in Neural Information Processing Systems, pages
1555–1562, 2004. 1

[35] Raviteja Vemulapalli, Felipe Arrate, and Rama Chellappa.
Human action recognition by representing 3d skeletons as
points in a lie group. In Proceedings of the IEEE conference
on computer vision and pattern recognition, pages 588–595,
2014. 1, 2, 6

[36] Jiang Wang, Zicheng Liu, Ying Wu, and Junsong Yuan.
Mining actionlet ensemble for action recognition with depth
cameras. In 2012 IEEE Conference on Computer Vision and
Pattern Recognition, pages 1290–1297. IEEE, 2012. 2
[37] Limin Wang, Yuanjun Xiong, Zhe Wang, Yu Qiao, Dahua
Lin, Xiaoou Tang, and Luc Van Gool. Temporal segment net-
works: Towards good practices for deep action recognition.
In European conference on computer vision, pages 20–36.
Springer, 2016. 1

[38] Zonghan Wu, Shirui Pan, Fengwen Chen, Guodong Long,
Chengqi Zhang, and Philip S Yu. A comprehensive survey
on graph neural networks. arXiv preprint arXiv:1901.00596,
2019. 1

[39] Sijie Yan, Yuanjun Xiong, and Dahua Lin. Spatial tempo-
ral graph convolutional networks for skeleton-based action
recognition. In Thirty-Second AAAI Conference on Artiﬁcial
Intelligence, 2018. 1, 2, 3, 5, 6, 7, 8

[40] Kiwon Yun,

Jean Honorio, Debaleena Chattopadhyay,
Tamara L Berg, and Dimitris Samaras. Two-person interac-
tion detection using body-pose features and multiple instance
In 2012 IEEE Computer Society Conference on
learning.
Computer Vision and Pattern Recognition Workshops, pages
28–35. IEEE, 2012. 1

