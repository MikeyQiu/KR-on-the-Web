6
1
0
2
 
l
u
J
 
6
2
 
 
]

V
C
.
s
c
[
 
 
2
v
9
7
2
4
0
.
4
0
6
1
:
v
i
X
r
a

Learning Visual Storylines with Skipping
Recurrent Neural Networks

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Carnegie Mellon University
github.com/gsig/srnn

Abstract. What does a typical visit to Paris look like? Do people ﬁrst
take photos of the Louvre and then the Eiﬀel Tower? Can we visually
model a temporal event like “Paris Vacation” using current frameworks?
In this paper, we explore how we can automatically learn the temporal
aspects, or storylines of visual concepts from web data. Previous at-
tempts focus on consecutive image-to-image transitions and are unsuc-
cessful at recovering the long-term underlying story. Our novel Skipping
Recurrent Neural Network (S-RNN) model does not attempt to predict
each and every data point in the sequence, like classic RNNs. Rather,
S-RNN uses a framework that skips through the images in the photo
stream to explore the space of all ordered subsets of the albums via an
eﬃcient sampling procedure. This approach reduces the negative impact
of strong short-term correlations, and recovers the latent story more ac-
curately. We show how our learned storylines can be used to analyze,
predict, and summarize photo albums from Flickr. Our experimental re-
sults provide strong qualitative and quantitative evidence that S-RNN
is signiﬁcantly better than other candidate methods such as LSTMs on
learning long-term correlations and recovering latent storylines. More-
over, we show how storylines can help machines better understand and
summarize photo streams by inferring a brief personalized story of each
individual album.

1 Introduction

In the past few years, there has been a remarkable success in learning visual con-
cepts [1, 2] and relationships [1, 3] from images and text on the web. In theory,
this allows the creation of systems that, given enough time and resources, can
grow to know everything there is to learn. However, most of these approaches
are still largely centered around single images and focus on learning static se-
mantic relationships such as is-part-of [1], is-eaten-by [3] etc. Moreover, many
semantic concepts have not only a visual aspect but also a temporal aspect or
even storylines associated with them. For example, a visual representation of
Wedding would involve guests entering the venue, followed by exchange of rings
and ﬁnally celebrations in the wedding reception. How can we learn such visual
storylines from the web as well?

There are two aspects to these storylines: the visual aspect, often represented
by modes in visual appearances, and the temporal aspect, which is the temporal

2

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 1. Given a concept, our algorithm can automatically learn both its visual and
temporal aspect (storylines) from the web. To do this, we retrieve related albums
from Flickr and apply our S-RNN model to automatically discover long-term temporal
patterns. Here is a visualization of the storylines the model learned for the concept
Paris. For visualization, we distill the top images that a trained S-RNN model prefers
by sampling storylines from a Paris photo album. Denoting the images as nodes in a
graph, we visualize the most common pairwise transitions using arrowed lines. On the
right, we sample three probable storylines (A,B,C) that include these 10 images. We
can see that the Eiﬀel Tower is prominent early in the story followed by sightseeing of
common landmarks (Arc de Triomphe and others) and ﬁnally visiting the Lourve. On a
map of Paris, the Eiﬀel Tower and the Arc de Triomphe are indeed in close proximity

order in which these modes appear. How do we capture both of these aspects
from the web data? User photo albums in Flickr are a perfect example of web
data that capture both aspects. First, most Flickr images are supplied with
suﬃciently informative tags, like Paris [4]. Second, meta-information like time
is usually available. In particular, the photos in each album are taken in ordered
sequences, which hypothetically embed common storylines for concepts such as
Paris. Therefore, we propose to utilize Flickr photo streams across thousands
of users and learn underlying visual storylines associated with these concepts.
What is the right representation for these storylines and how do we learn it?

Recently, there has been momentous success in using CNN [5] features along
with Recurrent Neural Networks [6–11] (RNNs) to represent those temporal dy-
namics in data [12–19]. We aim to extend that idea to modeling the dynamics
in storylines. In theory, RNN can model any sequence, but has limited mem-
ory in practice, and can only learn short-term relationships due to vanishing
gradients [20].

Our Skipping Recurrent Neural Network (S-RNN) skips through the photo
sequences to extract the common latent stories, instead of trying to predict each
and every item in the sequence. This eﬀectively alleviates the artifacts of short-

Learning Visual Storylines with Skipping Recurrent Neural Networks

3

Fig. 2. Given a concept, such as Wedding, our algorithm can retrieve an ordered collec-
tion of images to describe that concept (Sec. 4.3). In this ﬁgure we show the collections
discovered by our model for two concepts. For example, for Wedding (ﬁrst row), it
picks images that represent four steps: guests enter; ceremony begins, marriage and
celebration. For travel-related concepts like London, it prefers iconic landmarks for the
story. The subtitles are manually provided for visualization. This is distilled from 1000
photo albums. More examples are provided in the appendix.

term correlations1 (e.g. repetition) between consecutive photos in the stream,
and focuses the learning eﬀort towards the underlying story. This solution is
complementary to, and diﬀerent from, more complex RNN architectures such as
LSTMs [21] that still focus on learning transitions between consecutive images.
Similar to clustering, the S-RNN model can be eﬃciently trained in an unsuper-
vised manner to learn a global storyline and infer a private story for each album.
Diﬀerent from most clustering techniques, S-RNN inherits the power of RNNs
that can capture the temporal dynamics in the data.

We evaluate the eﬀectiveness of our storyline model by comparing the story-
lines with baselines. In addition we evaluate the storyline model on two applica-
tions: a) image prediction [22, 23]; and b) photo album summarization [24–27].
Constructing a convincing storyline for a concept of interest requires both visual
and temporal aspects. Therefore, algorithms need to retrieve a diverse collection
of images, with the right ordering among them. For image prediction, we show
that our model is particularly suited for discovering the long-term correlations
buried under the short-term repetitions in Flickr albums, while other approaches
do not. Finally in the summarization task, the goal is to take images in a single
photo album and select a small summary of those. A typical example is a series
of photos, taken by a family on their visit to Paris, visiting all the iconic land-
marks, such as the Eiﬀel Tower. Classically, summarization is approached by
collecting a dataset of videos/albums and their associated summaries generated
by people [26, 28–31], in order to learn how to make a summary in a supervised
way. This process is, however, considerably laborious. In this work, we speciﬁ-

1 In our Flickr dataset, 71.1% of consecutive images are above average (cosine) simi-

larity.

4

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 3. Given an individual photo album, our algorithm can summarize the photo
album with a ordered collection of images that capture the album in terms of its
underlying concept, by ﬁrst learning about the concept from thousands of albums.
(Sec. 4.5). In this ﬁgure we show the summaries generated for three photo albums.
One about a Safari, the second about Scuba Diving, and the third Snowboarding. More
examples are provided in the appendix.

cally experiment with the hypothesis that a quality summary of an album can
be constructed by exploiting the similarities across thousands of similar albums
(e.g. Paris). Then a summary of the album is inferred by telling a personalized
version of the story.
Contributions. a) We present a new way of approaching sequence modeling
with RNNs, by exploring all ordered subsets of the data to avoid short-term cor-
relations between consecutive elements in the sequence. b) We present the novel
S-RNN architecture that eﬃciently implements this idea on web-scale datasets.
c) We demonstrate that this method can learn visual storylines for a concept
(e.g. Paris) from the web, by showing state-of-the-art results on selecting repre-
sentative images, long-term image prediction, and summarizing photo albums.

2 Related Work

Learning storylines. The earliest form of storyline can be traced back to the
1970-80s, where scripts [32] (structured representations of events, causation re-
lationships, participants, etc.) are used as knowledge backbones for tasks like
text summarization and question answering. Unfortunately, these rich knowledge
structures require hand construction by the experts, which fundamentally limits
their usage in an open domain. This motivates the recent developments of unsu-
pervised approaches that can learn underlying storylines automatically [33, 34]
from text. Inspired by this idea, our work aims to acquire the temporal aspect of
a concept automatically from images. Similar work in vision is limited by either
the scale of the data [29,35] or the domain to which the approach is applied [36].
Perhaps the most similar work is [22, 23], where the storyline graphs are learned
for Flickr albums. However, our work diﬀers in several important aspects. First,
while [22] is an important step in learning storylines, it focuses its learning ef-
fort on each and every pairwise transition, but our method learns the long-term
latent story. In fact, [22] could be extended using this framework, but here we

Learning Visual Storylines with Skipping Recurrent Neural Networks

5

extend a standard RNN model. Second, our method requires no a-priori clus-
tering, feature independence, nor a Markov assumption, and does parameters
sharing like RNNs.
Temporal visual summarization. Summarizing video clips is an active area
of research [37]. Many approaches have been developed seeking cues ranging from
low-level motion and appearances [24, 25, 38] to high level concepts [26, 39] and
attentions [40]. This line of research has been recently extended to photo albums,
and more external factors are considered for summarization besides the narrative
structure. For example, in [41] the authors put forward three criteria: quality,
diversity, and coverage. Later, in [42] a system is proposed that considers the
social context (e.g. characters, aesthetics) into the summarization framework.
Sadeghi et al . [28] also consider if a photo is memorable or iconic. Moreover,
most of these approaches are supervised, namely the associated summaries for
videos/albums are ﬁrst collected by crowd-sourcing, then a model is learned to
generate good summaries. While performance-wise it may seem best to leverage
human supervision and external factors when available, practically it suﬀers
serious issues like scalability and inconsistency in the ground-truth collection
process, and generalizablility when applied to other domains. On the other hand,
the task of summarization will be less ambiguous if the concept is given, which
is exactly what we want to explore in this work.
Sequential learning with RNNs. Recurrent neural networks [6] are a sub-
set of neural networks that can carry information across time steps. Compared
to other models for sequential modeling (e.g. hidden Markov models, linear dy-
namic systems), they are better at capturing the long-range and high-order time-
dependencies, and have shown superior performance on tasks like language mod-
eling [43] and text generation [44]. In this work we extend the network to model
high dimensional trajectories in videos and user albums through the space of
continuous visual features. Interestingly, since our network is trained to predict
images several steps away, it can be viewed as a simple and eﬀective way to learn
long term memories [21] and predict context [45] as well. Fundamentally, LSTM
still looks at only the next image and decides if it should be stored it in memory,
but S-RNN reasons over all future images, and decides which it should store
in memory (greedy vs. global). We outperform multiple LSTM baselines in our
results. Furthermore, running LSTMs directly on high-dimensional continuous
features is non-trivial, and we present a network that accomplishes that.

3 Learning Visual Storylines

Given hundreds of albums for a concept, our goal is to learn the underlying visual
appearances and temporal dynamics simultaneously. Once we have learned this
by building upon state-of-the-art tools, we can use it for multiple storyline tasks,
and distill the explicit knowledge as needed, such as in Fig. 1. In this section, we
explain our novel S-RNN architecture that is trained over all ordered subsets of
the data, and show that this can be accomplished with update equations equally
eﬃcient to original RNN. The full derivation of these update equations by using

6

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

the EM-method is presented in the appendix. We formulate the storyline learning
problem as learning an S-RNN. To understand S-RNN, we start by introducing
the basic RNN model.

3.1 Recurrent Neural Networks

The basic form of RNN [6] models a time sequence by decomposing the proba-
bility of a complete sequence into sequentially predicting the next item given the
history (in our application, this sequence is images in a temporal order). Given a
sequence of T images x1:T = {x1, . . . , xT },2 the network is trained to maximize
the log-likelihood:

M∗ = arg max

log P(x1:T ; M) − λR(M)

M

where log P(x1:T ; M) =

log P (xt+1|x1:t; M).

(1)

(cid:88)

t

Here M is the set of all model parameters, and R(·) is the regularizer (e.g. (cid:96)2).
The probability P(·|·, ·) is task dependent, e.g. for language models it directly
compares the soft-max output yt with the next word xt+1 [43]. The standard
optimization algorithm for RNNs is Back Propagation Through Time [46, 47]
(BPTT), a variation of gradient ascent where the gradient is aggregated through
time sequences.

The model consists of three layers: input, recurrent, and output. The input
layer uses the input xt to update the hidden recurrent layer ht using weights
WI . The recurrent layer ht updates itself via WR and predicts the output yt
via weights WO. The update function at step t writes as follows:

ht = σ (WI xt + WRht−1) ;

yt = ζ(WOht).

(2)

Here σ(·) and ζ(·) are non-linear activation functions, e.g. sigmoid, soft-max,
rectiﬁed linear units [5], etc. All the history in RNN is stored in the memory ht.
This assumes conditional independence of xt+1 and x1:t given ht.

In practice, the recurrent layer ht has limited capacity and the error cannot
be back propagated eﬀectively (due to vanishing gradients [20]). This can be a
critical issue for modeling sequences like photo streams—due to the high cor-
relation between consecutive images, where the dominant pattern in the short
term is repetition. For example, people can take multiple pictures of the same
object (e.g. the Eiﬀel Tower or family members), or the entire album is about
things that are visually similar (e.g. artwork in the Louvre or ﬁreworks). This
pattern is so salient that if an RNN is directly trained on these albums, the
signals of underlying storylines are largely suppressed. How to resolve this issue
of learning long-term patterns? One way is to regularize RNN with a diversity
term [41]. However, note that if an album is indeed single-themed, we still want
visually similar images in the storyline. Furthermore, Flickr tags are not perfect
and noise in the album set can easily distract the model.

2 For simplicity in notation, we assume a single training sequence, but in our experi-
ments we use multiple albums for one concept to discover common latent storylines.

Learning Visual Storylines with Skipping Recurrent Neural Networks

7

3.2 Skipping Recurrent Neural Networks

We now build upon the RNN framework to propose a skipping recurrent neural
network model. Instead of learning each consecutive transition, S-RNN chooses
to learn a “higher-level” version of the story, and focuses its learning eﬀort
accordingly. The key underlying idea is to select the storyline nodes by skipping
a lot of images in the album and then modeling the transitions between the
images selected as nodes.

Formally, let us suppose x1:T represents the T images in the album, z1:N
is the set of indexes that represent the selected images for the storyline and
the constant N is the number of nodes in the storyline. Note that N (cid:28) T ,
zn ∈ {1, 2, . . . , T }, and zn < zn+1 since z deﬁnes an ordered subset. Our goal
is to learn the maximum likelihood model parameters (M) by maximizing the
marginal likelihood of the observed data. Therefore, our objective function is:

M∗ = arg max

log

P(x1:T , z1:N ; M) − λR(M).

(3)

M

(cid:88)

z1:N

We can factorize P(x1:T , z1:N ; M) as P(x1:T |z1:N ; M)P(z1:N ) where P(z1:N )
is a prior on z. As described above, we use a simple prior on z that it is an
ordered subset. In this work, we make an assumption that the likelihood of
a whole album is proportional to the likelihood of the selected sub-sequence
of images xz (that is, we assume P(x1:T |z; M) ∝ P(xz; M)). Factorizing, and
inserting this assumption into Eq. 3 we have:

M∗ = arg max

log

M

(cid:32)

(cid:88)

(cid:89)

z1:N

n

P (cid:0)xzn+1|xz1:n ; M(cid:1)

P(z1:N ) − λR(M).

(4)

(cid:33)

We observe that this equation is starting to look similar to standard RNN (Eq. 1).

Maximizing the S-RNN Objective Maximizing the marginal likelihood over
all possible subsets of z is computationally intractable. Therefore, we make use of
the Expectation Maximization (EM) algorithm, and then sequentially factor the
update equations. More details of the EM derivation are given in the appendix.
During the E-step, we sample z given the current model, and use that to train
the model in the M-step, as we would an RNN. We initialize the EM-algorithm
by setting z based on a randomly ordered subsets of images.

S-RNN Implementation Details Now that we know how to optimize the
objective, the only design choice left is the loss P (cid:0)xzn+1|xz1:n; M(cid:1) (the data
likelihood in Eq. 4). While Gaussian likelihood is often used for real-valued
regression, we recognize that the space of allowed future images is not inﬁnite,
but simply images after xzn , deﬁned as Xn. Thus the likelihood is deﬁned as a
softmax likelihood over the future images:

P (cid:0)xzn+1|xz1:n ; M(cid:1) =

exp(yT

(cid:80)

x∈Xn

n xzn+1)
exp(yT

n x)

(5)

8

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 4. Our S-RNN model (unrolled in time). Instead of trying to predicting each and
every photo in the sequence (as in the basic RNN model), latent variables zn are
introduced into our model to skip through the photo sequences, which is an eﬀective
strategy to address the local repetition issue (multiple pictures are taken for a single
object like the Eiﬀel Tower) and can help extract common latent stories in the entire
set of albums related to a concept (e.g. Paris). To overcome the high-dimensional
regression problem, the loss is an softmax loss over future images

where yn is the output of the network after step n. Eﬀectively, this avoids mod-
eling the negative world as “everything except the ground truth” and instead
models the negative world as “other possible choices”. This signiﬁcantly helps
with high-dimensional data (f c7 features), since the possible image choices in
an album are usually only few hundred, but visual features few thousand.

In summary, during training and testing, z is sequentially sampled using the
current model (which skips through the sequence), and during training those
samples used to sequentially update the network with BPTT to maximize the
objective. A visualization of the idea can be found in Fig. 4. A full implementa-
tion of is available.

4 Experiments

Since there has been so little done in the area of learning storyline models and
their applications, there are no established datasets, evaluation methodologies,
or even much in terms of relevant previous work to compare against. There-
fore, we will present our evaluation in two parts: (a) ﬁrst, in Section 4.3, we
directly evaluate how “good” our learned storyline model is. Speciﬁcally, we ask
the Amazon Mechanical Turk (AMT) users how good our storyline model is
compared to a baseline in terms of the representativeness and the diversity of
image nodes in the storyline model; (b) next, in Section 4.4 and Section 4.5,
we evaluate our storyline model for two applications: long-term prediction and
album summarization. For these tasks, we show qualitative, quantitative, and
user studies to demonstrate the eﬀectiveness of S-RNN based storyline model.
We begin by describing our data collection process and the baselines.

Learning Visual Storylines with Skipping Recurrent Neural Networks

9

4.1 Flickr Albums Dataset

We gather collections of photo albums by querying Flickr through the YFCC100M
dataset [48], a recently released public subset of the Flickr corpus containing
99.3 million images with all the meta-information like tags and time stamps.
This dataset is an unreﬁned subset of images on Flickr, making it a reproducible
way of working with web data. The selection process gathers at most 1000 photo
albums for a single concept (e.g. Paris), with an average size of 150 images.
Each album is sorted based on a photo’s date taken. We experimented with
seven concepts: Christmas, London, Paris, Wedding, Safari, Scuba-diving, and
Snowboarding with a total number of 700k images. Examples from the dataset
are provided in the appendix. This subset will be made available.

4.2 Implementation Details

We compare our S-RNN model with several approaches to demonstrate its ef-
fectiveness in learning visual storylines. For fairness, all the methods used the
same fc7 features from AlexNet [5] pre-trained on ImageNet.

For S-RNN, the fc7 features are directly fed into the model. The network is
trained with BPTT, which unrolls the network, and uses gradient ascent with a
momentum of 0.9. We set the starting learning rate as 0.05, and gradually reduce
it when the likelihood on the validation set no longer increases. The input size
of the layer is set to 4096 (size of fc7 ), and the hidden recurrent layer size 50.
We keep N = 10 for all the concepts as a good compromise between content and
brevity (The appendix contains analysis of diﬀerent sizes of N). We choose (cid:96)2
regularization and set weight decay λ to be 10−7. Training takes approximately
2-3 hours on a single CPU. Each story was generated by sampling from the
model 500 times, and picking the sampled sequence with the highest likelihood.
The code is available at github.com/gsig/srnn.

Below we list the main baselines, and note that additional baselines will be

added for individual experiments when necessary.
Sample. We uniformly sample from the data distribution.
K-Means. To take advantage of the global storylines shared in a concept, we
apply K-Means to all the albums (similar to the ﬁrst step of [22] except with
diﬀerent features).
Graph. We adapted the original code for [22] to use fc7 features. Then a sto-
ryline is generated with the forward-backward algorithm as described in [22].
RNN. This architecture is similar to a language model [43] except it predicts
the cluster (as in K-Means) of the next image. We sample without replacement
to generate the story. This is a standard application of RNN to the problem.
LSTM. We train an LSTM network [49], similar to the RNN baseline.
LSTMsub. LSTM trained as before, but when generating the summary, we ﬁrst
generate a longer sequence (N = 100) and then sub-sample that sequence to the
desired summary length 10. Intuitively, if LSTM was indeed able to learn the
long-term correlations regardless of the repetitions, this should perform well.

10

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

S-RNN-. For ablation analysis, we also provide a baseline where we use the
network without skipping, but with the softmax loss over future images. All
the hyper-parameters for training are kept identical to our model except the
network predicts each and every item in the sequence. This is similar to RNN,
but beneﬁts from our improved loss.
D-RNN Similar to S-RNN-, except trained on a diverse subset of each album
using the k-means++ algorithm [50]. This was signiﬁcantly better than other
variants, including training on random subsets, ﬁxed interval subsets, or a ran-
dom diverse subset.

4.3 Evaluating Storylines

In the ﬁrst experiment, we directly evaluate how “good” the learned storyline
model is for a given concept. We deﬁne the goodness of a storyline model in terms
of how representative and diverse the selected images are for a given concept.
Two qualitative examples for Wedding and London are shown in Fig. 2. Fig. 5
shows more examples of learned storylines for diﬀerent concepts. Our storyline
model captures the essence of scuba-diving, snowboarding, etc., by capturing
representative and diverse images (e.g., beer, fun and snowboarding during day).
Setup. For each concept, we have each method select only 10 images from
50 photo albums (thousands of photos) that best describe the concept, and
AMT workers select which one they prefer. Each algorithm has access to the
full training data to train the model. For Graph and RNN-based baselines, we
sample multiple times from each album and use the highest ranked collection in
terms of likelihood. Sample and K-Means are simply applied on all images, and
in K-Means we assign the closest image to each cluster center. The appendix
contains more qualitative examples.
Results. Table 1 summarizes the results. Each comparison was given to 15
separate AMT workers. We can see that S-RNN is preferred 60% of the time
against the strongest baseline across all the concepts. Diﬀerent baselines fail
in diﬀerent ways. For example, Sample and K-Means can capture a diverse set
of images to represent the concept, but are prone to the inherent noise in the
Flickr albums. On the other hand, Graph and LSTM overﬁt to the short-term
correlations in the data and select repetitive images. Finally, S-RNN outperforms
D-RNN since S-RNN is not restricted to a single speciﬁc diversity method as in
D-RNN.

4.4 Task1: Prediction

Next, we evaluate our storyline models for two applications. The ﬁrst applica-
tion we consider is the prediction task. There are two possible prediction goals:
short-term prediction and long-term prediction. Short-term prediction can be
considered as prediction of the next image in the album. This was the task used
in [22, 23]. In the case of long-term prediction, we predict the next representa-
tive event. In the case of Paris vacation, if the current event is Eiﬀel tower, the
next likely event would be visiting the Trocadero. In the case of Wedding, if the

Learning Visual Storylines with Skipping Recurrent Neural Networks

11

Table 1. Evaluating Storylines. Fraction of the time our S-RNN storylines are preferred
against competing baselines. 50% is equal preference. Our method signiﬁcantly outper-
forms the baselines, being preferred 60% of the time against the strongest baseline.
See Section 4.3 for details

K-Means Sample Graph LSTM LSTMsub D-RNN RNN S-RNN-

S-RNN 71.2%

68.3% 79.8% 84.3%

70.9%

60.0% 85.1% 75.5%

Fig. 5. Evaluating Storylines. Images selected by S-RNN for three storylines from thou-
sands of images for the concepts Safari, Scuba Diving, and Snowboarding

current event is the ring ceremony, then the next representative event is the kiss
of the newlyweds.
Setup. For the short-term prediction, the ground-truth is the next image in the
album. But how do we collect ground-truth for long-term prediction? We ask
experts to summarize the albums (hoping that album summaries will suppress
short-term correlations and capture only representative events). Now we can
reformulate long-term prediction as predicting the next image in the human-
generated summary of the album. We collected 10 ground truth summaries on
average for each concept from volunteers familiar with the concepts (such as
Paris, and London). Each summary consists of 10 images from a photo album
that capture what the album was about. This was used as ground truth only
for evaluation. Two settings are compared, the ﬁrst one (labeled “long-term”)
predicts the next image in a summary (N =198 over 10 folds each); and the
second one (labeled “short-term”) predicts the next image in the original photo
album (N =1742). The problem is posed as a classiﬁcation task choosing from the
true image, and four other images selected uniformly at random from the same
album. Here we also consider NN that simply picks the nearest neighbor, and
FI that picks the furthest image from the given image, both in cosine distance
of fc7 features. K-Means is not suitable for this task since it does not include
temporal information. All methods were trained in an unsupervised manner for
each concept as before.
Results. In Fig. 6 we present results for the prediction of the next image. When
we consider long-term interactions between images, S-RNN successfully predicts

12

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 6. Predicting the next image. S-RNN is best at capturing long-term correlations,
and nearest-neighbors is best at capturing short-term correlations, as expected

Fig. 7. Long-term prediction. Examples of the images predicted by our method com-
pared to baselines. The image is chosen from a line-up of ﬁve images from the same
album (generated by experts as summaries). We see our method captures Santa→Tree
and Closed Presents→Open Presents while the baselines focus on similar images

the next image in the storyline 31% of the time, signiﬁcantly higher than base-
lines. On the other hand, we can see that when we simply want to predict con-
secutive images, NN is the best. To further visualize the results for “long-term”
correlations, we also give example comparisons with baseline methods in Fig. 7.

4.5 Task2: Photo Album Summarization

In the ﬁnal experiment, we evaluate on the task of album summarization. In
particular, we focus on summarizing an individual album based on the concept
(e.g. a Paris album), rather than heuristics such as image quality or presence of
faces [28, 41, 42]. This experiment addresses the question whether storylines can
help to summarize an album.
Human Generated Summaries. Photo album summarization is inherently a
subjective and diﬃcult task. To get a sense of the diﬃculty, we ﬁrst compared
the human summaries (used in Sec. 4.4) to baselines with a separate AMT
preference study. We had two ﬁndings. First, for some concepts, such as Wedding,

Learning Visual Storylines with Skipping Recurrent Neural Networks

13

Fig. 8. Examples of summaries generated by our method and two representative base-
lines for Scuba-diving and Snowboarding. In the Scuba-diving example Local aims to
capture diversity, and thus our method is more relevant. In Snowboarding, LSTM fo-
cuses on short-term correlations, and chooses many similar images, while our method
eﬀectively captures the album

the albums are frequently already summaries by professional photographers,
and thus generating summaries is trivial. Speciﬁcally, there is no signiﬁcant
diﬀerence between human generated summaries and uniformly sampling from
the data distribution (Sample). We thus only evaluate on concepts where there
is signiﬁcant diﬀerence between human generated summaries and ones generated
by baselines. Second, we found human generated summaries are only preferred
59.5% of the time against the strongest baseline.
Setup. The photo albums for a given concept are randomly divided into a train-
ing set and a validation set with a ratio of 9:1, and no ground truth summaries
were provided. We additionally consider the baseline Local where K-Means clus-
tering is used for summarization by applying clustering on fc7 features for each
individual album. As before, we assign the closest image to the cluster center
for clustering-based methods. While it is not required for S-RNN, we sort the
selected photos in temporal order as a post-processing step for all the baselines
when necessary for fair comparison.
Qualitative Results. The results for a few concepts are presented in Fig. 8. We
can see that S-RNN captures a set of relevant images without losing diversity.
In contrast, Local captures only diversity, and LSTM that tries to learn short-
term correlations between consecutive images, and as result often prefers similar
images in a row. Additional summaries by S-RNN are presented in Fig. 3.
Quantitative Evaluation. To directly compare the quality of the generated
summaries, another AMT preference study was conducted. For S-RNN and each
baseline, 200 random pairwise comparisons were generated. Each question was
given to 5 separate workers for consistency. We used a consensus approach where
a comparison gets a score of 1 if there is a tie, or a score of 2 if there is consensus.
In Fig. 9 we present comparison with the baselines. We can see that on av-
erage our method is preferred over all the baselines. To provide a more detailed
analysis, we divide the baseline methods into two groups: the Storyline group
(ﬁlled with pure colors) that captures the latent temporal information in the
data, and the Non-Storyline group (ﬁlled with patterns) that do not. The Story-

14

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 9. Photo album summarization. AMT pairwise preference between our method
and multiple baselines. 70% means that summaries by our method were preferred 70%
of the time. It is important to keep in mind that compared to the strongest baseline, a
human generated summary was on average only preferred 59.5% of the time. Sec. 4.5
contains a detailed explanation of the experiment setup and analysis of the results

line group includes Graph, RNN, LSTM, LSTMSub, and S-RNN- (Our method
also falls into this group), while the Non-Storyline group has K-Means, Local
and Sample. There are few interesting points:

1. S-RNN performs relatively better on travel-related albums (Paris, London)
suggesting it is easier to latch onto landmarks than high-level concepts like
in Christmas.

2. For concepts like Christmas, methods that learn short-term correlations from
the data distribution are still preferred by the users. The fact that S-RNN-
outperforms LSTMs and RNNs, can be interpreted as follows. RNNs suﬀer
from the curse of dimensionality if naively applied to storyline learning, but
the S-RNN loss reduces the dimensionality of the output space by an order
of magnitude (4096 to 100s).

3. While simple as they seem, Local and Sample are very competitive baselines.
We believe the reason is that Local aims to provide a diverse set of images
from each album, and Sample is representative of the underlying data. There-
fore, with the post-processing step that re-arranges the selected images in
temporal order, these methods can do well on good albums. However, they
do poorly when the album is noisy, as illustrated in Fig. 8 ﬁrst example.

Does Time Information Help Summarization? For further analysis, we
compared the described S-RNN with S-RNN trained on shuﬄed data (ordering
discarded) with a preference study on AMT. S-RNN using the time information
was preferred 68.4% over S-RNN without time information, demonstrating that
the time information signiﬁcantly helps to generate a summary liked by people.
Transferring storyline knowledge. Each album can have diﬀerent stories and
themes. In Figure 10 we present two diﬀerent summaries of two photo albums.
The ﬁrst album is a Scuba Diving album, and the ﬁrst summary from that album
is generated with the model trained on Scuba Diving albums. In the second row,
the same album is summarized using a model trained on Wedding albums. We
can see that this emphasizes scenic beach pictures reminiscent of a beach resort
wedding. The second album is a Paris album, and the ﬁrst summary is generated
using Paris model. The second summary however, is generated using a Christmas

Learning Visual Storylines with Skipping Recurrent Neural Networks

15

Fig. 10. The ﬁrst two rows show a Scuba Diving album summarized with a Scuba
model and a Wedding model, and the last two show a Paris album summarized with a
Paris model and a Christmas model. The Wedding story emphasizes the beach resort
images of the Scuba album, and the Christmas story emphasizes the churches and
sparkling lights images in the Paris album

model, and we can see that this emphasizes pictures of churches and sparkling
lights at night.

5 Conclusion

We have presented an approach to learn visual storylines for concepts auto-
matically from the web. Speciﬁcally, we use Flickr albums and train an S-RNN
model to capture the long-term temporal dynamics for a concept of interest. The
model is designed to overcome the challenges posed by high correlations between
consecutive photos in the album if sequence predictors are directly applied. We
evaluate our model on learning storylines, image prediction and album summa-
rization, and show both qualitatively and quantitatively that our method excels
at both extracting salient visual signals for the concept, and learning long-term
storylines to capture the temporal dynamics.

6 Acknowledgements

This research was supported by the Yahoo-CMU InMind program, ONR MURI
N000014-16-1-2007, and a hardware grant from Nvidia. The authors would like
to thank Olga Russakovsky and Christoph Dann for invaluable suggestions and
advice, and all the anonymous reviewers for helpful advice on improving the
manuscript.

16

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

References

1. Chen, X., Shrivastava, A., Gupta, A.: NEIL: Extracting visual knowledge from

web data. In: ICCV. (2013) 1

2. Divvala, S.K., Farhadi, A., Guestrin, C.: Learning everything about anything:

Webly-supervised visual concept learning. In: CVPR. (2014) 1

3. Sadeghi, F., Divvala, S.K., Farhadi, A.: VisKE: Visual knowledge extraction and
question answering by visual veriﬁcation of relation phrases. In: CVPR. (2015) 1
4. Izadinia, H., Farhadi, A., Hertzmann, A., Hoﬀman, M.D.: Image classiﬁcation and

retrieval from user-supplied tags. arXiv preprint arXiv:1411.6909 (2014) 2

5. Krizhevsky, A., Sutskever, I., Hinton, G.E.:

Imagenet classiﬁcation with deep

convolutional neural networks. In: NIPS. (2012) 2, 6, 9

6. Elman, J.L.: Finding structure in time. Cognitive science 14(2) (1990) 179–211 2,

5, 6

7. Malinowski, M., Rohrbach, M., Fritz, M.: Ask your neurons: A neural-based ap-

proach to answering questions about images. In: ICCV. (2015) 1–9 2

8. Shih, K.J., Singh, S., Hoiem, D.: Where to look: Focus regions for visual question

answering. arXiv preprint arXiv:1511.07394 (2015) 2

9. Yang, Z., He, X., Gao, J., Deng, L., Smola, A.: Stacked attention networks for

image question answering. arXiv preprint arXiv:1511.02274 (2015) 2

10. Zhu, Y., Groth, O., Bernstein, M., Fei-Fei, L.: Visual7w: Grounded question an-

swering in images. arXiv preprint arXiv:1511.03416 (2015) 2

11. Xiong, C., Merity, S., Socher, R.: Dynamic memory networks for visual and textual

question answering. arXiv preprint arXiv:1603.01417 (2016) 2

12. Karpathy, A., Li, F.: Deep visual-semantic alignments for generating image de-

scriptions. arXiv preprint arXiv:1412.2306 (2014) 2

13. Donahue, J., Hendricks, L.A., Guadarrama, S., Rohrbach, M., Venugopalan, S.,
Saenko, K., Darrell, T.: Long-term recurrent convolutional networks for visual
recognition and description. CVPR (2015) 2

14. Vinyals, O., Toshev, A., Bengio, S., Erhan, D.: Show and tell: A neural image

caption generator. CVPR (2015) 2

15. Venugopalan, S., Rohrbach, M., Donahue, J., Mooney, R.J., Darrell, T., Saenko,
K.: Sequence to sequence - video to text. arXiv preprint arXiv:1505.00487 (2015)
2

16. Xu, K., Ba, J., Kiros, R., Courville, A., Salakhutdinov, R., Zemel, R., Bengio,
Y.: Show, attend and tell: Neural image caption generation with visual attention.
arXiv preprint arXiv:1502.03044 (2015) 2

17. Gregor, K., Danihelka, I., Graves, A., Wierstra, D.: Draw: A recurrent neural

network for image generation. arXiv preprint arXiv:1502.04623 (2015) 2

18. Zhu, Y., Kiros, R., Zemel, R., Salakhutdinov, R., Urtasun, R., Torralba, A., Fidler,
S.: Aligning books and movies: Towards story-like visual explanations by watching
movies and reading books. In: arXiv preprint arXiv:1506.06724. (2015) 2

19. Chen, X., Zitnick, C.L.: Learning a recurrent visual representation for image cap-

tion generation. CVPR (2015) 2

20. Bengio, Y., Simard, P., Frasconi, P.: Learning long-term dependencies with gradi-

ent descent is diﬃcult. TNN 5(2) (1994) 157–166 2, 6

21. Hochreiter, S., Schmidhuber, J.: Long short-term memory. Neural computation

9(8) (1997) 1735–1780 3, 5

22. Kim, G., Xing, E.P.: Reconstructing storyline graphs for image recommendation

from web community photos. In: CVPR. (2014) 3, 4, 9, 11

Learning Visual Storylines with Skipping Recurrent Neural Networks

17

23. Kim, G., Sigal, L., Xing, E.P.: Joint summarization of large-scale collections of
web images and videos for storyline reconstruction. In: CVPR. (2014) 3, 4, 11
24. DeMenthon, D., Kobla, V., Doermann, D.: Video summarization by curve simpli-

ﬁcation. In: ACM MM, ACM (1998) 211–218 3, 5

25. Ngo, C.W., Ma, Y.F., Zhang, H.J.: Video summarization and scene detection by

graph modeling. TCSVT 15(2) (2005) 296–305 3, 5

26. Khosla, A., Hamid, R., Lin, C.J., Sundaresan, N.: Large-scale video summarization

using web-image priors. In: CVPR. (2013) 3, 5

27. Martin-Brualla, R., He, Y., Russell, B.C., Seitz, S.M.: The 3d jigsaw puzzle: Map-

ping large indoor spaces. In: ECCV. Springer (2014) 1–16 3

28. Sadeghi, F., Tena, J.R., Farhadi Ali, S.L.: Learning to select and order vacation

photographs. In: WACV. (2015) 3, 5, 13

29. Xiong, B., Kim, G., Sigal, L.: Storyline representation of egocentric videos with

an applications to story-based search. In: ICCV. (2015) 4525–4533 3, 4

30. Kim, G., Moon, S., Sigal, L.: Joint photo stream and blog post summarization and

exploration. In: CVPR, IEEE (2015) 3081–3089 3

31. Chu, W.S., Song, Y., Jaimes, A.: Video co-summarization: Video summarization

by visual co-occurrence. In: CVPR. (2015) 3584–3592 3

32. Shank, R., Abelson, R.: Scripts, plans, goals and understanding (1977) 4
33. Chambers, N., Jurafsky, D.: Unsupervised learning of narrative event chains. In:

34. McIntyre, N., Lapata, M.: Learning to tell tales: A data-driven approach to story

ACL. (2008) 4

generation. In: ACL. (2009) 4

35. Wang, D., Li, T., Ogihara, M.: Generating pictorial storylines via minimum-weight
connected dominating set approximation in multi-view graphs. In: AAAI. (2012)
4

36. Gupta, A., Srinivasan, P., Shi, J., Davis, L.S.: Understanding videos, constructing
plots learning a visually grounded storyline model from annotated videos.
In:
CVPR. (2009) 4

37. Truong, B.T., Venkatesh, S.: Video abstraction: A systematic review and classiﬁ-

cation. TOMCCAP 3(1) (2007) 3 5

38. Cernekova, Z., Pitas, I., Nikou, C.: Information theory-based shot cut/fade detec-

tion and video summarization. TCSVT 16(1) (2006) 82–91 5

39. Lee, Y.J., Ghosh, J., Grauman, K.: Discovering important people and objects for

egocentric video summarization. In: CVPR. (2012) 5

40. Ma, Y.F., Lu, L., Zhang, H.J., Li, M.: A user attention model for video summa-

rization. In: ACM MM. (2002) 5

41. Sinha, P., Mehrotra, S., Jain, R.: Summarization of personal photologs using

multidimensional content and context. In: ICMR. (2011) 5, 6, 13

42. Obrador, P., De Oliveira, R., Oliver, N.: Supporting personal photo storytelling

for social albums. In: ACM MM, ACM (2010) 561–570 5, 13

43. Mikolov, T.: Recurrent neural network based language model. In: INTERSPEECH.

44. Sutskever, I., Martens, J., Hinton, G.E.: Generating text with recurrent neural

(2010) 5, 6, 9

networks. In: ICML. (2011) 5

45. Mikolov, T., Sutskever, I., Chen, K., Corrado, G.S., Dean, J.: Distributed rep-
In: NIPS. (2013)

resentations of words and phrases and their compositionality.
5

46. Williams, R.J., Zipser, D.: Gradient-based learning algorithms for recurrent net-
works and their computational complexity. Back-propagation: Theory, architec-
tures and applications (1995) 433–486 6

18

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

47. Werbos, P.J.: Generalization of backpropagation with application to a recurrent

gas market model. Neural Networks 1(4) (1988) 339–356 6

48. Thomee, B., Shamma, D.A., Friedland, G., Elizalde, B., Ni, K., Poland, D., Borth,
D., Li, L.J.: The new data and new challenges in multimedia research. arXiv
preprint arXiv:1503.01817 (2015) 9

49. Karpathy, A., Johnson, J., Li, F.: Visualizing and understanding recurrent net-

works. arXiv preprint arXiv:1506.02078 (2015) 10

50. Arthur, D., Vassilvitskii, S.: k-means++: The advantages of careful seeding. In:
Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algo-
rithms, Society for Industrial and Applied Mathematics (2007) 1027–1035 10

Learning Visual Storylines with Skipping Recurrent Neural Networks

19

7 Appendix

7.1 EM-Derivation of the Update Equations

We begin with a standard RNN. Given T data points x1:T = {x1, . . . , xT } (im-
ages) and the model parameters M, RNN maximizes P (xt|x1:t−1; M) at step t,
which is an exact decomposition of P(x1:T ; M), no independence assumed.

The key idea of S-RNN is to train over all ordered subsets (of size N ) in x1:T ,
selected by latent variables z1:N = {z1, . . . , zN }. Here we assume the likelihood of
x1:T selected by z1:N , is only related to the selected subset ˆz1:N = {ˆz1, . . . , ˆzN },
namely (here xˆz1:N = {xˆz1, . . . , xˆzN }):

P(x1:T |z1:N =ˆz1:N ; M) ∝ P(xˆz1:N |z1:N =ˆz1:N ; M).

S-RNN maximizes the likelihood of x1:T over all z1:N :

max
M

P(x1:T ; M) = max
M

P(x1:T |z1:N ; M)P(z1:N )

(cid:88)

z1:N
(cid:88)

z1:N

= max
M

= max
M

(cid:32)

(cid:88)

(cid:89)

z1:N

n

P(xz1:N |z1:N ; M)P(z1:N )

P(xzn+1|xz1:n , z1:N ; M)

P(z1:N )

(9)

(cid:33)

Here we assume the prior P(z1:N ) does not depend on M, and use Eq. 6. In
Eq. 9 we also used the chain rule to make it more similar to RNN (this is Eq.
4 in the paper), but here Eq. 8 is directly solved with the EM-algorithm and
factorized later. In the E-Step, we sample z to approximate the expectation:
(for simplicity we remove the subscripts in z1:N and ˆz1:N )

Q(M; M0) := Eˆz∼q0 [log (P(xˆz|z=ˆz; M)P(z=ˆz))] ,

(10)

where q0 is P(z|x; M0). For a single sample ˆz1:N , the M-Step follows:
(for simplicity of notation P(xˆz|z=ˆz; M)=P(xˆz; M))

max
M

Q(M; M0) = max
M

log P(xˆz1:N ; M).
(cid:88)

log P(xˆzn+1|xˆz1:n ; M).

= max
M

n

This is the standard RNN objective except over a subset. The ﬁnal implemen-
tation detail, is that we can rewrite P(z|x; M0) in a simpler form:

P(z=ˆz|x; M0) ∝ P(x|z=ˆz; M0)P(z=ˆz; M0)

∝ P(xˆz|z=ˆz; M0)P(z=ˆz)
∝ P(xˆz; M0)P(z=ˆz)

(cid:89)

=

n

P(xˆzn+1|xˆz1:n ; M0)P(zn+1=ˆzn+1|z1:n=ˆz1:n)

(6)

(7)

(8)

(11)

(12)

(13)

(14)

(15)

(16)

20

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

where we used Bayes rule, Eq. 6, and the chain rule of probability. This equation
allows us to sample z sequentially, and train the RNN as before. P(zn+1|z1:n)
is just the sequential version of the prior P(z1:N ) and captures the fact that z
deﬁnes an ordered subset. (zn ∈ {1, 2, . . . , T }, and zn < zn+1)

In summary, the training method simply alternates sampling from P(z|x; M0)
(E-Step in Eq. 10) and updating M using Eq. 12 (M-Step). This falls neatly into
the RNN pipeline, with only a simple sampling step before feeding new samples
to the network. Pseudo-code for training S-RNN is presented in Algorithm 1, for
a single training sequence. Note that P(x=xj|xˆz1:n ; M) is the prediction of the
RNN at step n, and Cat is the categorical distribution. The RNN is updated by
using the prediction of the model at step n (yn in the paper), xˆzn+1, and Xn,
with the loss function (described in Eq. 5 the paper). This provides a gradient
which is back-propagated through the network.

Note that the sampling depends on the model prediction. Intuitively, this is
the key that allows exploring all subsets of the data, since the model is used to
intelligently guide the exploration.

ˆz1:N , M ← random
n ← 1
while not converged do

Algorithm 1
1: function Train S-RNN({x1, x2, . . . })
2:
3:
4:
5:
6:
7:
8:

Xn ← {xzn+1, xzn+2, . . . }
pj ← 0
for xj ∈ Xn do

(cid:46) Images
(cid:46) Randomly initialize

(cid:46) Set of future images

pj ← P(x=xj|xˆz1:n ; M)P(zn+1=j|z1:n=ˆz1:n)

9:
10:
11:

ˆzn+1 ∼ Cat(p1, p2, . . .)
Update RNN (M) using xˆzn+1, Xn
n ← n + 1

(cid:46) Sample ˆzn+1 = j with probability pj
(cid:46) See text

7.2 Choosing the size of the summary

In this work, we ﬁxed the size of the storyline and summaries to be N = 10 for all
the concepts as a good compromise between content and brevity, i.e. intuitively
allows for a compact but informative summary of a concept. In Fig. 11 we follow
the same setup as in Section 4.4 in the paper. We plot the performance for S-RNN
with three values of N = 5, 10, 20 on three tasks: Short-term prediction (Short-
term), Long-term prediction as before (Long-term10), and Long-term prediction
using a ground truth with storylines of length 5 (Long-term5). We observe that
the model trained with N = 10 has the highest performance on all three tasks.
This implies that S-RNN is not overﬁtting to only the case of 10 image storylines,
since then we would expect the N = 5 method to do signiﬁcantly better for Long-
term5. Our interpretation is that for small N, the sequences are short and easy

Learning Visual Storylines with Skipping Recurrent Neural Networks

21

Fig. 11. The performance for S-RNN with three values of N = 5, 10, 20 on three tasks:
Short-term prediction (Short-term), Long-term prediction as before (Long-term10),
and Long-term prediction using a ground truth of size 5 instead of 10 (Long-term5).

to learn, but not very informative. For large N, the sequence approaches the
full album, and more data and model capacity is needed to learn the long-term
correlations.

7.3 Dataset

In Fig. 12 we sample images from two randomly selected albums for each concept.
As we can see, some albums are quite relevant to the concept, such as the ﬁrst
Wedding album. However for this simple sampling, many albums, such as the
second Christmas and ﬁrst Safari albums, have little relevance. This is typical of
the dataset, since a simple query for Christmas returns, for example, Christmas
parades, Christmas plays, and community events, in addition to the expected
family celebrations. Moreover, it can be seen that many images are not related
to the concept. What this means for our tasks, is that retrieving relevant images
for a concept is diﬃcult. However, in any given album, if the album is good,
then uniformly sampling images does quite well at summarizing that album. In
addition, in Fig. 13 we show few human-generated summaries for the albums.

7.4 Storylines for Diﬀerent Concepts

In Fig. 14, we motivate the problem of selecting images for the storyline by
presenting, for each concept, K-means clusters using f c7 features. We see that
while some images are relevant in each group, some concepts are very diﬀerent
from what we expect, for example it is diﬃcult to recognize Paris or London.
We argue that perhaps more importantly, all the images in the collection do not
complement each other, that is, there is no sequence of events, or relationship
between the images.

22

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

However, in Fig. 15 we present the images retrieved by our method (S-RNN).
We can see that each collection (each row), captures a coherent story of the con-
cept. If we compare that with our method without skipping (S-RNN-, Fig. 16),
we see that the coherence in those collections is focused on short-term correla-
tions, and those baselines choose highly correlated images.

7.5 Example Summaries

We present many randomly selected summaries from the dataset. Photo album
summarization depends heavily on the quality of the given album, and the al-
bum’s relevance. Summarization is therefore a more diﬃcult task than selecting
relevant images for evaluation, since on some albums, simple baselines do re-
markably well. In Fig. 17 we present summaries by our method (S-RNN) on
the same randomly selected albums as in Fig. 12.

Learning Visual Storylines with Skipping Recurrent Neural Networks

23

Fig. 12. Each row consists of a randomly selected album from the dataset, two for each
topic. Each album is visualized using 10 images uniformly sampled from the album.

Fig. 13. Example human-generated summaries for Paris, Christmas, and London al-
bums.

24

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 14. (K-Means). Storylines by K-Means for diﬀerent concepts. Each collection
contains some relevant images, but many of the images are not relevant, since K-Means
emphasizes diversity. Furthermore, each collection is not very coherent.

Fig. 15. (S-RNN) Storylines by our method for diﬀerent concepts. Each collection of
images is more related to the concept, and each collection captures a coherent story of
the concept.

Learning Visual Storylines with Skipping Recurrent Neural Networks

25

Fig. 16. (S-RNN-). Storylines by our method without skipping for diﬀerent concepts.
While these collections are relevant to the topic, and the collections are coherent, it
appears that the model is focusing on short-term correlations, and the images are not
very diverse.

26

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 17. Randomly selected summaries using our method. These albums correspond
to the albums presented in Fig. 12. It is diﬃcult to judge the quality of the summaries
without seeing the hundreds of images behind each summary, but hopefully provide
insight.

6
1
0
2
 
l
u
J
 
6
2
 
 
]

V
C
.
s
c
[
 
 
2
v
9
7
2
4
0
.
4
0
6
1
:
v
i
X
r
a

Learning Visual Storylines with Skipping
Recurrent Neural Networks

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Carnegie Mellon University
github.com/gsig/srnn

Abstract. What does a typical visit to Paris look like? Do people ﬁrst
take photos of the Louvre and then the Eiﬀel Tower? Can we visually
model a temporal event like “Paris Vacation” using current frameworks?
In this paper, we explore how we can automatically learn the temporal
aspects, or storylines of visual concepts from web data. Previous at-
tempts focus on consecutive image-to-image transitions and are unsuc-
cessful at recovering the long-term underlying story. Our novel Skipping
Recurrent Neural Network (S-RNN) model does not attempt to predict
each and every data point in the sequence, like classic RNNs. Rather,
S-RNN uses a framework that skips through the images in the photo
stream to explore the space of all ordered subsets of the albums via an
eﬃcient sampling procedure. This approach reduces the negative impact
of strong short-term correlations, and recovers the latent story more ac-
curately. We show how our learned storylines can be used to analyze,
predict, and summarize photo albums from Flickr. Our experimental re-
sults provide strong qualitative and quantitative evidence that S-RNN
is signiﬁcantly better than other candidate methods such as LSTMs on
learning long-term correlations and recovering latent storylines. More-
over, we show how storylines can help machines better understand and
summarize photo streams by inferring a brief personalized story of each
individual album.

1 Introduction

In the past few years, there has been a remarkable success in learning visual con-
cepts [1, 2] and relationships [1, 3] from images and text on the web. In theory,
this allows the creation of systems that, given enough time and resources, can
grow to know everything there is to learn. However, most of these approaches
are still largely centered around single images and focus on learning static se-
mantic relationships such as is-part-of [1], is-eaten-by [3] etc. Moreover, many
semantic concepts have not only a visual aspect but also a temporal aspect or
even storylines associated with them. For example, a visual representation of
Wedding would involve guests entering the venue, followed by exchange of rings
and ﬁnally celebrations in the wedding reception. How can we learn such visual
storylines from the web as well?

There are two aspects to these storylines: the visual aspect, often represented
by modes in visual appearances, and the temporal aspect, which is the temporal

2

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 1. Given a concept, our algorithm can automatically learn both its visual and
temporal aspect (storylines) from the web. To do this, we retrieve related albums
from Flickr and apply our S-RNN model to automatically discover long-term temporal
patterns. Here is a visualization of the storylines the model learned for the concept
Paris. For visualization, we distill the top images that a trained S-RNN model prefers
by sampling storylines from a Paris photo album. Denoting the images as nodes in a
graph, we visualize the most common pairwise transitions using arrowed lines. On the
right, we sample three probable storylines (A,B,C) that include these 10 images. We
can see that the Eiﬀel Tower is prominent early in the story followed by sightseeing of
common landmarks (Arc de Triomphe and others) and ﬁnally visiting the Lourve. On a
map of Paris, the Eiﬀel Tower and the Arc de Triomphe are indeed in close proximity

order in which these modes appear. How do we capture both of these aspects
from the web data? User photo albums in Flickr are a perfect example of web
data that capture both aspects. First, most Flickr images are supplied with
suﬃciently informative tags, like Paris [4]. Second, meta-information like time
is usually available. In particular, the photos in each album are taken in ordered
sequences, which hypothetically embed common storylines for concepts such as
Paris. Therefore, we propose to utilize Flickr photo streams across thousands
of users and learn underlying visual storylines associated with these concepts.
What is the right representation for these storylines and how do we learn it?

Recently, there has been momentous success in using CNN [5] features along
with Recurrent Neural Networks [6–11] (RNNs) to represent those temporal dy-
namics in data [12–19]. We aim to extend that idea to modeling the dynamics
in storylines. In theory, RNN can model any sequence, but has limited mem-
ory in practice, and can only learn short-term relationships due to vanishing
gradients [20].

Our Skipping Recurrent Neural Network (S-RNN) skips through the photo
sequences to extract the common latent stories, instead of trying to predict each
and every item in the sequence. This eﬀectively alleviates the artifacts of short-

Learning Visual Storylines with Skipping Recurrent Neural Networks

3

Fig. 2. Given a concept, such as Wedding, our algorithm can retrieve an ordered collec-
tion of images to describe that concept (Sec. 4.3). In this ﬁgure we show the collections
discovered by our model for two concepts. For example, for Wedding (ﬁrst row), it
picks images that represent four steps: guests enter; ceremony begins, marriage and
celebration. For travel-related concepts like London, it prefers iconic landmarks for the
story. The subtitles are manually provided for visualization. This is distilled from 1000
photo albums. More examples are provided in the appendix.

term correlations1 (e.g. repetition) between consecutive photos in the stream,
and focuses the learning eﬀort towards the underlying story. This solution is
complementary to, and diﬀerent from, more complex RNN architectures such as
LSTMs [21] that still focus on learning transitions between consecutive images.
Similar to clustering, the S-RNN model can be eﬃciently trained in an unsuper-
vised manner to learn a global storyline and infer a private story for each album.
Diﬀerent from most clustering techniques, S-RNN inherits the power of RNNs
that can capture the temporal dynamics in the data.

We evaluate the eﬀectiveness of our storyline model by comparing the story-
lines with baselines. In addition we evaluate the storyline model on two applica-
tions: a) image prediction [22, 23]; and b) photo album summarization [24–27].
Constructing a convincing storyline for a concept of interest requires both visual
and temporal aspects. Therefore, algorithms need to retrieve a diverse collection
of images, with the right ordering among them. For image prediction, we show
that our model is particularly suited for discovering the long-term correlations
buried under the short-term repetitions in Flickr albums, while other approaches
do not. Finally in the summarization task, the goal is to take images in a single
photo album and select a small summary of those. A typical example is a series
of photos, taken by a family on their visit to Paris, visiting all the iconic land-
marks, such as the Eiﬀel Tower. Classically, summarization is approached by
collecting a dataset of videos/albums and their associated summaries generated
by people [26, 28–31], in order to learn how to make a summary in a supervised
way. This process is, however, considerably laborious. In this work, we speciﬁ-

1 In our Flickr dataset, 71.1% of consecutive images are above average (cosine) simi-

larity.

4

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 3. Given an individual photo album, our algorithm can summarize the photo
album with a ordered collection of images that capture the album in terms of its
underlying concept, by ﬁrst learning about the concept from thousands of albums.
(Sec. 4.5). In this ﬁgure we show the summaries generated for three photo albums.
One about a Safari, the second about Scuba Diving, and the third Snowboarding. More
examples are provided in the appendix.

cally experiment with the hypothesis that a quality summary of an album can
be constructed by exploiting the similarities across thousands of similar albums
(e.g. Paris). Then a summary of the album is inferred by telling a personalized
version of the story.
Contributions. a) We present a new way of approaching sequence modeling
with RNNs, by exploring all ordered subsets of the data to avoid short-term cor-
relations between consecutive elements in the sequence. b) We present the novel
S-RNN architecture that eﬃciently implements this idea on web-scale datasets.
c) We demonstrate that this method can learn visual storylines for a concept
(e.g. Paris) from the web, by showing state-of-the-art results on selecting repre-
sentative images, long-term image prediction, and summarizing photo albums.

2 Related Work

Learning storylines. The earliest form of storyline can be traced back to the
1970-80s, where scripts [32] (structured representations of events, causation re-
lationships, participants, etc.) are used as knowledge backbones for tasks like
text summarization and question answering. Unfortunately, these rich knowledge
structures require hand construction by the experts, which fundamentally limits
their usage in an open domain. This motivates the recent developments of unsu-
pervised approaches that can learn underlying storylines automatically [33, 34]
from text. Inspired by this idea, our work aims to acquire the temporal aspect of
a concept automatically from images. Similar work in vision is limited by either
the scale of the data [29,35] or the domain to which the approach is applied [36].
Perhaps the most similar work is [22, 23], where the storyline graphs are learned
for Flickr albums. However, our work diﬀers in several important aspects. First,
while [22] is an important step in learning storylines, it focuses its learning ef-
fort on each and every pairwise transition, but our method learns the long-term
latent story. In fact, [22] could be extended using this framework, but here we

Learning Visual Storylines with Skipping Recurrent Neural Networks

5

extend a standard RNN model. Second, our method requires no a-priori clus-
tering, feature independence, nor a Markov assumption, and does parameters
sharing like RNNs.
Temporal visual summarization. Summarizing video clips is an active area
of research [37]. Many approaches have been developed seeking cues ranging from
low-level motion and appearances [24, 25, 38] to high level concepts [26, 39] and
attentions [40]. This line of research has been recently extended to photo albums,
and more external factors are considered for summarization besides the narrative
structure. For example, in [41] the authors put forward three criteria: quality,
diversity, and coverage. Later, in [42] a system is proposed that considers the
social context (e.g. characters, aesthetics) into the summarization framework.
Sadeghi et al . [28] also consider if a photo is memorable or iconic. Moreover,
most of these approaches are supervised, namely the associated summaries for
videos/albums are ﬁrst collected by crowd-sourcing, then a model is learned to
generate good summaries. While performance-wise it may seem best to leverage
human supervision and external factors when available, practically it suﬀers
serious issues like scalability and inconsistency in the ground-truth collection
process, and generalizablility when applied to other domains. On the other hand,
the task of summarization will be less ambiguous if the concept is given, which
is exactly what we want to explore in this work.
Sequential learning with RNNs. Recurrent neural networks [6] are a sub-
set of neural networks that can carry information across time steps. Compared
to other models for sequential modeling (e.g. hidden Markov models, linear dy-
namic systems), they are better at capturing the long-range and high-order time-
dependencies, and have shown superior performance on tasks like language mod-
eling [43] and text generation [44]. In this work we extend the network to model
high dimensional trajectories in videos and user albums through the space of
continuous visual features. Interestingly, since our network is trained to predict
images several steps away, it can be viewed as a simple and eﬀective way to learn
long term memories [21] and predict context [45] as well. Fundamentally, LSTM
still looks at only the next image and decides if it should be stored it in memory,
but S-RNN reasons over all future images, and decides which it should store
in memory (greedy vs. global). We outperform multiple LSTM baselines in our
results. Furthermore, running LSTMs directly on high-dimensional continuous
features is non-trivial, and we present a network that accomplishes that.

3 Learning Visual Storylines

Given hundreds of albums for a concept, our goal is to learn the underlying visual
appearances and temporal dynamics simultaneously. Once we have learned this
by building upon state-of-the-art tools, we can use it for multiple storyline tasks,
and distill the explicit knowledge as needed, such as in Fig. 1. In this section, we
explain our novel S-RNN architecture that is trained over all ordered subsets of
the data, and show that this can be accomplished with update equations equally
eﬃcient to original RNN. The full derivation of these update equations by using

6

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

the EM-method is presented in the appendix. We formulate the storyline learning
problem as learning an S-RNN. To understand S-RNN, we start by introducing
the basic RNN model.

3.1 Recurrent Neural Networks

The basic form of RNN [6] models a time sequence by decomposing the proba-
bility of a complete sequence into sequentially predicting the next item given the
history (in our application, this sequence is images in a temporal order). Given a
sequence of T images x1:T = {x1, . . . , xT },2 the network is trained to maximize
the log-likelihood:

M∗ = arg max

log P(x1:T ; M) − λR(M)

M

where log P(x1:T ; M) =

log P (xt+1|x1:t; M).

(1)

(cid:88)

t

Here M is the set of all model parameters, and R(·) is the regularizer (e.g. (cid:96)2).
The probability P(·|·, ·) is task dependent, e.g. for language models it directly
compares the soft-max output yt with the next word xt+1 [43]. The standard
optimization algorithm for RNNs is Back Propagation Through Time [46, 47]
(BPTT), a variation of gradient ascent where the gradient is aggregated through
time sequences.

The model consists of three layers: input, recurrent, and output. The input
layer uses the input xt to update the hidden recurrent layer ht using weights
WI . The recurrent layer ht updates itself via WR and predicts the output yt
via weights WO. The update function at step t writes as follows:

ht = σ (WI xt + WRht−1) ;

yt = ζ(WOht).

(2)

Here σ(·) and ζ(·) are non-linear activation functions, e.g. sigmoid, soft-max,
rectiﬁed linear units [5], etc. All the history in RNN is stored in the memory ht.
This assumes conditional independence of xt+1 and x1:t given ht.

In practice, the recurrent layer ht has limited capacity and the error cannot
be back propagated eﬀectively (due to vanishing gradients [20]). This can be a
critical issue for modeling sequences like photo streams—due to the high cor-
relation between consecutive images, where the dominant pattern in the short
term is repetition. For example, people can take multiple pictures of the same
object (e.g. the Eiﬀel Tower or family members), or the entire album is about
things that are visually similar (e.g. artwork in the Louvre or ﬁreworks). This
pattern is so salient that if an RNN is directly trained on these albums, the
signals of underlying storylines are largely suppressed. How to resolve this issue
of learning long-term patterns? One way is to regularize RNN with a diversity
term [41]. However, note that if an album is indeed single-themed, we still want
visually similar images in the storyline. Furthermore, Flickr tags are not perfect
and noise in the album set can easily distract the model.

2 For simplicity in notation, we assume a single training sequence, but in our experi-
ments we use multiple albums for one concept to discover common latent storylines.

Learning Visual Storylines with Skipping Recurrent Neural Networks

7

3.2 Skipping Recurrent Neural Networks

We now build upon the RNN framework to propose a skipping recurrent neural
network model. Instead of learning each consecutive transition, S-RNN chooses
to learn a “higher-level” version of the story, and focuses its learning eﬀort
accordingly. The key underlying idea is to select the storyline nodes by skipping
a lot of images in the album and then modeling the transitions between the
images selected as nodes.

Formally, let us suppose x1:T represents the T images in the album, z1:N
is the set of indexes that represent the selected images for the storyline and
the constant N is the number of nodes in the storyline. Note that N (cid:28) T ,
zn ∈ {1, 2, . . . , T }, and zn < zn+1 since z deﬁnes an ordered subset. Our goal
is to learn the maximum likelihood model parameters (M) by maximizing the
marginal likelihood of the observed data. Therefore, our objective function is:

M∗ = arg max

log

P(x1:T , z1:N ; M) − λR(M).

(3)

M

(cid:88)

z1:N

We can factorize P(x1:T , z1:N ; M) as P(x1:T |z1:N ; M)P(z1:N ) where P(z1:N )
is a prior on z. As described above, we use a simple prior on z that it is an
ordered subset. In this work, we make an assumption that the likelihood of
a whole album is proportional to the likelihood of the selected sub-sequence
of images xz (that is, we assume P(x1:T |z; M) ∝ P(xz; M)). Factorizing, and
inserting this assumption into Eq. 3 we have:

M∗ = arg max

log

M

(cid:32)

(cid:88)

(cid:89)

z1:N

n

P (cid:0)xzn+1|xz1:n ; M(cid:1)

P(z1:N ) − λR(M).

(4)

(cid:33)

We observe that this equation is starting to look similar to standard RNN (Eq. 1).

Maximizing the S-RNN Objective Maximizing the marginal likelihood over
all possible subsets of z is computationally intractable. Therefore, we make use of
the Expectation Maximization (EM) algorithm, and then sequentially factor the
update equations. More details of the EM derivation are given in the appendix.
During the E-step, we sample z given the current model, and use that to train
the model in the M-step, as we would an RNN. We initialize the EM-algorithm
by setting z based on a randomly ordered subsets of images.

S-RNN Implementation Details Now that we know how to optimize the
objective, the only design choice left is the loss P (cid:0)xzn+1|xz1:n; M(cid:1) (the data
likelihood in Eq. 4). While Gaussian likelihood is often used for real-valued
regression, we recognize that the space of allowed future images is not inﬁnite,
but simply images after xzn , deﬁned as Xn. Thus the likelihood is deﬁned as a
softmax likelihood over the future images:

P (cid:0)xzn+1|xz1:n ; M(cid:1) =

exp(yT

(cid:80)

x∈Xn

n xzn+1)
exp(yT

n x)

(5)

8

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 4. Our S-RNN model (unrolled in time). Instead of trying to predicting each and
every photo in the sequence (as in the basic RNN model), latent variables zn are
introduced into our model to skip through the photo sequences, which is an eﬀective
strategy to address the local repetition issue (multiple pictures are taken for a single
object like the Eiﬀel Tower) and can help extract common latent stories in the entire
set of albums related to a concept (e.g. Paris). To overcome the high-dimensional
regression problem, the loss is an softmax loss over future images

where yn is the output of the network after step n. Eﬀectively, this avoids mod-
eling the negative world as “everything except the ground truth” and instead
models the negative world as “other possible choices”. This signiﬁcantly helps
with high-dimensional data (f c7 features), since the possible image choices in
an album are usually only few hundred, but visual features few thousand.

In summary, during training and testing, z is sequentially sampled using the
current model (which skips through the sequence), and during training those
samples used to sequentially update the network with BPTT to maximize the
objective. A visualization of the idea can be found in Fig. 4. A full implementa-
tion of is available.

4 Experiments

Since there has been so little done in the area of learning storyline models and
their applications, there are no established datasets, evaluation methodologies,
or even much in terms of relevant previous work to compare against. There-
fore, we will present our evaluation in two parts: (a) ﬁrst, in Section 4.3, we
directly evaluate how “good” our learned storyline model is. Speciﬁcally, we ask
the Amazon Mechanical Turk (AMT) users how good our storyline model is
compared to a baseline in terms of the representativeness and the diversity of
image nodes in the storyline model; (b) next, in Section 4.4 and Section 4.5,
we evaluate our storyline model for two applications: long-term prediction and
album summarization. For these tasks, we show qualitative, quantitative, and
user studies to demonstrate the eﬀectiveness of S-RNN based storyline model.
We begin by describing our data collection process and the baselines.

Learning Visual Storylines with Skipping Recurrent Neural Networks

9

4.1 Flickr Albums Dataset

We gather collections of photo albums by querying Flickr through the YFCC100M
dataset [48], a recently released public subset of the Flickr corpus containing
99.3 million images with all the meta-information like tags and time stamps.
This dataset is an unreﬁned subset of images on Flickr, making it a reproducible
way of working with web data. The selection process gathers at most 1000 photo
albums for a single concept (e.g. Paris), with an average size of 150 images.
Each album is sorted based on a photo’s date taken. We experimented with
seven concepts: Christmas, London, Paris, Wedding, Safari, Scuba-diving, and
Snowboarding with a total number of 700k images. Examples from the dataset
are provided in the appendix. This subset will be made available.

4.2 Implementation Details

We compare our S-RNN model with several approaches to demonstrate its ef-
fectiveness in learning visual storylines. For fairness, all the methods used the
same fc7 features from AlexNet [5] pre-trained on ImageNet.

For S-RNN, the fc7 features are directly fed into the model. The network is
trained with BPTT, which unrolls the network, and uses gradient ascent with a
momentum of 0.9. We set the starting learning rate as 0.05, and gradually reduce
it when the likelihood on the validation set no longer increases. The input size
of the layer is set to 4096 (size of fc7 ), and the hidden recurrent layer size 50.
We keep N = 10 for all the concepts as a good compromise between content and
brevity (The appendix contains analysis of diﬀerent sizes of N). We choose (cid:96)2
regularization and set weight decay λ to be 10−7. Training takes approximately
2-3 hours on a single CPU. Each story was generated by sampling from the
model 500 times, and picking the sampled sequence with the highest likelihood.
The code is available at github.com/gsig/srnn.

Below we list the main baselines, and note that additional baselines will be

added for individual experiments when necessary.
Sample. We uniformly sample from the data distribution.
K-Means. To take advantage of the global storylines shared in a concept, we
apply K-Means to all the albums (similar to the ﬁrst step of [22] except with
diﬀerent features).
Graph. We adapted the original code for [22] to use fc7 features. Then a sto-
ryline is generated with the forward-backward algorithm as described in [22].
RNN. This architecture is similar to a language model [43] except it predicts
the cluster (as in K-Means) of the next image. We sample without replacement
to generate the story. This is a standard application of RNN to the problem.
LSTM. We train an LSTM network [49], similar to the RNN baseline.
LSTMsub. LSTM trained as before, but when generating the summary, we ﬁrst
generate a longer sequence (N = 100) and then sub-sample that sequence to the
desired summary length 10. Intuitively, if LSTM was indeed able to learn the
long-term correlations regardless of the repetitions, this should perform well.

10

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

S-RNN-. For ablation analysis, we also provide a baseline where we use the
network without skipping, but with the softmax loss over future images. All
the hyper-parameters for training are kept identical to our model except the
network predicts each and every item in the sequence. This is similar to RNN,
but beneﬁts from our improved loss.
D-RNN Similar to S-RNN-, except trained on a diverse subset of each album
using the k-means++ algorithm [50]. This was signiﬁcantly better than other
variants, including training on random subsets, ﬁxed interval subsets, or a ran-
dom diverse subset.

4.3 Evaluating Storylines

In the ﬁrst experiment, we directly evaluate how “good” the learned storyline
model is for a given concept. We deﬁne the goodness of a storyline model in terms
of how representative and diverse the selected images are for a given concept.
Two qualitative examples for Wedding and London are shown in Fig. 2. Fig. 5
shows more examples of learned storylines for diﬀerent concepts. Our storyline
model captures the essence of scuba-diving, snowboarding, etc., by capturing
representative and diverse images (e.g., beer, fun and snowboarding during day).
Setup. For each concept, we have each method select only 10 images from
50 photo albums (thousands of photos) that best describe the concept, and
AMT workers select which one they prefer. Each algorithm has access to the
full training data to train the model. For Graph and RNN-based baselines, we
sample multiple times from each album and use the highest ranked collection in
terms of likelihood. Sample and K-Means are simply applied on all images, and
in K-Means we assign the closest image to each cluster center. The appendix
contains more qualitative examples.
Results. Table 1 summarizes the results. Each comparison was given to 15
separate AMT workers. We can see that S-RNN is preferred 60% of the time
against the strongest baseline across all the concepts. Diﬀerent baselines fail
in diﬀerent ways. For example, Sample and K-Means can capture a diverse set
of images to represent the concept, but are prone to the inherent noise in the
Flickr albums. On the other hand, Graph and LSTM overﬁt to the short-term
correlations in the data and select repetitive images. Finally, S-RNN outperforms
D-RNN since S-RNN is not restricted to a single speciﬁc diversity method as in
D-RNN.

4.4 Task1: Prediction

Next, we evaluate our storyline models for two applications. The ﬁrst applica-
tion we consider is the prediction task. There are two possible prediction goals:
short-term prediction and long-term prediction. Short-term prediction can be
considered as prediction of the next image in the album. This was the task used
in [22, 23]. In the case of long-term prediction, we predict the next representa-
tive event. In the case of Paris vacation, if the current event is Eiﬀel tower, the
next likely event would be visiting the Trocadero. In the case of Wedding, if the

Learning Visual Storylines with Skipping Recurrent Neural Networks

11

Table 1. Evaluating Storylines. Fraction of the time our S-RNN storylines are preferred
against competing baselines. 50% is equal preference. Our method signiﬁcantly outper-
forms the baselines, being preferred 60% of the time against the strongest baseline.
See Section 4.3 for details

K-Means Sample Graph LSTM LSTMsub D-RNN RNN S-RNN-

S-RNN 71.2%

68.3% 79.8% 84.3%

70.9%

60.0% 85.1% 75.5%

Fig. 5. Evaluating Storylines. Images selected by S-RNN for three storylines from thou-
sands of images for the concepts Safari, Scuba Diving, and Snowboarding

current event is the ring ceremony, then the next representative event is the kiss
of the newlyweds.
Setup. For the short-term prediction, the ground-truth is the next image in the
album. But how do we collect ground-truth for long-term prediction? We ask
experts to summarize the albums (hoping that album summaries will suppress
short-term correlations and capture only representative events). Now we can
reformulate long-term prediction as predicting the next image in the human-
generated summary of the album. We collected 10 ground truth summaries on
average for each concept from volunteers familiar with the concepts (such as
Paris, and London). Each summary consists of 10 images from a photo album
that capture what the album was about. This was used as ground truth only
for evaluation. Two settings are compared, the ﬁrst one (labeled “long-term”)
predicts the next image in a summary (N =198 over 10 folds each); and the
second one (labeled “short-term”) predicts the next image in the original photo
album (N =1742). The problem is posed as a classiﬁcation task choosing from the
true image, and four other images selected uniformly at random from the same
album. Here we also consider NN that simply picks the nearest neighbor, and
FI that picks the furthest image from the given image, both in cosine distance
of fc7 features. K-Means is not suitable for this task since it does not include
temporal information. All methods were trained in an unsupervised manner for
each concept as before.
Results. In Fig. 6 we present results for the prediction of the next image. When
we consider long-term interactions between images, S-RNN successfully predicts

12

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 6. Predicting the next image. S-RNN is best at capturing long-term correlations,
and nearest-neighbors is best at capturing short-term correlations, as expected

Fig. 7. Long-term prediction. Examples of the images predicted by our method com-
pared to baselines. The image is chosen from a line-up of ﬁve images from the same
album (generated by experts as summaries). We see our method captures Santa→Tree
and Closed Presents→Open Presents while the baselines focus on similar images

the next image in the storyline 31% of the time, signiﬁcantly higher than base-
lines. On the other hand, we can see that when we simply want to predict con-
secutive images, NN is the best. To further visualize the results for “long-term”
correlations, we also give example comparisons with baseline methods in Fig. 7.

4.5 Task2: Photo Album Summarization

In the ﬁnal experiment, we evaluate on the task of album summarization. In
particular, we focus on summarizing an individual album based on the concept
(e.g. a Paris album), rather than heuristics such as image quality or presence of
faces [28, 41, 42]. This experiment addresses the question whether storylines can
help to summarize an album.
Human Generated Summaries. Photo album summarization is inherently a
subjective and diﬃcult task. To get a sense of the diﬃculty, we ﬁrst compared
the human summaries (used in Sec. 4.4) to baselines with a separate AMT
preference study. We had two ﬁndings. First, for some concepts, such as Wedding,

Learning Visual Storylines with Skipping Recurrent Neural Networks

13

Fig. 8. Examples of summaries generated by our method and two representative base-
lines for Scuba-diving and Snowboarding. In the Scuba-diving example Local aims to
capture diversity, and thus our method is more relevant. In Snowboarding, LSTM fo-
cuses on short-term correlations, and chooses many similar images, while our method
eﬀectively captures the album

the albums are frequently already summaries by professional photographers,
and thus generating summaries is trivial. Speciﬁcally, there is no signiﬁcant
diﬀerence between human generated summaries and uniformly sampling from
the data distribution (Sample). We thus only evaluate on concepts where there
is signiﬁcant diﬀerence between human generated summaries and ones generated
by baselines. Second, we found human generated summaries are only preferred
59.5% of the time against the strongest baseline.
Setup. The photo albums for a given concept are randomly divided into a train-
ing set and a validation set with a ratio of 9:1, and no ground truth summaries
were provided. We additionally consider the baseline Local where K-Means clus-
tering is used for summarization by applying clustering on fc7 features for each
individual album. As before, we assign the closest image to the cluster center
for clustering-based methods. While it is not required for S-RNN, we sort the
selected photos in temporal order as a post-processing step for all the baselines
when necessary for fair comparison.
Qualitative Results. The results for a few concepts are presented in Fig. 8. We
can see that S-RNN captures a set of relevant images without losing diversity.
In contrast, Local captures only diversity, and LSTM that tries to learn short-
term correlations between consecutive images, and as result often prefers similar
images in a row. Additional summaries by S-RNN are presented in Fig. 3.
Quantitative Evaluation. To directly compare the quality of the generated
summaries, another AMT preference study was conducted. For S-RNN and each
baseline, 200 random pairwise comparisons were generated. Each question was
given to 5 separate workers for consistency. We used a consensus approach where
a comparison gets a score of 1 if there is a tie, or a score of 2 if there is consensus.
In Fig. 9 we present comparison with the baselines. We can see that on av-
erage our method is preferred over all the baselines. To provide a more detailed
analysis, we divide the baseline methods into two groups: the Storyline group
(ﬁlled with pure colors) that captures the latent temporal information in the
data, and the Non-Storyline group (ﬁlled with patterns) that do not. The Story-

14

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 9. Photo album summarization. AMT pairwise preference between our method
and multiple baselines. 70% means that summaries by our method were preferred 70%
of the time. It is important to keep in mind that compared to the strongest baseline, a
human generated summary was on average only preferred 59.5% of the time. Sec. 4.5
contains a detailed explanation of the experiment setup and analysis of the results

line group includes Graph, RNN, LSTM, LSTMSub, and S-RNN- (Our method
also falls into this group), while the Non-Storyline group has K-Means, Local
and Sample. There are few interesting points:

1. S-RNN performs relatively better on travel-related albums (Paris, London)
suggesting it is easier to latch onto landmarks than high-level concepts like
in Christmas.

2. For concepts like Christmas, methods that learn short-term correlations from
the data distribution are still preferred by the users. The fact that S-RNN-
outperforms LSTMs and RNNs, can be interpreted as follows. RNNs suﬀer
from the curse of dimensionality if naively applied to storyline learning, but
the S-RNN loss reduces the dimensionality of the output space by an order
of magnitude (4096 to 100s).

3. While simple as they seem, Local and Sample are very competitive baselines.
We believe the reason is that Local aims to provide a diverse set of images
from each album, and Sample is representative of the underlying data. There-
fore, with the post-processing step that re-arranges the selected images in
temporal order, these methods can do well on good albums. However, they
do poorly when the album is noisy, as illustrated in Fig. 8 ﬁrst example.

Does Time Information Help Summarization? For further analysis, we
compared the described S-RNN with S-RNN trained on shuﬄed data (ordering
discarded) with a preference study on AMT. S-RNN using the time information
was preferred 68.4% over S-RNN without time information, demonstrating that
the time information signiﬁcantly helps to generate a summary liked by people.
Transferring storyline knowledge. Each album can have diﬀerent stories and
themes. In Figure 10 we present two diﬀerent summaries of two photo albums.
The ﬁrst album is a Scuba Diving album, and the ﬁrst summary from that album
is generated with the model trained on Scuba Diving albums. In the second row,
the same album is summarized using a model trained on Wedding albums. We
can see that this emphasizes scenic beach pictures reminiscent of a beach resort
wedding. The second album is a Paris album, and the ﬁrst summary is generated
using Paris model. The second summary however, is generated using a Christmas

Learning Visual Storylines with Skipping Recurrent Neural Networks

15

Fig. 10. The ﬁrst two rows show a Scuba Diving album summarized with a Scuba
model and a Wedding model, and the last two show a Paris album summarized with a
Paris model and a Christmas model. The Wedding story emphasizes the beach resort
images of the Scuba album, and the Christmas story emphasizes the churches and
sparkling lights images in the Paris album

model, and we can see that this emphasizes pictures of churches and sparkling
lights at night.

5 Conclusion

We have presented an approach to learn visual storylines for concepts auto-
matically from the web. Speciﬁcally, we use Flickr albums and train an S-RNN
model to capture the long-term temporal dynamics for a concept of interest. The
model is designed to overcome the challenges posed by high correlations between
consecutive photos in the album if sequence predictors are directly applied. We
evaluate our model on learning storylines, image prediction and album summa-
rization, and show both qualitatively and quantitatively that our method excels
at both extracting salient visual signals for the concept, and learning long-term
storylines to capture the temporal dynamics.

6 Acknowledgements

This research was supported by the Yahoo-CMU InMind program, ONR MURI
N000014-16-1-2007, and a hardware grant from Nvidia. The authors would like
to thank Olga Russakovsky and Christoph Dann for invaluable suggestions and
advice, and all the anonymous reviewers for helpful advice on improving the
manuscript.

16

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

References

1. Chen, X., Shrivastava, A., Gupta, A.: NEIL: Extracting visual knowledge from

web data. In: ICCV. (2013) 1

2. Divvala, S.K., Farhadi, A., Guestrin, C.: Learning everything about anything:

Webly-supervised visual concept learning. In: CVPR. (2014) 1

3. Sadeghi, F., Divvala, S.K., Farhadi, A.: VisKE: Visual knowledge extraction and
question answering by visual veriﬁcation of relation phrases. In: CVPR. (2015) 1
4. Izadinia, H., Farhadi, A., Hertzmann, A., Hoﬀman, M.D.: Image classiﬁcation and

retrieval from user-supplied tags. arXiv preprint arXiv:1411.6909 (2014) 2

5. Krizhevsky, A., Sutskever, I., Hinton, G.E.:

Imagenet classiﬁcation with deep

convolutional neural networks. In: NIPS. (2012) 2, 6, 9

6. Elman, J.L.: Finding structure in time. Cognitive science 14(2) (1990) 179–211 2,

5, 6

7. Malinowski, M., Rohrbach, M., Fritz, M.: Ask your neurons: A neural-based ap-

proach to answering questions about images. In: ICCV. (2015) 1–9 2

8. Shih, K.J., Singh, S., Hoiem, D.: Where to look: Focus regions for visual question

answering. arXiv preprint arXiv:1511.07394 (2015) 2

9. Yang, Z., He, X., Gao, J., Deng, L., Smola, A.: Stacked attention networks for

image question answering. arXiv preprint arXiv:1511.02274 (2015) 2

10. Zhu, Y., Groth, O., Bernstein, M., Fei-Fei, L.: Visual7w: Grounded question an-

swering in images. arXiv preprint arXiv:1511.03416 (2015) 2

11. Xiong, C., Merity, S., Socher, R.: Dynamic memory networks for visual and textual

question answering. arXiv preprint arXiv:1603.01417 (2016) 2

12. Karpathy, A., Li, F.: Deep visual-semantic alignments for generating image de-

scriptions. arXiv preprint arXiv:1412.2306 (2014) 2

13. Donahue, J., Hendricks, L.A., Guadarrama, S., Rohrbach, M., Venugopalan, S.,
Saenko, K., Darrell, T.: Long-term recurrent convolutional networks for visual
recognition and description. CVPR (2015) 2

14. Vinyals, O., Toshev, A., Bengio, S., Erhan, D.: Show and tell: A neural image

caption generator. CVPR (2015) 2

15. Venugopalan, S., Rohrbach, M., Donahue, J., Mooney, R.J., Darrell, T., Saenko,
K.: Sequence to sequence - video to text. arXiv preprint arXiv:1505.00487 (2015)
2

16. Xu, K., Ba, J., Kiros, R., Courville, A., Salakhutdinov, R., Zemel, R., Bengio,
Y.: Show, attend and tell: Neural image caption generation with visual attention.
arXiv preprint arXiv:1502.03044 (2015) 2

17. Gregor, K., Danihelka, I., Graves, A., Wierstra, D.: Draw: A recurrent neural

network for image generation. arXiv preprint arXiv:1502.04623 (2015) 2

18. Zhu, Y., Kiros, R., Zemel, R., Salakhutdinov, R., Urtasun, R., Torralba, A., Fidler,
S.: Aligning books and movies: Towards story-like visual explanations by watching
movies and reading books. In: arXiv preprint arXiv:1506.06724. (2015) 2

19. Chen, X., Zitnick, C.L.: Learning a recurrent visual representation for image cap-

tion generation. CVPR (2015) 2

20. Bengio, Y., Simard, P., Frasconi, P.: Learning long-term dependencies with gradi-

ent descent is diﬃcult. TNN 5(2) (1994) 157–166 2, 6

21. Hochreiter, S., Schmidhuber, J.: Long short-term memory. Neural computation

9(8) (1997) 1735–1780 3, 5

22. Kim, G., Xing, E.P.: Reconstructing storyline graphs for image recommendation

from web community photos. In: CVPR. (2014) 3, 4, 9, 11

Learning Visual Storylines with Skipping Recurrent Neural Networks

17

23. Kim, G., Sigal, L., Xing, E.P.: Joint summarization of large-scale collections of
web images and videos for storyline reconstruction. In: CVPR. (2014) 3, 4, 11
24. DeMenthon, D., Kobla, V., Doermann, D.: Video summarization by curve simpli-

ﬁcation. In: ACM MM, ACM (1998) 211–218 3, 5

25. Ngo, C.W., Ma, Y.F., Zhang, H.J.: Video summarization and scene detection by

graph modeling. TCSVT 15(2) (2005) 296–305 3, 5

26. Khosla, A., Hamid, R., Lin, C.J., Sundaresan, N.: Large-scale video summarization

using web-image priors. In: CVPR. (2013) 3, 5

27. Martin-Brualla, R., He, Y., Russell, B.C., Seitz, S.M.: The 3d jigsaw puzzle: Map-

ping large indoor spaces. In: ECCV. Springer (2014) 1–16 3

28. Sadeghi, F., Tena, J.R., Farhadi Ali, S.L.: Learning to select and order vacation

photographs. In: WACV. (2015) 3, 5, 13

29. Xiong, B., Kim, G., Sigal, L.: Storyline representation of egocentric videos with

an applications to story-based search. In: ICCV. (2015) 4525–4533 3, 4

30. Kim, G., Moon, S., Sigal, L.: Joint photo stream and blog post summarization and

exploration. In: CVPR, IEEE (2015) 3081–3089 3

31. Chu, W.S., Song, Y., Jaimes, A.: Video co-summarization: Video summarization

by visual co-occurrence. In: CVPR. (2015) 3584–3592 3

32. Shank, R., Abelson, R.: Scripts, plans, goals and understanding (1977) 4
33. Chambers, N., Jurafsky, D.: Unsupervised learning of narrative event chains. In:

34. McIntyre, N., Lapata, M.: Learning to tell tales: A data-driven approach to story

ACL. (2008) 4

generation. In: ACL. (2009) 4

35. Wang, D., Li, T., Ogihara, M.: Generating pictorial storylines via minimum-weight
connected dominating set approximation in multi-view graphs. In: AAAI. (2012)
4

36. Gupta, A., Srinivasan, P., Shi, J., Davis, L.S.: Understanding videos, constructing
plots learning a visually grounded storyline model from annotated videos.
In:
CVPR. (2009) 4

37. Truong, B.T., Venkatesh, S.: Video abstraction: A systematic review and classiﬁ-

cation. TOMCCAP 3(1) (2007) 3 5

38. Cernekova, Z., Pitas, I., Nikou, C.: Information theory-based shot cut/fade detec-

tion and video summarization. TCSVT 16(1) (2006) 82–91 5

39. Lee, Y.J., Ghosh, J., Grauman, K.: Discovering important people and objects for

egocentric video summarization. In: CVPR. (2012) 5

40. Ma, Y.F., Lu, L., Zhang, H.J., Li, M.: A user attention model for video summa-

rization. In: ACM MM. (2002) 5

41. Sinha, P., Mehrotra, S., Jain, R.: Summarization of personal photologs using

multidimensional content and context. In: ICMR. (2011) 5, 6, 13

42. Obrador, P., De Oliveira, R., Oliver, N.: Supporting personal photo storytelling

for social albums. In: ACM MM, ACM (2010) 561–570 5, 13

43. Mikolov, T.: Recurrent neural network based language model. In: INTERSPEECH.

44. Sutskever, I., Martens, J., Hinton, G.E.: Generating text with recurrent neural

(2010) 5, 6, 9

networks. In: ICML. (2011) 5

45. Mikolov, T., Sutskever, I., Chen, K., Corrado, G.S., Dean, J.: Distributed rep-
In: NIPS. (2013)

resentations of words and phrases and their compositionality.
5

46. Williams, R.J., Zipser, D.: Gradient-based learning algorithms for recurrent net-
works and their computational complexity. Back-propagation: Theory, architec-
tures and applications (1995) 433–486 6

18

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

47. Werbos, P.J.: Generalization of backpropagation with application to a recurrent

gas market model. Neural Networks 1(4) (1988) 339–356 6

48. Thomee, B., Shamma, D.A., Friedland, G., Elizalde, B., Ni, K., Poland, D., Borth,
D., Li, L.J.: The new data and new challenges in multimedia research. arXiv
preprint arXiv:1503.01817 (2015) 9

49. Karpathy, A., Johnson, J., Li, F.: Visualizing and understanding recurrent net-

works. arXiv preprint arXiv:1506.02078 (2015) 10

50. Arthur, D., Vassilvitskii, S.: k-means++: The advantages of careful seeding. In:
Proceedings of the eighteenth annual ACM-SIAM symposium on Discrete algo-
rithms, Society for Industrial and Applied Mathematics (2007) 1027–1035 10

Learning Visual Storylines with Skipping Recurrent Neural Networks

19

7 Appendix

7.1 EM-Derivation of the Update Equations

We begin with a standard RNN. Given T data points x1:T = {x1, . . . , xT } (im-
ages) and the model parameters M, RNN maximizes P (xt|x1:t−1; M) at step t,
which is an exact decomposition of P(x1:T ; M), no independence assumed.

The key idea of S-RNN is to train over all ordered subsets (of size N ) in x1:T ,
selected by latent variables z1:N = {z1, . . . , zN }. Here we assume the likelihood of
x1:T selected by z1:N , is only related to the selected subset ˆz1:N = {ˆz1, . . . , ˆzN },
namely (here xˆz1:N = {xˆz1, . . . , xˆzN }):

P(x1:T |z1:N =ˆz1:N ; M) ∝ P(xˆz1:N |z1:N =ˆz1:N ; M).

S-RNN maximizes the likelihood of x1:T over all z1:N :

max
M

P(x1:T ; M) = max
M

P(x1:T |z1:N ; M)P(z1:N )

(cid:88)

z1:N
(cid:88)

z1:N

= max
M

= max
M

(cid:32)

(cid:88)

(cid:89)

z1:N

n

P(xz1:N |z1:N ; M)P(z1:N )

P(xzn+1|xz1:n , z1:N ; M)

P(z1:N )

(9)

(cid:33)

Here we assume the prior P(z1:N ) does not depend on M, and use Eq. 6. In
Eq. 9 we also used the chain rule to make it more similar to RNN (this is Eq.
4 in the paper), but here Eq. 8 is directly solved with the EM-algorithm and
factorized later. In the E-Step, we sample z to approximate the expectation:
(for simplicity we remove the subscripts in z1:N and ˆz1:N )

Q(M; M0) := Eˆz∼q0 [log (P(xˆz|z=ˆz; M)P(z=ˆz))] ,

(10)

where q0 is P(z|x; M0). For a single sample ˆz1:N , the M-Step follows:
(for simplicity of notation P(xˆz|z=ˆz; M)=P(xˆz; M))

max
M

Q(M; M0) = max
M

log P(xˆz1:N ; M).
(cid:88)

log P(xˆzn+1|xˆz1:n ; M).

= max
M

n

This is the standard RNN objective except over a subset. The ﬁnal implemen-
tation detail, is that we can rewrite P(z|x; M0) in a simpler form:

P(z=ˆz|x; M0) ∝ P(x|z=ˆz; M0)P(z=ˆz; M0)

∝ P(xˆz|z=ˆz; M0)P(z=ˆz)
∝ P(xˆz; M0)P(z=ˆz)

(cid:89)

=

n

P(xˆzn+1|xˆz1:n ; M0)P(zn+1=ˆzn+1|z1:n=ˆz1:n)

(6)

(7)

(8)

(11)

(12)

(13)

(14)

(15)

(16)

20

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

where we used Bayes rule, Eq. 6, and the chain rule of probability. This equation
allows us to sample z sequentially, and train the RNN as before. P(zn+1|z1:n)
is just the sequential version of the prior P(z1:N ) and captures the fact that z
deﬁnes an ordered subset. (zn ∈ {1, 2, . . . , T }, and zn < zn+1)

In summary, the training method simply alternates sampling from P(z|x; M0)
(E-Step in Eq. 10) and updating M using Eq. 12 (M-Step). This falls neatly into
the RNN pipeline, with only a simple sampling step before feeding new samples
to the network. Pseudo-code for training S-RNN is presented in Algorithm 1, for
a single training sequence. Note that P(x=xj|xˆz1:n ; M) is the prediction of the
RNN at step n, and Cat is the categorical distribution. The RNN is updated by
using the prediction of the model at step n (yn in the paper), xˆzn+1, and Xn,
with the loss function (described in Eq. 5 the paper). This provides a gradient
which is back-propagated through the network.

Note that the sampling depends on the model prediction. Intuitively, this is
the key that allows exploring all subsets of the data, since the model is used to
intelligently guide the exploration.

ˆz1:N , M ← random
n ← 1
while not converged do

Algorithm 1
1: function Train S-RNN({x1, x2, . . . })
2:
3:
4:
5:
6:
7:
8:

Xn ← {xzn+1, xzn+2, . . . }
pj ← 0
for xj ∈ Xn do

(cid:46) Images
(cid:46) Randomly initialize

(cid:46) Set of future images

pj ← P(x=xj|xˆz1:n ; M)P(zn+1=j|z1:n=ˆz1:n)

9:
10:
11:

ˆzn+1 ∼ Cat(p1, p2, . . .)
Update RNN (M) using xˆzn+1, Xn
n ← n + 1

(cid:46) Sample ˆzn+1 = j with probability pj
(cid:46) See text

7.2 Choosing the size of the summary

In this work, we ﬁxed the size of the storyline and summaries to be N = 10 for all
the concepts as a good compromise between content and brevity, i.e. intuitively
allows for a compact but informative summary of a concept. In Fig. 11 we follow
the same setup as in Section 4.4 in the paper. We plot the performance for S-RNN
with three values of N = 5, 10, 20 on three tasks: Short-term prediction (Short-
term), Long-term prediction as before (Long-term10), and Long-term prediction
using a ground truth with storylines of length 5 (Long-term5). We observe that
the model trained with N = 10 has the highest performance on all three tasks.
This implies that S-RNN is not overﬁtting to only the case of 10 image storylines,
since then we would expect the N = 5 method to do signiﬁcantly better for Long-
term5. Our interpretation is that for small N, the sequences are short and easy

Learning Visual Storylines with Skipping Recurrent Neural Networks

21

Fig. 11. The performance for S-RNN with three values of N = 5, 10, 20 on three tasks:
Short-term prediction (Short-term), Long-term prediction as before (Long-term10),
and Long-term prediction using a ground truth of size 5 instead of 10 (Long-term5).

to learn, but not very informative. For large N, the sequence approaches the
full album, and more data and model capacity is needed to learn the long-term
correlations.

7.3 Dataset

In Fig. 12 we sample images from two randomly selected albums for each concept.
As we can see, some albums are quite relevant to the concept, such as the ﬁrst
Wedding album. However for this simple sampling, many albums, such as the
second Christmas and ﬁrst Safari albums, have little relevance. This is typical of
the dataset, since a simple query for Christmas returns, for example, Christmas
parades, Christmas plays, and community events, in addition to the expected
family celebrations. Moreover, it can be seen that many images are not related
to the concept. What this means for our tasks, is that retrieving relevant images
for a concept is diﬃcult. However, in any given album, if the album is good,
then uniformly sampling images does quite well at summarizing that album. In
addition, in Fig. 13 we show few human-generated summaries for the albums.

7.4 Storylines for Diﬀerent Concepts

In Fig. 14, we motivate the problem of selecting images for the storyline by
presenting, for each concept, K-means clusters using f c7 features. We see that
while some images are relevant in each group, some concepts are very diﬀerent
from what we expect, for example it is diﬃcult to recognize Paris or London.
We argue that perhaps more importantly, all the images in the collection do not
complement each other, that is, there is no sequence of events, or relationship
between the images.

22

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

However, in Fig. 15 we present the images retrieved by our method (S-RNN).
We can see that each collection (each row), captures a coherent story of the con-
cept. If we compare that with our method without skipping (S-RNN-, Fig. 16),
we see that the coherence in those collections is focused on short-term correla-
tions, and those baselines choose highly correlated images.

7.5 Example Summaries

We present many randomly selected summaries from the dataset. Photo album
summarization depends heavily on the quality of the given album, and the al-
bum’s relevance. Summarization is therefore a more diﬃcult task than selecting
relevant images for evaluation, since on some albums, simple baselines do re-
markably well. In Fig. 17 we present summaries by our method (S-RNN) on
the same randomly selected albums as in Fig. 12.

Learning Visual Storylines with Skipping Recurrent Neural Networks

23

Fig. 12. Each row consists of a randomly selected album from the dataset, two for each
topic. Each album is visualized using 10 images uniformly sampled from the album.

Fig. 13. Example human-generated summaries for Paris, Christmas, and London al-
bums.

24

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 14. (K-Means). Storylines by K-Means for diﬀerent concepts. Each collection
contains some relevant images, but many of the images are not relevant, since K-Means
emphasizes diversity. Furthermore, each collection is not very coherent.

Fig. 15. (S-RNN) Storylines by our method for diﬀerent concepts. Each collection of
images is more related to the concept, and each collection captures a coherent story of
the concept.

Learning Visual Storylines with Skipping Recurrent Neural Networks

25

Fig. 16. (S-RNN-). Storylines by our method without skipping for diﬀerent concepts.
While these collections are relevant to the topic, and the collections are coherent, it
appears that the model is focusing on short-term correlations, and the images are not
very diverse.

26

Gunnar A. Sigurdsson, Xinlei Chen, Abhinav Gupta

Fig. 17. Randomly selected summaries using our method. These albums correspond
to the albums presented in Fig. 12. It is diﬃcult to judge the quality of the summaries
without seeing the hundreds of images behind each summary, but hopefully provide
insight.

