Open Evaluation Tool for Layout Analysis
of Document Images

Michele Alberti, Manuel Bouillon, Rolf Ingold, Marcus Liwicki
University of Fribourg Switzerland
{ﬁrstname}.{lastname}@unifr.ch

1

7
1
0
2
 
v
o
N
 
3
2
 
 
]

V
C
.
s
c
[
 
 
1
v
6
5
6
1
0
.
2
1
7
1
:
v
i
X
r
a

Abstract—This paper presents an open tool for standardizing
the evaluation process of the layout analysis task of document
images at pixel level. We introduce a new evaluation tool that is
both available as a standalone Java application and as a RESTful
web service. This evaluation tool is free and open-source in order
to be a common tool that anyone can use and contribute to. It
aims at providing as many metrics as possible to investigate layout
analysis predictions, and also provides an easy way of visualizing
the results. This tool evaluates document segmentation at pixel
level, and supports multi-labeled pixel ground truth. Finally, this
tool has been successfully used for the ICDAR 2017 competition
on Layout Analysis for Challenging Medieval Manuscripts.

Keywords—Evaluation Tool, Open-Source, Layout Analysis, Re-

sults Visualization, Web service.

I.

INTRODUCTION
Layout analysis, also known as document segmentation, is a
common task in Document Image Analysis research. Various
evaluation schemes and metrics have been used throughout
different competitions and benchmark reports.

The purpose of this work is to put in common the (typically
additional) work needed to implement an evaluation scheme
for layout analysis methods and have a reviewed source
code to minimize the risk of erroneous implementations. In
a similar way that databases are shared publicly to enable the
easy comparison of methods, we believe that evaluation tools
should be publicly available as well. It saves the necessity to
implement something that already exists, and provide a well-
tested implementation that is less likely to contains bugs.

In this paper, we present a new evaluation tool, that is free
and open-source, for the evaluation of the layout analysis task
of document images at pixel level. It is available both as a
standalone Java application and as a RESTful web service on
DIVAServices [1] for easy integration in any programming
language. We strive making this tool exhaustive by imple-
menting several state-of-the-art metrics. Furthermore, we target
at a reliable tool by having it well-tested and providing it
open-source to enable peer reviews. The tool also provides
visualization capabilities to help understanding the results (see
Figure 1), and the errors made by the evaluated method (see
Figure 2). This tool is also versatile in the sense that it designed
to handle single-label as well as multi-label classiﬁcation
tasks. Finally, this tool has been successfully used for the

1Cologny, Fondation Martin Bodmer, Cod. Bodmer 55: Dante, Inferno
e Purgatorio (Codex Guarneri) (http://www.e-codices.unifr.ch/en/list/one/fmb/
cb-0055).

(a) Original image.

(b) Prediction evaluation visualization

(c) Overlap of prediction evaluation and original image

Fig. 1. Exampleof output visualization produced by our tool for a cropped
area of an image of CB551. In the visualization (b) each pixel can be of ﬁve
different colors: black for correctly classiﬁed background, red for background
mis-classiﬁed as foreground, light-blue for foreground mis-classiﬁed as back-
ground, green for foreground pixels fully correctly classiﬁed and yellow for
foreground pixels which are classiﬁed as such, but of the wrong class (e.g text
instead of decoration).

ICDAR 2017 competition on Layout Analysis for Challenging
Medieval Manuscripts [2]. Although the tool has been tested
in the context of historical documents, it can be used in any
other pixel-level classiﬁcation scenario2, e.g. administrative
documents and text detection in real scenes.

This paper is organized as follows. Section II discusses
related work in evaluation metrics and evaluation tools for
document image analysis. Section III presents this new evalu-
ation tool and how to use it. Section IV describes the different
metrics that are computed by this tool. The visualization capa-
bilities of this tool are also described in this section. Section V
explain the speciﬁcity of the multi-labeled classiﬁcation task,

2This applies to both single and multi-label tasks.

and how the different metrics can be computed in this case.
Finally, Section VI concludes and discusses future work.

II. RELATED WORK

In this section, we present and discuss several existing typ-
ical metrics. Furthermore, we summarize several approaches
to make document analysis evaluation tools available at the
moment.

The evaluation of layout analysis has been discussed by
various researchers in this ﬁeld and different metrics have
been proposed. Often, a simple pixel-accuracy is reported [3],
[4], [5], [6] which we regard as obsolete, because it is too
much biased towards the majority class (see Section IV-G).
Other works take the size of overlapping bounding boxes or
regions into account [7], [8] or measure the Optical Character
Recognition (OCR) performance on the resulting segmented
page.

For providing Open Source tools and services, Neudecker et
al. [9] present an infrastructure providing access to a various
range of tools for the whole OCR workﬂow. The provided tools
can be tried online for free3. Full access to the Web Services
is only available to paying members. In the tranScriptorium
project [10],
the project members provide RESTFul Web
Services4 for their methods as well and some tools on Github.
However, their back-end infrastructure is not open.

Targeting at

the evaluation, Lamiroy and Lopresti [11]
introduced the Document Analysis and Exploitation (DAE)
platform and a recent update called DAE-NG [12]. The DAE-
NG is a more broader effort, targeting the general synchro-
nization of Document Analysis evaluation methods while we
focus on layout analysis and provide various metrics as output.
The tool presented in this paper is available online (see
Section III) and are furthermore integrated into the DIVASer-
vices [1]. Similarly, our tool can be integrated into DAE-NG
or Transcriptorium as well.

III. EVALUATION TOOL

This tool was ﬁrst used for the ICDAR 2017 competition
on Layout Analysis for Challenging Medieval Manuscripts [2].
We choose to make it freely available5 to the DIA community
in order have a common evaluation tool that can be used with
the common databases we use. Its goal is to enable the easy
comparison of different layout analysis methods on the same
database and with the same metrics. This tool was designed for
multi-label classiﬁcation problems, as the competition, but it
can also handle standard classiﬁcation problems. The interest
and speciﬁcity of seeing document image layout analysis as
a multi-labeled classiﬁcation problem will be explained in
Section V.

This tool is free and open-source6, which means that anyone
can use it, modify it and redistribute it. Using this open-
source tool permit to save the time that would be needed to

3https://www.digitisation.eu/tools-resources/demonstrator-platform/
4https://transkribus.eu/wiki/index.php/REST Interface
5https://github.com/DIVA-DIA/LayoutAnalysisEvaluator
6Under LGPL v3 licence.

2

re-implement what already exists, and to greatly reduce the
risk of errors/bugs. Indeed, this implementation of this tool
has been proof-read, and anyone can check the correctness of
the code online. If an error or a bug would be found, it would
be corrected and the correction easily shared with every user.
This segmentation analysis tool is implemented in Java,
which is by deﬁnition multi-platform. A JAR archive is avail-
able for download, and running it without parameters give the
expected inputs:

•

•
•

•

ground truth image: where the labels are encoded as
for the database used for the competition7 (DIVA-
HisDB [13]).
prediction image: same encoding as for the ground truth.
[output ﬁle]: output values will be written in CSV format
to this ﬁle if speciﬁed.
[output directory]: visualization images will be gener-
ated to this folder if speciﬁed.

The output consists of various metrics, in order to evaluate
the prediction and to permit comparisons with a maximum of
published results. As the tool is open-source, anyone can add
new metrics if needed. These different metrics will be detailed
in Section IV.

this evaluation tool

To facilitate the integration of

[1]. First, a POST request with all

in
frameworks using different programming languages, we also
make this tool available as a RESTful web service on
DIVAServices8
the
prediction images included in the JSON content (base64
encoded) should be sent
to the following address http://
divaservices.unifr.ch/api/v2/collections to upload all the pre-
into a collection. Then, one just need
diction images
to send a POST request
to http://divaservices.unifr.ch/api/
v2/evaluation/icdar2017hisdoclayoutcomplineevaluation/1, in-
cluding the ground truth and the hypothesis image collection
names as JSON content. Finally, when the results are com-
puted, DIVAServices send back the results with all the metrics
in JSON format.

IV. METRICS
In this section, we present the different metrics measured

by our tool and brieﬂy discuss their interest.

For each document the tool takes as input a ground truth
image L = ({c ∈ C}i|1 ≤ i < n) and its relative predictions9
L(cid:48), where C is the set of unique classes present
in the
document and n is the total number of pixels in the document.
The output is a set of metrics Ψ = {exact match, Hamming
score, Precision, Recall, F1-Score, Jaccard index} which aims
to provide a variety of scores which should exhaustively
describe the performance of the used algorithm. In fact, it
is recommended to avoid trying to reduce the performance
of a classiﬁcation algorithm into a single score [14]. To
this end, for each metric ψ ∈ Ψ \ {exact match, Hamming
score} we measure the value ψc separately for each class

7http://diuf.unifr.ch/main/hisdoc/icdar2017-hisdoc-layout-comp
8http://divaservices.unifr.ch/api/v2/
9The tool is designed to support multi-label classiﬁcation problems. In the
case of single-label problems, the elements of L and L(cid:48) would not be a set
but a single value.

3

(5)

(6)

(7)

c ∈ C and additionally perform both macro-averaging and
micro-averaging for evaluating the performance average across
classes. Macro-averaged performance scores (denoted by M
superscript) are computed by simply averaging the class-wise
scores, giving equal weight to each class, regardless of their
size, as shown in Eq. 1.

B. Hamming Score

The Hamming score is a relaxed version of the exact match
which accounts for partial matches11. Therefore, it indicates
the fraction of correctly predicted labels. It is computed as 1−
Hamming loss (⊕ denotes exclusive or).

Micro-averaged scores (denoted by the µ superscript) are
obtained by averaging the class-wise scores a weight propor-
tional to their frequency as shown in Eq. 2.

where fc is the class-wise frequency computed as the
cardinality of the set of pixels in the ground truth whose set
of labels contain the class c, over the total amount of labels10
in the ground truth, as shown below:

D. Recall

ψM =

1
|C|

·

(cid:88)

c∈C

ψc

ψµ =

ψc · fc

(cid:88)

c∈C

fc =

|{p|c ∈ Lp}|
(cid:80) |Li|

(1)

(2)

(3)

H = 1 −

1
n · |C|

·

(cid:88)

|L(cid:48)

i ⊕ Li|

C. Precision

The precision of the classiﬁer is deﬁned as the probability
that a random pixel predicted to belong to a class, really
belongs to that class. In other words, Pc denotes how many
of the pixels predicted of class c were actually belonging to
class c.

Pc =

T Pc
T Pc + F Pc

The recall of a classiﬁer is deﬁned as the probability that
a random pixel belonging to a class, will also be predicted to
belong to that class. In other words, Rc denotes how many of
the pixels of class c were actually predicted to be belonging
to class c.

The evaluation is performed pixel-wise and for each of the
classes involved at a single pixel there are four possible cases:

Rc =

T Pc
T Pc + F Nc

• True Positive (TP): both prediction and ground truth

E. F1-Score

• True Negative (TN): both prediction and ground truth

contain the class label.

lack the class label.

• False Positive (FP): the prediction contains the class

label, whereas the ground truth does not.

• False Negative (FN): the prediction lacks the class label,

but the ground truth contains it.

Since neither precision nor recall are conveying enough
information to be used as evaluation metric alone, researchers
developed different ways to combine them. One popular so-
lution is the Fβ function which merges them by assigning β
times more importance to recall than to precision [15]. The F1-
score12 [16] [17] is a special case where precision and recall
are given the same importance.

F1c =

2 · T Pc
2 · T Pc + F Pc + F Nc

= 2 ·

Pc · Rc
Pc + Rc

(8)

The F1-score corresponds to the harmonic mean between

A. Exact Match

The exact match is the most strict metric and literally counts
how many exact matches there are between the predicted
values L(cid:48) and the ground truth labels L.

precision and recall.

F. Jaccard Index

EM =

|{p|L(cid:48)

p = Lp}|
N

The behavior of this metric tends to the behavior of ac-
curacy when the average label cardinality tends to 1. In the
extreme case of single-class problem (where the average label
cardinality is 1) the exact match is equivalent to accuracy.
This relationship makes the exact match sensitive to the same
drawbacks as accuracy (see Section IV-G).

(4)

The Jaccard index often referred as Intersection over Union
(IU) is a statistic used for comparing the similarity and
diversity of sets [18].

IUc =

T Pc
T Pc + F Pc + F Nc

(9)

Unlike accuracy (see Section IV-G) this metric is invariant
to the total number of samples n but sensible to changes in
F P and F N . Additionally, as one can see, it is computed in

10Using the total amount of pixel here would be wrong, as in multi-label

problem the summation of all frequencies would be higher than 1.

11In case of single-label problem they are completely equivalent
12Also known as Sørensen-Dice coefﬁcient.

a similar way to the F1 score (see Equations 8 and 9). The
Jaccard index is, however, much more sensitive to mistakes as
it is not weighting twice the true positive cases. This makes
it effectively the strictest metric in our set Ψ, and despite
we advocate against using a single metric to compare two
algorithms performances, we recommend to use the Jaccard
index if one were to do it anyway.

G. About accuracy

Accuracy is a common performance measure in the machine
learning literature, but there is a potential pitfall if used to
evaluate the performances in a multi-class setting [14], [19].
In fact, as there is n in the denominator (see Eq. 10), a small
change in T Pc or T Nc will practically not affect the ﬁnal result
if n is large enough. Additionally, if there is a high number of
classes or if class sizes are small, the trivial rejector13 might
have a surprisingly high accuracy (close to 100%) because of
T Nc ≈ n. Since in the context of document segmentation
at pixel level these conditions are met — high resolutions
documents have a large n and some classes only have a few
representatives — we consider accuracy not as interesting as
the other metrics aforementioned and we consequently omit14
it in our tool.

ACCc =

T Pc + T Nc
n

(10)

H. Visualization

Once a document is evaluated, the user receives a relatively
huge15 amount of numbers as output, and we felt that might
be not only overwhelming but also difﬁcult to interpret at
times. Therefore we included a visualization method which
allows the user to look at the quality of the prediction through
colors and not through numbers (see Figure 1b). If desired,
this visualization can be overlapped to the original image to
ultimately empower the user to estimate the results with his
own eyes (see Figure 1c). This kind of representation enables
the interpretation of the segmentation mistakes by displaying
exactly which pixels have been misclassiﬁed, which is clearly
not possible with any numerical metric (see Figure 2).

V. MULTI-LABEL
This tool has been designed to support not only multi-
class but multi-label classiﬁcation problems as well. This is
a mandatory requirement
to properly evaluate the datasets
which have a multi-label ground truth (e.g. the DIVA-HisDB
dataset [13]). This kind of dataset is interesting in the context
of historical documents as a foreground pixel might belong to
several classes at the same time. For example, decorations are
frequently used as part of the text, i.e drop caps. In that case,

4

(a) Prediction quality visualization

(b) Overlap of prediction quality
and original image

Fig. 2.
Example supporting the usefulness of overlapping the prediction
quality visualization with the original image. Focus on the red pixels pointed at
by the white arrow: they are background pixels misclassiﬁed as foreground. In
the normal visualization (a) it’s not possible to know why would an algorithm
decide that in that spot there is something belonging to the foreground, as it
is clearly far from regular text. However, when overlapped with the original
image (b) one can clearly see that in this area there is an ink stain which
could explain why the classiﬁcation algorithm is deceived into thinking these
pixels were foreground. This kind of interpretation is obviously not possible
without the information provided by the original image like in (a).

Fig. 3.
Example of multi-label dataset, where the red pixels forming the
“N” are clearly both part of a decoration and part of the text. This image is
extracted from the same dataset used in Figure 1.

the pixels would belong to both text and decoration. Another
example is shown in Figure 3 where the red pixels forming
the “N” are both part of a decoration and part of the text.

The problem that rises going from single to multi-label
classiﬁcation is that computing the confusion matrix is no
longer straightforward. Although it is technically possible to
build one16, there are two major drawbacks. First, the size
of such matrix would be 22n which is impractical (arguably
impossible) for a human to efﬁciently interpret. Second, ex-
tracting T P , T N , F P and F N from such a matrix is much
more complicated both from the theoretical and practical point
of view than in the regular single-label confusion matrix. To
overcome this issue, we compute the contingency table for all
classes separately, like in the example below:

Ground Truth

A

TP

A

A FN

A

FP

TN

Prediction

13The trivial rejector is a classiﬁer that systematically rejects all classes.
14Note that in case of single-class problem, the accuracy is equivalent to
both the exact match and the Hamming score (see Sections IV-A and IV-B).
15The exact number is 2 + (|Ψ| − 2) · (|C| + 2) = 4 · |C| + 10, which
is obtained by concatenating exact match, Hamming score and |C| class-wise
plus micro and macro averaging for all |Ψ| − 2 remaining metrics.

This way we have |C| different matrices of constant size 4
to which is straightforward to apply the formulas presented in
Section IV.

16One can extend the regular confusion matrix with a row/column for each

possible combination of the classes in order to cover all possible cases.

5

image segmentation at pixel

VI. CONCLUSION
This paper promotes a tool that is very easy to use for
level. It
evaluating document
is open-source and freely available, both as a standalone
application and as a RESTful web service. This tool is de-
signed to correctly support single and multi-label problems,
as well as single-class ones. The numerical output metrics are
numerous and reliable, and we strongly suggest the use of
the Jaccard Index (Intersection over Union) for a ﬁrst global
evaluation. Additionally, we generate a very human-friendly
visualization of the results which allows performing jointly a
quick estimation of the prediction quality and a deep inspection
of its mistakes. We plan to extend this tool in the near future
to allow users to provide polygons as input data in the PAGE
XML format.

ACKNOWLEDGMENT
The work presented in this paper has been partially sup-
ported by the HisDoc III project funded by the Swiss National
Science Foundation with the grant number 205120 169618.

REFERENCES

[11] B. Lamiroy and D. Lopresti, “An Open Architecture for End-to-End
Document Analysis Benchmarking,” in 2011 International Conference
on Document Analysis and Recognition, sep 2011, pp. 42–47.
[12] B. Lamiroy, “Dae-ng: a shareable and open document image annotation
data framework conference: 1st international workshop on open services
and tools for document analysis,” in ICDAR-OST17, to appear.
[13] F. Simistira, M. Seuret, N. Eichenberger, A. Garz, M. Liwicki, and
R. Ingold, “Diva-hisdb: A precisely annotated large dataset of chal-
lenging medieval manuscripts,” in Frontiers in Handwriting Recognition
(ICFHR), 2016 15th International Conference on.
IEEE, 2016, pp.
471–476.

[14] Y. Yang, “An evaluation of statistical approaches to text categorization,”
Information Retrieval, vol. 1, no. 1, pp. 69–90, Apr 1999. [Online].
Available: http://dx.doi.org/10.1023/A:1009982220290

[15] R. C. Van, Information Retrieval, 2nd ed. London: Butterworths,

1979. [Online]. Available: http://www.dcs.gla.ac.uk/Keith/

[16] T. Sørensen, “A method of establishing groups of equal amplitude in
plant sociology based on similarity of species and its application to
analyses of the vegetation on danish commons,” Biol. Skr., vol. 5, pp.
1–34, 1948.

[17] L. R. Dice, “Measures of the amount of ecologic association between

species,” Ecology, vol. 26, no. 3, pp. 297–302, 1945.

[18] M. Levandowsky and D. WINTER, “Distance between sets,” Nature,
[Online]. Available:

vol. 234, no. 5323, pp. 34–35, Nov 1971.
http://dx.doi.org/10.1038/234034a0

[1] M. W¨ursch, R. Ingold, and M. Liwicki, “DIVAServices – a RESTful
web service for document image analysis methods,” in Digital Human-
ities, Sydney, Australia, 2015.

[19] F. Sebastiani, “Machine learning in automated text categorization,”
ACM Comput. Surv., vol. 34, no. 1, pp. 1–47, Mar. 2002. [Online].
Available: http://doi.acm.org/10.1145/505282.505283

[2] F. Simistira, M. Seuret, M. Bouillon, M. W¨ursch, M. Alberti, M. Li-
wicki, and R. Ingold, “Icdar2017 competition on layout analysis for
challenging medieval manuscripts,” in Document Analysis and Recog-
nition, 2017 International Conference on, 2017, p. to appear.

[3] M. Baechler and R. Ingold, “Multi resolution layout analysis of me-
dieval manuscripts using dynamic mlp,” in Document Analysis and
Recognition (ICDAR), 2011 International Conference on.
IEEE, 2011,
pp. 1185–1189.

[4] K. Chen, H. Wei, M. Liwicki, J. Hennebert, and R. Ingold, “Robust
text line segmentation for historical manuscript images using color
and texture,” in Pattern Recognition (ICPR), 2014 22nd International
Conference on.

IEEE, 2014, pp. 2978–2983.

[5] M. Alberti, M. Seuret, R.

Ingold, and M. Liwicki, “What you
expect is NOT what you get! questioning reconstruction/classiﬁcation
correlation of stacked convolutional auto-encoder features,” CoRR, vol.
abs/1703.04332, 2017. [Online]. Available: http://arxiv.org/abs/1703.
04332
J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei, “Imagenet:
A large-scale hierarchical image database,” in Computer Vision and
Pattern Recognition, 2009. CVPR 2009. IEEE Conference on.
IEEE,
2009, pp. 248–255.

[6]

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Document Analy-
sis and Recognition (ICDAR), 2011 International Conference on. IEEE,
2011, pp. 1516–1520.

[8] ——, “Icdar 2013 competition on historical newspaper layout analysis
(hnla 2013),” in Document Analysis and Recognition (ICDAR), 2013
12th International Conference on.

IEEE, 2013, pp. 1454–1458.

[9] C. Neudecker, S. Schlarb, Z. M. Dogan, P. Missier, S. Suﬁ, A. Williams,
and K. Wolstencroft, “An experimental workﬂow development platform
for historical document digitisation and analysis,” in Proceedings of the
2011 Workshop on Historical Document Imaging and Processing - HIP
’11, 2011, p. 161.
J. A. S´anchez, G. M¨uhlberger, B. Gatos, P. Schoﬁeld, K. Depuydt,
R. M. Davis, E. Vidal, and J. de Does, “tranScriptorium: a european
project on handwritten text recognition,” in Proceedings of the 2013
ACM symposium on Document engineering - DocEng ’13. ACM Press,
2013, pp. 227–228.

[10]

Open Evaluation Tool for Layout Analysis
of Document Images

Michele Alberti, Manuel Bouillon, Rolf Ingold, Marcus Liwicki
University of Fribourg Switzerland
{ﬁrstname}.{lastname}@unifr.ch

1

7
1
0
2
 
v
o
N
 
3
2
 
 
]

V
C
.
s
c
[
 
 
1
v
6
5
6
1
0
.
2
1
7
1
:
v
i
X
r
a

Abstract—This paper presents an open tool for standardizing
the evaluation process of the layout analysis task of document
images at pixel level. We introduce a new evaluation tool that is
both available as a standalone Java application and as a RESTful
web service. This evaluation tool is free and open-source in order
to be a common tool that anyone can use and contribute to. It
aims at providing as many metrics as possible to investigate layout
analysis predictions, and also provides an easy way of visualizing
the results. This tool evaluates document segmentation at pixel
level, and supports multi-labeled pixel ground truth. Finally, this
tool has been successfully used for the ICDAR 2017 competition
on Layout Analysis for Challenging Medieval Manuscripts.

Keywords—Evaluation Tool, Open-Source, Layout Analysis, Re-

sults Visualization, Web service.

I.

INTRODUCTION
Layout analysis, also known as document segmentation, is a
common task in Document Image Analysis research. Various
evaluation schemes and metrics have been used throughout
different competitions and benchmark reports.

The purpose of this work is to put in common the (typically
additional) work needed to implement an evaluation scheme
for layout analysis methods and have a reviewed source
code to minimize the risk of erroneous implementations. In
a similar way that databases are shared publicly to enable the
easy comparison of methods, we believe that evaluation tools
should be publicly available as well. It saves the necessity to
implement something that already exists, and provide a well-
tested implementation that is less likely to contains bugs.

In this paper, we present a new evaluation tool, that is free
and open-source, for the evaluation of the layout analysis task
of document images at pixel level. It is available both as a
standalone Java application and as a RESTful web service on
DIVAServices [1] for easy integration in any programming
language. We strive making this tool exhaustive by imple-
menting several state-of-the-art metrics. Furthermore, we target
at a reliable tool by having it well-tested and providing it
open-source to enable peer reviews. The tool also provides
visualization capabilities to help understanding the results (see
Figure 1), and the errors made by the evaluated method (see
Figure 2). This tool is also versatile in the sense that it designed
to handle single-label as well as multi-label classiﬁcation
tasks. Finally, this tool has been successfully used for the

1Cologny, Fondation Martin Bodmer, Cod. Bodmer 55: Dante, Inferno
e Purgatorio (Codex Guarneri) (http://www.e-codices.unifr.ch/en/list/one/fmb/
cb-0055).

(a) Original image.

(b) Prediction evaluation visualization

(c) Overlap of prediction evaluation and original image

Fig. 1. Exampleof output visualization produced by our tool for a cropped
area of an image of CB551. In the visualization (b) each pixel can be of ﬁve
different colors: black for correctly classiﬁed background, red for background
mis-classiﬁed as foreground, light-blue for foreground mis-classiﬁed as back-
ground, green for foreground pixels fully correctly classiﬁed and yellow for
foreground pixels which are classiﬁed as such, but of the wrong class (e.g text
instead of decoration).

ICDAR 2017 competition on Layout Analysis for Challenging
Medieval Manuscripts [2]. Although the tool has been tested
in the context of historical documents, it can be used in any
other pixel-level classiﬁcation scenario2, e.g. administrative
documents and text detection in real scenes.

This paper is organized as follows. Section II discusses
related work in evaluation metrics and evaluation tools for
document image analysis. Section III presents this new evalu-
ation tool and how to use it. Section IV describes the different
metrics that are computed by this tool. The visualization capa-
bilities of this tool are also described in this section. Section V
explain the speciﬁcity of the multi-labeled classiﬁcation task,

2This applies to both single and multi-label tasks.

and how the different metrics can be computed in this case.
Finally, Section VI concludes and discusses future work.

II. RELATED WORK

In this section, we present and discuss several existing typ-
ical metrics. Furthermore, we summarize several approaches
to make document analysis evaluation tools available at the
moment.

The evaluation of layout analysis has been discussed by
various researchers in this ﬁeld and different metrics have
been proposed. Often, a simple pixel-accuracy is reported [3],
[4], [5], [6] which we regard as obsolete, because it is too
much biased towards the majority class (see Section IV-G).
Other works take the size of overlapping bounding boxes or
regions into account [7], [8] or measure the Optical Character
Recognition (OCR) performance on the resulting segmented
page.

For providing Open Source tools and services, Neudecker et
al. [9] present an infrastructure providing access to a various
range of tools for the whole OCR workﬂow. The provided tools
can be tried online for free3. Full access to the Web Services
is only available to paying members. In the tranScriptorium
project [10],
the project members provide RESTFul Web
Services4 for their methods as well and some tools on Github.
However, their back-end infrastructure is not open.

Targeting at

the evaluation, Lamiroy and Lopresti [11]
introduced the Document Analysis and Exploitation (DAE)
platform and a recent update called DAE-NG [12]. The DAE-
NG is a more broader effort, targeting the general synchro-
nization of Document Analysis evaluation methods while we
focus on layout analysis and provide various metrics as output.
The tool presented in this paper is available online (see
Section III) and are furthermore integrated into the DIVASer-
vices [1]. Similarly, our tool can be integrated into DAE-NG
or Transcriptorium as well.

III. EVALUATION TOOL

This tool was ﬁrst used for the ICDAR 2017 competition
on Layout Analysis for Challenging Medieval Manuscripts [2].
We choose to make it freely available5 to the DIA community
in order have a common evaluation tool that can be used with
the common databases we use. Its goal is to enable the easy
comparison of different layout analysis methods on the same
database and with the same metrics. This tool was designed for
multi-label classiﬁcation problems, as the competition, but it
can also handle standard classiﬁcation problems. The interest
and speciﬁcity of seeing document image layout analysis as
a multi-labeled classiﬁcation problem will be explained in
Section V.

This tool is free and open-source6, which means that anyone
can use it, modify it and redistribute it. Using this open-
source tool permit to save the time that would be needed to

3https://www.digitisation.eu/tools-resources/demonstrator-platform/
4https://transkribus.eu/wiki/index.php/REST Interface
5https://github.com/DIVA-DIA/LayoutAnalysisEvaluator
6Under LGPL v3 licence.

2

re-implement what already exists, and to greatly reduce the
risk of errors/bugs. Indeed, this implementation of this tool
has been proof-read, and anyone can check the correctness of
the code online. If an error or a bug would be found, it would
be corrected and the correction easily shared with every user.
This segmentation analysis tool is implemented in Java,
which is by deﬁnition multi-platform. A JAR archive is avail-
able for download, and running it without parameters give the
expected inputs:

•

•
•

•

ground truth image: where the labels are encoded as
for the database used for the competition7 (DIVA-
HisDB [13]).
prediction image: same encoding as for the ground truth.
[output ﬁle]: output values will be written in CSV format
to this ﬁle if speciﬁed.
[output directory]: visualization images will be gener-
ated to this folder if speciﬁed.

The output consists of various metrics, in order to evaluate
the prediction and to permit comparisons with a maximum of
published results. As the tool is open-source, anyone can add
new metrics if needed. These different metrics will be detailed
in Section IV.

this evaluation tool

To facilitate the integration of

[1]. First, a POST request with all

in
frameworks using different programming languages, we also
make this tool available as a RESTful web service on
DIVAServices8
the
prediction images included in the JSON content (base64
encoded) should be sent
to the following address http://
divaservices.unifr.ch/api/v2/collections to upload all the pre-
into a collection. Then, one just need
diction images
to send a POST request
to http://divaservices.unifr.ch/api/
v2/evaluation/icdar2017hisdoclayoutcomplineevaluation/1, in-
cluding the ground truth and the hypothesis image collection
names as JSON content. Finally, when the results are com-
puted, DIVAServices send back the results with all the metrics
in JSON format.

IV. METRICS
In this section, we present the different metrics measured

by our tool and brieﬂy discuss their interest.

For each document the tool takes as input a ground truth
image L = ({c ∈ C}i|1 ≤ i < n) and its relative predictions9
L(cid:48), where C is the set of unique classes present
in the
document and n is the total number of pixels in the document.
The output is a set of metrics Ψ = {exact match, Hamming
score, Precision, Recall, F1-Score, Jaccard index} which aims
to provide a variety of scores which should exhaustively
describe the performance of the used algorithm. In fact, it
is recommended to avoid trying to reduce the performance
of a classiﬁcation algorithm into a single score [14]. To
this end, for each metric ψ ∈ Ψ \ {exact match, Hamming
score} we measure the value ψc separately for each class

7http://diuf.unifr.ch/main/hisdoc/icdar2017-hisdoc-layout-comp
8http://divaservices.unifr.ch/api/v2/
9The tool is designed to support multi-label classiﬁcation problems. In the
case of single-label problems, the elements of L and L(cid:48) would not be a set
but a single value.

3

(5)

(6)

(7)

c ∈ C and additionally perform both macro-averaging and
micro-averaging for evaluating the performance average across
classes. Macro-averaged performance scores (denoted by M
superscript) are computed by simply averaging the class-wise
scores, giving equal weight to each class, regardless of their
size, as shown in Eq. 1.

B. Hamming Score

The Hamming score is a relaxed version of the exact match
which accounts for partial matches11. Therefore, it indicates
the fraction of correctly predicted labels. It is computed as 1−
Hamming loss (⊕ denotes exclusive or).

Micro-averaged scores (denoted by the µ superscript) are
obtained by averaging the class-wise scores a weight propor-
tional to their frequency as shown in Eq. 2.

where fc is the class-wise frequency computed as the
cardinality of the set of pixels in the ground truth whose set
of labels contain the class c, over the total amount of labels10
in the ground truth, as shown below:

D. Recall

ψM =

1
|C|

·

(cid:88)

c∈C

ψc

ψµ =

ψc · fc

(cid:88)

c∈C

fc =

|{p|c ∈ Lp}|
(cid:80) |Li|

(1)

(2)

(3)

H = 1 −

1
n · |C|

·

(cid:88)

|L(cid:48)

i ⊕ Li|

C. Precision

The precision of the classiﬁer is deﬁned as the probability
that a random pixel predicted to belong to a class, really
belongs to that class. In other words, Pc denotes how many
of the pixels predicted of class c were actually belonging to
class c.

Pc =

T Pc
T Pc + F Pc

The recall of a classiﬁer is deﬁned as the probability that
a random pixel belonging to a class, will also be predicted to
belong to that class. In other words, Rc denotes how many of
the pixels of class c were actually predicted to be belonging
to class c.

The evaluation is performed pixel-wise and for each of the
classes involved at a single pixel there are four possible cases:

Rc =

T Pc
T Pc + F Nc

• True Positive (TP): both prediction and ground truth

E. F1-Score

• True Negative (TN): both prediction and ground truth

contain the class label.

lack the class label.

• False Positive (FP): the prediction contains the class

label, whereas the ground truth does not.

• False Negative (FN): the prediction lacks the class label,

but the ground truth contains it.

Since neither precision nor recall are conveying enough
information to be used as evaluation metric alone, researchers
developed different ways to combine them. One popular so-
lution is the Fβ function which merges them by assigning β
times more importance to recall than to precision [15]. The F1-
score12 [16] [17] is a special case where precision and recall
are given the same importance.

F1c =

2 · T Pc
2 · T Pc + F Pc + F Nc

= 2 ·

Pc · Rc
Pc + Rc

(8)

The F1-score corresponds to the harmonic mean between

A. Exact Match

The exact match is the most strict metric and literally counts
how many exact matches there are between the predicted
values L(cid:48) and the ground truth labels L.

precision and recall.

F. Jaccard Index

EM =

|{p|L(cid:48)

p = Lp}|
N

The behavior of this metric tends to the behavior of ac-
curacy when the average label cardinality tends to 1. In the
extreme case of single-class problem (where the average label
cardinality is 1) the exact match is equivalent to accuracy.
This relationship makes the exact match sensitive to the same
drawbacks as accuracy (see Section IV-G).

(4)

The Jaccard index often referred as Intersection over Union
(IU) is a statistic used for comparing the similarity and
diversity of sets [18].

IUc =

T Pc
T Pc + F Pc + F Nc

(9)

Unlike accuracy (see Section IV-G) this metric is invariant
to the total number of samples n but sensible to changes in
F P and F N . Additionally, as one can see, it is computed in

10Using the total amount of pixel here would be wrong, as in multi-label

problem the summation of all frequencies would be higher than 1.

11In case of single-label problem they are completely equivalent
12Also known as Sørensen-Dice coefﬁcient.

a similar way to the F1 score (see Equations 8 and 9). The
Jaccard index is, however, much more sensitive to mistakes as
it is not weighting twice the true positive cases. This makes
it effectively the strictest metric in our set Ψ, and despite
we advocate against using a single metric to compare two
algorithms performances, we recommend to use the Jaccard
index if one were to do it anyway.

G. About accuracy

Accuracy is a common performance measure in the machine
learning literature, but there is a potential pitfall if used to
evaluate the performances in a multi-class setting [14], [19].
In fact, as there is n in the denominator (see Eq. 10), a small
change in T Pc or T Nc will practically not affect the ﬁnal result
if n is large enough. Additionally, if there is a high number of
classes or if class sizes are small, the trivial rejector13 might
have a surprisingly high accuracy (close to 100%) because of
T Nc ≈ n. Since in the context of document segmentation
at pixel level these conditions are met — high resolutions
documents have a large n and some classes only have a few
representatives — we consider accuracy not as interesting as
the other metrics aforementioned and we consequently omit14
it in our tool.

ACCc =

T Pc + T Nc
n

(10)

H. Visualization

Once a document is evaluated, the user receives a relatively
huge15 amount of numbers as output, and we felt that might
be not only overwhelming but also difﬁcult to interpret at
times. Therefore we included a visualization method which
allows the user to look at the quality of the prediction through
colors and not through numbers (see Figure 1b). If desired,
this visualization can be overlapped to the original image to
ultimately empower the user to estimate the results with his
own eyes (see Figure 1c). This kind of representation enables
the interpretation of the segmentation mistakes by displaying
exactly which pixels have been misclassiﬁed, which is clearly
not possible with any numerical metric (see Figure 2).

V. MULTI-LABEL
This tool has been designed to support not only multi-
class but multi-label classiﬁcation problems as well. This is
a mandatory requirement
to properly evaluate the datasets
which have a multi-label ground truth (e.g. the DIVA-HisDB
dataset [13]). This kind of dataset is interesting in the context
of historical documents as a foreground pixel might belong to
several classes at the same time. For example, decorations are
frequently used as part of the text, i.e drop caps. In that case,

4

(a) Prediction quality visualization

(b) Overlap of prediction quality
and original image

Fig. 2.
Example supporting the usefulness of overlapping the prediction
quality visualization with the original image. Focus on the red pixels pointed at
by the white arrow: they are background pixels misclassiﬁed as foreground. In
the normal visualization (a) it’s not possible to know why would an algorithm
decide that in that spot there is something belonging to the foreground, as it
is clearly far from regular text. However, when overlapped with the original
image (b) one can clearly see that in this area there is an ink stain which
could explain why the classiﬁcation algorithm is deceived into thinking these
pixels were foreground. This kind of interpretation is obviously not possible
without the information provided by the original image like in (a).

Fig. 3.
Example of multi-label dataset, where the red pixels forming the
“N” are clearly both part of a decoration and part of the text. This image is
extracted from the same dataset used in Figure 1.

the pixels would belong to both text and decoration. Another
example is shown in Figure 3 where the red pixels forming
the “N” are both part of a decoration and part of the text.

The problem that rises going from single to multi-label
classiﬁcation is that computing the confusion matrix is no
longer straightforward. Although it is technically possible to
build one16, there are two major drawbacks. First, the size
of such matrix would be 22n which is impractical (arguably
impossible) for a human to efﬁciently interpret. Second, ex-
tracting T P , T N , F P and F N from such a matrix is much
more complicated both from the theoretical and practical point
of view than in the regular single-label confusion matrix. To
overcome this issue, we compute the contingency table for all
classes separately, like in the example below:

Ground Truth

A

TP

A

A FN

A

FP

TN

Prediction

13The trivial rejector is a classiﬁer that systematically rejects all classes.
14Note that in case of single-class problem, the accuracy is equivalent to
both the exact match and the Hamming score (see Sections IV-A and IV-B).
15The exact number is 2 + (|Ψ| − 2) · (|C| + 2) = 4 · |C| + 10, which
is obtained by concatenating exact match, Hamming score and |C| class-wise
plus micro and macro averaging for all |Ψ| − 2 remaining metrics.

This way we have |C| different matrices of constant size 4
to which is straightforward to apply the formulas presented in
Section IV.

16One can extend the regular confusion matrix with a row/column for each

possible combination of the classes in order to cover all possible cases.

5

image segmentation at pixel

VI. CONCLUSION
This paper promotes a tool that is very easy to use for
level. It
evaluating document
is open-source and freely available, both as a standalone
application and as a RESTful web service. This tool is de-
signed to correctly support single and multi-label problems,
as well as single-class ones. The numerical output metrics are
numerous and reliable, and we strongly suggest the use of
the Jaccard Index (Intersection over Union) for a ﬁrst global
evaluation. Additionally, we generate a very human-friendly
visualization of the results which allows performing jointly a
quick estimation of the prediction quality and a deep inspection
of its mistakes. We plan to extend this tool in the near future
to allow users to provide polygons as input data in the PAGE
XML format.

ACKNOWLEDGMENT
The work presented in this paper has been partially sup-
ported by the HisDoc III project funded by the Swiss National
Science Foundation with the grant number 205120 169618.

REFERENCES

[11] B. Lamiroy and D. Lopresti, “An Open Architecture for End-to-End
Document Analysis Benchmarking,” in 2011 International Conference
on Document Analysis and Recognition, sep 2011, pp. 42–47.
[12] B. Lamiroy, “Dae-ng: a shareable and open document image annotation
data framework conference: 1st international workshop on open services
and tools for document analysis,” in ICDAR-OST17, to appear.
[13] F. Simistira, M. Seuret, N. Eichenberger, A. Garz, M. Liwicki, and
R. Ingold, “Diva-hisdb: A precisely annotated large dataset of chal-
lenging medieval manuscripts,” in Frontiers in Handwriting Recognition
(ICFHR), 2016 15th International Conference on.
IEEE, 2016, pp.
471–476.

[14] Y. Yang, “An evaluation of statistical approaches to text categorization,”
Information Retrieval, vol. 1, no. 1, pp. 69–90, Apr 1999. [Online].
Available: http://dx.doi.org/10.1023/A:1009982220290

[15] R. C. Van, Information Retrieval, 2nd ed. London: Butterworths,

1979. [Online]. Available: http://www.dcs.gla.ac.uk/Keith/

[16] T. Sørensen, “A method of establishing groups of equal amplitude in
plant sociology based on similarity of species and its application to
analyses of the vegetation on danish commons,” Biol. Skr., vol. 5, pp.
1–34, 1948.

[17] L. R. Dice, “Measures of the amount of ecologic association between

species,” Ecology, vol. 26, no. 3, pp. 297–302, 1945.

[18] M. Levandowsky and D. WINTER, “Distance between sets,” Nature,
[Online]. Available:

vol. 234, no. 5323, pp. 34–35, Nov 1971.
http://dx.doi.org/10.1038/234034a0

[1] M. W¨ursch, R. Ingold, and M. Liwicki, “DIVAServices – a RESTful
web service for document image analysis methods,” in Digital Human-
ities, Sydney, Australia, 2015.

[19] F. Sebastiani, “Machine learning in automated text categorization,”
ACM Comput. Surv., vol. 34, no. 1, pp. 1–47, Mar. 2002. [Online].
Available: http://doi.acm.org/10.1145/505282.505283

[2] F. Simistira, M. Seuret, M. Bouillon, M. W¨ursch, M. Alberti, M. Li-
wicki, and R. Ingold, “Icdar2017 competition on layout analysis for
challenging medieval manuscripts,” in Document Analysis and Recog-
nition, 2017 International Conference on, 2017, p. to appear.

[3] M. Baechler and R. Ingold, “Multi resolution layout analysis of me-
dieval manuscripts using dynamic mlp,” in Document Analysis and
Recognition (ICDAR), 2011 International Conference on.
IEEE, 2011,
pp. 1185–1189.

[4] K. Chen, H. Wei, M. Liwicki, J. Hennebert, and R. Ingold, “Robust
text line segmentation for historical manuscript images using color
and texture,” in Pattern Recognition (ICPR), 2014 22nd International
Conference on.

IEEE, 2014, pp. 2978–2983.

[5] M. Alberti, M. Seuret, R.

Ingold, and M. Liwicki, “What you
expect is NOT what you get! questioning reconstruction/classiﬁcation
correlation of stacked convolutional auto-encoder features,” CoRR, vol.
abs/1703.04332, 2017. [Online]. Available: http://arxiv.org/abs/1703.
04332
J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei, “Imagenet:
A large-scale hierarchical image database,” in Computer Vision and
Pattern Recognition, 2009. CVPR 2009. IEEE Conference on.
IEEE,
2009, pp. 248–255.

[6]

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Document Analy-
sis and Recognition (ICDAR), 2011 International Conference on. IEEE,
2011, pp. 1516–1520.

[8] ——, “Icdar 2013 competition on historical newspaper layout analysis
(hnla 2013),” in Document Analysis and Recognition (ICDAR), 2013
12th International Conference on.

IEEE, 2013, pp. 1454–1458.

[9] C. Neudecker, S. Schlarb, Z. M. Dogan, P. Missier, S. Suﬁ, A. Williams,
and K. Wolstencroft, “An experimental workﬂow development platform
for historical document digitisation and analysis,” in Proceedings of the
2011 Workshop on Historical Document Imaging and Processing - HIP
’11, 2011, p. 161.
J. A. S´anchez, G. M¨uhlberger, B. Gatos, P. Schoﬁeld, K. Depuydt,
R. M. Davis, E. Vidal, and J. de Does, “tranScriptorium: a european
project on handwritten text recognition,” in Proceedings of the 2013
ACM symposium on Document engineering - DocEng ’13. ACM Press,
2013, pp. 227–228.

[10]

