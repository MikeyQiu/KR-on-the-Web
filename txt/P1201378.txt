STD2P: RGBD Semantic Segmentation using
Spatio-Temporal Data-Driven Pooling

Yang He1, Wei-Chen Chiu1, Margret Keuper2 and Mario Fritz1
1Max Planck Institute for Informatics,
Saarland Informatics Campus, Saarbr¨ucken, Germany
2University of Mannheim, Mannheim, Germany

7
1
0
2
 
r
p
A
 
6
2
 
 
]

V
C
.
s
c
[
 
 
3
v
8
8
3
2
0
.
4
0
6
1
:
v
i
X
r
a

Abstract

We propose a novel superpixel-based multi-view convo-
lutional neural network for semantic image segmentation.
The proposed network produces a high quality segmentation
of a single image by leveraging information from additional
views of the same scene. Particularly in indoor videos such
as captured by robotic platforms or handheld and body-
worn RGBD cameras, nearby video frames provide diverse
viewpoints and additional context of objects and scenes. To
leverage such information, we ﬁrst compute region corre-
spondences by optical ﬂow and image boundary-based su-
perpixels. Given these region correspondences, we propose
a novel spatio-temporal pooling layer to aggregate infor-
mation over space and time. We evaluate our approach on
the NYU–Depth–V2 and the SUN3D datasets and compare
it to various state-of-the-art single-view and multi-view ap-
proaches. Besides a general improvement over the state-
of- the-art, we also show the beneﬁts of making use of un-
labeled frames during training for multi-view as well as
single-view prediction.

1. Introduction

Consumer friendly and affordable combined image and
depth-sensors such as Kinect are nowadays commercially
deployed in scenarios such as gaming, personal 3D capture
and robotic platforms. Interpreting this raw data in terms
of a semantic segmentation is an important processing step
and hence has received signiﬁcant attention. The goal is
typically formalized as predicting for each pixel in the im-
age plane the corresponding semantic class.

For many of the aforementioned scenarios, an image se-
quence is naturally collected and provides a substantially
richer source of information than a single image. Multiple
images of the same scene can provide different views that
change the observed context, appearance, scale and occlu-
sion patterns. The full sequence provides a richer observa-

Figure 1: An image sequence can provide rich context and
appearance, as well as unoccluded objects for visual recog-
nition systems. Our Spatio-Temopral Data-Driven Pooling
(STD2P) approach integrates the multi-view information to
improve semantic image segmentation in challenging sce-
narios.

tion of the scene and propagating information across views
has the potential to signiﬁcantly improve the accuracy of se-
mantic segmentations in more challenging views as shown
in Figure 1.

Hence, we propose a multi-view aggregation method by
a spatio-temporal data-driven pooling (STD2P) layer which
is a principled approach to incorporate multiple frames
into any convolutional network architecture. In contrast to
previous work on superpixel-based approaches [13, 5, 3],
we compute correspondences over time which allows for
knowledgeable and consistent prediction over space and
time.

As dense annotation of full training sequences is time

1

consuming and not available in current datasets, a key fea-
ture of our approach is training from partially annotated se-
quences. Notably, our model leads to improved semantic
segmentations in the case of multi-view observation as well
as single-view observation at test time. The main contribu-
tions of our paper are:

• We propose a principled way to incorporate super-
pixels and multi-view information into state-of-the-
art convolutional networks for semantic segmentation.
Our method is able to exploit a variable number of
frames with partial annotation in training time.

• We show that training on sequences with partial anno-
tation improves semantic segmentation for multi-view
observation as well as single-view observation.

• We evaluate our method on the challenging semantic
segmentation datasets NYU–Depth–V2 and SUN3D.
There, it outperforms several baselines as well as the
state-of-the-art. In particular, we improve on difﬁcult
classes not well captured by other methods.

2. Related work

works

2.1. Context modeling for fully convolutional net-

Fully convolutional networks (FCN) [28], built on deep
classiﬁcation networks [21, 36], carried their success for-
ward to semantic segmentation networks that are end-to-end
trainable. Context information plays an important role in
semantic segmentation [30], so researchers tried to improve
the standard FCN by modeling or providing context in the
network. Liu et al. [26] added global context features to a
feature map by global pooling. Yu et al. [41] proposed di-
lation convolutions to aggregate wider context information.
In addition, graphical models are applied to model the re-
lationship of neuron activation [6, 42, 27, 24]. Particularly,
Chen et al. [6] combined the strengths of conditional ran-
dom ﬁeld (CRF) with CNN to reﬁne the prediction, and thus
achieved more accurate results. Zheng et al. [42] formu-
lated CRFs as recurrent neural networks (RNN), and trained
the FCN and the CRF-RNN end-to-end. Recurrent neural
networks have also been used to replace graphical models
in learning context dependencies [4, 35, 23], which shows
beneﬁts in complicated scenarios.

Recently, incorporating superpixels in convolutional net-
works has received much attention. Superpixels are able
to not only provide precise boundaries, but also to provide
adaptive receptive ﬁelds. For example, Dai et al. [9] de-
signed a convolutional feature masking layer for semantic
segmentation, which allows networks to extract features in
unstructured regions with the help of superpixels. Gadde et
al. [13] improved the semantic segmentation using super-
pixel convolutional networks with bilateral inception, which

can merge initial superpixels by parameters and generate
different levels of regions. Caesar et al.
[5] proposed a
novel network with free-form ROI pooling which leverages
superpixels to generate adaptive pooling regions. Arnab et
al.
[3] modeled a CRF with superpixels as higher order
potentials, and achieved better results than previous CRF
based methods [6, 42]. Both methods showed the merit
of providing superpixels to networks, which can generate
more accurate segmentations. Different from prior works
[13, 5], we introduce superpixels at the end of convolutional
networks instead of in the intermediate layers and also inte-
grate the response from multiple views with average pool-
ing, which has been used to replace the fully connected lay-
ers in classiﬁcation [25] and localization [43] tasks success-
fully.

2.2. Semantic segmentation with videos

The aim of multi-view semantic segmentation is to em-
ploy the potentially richer information from diverse views
to improve over segmentations from a single view. Couprie
et al.
[8] performed single image semantic segmentation
with learned features with color and depth information, and
applied a temporal smoothing in test time to improve the
performance of frame-by-frame estimations. Hermans et
al. [18] used the Bayesian update strategy to fuse new clas-
siﬁcation results and a CRF model in 3D space to smooth
the segmentation. St¨uckler et al. [37] used random forests
to predict single view segmentations, and fused all views
to the ﬁnal output by a simultaneous localization and map-
ping (SLAM) system. Kundu et al. [22] built a dense 3D
CRF model with correspondences from optical ﬂow to re-
ﬁne semantic segmentation from video. Recently, McCor-
mac et al. [29] proposed a CNN based semantic 3D map-
ping system for indoor scenes. They applied a SLAM sys-
tem to build correspondences, and mapped semantic labels
predicted from CNN to 3D point cloud data. Mustikovela
et al.
[31] proposed to generate pseudo ground truth an-
notations for auxiliary data with a CRF based framework.
With the auxiliary data and their generated annotations, they
achieved a clear improvement.
In contrast to the above
methods, instead of integrating multi-view information by
using graphical models, we utilize optical ﬂow and image
superpixels to establish region correspondences, and design
a superpixel based multi-view network for semantic seg-
mentation.

3. Fully convolutional multi-view segmentation

with region correspondences

Our goal is a multi-view semantic segmentation scheme,
that integrates seamlessly into exciting deep architectures
and produces highly accurate semantic segmentation of a
single view. We further aim at facilitating training from
partially annotated input sequences, so that existing datasets

2

their correspondences inside a CNN architecture. Thus, we
achieve a tight integration of the superpixel segmentation
and multi-view aggregation into a deep learning framework
for semantic segmentation.

3.1. Region correspondences

Motivated by the recent success of superpixel based ap-
proaches in deep learning architectures [13, 5, 1, 10] and the
reduced computational load, we decide for a region-based
approach. In the following, we motivate and detail our ap-
proach on establishing robust correspondences.

Motivation. One key idea of our approach is to map in-
formation from potentially unlabeled frames to the target
frame, as diverse view points can provide additional context
and resolve challenges in appearance and occlusion as illus-
trated in Figure 1. Hence, we do not want to assume visibil-
ity or correspondence of objects across all frames (e.g. the
nightstand in the target frame as shown in Figure 2). There-
fore, video supervoxel methods such as [15] that force in-
terframe correspondences and do not offer any conﬁdence
measure are not suitable. Instead, we establish the required
correspondences on a frame-wise region level.

Superpixels & optical ﬂow. We compute RGBD super-
pixels [17] in each frame to partition a RGBD image into
regions, and apply Epic ﬂow [33] between each pair of con-
secutive frames to link these regions. To take advantage
of the depth information, we utilize the RGBD version of
the structured edge detection [11] to generate boundary es-
timates. Then, Epic ﬂow is computed in forward and back-
ward directions.

Robust spatio-temporal matching. Given the precom-
puted regions in the target frame and all unlabeled frames
as well as the optical ﬂow between those frames, our goal is
to ﬁnd highly reliable region correspondences. For any two
regions Rt in the target frame ft and Ru in an unlabeled
frame fu, we compute their matching score from their inter-
section over union (IoU). Let us assume w.l.o.g. that u < t.
u in ft using forward opti-
Then, we warp Ru from fu to R
−−→
cal ﬂow. The IoU between Rt and R
IoU tu.
←−−
IoU tu with backward optical ﬂow.
Similarly, we compute
We regard Rt and Ru as a successful match if their match-
−−→
ing score meets min(
IoU tu) > τ . We keep the one
with the highest matching score if Rt has several successful
matches. We show the statistics of region correspondences
on the NYUDv2 dataset in Figure 3.

u is denoted by

←−−
IoU tu,

(cid:48)

(cid:48)

It shows that 87.17% of the regions are relatively small
(less than 2000 pixels) The plot on the right shows that those
small regions generally only ﬁnd less than 10 matches in
a whole video. Contrariwise, even slightly bigger regions

Figure 2: Pipeline of the proposed method. Our multi-view
semantic segmentation network is built on top of a CNN. It
takes a RGBD sequence as input and computes the semantic
segmentation of a target frame with the help of unlabeled
frames. We use superpixels and optical ﬂow to establish
region correspondences, and fuse the posterior from multi-
ple views with the proposed Spatio-Temporal Data-Driven
Pooling (STD2P).

can be used and the annotation effort stays moderate for new
datasets. To this end, we draw on prior work on high quality
non-semantic image segmentation and optical ﬂow which is
input to our proposed Spatio-Temporal Data-Driven Pool-
ing (STD2P) layer.

Overview. As illustrated in Figure 2, our method starts
from an image sequence. We are interested in providing
an accurate semantic segmentation of one view in the se-
quence, called target frame, which can be located at any po-
sition in the image sequence. The two components that dis-
tinguish our approach from a standard fully convolutional
architecture for semantic segmentation are, ﬁrst, the com-
putation of region correspondences and, second, the novel
spatio-temporal pooling layer that is based on these corre-
spondences.

We ﬁrst compute the superpixel segmentation of each
frame and establish region correspondences using optical
ﬂow. Then, the proposed data-driven pooling allows to ag-
gregate information ﬁrst within superpixels and then along

3

∂L
∂Is(i, c, x, y)

=

=

∂Os(i, c, j)
∂Is(i, c, x, y)

∂L
∂Os(i, c, j)
∂L
∂Os(i, c, j)

1
|Ωij|

.

(2)

Temporal pooling layer. Similarly, we formulate our
temporal pooling which fuses the information from N
frames It ∈ RN ×C×P , which is the output of spatial pool-
ing layer, to one frame Ot ∈ RC×P . This layer also needs
superpixel information Ωij, which is the superpixel with in-
If Ωij (cid:54)= ∅, there exists
dex j of the i-th input frame.
correspondence. The forward propagation can be expressed
as

Ot(c, j) =

It(i, c, j)

(3)

1
K

(cid:88)

Ωij (cid:54)=∅

for channel index c and region index j, where K =
|{i|Ωij (cid:54)= ∅, 1 ≤ i ≤ N }|, which is the number of matched
frames for j-th region. The gradient is calculated by

∂L
∂It(i, c, j)

∂Ot(c, j)
∂It(i, c, j)

=

=

∂L
∂Ot(c, j)
∂L
1
∂Ot(c, j)
K

.

(4)

Region-to-pixel layer. To directly optimize a semantic
segmentation model with dense annotations, we map the re-
gion based feature map Ir ∈ RC×P to a dense pixel-level
prediction Or ∈ RC×H×W . This layer needs a superpixel
map on the target frame Starget ∈ RH×W to perform for-
ward and backward propagation. The forward propagation
is expressed as

Or(c, x, y) = Ir(c, j), Starget(x, y) = j.

(5)

The gradient is computed by

∂L
∂Ir(c, j)

∂L
∂Or(c, x, y)

∂Or(c, x, y)
∂Ir(c, j)

(cid:88)

(cid:88)

Starget(x,y)=j

=

=

Starget(x,y)=j

∂L
∂Or(c, x, y)

.

(6)

Figure 3: Statistics of region correspondences on the
NYUDv2 dataset. (left) Distribution of region sizes; (right)
Histogram of the average number of matches over region
sizes.

can be matched more easily and they cover large portions
of images. They usually have more than 40 matches in a
whole video, and thus provide adequate information for our
multi-view network.

3.2. Spatio-Temporal Data-Driven Pooling (STD2P)

Here, we describe our Spatio-Temporal Data-Driven
Pooling (STD2P) model that uses the spatio-temporal struc-
ture of the computed region correspondences to aggregate
information across views as illustrated in Figure 2. While
the proposed method is highly compatible with recent CNN
and FCN models, we build on a per frame model using [28].
In more detail, we reﬁne the output of the deconvolution
layer with superpixels and aggregate the information from
multiple views by three layers: a spatial pooling layer, a
temporal pooling layer and a region-to-pixel layer.

Spatial pooling layer. The input to the spatial pooling
layer is a feature map Is ∈ RN ×C×H×W for N frames,
C channels with size H × W and a superpixel map S ∈
RN ×H×W encoded with the region index. It generates the
output Os ∈ RN ×C×P , where P is the maximum num-
ber of superpixels. The superpixel map S guides the for-
ward and backward propagation of the layer. Here, Ωij =
{(x, y)|S(i, x, y) = j} denotes a superpixel in the i-th
frame with region index j. Then, the forward propagation
of spatial average pooling can be formulated as

Os(i, c, j) =

Is(i, c, x, y)

(1)

(cid:88)

1
|Ωij|

(x,y)∈Ωij

for each channel index c of the i-th frame and region in-
dex j. We train our model using stochastic gradient de-
scent. The gradient of the input Is(i, c, x, y), where (x, y) ∈
Ωij, in our spatial pooling is calculated by back propaga-
tion [34],

4

Image

GT

CRF-RNN

DeepLab-LFOV

BI(3000)

E2S2

FCN

Singleview SP Multiview Pixel Our full model

Figure 4: Visualization examples of the semantic segmentation on NYUDv2. Column 1 shows the RGB images and column
2 shows the ground truth (black represents the unlabeled pixels). Columns 3 to 6 show the results from CRF-RNN [42],
DeepLab-LFOV [7], BI(3000) [13] and E2S2 [5], respectively. Columns 7 to 9 show the results from FCN [28], single-view
superpixel and multi-view pixel baselines. The results from our whole system are shown in column 10. Best viewed in color.

Implementation details. We regard the frames with
groundtruth annotations as target frames. For each target
frame, we equidistantly sample up to 100 frames around it
with the static interval of 3 frames. Next, we compute the
superpixels [17] and Epic ﬂow [33] with the default settings
provided in the corresponding source codes. The thresh-
old τ for the computation of region correspondence is 0.4
(cf. section 3.1). Finally, for each RGBD sequence, we
randomly sample 11 frames including the target frame to-
gether with their correspondence maps as the input for our
network. We use RGB images and HHA representations
of depth [17] and train the network by stochastic gradient
descent with momentum term. Due to the memory lim-
itation, we ﬁrst run FCN and cache the output pool4 rgb
and pool4 hha. Then, we ﬁnetune the layers after pool4
with a new network which is the copy of the higher lay-
ers in FCN. We use a minibatch size of 10, momentum
0.9, weight decay 0.0005 and ﬁxed learning rate 10−14.
We ﬁnetune our model by using cross entropy loss with
1000 iterations for all our models in the experiments. We
implement the proposed network using the Caffe frame-
work [19], and the source code is available at https:
//github.com/SSAW14/STD2P.

ing images and 654 testing images. We follow the exper-
imental settings of [10] to test on 65 labeled frames. We
compare our models of different settings to previous state-
of-the-art multi-view methods as well as single-view meth-
ods, which are summarized in Table 1. We report the results
on the labeled frames, using the same evaluation protocol
and metrics as [28], pixel accuracy (Pixel Acc.), mean ac-
curacy (Mean Acc.), region intersection over union (Mean
IoU), and frequency weighted intersection over union (f.w.
IoU).

Table 1: Conﬁgurations of competing methods

RGB

RGBD

Single-View
Multi-View

[12, 20]
/

[5, 6, 7, 10, 13, 17, 28, 38, 39, 42]
[8, 18, 37, 29]

4.1. Results on NYUDv2 40-class task

Table 2 evaluates performance of our method on
NYUDv2 40-class task and compares to state-of-the-art
methods and related approaches [28, 10, 17, 20, 12, 42, 6,
7, 13, 5] 1. We include 3 versions of our approach:

4. Experiments and analysis

We evaluate our approach on the 4-class [32], 13-
class [8], and 40-class [16] tasks of the NYU–Depth–V2
(NYUDv2) dataset [32], and 33-class task of the SUN3D
dataset [40].

The NYUDv2 dataset contains 518 RGBD videos, which
have more than 400,000 images. Among them, there are
1449 densely labeled frames, which are split into 795 train-

Our superpixel model
is trained on single frames without
additional unlabeled data, and tested using a single target
frame. It improves the baseline FCN on all four metrics by
at least 2 percentage points (pp), and it achieves in particular

1For [28, 10, 17, 20, 12], we copy the performance from their paper. For
[42, 6, 7, 13, 5], we run the code provided by the authors with RGB+HHA
images. Speciﬁcally, for [13], we also increase the maximum number of
superpixels from 1000 to 3000. The original coarse version and the ﬁne
version are abbreviated as BI(1000) and BI(3000).

5

Table 2: Performance of the 40-class semantic segmentation task on NYUDv2. We compare our method to various state-of-
the-art methods: [28, 17, 20, 12] are also based on convolutional networks, [6, 42, 7] are the models based on convolutional
networks and CRF, and [13, 5, 10] are region labeling methods, and thus related to ours. We mark the best performance in
all methods with BOLD font, and the second best one is written with UNDERLINE.

Methods

Mutex Constraints [10]
RGBD R-CNN [17]
Bayesian SegNet [20]
Multi-Scale CNN [12]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel)
Ours (superpixel+)
Ours (full model)

Methods

Mutex Constraints [10]
RGBD R-CNN [17]
Bayesian SegNet [20]
Multi-Scale CNN [12]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel)
Ours (superpixel+)
Ours (full model)

l
l
a
w

65.6
68.0
-
-
70.3
67.9
70.2
62.8
61.7
56.9
69.9

70.9
72.4
72.7

n
i
a
t
r
u
c

47.6
29.1
-
-
34.8
32.9
36.0
29.3
30.8
38.0
32.5

34.5
42.9
40.7

r
o
o
ﬂ

79.2
81.3
-
-
81.5
83.0
85.2
66.8
68.1
67.8
79.4

83.4
84.3
85.7

r
e
s
s
e
r
d

27.6
34.8
-
-
33.2
34.3
36.9
20.3
22.9
34.8
31.0

41.6
35.9
44.1

t
e
n
i
b
a
c

51.9
44.9
-
-
49.6
53.1
55.3
44.2
45.2
50.0
50.3

52.6
52.0
55.4

w
o
l
l
i
p

42.5
34.4
-
-
34.7
40.2
41.4
21.7
19.5
31.5
37.5

37.7
40.8
42.0

d
e
b

66.7
65.0
-
-
64.6
66.8
68.9
47.7
50.6
59.5
66.0

68.5
71.5
73.6

r
o
r
r
i

m

30.2
16.4
-
-
20.8
23.7
32.5
13.0
13.9
31.7
22.4

20.1
27.7
34.5

r
i
a
h
c

41.0
47.9
-
-
51.4
57.8
60.5
35.8
38.9
43.8
47.5

54.1
54.3
58.5

t
a
m
r
o
o
ﬂ

32.7
28.0
-
-
24.0
15.0
16.0
18.2
16.1
25.3
13.6

15.9
31.9
35.6

a
f
o
s

55.7
47.9
-
-
50.6
57.8
59.8
35.9
40.3
44.3
53.2

56.0
58.8
60.1

s
e
h
t
o
l
c

12.6
4.7
-
-
18.7
20.2
17.8
14.1
13.7
14.2
18.3

20.1
19.3
22.2

e
l
b
a
t

36.5
29.9
-
-
35.9
43.4
44.5
10.9
26.2
31.3
32.8

40.4
37.9
42.7

g
n
i
l
i
e
c

56.7
60.5
-
-
60.9
55.1
58.4
44.7
42.5
39.7
59.1

56.8
55.6
55.9

r
o
o
d

20.3
20.3
-
-
24.6
19.4
25.4
18.3
20.9
24.6
22.1

25.5
28.2
30.2

s
k
o
o
b

8.9
6.4
-
-
29.5
22.1
20.5
10.9
21.3
26.7
27.3

28.8
28.2
29.8

w
o
d
n
i
w

33.2
32.6
-
-
38.1
45.5
47.8
21.5
36.0
37.9
39.0

38.4
41.9
42.1

e
g
d
i
r
f

21.6
14.5
-
-
31.2
30.6
45.1
21.5
16.6
27.1
27.0

23.8
38.3
41.7

f
l
e
h
s
k
o
o
b

32.6
18.1
-
-
36.0
41.5
42.6
35.9
34.4
32.7
36.1

40.9
38.5
41.9

v
t

19.2
31.0
-
-
41.1
49.4
48.0
30.4
30.9
35.2
41.9

51.8
46.9
52.5

e
r
u
t
c
i
p

44.6
40.3
-
-
48.8
49.3
47.9
41.5
40.8
46.1
50.5

51.5
52.3
52.9

r
e
p
a
p

28.0
14.3
-
-
18.2
21.8
21.0
18.8
14.9
17.8
15.9

19.1
17.6
21.1

r
e
t
n
u
o
c

53.6
51.3
-
-
52.6
58.3
57.7
30.9
31.6
45.0
54.2

54.8
58.2
59.7

l
e
w
o
t

28.6
16.3
-
-
25.6
32.1
41.5
22.3
23.3
21.0
26.1

26.6
31.2
34.4

s
d
n
i
l
b

49.1
42.0
-
-
47.6
47.8
52.4
47.4
48.3
51.8
45.8

47.3
49.7
46.7
n
i
a
t
r
u
c
r
e
w
o
h
s

22.9
4.2
-
-
23.0
6.4
9.4
17.7
17.8
19.9
14.1

29.3
11.0
15.5

s
e
v
l
e
h
s

9.1
3.5
-
-
7.6
7.3
9.1
8.5
7.9
9.1
8.6

7.5
8.1
9.4

d
r
a
o
b
e
t
i
h
w

1.0
14.2
-
-
13.9
14.8
14.3
12.4
9.9
36.9
12.9

4.7
28.2
29.2

k
s
e
d

10.8
11.3
-
-
13.2
15.5
20.7
12.8
9.3
15.8
11.9

11.3
14.3
13.5

x
o
b

1.6
2.1
-
-
7.4
5.8
8.0
5.5
3.3
7.4
6.5

6.8
6.5
7.8

Methods

Mutex Constraints [10]
RGBD R-CNN [17]
Bayesian SegNet [20]
Multi-Scale CNN [12]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel)
Ours (superpixel+)
Ours (full model)

d
n
a
t
s
t
h
g
i
n

30.6
27.2
-
-
31.4
37.7
41.8
15.8
15.8
17.6
30.1

37.4
34.1
42.2

n
o
s
r
e
p

9.6
0.2
-
-
57.9
55.3
67.0
45.9
44.7
35.0
57.6

66.1
66.7
60.7

t
e
l
i
o
t

48.4
55.1
-
-
57.2
57.9
69.7
56.5
53.8
31.8
61.3

56.1
62.8
62.7

k
n
i
s

41.8
37.5
-
-
45.4
47.7
46.8
32.2
32.1
36.3
44.8

46.3
47.8
47.4

p
m
a
l

28.1
34.8
-
-
36.9
40.0
40.1
24.7
22.8
14.8
32.1

34.5
35.1
38.6

t
c
u
r
t
s

r
e
h
t
o

9.8
7.1
-
-
14.6
18.0
20.7
12.2
12.3
14.5
15.2

12.7
19.3
18.8

i
n
r
u
f

r
e
h
t
o

7.6
6.1
-
-
9.5
12.9
12.4
6.7
5.3
9.3
7.7

12.3
10.9
15.1

s
p
o
r
p

r
e
h
t
o

24.5
23.1
-
-
29.5
33.8
33.5
21.9
23.2
20.9
30.0

30.6
29.2
31.4

.
c
c
A

l
e
x
i
P

63.8
60.3
68.0
65.6
66.3
68.7
70.3
57.7
58.9
58.1
65.4

68.5
68.4
70.1

.
c
c
A
n
a
e

M

-
-
45.8
45.1
48.9
46.9
49.6
37.8
39.3
52.9
46.1

48.7
52.1
53.8

U
o
I

n
a
e

M

31.5
28.6
32.4
34.1
35.4
36.8
39.4
27.1
27.7
31.0
34.0

36.0
38.1
40.1

U
o
I

.

w

.
f

48.5
47.0
-
51.4
51.0
52.5
54.7
41.9
43.0
44.2
49.5

52.9
54.0
55.7

g
a
b

0
0.2
-
-
4.9
6.6
2.1
0.1
0.1
9.9
4.8

5.8
8.8
7.3

better performance than recently proposed methods based
on superpixels and CNN[13, 5].

Our superpixel+ model
leverages additional unlabeled
data in the training while it only uses the target frame for
test. It obtains 3.4pp, 2.1pp, 1.1pp improvements over the

superpixel model on Mean Acc., Mean IoU and f.w. IoU,
leading to more favorable performance than many state-of-
the-art methods [10, 17, 20, 12, 42, 6, 13, 5]. This highlights
the beneﬁts of leveraging unlabeled data.

b
u
t
h
t
a
b

27.6
38.2
-
-
39.1
44.7
45.1
17.1
19.0
26.0
39.2

26.7
26.4
28.5

6

Table 3: Comparison of average and max spatio-temporal
data-driven pooling.

Spatial/Temporal

Pixel Acc. Mean Acc. Mean IoU

f.w. IoU

AVG / AVG
AVG / MAX
MAX / AVG
MAX / MAX

70.1
69.4
66.4
64.9

53.8
51.0
45.4
44.5

40.1
38.0
33.8
32.1

55.7
54.4
49.6
47.9

It achieves a consistent

Our full model
leverages additional unlabeled data both
in the training and test.
im-
provement over the superpixel+ model and outperforms
IoU
all competitors in Mean Acc., Mean IoU and f.w.
by 0.9pp, 0.7pp, 1.0pp respectively.
Particularly strong
improvements are observed on challenging object classes
such as dresser(+7.2pp), door(+4.8pp), bed(+4.7pp) and
TV(+3.1pp).

Figure 4 demonstrates that our method is able to produce
smooth predictions with accurate boundaries. We present
the most related methods, which either apply CRF [42, 7]
or incorporate superpixels [13, 5], in the columns 3 to 6
of this ﬁgure. According to the qualitative comparison to
these approaches, we can see the beneﬁt of our method. It
captures small objects like chair legs, as well as large areas
like ﬂoormat and door. In addition, we also present FCN
and the superpixel model at the 7-th and 8-th column of
Figure 4. The FCN is boosted by introducing superpixels
but not as precise as our full model using unlabeled data.

Average vs. max spatio-temporal data-driven pooling.
Our data-driven pooling aggregates the local information
from multiple observations within a segment and across
multiple views. Average pooling and max pooling are
canonical choices used in many deep neural network archi-
tectures. Here we test average pooling and max pooling
both in the spatial and temporal pooling layer, and show the
results in Table 3. All the models are trained with multi-
ple frames, and tested on multiple frames. Average pooling
turns out to perform best for spatial and temporal pooling.
This result conﬁrms our design choice.

Region vs. pixel correspondences. We compare our full
model, which is built on the region correspondences, to the
model with pixel correspondences. It only uses the per-pixel
correspondences by optical ﬂow and applies average pool-
ing to fuse the information from multiple view. The visual-
ization results of this baseline are presented in column 9 of
Figure 4. Obtaining accurate pixel correspondences is chal-
lenging because the optical ﬂow is not perfect and the error
can accumulate over time. Consequently, the model with
pixel correspondences only improves slightly over the FCN
baseline, as it is also reﬂected in the numbers in Table 4.
Establishing region correspondences with the proposed re-

Figure 5: The performance of multi-view prediction with
varying maximum distance. Green lines show the results of
using future and past views. Blue lines show the results of
only using past views.

Table 4: Comparison results with baselines on NYUDv2
40-class task

Methods

Pixel Acc. Mean Acc. Mean IoU

f.w. IoU

FCN [28]
Pixel Correspondence
Superpixel Correspondence

65.4
66.2
70.1

46.1
45.9
53.8

34.0
34.6
40.1

49.5
50.2
55.7

jection strategy described in section 3.1 seems indeed to be
favorable over pixel correspondences. Our full model shows
a signiﬁcant improvement over the pixel-correspondence
baseline and FCN in all 4 measures.

Analysis of multi-view prediction.
In our multi-view
model, we subsample frames from a whole video for com-
putational considerations. There is a trade-off between
close-by and distant frames to be made. If we select frames
far away from the target frames, they can provide more di-
verse views of an object, while matching is more challeng-
ing and potentially less accurate than for close-by frames.
Hence, we analyze the inﬂuence of the distance of selected
frames to target frames, and report the Mean Acc. and Mean
IoU in Figure 5. In results, providing wider views is help-
ful, as the performance is improved with the increase of max
distance. And selecting the data in the future, which is an-
other way to provide wider views, also contributes to the
improvements of performance.

4.2. Results on NYUDv2 4-class and 13-class tasks
To show the effectiveness of our multi-view seman-
tic segmentation approach, we compare our method to
previous state-of-the-art multi-view semantic segmentation
methods [8, 18, 37, 29] on the 4-class and 13-class tasks of
NYUDv2 as shown in Table 5. Besides, we also present pre-
vious state-of-the-art single-view methods [12, 39, 38]. We
observe that our superpixel+ model already outperforms
all the multi-view competitors, and the proposed temporal
pooling scheme further boosts Pixel Acc. and Mean Acc.
by more than 1pp and then outperforms the state-of-the-art

7

Image

GT

CRF-RNN

DeepLab-LFOV

BI(3000)

E2S2

FCN

Our full model

Figure 6: Qualititive results of the SUN3D dataset. For each example, the images are arranged from top to bottom, from left
to right as color image, groundtruth, CRF-RNN [42], DeepLab-LFOV [7], BI [13], E2S2 [5], FCN [28] and ours.

Table 5: Performance of the 4-class (left) and 13-class
(right) semantic segmentation tasks on NYUDv2.

Table 6: Performance of the 33-class semantic segmentation
task on SUN3D. All 65 images are used as the test set.

Methods

Pixel Acc. Mean Acc.

Pixel Acc. Mean Acc.

Methods

Pixel Acc. Mean Acc. Mean IoU

f.w. IoU

Couprie et al. [8]
Hermans et al. [18]
St¨uckler et al. [37]
McCormac et al. [29]

Wang et al. [38]
Wang et al. [39]
Eigen et al. [12]

Ours (superpixel+)
Ours (full model)

64.5
69.0
70.6
-

-
-
83.2

82.7
83.6

63.5
68.1
66.8
-

65.3
74.7
82.0

81.3
82.5

52.4
54.2
-
69.9

-
-
75.4

74.8
75.8

36.2
48.0
-
63.6

42.2
52.7
66.9

67.0
68.4

Mutex Constraints [10]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel+)
Ours (full model)

65.7
59.8
60.9
62.3
53.8
53.9
56.7
58.8

62.5
65.5

-
-
30.7
35.3
31.1
31.6
47.7
38.5

40.8
41.2

28.2
25.5
24.0
28.2
20.8
21.1
27.2
26.1

29.4
32.9

51.0
43.3
44.1
46.2
37.1
37.4
43.3
43.9

47.8
51.5

[12]. In particular, the recent proposed method by McCor-
mac et al. [29] is also built on CNN, however, their perfor-
mance on 13-class task is about 5pp worse than ours.

4.3. Results on SUN3D 33-class task

Table 6 shows the results of our method and baselines
on the SUN3D dataset. We follow the experimental settings
of [10] to test all the methods [10, 42, 6, 7, 13, 5, 28] on
all 65 labeled frames in SUN3D, which are trained with the
NYUDv2 40-class annotations. After computing the 40-
class prediction, we map 7 unseen semantic classes into 33
classes. Speciﬁcally, ﬂoormat is merged to ﬂoor, dresser is
merged to other furni and ﬁve other classes are merged to
other props. Among all the methods, we achieve the best
Mean IoU score that our superpixel+ and full model are
1.2pp and 4.7pp better than [10] and [7] . For Pixel Acc.,
our method is comparable to the previous state of the art
[10]. In addition, we observe that our superpixel+ model
boosts the baseline FCN by 3.7pp, 2.3pp, 3.3pp, 3.9pp on
the four metrics, and applying multi-view information fur-
ther improves 3.0pp, 0.4pp, 3.5pp, 3.7pp, respectively. Be-
sides, we achieve much better performance than DeepLab-

LFOV, which is comparable to our model on the NYUDv2
40-class task. This illustrates the generalization capability
of our model, even without ﬁnetuning on the new domain
or dataset.
5. Conclusion

We have presented a novel semantic segmentation ap-
proach using image sequences. We design a superpixel-
based multi-view semantic segmentation network with
spatio-temporal data-driven pooling which can receive mul-
tiple images and their correspondence as input. We prop-
agate the information from multiple views to the target
frame, and signiﬁcantly improve the semantic segmentation
performance on the target frame. Besides, our method can
leverage large scale unlabeled images for training and test,
and we show that using unlabeled data also beneﬁts single
image semantic segmentation.

Acknowledgments

This research was supported by the German Research
Foundation (DFG CRC 1223) and the ERC Starting Grant
VideoLearn.

8

References

[1] P. Arbel´aez, B. Hariharan, C. Gu, S. Gupta, L. Bourdev, and
J. Malik. Semantic segmentation using regions and parts. In
CVPR, 2012.

[2] P. Arbelaez, M. Maire, C. Fowlkes, and J. Malik. Contour de-
tection and hierarchical image segmentation. TPAMI, 2011.
[3] A. Arnab, S. Jayasumana, S. Zheng, and P. H. Torr. Higher
order conditional random ﬁelds in deep neural networks. In
ECCV, 2016.

[4] W. Byeon, T. M. Breuel, F. Raue, and M. Liwicki. Scene la-
beling with lstm recurrent neural networks. In CVPR, 2015.
[5] H. Caesar, J. Uijlings, and V. Ferrari. Region-based semantic
segmentation with end-to-end training. In ECCV, 2016.
[6] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
volutional nets and fully connected crfs. In ICLR, 2014.
[7] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Deeplab: Semantic image segmentation with
deep convolutional nets, atrous convolution, and fully con-
nected crfs. arXiv preprint arXiv:1606.00915, 2016.

[8] C. Couprie, C. Farabet, L. Najman, and Y. LeCun. Indoor
In ICLR,

semantic segmentation using depth information.
2013.

[9] J. Dai, K. He, and J. Sun. Convolutional feature masking for

joint object and stuff segmentation. In CVPR, 2015.

[10] Z. Deng, S. Todorovic, and L. Jan Latecki. Semantic seg-
mentation of rgbd images with mutex constraints. In CVPR,
2015.

[11] P. Doll´ar and C. Zitnick. Structured forests for fast edge de-

tection. In CVPR, 2013.

[12] D. Eigen and R. Fergus. Predicting depth, surface normals
and semantic labels with a common multi-scale convolu-
tional architecture. In ICCV, 2015.

[13] R. Gadde, V. Jampani, M. Kiefel, and P. V. Gehler. Super-
pixel convolutional networks using bilateral inceptions.
In
ECCV, 2016.

[14] F. Galasso, N. S. Nagaraja, T. J. Cardenas, T. Brox, and
B. Schiele. A uniﬁed video segmentation benchmark: An-
notation, metrics and analysis. In ICCV, 2013.

[15] M. Grundmann, V. Kwatra, M. Han, and I. Essa. Efﬁcient hi-
erarchical graph based video segmentation. In CVPR, 2010.
[16] S. Gupta, P. Arbelaez, and J. Malik. Perceptual organiza-
tion and recognition of indoor scenes from rgb-d images. In
CVPR, 2013.

[17] S. Gupta, R. Girshick, P. Arbel´aez, and J. Malik. Learning
rich features from rgb-d images for object detection and seg-
mentation. In ECCV. 2014.

[18] A. Hermans, G. Floros, and B. Leibe. Dense 3d semantic
mapping of indoor scenes from rgb-d images. In ICRA, 2014.
[19] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long, R. Gir-
shick, S. Guadarrama, and T. Darrell. Caffe: Convolutional
architecture for fast feature embedding. In ACM Multimedia,
2014.

[20] A. Kendall, B. Vijay, and R. Cipolla. Bayesian segnet:
Model uncertainty in deep convolutional encoder-decoder
arXiv preprint
architectures for scene understanding.
arXiv:1511.02680, 2015.

[21] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

classiﬁcation with deep convolutional neural networks.
NIPS, 2012.

Imagenet
In

[22] A. Kundu, V. Vineet, and V. Koltun. Feature space optimiza-
tion for semantic video segmentation. In CVPR, 2016.
[23] Z. Li, Y. Gan, X. Liang, Y. Yu, H. Cheng, and L. Lin. Lstm-
cf: Unifying context modeling and fusion with lstms for rgb-
d scene labeling. In ECCV, 2016.

[24] G. Lin, C. Shen, I. Reid, et al. Efﬁcient piecewise training of
deep structured models for semantic segmentation. In CVPR,
2015.

[25] M. Lin, Q. Chen, and S. Yan. Network in network. In ICLR,

2014.

[26] W. Liu, A. Rabinovich, and A. C. Berg. Parsenet: Looking
wider to see better. arXiv preprint arXiv:1506.04579, 2015.
[27] Z. Liu, X. Li, P. Luo, C.-C. Loy, and X. Tang. Semantic im-
age segmentation via deep parsing network. In ICCV, 2015.
[28] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In CVPR, 2015.
[29] J. McCormac, A. Handa, A. Davison, and S. Leutenegger.
Semanticfusion: Dense 3d semantic mapping with convo-
lutional neural networks. arXiv preprint arXiv:1609.05130,
2016.

[30] R. Mottaghi, X. Chen, X. Liu, N.-G. Cho, S.-W. Lee, S. Fi-
dler, R. Urtasun, and A. Yuille. The role of context for object
detection and semantic segmentation in the wild. In CVPR,
2014.

[31] S. K. Mustikovela, M. Y. Yang, and C. Rother. Can ground
truth label propagation from video help semantic segmenta-
tion? ECCV Workshop on Video Segmentation, 2016.
[32] P. K. Nathan Silberman, Derek Hoiem and R. Fergus. Indoor
In
segmentation and support inference from rgbd images.
ECCV, 2012.

[33] J. Revaud, P. Weinzaepfel, Z. Harchaoui, and C. Schmid.
Epicﬂow: Edge-preserving interpolation of correspondences
for optical ﬂow. In CVPR, 2015.

[34] D. E. Rumelhart, G. E. Hinton, and R. J. Williams. Learning
representations by back-propagating errors. Cognitive mod-
eling, 5(3):1, 1988.

[35] B. Shuai, Z. Zuo, G. Wang, and B. Wang. Dag-recurrent

neural networks for scene labeling. In CVPR, 2016.

[36] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. arXiv preprint
arXiv:1409.1556, 2014.

[37] J. St¨uckler, B. Waldvogel, H. Schulz, and S. Behnke. Dense
real-time mapping of object-class semantics from rgb-d
video. Journal of Real-Time Image Processing, 10(4), 2015.
[38] A. Wang, J. Lu, W. Gang, J. Cai, and T.-J. Cham. Multi-
modal unsupervised feature learning for rgb-d scene label-
ing. In ECCV, 2014.

[39] J. Wang, Z. Wang, D. Tao, S. See, and G. Wang. Learning
common and speciﬁc features for rgb-d semantic segmenta-
tion with deconvolutional networks. In ECCV, 2016.
[40] J. Xiao, A. Owens, and A. Torralba. Sun3d: A database
of big spaces reconstructed using sfm and object labels. In
ICCV, 2013.

9

[41] F. Yu and V. Koltun. Multi-scale context aggregation by di-

lated convolutions. In ICLR, 2016.

[42] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. Torr. Conditional random
ﬁelds as recurrent neural networks. In ICCV, 2015.

[43] B. Zhou, A. Khosla, L. A., A. Oliva, and A. Torralba. Learn-
ing Deep Features for Discriminative Localization. In CVPR,
2016.

10

Supplementary Materials

A. Analysis of semantic segmentation boundary ac-

curacy

In order to quantify the improvement on semantic bound-
ary localization based on the proposed data-driven pooling
scheme, we use Boundary Precision Recall (BPR), as also
used in image or video segmentation benchmark [14, 2]
Figure 7 shows the resulting semantic
for evaluation.
boundary average precision-recall curve. We conclude
that our method generates more accurate boundaries than
FCN, which achieve 0.477 BPR score while our method
achieves 0.647. Besides, our method even improves on
the superpixel [17] we build on, which means our method
can successfully merge over-segmentations or non-semantic
boundaries between adjacent instances of the same seman-
tic class.

Figure 7: Precision-recall curve on semantic boundaries on
the NYUDv2 dataset.

B. Oracle performance using groundtruth labels

Table 7: The performance of oracle case using groundtruth
to label the regions.

F. Failure cases

Groundtruth

Pixel Acc. Mean Acc. Mean IoU

f. w. IoU

Current Frame
Next Frame

96.2
84.7

94.0
76.2

90.2
63.4

92.7
74.4

We perform two best-case analysis by computing an or-
acle performance where groundtruth labels are available for
either reference or target frames. The ﬁrst row of Table 7
shows the achievable performance by performing a major-
ity vote of the groundtruth pixel labels on the employed su-
perpixels from [17]. Thereby we achieve an upper bound

11

of 96.2% on the pixel accuracy that is implied by the su-
perpixel over-segmentation. In order to evaluate the effec-
tiveness of our region correspondence, we use groundtruth
labels of reference frames in the sequence. We collect
143 views to conduct this experiment in NYUDv2, which
have corresponding regions in target frames. We ignore
regions without correspondence in the next frame to com-
pute the quantitative results, which are presented in Table 7.
This best-case analysis for correspondence results in a pixel
accuracy of 84.7%. Both oracle performances indicate a
strong potential for performance improvements in our setup
in all 4 reported measures.

C. Groundtruth analysis

At a closer look, it turns out that at least part of the per-
formance loss in the best-case analysis for the correspon-
dence is not due to bad matches between regions. In Fig.
8, we present some examples of the annotations provided in
the dataset. In several cases, as the ones shown in the ﬁgure,
the labeling is inconsistent and object labels are changed
during the sequence. From left to right in Fig. 8, table
changes to desk, table changes to dresser, ﬂoor changes to
ﬂoor mat, bookshelf changes to shelves, cabinet changes
to other-furniture, and window changes to blinds. Conse-
quently, we see mistakes in the last two rows corresponding
to the best case results due to inconsistent labelings.

D. Qualitative results on NYUDv2 4-class and 13-

class task

We provide the qualitative results of 4-class and 13-class
tasks of NYUDv2 dataset in Figure 9 and Figure 10 respec-
tively.

E. Qualitative results on NYUDv2 40-class task

We provide more qualititative results in the following
ﬁgures. We pick up some major scene categories from the
test set including bedroom (Figure 11), living room (Figure
12), dining room (Figure 13), kitchen (Figure 14), bathroom
(Figure 15), ofﬁce (Figure 16) and classroom (Figure 17).

In this section, we present some failure cases of our
methods in Figure 18.
In those views, our method does
not achieve better result. In the ﬁrst two rows, we cannot
segment the regions marked with white bounding box. This
is because the superpixel in this two views cannot success-
ful segment the regions. We use the same parameter for all
views, so it fails to provide good superpixels for our sys-
tem, but we believe that it is not difﬁcult to get better su-
perpixels for those failure views by adjusting the parameter
of superpixel. In the third and fourth rows, we recognize
the region as “cabinet” and “ﬂoormat” while groundtruth
are “dresser” and “ﬂoor”, which are also difﬁcult for human

Figure 8: Example of groundtruth limitation and segmentation results of oracle case. Row 3 and 2 draw color images of
target frame and next labeled frame, respectively. And row 4 and 1 draw their groundtruth. The segmentation result with
groundtruth of target frame is shown in row 5, and the result with groundtruth of next frame is shown in row 6. We point out
the regions in different frames with white bounding box, which are the same object of different views but labeled as different
classes.

beings to classify. In the last two rows, we show some chal-
lenges, which make our system fail to correctly recognize
the region.

12

Figure 9: Semantic segmentation results of 4-class task on NYUDv2.

13

Figure 10: Semantic segmentation results of 13-class task on NYUDv2.

14

Figure 11: Semantic segmentation results of bedroom scenes on NYUDv2.

Figure 12: Semantic segmentation results of living room scenes on NYUDv2.

15

Figure 13: Semantic segmentation results of dining room scenes on NYUDv2.

Figure 14: Semantic segmentation results of kitchen scenes on NYUDv2.

16

Figure 15: Semantic segmentation results of bathroom scenes on NYUDv2.

Figure 16: Semantic segmentation results of ofﬁce scenes on NYUDv2.

17

Figure 17: Semantic segmentation results of classroom scenes on NYUDv2.

18

Figure 18: Some failure cases that our method is not able to improve FCN.

19

STD2P: RGBD Semantic Segmentation using
Spatio-Temporal Data-Driven Pooling

Yang He1, Wei-Chen Chiu1, Margret Keuper2 and Mario Fritz1
1Max Planck Institute for Informatics,
Saarland Informatics Campus, Saarbr¨ucken, Germany
2University of Mannheim, Mannheim, Germany

7
1
0
2
 
r
p
A
 
6
2
 
 
]

V
C
.
s
c
[
 
 
3
v
8
8
3
2
0
.
4
0
6
1
:
v
i
X
r
a

Abstract

We propose a novel superpixel-based multi-view convo-
lutional neural network for semantic image segmentation.
The proposed network produces a high quality segmentation
of a single image by leveraging information from additional
views of the same scene. Particularly in indoor videos such
as captured by robotic platforms or handheld and body-
worn RGBD cameras, nearby video frames provide diverse
viewpoints and additional context of objects and scenes. To
leverage such information, we ﬁrst compute region corre-
spondences by optical ﬂow and image boundary-based su-
perpixels. Given these region correspondences, we propose
a novel spatio-temporal pooling layer to aggregate infor-
mation over space and time. We evaluate our approach on
the NYU–Depth–V2 and the SUN3D datasets and compare
it to various state-of-the-art single-view and multi-view ap-
proaches. Besides a general improvement over the state-
of- the-art, we also show the beneﬁts of making use of un-
labeled frames during training for multi-view as well as
single-view prediction.

1. Introduction

Consumer friendly and affordable combined image and
depth-sensors such as Kinect are nowadays commercially
deployed in scenarios such as gaming, personal 3D capture
and robotic platforms. Interpreting this raw data in terms
of a semantic segmentation is an important processing step
and hence has received signiﬁcant attention. The goal is
typically formalized as predicting for each pixel in the im-
age plane the corresponding semantic class.

For many of the aforementioned scenarios, an image se-
quence is naturally collected and provides a substantially
richer source of information than a single image. Multiple
images of the same scene can provide different views that
change the observed context, appearance, scale and occlu-
sion patterns. The full sequence provides a richer observa-

Figure 1: An image sequence can provide rich context and
appearance, as well as unoccluded objects for visual recog-
nition systems. Our Spatio-Temopral Data-Driven Pooling
(STD2P) approach integrates the multi-view information to
improve semantic image segmentation in challenging sce-
narios.

tion of the scene and propagating information across views
has the potential to signiﬁcantly improve the accuracy of se-
mantic segmentations in more challenging views as shown
in Figure 1.

Hence, we propose a multi-view aggregation method by
a spatio-temporal data-driven pooling (STD2P) layer which
is a principled approach to incorporate multiple frames
into any convolutional network architecture. In contrast to
previous work on superpixel-based approaches [13, 5, 3],
we compute correspondences over time which allows for
knowledgeable and consistent prediction over space and
time.

As dense annotation of full training sequences is time

1

consuming and not available in current datasets, a key fea-
ture of our approach is training from partially annotated se-
quences. Notably, our model leads to improved semantic
segmentations in the case of multi-view observation as well
as single-view observation at test time. The main contribu-
tions of our paper are:

• We propose a principled way to incorporate super-
pixels and multi-view information into state-of-the-
art convolutional networks for semantic segmentation.
Our method is able to exploit a variable number of
frames with partial annotation in training time.

• We show that training on sequences with partial anno-
tation improves semantic segmentation for multi-view
observation as well as single-view observation.

• We evaluate our method on the challenging semantic
segmentation datasets NYU–Depth–V2 and SUN3D.
There, it outperforms several baselines as well as the
state-of-the-art. In particular, we improve on difﬁcult
classes not well captured by other methods.

2. Related work

works

2.1. Context modeling for fully convolutional net-

Fully convolutional networks (FCN) [28], built on deep
classiﬁcation networks [21, 36], carried their success for-
ward to semantic segmentation networks that are end-to-end
trainable. Context information plays an important role in
semantic segmentation [30], so researchers tried to improve
the standard FCN by modeling or providing context in the
network. Liu et al. [26] added global context features to a
feature map by global pooling. Yu et al. [41] proposed di-
lation convolutions to aggregate wider context information.
In addition, graphical models are applied to model the re-
lationship of neuron activation [6, 42, 27, 24]. Particularly,
Chen et al. [6] combined the strengths of conditional ran-
dom ﬁeld (CRF) with CNN to reﬁne the prediction, and thus
achieved more accurate results. Zheng et al. [42] formu-
lated CRFs as recurrent neural networks (RNN), and trained
the FCN and the CRF-RNN end-to-end. Recurrent neural
networks have also been used to replace graphical models
in learning context dependencies [4, 35, 23], which shows
beneﬁts in complicated scenarios.

Recently, incorporating superpixels in convolutional net-
works has received much attention. Superpixels are able
to not only provide precise boundaries, but also to provide
adaptive receptive ﬁelds. For example, Dai et al. [9] de-
signed a convolutional feature masking layer for semantic
segmentation, which allows networks to extract features in
unstructured regions with the help of superpixels. Gadde et
al. [13] improved the semantic segmentation using super-
pixel convolutional networks with bilateral inception, which

can merge initial superpixels by parameters and generate
different levels of regions. Caesar et al.
[5] proposed a
novel network with free-form ROI pooling which leverages
superpixels to generate adaptive pooling regions. Arnab et
al.
[3] modeled a CRF with superpixels as higher order
potentials, and achieved better results than previous CRF
based methods [6, 42]. Both methods showed the merit
of providing superpixels to networks, which can generate
more accurate segmentations. Different from prior works
[13, 5], we introduce superpixels at the end of convolutional
networks instead of in the intermediate layers and also inte-
grate the response from multiple views with average pool-
ing, which has been used to replace the fully connected lay-
ers in classiﬁcation [25] and localization [43] tasks success-
fully.

2.2. Semantic segmentation with videos

The aim of multi-view semantic segmentation is to em-
ploy the potentially richer information from diverse views
to improve over segmentations from a single view. Couprie
et al.
[8] performed single image semantic segmentation
with learned features with color and depth information, and
applied a temporal smoothing in test time to improve the
performance of frame-by-frame estimations. Hermans et
al. [18] used the Bayesian update strategy to fuse new clas-
siﬁcation results and a CRF model in 3D space to smooth
the segmentation. St¨uckler et al. [37] used random forests
to predict single view segmentations, and fused all views
to the ﬁnal output by a simultaneous localization and map-
ping (SLAM) system. Kundu et al. [22] built a dense 3D
CRF model with correspondences from optical ﬂow to re-
ﬁne semantic segmentation from video. Recently, McCor-
mac et al. [29] proposed a CNN based semantic 3D map-
ping system for indoor scenes. They applied a SLAM sys-
tem to build correspondences, and mapped semantic labels
predicted from CNN to 3D point cloud data. Mustikovela
et al.
[31] proposed to generate pseudo ground truth an-
notations for auxiliary data with a CRF based framework.
With the auxiliary data and their generated annotations, they
achieved a clear improvement.
In contrast to the above
methods, instead of integrating multi-view information by
using graphical models, we utilize optical ﬂow and image
superpixels to establish region correspondences, and design
a superpixel based multi-view network for semantic seg-
mentation.

3. Fully convolutional multi-view segmentation

with region correspondences

Our goal is a multi-view semantic segmentation scheme,
that integrates seamlessly into exciting deep architectures
and produces highly accurate semantic segmentation of a
single view. We further aim at facilitating training from
partially annotated input sequences, so that existing datasets

2

their correspondences inside a CNN architecture. Thus, we
achieve a tight integration of the superpixel segmentation
and multi-view aggregation into a deep learning framework
for semantic segmentation.

3.1. Region correspondences

Motivated by the recent success of superpixel based ap-
proaches in deep learning architectures [13, 5, 1, 10] and the
reduced computational load, we decide for a region-based
approach. In the following, we motivate and detail our ap-
proach on establishing robust correspondences.

Motivation. One key idea of our approach is to map in-
formation from potentially unlabeled frames to the target
frame, as diverse view points can provide additional context
and resolve challenges in appearance and occlusion as illus-
trated in Figure 1. Hence, we do not want to assume visibil-
ity or correspondence of objects across all frames (e.g. the
nightstand in the target frame as shown in Figure 2). There-
fore, video supervoxel methods such as [15] that force in-
terframe correspondences and do not offer any conﬁdence
measure are not suitable. Instead, we establish the required
correspondences on a frame-wise region level.

Superpixels & optical ﬂow. We compute RGBD super-
pixels [17] in each frame to partition a RGBD image into
regions, and apply Epic ﬂow [33] between each pair of con-
secutive frames to link these regions. To take advantage
of the depth information, we utilize the RGBD version of
the structured edge detection [11] to generate boundary es-
timates. Then, Epic ﬂow is computed in forward and back-
ward directions.

Robust spatio-temporal matching. Given the precom-
puted regions in the target frame and all unlabeled frames
as well as the optical ﬂow between those frames, our goal is
to ﬁnd highly reliable region correspondences. For any two
regions Rt in the target frame ft and Ru in an unlabeled
frame fu, we compute their matching score from their inter-
section over union (IoU). Let us assume w.l.o.g. that u < t.
u in ft using forward opti-
Then, we warp Ru from fu to R
−−→
cal ﬂow. The IoU between Rt and R
IoU tu.
←−−
IoU tu with backward optical ﬂow.
Similarly, we compute
We regard Rt and Ru as a successful match if their match-
−−→
ing score meets min(
IoU tu) > τ . We keep the one
with the highest matching score if Rt has several successful
matches. We show the statistics of region correspondences
on the NYUDv2 dataset in Figure 3.

u is denoted by

←−−
IoU tu,

(cid:48)

(cid:48)

It shows that 87.17% of the regions are relatively small
(less than 2000 pixels) The plot on the right shows that those
small regions generally only ﬁnd less than 10 matches in
a whole video. Contrariwise, even slightly bigger regions

Figure 2: Pipeline of the proposed method. Our multi-view
semantic segmentation network is built on top of a CNN. It
takes a RGBD sequence as input and computes the semantic
segmentation of a target frame with the help of unlabeled
frames. We use superpixels and optical ﬂow to establish
region correspondences, and fuse the posterior from multi-
ple views with the proposed Spatio-Temporal Data-Driven
Pooling (STD2P).

can be used and the annotation effort stays moderate for new
datasets. To this end, we draw on prior work on high quality
non-semantic image segmentation and optical ﬂow which is
input to our proposed Spatio-Temporal Data-Driven Pool-
ing (STD2P) layer.

Overview. As illustrated in Figure 2, our method starts
from an image sequence. We are interested in providing
an accurate semantic segmentation of one view in the se-
quence, called target frame, which can be located at any po-
sition in the image sequence. The two components that dis-
tinguish our approach from a standard fully convolutional
architecture for semantic segmentation are, ﬁrst, the com-
putation of region correspondences and, second, the novel
spatio-temporal pooling layer that is based on these corre-
spondences.

We ﬁrst compute the superpixel segmentation of each
frame and establish region correspondences using optical
ﬂow. Then, the proposed data-driven pooling allows to ag-
gregate information ﬁrst within superpixels and then along

3

∂L
∂Is(i, c, x, y)

=

=

∂Os(i, c, j)
∂Is(i, c, x, y)

∂L
∂Os(i, c, j)
∂L
∂Os(i, c, j)

1
|Ωij|

.

(2)

Temporal pooling layer. Similarly, we formulate our
temporal pooling which fuses the information from N
frames It ∈ RN ×C×P , which is the output of spatial pool-
ing layer, to one frame Ot ∈ RC×P . This layer also needs
superpixel information Ωij, which is the superpixel with in-
If Ωij (cid:54)= ∅, there exists
dex j of the i-th input frame.
correspondence. The forward propagation can be expressed
as

Ot(c, j) =

It(i, c, j)

(3)

1
K

(cid:88)

Ωij (cid:54)=∅

for channel index c and region index j, where K =
|{i|Ωij (cid:54)= ∅, 1 ≤ i ≤ N }|, which is the number of matched
frames for j-th region. The gradient is calculated by

∂L
∂It(i, c, j)

∂Ot(c, j)
∂It(i, c, j)

=

=

∂L
∂Ot(c, j)
∂L
1
∂Ot(c, j)
K

.

(4)

Region-to-pixel layer. To directly optimize a semantic
segmentation model with dense annotations, we map the re-
gion based feature map Ir ∈ RC×P to a dense pixel-level
prediction Or ∈ RC×H×W . This layer needs a superpixel
map on the target frame Starget ∈ RH×W to perform for-
ward and backward propagation. The forward propagation
is expressed as

Or(c, x, y) = Ir(c, j), Starget(x, y) = j.

(5)

The gradient is computed by

∂L
∂Ir(c, j)

∂L
∂Or(c, x, y)

∂Or(c, x, y)
∂Ir(c, j)

(cid:88)

(cid:88)

Starget(x,y)=j

=

=

Starget(x,y)=j

∂L
∂Or(c, x, y)

.

(6)

Figure 3: Statistics of region correspondences on the
NYUDv2 dataset. (left) Distribution of region sizes; (right)
Histogram of the average number of matches over region
sizes.

can be matched more easily and they cover large portions
of images. They usually have more than 40 matches in a
whole video, and thus provide adequate information for our
multi-view network.

3.2. Spatio-Temporal Data-Driven Pooling (STD2P)

Here, we describe our Spatio-Temporal Data-Driven
Pooling (STD2P) model that uses the spatio-temporal struc-
ture of the computed region correspondences to aggregate
information across views as illustrated in Figure 2. While
the proposed method is highly compatible with recent CNN
and FCN models, we build on a per frame model using [28].
In more detail, we reﬁne the output of the deconvolution
layer with superpixels and aggregate the information from
multiple views by three layers: a spatial pooling layer, a
temporal pooling layer and a region-to-pixel layer.

Spatial pooling layer. The input to the spatial pooling
layer is a feature map Is ∈ RN ×C×H×W for N frames,
C channels with size H × W and a superpixel map S ∈
RN ×H×W encoded with the region index. It generates the
output Os ∈ RN ×C×P , where P is the maximum num-
ber of superpixels. The superpixel map S guides the for-
ward and backward propagation of the layer. Here, Ωij =
{(x, y)|S(i, x, y) = j} denotes a superpixel in the i-th
frame with region index j. Then, the forward propagation
of spatial average pooling can be formulated as

Os(i, c, j) =

Is(i, c, x, y)

(1)

(cid:88)

1
|Ωij|

(x,y)∈Ωij

for each channel index c of the i-th frame and region in-
dex j. We train our model using stochastic gradient de-
scent. The gradient of the input Is(i, c, x, y), where (x, y) ∈
Ωij, in our spatial pooling is calculated by back propaga-
tion [34],

4

Image

GT

CRF-RNN

DeepLab-LFOV

BI(3000)

E2S2

FCN

Singleview SP Multiview Pixel Our full model

Figure 4: Visualization examples of the semantic segmentation on NYUDv2. Column 1 shows the RGB images and column
2 shows the ground truth (black represents the unlabeled pixels). Columns 3 to 6 show the results from CRF-RNN [42],
DeepLab-LFOV [7], BI(3000) [13] and E2S2 [5], respectively. Columns 7 to 9 show the results from FCN [28], single-view
superpixel and multi-view pixel baselines. The results from our whole system are shown in column 10. Best viewed in color.

Implementation details. We regard the frames with
groundtruth annotations as target frames. For each target
frame, we equidistantly sample up to 100 frames around it
with the static interval of 3 frames. Next, we compute the
superpixels [17] and Epic ﬂow [33] with the default settings
provided in the corresponding source codes. The thresh-
old τ for the computation of region correspondence is 0.4
(cf. section 3.1). Finally, for each RGBD sequence, we
randomly sample 11 frames including the target frame to-
gether with their correspondence maps as the input for our
network. We use RGB images and HHA representations
of depth [17] and train the network by stochastic gradient
descent with momentum term. Due to the memory lim-
itation, we ﬁrst run FCN and cache the output pool4 rgb
and pool4 hha. Then, we ﬁnetune the layers after pool4
with a new network which is the copy of the higher lay-
ers in FCN. We use a minibatch size of 10, momentum
0.9, weight decay 0.0005 and ﬁxed learning rate 10−14.
We ﬁnetune our model by using cross entropy loss with
1000 iterations for all our models in the experiments. We
implement the proposed network using the Caffe frame-
work [19], and the source code is available at https:
//github.com/SSAW14/STD2P.

ing images and 654 testing images. We follow the exper-
imental settings of [10] to test on 65 labeled frames. We
compare our models of different settings to previous state-
of-the-art multi-view methods as well as single-view meth-
ods, which are summarized in Table 1. We report the results
on the labeled frames, using the same evaluation protocol
and metrics as [28], pixel accuracy (Pixel Acc.), mean ac-
curacy (Mean Acc.), region intersection over union (Mean
IoU), and frequency weighted intersection over union (f.w.
IoU).

Table 1: Conﬁgurations of competing methods

RGB

RGBD

Single-View
Multi-View

[12, 20]
/

[5, 6, 7, 10, 13, 17, 28, 38, 39, 42]
[8, 18, 37, 29]

4.1. Results on NYUDv2 40-class task

Table 2 evaluates performance of our method on
NYUDv2 40-class task and compares to state-of-the-art
methods and related approaches [28, 10, 17, 20, 12, 42, 6,
7, 13, 5] 1. We include 3 versions of our approach:

4. Experiments and analysis

We evaluate our approach on the 4-class [32], 13-
class [8], and 40-class [16] tasks of the NYU–Depth–V2
(NYUDv2) dataset [32], and 33-class task of the SUN3D
dataset [40].

The NYUDv2 dataset contains 518 RGBD videos, which
have more than 400,000 images. Among them, there are
1449 densely labeled frames, which are split into 795 train-

Our superpixel model
is trained on single frames without
additional unlabeled data, and tested using a single target
frame. It improves the baseline FCN on all four metrics by
at least 2 percentage points (pp), and it achieves in particular

1For [28, 10, 17, 20, 12], we copy the performance from their paper. For
[42, 6, 7, 13, 5], we run the code provided by the authors with RGB+HHA
images. Speciﬁcally, for [13], we also increase the maximum number of
superpixels from 1000 to 3000. The original coarse version and the ﬁne
version are abbreviated as BI(1000) and BI(3000).

5

Table 2: Performance of the 40-class semantic segmentation task on NYUDv2. We compare our method to various state-of-
the-art methods: [28, 17, 20, 12] are also based on convolutional networks, [6, 42, 7] are the models based on convolutional
networks and CRF, and [13, 5, 10] are region labeling methods, and thus related to ours. We mark the best performance in
all methods with BOLD font, and the second best one is written with UNDERLINE.

Methods

Mutex Constraints [10]
RGBD R-CNN [17]
Bayesian SegNet [20]
Multi-Scale CNN [12]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel)
Ours (superpixel+)
Ours (full model)

Methods

Mutex Constraints [10]
RGBD R-CNN [17]
Bayesian SegNet [20]
Multi-Scale CNN [12]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel)
Ours (superpixel+)
Ours (full model)

l
l
a
w

65.6
68.0
-
-
70.3
67.9
70.2
62.8
61.7
56.9
69.9

70.9
72.4
72.7

n
i
a
t
r
u
c

47.6
29.1
-
-
34.8
32.9
36.0
29.3
30.8
38.0
32.5

34.5
42.9
40.7

r
o
o
ﬂ

79.2
81.3
-
-
81.5
83.0
85.2
66.8
68.1
67.8
79.4

83.4
84.3
85.7

r
e
s
s
e
r
d

27.6
34.8
-
-
33.2
34.3
36.9
20.3
22.9
34.8
31.0

41.6
35.9
44.1

t
e
n
i
b
a
c

51.9
44.9
-
-
49.6
53.1
55.3
44.2
45.2
50.0
50.3

52.6
52.0
55.4

w
o
l
l
i
p

42.5
34.4
-
-
34.7
40.2
41.4
21.7
19.5
31.5
37.5

37.7
40.8
42.0

d
e
b

66.7
65.0
-
-
64.6
66.8
68.9
47.7
50.6
59.5
66.0

68.5
71.5
73.6

r
o
r
r
i

m

30.2
16.4
-
-
20.8
23.7
32.5
13.0
13.9
31.7
22.4

20.1
27.7
34.5

r
i
a
h
c

41.0
47.9
-
-
51.4
57.8
60.5
35.8
38.9
43.8
47.5

54.1
54.3
58.5

t
a
m
r
o
o
ﬂ

32.7
28.0
-
-
24.0
15.0
16.0
18.2
16.1
25.3
13.6

15.9
31.9
35.6

a
f
o
s

55.7
47.9
-
-
50.6
57.8
59.8
35.9
40.3
44.3
53.2

56.0
58.8
60.1

s
e
h
t
o
l
c

12.6
4.7
-
-
18.7
20.2
17.8
14.1
13.7
14.2
18.3

20.1
19.3
22.2

e
l
b
a
t

36.5
29.9
-
-
35.9
43.4
44.5
10.9
26.2
31.3
32.8

40.4
37.9
42.7

g
n
i
l
i
e
c

56.7
60.5
-
-
60.9
55.1
58.4
44.7
42.5
39.7
59.1

56.8
55.6
55.9

r
o
o
d

20.3
20.3
-
-
24.6
19.4
25.4
18.3
20.9
24.6
22.1

25.5
28.2
30.2

s
k
o
o
b

8.9
6.4
-
-
29.5
22.1
20.5
10.9
21.3
26.7
27.3

28.8
28.2
29.8

w
o
d
n
i
w

33.2
32.6
-
-
38.1
45.5
47.8
21.5
36.0
37.9
39.0

38.4
41.9
42.1

e
g
d
i
r
f

21.6
14.5
-
-
31.2
30.6
45.1
21.5
16.6
27.1
27.0

23.8
38.3
41.7

f
l
e
h
s
k
o
o
b

32.6
18.1
-
-
36.0
41.5
42.6
35.9
34.4
32.7
36.1

40.9
38.5
41.9

v
t

19.2
31.0
-
-
41.1
49.4
48.0
30.4
30.9
35.2
41.9

51.8
46.9
52.5

e
r
u
t
c
i
p

44.6
40.3
-
-
48.8
49.3
47.9
41.5
40.8
46.1
50.5

51.5
52.3
52.9

r
e
p
a
p

28.0
14.3
-
-
18.2
21.8
21.0
18.8
14.9
17.8
15.9

19.1
17.6
21.1

r
e
t
n
u
o
c

53.6
51.3
-
-
52.6
58.3
57.7
30.9
31.6
45.0
54.2

54.8
58.2
59.7

l
e
w
o
t

28.6
16.3
-
-
25.6
32.1
41.5
22.3
23.3
21.0
26.1

26.6
31.2
34.4

s
d
n
i
l
b

49.1
42.0
-
-
47.6
47.8
52.4
47.4
48.3
51.8
45.8

47.3
49.7
46.7
n
i
a
t
r
u
c
r
e
w
o
h
s

22.9
4.2
-
-
23.0
6.4
9.4
17.7
17.8
19.9
14.1

29.3
11.0
15.5

s
e
v
l
e
h
s

9.1
3.5
-
-
7.6
7.3
9.1
8.5
7.9
9.1
8.6

7.5
8.1
9.4

d
r
a
o
b
e
t
i
h
w

1.0
14.2
-
-
13.9
14.8
14.3
12.4
9.9
36.9
12.9

4.7
28.2
29.2

k
s
e
d

10.8
11.3
-
-
13.2
15.5
20.7
12.8
9.3
15.8
11.9

11.3
14.3
13.5

x
o
b

1.6
2.1
-
-
7.4
5.8
8.0
5.5
3.3
7.4
6.5

6.8
6.5
7.8

Methods

Mutex Constraints [10]
RGBD R-CNN [17]
Bayesian SegNet [20]
Multi-Scale CNN [12]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel)
Ours (superpixel+)
Ours (full model)

d
n
a
t
s
t
h
g
i
n

30.6
27.2
-
-
31.4
37.7
41.8
15.8
15.8
17.6
30.1

37.4
34.1
42.2

n
o
s
r
e
p

9.6
0.2
-
-
57.9
55.3
67.0
45.9
44.7
35.0
57.6

66.1
66.7
60.7

t
e
l
i
o
t

48.4
55.1
-
-
57.2
57.9
69.7
56.5
53.8
31.8
61.3

56.1
62.8
62.7

k
n
i
s

41.8
37.5
-
-
45.4
47.7
46.8
32.2
32.1
36.3
44.8

46.3
47.8
47.4

p
m
a
l

28.1
34.8
-
-
36.9
40.0
40.1
24.7
22.8
14.8
32.1

34.5
35.1
38.6

t
c
u
r
t
s

r
e
h
t
o

9.8
7.1
-
-
14.6
18.0
20.7
12.2
12.3
14.5
15.2

12.7
19.3
18.8

i
n
r
u
f

r
e
h
t
o

7.6
6.1
-
-
9.5
12.9
12.4
6.7
5.3
9.3
7.7

12.3
10.9
15.1

s
p
o
r
p

r
e
h
t
o

24.5
23.1
-
-
29.5
33.8
33.5
21.9
23.2
20.9
30.0

30.6
29.2
31.4

.
c
c
A

l
e
x
i
P

63.8
60.3
68.0
65.6
66.3
68.7
70.3
57.7
58.9
58.1
65.4

68.5
68.4
70.1

.
c
c
A
n
a
e

M

-
-
45.8
45.1
48.9
46.9
49.6
37.8
39.3
52.9
46.1

48.7
52.1
53.8

U
o
I

n
a
e

M

31.5
28.6
32.4
34.1
35.4
36.8
39.4
27.1
27.7
31.0
34.0

36.0
38.1
40.1

U
o
I

.

w

.
f

48.5
47.0
-
51.4
51.0
52.5
54.7
41.9
43.0
44.2
49.5

52.9
54.0
55.7

g
a
b

0
0.2
-
-
4.9
6.6
2.1
0.1
0.1
9.9
4.8

5.8
8.8
7.3

better performance than recently proposed methods based
on superpixels and CNN[13, 5].

Our superpixel+ model
leverages additional unlabeled
data in the training while it only uses the target frame for
test. It obtains 3.4pp, 2.1pp, 1.1pp improvements over the

superpixel model on Mean Acc., Mean IoU and f.w. IoU,
leading to more favorable performance than many state-of-
the-art methods [10, 17, 20, 12, 42, 6, 13, 5]. This highlights
the beneﬁts of leveraging unlabeled data.

b
u
t
h
t
a
b

27.6
38.2
-
-
39.1
44.7
45.1
17.1
19.0
26.0
39.2

26.7
26.4
28.5

6

Table 3: Comparison of average and max spatio-temporal
data-driven pooling.

Spatial/Temporal

Pixel Acc. Mean Acc. Mean IoU

f.w. IoU

AVG / AVG
AVG / MAX
MAX / AVG
MAX / MAX

70.1
69.4
66.4
64.9

53.8
51.0
45.4
44.5

40.1
38.0
33.8
32.1

55.7
54.4
49.6
47.9

It achieves a consistent

Our full model
leverages additional unlabeled data both
in the training and test.
im-
provement over the superpixel+ model and outperforms
IoU
all competitors in Mean Acc., Mean IoU and f.w.
by 0.9pp, 0.7pp, 1.0pp respectively.
Particularly strong
improvements are observed on challenging object classes
such as dresser(+7.2pp), door(+4.8pp), bed(+4.7pp) and
TV(+3.1pp).

Figure 4 demonstrates that our method is able to produce
smooth predictions with accurate boundaries. We present
the most related methods, which either apply CRF [42, 7]
or incorporate superpixels [13, 5], in the columns 3 to 6
of this ﬁgure. According to the qualitative comparison to
these approaches, we can see the beneﬁt of our method. It
captures small objects like chair legs, as well as large areas
like ﬂoormat and door. In addition, we also present FCN
and the superpixel model at the 7-th and 8-th column of
Figure 4. The FCN is boosted by introducing superpixels
but not as precise as our full model using unlabeled data.

Average vs. max spatio-temporal data-driven pooling.
Our data-driven pooling aggregates the local information
from multiple observations within a segment and across
multiple views. Average pooling and max pooling are
canonical choices used in many deep neural network archi-
tectures. Here we test average pooling and max pooling
both in the spatial and temporal pooling layer, and show the
results in Table 3. All the models are trained with multi-
ple frames, and tested on multiple frames. Average pooling
turns out to perform best for spatial and temporal pooling.
This result conﬁrms our design choice.

Region vs. pixel correspondences. We compare our full
model, which is built on the region correspondences, to the
model with pixel correspondences. It only uses the per-pixel
correspondences by optical ﬂow and applies average pool-
ing to fuse the information from multiple view. The visual-
ization results of this baseline are presented in column 9 of
Figure 4. Obtaining accurate pixel correspondences is chal-
lenging because the optical ﬂow is not perfect and the error
can accumulate over time. Consequently, the model with
pixel correspondences only improves slightly over the FCN
baseline, as it is also reﬂected in the numbers in Table 4.
Establishing region correspondences with the proposed re-

Figure 5: The performance of multi-view prediction with
varying maximum distance. Green lines show the results of
using future and past views. Blue lines show the results of
only using past views.

Table 4: Comparison results with baselines on NYUDv2
40-class task

Methods

Pixel Acc. Mean Acc. Mean IoU

f.w. IoU

FCN [28]
Pixel Correspondence
Superpixel Correspondence

65.4
66.2
70.1

46.1
45.9
53.8

34.0
34.6
40.1

49.5
50.2
55.7

jection strategy described in section 3.1 seems indeed to be
favorable over pixel correspondences. Our full model shows
a signiﬁcant improvement over the pixel-correspondence
baseline and FCN in all 4 measures.

Analysis of multi-view prediction.
In our multi-view
model, we subsample frames from a whole video for com-
putational considerations. There is a trade-off between
close-by and distant frames to be made. If we select frames
far away from the target frames, they can provide more di-
verse views of an object, while matching is more challeng-
ing and potentially less accurate than for close-by frames.
Hence, we analyze the inﬂuence of the distance of selected
frames to target frames, and report the Mean Acc. and Mean
IoU in Figure 5. In results, providing wider views is help-
ful, as the performance is improved with the increase of max
distance. And selecting the data in the future, which is an-
other way to provide wider views, also contributes to the
improvements of performance.

4.2. Results on NYUDv2 4-class and 13-class tasks
To show the effectiveness of our multi-view seman-
tic segmentation approach, we compare our method to
previous state-of-the-art multi-view semantic segmentation
methods [8, 18, 37, 29] on the 4-class and 13-class tasks of
NYUDv2 as shown in Table 5. Besides, we also present pre-
vious state-of-the-art single-view methods [12, 39, 38]. We
observe that our superpixel+ model already outperforms
all the multi-view competitors, and the proposed temporal
pooling scheme further boosts Pixel Acc. and Mean Acc.
by more than 1pp and then outperforms the state-of-the-art

7

Image

GT

CRF-RNN

DeepLab-LFOV

BI(3000)

E2S2

FCN

Our full model

Figure 6: Qualititive results of the SUN3D dataset. For each example, the images are arranged from top to bottom, from left
to right as color image, groundtruth, CRF-RNN [42], DeepLab-LFOV [7], BI [13], E2S2 [5], FCN [28] and ours.

Table 5: Performance of the 4-class (left) and 13-class
(right) semantic segmentation tasks on NYUDv2.

Table 6: Performance of the 33-class semantic segmentation
task on SUN3D. All 65 images are used as the test set.

Methods

Pixel Acc. Mean Acc.

Pixel Acc. Mean Acc.

Methods

Pixel Acc. Mean Acc. Mean IoU

f.w. IoU

Couprie et al. [8]
Hermans et al. [18]
St¨uckler et al. [37]
McCormac et al. [29]

Wang et al. [38]
Wang et al. [39]
Eigen et al. [12]

Ours (superpixel+)
Ours (full model)

64.5
69.0
70.6
-

-
-
83.2

82.7
83.6

63.5
68.1
66.8
-

65.3
74.7
82.0

81.3
82.5

52.4
54.2
-
69.9

-
-
75.4

74.8
75.8

36.2
48.0
-
63.6

42.2
52.7
66.9

67.0
68.4

Mutex Constraints [10]
CRF-RNN [42]
DeepLab [6]
DeepLab-LFOV [7]
BI (1000) [13]
BI (3000) [13]
E2S2 [5]
FCN [28]

Ours (superpixel+)
Ours (full model)

65.7
59.8
60.9
62.3
53.8
53.9
56.7
58.8

62.5
65.5

-
-
30.7
35.3
31.1
31.6
47.7
38.5

40.8
41.2

28.2
25.5
24.0
28.2
20.8
21.1
27.2
26.1

29.4
32.9

51.0
43.3
44.1
46.2
37.1
37.4
43.3
43.9

47.8
51.5

[12]. In particular, the recent proposed method by McCor-
mac et al. [29] is also built on CNN, however, their perfor-
mance on 13-class task is about 5pp worse than ours.

4.3. Results on SUN3D 33-class task

Table 6 shows the results of our method and baselines
on the SUN3D dataset. We follow the experimental settings
of [10] to test all the methods [10, 42, 6, 7, 13, 5, 28] on
all 65 labeled frames in SUN3D, which are trained with the
NYUDv2 40-class annotations. After computing the 40-
class prediction, we map 7 unseen semantic classes into 33
classes. Speciﬁcally, ﬂoormat is merged to ﬂoor, dresser is
merged to other furni and ﬁve other classes are merged to
other props. Among all the methods, we achieve the best
Mean IoU score that our superpixel+ and full model are
1.2pp and 4.7pp better than [10] and [7] . For Pixel Acc.,
our method is comparable to the previous state of the art
[10]. In addition, we observe that our superpixel+ model
boosts the baseline FCN by 3.7pp, 2.3pp, 3.3pp, 3.9pp on
the four metrics, and applying multi-view information fur-
ther improves 3.0pp, 0.4pp, 3.5pp, 3.7pp, respectively. Be-
sides, we achieve much better performance than DeepLab-

LFOV, which is comparable to our model on the NYUDv2
40-class task. This illustrates the generalization capability
of our model, even without ﬁnetuning on the new domain
or dataset.
5. Conclusion

We have presented a novel semantic segmentation ap-
proach using image sequences. We design a superpixel-
based multi-view semantic segmentation network with
spatio-temporal data-driven pooling which can receive mul-
tiple images and their correspondence as input. We prop-
agate the information from multiple views to the target
frame, and signiﬁcantly improve the semantic segmentation
performance on the target frame. Besides, our method can
leverage large scale unlabeled images for training and test,
and we show that using unlabeled data also beneﬁts single
image semantic segmentation.

Acknowledgments

This research was supported by the German Research
Foundation (DFG CRC 1223) and the ERC Starting Grant
VideoLearn.

8

References

[1] P. Arbel´aez, B. Hariharan, C. Gu, S. Gupta, L. Bourdev, and
J. Malik. Semantic segmentation using regions and parts. In
CVPR, 2012.

[2] P. Arbelaez, M. Maire, C. Fowlkes, and J. Malik. Contour de-
tection and hierarchical image segmentation. TPAMI, 2011.
[3] A. Arnab, S. Jayasumana, S. Zheng, and P. H. Torr. Higher
order conditional random ﬁelds in deep neural networks. In
ECCV, 2016.

[4] W. Byeon, T. M. Breuel, F. Raue, and M. Liwicki. Scene la-
beling with lstm recurrent neural networks. In CVPR, 2015.
[5] H. Caesar, J. Uijlings, and V. Ferrari. Region-based semantic
segmentation with end-to-end training. In ECCV, 2016.
[6] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
volutional nets and fully connected crfs. In ICLR, 2014.
[7] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Deeplab: Semantic image segmentation with
deep convolutional nets, atrous convolution, and fully con-
nected crfs. arXiv preprint arXiv:1606.00915, 2016.

[8] C. Couprie, C. Farabet, L. Najman, and Y. LeCun. Indoor
In ICLR,

semantic segmentation using depth information.
2013.

[9] J. Dai, K. He, and J. Sun. Convolutional feature masking for

joint object and stuff segmentation. In CVPR, 2015.

[10] Z. Deng, S. Todorovic, and L. Jan Latecki. Semantic seg-
mentation of rgbd images with mutex constraints. In CVPR,
2015.

[11] P. Doll´ar and C. Zitnick. Structured forests for fast edge de-

tection. In CVPR, 2013.

[12] D. Eigen and R. Fergus. Predicting depth, surface normals
and semantic labels with a common multi-scale convolu-
tional architecture. In ICCV, 2015.

[13] R. Gadde, V. Jampani, M. Kiefel, and P. V. Gehler. Super-
pixel convolutional networks using bilateral inceptions.
In
ECCV, 2016.

[14] F. Galasso, N. S. Nagaraja, T. J. Cardenas, T. Brox, and
B. Schiele. A uniﬁed video segmentation benchmark: An-
notation, metrics and analysis. In ICCV, 2013.

[15] M. Grundmann, V. Kwatra, M. Han, and I. Essa. Efﬁcient hi-
erarchical graph based video segmentation. In CVPR, 2010.
[16] S. Gupta, P. Arbelaez, and J. Malik. Perceptual organiza-
tion and recognition of indoor scenes from rgb-d images. In
CVPR, 2013.

[17] S. Gupta, R. Girshick, P. Arbel´aez, and J. Malik. Learning
rich features from rgb-d images for object detection and seg-
mentation. In ECCV. 2014.

[18] A. Hermans, G. Floros, and B. Leibe. Dense 3d semantic
mapping of indoor scenes from rgb-d images. In ICRA, 2014.
[19] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long, R. Gir-
shick, S. Guadarrama, and T. Darrell. Caffe: Convolutional
architecture for fast feature embedding. In ACM Multimedia,
2014.

[20] A. Kendall, B. Vijay, and R. Cipolla. Bayesian segnet:
Model uncertainty in deep convolutional encoder-decoder
arXiv preprint
architectures for scene understanding.
arXiv:1511.02680, 2015.

[21] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

classiﬁcation with deep convolutional neural networks.
NIPS, 2012.

Imagenet
In

[22] A. Kundu, V. Vineet, and V. Koltun. Feature space optimiza-
tion for semantic video segmentation. In CVPR, 2016.
[23] Z. Li, Y. Gan, X. Liang, Y. Yu, H. Cheng, and L. Lin. Lstm-
cf: Unifying context modeling and fusion with lstms for rgb-
d scene labeling. In ECCV, 2016.

[24] G. Lin, C. Shen, I. Reid, et al. Efﬁcient piecewise training of
deep structured models for semantic segmentation. In CVPR,
2015.

[25] M. Lin, Q. Chen, and S. Yan. Network in network. In ICLR,

2014.

[26] W. Liu, A. Rabinovich, and A. C. Berg. Parsenet: Looking
wider to see better. arXiv preprint arXiv:1506.04579, 2015.
[27] Z. Liu, X. Li, P. Luo, C.-C. Loy, and X. Tang. Semantic im-
age segmentation via deep parsing network. In ICCV, 2015.
[28] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In CVPR, 2015.
[29] J. McCormac, A. Handa, A. Davison, and S. Leutenegger.
Semanticfusion: Dense 3d semantic mapping with convo-
lutional neural networks. arXiv preprint arXiv:1609.05130,
2016.

[30] R. Mottaghi, X. Chen, X. Liu, N.-G. Cho, S.-W. Lee, S. Fi-
dler, R. Urtasun, and A. Yuille. The role of context for object
detection and semantic segmentation in the wild. In CVPR,
2014.

[31] S. K. Mustikovela, M. Y. Yang, and C. Rother. Can ground
truth label propagation from video help semantic segmenta-
tion? ECCV Workshop on Video Segmentation, 2016.
[32] P. K. Nathan Silberman, Derek Hoiem and R. Fergus. Indoor
In
segmentation and support inference from rgbd images.
ECCV, 2012.

[33] J. Revaud, P. Weinzaepfel, Z. Harchaoui, and C. Schmid.
Epicﬂow: Edge-preserving interpolation of correspondences
for optical ﬂow. In CVPR, 2015.

[34] D. E. Rumelhart, G. E. Hinton, and R. J. Williams. Learning
representations by back-propagating errors. Cognitive mod-
eling, 5(3):1, 1988.

[35] B. Shuai, Z. Zuo, G. Wang, and B. Wang. Dag-recurrent

neural networks for scene labeling. In CVPR, 2016.

[36] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. arXiv preprint
arXiv:1409.1556, 2014.

[37] J. St¨uckler, B. Waldvogel, H. Schulz, and S. Behnke. Dense
real-time mapping of object-class semantics from rgb-d
video. Journal of Real-Time Image Processing, 10(4), 2015.
[38] A. Wang, J. Lu, W. Gang, J. Cai, and T.-J. Cham. Multi-
modal unsupervised feature learning for rgb-d scene label-
ing. In ECCV, 2014.

[39] J. Wang, Z. Wang, D. Tao, S. See, and G. Wang. Learning
common and speciﬁc features for rgb-d semantic segmenta-
tion with deconvolutional networks. In ECCV, 2016.
[40] J. Xiao, A. Owens, and A. Torralba. Sun3d: A database
of big spaces reconstructed using sfm and object labels. In
ICCV, 2013.

9

[41] F. Yu and V. Koltun. Multi-scale context aggregation by di-

lated convolutions. In ICLR, 2016.

[42] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. Torr. Conditional random
ﬁelds as recurrent neural networks. In ICCV, 2015.

[43] B. Zhou, A. Khosla, L. A., A. Oliva, and A. Torralba. Learn-
ing Deep Features for Discriminative Localization. In CVPR,
2016.

10

Supplementary Materials

A. Analysis of semantic segmentation boundary ac-

curacy

In order to quantify the improvement on semantic bound-
ary localization based on the proposed data-driven pooling
scheme, we use Boundary Precision Recall (BPR), as also
used in image or video segmentation benchmark [14, 2]
Figure 7 shows the resulting semantic
for evaluation.
boundary average precision-recall curve. We conclude
that our method generates more accurate boundaries than
FCN, which achieve 0.477 BPR score while our method
achieves 0.647. Besides, our method even improves on
the superpixel [17] we build on, which means our method
can successfully merge over-segmentations or non-semantic
boundaries between adjacent instances of the same seman-
tic class.

Figure 7: Precision-recall curve on semantic boundaries on
the NYUDv2 dataset.

B. Oracle performance using groundtruth labels

Table 7: The performance of oracle case using groundtruth
to label the regions.

F. Failure cases

Groundtruth

Pixel Acc. Mean Acc. Mean IoU

f. w. IoU

Current Frame
Next Frame

96.2
84.7

94.0
76.2

90.2
63.4

92.7
74.4

We perform two best-case analysis by computing an or-
acle performance where groundtruth labels are available for
either reference or target frames. The ﬁrst row of Table 7
shows the achievable performance by performing a major-
ity vote of the groundtruth pixel labels on the employed su-
perpixels from [17]. Thereby we achieve an upper bound

11

of 96.2% on the pixel accuracy that is implied by the su-
perpixel over-segmentation. In order to evaluate the effec-
tiveness of our region correspondence, we use groundtruth
labels of reference frames in the sequence. We collect
143 views to conduct this experiment in NYUDv2, which
have corresponding regions in target frames. We ignore
regions without correspondence in the next frame to com-
pute the quantitative results, which are presented in Table 7.
This best-case analysis for correspondence results in a pixel
accuracy of 84.7%. Both oracle performances indicate a
strong potential for performance improvements in our setup
in all 4 reported measures.

C. Groundtruth analysis

At a closer look, it turns out that at least part of the per-
formance loss in the best-case analysis for the correspon-
dence is not due to bad matches between regions. In Fig.
8, we present some examples of the annotations provided in
the dataset. In several cases, as the ones shown in the ﬁgure,
the labeling is inconsistent and object labels are changed
during the sequence. From left to right in Fig. 8, table
changes to desk, table changes to dresser, ﬂoor changes to
ﬂoor mat, bookshelf changes to shelves, cabinet changes
to other-furniture, and window changes to blinds. Conse-
quently, we see mistakes in the last two rows corresponding
to the best case results due to inconsistent labelings.

D. Qualitative results on NYUDv2 4-class and 13-

class task

We provide the qualitative results of 4-class and 13-class
tasks of NYUDv2 dataset in Figure 9 and Figure 10 respec-
tively.

E. Qualitative results on NYUDv2 40-class task

We provide more qualititative results in the following
ﬁgures. We pick up some major scene categories from the
test set including bedroom (Figure 11), living room (Figure
12), dining room (Figure 13), kitchen (Figure 14), bathroom
(Figure 15), ofﬁce (Figure 16) and classroom (Figure 17).

In this section, we present some failure cases of our
methods in Figure 18.
In those views, our method does
not achieve better result. In the ﬁrst two rows, we cannot
segment the regions marked with white bounding box. This
is because the superpixel in this two views cannot success-
ful segment the regions. We use the same parameter for all
views, so it fails to provide good superpixels for our sys-
tem, but we believe that it is not difﬁcult to get better su-
perpixels for those failure views by adjusting the parameter
of superpixel. In the third and fourth rows, we recognize
the region as “cabinet” and “ﬂoormat” while groundtruth
are “dresser” and “ﬂoor”, which are also difﬁcult for human

Figure 8: Example of groundtruth limitation and segmentation results of oracle case. Row 3 and 2 draw color images of
target frame and next labeled frame, respectively. And row 4 and 1 draw their groundtruth. The segmentation result with
groundtruth of target frame is shown in row 5, and the result with groundtruth of next frame is shown in row 6. We point out
the regions in different frames with white bounding box, which are the same object of different views but labeled as different
classes.

beings to classify. In the last two rows, we show some chal-
lenges, which make our system fail to correctly recognize
the region.

12

Figure 9: Semantic segmentation results of 4-class task on NYUDv2.

13

Figure 10: Semantic segmentation results of 13-class task on NYUDv2.

14

Figure 11: Semantic segmentation results of bedroom scenes on NYUDv2.

Figure 12: Semantic segmentation results of living room scenes on NYUDv2.

15

Figure 13: Semantic segmentation results of dining room scenes on NYUDv2.

Figure 14: Semantic segmentation results of kitchen scenes on NYUDv2.

16

Figure 15: Semantic segmentation results of bathroom scenes on NYUDv2.

Figure 16: Semantic segmentation results of ofﬁce scenes on NYUDv2.

17

Figure 17: Semantic segmentation results of classroom scenes on NYUDv2.

18

Figure 18: Some failure cases that our method is not able to improve FCN.

19

