6
1
0
2
 
p
e
S
 
1
2
 
 
]
L
M

.
t
a
t
s
[
 
 
1
v
0
9
3
6
0
.
9
0
6
1
:
v
i
X
r
a

Learning HMMs with Nonparametric Emissions via
Spectral Decompositions of Continuous Matrices

Kirthevasan Kandasamy∗
Carnegie Mellon University
Pittsburgh, PA 15213
kandasamy@cs.cmu.edu

Maruan Al-Shedivat∗
Carnegie Mellon University
Pittsburgh, PA 15213
alshedivat@cs.cmu.edu

Eric P. Xing
Carnegie Mellon University
Pittsburgh, PA 15213
epxing@cs.cmu.edu

Abstract

Recently, there has been a surge of interest in using spectral methods for estimating
latent variable models. However, it is usually assumed that the distribution of the
observations conditioned on the latent variables is either discrete or belongs to
a parametric family. In this paper, we study the estimation of an m-state hidden
Markov model (HMM) with only smoothness assumptions, such as Hölderian
conditions, on the emission densities. By leveraging some recent advances in
continuous linear algebra and numerical analysis, we develop a computationally
efﬁcient spectral algorithm for learning nonparametric HMMs. Our technique is
based on computing an SVD on nonparametric estimates of density functions by
viewing them as continuous matrices. We derive sample complexity bounds via
concentration results for nonparametric density estimation and novel perturbation
theory results for continuous matrices. We implement our method using Chebyshev
polynomial approximations. Our method is competitive with other baselines on
synthetic and real problems and is also very computationally efﬁcient.

1

Introduction

Hidden Markov models (HMMs) [1] are one of the most popular statistical models for analyzing time
series data in various application domains such as speech recognition, medicine, and meteorology. In
an HMM, a discrete hidden state undergoes Markovian transitions from one of m possible states to
another at each time step. If the hidden state at time t is ht, we observe a random variable xt ∈ X
drawn from an emission distribution, Oj = P(xt|ht = j). In its most basic form X is a discrete set
and Oj are discrete distributions. When dealing with continuous observations, it is conventional to
assume that the emissions Oj belong to a parametric class of distributions, such as Gaussian.

Recently, spectral methods for estimating parametric latent variable models have gained immense
popularity as a viable alternative to the Expectation Maximisation (EM) procedure [2–4]. At a high
level, these methods estimate higher order moments from the data and recover the parameters via
a series of matrix operations such as singular value decompositions, matrix multiplications and
pseudo-inverses of the moments. In the case of discrete HMMs [2], these moments correspond
exactly to the joint probabilities of the observations in the sequence.

Assuming parametric forms for the emission densities is often too restrictive since real world
distributions can be arbitrary. Parametric models may introduce incongruous biases that cannot be
reduced even with large datasets. To address this problem, we study nonparametric HMMs only
assuming some mild smoothness conditions on the emission densities. We design a spectral algorithm
for this setting. Our methods leverage some recent advances in continuous linear algebra [5, 6]
which views two-dimensional functions as continuous analogues of matrices. Chebyshev polynomial
approximations enable efﬁcient computation of algebraic operations on these continuous objects [7,
8]. Using these ideas, we extend existing spectral methods for discrete HMMs to the continuous
nonparametric setting. Our main contributions are:

∗Joint lead authors.

29th Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain.

1. We derive a spectral learning algorithm for HMMs with nonparametric emission densities. While
the algorithm is similar to previous spectral methods for estimating models with a ﬁnite number
of parameters, many of the ideas used to generalise it to the nonparametric setting are novel, and,
to the best of our knowledge, have not been used before in the machine learning literature.
2. We establish sample complexity bounds for our method. For this, we derive concentration results
for nonparametric density estimation and novel perturbation theory results for the aforementioned
continuous matrices. The perturbation results are new and might be of independent interest.
3. We implement our algorithm by approximating the density estimates via Chebyshev polynomials
which enables efﬁcient computation of many of the continuous matrix operations. Our method out-
performs natural competitors in this setting on synthetic and real data and is computationally more
efﬁcient than most of them. Our Matlab code is available at github.com/alshedivat/nphmm.

While we focus on HMMs in this exposition, we believe that the ideas presented in this paper can be
easily generalised to estimating other latent variable models and predictive state representations [9]
with nonparametric observations using approaches developed by Anandkumar et al. [3].

Related Work: Parametric HMMs are usually estimated using maximum likelihood principle via EM
techniques [10] such as the Baum-Welch procedure [11]. However, EM is a local search technique,
and optimization of the likelihood may be difﬁcult. Hence, recent work on spectral methods has
gained appeal. Our work builds on Hsu et al. [2] who showed that discrete HMMs can be learned
efﬁciently, under certain conditions. The key idea is that any HMM can be completely characterised
in terms of quantities that depend entirely on the observations, called the observable representation,
which can be estimated from data. Siddiqi et al. [4] show that the same algorithm works under slightly
more general assumptions. Anandkumar et al. [3] proposed a spectral algorithm for estimating more
general latent variable models with parametric observations via a moment matching technique.

That said, there has been little work on estimating latent variable models, including HMMs, when
the observations are nonparametric. A commonly used heuristic is the nonparametric EM [12]
which lacks theoretical underpinnings. This should not be surprising because EM is a maximum
likelihood procedure and, for most nonparametric problems, the maximum likelihood estimate is
degenerate [13]. In their work, Siddiqi et al. [4] proposed a heuristic based on kernel smoothing, with
no theoretical justiﬁcation, to modify the discrete algorithm for continuous observations. Further,
their procedure cannot be used to recover the joint or conditional probabilities of a sequence which
would be needed to compute probabilities of events and other inference tasks.

Song et al. [14, 15] developed an RKHS-based procedure for estimating the Hilbert space embedding
of an HMM. While they provide theoretical guarantees, their bounds are in terms of the RKHS
distance of the true and estimated embeddings. This metric depends on the choice of the kernel and it
is not clear how it translates to a suitable distance measure on the observation space such as an L1 or
L2 distance. While their method can be used for prediction and pairwise testing, it cannot recover the
joint and conditional densities. On the contrary, our model provides guarantees in terms of the more
interpretable total variation distance and is able to recover the joint and conditional probabilities.

2 A Pint-sized Review of Continuous Linear Algebra

We begin with a pint-sized review on continuous linear algebra which treats functions as continuous
analogues of matrices. Appendix A contains a quart-sized review. Both sections are based on [5, 6].
While these objects can be viewed as operators on Hilbert spaces which have been studied extensively
in the years, the above line of work simpliﬁed and specialised the ideas to functions.
A matrix F ∈ Rm×n is an m × n array of numbers where F (i, j) denotes the entry in row i, column j.
m or n could be (countably) inﬁnite. A column qmatrix (quasi-matrix) Q ∈ R[a,b]×m is a collection
of m functions deﬁned on [a, b] where the row index is continuous and column index is discrete.
Writing Q = [q1, . . . , qm] where qj : [a, b] → R is the j th function, Q(y, j) = qj(y) denotes the value
of the j th function at y ∈ [a, b]. Q(cid:62) ∈ Rm×[a,b] denotes a row qmatrix with Q(cid:62)(j, y) = Q(y, j).
A cmatrix (continuous-matrix) C ∈ R[a,b]×[c,d] is a two dimensional function where both row and
column indices are continuous and C(y, x) is the value of the function at (y, x) ∈ [a, b] × [c, d].
C (cid:62) ∈ R[c,d]×[a,b] denotes its transpose with C (cid:62)(x, y) = C(y, x). Qmatrices and cmatrices permit
all matrix multiplications with suitably deﬁned inner products. For example, if R ∈ R[c,d]×m and
C ∈ R[a,b]×[c,d], then CR = T ∈ R[a,b]×m where T (y, j) = (cid:82) d

c C(y, s)R(s, j)ds.

2

A cmatrix has a singular value decomposition (SVD). If C ∈ R[a,b]×[c,d], it decomposes as an
inﬁnite sum, C(y, x) = (cid:80)∞
j=1 σjuj(y)vj(x), that converges in L2. Here σ1 ≥ σ2 ≥ · · · ≥ 0
are the singular values of C. {uj}j≥1 and {vj}j≥1 are functions that form orthonormal bases for
L2([a, b]) and L2([c, d]), respectively. We can write the SVD as C = U ΣV (cid:62) by writing the singular
vectors as inﬁnite qmatrices U = [u1, u2 . . . ], V = [v1, v2 . . . ], and Σ = diag(σ1, σ2 . . . ). If only
m < ∞ ﬁrst singular values are nonzero, we say that C is of rank m. The SVD of a qmatrix
Q ∈ R[a,b]×m is, Q = U ΣV (cid:62) where U ∈ R[a,b]×m and V ∈ Rm×m have orthonormal columns
and Σ = diag(σ1, . . . , σm) with σ1 ≥ · · · ≥ σm ≥ 0. The rank of a column qmatrix is the number
of linearly independent columns (i.e. functions) and is equal to the number of nonzero singular
values. Finally, as for the ﬁnite matrices, the pseudo inverse of the cmatrix C is C † = V Σ−1U (cid:62)
with Σ−1 = diag(1/σ1, 1/σ2, . . . ). The pseudo inverse of a qmatrix is deﬁned similarly.

3 Nonparametric HMMs and the Observable Representation

Notation: Throughout this manuscript, we will use P to denote probabilities of events while p will
denote probability density functions (pdf). An HMM characterises a probability distribution over a
sequence of hidden states {ht}t≥0 and observations {xt}t≥0. At a given time step, the HMM can
be in one of m hidden states, i.e. ht ∈ [m] = {1, . . . , m}, and the observation is in some bounded
continuous domain X . Without loss of generality, we take2 X = [0, 1]. The nonparametric HMM
will be completely characterised by the initial state distribution π ∈ Rm, the state transition matrix
T ∈ Rm×m and the emission densities Oj : X → R, j ∈ [m]. πi = P(h1 = i) is the probability
that the HMM would be in state i at the ﬁrst time step. The element T (i, j) = P(ht+1 = i|ht = j)
of T gives the probability that a hidden state transitions from state j to state i. The emission
function, Oj : X → R+, describes the pdf of the observation conditioned on the hidden state j, i.e.
Oj(s) = p(xt = s|ht = j). Note that we have Oj(x) > 0, ∀x and (cid:82) Oj(·) = 1 for all j ∈ [m]. In
this exposition, we denote the emission densities by the qmatrix, O = [O1, . . . , Om] ∈ R[0,1]×m

.

+

In addition, let (cid:101)O(x) = diag(O1(x), . . . , Om(x)), and A(x) = T (cid:101)O(x). Let x1:t = {x1, . . . , xt}
be an ordered sequence and xt:1 = {xt, . . . , x1} denote its reverse. For brevity, we will overload
notation for A for sequences and write A(xt:1) = A(xt)A(xt−1) . . . A(x1). It is well known [2, 16]
that the joint probability density of the sequence x1:t can be computed via p(x1:t) = 1(cid:62)
mA(xt:1)π.
Key structural assumption: Previous work on estimating HMMs with continuous observations
typically assumed that the emissions, Oj, take a parametric form, e.g. Gaussian. Unlike them, we
only make mild nonparametric smoothness assumptions on Oj. As we will see, to estimate the HMM
well in this problem we will need to estimate entire pdfs well. For this reason, the nonparametric
setting is signiﬁcantly more difﬁcult than its parametric counterpart as the latter requires estimating
only a ﬁnite number of parameters. When compared to the previous literature, this is the crucial
distinction and the main challenge in this work.

Observable Representation: The observable representation is a description of an HMM in terms of
quantities that depend on the observations [16]. This representation is useful for two reasons: (i) it
depends only on the observations and can be directly estimated from the data; (ii) it can be used to
compute joint and conditional probabilities of sequences even without the knowledge of T and O and
therefore can be used for inference and prediction. First, we deﬁne the joint densities, P1, P21, P321:
P1(t) = p(x1 = t), P21(s, t) = p(x2 = s, x1 = t), P321(r, s, t) = p(x3 = r, x2 = s, x1 = t),
where xi, i = 1, 2, 3 denotes the observation at time i. Denote P3x1(r, t) = P321(r, x, t) for all x. We
will ﬁnd it useful to view both P21, P3x1 ∈ R[0,1]×[0,1] as cmatrices. We will also need an additional
qmatrix U ∈ R[0,1]×m such that U (cid:62)O ∈ Rm×m is invertible. Given one such U , the observable
representation of an HMM is described by the parameters b1, b∞ ∈ Rm and B : [0, 1] → Rm×m,

b1 = U (cid:62)P1,

b∞ = (P (cid:62)

21U )†P1,

B(x) = (U (cid:62)P3x1)(U (cid:62)P21)†

(1)

As before, for a sequence, xt:1 = {xt, . . . , x1}, we deﬁne B(xt:1) = B(xt)B(xt−1) . . . B(x1). The
following lemma shows that the ﬁrst m left singular vectors of P21 are a natural choice for U .
Lemma 1. Let π > 0, T and O be of rank m and U be the qmatrix composed of the ﬁrst m left
singular vectors of P21. Then U (cid:62)O is invertible.

2 We discuss the case of higher dimensions in Section 7.

3

To compute the joint and conditional probabilities using the observable representation, we maintain
an internal state, bt, which is updated as we see more observations. The internal state at time t is

bt =

B(xt−1:1)b1
b(cid:62)
∞B(xt−1:1)b1

.

(2)

This deﬁnition of bt is consistent with b1. The following lemma establishes the relationship between
the observable representation and the internal states to the HMM parameters and probabilities.

Lemma 2 (Properties of the Observable Representation). Let rank(T ) = rank(O) = m and U (cid:62)O
be invertible. Let p(x1:t) denote the joint density of a sequence x1:t and p(xt+1:t+t(cid:48)|x1:t) denote the
conditional density of xt+1:t+t(cid:48) given x1:t in a sequence x1:t+t(cid:48). Then the following are true.

1. b1 = U (cid:62)Oπ
2. b∞ = 1(cid:62)
3. B(x) = (U (cid:62)O)A(x)(U (cid:62)O)−1 ∀ x ∈ [0, 1].

m(U (cid:62)O)−1

4. bt+1 = B(xt)bt/(b(cid:62)
5. p(x1:t) = b(cid:62)
∞B(xt:1)b1.
6. p(xt+t(cid:48):t+1|x1:t) = b(cid:62)

∞B(xt)bt).

∞B(xt+t(cid:48):t+1)bt.

The last two claims of the Lemma 2 show that we can use the observable representation for computing
the joint and conditional densities. The proofs of Lemmas 1 and 2 are similar to the discrete case and
mimic Lemmas 2, 3 & 4 of Hsu et al. [2].

4 Spectral Learning of HMMs with Nonparametric Emissions

The high level idea of our algorithm, NP-HMM-SPEC, is as follows. First we will obtain density
estimates for P1, P21, P321 which will then be used to recover the observable representation b1, b∞, B
by plugging in the expressions in (1). Lemma 2 then gives us a way to estimate the joint and
conditional probability densities. For now, we will assume that we have N i.i.d sequences of triples
{X (j)}N
3 ) are the observations at the ﬁrst three time steps. We
describe learning from longer sequences in Section 4.3.

j=1 where X (j) = (X (j)

1 , X (j)

2 , X (j)

4.1 Kernel Density Estimation
The ﬁrst step is the estimation of the joint probabilities which requires a nonparametric density
estimate. While there are several techniques [17], we use kernel density estimation (KDE) since it is
easy to analyse and works well in practice. The KDE for P1, P21, and P321 take the form:

(cid:98)P1(t) =

1
N

N
(cid:88)

j=1

1
h1

K

(cid:32)

t − X (j)
h1

1

(cid:33)

,

(cid:98)P21(s, t) =

(cid:32)

K

s − X (j)
h21

2

(cid:33)

(cid:32)

K

t − X (j)
1
h21

(cid:33)

,

(cid:98)P321(r, s, t) =

1
N

N
(cid:88)

j=1

1
h3

321

K

(cid:32)

r − X (j)
3
h321

(cid:33)

(cid:32)

K

s − X (j)
2
h321

t − X (j)
1
h321

(cid:33)

.

(3)

1
N

N
(cid:88)

j=1
(cid:33)

1
h2
21
(cid:32)

K

Here K : [0, 1] → R is a symmetric function called a smoothing kernel and satisﬁes (at the very
least) (cid:82) 1
0 sK(s)ds = 0. The parameters h1, h21, h321 are the bandwidths, and are
typically decreasing with N . In practice they are usually chosen via cross-validation.

0 K(s)ds = 1, (cid:82) 1

4.2 The Spectral Algorithm

Algorithm 1 NP-HMM-SPEC
Input: Data {X (j) = (X (j)

1 , X (j)

2 , X (j)

3 )}N

j=1, number of states m.

• Obtain estimates (cid:98)P1, (cid:98)P21, (cid:98)P321 for P1, P21, P321 via kernel density estimation (3).
• Compute the cmatrix SVD of (cid:98)P21. Let (cid:98)U ∈ R[0,1]×m be the ﬁrst m left singular vectors of (cid:98)P21.
• Compute the parameters observable representation. Note that (cid:98)B is a Rm×m valued function.
21 (cid:98)U )† (cid:98)P1,

(cid:98)B(x) = ( (cid:98)U (cid:62) (cid:98)P3x1)( (cid:98)U (cid:62) (cid:98)P21)†

(cid:98)b1 = (cid:98)U (cid:62) (cid:98)P1,

(cid:98)b∞ = (P (cid:62)

4

The algorithm, given above in Algorithm 1, follows the roadmap set out at the beginning of this
section. While the last two steps are similar to the discrete HMM algorithm of Hsu et al. [2], the
SVD, pseudoinverses and multiplications are with q/c-matrices. Once we have the estimates (cid:98)b1, (cid:98)b∞,
and (cid:98)B(x) the joint and predictive (conditional) densities can be estimated via (see Lemma 2):

(cid:98)p(x1:t) = (cid:98)b(cid:62)

∞ (cid:98)B(xt:1)(cid:98)b1,

(cid:98)p(xt+t(cid:48):t+1|x1:t) = (cid:98)b(cid:62)

∞ (cid:98)B(xt+t(cid:48):t+1)(cid:98)bt.

(4)

Here (cid:98)bt is the estimated internal state obtained by plugging in (cid:98)b1, (cid:98)b∞, (cid:98)B in (2). Theoretically, these
estimates can be negative in which case they can be truncated to 0 without affecting the theoretical
results in Section 5. However, in our experiments these estimates were never negative.

4.3

Implementation Details

C/Q-Matrix operations using Chebyshev polynomials: While our algorithm and analysis are
conceptually well founded, the important practical challenge lies in the efﬁcient computation of the
many aforementioned operations on c/q-matrices. Fortunately, some very recent advances in the
numerical analysis literature, speciﬁcally on computing with Chebyshev polynomials, have rendered
the above algorithm practical [6, Ch.3-4]. Due to the space constraints, we provide only a summary.
Chebyshev polynomials is a family of orthogonal polynomials on compact intervals, known to be
an excellent approximator of one-dimensional functions [18, 19]. A recent line of work [5, 8] has
extended the Chebyshev technology to two dimensional functions enabling the mentioned operations
and factorisations such as QR, LU and SVD [6, Sections 4.6-4.8] of continuous matrices to be carried
efﬁciently. The density estimates (cid:98)P1, (cid:98)P21, (cid:98)P321 are approximated by Chebyshev polynomials to
within machine precision. Our implementation makes use of the Chebfun library [7] which provides
an efﬁcient implementation for the operations on continuous and quasi matrices.

Computation time: Representing the KDE estimates (cid:98)P1, (cid:98)P21, (cid:98)P321 using Chebfun was roughly
linear in N and is the brunt of the computational effort. The bandwidths for the three KDE estimates
are chosen via cross validation which takes O(N 2) effort. However, in practice the cost was
dominated by the Chebyshev polynomial approximation. In our experiments we found that NP-
HMM-SPEC runs in linear time in practice and was more efﬁcient than most alternatives.

Training with longer sequences: When training with longer sequences we can use a sliding window
of length 3 across the sequence to create the triples of observations needed for the algorithm. That
is, given N samples each of length (cid:96)(j), j = 1, . . . , N , we create an augmented dataset of triples
{ {(X (j)
}N
j=1 and run NP-HMM-SPEC with the augmented data. As is with
conventional EM procedures, this requires the additional assumption that the initial state is the
stationary distribution of the transition matrix T .

t+2)}(cid:96)(j)−2

t+1, X (j)

, X (j)

t=1

t

5 Analysis
We now state our assumptions and main theoretical results. Following [2, 4, 14] we assume i.i.d
sequences of triples are used for training. With longer sequences, the analysis should only be modiﬁed
to account for the mixing of the latent state Markov chain, which is inessential for the main intuitions.
We begin with the following regularity condition on the HMM.
Assumption 3. π > 0 element-wise. T ∈ Rm×m and O ∈ R[0,1]×m are of rank m.

The rank condition on O means that emission pdfs are linearly independent. If either T or O are
rank deﬁcient, then the learner may confuse state outputs, which makes learning difﬁcult3. Next,
while we make no parametric assumptions on the emissions, some smoothness conditions are used
to make density estimation tractable. We use the Hölder class, H1(β, L), which is standard in the
nonparametrics literature. For β = 1, this assumption reduces to L-Lipschitz continuity.
Assumption 4. All emission densities belong to the Hölder class, H1(β, L). That is, they satisfy,
(cid:12)
(cid:12)
(cid:12)
(cid:12)
Here (cid:98)β(cid:99) is the largest integer strictly less than β.

for all α ≤ (cid:98)β(cid:99), j ∈ [m], s, t ∈ [0, 1]

dαOj(t)
dtα

≤ L|s − t|β−|α|.

dsα −

dαOj(s)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

3 Siddiqi et al. [4] show that the discrete spectral algorithm works under a slightly more general setting.
Similar results hold for the nonparametric case too but will restrict ourselves to the full rank setting for simplicity.

5

Under the above assumptions we bound the total variation distance between the true and the estimated
densities of a sequence, x1:t. Let κ(O) = σ1(O)/σm(O) denote the condition number of the
observation qmatrix. The following theorem states our main result.
Theorem 5. Pick any sufﬁciently small (cid:15) > 0 and a failure probability δ ∈ (0, 1). Let t ≥ 1. Assume
that the HMM satisﬁes Assumptions 3 and 4 and the number of samples N satisﬁes,

(cid:19)2+ 3

(cid:19)1+ 3

β

β

β

.

2β

2β

log

(cid:18) t
(cid:15)

(cid:18) 1
δ

≥ C m1+ 3

N
log(N )

κ(O)2+ 3
σm(P21)4+ 4
Then, with probability at least 1 − δ, the estimated joint density for a t-length sequence satisﬁes
(cid:82) |p(x1:t) − (cid:98)p(x1:t)|dx1:t ≤ (cid:15). Here, C is a constant depending on β and L and (cid:98)p is from (4).
Synopsis: Observe that the sample complexity depends critically on the conditioning of O and P21.
The closer they are to being singular, the more samples is needed to distinguish different states and
learn the HMM. It is instructive to compare the results above with the discrete case result of Hsu et al.
[2], whose sample complexity bound4 is N (cid:38) m κ(O)2
t2
(cid:15)2 log 1
δ . Our bound is different in two
σm(P21)4
regards. First, the exponents are worsened by additional ∼ 1
β terms. This characterizes the difﬁculty
of the problem in the nonparametric setting. While we do not have any lower bounds, given the
current understanding of the difﬁculty of various nonparametric tasks [20–22], we think our bound
might be unimprovable. As the smoothness of the densities increases β → ∞, we approach the
parametric sample complexity. The second difference is the additional log(N ) term on the left hand
side. This is due to the fact that we want the KDE to concentrate around its expectation in L2 over
[0, 1], instead of just point-wise. It is not clear to us whether the log can be avoided.

To prove Theorem 5, ﬁrst we will derive some perturbation theory results for c/q-matrices; we will
need them to bound the deviation of the singular values and vectors when we use (cid:98)P21 instead of
P21. Some of these perturbation theory results for continuous linear algebra are new and might be of
independent interest. Next, we establish a concentration result for the kernel density estimator.

5.1 Some Perturbation Theory Results for C/Q-matrices

The ﬁrst result is an analog of Weyl’s theorem which bounds the difference in the singular values
in terms of the operator norm of the perturbation. Weyl’s theorem has been studied for general
operators [23] and cmatrices [6]. We have given one version in Lemma 21 of Appendix B. In addition
to this, we will also need to bound the difference in the singular vectors and the pseudo-inverses
of the truth and the estimate. To our knowledge, these results are not yet known. To that end, we
establish the following results. Here σk(A) denotes the kth singular value of a c/q-matrix A.
Lemma 6 (Simpliﬁed Wedin’s Sine Theorem for Cmatrices). Let A, ˜A, E ∈ R[0,1]×[0,1] where
˜A = A + E and rank(A) = m. Let U, ˜U ∈ R[a,b]×m be the ﬁrst m left singular vectors of A and ˜A
respectively. Then, for all x ∈ Rm, (cid:107) ˜U (cid:62)U x(cid:107)2 ≥ (cid:107)x(cid:107)2
Lemma 7 (Pseudo-inverse Theorem for Qmatrices). Let A, ˜A, E ∈ R[a,b]×m and ˜A = A + E. Then,
σ1(A† − ˜A†) ≤ 3 max{σ1(A†)2, σ1(A†)2} σ1(E).

L2/σm( ˜A)2.

1 − 2(cid:107)E(cid:107)2

(cid:113)

5.2 Concentration Bound for the Kernel Density Estimator

Next, we bound the error for kernel density estimation. To obtain the best rates under Hölderian
assumptions on O, the kernels used in KDE need to be of order β. A β order kernel satisﬁes,

(cid:90) 1

0

(cid:90) 1

0

K(s)ds = 1,

sαK(s)ds = 0, for all α ≤ (cid:98)β(cid:99),

sβK(s)ds ≤ ∞.

(5)

(cid:90) 1

0

Such kernels can be constructed using Legendre polynomials [17]. Given N i.i.d samples from a d
dimensional density f , where d ∈ {1, 2, 3} and f ∈ {P1, P21, P321}, for appropriate choices of the
bandwidths h1, h21, h321, the KDE ˆf ∈ { (cid:98)P1, (cid:98)P21, (cid:98)P321} concentrates around f . Informally, we show
(cid:16)

(cid:16)

2β

d

P

(cid:17)
(cid:107) ˆf − f (cid:107)L2 > ε

(cid:46) exp

− log(N )

2β+d N

2β+d ε2(cid:17)

.

(6)

4 Hsu et al. [2] provide a more reﬁned bound but we use this form to simplify the comparison.

6

Figure 1: The upper and lower panels correspond to m = 4 m = 8 respectively. All ﬁgures are in log-log
scale and the x-axis is the number of triples used for training. Left: L1 error between true conditional density
p(x6|x1:5), and the estimate for each method. Middle: The absolute error between the true observation and a
one-step-ahead prediction. The error of the true model is denoted by a black dashed line. Right: Training time.
for all sufﬁciently small ε and N/ log N (cid:38) ε−2+ d
β . Here (cid:46), (cid:38) denote inequalities ignoring constants.
See Appendix C for a formal statement. Note that when the observations are either discrete or
parametric, it is possible to estimate the distribution using O(1/ε2) samples to achieve ε error in a
suitable metric, say, using the maximum likelihood estimate. However, the nonparametric setting is
inherently more difﬁcult and therefore the rate of convergence is slower. This slow convergence is
also observed in similar concentration bounds for the KDE [24, 25].

A note on the Proofs: For Lemmas 6, 7 we follow the matrix proof in Stewart and Sun [26] and
derive several intermediate results for c/q-matrices in the process. The main challenge is that several
properties for matrices, e.g. the CS and Schur decompositions, are not known for c/q-matrices. In
addition, dealing with various notions of convergences with these inﬁnite objects can be ﬁnicky. The
main challenge with the KDE concentration result is that we want an L2 bound – so usual techniques
(such as McDiarmid’s [13, 17]) do not apply. We use a technical lemma from Giné and Guillou [25]
which allows us to bound the L2 error in terms of the VC characteristics of the class of functions
induced by an i.i.d sum of the kernel. The proof of theorem 5 just mimics the discrete case analysis
of Hsu et al. [2]. While, some care is needed (e.g. (cid:107)x(cid:107)L2 ≤ (cid:107)x(cid:107)L1 does not hold for functional
norms) the key ideas carry through once we apply Lemmas 21, 6, 7 and (6). A more reﬁned bound on
N that is tighter in polylog(N ) terms is possible – see Corollary 25 and equation 13 in the appendix.

6 Experiments
We compare NP-HMM-SPEC to the following. MG-HMM: An HMM trained using EM with the
emissions modeled as a mixture of Gaussians. We tried 2, 4 and 8 mixtures and report the best result.
NP-HMM-BIN: A naive baseline where we bin the space into n intervals and use the discrete spectral
algorithm [2] with n states. We tried several values for n and report the best. NP-HMM-EM: The
Nonparametric EM heuristic of [12]. NP-HMM-HSE: The Hilbert space embedding method of [14].

Synthetic Datasets: We ﬁrst performed a series of experiments on synthetic data where the true
distribution is known. The goal is to evaluate the estimated models against the true model. We
generated triples from two HMMs with m = 4 and m = 8 states and nonparametric emissions. The
details of the set up are given in Appendix E. Fig. 1 presents the results.

First we compare the methods on estimating the one step ahead conditional density p(x6|x1:5). We
report the L1 error between the true and estimated models. In Fig. 2 we visualise the estimated one
step ahead conditional densities. NP-HMM-SPEC outperforms all methods on this metric. Next, we
compare the methods on the prediction performance. That is, we sample sequences of length 6 and test
how well a learned model can predict x6 conditioned on x1:5. When comparing on squared error, the
best predictor is the mean of the distribution. For all methods we use the mean of (cid:98)p(x6|x1:5) except

7

Figure 2: True and estimated one step ahead densities p(x4|x1:3) for each model. Here m = 4 and N = 104.

Dataset

MG-HMM

NP-HMM-BIN

NP-HMM-HSE

NP-HMM-SPEC

Internet Trafﬁc
Laser Gen
Patient Sleep

0.143 ± 0.001
0.33 ± 0.018
0.330 ± 0.002

0.188 ± 0.004
0.31 ± 0.017
0.38 ± 0.011

0.0282 ± 0.0003
0.19 ± 0.012
0.197 ± 0.001

0.016 ± 0.0002
0.15 ± 0.018
0.225 ± 0.001

Table 1: The mean prediction error and the standard error on the 3 real datasets.

for NP-HMM-HSE for which we used the mode since the mean cannot be computed. No method can
do better than the true model (shown via the dotted line) in expectation. NP-HMM-SPEC achieves
the performance of the true model with large datasets. Finally, we compare the training times of all
methods. NP-HMM-SPEC is orders of magnitude faster than NP-HMM-HSE and NP-HMM-EM.

Note that the error of MG-HMM– a parametric model – stops decreasing even with large data. This
is due to the bias introduced by the parametric assumption. We do not train NP-HMM-EM for
longer sequences because it is too slow. A limitation of the NP-HMM-HSE method is that it cannot
recover conditional probabilities – so we exclude it from that experiment. We exclude NP-HMM-BIN
from the time comparison because it was much faster than all other methods. We could not include
the method of [4] in our comparisons since their code was not available and their method isn’t
straightforward to implement. Further, their method cannot compute joint/predictive probabilities.

Real Datasets: We compare all the above methods (except NP-HMM-EM which was too slow) on
prediction error on 3 real datasets: internet trafﬁc [27], laser generation [28] and sleep data [29].
Each model was trained using a training sequence and then the predictions were computed on a test
sequence. The details on these datasets are in Appendix E. For all methods we used the mode of the
conditional distribution p(xt+1|x1:t) as the prediction as it performed better. For NP-HMM-SPEC,
NP-HMM-HSE,NP-HMM-BIN we follow the procedure outlined in Section 4.3 to create triples and
train with the triples. In Table 1 we report the mean prediction error and the standard error. NP-HMM-
HSE and NP-HMM-SPEC perform better than the other two methods. However, NP-HMM-SPEC
was faster to train (and has other attractive properties) when compared to NP-HMM-HSE.

7 Conclusion

We proposed and studied a method for estimating the observable representation of a Hidden Markov
Model whose emission probabilities are smooth nonparametric densities. We derive a bound on the
sample complexity for our method. While our algorithm is similar to existing methods for discrete
models, many of the ideas that generalise it to the nonparametric setting are new. In comparison
to other methods, the proposed approach has some desirable characteristics: we can recover the
joint/conditional densities, our theoretical results are in terms of more interpretable metrics, the
method outperforms baselines and is orders of magnitude faster to train.

In this exposition only focused on one dimensional observations. The multidimensional case is
handled by extending the above ideas and technology to multivariate functions. Our algorithm and the
analysis carry through to the d-dimensional setting, mutatis mutandis. The concern however, is more
practical. While we have the technology to perform various c/q-matrix operations for d = 1 using
Chebyshev polynomials, this is not yet the case for d > 1. Developing efﬁcient procedures for these
operations in the high dimensional settings is a challenge for the numerical analysis community and is
beyond the scope of this paper. That said, some recent advances in this direction are promising [8, 30].

While our method has focused on HMMs, the ideas in this paper apply for a much broader class
of problems. Recent advances in spectral methods for estimating parametric predictive state repre-
sentations [31], mixture models [3] and other latent variable models [32] can be generalised to the
nonparamatric setting using our ideas. Going forward, we wish to focus on such models.

8

Acknowledgements
The authors would like to thank Alex Townsend, Arthur Gretton, and Ahmed Hefny for the helpful
discussions.

References
[1] Lawrence R. Rabiner. A Tutorial on Hidden Markov Models and Selected Applications in Speech

Recognition. In Proceedings of the IEEE, 1989.

[2] Daniel J. Hsu, Sham M. Kakade, and Tong Zhang. A Spectral Algorithm for Learning Hidden Markov

Models. In COLT, 2009.

[3] Animashree Anandkumar, Daniel Hsu, and Sham M Kakade. A Method of Moments for Mixture Models

and Hidden Markov Models. arXiv preprint arXiv:1203.0683, 2012.

[4] Sajid M. Siddiqi, Byron Boots, and Geoffrey J. Gordon. Reduced-Rank Hidden Markov Models. In

[5] Alex Townsend and Lloyd N Trefethen. Continuous analogues of matrix factorizations. In Proc. R. Soc. A,

AISTATS, 2010.

2015.

[6] Alex Townsend. Computing with Functions in Two Dimensions. PhD thesis, University of Oxford, 2014.
[7] Tobin A Driscoll, Nicholas Hale, and Lloyd N Trefethen. Chebfun guide. Pafnuty Publ, 2014.
[8] Townsend, Alex and Trefethen, Lloyd N. An extension of chebfun to two dimensions. SIAM J. Scientiﬁc

[9] Michael L Littman, Richard S Sutton, and Satinder P Singh. Predictive representations of state. In NIPS,

Computing, 2013.

volume 14, pages 1555–1561, 2001.

[10] A. P. Dempster, N. M. Laird, and D. B. Rubin. Maximum likelihood from incomplete data via the EM

algorithm. JOURNAL OF THE ROYAL STATISTICAL SOCIETY, SERIES B, 1977.

[11] Lloyd R Welch. Hidden Markov models and the Baum-Welch algorithm. IEEE Information Theory Society

Newsletter, 2003.

[12] Tatiana Benaglia, Didier Chauveau, and David R Hunter. An EM-like algorithm for semi-and nonparametric

estimation in multivariate mixtures. Journal of Computational and Graphical Statistics, 2009.

[13] Larry Wasserman. All of Nonparametric Statistics. Springer-Verlag NY, 2006.
[14] Le Song, Byron Boots, Sajid M Siddiqi, Geoffrey J Gordon, and Alex Smola. Hilbert space embeddings of

hidden markov models. In ICML, 2010.

[15] Le Song, Animashree Anandkumar, Bo Dai, and Bo Xie. Nonparametric Estimation of Multi-View Latent
Variable Models. In Proceedings of the 31st International Conference on Machine Learning (ICML-14),
pages 640–648, 2014.

[16] Herbert Jaeger. Observable operator models for discrete stochastic time series. Neural Computation, 2000.
[17] Alexandre B. Tsybakov. Introduction to Nonparametric Estimation. Springer, 2008.
[18] L. Fox and I. B. Parker. Chebyshev polynomials in numerical analysis. Oxford U.P. cop., 1968.
[19] Lloyd N. Trefethen. Approximation Theory and Approximation Practice. Society for Industrial and Applied

Mathematics, 2012.

[20] Lucien Birgé and Pascal Massart. Estimation of integral functionals of a density. Ann. of Stat., 1995.
[21] James Robins, Lingling Li, Eric Tchetgen, and Aad W van der Vaart. Quadratic semiparametric Von Mises

Calculus. Metrika, 69(2-3):227–247, 2009.

[22] Kirthevasan Kandasamy, Akshay Krishnamurthy, Barnabás Póczos, Larry Wasserman, and James Robins.
Nonparametric Von Mises Estimators for Entropies, Divergences and Mutual Informations. In NIPS, 2015.
[23] Woo Young Lee. Weyl’s theorem for operator matrices. Integral Equations and Operator Theory, 1998.
[24] Han Liu, Min Xu, Haijie Gu, Anupam Gupta, John D. Lafferty, and Larry A. Wasserman. Forest Density

Estimation. Journal of Machine Learning Research, 12:907–951, 2011.

[25] Evarist Giné and Armelle Guillou. Rates of strong uniform consistency for multivariate kernel density

estimators. In Annales de l’IHP Probabilités et statistiques, 2002.

[26] G. W. Stewart and Ji-guang Sun. Matrix Perturbation Theory. Academic Press, 1990.
[27] Vern Paxson and Sally Floyd. Wide area trafﬁc: the failure of Poisson modeling. IEEE/ACM Transactions

on Networking, 1995.

[28] U Hübner, NB Abraham, and CO Weiss. Dimensions and entropies of chaotic intensity pulsations in a

single-mode far-infrared NH 3 laser. Physical Review A, 1989.

[29] Santa Fe Time Series Competition. http://www-psych.stanford.edu/∼andreas/Time-Series/SantaFe.html,

2016. Accessed: 2016-05-17.

[30] Hashemi, B. and Trefethen, L. N. Chebfun to three dimensions. In preparation, 2016.
[31] Satinder Singh, Michael R. James, and Matthew R. Rudary. Predictive State Representations: A New

Theory for Modeling Dynamical Systems. In UAI, 2004.

[32] Animashree Anandkumar, Rong Ge, Daniel Hsu, Sham M. Kakade, and Matus Telgarsky. Tensor Decom-

positions for Learning Latent Variable Models. JMLR, 2014.

9

A A Quart-sized Review of Continuous Linear Algebra

In this section we introduce continuous analogues of matrices and their factorisations. We only
provide a brief quart-sized review for what is needed in this exposition. Chapters 3 and 4 of Townsend
[6] contains a reservoir-sized review.
A matrix F ∈ Rm×n is an m × n array of numbers where F (i, j) denotes the entry in row i, column
j. We will also look at cases where either m or n is inﬁnite. A column qmatrix (quasi-matrix)
Q ∈ R[a,b]×m is a collection of m functions deﬁned on [a, b] where the row index is continuous
and column index is discrete. Writing Q = [q1, . . . , qm] where qj : [a, b] → R is the j th function,
Q(y, j) = qj(y) denotes the value of the j th function at y ∈ [a, b]. Q(cid:62) ∈ Rm×[a,b] denotes a row
qmatrix with Q(cid:62)(j, y) = Q(y, j). A cmatrix (continous-matrix) C ∈ R[a,b]×[c,d] is a two dimensional
function where both the row and column indices are continuous and C(y, x) is value of the function
at (y, x) ∈ [a, b] × [c, d]. C (cid:62) ∈ R[c,d]×[a,b] denotes its transpose with C (cid:62)(x, y) = C(y, x).

Qmatrices and cmatrices permit all matrix multiplications with suitably deﬁned inner products. Let
F ∈ Rm×n, Q ∈ R[a,b]×m, P ∈ R[a,b]×n, R ∈ R[c,d]×m and C ∈ R[a,b]×[c,d]. It follows that
F (:, j) ∈ Rm, Q(y, :) ∈ R1×m, Q(:, i) ∈ R[a,b], C(y, :) ∈ R1×[c,d] etc. Then the following hold:

S(y, j) = Q(y, :)F (:, j) = (cid:80)m
• QF = S ∈ R[a,b]×n where
• Q(cid:62)P = H ∈ Rm×n where H(i, j) = Q(:, j)(cid:62)P (:, j) = (cid:82) b
• QR(cid:62) = D ∈ R[a,b]×[c,d] where D(y, x) = Q(y, :)R(x, :)(cid:62) = (cid:80)m
• CR = T ∈ R[a,b]×m where

T (y, j) = C(y, :)R(:, j) = (cid:82) d

k=1 Q(y, k)F (i, k).
a Q(cid:62)(i, s)P (s, j)ds.

c C(y, s)R(s, j)ds.

1 Q(y, k)R(cid:62)(k, x).

Here, the integrals are with respect to the Lebesgue measure.
A cmatrix has a singular value decomposition (SVD). If C ∈ R[a,b]×[c,d], an SVD of C is the sum
C(y, x) = (cid:80)∞
j=1 σjuj(y)vj(x), which converges in L2. Here σ1 ≥ σ2 ≥ . . . . are the singular
values of C. {uj}j≥1 and {vj}j≥1 are the left and right singular vectors and form orthonormal bases
for L2([a, b]) and L2([c, d]) respectively, i.e. (cid:82) b
a uj(s)uk(s)ds = 1(j = k). It is known that the
SVD of a cmatrix exists uniquely with σj → 0, and continuous singular vectors (Theorem 3.2, [6]).
Further, if C is Lipshcitz continuous w.r.t both variables then the SVD is absolutely and uniformly
convergent. Writing the singular vectors as inﬁnite qmatrices U = [u1, u2 . . . ], V = [v1, v2 . . . ], and
Σ = diag(σ1, σ2 . . . ) we can write the SVD as,

C = U ΣV (cid:62) =

σjU (:, j)V (:, j)(cid:62).

∞
(cid:88)

j=1

If only m < ∞ singular values are nonzero then we say that C is of rank m. The SVD of a Qmatrix
Q ∈ R[a,b]×m is, Q = U ΣV (cid:62) = (cid:80)m
j=1 σjU (:, j)V (:, j)(cid:62), where U ∈ R[a,b]×m and V ∈ Rm×m
have orthonormal columns and Σ = diag(σ1, . . . , σm) with σ1 ≥ σ2 ≥ · · · ≥ σm ≥ 0. The SVD of
a qmatrix also exists uniquely (Theorem 4.1, [6]). The rank of a column qmatrix is the number of
linearly independent columns (i.e. functions) and is equal to the number of nonzero singular values.
Finally, the pseudo inverse of the cmatrix C is C † = V Σ−1U (cid:62) with Σ−1 = diag(1/σ1, 1/σ2, . . . ).
The p-operator norm of a cmatrix, for 1 ≤ p ≤ ∞ is (cid:107)C(cid:107)p = sup(cid:107)x(cid:107)p=1 (cid:107)Cx(cid:107)p where x ∈ R[c,d],
Cx ∈ R[a,b], (cid:107)x(cid:107)p
c (x(s))pds for p < ∞ and (cid:107)x(cid:107)∞ = sups∈[c,d] x(s). The Frobenius
. It can be shown that (cid:107)C(cid:107)2 = σ1 and
norm of a cmatrix is (cid:107)C(cid:107)F =
(cid:107)C(cid:107)2
j σ2
j where σ1 ≥ σ2 ≥ . . . are its singular values. Note that analogous relationships hold
with ﬁnite matrices. The pseudo inverse and norms of a qmatrix are similarly deﬁned and similar
relationships hold with its singular values.

(cid:82) d
c C(y, x)2dxdy

p = (cid:82) d

F = (cid:80)

(cid:16)(cid:82) b
a

(cid:17)1/2

Notation: In what follows we will use 1[a,b] to denote the function taking value 1 everywhere
in [a, b] and 1m to denote m-vectors of 1’s. When we are dealing with Lp norms of a function
we will explicitly use the subscript Lp to avoid confusion with the operator/Frobenius norms of
qmatrices and cmatrices. For example, for a cmatrix (cid:107)C(cid:107)2
F . As we have
already done, throughout the paper we will overload notation for inner products, multiplications and
pseudo-inverses depending on whether they hold for matrices, qmatrices or cmatrices. E.g. when

L2 = (cid:82) (cid:82) C(·, ·)2 = (cid:107)C(cid:107)2

10

p, q ∈ Rm, p(cid:62)q = (cid:80)m
probabilities of events while p will denote probability density functions (pdf).

1 piqi and when p, q ∈ R[a,b], p(cid:62)q = (cid:82) b

a p(s)q(s)ds. P will be used to denote

B Some Perturbation Theory Results for Continuous Linear Algebra

We recommend that readers unfamiliar with continuous linear algebra ﬁrst read the review in Ap-
pendix A. Throughout this section L(·) maps a matrix (including q/cmatrices) to its eigenvalues.
Similarly, σ(·) maps a matrix to its singular values. When we are dealing with inﬁnite sequences and
qmatrices “=" refers to convergence in L2. When dealing with inﬁnite sequences and cmatrices, “="
refers to convergence in the operator norm. For all theorems, we follow the template of Stewart and
Sun [26] for the matrix case and hence try to stick with their notation.
Before we proceed, we introduce the “cmatrix" I[0,1] on [0, 1]. For any u ∈ R[0,1] this is the operator
which satisﬁes I[0,1]u = u. That is, (I[0,1]u)(y) = (cid:82) 1
0 I[0,1](y, x)u(x)dx = u(y). Intuitively, it can
be thought of as the Dirac delta function along the diagonal, δ(x − y). Let Q = [q1, q2, . . . , ] ∈
R[0,1]×∞ be a qmatrix containing an orthonormal basis for [0, 1] and Qk ∈ R[0,1]×k denote the ﬁrst
k columns of Q. We make note of the following observation.

Theorem 8. QkQ(cid:62)

k → I[0,1] as k → ∞. Here convergence is in the operator norm.

Proof. We need to show that for all x ∈ R[0,1], (cid:107)QkQ(cid:62)
be the representation of x in the Q-basis. Here α = (α1, α2, . . . ) satisﬁes (cid:80)
have (cid:107)QkQ(cid:62)
j → 0 by the properties of sequences in (cid:96)2.

2 = (cid:80)∞

k x − x(cid:107)2

j=k+1 α2

k x − x(cid:107)2 → 0. Let x = Qα = (cid:80)∞

k=1 αkqk
k < ∞. We then

k α2

We now proceed to our main theorems. We begin with a series of intermediary results.

Theorem 9. Let X ∈ R[0,1]×m. Deﬁne the linear operator T(X) = AX − XB where A ∈
R[0,1]×[0,1] and B ∈ Rm×m are a square cmatrix and matrix, respectively. Then, T is nonsingular if
and only if L(A) ∩ L(B) = ∅.

Proof. Assume λ ∈ L(A) ∪ L(B). Then, let Ap = λp, q(cid:62)B = λq(cid:62) where p ∈ R[0,1] and q ∈ Rm.
Then T(pq(cid:62)) = 0 and T is singular. This proves one side of the theorem.
Now, assume that L(A) ∩ L(B) = ∅. As the operator is linear, it is sufﬁcient to show that
AX − XB = C has a unique solution for any C ∈ R[0,1]×m. Let the Schur decomposition of B be
Q = V (cid:62)BV where V is orthogonal and Q is upper triangular. Writing Y = XV and D = CV it is
sufﬁcient to show that AY − Y Q = D has a unique solution. We write

Y = (y1, y2, . . . ym) ∈ R[0,1]×m and D = (d1, d2, . . . , dm) ∈ R[0,1]×m

and use an inductive argument over the columns of Y .

The ﬁrst column of Y is given by Ay1 − Q11y1 = (A − Q11I[0,1])y1 = d1. Since Q11 ∈ L(B)
and L(A) ∩ L(B) is empty (A − Q11I[0,1]) is nonsingular. Therefore y1 is uniquely determined by
inverting the cmatrix (see Appendix A). Assume y1, y2 . . . , yk−1 are uniquely determined. Then, the
kth column is given by (A − QkkI[0,1])yk = dk +(cid:80)k−1
i=1 Qikyi. Again, (A − QkkI[0,1]) is nonsingular
by assumption, and hence this uniquely determines yk.

Corollary 10. Let T be as deﬁned in Theorem 9. Then

L(T) = L(A) − L(B) = {α − β : α ∈ L(A), β ∈ L(B)}.

Proof. If λ ∈ L(T) there exists X such that (A − λI[0,1])X − XB = 0. Therefore, by Theorem 9
there exists α ∈ L(A) and β ∈ L(B) such that λ = α − β. Therefore, L(T) ⊂ L(A) − L(B).
Conversely, consider any α ∈ L(A) and β ∈ L(B). Then there exists a ∈ R[0,1], b ∈ Rm such
that Aa = αa and b(cid:62)B = βb(cid:62). Writing X = ab(cid:62) we have AX − XB = (α − β)ab(cid:62). Therefore,
L(A) − L(B) ⊂ L(T).

11

Theorem 11. Let T be as deﬁned in Theorem 9. Then

inf
(cid:107)X(cid:107)F=1

(cid:107)T(X)(cid:107)F = min L(T) = min |L(A) − L(B)|.

(7)

Proof. For any qmatrix P = (p1, p2, . . . , pm) ∈ R[0,1]×m let vec(P ) = [p(cid:62)
R[0,m]×1 be the concatenation of all functions. Then vec(XB) = (cid:126)Bvec(X) where,

1 , p(cid:62)

2 , . . . , p(cid:62)

m](cid:62) ∈







(cid:126)B =

B11I[0,1] B21I[0,1]
B12I[0,1] B22I[0,1]

...

...

B1mI[0,1] B2mI[0,1]

· · · Bm1I[0,1]
· · · Bm2I[0,1]
. . .
· · · BmmI[0,1]

...







∈ R[0,m]×[0,m].

Here I[0,1] have been translated and should be interpreted as being a dirac delta function on that
block. Similarly, vec(AX) = (cid:126)Avec(X) where (cid:126)A = diag(A, A, . . . , A) ∈ R[0,m]×[0,m]. Therefore
vec(T(X)) = ( (cid:126)A − (cid:126)B) (cid:126)X. Now noting that (cid:107)X(cid:107)F = (cid:107)vec(X)(cid:107)2 we have,

inf
(cid:107)X(cid:107)F=1

(cid:107)T(X)(cid:107)F =

inf
(cid:107)vec(X)(cid:107)2=1

(cid:107)vec(T(X))(cid:107)2 = min |L( (cid:126)A − (cid:126)B)|.

The theorem follows by noting that the eigenvalues of ( (cid:126)A − (cid:126)B) are the same as those of L(T).

Theorem 12. Let X1, Y1 ∈ R[0,1]×(cid:96) have orthonormal columns. Then, there exist Q ∈ R∞×[0,1]
and U11, V11 ∈ R(cid:96)×(cid:96) such that the following holds,

QX1U11 =

∈ R∞×(cid:96),

QY1V11 =

∈ R∞×(cid:96).

(cid:21)

(cid:20)I(cid:96)
0

(cid:35)

(cid:34)Γ
Σ
0

Here Γ = diag(γ1, . . . , γ(cid:96)), Σ = diag(σ1, . . . , σ(cid:96)) and they satisfy
i + σ2

0 ≤ γ1 ≤ · · · ≤ γ(cid:96), σ1 ≥ · · · ≥ σ(cid:96) ≥ 0, and γ2

i = 1, i = 1, . . . , (cid:96).

Proof. Let X2, Y2 ∈ R[0,1]×∞ be orthonormal bases for the complementary subspaces of
R(X1), R(Y1), respectively. Denote X = [X1, X2], Y = [Y1, Y2] and

W = X (cid:62)Y =

(cid:18)W11 W12
W21 W22

(cid:19)

∈ R∞×∞,

1 Y1 ∈ R(cid:96)×(cid:96) and the rest are deﬁned accordingly. Now, using Theorem 5.1 from [26]
where W11 = X (cid:62)
there exist orthogonal matrices U = diag(U11, U22), V = diag(V11, V22) where U11, V11 ∈ R(cid:96)×(cid:96)
and U22, V22 ∈ R∞×∞ such that the following holds,

U (cid:62)W V =

∈ R∞×∞.

(cid:33)

(cid:32)Γ −Σ 0
0
I∞

Σ Γ
0
0

Here Γ, Σ satisfy the conditions of the theorem. Now set (cid:98)X = [ (cid:98)X1, (cid:98)X2], (cid:98)Y = [ (cid:98)Y1, (cid:98)Y2] where
(cid:98)X1 = X1U11, (cid:98)X2 = X2U11, (cid:98)Y1 = Y1V11, (cid:98)Y2 = Y2V11. Then, (cid:98)X (cid:62)Y = U (cid:62)W V . Setting
Q = (cid:98)X (cid:62) and setting U11, V11 as above yields,
(cid:20)I(cid:96)
0

, QY1V11 =

QX1U11 =

X1U11 =

Y1V11 =

(cid:18)U (cid:62)
U (cid:62)

(cid:18)U (cid:62)
U (cid:62)

(cid:19)

(cid:19)

(cid:35)

(cid:21)

11X (cid:62)
1
22X (cid:62)
2

11X (cid:62)
1
22X (cid:62)
2

(cid:34)Γ
Σ
0

where U (cid:62)

11X (cid:62)

1 Y1U11 = Γ, U (cid:62)

22X (cid:62)

2 Y1U11 = [Σ(cid:62), 0(cid:62)](cid:62) from the decomposition of U (cid:62)W V .

Remark 13. Stewart and Sun [26] prove Theorem 5.1 for a ﬁnite unitary W . However, it is
straightforward to verify that the same holds if W is a unitary operator on the (cid:96)2 sequence space, i.e.,
Theorem 5.1 is valid for (countably) inﬁnite matrices.

12

Deﬁnition 14 (Canonical Angles). Let X , Y be (cid:96) dimensional subspaces of the same dimension
for functions on [0, 1] and X1, Y1 ∈ R[0,1]×(cid:96) be orthonormal functions spanning these subspaces.
Then the canonical angles between X and Y are the diagonals of the matrix Θ[X , Y] ∆= sin−1(Σ)
where Σ is from Theorem 12. It follows that cos Θ[X , Y] = Γ where sin and cos are in the usual
trigonometric sense and satisfy cos2(x) + sin2(x) = 1.

Corollary 15. Let X , Y, X1, Y1 be as in Deﬁnition 14 and X2, Y2 be orthonormal functions for their
complementary spaces. Then, the nonzero singular values of X (cid:62)
2 Y1 are the sines of the nonzero
canonical angles between X , Y. The singular values of X (cid:62)
1 Y1 are the cosines of the nonzero
canonical angles.

Proof. From the proof of Theorem 12,

X (cid:62)

2 Y1 = U22

(cid:19)

(cid:18)Σ
0

U (cid:62)
11,

X (cid:62)

1 Y1 = U11ΓU (cid:62)
11.

Since U11, U22 are orthogonal, the above are the SVDs of X (cid:62)

2 Y1 and X (cid:62)

1 Y1.

Theorem 16. Let X , Y be (cid:96) dimensional subspaces of functions on [0, 1] and X1, Y1 ∈ R[0,1]×l be
an orthonormal bases. Let sin Θ[X , Y] = diag(σ1, . . . , σ(cid:96)). Denote PX = X1X (cid:62)
1 and PY = Y1Y (cid:62)
1 .
Then, the singular values of PX (I[0,1] − PY ) are σ1, σ2, . . . , σ(cid:96), 0, 0, . . . .

Proof. By Theorem 12, there exists Q ∈ R∞×[0,1], U11, V11 ∈ R(cid:96)×(cid:96), such that

QPX (I[0,1] − PY )Q(cid:62) = QX1X (cid:62)

1 Q(cid:62)Q(I[0,1] − Y1Y (cid:62)

1 )Q(cid:62)

= (QX1U1)(U (cid:62)

1 X (cid:62)

1 Q(cid:62))(I[0,1] − QY1V11(V (cid:62)

11Y (cid:62)

1 Q(cid:62))) =

[Σ −Γ 0]

(cid:35)

(cid:34)Σ
0
0

Here we have used I[0,1] = Q(cid:62)Q. The proof of this uses a technical argument involving the dual
space of the class of operators described by cmatrices. (In the discrete matrix case this is similar to
how the outer product of a complete orthonormal basis results in the identity U U (cid:62) = I.) The last
step follows from Theorem 12 and some algebra. Noting that [Σ −Γ 0] has orthonormal rows, it
follows that the singular values of PX (I[0,1] − PY ) are Σ.

Theorem 17. Let A ∈ R[0,1]×[0,1] satisfy,

A = [X1 X2]

(cid:20)L1

0
0 L2

(cid:21) (cid:20)X (cid:62)
1
X (cid:62)
2

(cid:21)

where X1 ∈ R[0,1]×(cid:96) and [X1, X2] is unitary. Let Z ∈ R[0,1]×m and T = AZ − ZB where
B ∈ Rm×m. Let δ = min |L(L2) − L(B)| > 0. Then,

(cid:13)
(cid:13) sin Θ[R(X1), R(Z)](cid:107)F ≤

(cid:107)T (cid:107)F
δ

.

Proof. First note that X (cid:62)

2 T = L2X (cid:62)

2 Z − X (cid:62)

2 ZB. The claim follows from Theorems 11 and 15.

(cid:13)
(cid:13) sin Θ[R(X1), R(Z)](cid:107)F = (cid:107)X (cid:62)

2 Z(cid:107)F ≤

(cid:107)X (cid:62)

2 T (cid:107)F

min |L(L2) − L(B)|

≤

(cid:107)T (cid:107)F
δ

.

13

Theorem 18 (Wedin’s Sine Theorem for cmatrices – Frobenius form). Let A, ˜A, E ∈ R[0,1]×[0,1]
with ˜A = A + E. Let A, ˜A have the following conformal partitions,

A = [U1 U2]

(cid:20)Σ1

0
0 Σ2

(cid:21) (cid:20)V (cid:62)
1
V (cid:62)
2

(cid:21)

,

˜A = (cid:2) ˜U1

(cid:3)

˜U2

(cid:20) ˜Σ1
0

(cid:21)

0
˜Σ2

(cid:21) (cid:20) ˜V (cid:62)
1
˜V (cid:62)
2

.

where U1, ˜U1 ∈ R[0,1]×m, V1, ˜V1 ∈ R[0,1]×m and U2, ˜U2 ∈ R[0,1]×∞, V2, ˜V2 ∈ R[0,1]×∞. Let
R = A ˜V1 − ˜U1 ˜Σ1 ∈ R[0,1]×m and S = A(cid:62) ˜U1 − ˜V1 ˜Σ1 ∈ R[0,1]×m. Assume there exists δ > 0
such that, min |σ( ˜Σ1) − σ(Σ2)| ≥ δ and min |σ( ˜Σ1)| ≥ δ. Let Φ1, Φ2 denote the canonical angles
between (R(U1), R( ˜U1)) and (R(V1), R( ˜V1)) respectively. Then,

(cid:113)

(cid:107) sin Φ1(cid:107)2

F + (cid:107) sin Φ2(cid:107)2

F ≤

(cid:113)

(cid:107)R(cid:107)2

F + (cid:107)S(cid:107)2
F
δ

.

Remark 19. The two conditions on δ are needed because the theorem doesn’t require Σ1, Σ2, ˜Σ1, ˜Σ2
to be ordered. If they were ordered, then it reduces to δ = min |σ( ˜Σ1) − σ(Σ2)| > 0.

Proof. First deﬁne Q ∈ R[0,2]×[0,2],

Q =

(cid:21)

(cid:20) 0 A
A(cid:62) 0

.

It can be veriﬁed that if ui ∈ R[0,1], vi ∈ R[0,1] are a left/right singular vector pair with singular
value σi, then (ui, vi) ∈ R[0,2] is an eigenvector with eigenvalue σi and (ui, −vi) ∈ R[0,2] is an
eigenvector with eigenvalue −σi. Writing,

X =

1
√
2

(cid:19)

(cid:18)U1

U1
V1 −V1

,

Y =

1
√
2

(cid:19)

(cid:18)U2

U2
V2 −V2

,

we have,






0

Σ1
0 −Σ1
0
0






0
0
0

0
0
Σ2
0 −Σ2

(cid:21)

(cid:20)X (cid:62)
Y (cid:62)

.

Q = [X Y ]

0
0
We similarly deﬁne ˜Q, ˜X, ˜Y for ˜A. Now let T = Q ˜X − ˜Xdiag( ˜Σ1, − ˜Σ1). We will apply Theorem 17
with L1 = diag(Σ1, −Σ1), L2 = diag(Σ2, −Σ2), Z = ˜X, B = diag( ˜Σ1, − ˜Σ1). Then, using the
conditions on δ gives us,

It is straightforward to verify that (cid:107)T (cid:107)2

F. To conclude the proof, ﬁrst note that

(cid:13)
(cid:13) sin Θ[R(X), R( ˜X)](cid:107)F ≤

(cid:107)T (cid:107)F
δ

.

F = (cid:107)R(cid:107)2

F + (cid:107)S(cid:107)2
1 )(I[0,1] − ˜U1 ˜U (cid:62)
1 )

(cid:20)(U1U (cid:62)

0

0

(cid:21)

(V1V (cid:62)

1 )(I[0,1] − ˜V1 ˜V (cid:62)
1 )
2(cid:107)2
F + (cid:107) sin Φ2
1(cid:107)2
F.

F = (cid:107) sin Φ2

XX (cid:62)(I[0,2] − Y Y (cid:62)) =

Now, using Theorem 16 we have (cid:107) sin Θ[R(X), R( ˜X)](cid:107)2

We can now prove Lemma 6 which follows directly from Theorem 18.

Proof of Lemma 6. Let ˜U⊥ ∈ R[0,1]×m be an orthonormal basis for the complementary sub-
space of R( ˜U ). Then, by Corollary 15, (cid:107) ˜U (cid:62)
⊥ V (cid:107)2
⊥ U (cid:107)2
F =
(cid:107) sin Θ[R( ˜V ), R(V )](cid:107)2
F < (cid:107)E(cid:107)2
F. For R, S as deﬁned in Theorem 18, we have. (cid:107)R(cid:107)2
F.
The lemma follows via the sin–cos relationships for canonical angles,

F = (cid:107) sin Θ[R( ˜U ), R(U )](cid:107)2

F, (cid:107) ˜V (cid:62)

F, (cid:107)S(cid:107)2

min σ( ˜U (cid:62)U )2 = 1 − max σ( ˜U (cid:62)

⊥ U )2 ≥ 1 − (cid:107) ˜U (cid:62)

⊥ U (cid:107)2

F ≥ 1 −

2(cid:107)E(cid:107)2
F
δ2

.

where δ = σm(A).

Next we prove the pseudo-inverse theorem. Recall that for A ∈ R[0,1]×m the SVD is A = U ΣV (cid:62)
where U ∈ R[0,1]×m, Σ ∈ Rm×m and V ∈ Rm×m where U, V have orthonormal columns. Denote
its pseudo-inverse by A† = V Σ−1U (cid:62).

14

Proof of Lemma 7. Let A = U ΣV be the SVD of A and ˜A = ˜U ˜Σ ˜V be the SVD of ˜A. Let
(cid:101)P = ˜U ˜U (cid:62), R = V V (cid:62), (cid:101)R = ˜V ˜V (cid:62), P⊥ = I[0,1] − U U (cid:62), (cid:101)R⊥ = I[0,1] − ˜V ˜V (cid:62) and P = U U (cid:62). We
then have,

˜A† − A† = − ˜A† (cid:101)P ERA† + ( ˜A(cid:62) ˜A)† (cid:101)RE(cid:62)P⊥ + (cid:101)R⊥EP (AA(cid:62))†
(cid:107) ˜A† − A†(cid:107)2 ≤ (cid:107) ˜A†(cid:107)2(cid:107)E(cid:107)2(cid:107)A†(cid:107)2 + (cid:107)( ˜A(cid:62) ˜A)†(cid:107)2(cid:107)E(cid:107)2 + (cid:107)E(cid:107)2(cid:107)(AA(cid:62))†(cid:107)2

(cid:16)
(cid:107) ˜A†(cid:107)2(cid:107)A†(cid:107)2 + (cid:107) ˜A†(cid:107)2

=

(cid:17)

2 + (cid:107)A†(cid:107)2
2

(cid:107)E(cid:107)2 ≤ 3 max{(cid:107) ˜A(cid:107)2

2, (cid:107)A(cid:107)2

2}(cid:107)E(cid:107)2

The ﬁrst step is obtained by substitutine for (cid:101)P , E, R, (cid:101)R, P⊥, (cid:101)R⊥ and P , the second step uses the
triangle inequality, and the third step uses ˜A(cid:62) ˜A = U Σ2U (cid:62), AA(cid:62) = V Σ2V (cid:62).
Remark 20. P, (cid:101)P , R, (cid:101)R can be shown to be the projection operators to R(A), R( ˜A), R(A(cid:62)) and
R( ˜A(cid:62)). Here, R(A) = {Ax; x ∈ Rm} ⊂ R[0,1] is the range of A. R( ˜A) ⊂ R[0,1], R(A(cid:62)) ⊂ Rm
and R( ˜A(cid:62)) ⊂ Rm are deﬁned similarly. P⊥, (cid:101)R⊥ are the complementary projectors of P, (cid:101)R.

Finally, we state an analogue of Weyl’s theorem for cmatrices which bounds the difference in the
singular values in terms of the operator norm of the perturbation. While Weyl’s theorem has been
studied for general operators [23], we use the form below from Townsend [6] for cmatrices.

Lemma 21 (Weyl’s Theorem for Cmatrices, [6].). Let A, E ∈ R[a,b]×[c,d] and ˜A = A + E. Let the
singular values of A be σ1 ≥ σ2, . . . and those of ˜A be ˜σ1 ≥ ˜σ2, . . . . Then,

|σi − ˜σi| ≤ (cid:107)E(cid:107)2 ∀i ≥ 1.

C Concentration of Kernel Density Estimation

We will ﬁrst deﬁne the Hölder class in high dimensions.

Deﬁnition 22. Let X ⊂ Rd be a compact space. For any r = (r1, . . . , rd), ri ∈ N, let |r| = (cid:80)
and Dr =

. The Hölder class Hd(β, L) is the set of functions of L2(X ) satisfying

i ri

∂|r|
rd
1 ...x
d

∂xr1

|Drf (x) − Drf (y)| ≤ L(cid:107)x − y(cid:107)β−|r|,

(8)

for all r such that |r| ≤ (cid:98)β(cid:99) and for all x, y ∈ X .

The following result establishes concentration of kernel density estimators. At a high level, we follow
the standard KDE analysis techniques to decompose the L2 error into bias and variance terms and
bound them separately. A similar result for 2-dimensional densities was given by Liu et al. [24].
Unlike the previous work, here we deal with the general d-dimensional case as well as explicitly
delineate the dependencies of the concentration bounds on the deviation, ε.

Lemma 23. Let f ∈ Hd(β, L) be a density on [0, 1]d and assume we have N i.i.d samples
i=1 ∼ f . Let ˆf be the kernel density estimate obtained using a kernel with order at least
{Xi}N
β and bandwidth h = (cid:0) log N
2β+d . Then there exist constants κ1, κ2, κ3, κ4 > 0 such that for all
ε < κ4 and number of samples satisfying N
(cid:16)

log N > κ1

we have,

(cid:1) 1

2+ d
β

ε
(cid:16)

N

d

P

(cid:17)
(cid:107) ˆf − f (cid:107)L2 > ε

≤ κ2 exp

−κ3N

2β
2β+d (log N )

2β+d ε2(cid:17)

(9)

Proof. First note that

P(cid:0)(cid:107) ˆf − f (cid:107)L2 > ε(cid:1) ≤ P(cid:0)(cid:107) ˆf − E ˆf (cid:107)L2 + (cid:107)E ˆf − f (cid:107)L2 > ε(cid:1).
(10)
Using the Hölderian conditions and assumptions on the kernel, standard techniques for analyzing
the KDE [13, 17], give us a bound on the bias, (cid:107)E ˆf − f (cid:107)L2 ≤ κ5hβ, where κ5 = L (cid:82) K(u)uβdu.
When the number of samples, N , satisﬁes

N
log N

>

(cid:18) 2κ(cid:48)
5
ε

(cid:19)2+ d

β

=

κ5
ε2+ d

β

, where κ5

∆= (2κ(cid:48)

5)2+ d

β

(11)

15

we have (cid:107)E ˆf − f (cid:107)L2 ≤ ε/2, and hence (10) turns into P(cid:0)(cid:107) ˆf − f (cid:107)L2 > ε(cid:1) ≤ P(cid:0)(cid:107) ˆf − E ˆf (cid:107)L2 > ε/2(cid:1).
The main challenge in bounding the ﬁrst term is that we want the difference to hold in L2. The
standard techniques that bound the pointwise variance would not be sufﬁcient here. To overcome the
limitations, we use Corollary 2.2 from Giné and Guillou [25]. Using their notation we have,

(cid:19)(cid:21)

(cid:20) 1
hd K

(cid:18) X − t
h
(cid:18) x − t
(cid:19)
h

K 2

f (x)dx

K 2(u)f (t + uh)du ≤

(cid:107)f (cid:107)∞(cid:107)K(cid:107)L2
hd

σ2 = sup
t∈[0,1]d

VX∼f

≤ sup

t∈[0,1]d

= sup

t∈[0,1]d

(cid:90)

1
h2d
(cid:90)

1
hd
(cid:13)
(cid:13)
(cid:13)
(cid:13)

U = sup

t∈[0,1]d

1
hd K

(cid:18) X − t
h

(cid:19)(cid:13)
(cid:13)
(cid:13)
(cid:13)∞

(cid:107)K(cid:107)L∞
hd

.

=

(cid:16)

Then, there exist constants κ2, κ3, κ(cid:48)

4 such that for all ε ∈

(cid:113)

κ(cid:48)
4

σ√
n

log U

σ , σ2

U κ(cid:48)

4

(cid:17)

we have,

(cid:16)

P

(cid:107) ˆf − E ˆf (cid:107)L2 >

(cid:17)

ε
2

≤ κ2 exp (cid:0)−κ3N hdε2(cid:1) .

Substituting for h and then combining this with (10) gives us the probability inequality of the theorem.
All that is left to do is to verify the that the conditions on ε hold. The upper bound condition requires
ε ≤ κ(cid:48)
.
Combining this with the condtion (11) and taking κ1 = max(κ6, κ5) gives the theorem.

∆= κ4. After some algebra, the lower bound on ε reduces to N

log N > κ6

4(cid:107)f (cid:107)∞(cid:107)K(cid:107)L2
(cid:107)K(cid:107)L∞

2+ d
β

ε

In order to apply the above lemma, we need P1, P21, P321 to satisfy the Hölder condition. The
following lemma shows that if all Ok’s are Hölderian, so are P1, P21, P321.

Lemma 24. Assume that the observation probabilities belong to the one dimensional Hölder class;
∀(cid:96) ∈ [m], O(cid:96) ∈ H1(β, L). Then for some constants L1, L2, L3, P1 ∈ H1(β, L1), P21 ∈ H2(β, L2),
P321 ∈ H3(β, L3).

Proof. We prove the statement for P21. The other two follow via a similar argument. Let r = (r1, r2),
ri ∈ N, |r| = r1 + r2 ≤ β, and let (s, t), (s(cid:48), t(cid:48)) ∈ [0, 1]d. Note that we can write,

P21(s, t) =

p(x2 = s, x1 = t, h2 = k, h1 = (cid:96)) =

αklOk(s)O(cid:96)(t),

(cid:88)

(cid:88)

k∈[m]

(cid:96)∈[m]

(cid:88)

(cid:88)

k∈[m]

(cid:96)∈[m]

where (cid:80)

k,(cid:96) αk(cid:96) = 1. Then,

∂|r|P21(s, t)
∂sr1∂tr2

−

∂|r|P21(s(cid:48), t(cid:48))
∂sr1∂tr2
(cid:18) ∂Ok(s)
∂sr1

αk(cid:96)

∂O(cid:96)(t)
∂tr2

−

∂Ok(s(cid:48))
∂sr1

∂O(cid:96)(t(cid:48))
∂tr2

(cid:19)

αk(cid:96)

(cid:18)(cid:12)
(cid:12)
(cid:12)
(cid:12)

∂Ok(s)
∂sr1

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

∂O(cid:96)(t)
∂tr2

−

∂O(cid:96)(t(cid:48))
∂tr2

(cid:12)
(cid:12)
(cid:12)
(cid:12)

+

(cid:12)
(cid:12)
(cid:12)
(cid:12)

∂O(cid:96)(t(cid:48))
∂tr2

(cid:12)
(cid:12)
∂O(cid:96)(s(cid:48))
(cid:12)
(cid:12)
(cid:12)
(cid:12)
∂sr1
(cid:12)
(cid:12)
(cid:0)L(cid:48)L|t − t(cid:48)|β−r2 + L(cid:48)L|s − s(cid:48)|β−r1(cid:1)

∂Ok(s)
∂sr1

−

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:19)

=

≤

(cid:88)

k,(cid:96)

(cid:88)

k,(cid:96)

≤

αkl

(cid:88)

k,(cid:96)

≤ L(cid:48)L

(cid:16)

|t − t(cid:48)|β−|r| + |s − s(cid:48)|β−|r|(cid:17)

≤ L2

(cid:112)(t − t(cid:48))2 + (s − s(cid:48))2

β−|r|

16

(Hölder condition)

(domain of s, s(cid:48) and t, t(cid:48))

Here, the third step uses the Hölder conditions on Ok and O(cid:96) and the fact that the partial fractions are
bounded in a bounded domain by a constant, which we denoted L(cid:48), due to the Hölder condition. Since
r1 + r2 = |r| ≤ β and r1, r2 are positive integers, we have xβ−ri ≤ xβ−r, i = 1, 2 for any x ∈ [0, 1],
which implies the fourth step. The last step uses Jensen’s inequality and sets L2 ≡ L(cid:48)L.

The corollary belows follws as a direct consequence of Lemmas 23 and 24. We have absorbed the
constants L1, L2, L3 into κ1, κ2, κ3, κ4.

Corollary 25. Assume the HMM satisﬁes the conditions given in Section 3. Let (cid:15)1, (cid:15)21, (cid:15)321 ∈ (0, κ4)
and η ∈ (0, 1). If the number of samples N is large enough such that the following are true,

N
log N

>

κ1
2+ 3
β
(cid:15)
321

,

N
log N

>

κ1
2+ 1
β
1

(cid:15)

,

N (log N )

1
2β >

N (log N )

2
2β >

N (log N )

3
2β >

N
log N

>

(cid:18) 1
κ3

(cid:18) 1
κ3

(cid:18) 1
κ3

log

log

log

(cid:18) 3κ2
η

(cid:18) 3κ2
η

(cid:18) 3κ2
η

1
2+ 1
β
1

(cid:15)

1
2+ 2
β
21

(cid:15)

1
2+ 3
β
321

(cid:15)

,

κ1
2+ 2
β
(cid:15)
21
(cid:19)(cid:19)1+ 1

2β

(cid:19)(cid:19)1+ 2

2β

(cid:19)(cid:19)1+ 3

2β

then with at least 1 − η probability the L2 errors between P1, P21, P321 and the KDE estimates
(cid:98)P1, (cid:98)P21, (cid:98)P321 satisfy,

(cid:107)P1 − (cid:98)P1(cid:107)L2 ≤ (cid:15)1,

(cid:107)P21 − (cid:98)P21(cid:107)L2 ≤ (cid:15)21,

(cid:107)P321 − (cid:98)P321(cid:107)L2 ≤ (cid:15)321.

D Analysis of the Spectral Algorithm

Our proof is a brute force generalization of the analysis in Hsu et al. [2]. Following their template, we
use establish a few technical lemmas. We mainly focus on the cases where our analysis is different.
Throughout this section (cid:15)1, (cid:15)21, (cid:15)321 will refer to L2 errors. Using our notation for c/q-matrices the
errors can be written as,

(cid:15)1 = (cid:107)P1 − (cid:98)P1(cid:107)L2 = (cid:107)P1 − (cid:98)P1(cid:107)F ,
(cid:15)21 = (cid:107)P21 − (cid:98)P21(cid:107)L2 = (cid:107)P21 − (cid:98)P21(cid:107)F ,
(cid:15)321 = (cid:107)P321 − (cid:98)P321(cid:107)L2.

We begin with a series of Lemmas.

Lemma 26. Let (cid:15)21 ≤ εσm(P21) where ε < 1
√
1+
following hold,

2

. Denote ε0 =

((1−ε)σm(P21))2 < 1. Then the

(cid:15)2
21

1. σm( (cid:98)U (cid:62) (cid:98)P21) ≥ (1 − ε)σm(P21).

2. σm( (cid:98)U (cid:62)P21) ≥

1 − ε0σm(P21).

3. σm( (cid:98)U (cid:62)P21) ≥

1 − ε0σm(P21).

√

√

Proof. The proof follows Hsu et al. [2] after an application of Weyl’s theorem (Lemma 21) and
Wedin’s sine theorem (Lemma 6) for cmatrices.

17

We deﬁne an alternative observable representation for the true HMM given by, (cid:101)b∞, (cid:101)b1 ∈ Rm and
(cid:101)B : [0, 1] → Rm×m.

(cid:101)b1 = (cid:98)U (cid:62)P1 = ( (cid:98)U (cid:62)O)π
(cid:101)b∞ = (P (cid:62)

21 (cid:98)U )P1 = ( (cid:98)U (cid:62)O)−11m

(cid:101)B(x) = ( (cid:98)U (cid:62)P3x1)( (cid:98)U (cid:62)P21)† = ( (cid:98)U (cid:62)O)A(x)( (cid:98)U (cid:62)O)−1.

As long as (cid:98)U (cid:62)O is invertible, the above parameters constitute a valid observable representation. This
is guaranteed if (cid:98)U is sufﬁciently close to U . We now deﬁne the following error terms,

δ∞ = (cid:107)( (cid:98)U (cid:62)O)(cid:62)((cid:98)b∞ − (cid:101)b∞)(cid:107)∞ = (cid:107)( (cid:98)U (cid:62)O)(cid:62)(cid:98)b∞ − 1m(cid:107)∞
δ1 = (cid:107)( (cid:98)U (cid:62)O)−1( (cid:98)B(x) − (cid:101)B(x))( (cid:98)U (cid:62)O)(cid:107)1 = (cid:107)( (cid:98)U (cid:62)O)−1 (cid:98)B(x)( (cid:98)U (cid:62)O) − A(x)(cid:107)1

∆(x) = (cid:107)( (cid:98)U (cid:62)O)−1( (cid:98)B(x) − (cid:101)B(x)) (cid:98)U (cid:62)O(cid:107)1 = (cid:107)( (cid:98)U (cid:62)O)−1 (cid:98)B(x) − A(x)(cid:107)1

∆ =

∆(x)dx

(cid:90)

x∈[0,1]

The next lemma bounds the above quantities in terms of (cid:15)1, (cid:15)21, (cid:15)321.
Lemma 27. Assume (cid:15)21 < σm(P21)/3. Then, there exists constants c1, c2, c3, c4 such that,

δ∞ ≤ c1 σ1(O)

δ1 ≤ c2

(cid:15)1
σm(O)
√

∆(x) ≤ c3

m κ(O)

√

∆ ≤ c4

m κ(O)

(cid:18)

(cid:15)21
σm(P21)2 +

(cid:15)1
σm(P21)

(cid:19)

(cid:32)

(cid:18)

(cid:15)21

σm(P21)2 (cid:107)P3x1(cid:107)2 +
(cid:15)321
σm(P21)2

(cid:15)21
σm(P21)2 +

(cid:33)

(cid:107)P3x1 − (cid:98)P3x1(cid:107)2
σm(P21)2
(cid:19)

Proof. We will use (cid:46), (cid:38) to denote inequalities ignoring constants. First we bound δ∞ ≤
(cid:107)( (cid:98)U (cid:62)O)(cid:62)((cid:98)b∞ − (cid:101)b∞)(cid:107)2 ≤ σ1(O)(cid:107)(cid:98)b∞ − (cid:101)b∞(cid:107)2. Then we note,

(cid:107)(cid:98)b∞ − (cid:101)b∞(cid:107)2 ≤ (cid:107)( (cid:98)P (cid:62)
≤ (cid:107)( (cid:98)P (cid:62)
(cid:46)

21 (cid:98)U )† (cid:98)P1 − (P21 (cid:98)U )†P1(cid:107)2
21 (cid:98)U )† − (P (cid:62)
(cid:15)21
21), σm(P (cid:62)

21 (cid:98)U )†(cid:107)2(cid:107) (cid:98)P1(cid:107)2 + (cid:107)(P (cid:62)
21 (cid:98)U )†(cid:107)2(cid:107) (cid:98)P21 − P1(cid:107)2
(cid:15)1
σm(P (cid:62)
21 (cid:98)U )

+

min{σm( (cid:98)P (cid:62)
(cid:15)21
σm(P21)2 +

21 (cid:98)U )}2
,

(cid:15)1
σm(P21)

(cid:46)

where the third and fourth steps use Lemma 26 and Lemma 7 (the pseudoinverse theorem for
qmatrices). This establishes the ﬁrst result. The second result is straightforward from Lemma 26.

√

δ1 ≤

m(cid:107)( (cid:98)U (cid:62)O)−1(cid:107)2(cid:107)(cid:98)b1 − (cid:101)b1(cid:107)2 ≤

√

m

(cid:107)(cid:98)b1 − (cid:101)b1(cid:107)2
σm( (cid:98)U (cid:62)O)

√

m

(cid:46)

(cid:107) (cid:98)U (cid:62)( (cid:98)P1 − P1)(cid:107)2
σm(O)

(cid:46)

√

m(cid:15)1
σm(O)

.

For the third result, we ﬁrst note

√

√

(cid:46)

m κ(O)(cid:107) (cid:98)B(x) − (cid:101)B(x)(cid:107)2

∆(x) ≤

m(cid:107)( (cid:98)U (cid:62)O)−1(cid:107)2(cid:107) (cid:98)B(x) − (cid:101)B(x)(cid:107)2(cid:107) (cid:98)U (cid:62)O(cid:107)2 ≤

(cid:107) (cid:98)B(x) − (cid:101)B(x)(cid:107)2

√

m

σ1(O)
σm( (cid:98)U (cid:62)O)

18

To bound the last term we decompose it as follows.

(cid:107) (cid:98)B(x) − (cid:101)B(x)(cid:107)2 = (cid:107)( (cid:98)U (cid:62)P3x1)( (cid:98)U (cid:62)P21)† − ( (cid:98)U (cid:62) (cid:98)P3x1)( (cid:98)U (cid:62) (cid:98)P21)†(cid:107)2

≤ (cid:107)( (cid:98)U (cid:62)P3x1)(( (cid:98)U (cid:62)P21)† − ( (cid:98)U (cid:62) (cid:98)P21)†)(cid:107)2 + (cid:107) (cid:98)U (cid:62)(P3x1 − (cid:98)P3x1)( (cid:98)U (cid:62) (cid:98)P21)†(cid:107)2
≤ (cid:107)P3x1(cid:107)2(cid:107)(cid:107)( (cid:98)U (cid:62)P21)† − ( (cid:98)U (cid:62) (cid:98)P21)†(cid:107)2 + (cid:107)P3x1 − (cid:98)P3x1(cid:107)2(cid:107)( (cid:98)U (cid:62) (cid:98)P21)†(cid:107)2

(cid:46) (cid:107)P3x1(cid:107)2

(cid:15)21
σm(P21)2 +

(cid:107)P3x1 − (cid:98)P3x1(cid:107)2
σm(P21)

.

This proves the third claim. For the last claim, we make use of the proven statements. Observe,

(cid:90)

(cid:18)(cid:90)

(cid:19)1/2

(cid:18)(cid:90) (cid:90) (cid:90)

(cid:107)P3x1(cid:107)2dx ≤

(cid:107)P3x1(cid:107)2

2dx

≤

P321(s, x, t)2dsdtdx

= (cid:107)P321(cid:107)L2 ,

(cid:19)1/2

where the ﬁrst step uses inclusion of the Lp norms in [0, 1]. The second step uses (cid:107) · (cid:107)2 ≤ (cid:107) · (cid:107)F for
cmatrices. A similar argument shows (cid:82)
x (cid:107)P3x1 − (cid:98)P3x1(cid:107)2 ≤ (cid:15)321. Combining these results gives the
fourth claim.

Finally, we need the following Lemma. The proof almost exactly replicates the proof of Lemma 12
in Hsu et al. [2], as all operations can be done with just matrices.

Lemma 28. Assume (cid:15)321 ≤ σm(P21)/3. Then ∀t ≥ 0,

(cid:90)

|p(x1:t) − (cid:98)p(x1:t)|dx1:t ≤ δ∞ + (1 + δ∞) (cid:0)(1 + ∆)tδ1 + (1 + ∆)t − 1(cid:1) ,

(12)

where the integral is over [0, 1]t.

We are now ready to prove Theorem 5.

Proof of Theorem 5. If (cid:15)1, (cid:15)21, (cid:15)321 satisfy the following for appropriate choices of c5, c6, c7,

(cid:15)1 ≤ c5 min(σm(P21),

)(cid:15),

(cid:15)21 ≤ c6

(cid:15),

(cid:15)321 ≤ c7

κ(O)
√
m

σm(P21)2
κ(O)

σm(P21)
σ1(O)

1
√
m
t

(cid:15),

(13)

we then have δ1 ≤ (cid:15)/20, δ∞ ≤ (cid:15)/20 and ∆ ≤ 0.4(cid:15)/t. Plugging these expressions into Lemma 28
gives (cid:82) |p(x1:t) − (cid:98)p(x1:t)|dx1:t ≤ (cid:15). When we plug the expresssions for (cid:15)1, (cid:15)21, (cid:15)321 in (13) into
Corollary 25 we get the required sample complexity.

E Addendum to Experiments

Details on Synthetic Experiments: Figure 3 shows the emission probabilities used in our synthetic
experiments. For the transition matrices, we sampled the entries of the matrix from a U (0, 1)
distribution and then renormalised the columns to sum to 1.

In our implementation, we use a Gaussian kernel for the KDE which is of order β = 2. While
higher order kernels can be constructed using Legendre polynomials [17], the Gaussian kernel was
more robust in practice. The bandwidth for the kernel was chosen via cross validation on density
estimation.

Details on Real Datasets: Here, we ﬁrst estimate the model parameters using the training sequence.
Given a test sequence x1:n, we predict xt+1 conditioned on the previous x1:t for t = 1 : n.

1. Internet Trafﬁc. Training sequence length: 10, 000. Test sequence length: 10.
2. Laser Generation. Training sequence length: 10, 000. Test sequence length: 100.
3. Physiological data. Training sequence length: 15, 000. Test sequence length: 100.

19

Figure 3: An illustration of the nonparametric emission probabilities used in our experiments.

20

