Learning Attentions: Residual Attentional Siamese Network
for High Performance Online Visual Tracking
Qiang Wang1,3∗, Zhu Teng2∗, Junliang Xing3†, Jin Gao3, Weiming Hu1,3, Stephen Maybank4
1University of Chinese Academy of Sciences, Beijing, China
2School of Computer and Information Technology, Beijing Jiaotong University, Beijing, China
3National Laboratory of Pattern Recognition, Institute of Automation, Chinese Academy of Sciences, Beijing, China
4Department of Computer Science and Information Systems, Birkbeck College, University of London, UK.
{qiang.wang, jlxing, jin.gao, wmhu}@nlpr.ia.ac.cn zteng@bjtu.edu.cn sjmaybank@dcs.bbk.ac.uk

Abstract

Ofﬂine training for object tracking has recently shown
great potentials in balancing tracking accuracy and speed.
However, it is still difﬁcult to adapt an ofﬂine trained model
to a target tracked online. This work presents a Residual At-
tentional Siamese Network (RASNet) for high performance
object tracking. The RASNet model reformulates the corre-
lation ﬁlter within a Siamese tracking framework, and intro-
duces different kinds of the attention mechanisms to adapt
the model without updating the model online. In particular,
by exploiting the ofﬂine trained general attention, the tar-
get adapted residual attention, and the channel favored fea-
ture attention, the RASNet not only mitigates the over-ﬁtting
problem in deep network training, but also enhances its dis-
criminative capacity and adaptability due to the separation
of representation learning and discriminator learning. The
proposed deep architecture is trained from end to end and
takes full advantage of the rich spatial temporal informa-
tion to achieve robust visual tracking. Experimental results
on two latest benchmarks, OTB-2015 and VOT2017, show
that the RASNet tracker has the state-of-the-art tracking ac-
curacy while runs at more than 80 frames per second.

1. Introduction

Online visual tracking of an arbitrary temporally chang-
ing object, speciﬁed at the ﬁrst frame, is an extensively stud-
ied problem in computer vision [30, 41, 53]. It still remains
very challenging due to practical factors like scale varia-
tion, fast motion, occlusions, deformation, and background
clutter [52]. High performance visual tracking algorithms
with good tracking accuracy and efﬁciency are required by
many applications like visual surveillance [14], trafﬁc mon-
itoring [31], human-computer interaction [32], and video
editing [1], to name a few.

One of the most successful tracking frameworks is Cor-
relation Filter (CF) [3,8,22,27,33,54,55]. Algorithms based
on correlation ﬁltering have demonstrated superior compu-

∗Equal contribution.
†Corresponding author.

tational efﬁciency and fairly good tracking accuracy. One
notable example is the MOSSE tracker [3] with the running
speed of about 700 frames per second. The main reasons for
its high running speed are the replacement of the exhausted
convolutions with element-wise multiplications using Fast
Fourier Transform, as well as the adoption of relatively
simple image features. For complex tracking scenarios,
however, the performance of CF trackers with hand-crafted
features often drops considerably. Recently, deep learning
models [8,36,43,49], have become an essential oracle to im-
prove the tracking accuracy, mainly due to their large model
capacities and strong feature learning abilities. By exten-
sively training large deep networks on large datasets ofﬂine
and aggressively learning the target sequence online, those
trackers have obtained record-breaking results on all recent
benchmarks [51, 52] and challenges [15, 16, 28].

Despite all these signiﬁcant progress, most deep learn-
ing based tracking methods still cannot attain consummate
results. One issue is that the deep feature learned ofﬂine
sometimes cannot adapt well to speciﬁc target during track-
ing.
If the deep feature extractor is learnt online then it
tends to overﬁt the target. Moreover, the online learning
of the feature extractor, its updating process, and even its
inference process, are all computationally expensive. This
prevents a tracking algorithm from performing all these op-
erations simultaneously at each frame [2, 12, 21, 44]. Moti-
vated by these considerations, we develop an effective and
efﬁcient deep learning based tracking approach to produce
high performance visual tracking. To this end, we adapt
the model architecture and training objective for more ef-
fective feature learning, and also introduce different kinds
of attention mechanisms into the tracking model learning to
produce more adaptive discriminative learning.

In particular, a new end-to-end deep architecture, named
Residual Attentional Siamese Network (RASNet), is de-
signed to learn both effective feature representation and de-
cision discriminators. The backbone of the attention mod-
ule in the RASNet is an Hourglass-like Convolutional Neu-
[37] to learn contextualized
ral Network (CNN) model
and multi-scaled feature representation. The residual learn-
ing within the RASNet further helps to encode more adap-

4854

tive representation of the object from multiple levels and
a weighted cross correlation layer is proposed to learn the
Siamese structure. The proposed RASNet extensively ex-
plores diverse attentional mechanisms to adapt the ofﬂine
learned feature representations to a speciﬁc tracking tar-
get. To guarantee high tracking efﬁciency, all these learning
processes are performed during the ofﬂine training stage.
Extensive analyses and evaluations on the latest tracking
benchmarks [51, 52] and challenges [15, 16] verify the ef-
fectiveness and efﬁciency of the proposed model.

To summarize, the main contributions of this work are

three-fold.

• An end-to-end deep architecture speciﬁcally designed
for the object tracking problem is proposed. The deep
architecture inherits the merits from many recent mod-
els like Hourglass structure, residual skip connection,
as well as our newly proposed weighted cross corre-
lations to produce effective deep feature learning for
visual tracking.

• Different kinds of attention mechanisms are explored
within the RASNet. These mechanisms include the
General Attention, Residual Attention, and Channel
Attention. The ofﬂine learned feature representations
are thus adapted to the online tracking target, to greatly
alleviate over-ﬁtting.

• Very effective and efﬁcient deep learning based tracker
is developed. It performs favorably against a number
of state-of-the-art trackers with the running speed over
80 frames per seconds. To facilitate further studies,
our source code and trained models are available at:
https://github.com/foolwood/RASNet.

2. Related Works

The most relevant tracking methods and techniques are
discussed. In particular, deep feature based tracking meth-
ods, end-to-end network learning based tracking methods,
as well as attention mechanisms are examined. The reader
is referred to more thorough reviews on object tracking sur-
vey [30, 34, 53] and benchmark evaluations [41, 52].

Deep feature based tracking. Recently deep features have
been widely employed to boost performance in tracking due
to its superior representation power. Some trackers combine
deep features with correlation ﬁlters. For example, CF2 [35]
and DeepSRDCF [11] concatenated features from different
layers of a pretrained CNN such as VGG [40] into corre-
lation ﬁlter. CCOT [12] and ECO [8] constructed trackers
based on the continuous convolution ﬁlters. Tracking can
also be regarded as a classiﬁcation or regression problem.
Accordingly, another approach to introduce deep features in
tracking borrows from classiﬁcation or regression network.
For instance, CNN-SVM tracker [23] utilized CNN model
with saliency map and SVM. FCNT [49] proposed feature

selection in a regression framework. DeepTrack [29] casted
tracking as a classiﬁcation problem and employed a candi-
date pool of multiple CNN as a data-driven model of dif-
ferent instances of the target object. The TSN tracker [45]
proposed a CNN network encoding temporal and spatial in-
formation in the context of classiﬁcation. The advantage of
these methods is they use the outstanding representations of
deep networks. However, these online only approaches do
not train the method on the ofﬂine dataset. This limits the
richness of the model, and the tracking speed is reduced if
online training or updating of the deep network are required.

End-to-End learning based tracking. To obtain the bene-
ﬁts of end-to-end learning, researchers train deep models on
videos ofﬂine and evaluate the model on the target tracking
benchmark for online tracking [2, 19, 21, 36, 44]. The key
points are how to formulate the tracking problem and how
to design the ofﬂine training loss function. The SINT [44]
formulated visual tracking as a veriﬁcation problem and
trained a Siamese architecture to learn a metric for on-
line target matching. SiamFC [2] brought cross correlation
into a fully-convolutional Siamese network. The GOTURN
[21] concatenated pairs of consecutive frames and learnt
the target tracking states by regression. The MDNet [36]
treated tracking as a classiﬁcation problem, and learnt an
ofﬂine deep feature extractor and then online updated the
classiﬁer by adding some learnable fully-connected layers
to perform online tracking within the Particle Filter frame-
work [25]. CFNet [46] interpreted the correlation ﬁlter
learner as a differentiable layer in a deep neural network.
These approaches advance the development of end-to-end
deep tracking models and achieve very good results on re-
cent benchmarks [51,52] and challenges [15,16]. However,
over-ﬁtting might occur when training their models using
similar benchmarks.

Attention mechanisms. Attention mechanisms were ﬁrst
used in neuroscience area [38]. They have spread to other
areas such as image classiﬁcation [24, 26, 48], pose esti-
mation [13], multi-object tracking [6], etc. For short-time
tracking, DAVT [17] used a discriminative spatial attention
for object tracking and afterwards ACFN [5] developed an
attentional mechanism that chose a subset of the associated
correlation ﬁlters for tracking. On the other hand, RTT [7]
drew attention to possible targets by a multidirectional RNN
to generate saliency and CSR-DCF [33] constructed a fore-
ground spatial reliability map by using color histograms to
constrain correlation ﬁlter learning. In contrast to these at-
tention mechanisms, it is proposed to learn the attention
through an end-to-end deep network. This attention mech-
anism consists of a general attention learning from ofﬂine
training dataset and a residual attention estimated by a resid-
ual net, which incorporates beneﬁts from both ofﬂine train-
ing dataset and the online target of live tracking.

4855

e
r
u
t
a
e
F

e
r
u
t
a
e
F

Co(cid:374)(cid:448)Net

Rtsidual

 Attente

ρ~ 

Gtetral

 Attente

ρ  

Chaeetl

 Attente

β 

g
(cid:374)

i
l

o
o
p

 
l

a
(cid:271)
o
G

l

(cid:1005)
(cid:272)
f

l

u
e
r

(cid:1006)
(cid:272)
f

i

d
o
(cid:373)
g
S

i

WXCtrr

Co(cid:374)(cid:448)Net

 (cid:272)ha(cid:374)(cid:374)el-(cid:449)ise s(cid:272)ale

ele(cid:373)e(cid:374)t-(cid:449)ise su(cid:373)(cid:373)atio(cid:374)

Figure 1. Pipeline of RASNet. The RASNet is constituted by a shared feature extractor, attention mechanisms (general attention, residual
attention, channel attention), and the weighted cross correlation layer (WXCorr). When a pair of an exemplar and a search image ﬂows into
the net, feature maps are produced through the feature extractor. Based on the exemplar features, three types of attentions are extracted.
Exemplar and search features, along with the attentions as weights are inputed to WXCorr and ﬁnally transformed to a response map.

3. Residual Attentional Siamese Network

To produce effective and efﬁcient visual tracking, a novel
deep architecture named Residual Attentional Siamese Net-
work (RASNet) is proposed. Fig. 1 shows the pipeline
of the proposed RASNet tracker.
In contrast to previous
deep architectures for tracking, the RASNet reformulates
the Siamese tracking from a regression prospective, and
propose a weighted cross correlation to learn the whole
Siamese model from end to end. As shown in Fig. 1, the
weighted cross correlation explores different kinds of at-
tention mechanisms, i.e., general attention, residual atten-
tion, and channel attention, to adapt the ofﬂine learned deep
model to online tracking target.

3.1. Siamese Tracker Introduction

The object tracking problem can be formulated as a re-

gression problem by:

min
w

k Aw − y k2

2 +λ k w k2
2,

where matrix A is a set of feature vectors of the training
samples, vector y is the corresponding labels, and k · k2
denotes the ℓ2-norm of a vector. The solution is described
in Eq. (2).

w = (A⊤A + λI)−1A⊤y.

Since the computation of the inverse matrix is computation-
ally costly, it is difﬁcult to use Eq. (2) directly in object
tracking. The above problem can also be solved in the dual
form [4], with the result as in Eq. (3):

(1)

(2)

(3)

w = A⊤α.

From Eq. (3) we can observe that the dual form decouples
feature representation from discriminator learning, and

here α reﬂects the discriminator part. For regression based
tracking algorithms, e.g. KCF [22], the essential problem is
how to learn an estimation of α.

As a contrast, the Siamese Tracker [19,44] learns a func-
tion f (z, z′) to compare an exemplar image z to a candidate
image z′ of the same size. Comparisons with multiple can-
didates can be implemented by a correlation between the
exemplar and a search image with a larger size and obtain a
response map as depicted in Eq. (4), where x indicates the
search image.

f (z, x) = φ(z) ∗ φ(x) + b · ✶.

(4)

From Eq. (4) we can observe that the Siamese tracker
needs to simultaneously perform feature representation and
discriminator learning in one function φ(·). Let φ(z) inter-
pret as the feature vector of the training sample z, and com-
pare to Eq. (3), the discriminator part of Siamese tracker
corresponds to learning an α with unit vector from only one
sample. This interpretation gives an essential exposure on
the limitations of the original Siamese tracker. Moreover,
the joint learning of feature representation and discrimina-
tor also makes the model very easy to be over-ﬁtting.

To overcome the limitations of the Siamese tracker,
CFNet [46] improves SiamFC by using a circulant matrix
online to approximate a solution for α. The computation
load is reduced by the use of circulant matrix but the ap-
proximate solution inevitably brings in a boundary effect
and the aggressive online learning also depresses the gen-
eralization capacity, and the performance of CFNet is no
better than that of SiamFC. In this work, a better Siamese
tracker is obtained by designing a network that decouples
discriminator learning from feature representation learning
with a weighted cross correlation powered by multiple at-
tention mechanisms.

4856

Co(cid:374)(cid:448)Net

Figure 2. An example of feature producing in Siamese network.
The green and blue boxes in the cubic contain feature maps for the
corresponding green and blue windows.

3.2. Weighted Cross Correlation

To overcome the limitations of Siamese tracker,
the
Siamese network is reformulated by the inclusion of a
weighted cross correlation. This weighted correlation layer
is general and can be used in other Siamese networks. The
intuition behind this idea is that not every constituent pro-
vides the same contribution to the cross correlation oper-
ation in the Siamese network. As shown in Fig. 2, obvi-
ously, the object within the blue rectangular region should
be reﬂected more to the cross correlation operation com-
pared with the green rectangular region.

We expand Eq. (4) more precisely and replenish the tar-
get feature maps φ(z) ∈ Rm×n×d, the search image feature
maps φ(x) ∈ Rp×q×d and the response f ∈ Rp′×q′
, where
p > m, q > n, p′ = p − m + 1, q′ = q − n + 1.

fp′,q′ =

φi,j,c(z)φp′+i,q′+j,c(x) + b

(5)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

The contribution of each spatial position φ(z) in Eq. (5)
is not always the same. Thus, we propose the weighted
cross correlation function to distinguish the importance of
each sample as shown in Eq. (6).

fp′,q′ =

γi,j,cφi,j,c(z)φp′+i,q′+j,c(x) + b (6)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

f (z, x) = (γ ⊙ φ(z)) ∗ φ(x) + b · ✶.

(7)

The way to bring γ in Eq. (7) is named as an attention
mechanism and the formulation is called full attention. We
propose to learn this attention from deep network. Heuris-
tically, in visual tracking the center of the image is more
useful than the border because more of the target is likely to
be visible. The weighted cross correlation encodes both the
importance of samples (36 samples in SiameseFC-AlexNet)
and the features from different channels in exemplar image.
While the solution of a suitable parameter γ in Eq. (6) is
very difﬁcult to obtain as it imports too many parameters.
We further decompose the full attention γ into a dual atten-
tion ρ portraying the tracking target and a channel attention

β interpreting feature channels and propose a joint form as
shown in Eq. (8). Apparently, the number of parameters in
the full form is m · n · d, while the parameter number of the
joint form is m · n + d, which is largely reduced and easy to
tune. We execute a comparative experiment in Sec. 4.2.

fp′,q′=

ρi,jβcφi,j,c(z)φp′+i,q′+j,c(x)+b (8)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

3.3. Dual Attention

The dual attention ρ in Eq. (8) is learnt by a deep net-
work. This section concentrates on the training process,
which is also a trend for recent trackers [2, 13], because for
object tracking there is limited information to train a brand-
new deep model online.

One way to capture the attention from training data is
to constrain all data to share a common attention. We then
train the attention ρ with m · n parameters using the initial-
ization of matrix of ones. It is consistent with a common as-
sumption in tracking as similar to the method in [10]. How-
ever, in practical applications, it is too restrictive to con-
strain all training data and the live tracking target to share
a single shared structure. We therefore propose to model
the dual attention as a general attention superimposed by a
residual attention as shown in Eq. (9). The intuition behind
this idea is that any one estimation might not capture both
the common characteristics and distinctions of targets in
different videos while a superposition of estimations might.
The residual attention encodes the global information of the
target and has low computation complexity.

ρ = ¯ρ + ˜ρ

(9)

The general part ¯ρ in Eq. (9) encodes a generality learn-
ing from all training samples, while the residual part ˜ρ de-
scribes the distinctiveness between the live tracking target
and the learnt common model. The adaptation to the spe-
ciﬁc tracking target via the residual attention net can also be
viewed as a discriminator. The general attention ¯ρ we learnt
(see more details in Sec. 4.2) is similar to a Gaussian distri-
bution which accords with the common sense. SRDCF [10]
directly employs a Gaussian distribution but uses a hand-
crafted setting for parameters rather than learning from a
deep network. CFNet [46] also executed an experiment to
set the dual variable at a constant but the approach lacks
adaptation and it is difﬁcult to use circulant matrix to en-
code spatial localization. Overall, with this simple decom-
position we are able to leverage any extent of attentions,
while allowing disparities in values of the parameters, so
that the RASNet tracker gets a better performance than ei-
ther the general attention or a special type attention.

3.4. Channel Attention

A convolutional feature channel often corresponds to a
certain type of visual pattern. Therefore, in certain cir-

4857

ConvNet

Figure 3. Dual attention.
It is an annexation of the general at-
tention and the residual attention responded through an encoding-
decoding net that improves the attention near object boundaries.

cumstance some feature channels are more signiﬁcant than
the others. The channel attention module can be viewed
as the process of selecting semantic attributes for differ-
ent contexts [24]. Our goal is to keep the adaptation abil-
ity of deep network to the appearance variation of the tar-
get. CSRDCF [33] also contains a channel weight in their
tracker, but it is obtained via an optimization problem. In
this work, we propose to learn the channel attention using
a deep network. Channel attention is only involved in the
forward process of live tracking, which contributes a lot to
the tracking efﬁciency. The channel attention net is com-
posed by a dimension reduction layer with reduction ratio
r (set to 4), a ReLU, and then a dimension increasing layer
with a sigmoid activation. Given a set of d channel fea-
tures Z = [z1, z2, ..., zd] with zi ∈ RW ×H , i = 1, 2, ..., d,
the ﬁnal output of the net (denoted as ˜Z = [˜z1, ˜z2, ..., ˜zd]
with ˜zi ∈ RW ×H , i = 1, 2, ..., d) is achieved by executing
channel-wise re-scaling on the input as presented in Eq. (10)
where β is the parameter for channel attention.

˜zi = βi · zi

i = 1, 2, . . . , d

(10)

3.5. Network Architecture

The proposed network is designed by three attention
modules conjuncted by the weighted correlation layer. Gen-
eral attention is directly trained ofﬂine and initialized as ma-
trix of ones, and the residual attention is presented in Fig. 3
where hourglass structure is utilized. Channel attention is
a computational unit that can be constructed for any given
transformation. It contains a dimension reduction layer and
a dimension increasing layer and is activated by Sigmoid.

In the ofﬂine training of Siamese based tracker, the loss
function of a training pair is generally depicted as logistic
function as shown in Eq. (11) where Zi is an exemplar, Xj
is a search image, ∇ is the set of all the shifting positions
on the search image and u describes a sample of the same
size with the exemplar. While the selection of training pair
for Siamese network is subtle since the frames of a video
encode temporal information.

L(Zi, Xj) =

log(1 + exp(−Z[u] · X[u]))

(11)

1
|∇| X
u∈∇

Deﬁne {Xt}v as the instance set and {Zt}v as the exem-
plar set for training on the vth video sequence. Let ℵ be the

#1

#5

#2

#6

#3

#7

#4

#8

Figure 4. Illustration on training pair selection for Siamese net-
work. Eight frames are exhibited to represent frames of a se-
quence. For a typical Siamese network, a training pair is con-
sisted by randomly selected two frames. Thus, (#1, #4) pair is
completely possible to be chosen, which can result in over-ﬁtting.

sample feature space, for ∀Zi, Xj ∈ ℵ, i 6= j, a mini-batch
loss function is proposed in Eq. (12).

Lall = X
i

X
j

L(Zi, Xj) · Ω(i, j)

Ω(i, j) = exp(−

|i − j|
σ

)

(12)

(13)

Here, we impose a weighting function Ω(i, j) indicat-
ing temporal validity. In contrast, SiamFC imposed a step
function as the weighting function. Our loss function en-
courages a close-frame selection and puts less focus on a
far-frame selection to avoid over-ﬁtting brought by the fully
occlusion. As illustrated in Fig. 4, our loss function lays
more emphasis on a selection of pair (#3, #4) and pair (#5,
#6) than the selection of pair (#1, #4).

In the stage of network learning, a total number of 3
million pairs are used. For a target frame, 200 pairs are
sampled. We employ a strategy of random selection for the
video sequence, the target frame, and the pair selection. A
training pair is constituted by an exemplar and an instance,
and response ground-truth. The exemplar and instance are
ﬁrst transmitted to their separate branch of Siamese net to
obtain feature map. The exemplar feature map simultane-
ously goes into the residual attention net and the channel
attention net. The channel attention describes a priority
among channels, by which the exemplar feature is channel-
wise multiplied. The channel attention feature is convolved
with the feature extracted from the instance by the dual
attention. This operation is implemented by the weighted
cross correlation layer and generates a response map. The
loss layer is functioned according to Eq. (12).

In the stage of live tracking, the inference of attention
mechanisms is only practised on the ﬁrst frame, which con-
tributes to the high running speed of the proposed tracker.
This ﬁrst frame adaptation reforms the weight distribution
and is a target-level adaptation. Pairs making by the pre-
vious target and three scaled current search regions are re-
ceived by the RASNet, and three response maps are gener-
ated. The target scale and target position are obtained by
maximizing these responses.

4858

4. Experiments

We ﬁrst provide the implementation details, and then
carry out ablative studies and analyse the impact of each
component of RASNet tracker for both the ofﬂine train-
ing process and the online tracking performance. Exten-
sive experiments are conducted to evaluate the RASNet
tracker against plenty of state-of-the-art trackers on OTB-
2013, OTB-2015, VOT2015, and VOT2017 benchmarks.

4.1. Implementation Details

Training Data Preparation. To increase the generaliza-
tion capability and discriminative power of our feature
representation, and in the meantime avoid over-ﬁtting to
the scarce tracking data, our RASNet is pre-trained of-
ﬂine from scratch on the video object detection dataset of
the ImageNet Large Scale Visual Recognition Challenge
(ILSVRC15) [39]. This dataset includes more than 4000 se-
quences with about 1.3 million labelled frames. It is widely
utilized in tracking methods recently as it depicts scenes and
objects distinct to those in the traditional tracking bench-
marks. In each video snippet of an object, we collect each
pair of frames within the nearest 100 frames.
Learning setting. We apply stochastic gradient descent
(SGD) with momentum of 0.9 to train the network from
scratch and set the weight decay to 0.0005. The learning
rate exponentially decays from 10−2 to 10−5. The model
is trained for 50 epochs with a mini-batch size of 32. The
weighting parameter σ in Eq. (13) is set to 100.
Tracking setting.
to the scale varia-
current
tions, we
the
search image with scale factors {qs|q = 1.03, s =
S−1
(cid:4)− S−1
2 (cid:5) , S = 3}. The current target
scale is determined by a linear interpolation with a factor
of 0.56 on the newly predicted scale for a smooth tracking.
The proposed tracker is implemented on MATLAB with
MatConvNet [47] and all the experiments are executed on
a workstation with Intel(R) Xeon(R) CPU E5-2630 v4 @
2.20GHz and a NVIDIA TITAN Xp GPU.

2 (cid:5) , (cid:4)− S−3

search on three

2 (cid:5) , ..., (cid:4)

scales of

To adapt

4.2. Ablation Studies

A study on the training procedure of the Siamese net-
work is ﬁrst conducted on ILSVRC15. SiamFC [2] is in-
tended as the baseline in this section, and is re-trained by
using the released code with default parameter settings.

The training and validation curves of objective vs. epoch
are reported in Fig. 5(a) and it can be observed that the vali-
dation objective begins to rise at an early stage (∼15 epoch)
of the training procedure and there is a big gap between
the training objective and validation objective. Three other
lightweight SiamFC networks (#channels×0.5, ×0.25,
×0.125) are also designed, but similar results are obtained.
The main cause is the twining between the feature rep-
resentation and discriminator learning in one network for

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

10

20

30

40

50

10

20

30

40

50

epoch

epoch

(a) SiamFC [2] family

(b) RASNet family

Figure 5. Training on ILSVRC15 VID. The bold curves denote
training objective and the thin curves denote the validation objec-
(a): Training and validation objectives of SiamFC and its
tive.
lightweight varieties.
(b): Training and validation objectives of
GenAtt tracker, DualAtt tracker, ChanAtt tracker, RASNet tracker
compared with SiamFC.

(a) General attention learning

(b) Dual attention results

Figure 6. Visualizations on general attention learning and dual at-
tention results

SiamFC. In contrast, we bring in the attention mechanism
and the weighted correlation layer to decouple representa-
tion learning from discriminator learning.

To highlight each component of RASNet, we examine
the general attention initialized by a matrix of ones with the
size of 6 × 6 and ﬁnd the weights gradually agglomerate to
the center of the matrix as learning proceeds as visualized in
Fig. 6(a), the distribution of which is similar to a Gaussian
distribution where center position shows more importance
than the peripheral zone. While the validation objective of
the general attention (GenAtt in Fig. 5(b)) ameliorates com-
pared with SiamFC but still tends to increase. We analyse
that the reason for such observation is the discrimination
capacity is also associated with the speciﬁc tracking target.
Therefore, we introduce the residual attention to rein-
force the general attention, named as DualAtt model (sev-
eral examples shown in Fig. 6(b)). Compared with GenAtt,
by training with the dual attention, the objective is much
more reasonable, as the network learns more representa-
tive features and has less bias towards the training data.

4859

OTB-2013  Precision plots of OPE

OTB-2013  Success plots of OPE

OTB-2013  Success plots of OPE

OTB-2015  Success plots of OPE

0

0

5

10

20

15

25
Location error threshold

30

35

40

45

50

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(a) OPE on OTB-2013

(b) OPE on OTB-2015

OTB-2015  Success plots of TRE

OTB-2015  Success plots of SRE

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

e
t
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

i

i

n
o
s
c
e
r
P

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

(a) Precision plot

(b) Success plot

Figure 7. Precision and success plots using OPE on OTB-2013.
The performance of RASNet is improved gradually with the addi-
tion of general attention, residual attention, and channel attention.

Furthermore, we construct a ChanAtt model with only the
branch of channel attention equipped, the validation objec-
tive of which converges as well. Lastly, the practical RAS-
Net achieves the best validation accuracy due to the separa-
tion of feature representation from discriminator learning.

Finally, an estimate of each component contribution to
the overall tracking performance is made. Four ablative
trackers (GenAtt, DualAtt, ChanAtt, RASNet) as well as the
baseline tracker SiamFC are evaluated by the AUC score
of success plot on the benchmark of OTB-2013 as shown
in Fig. 7. Compared with SiamFC, GenAtt only adds a
constant general attention with 36 ﬂoating point parame-
ters, while the performance boosts 0.4% measured by the
AUC score as shown in Fig. 7. DualAtt model dramatically
improves the performance by an AUC score of 4.9% com-
pared with GenAtt due to the consideration of an adaptive
discrimination. On the other side, ChanAtt advances the
performance by almost 4% against the baseline. If the chan-
nel attention is reduced to a binary version, it can be viewed
as a feature selector as employed in [8, 49]. The overall
RASNet achieves a gain of 6.3% in AUC score in compar-
ison with SiamFC, which demonstrates the effectiveness of
the attention mechanism in practical tracking.

4.3. Comparison with the State of the Arts

Four benchmarks including OTB-2013, OTB-2015,
VOT2015, and VOT2017 are adopted to demonstrate the
performance of our tracker against a number of state-of-
the-arts. All results in this section are obtained by using
the OTB toolkit [52] and VOT toolkit [28].
Experiments on OTB-2013 and OTB-2015

OTB-2013 [51] is a widely used public tracking bench-
mark consisting by 50 fully annotated sequences. OTB-
2015 dataset [52] expands the sequences in OTB-2013 to
include 100 target objects in the tracking benchmark.

We evaluate the proposed algorithms with comparisons
to numerous state-of-the-art
trackers including CREST
[42], CFNet [46], GOTURN [21], SiamFC [2], SINT [44],
ACFN [5], CSR-DCF [33], RTT [7], HCF [35], SRDCF
[10], KCF [22], and DSST [9]. Note that CFNet, SiamFC,

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

4860

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(c) TRE on OTB-2015

(d) SRE on OTB-2015

Figure 8. Success plots showing a comparison of our trackers with
state-of-the-art trackers on the OTB-2013 and OTB-2015 dataset.

and SINT are latest Siamese based trackers, and CSR-DCF,
RTT and ACFN employ attention mechanisms, and GO-
TURN and SiamFC are recent fast deep trackers. All the
trackers were initialized with ground-truth object state in
the ﬁrst frame and average success plots were reported.

Fig. 8 exhibits the success plot in AUC and running
speed in frames per second (fps) on OTB-2013 and OTB-
2015. On the results of OTB-2013, CREST tracker per-
forms the best against the other trackers at a speed of 2fps.
The proposed RASNet tracker achieves an AUC score of
67.0% at real-time speed (83fps). ACFN obtains an AUC
score of 60.7%.
It adopts an attention mechanism to se-
lect a tracker and is required to maintain 260 trackers at
the same time, which makes it less efﬁcient. RTT and
CSR-DCF achieve AUC scores of 60.7% and 59.9%, re-
spectively. They both utilize saliency to regularize correla-
tion ﬁlters with hand-crafted features. Although recent fast
trackers GOTURN runs two times faster than ours, the per-
formance drops by more than 25%.

On the results of OTB-2015, our proposed method, RAS-
Net, occupies the best one, outperforming the second best
tracker CREST by a gain of 1.9% in AUC score, and at the
same time our running speed is an order of magnitude faster
than CREST. Both CREST and ours employed residual
learning, but the aggressive online learning of CREST hin-
ders the running speed. Among the trackers using Siamese
network, ours outperforms SINT with a relative improve-
ment of 5% in AUC score. SiamFC is a seminal tracking
framework, but the performance is still left behind by the
recent state-of-the-art methods. Even though CFNet adds a

0.4

0.3

0.2

0.1

0

RASNet

RASNet

SiamFC

61

56

51

46

41

36

31

26

21

16

11

6

1

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 9. An illustration of the expected average overlap plot on
the VOT2015 challenge.

Figure 10. An illustration of the expected average overlap plot on
the VOT2017 challenge. The gray horizontal line indicates the
VOT2017 state-of-the-art bound.

correlation layer based on SiamFC, it obtains a limited per-
formance gain. Incorporating our attention mechanisms to
the RASNet tracker elevates us to an AUC score of 64.2%,
leading to a consistent gain of 6% and 7.5% in AUC socre,
compared to SiamFC and CFNet.

Besides the one-pass evaluation(OPE), temporal robust-
ness evaluation (TRE) and spatial robustness evaluation
(SRE) are reported to examine the network sensitivity to the
initialization temporally and spatially. Our RASNet tracker
obtains the best TRE and SRE AUCs, which demonstrates
that our method achieves robustness to different temporal
and spatial initializations.
Experiments on VOT2015 and VOT2017

In this section the latest version of the Visual Object
Tracking toolkit (vot2017-challenge) is used. The toolkit
applies a reset-based methodology. Whenever a failure
(zero overlap with the ground truth) is detected, the tracker
is re-initialized ﬁve frames after the failure. The perfor-
mance is measured in terms of expected average overlap
(EAO), which quantitatively reﬂects both robustness and
accuracy. In addition, VOT2017 also newly introduced a
real-time experiment. We report all these metrics com-
pared with a number of the latest state-of-the-art trackers
on VOT2015 [15] and VOT2017 [28].

The EAO curve evaluated on VOT2015 is presented in
Fig. 9 and 62 other state-of-the-art trackers are compared.
The results of the proposed tracker are on par with that of
the state-of-the-art algorithms and is the second best with a
EAO score of 0.327. The best tracker, MDNet, employs dif-
ferent tracking benchmarks for training, while our tracker
does not employ any tracking benchmark in ofﬂine training.
Furthermore, our tracker is 80× faster than MDNet.

For the assessment on VOT2017, Fig. 10 reports the re-
sults of ours against 51 other state-of-the-art trackers with
respect to the EAO score. RASNet ranked fourth. Among
the three trackers that perform better than ours, CFCF [18]
and CFWCR [20] apply continuous convolution operator as
the baseline approach. The top performer LSART [43] com-
bines kernelized ridge regression with CNN. Fig. 10 also
reveals the EAO values in the real-time experiment denoted
by red points. Our tracker obviously is the top-performer
followed by SiamDCF [50] among the top ten best trackers
with respect to baseline EAO.

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 11. The EAO scores for the real-time experiment on
VOT2017 challenge.

We further report the EAO scores for the real-time exper-
iment as shown in Fig. 11. The realtime experiment simu-
lates a situation where a tracker processes images as if pro-
vided by a continuously running sensor [28]. We ranked
top one on this evaluation as shown in Fig. 11, which veri-
ﬁes that our track achieves a fast processing speed as well as
excellent performance and shows a potential to the practical
tracking application.

5. Conclusions

This paper proposes a new deep architecture named
RASNet, especially designed for online visual tracking. It
incorporates diverse attention mechanisms embedded in an
end-to-end Siamese network. The attention mechanisms
consist of a general attention ofﬂine trained on labeled VID,
a residual attention adapting the ofﬂine trained model to on-
line tracking by encoding information about the speciﬁc tar-
get, and a channel attention reﬂecting channel-wise quality
of features. RASNet is evaluated on OTB-2013, OTB-2015,
VOT2015 and VOT2017. Signiﬁcant improvements of the
RASNet tracker over the state of the arts are obtained. Fur-
thermore, the proposed RASNet tracker runs at 83 frames
per second, which is far beyond real-time.

6. Acknowledgements

This work is supported by the Natural Science Founda-
tion of China (Grant No. 61672519, 61751212, 61472421,
61602478, 61502026), the NSFC general technology col-
laborative Fund for basic research (Grant No. U1636218),
the Key Research Program of Frontier Sciences, CAS,
Grant No. QYZDJ-SSW-JSC040, and the CAS External
cooperation key project.

0.4

0.3

0.2

0.1

0

0.25

0.2

0.15

0.1

0.05

0

4861

References

[1] A. Agarwala, A. Hertzmann, D. H. Salesin, and S. M.
Seitz. Keyframe-based tracking for rotoscoping and anima-
tion. ACM Transactions on Graphics, 23(3):584–591, Aug.
2004. 1

[2] L. Bertinetto, J. Valmadre, J. F. Henriques, A. Vedaldi, and
P. H. Torr. Fully-convolutional siamese networks for ob-
ject tracking. In European Conference on Computer Vision,
pages 850–865, 2016. 1, 2, 4, 6, 7

[3] D. Bolme, J. Beveridge, B. Draper, and Y. Lui. Visual ob-
ject tracking using adaptive correlation ﬁlters. In IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2544–2550, 2010. 1

[4] S. Boyd and L. Vandenberghe. Convex Optimization. Cam-

bridge University Press, 2004. 3

[5] J. Choi, H. J. Chang, S. Yun, T. Fischer, and Y. Demiris. At-
tentional correlation ﬁlter network for adaptive visual track-
In IEEE Conference on Computer Vision and Pattern
ing.
Recognition, pages 4807–4816, 2017. 2, 7

[6] Q. Chu, W. Ouyang, H. Li, X. Wang, B. Liu, and N. Yu.
Online multi-object tracking using cnn-based single object
tracker with spatial-temporal attention mechanism. In IEEE
International Conference on Computer Vision, Oct 2017. 2
[7] Z. Cui, S. Xiao, J. Feng, and S. Yan. Recurrently target-
attending tracking. In IEEE Conference on Computer Vision
and Pattern Recognition, June 2016. 2, 7

[8] M. Danelljan, G. Bhat, F. Shahbaz Khan, and M. Felsberg.
Eco: Efﬁcient convolution operators for tracking. In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 6638–6642, 2017. 1, 2, 7

[9] M. Danelljan, G. H¨ager, F. Khan, and M. Felsberg. Accu-
In British

rate scale estimation for robust visual tracking.
Machine Vision Conference, 2014. 7

[10] M. Danelljan, G. H¨ager, F. S. Khan, and M. Felsberg. Adap-
tive decontamination of the training set: A uniﬁed formula-
tion for discriminative visual tracking. In IEEE Conference
on Computer Vision and Pattern Recognition, pages 1430–
1438, 2016. 4, 7

[11] M. Danelljan, G. Hager, F. Shahbaz Khan, and M. Fels-
berg. Convolutional features for correlation ﬁlter based vi-
In IEEE International Conference on Com-
sual tracking.
puter Vision Workshops, pages 58–66, 2015. 2

[12] M. Danelljan, A. Robinson, F. Khan, and M. Felsberg. Be-
yond correlation ﬁlters: Learning continuous convolution
In European Conference on
operators for visual tracking.
Computer Vision, 2016. 1, 2

[13] W. Du, Y. Wang, and Y. Qiao. Rpan: An end-to-end recur-
rent pose-attention network for action recognition in videos.
In IEEE International Conference on Computer Vision, Oct
2017. 2, 4

[14] A. Emami, F. Dadgostar, A. Bigdeli, and B. Lovell. Role
of spatiotemporal oriented energy features for robust visual
tracking in video surveillance. In IEEE International Con-
ference on Advanced Video and Signal-Based Surveillance,
pages 349–354, 2012. 1

[15] M. K. et al. The visual object tracking vot2015 challenge re-
sults. In IEEE International Conference on Computer Vision
Workshops, pages 564–586, 2015. 1, 2, 8

[16] M. K. et al. The visual object tracking vot2016 challenge
results. In European Conference on Computer Vision Work-
shops, pages 777–823, 2016. 1, 2

[17] J. Fan, Y. Wu, and S. Dai. Discriminative spatial attention
for robust tracking. In European Conference on Computer
Vision, pages 480–493, 2010. 2

[18] E. Gundogdu and A. A. Alatan. Good features to correlate
for visual tracking. arXiv preprint arXiv:1704.06326, 2017.
8

[19] Q. Guo, W. Feng, C. Zhou, R. Huang, L. Wan, and S. Wang.
Learning dynamic siamese network for visual object track-
ing. In IEEE International Conference on Computer Vision,
Oct 2017. 2, 3

[20] Z. He, Y. Fan, J. Zhuang, Y. Dong, and H. Bai. Correla-
tion ﬁlters with weighted convolution responses. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1992–2000, 2017. 8

[21] D. Held, S. Thrun, and S. Savarese. Learning to track at 100
fps with deep regression networks. In European Conference
Computer Vision, pages 749–765, 2016. 1, 2, 7

[22] J. Henriques, R. Caseiro, P. Martins, and J. Batista. High-
IEEE
speed tracking with kernelized correlation ﬁlters.
Transactions on Pattern Analysis and Machine Intelligence,
37(3):583–596, 2015. 1, 3, 7

[23] S. Hong, T. You, S. Kwak, and B. Han. Online tracking by
learning discriminative saliency map with convolutional neu-
ral network. In International Conference on Machine Learn-
ing, pages 1–10, 2015. 2

[24] J. Hu, L. Shen, and G. Sun. Squeeze-and-excitation net-
works. arXiv preprint arXiv:1709.01507, 2017. 2, 5
[25] M. Isard and A. Blake. Condensation—conditional density
International Journal of

propagation for visual tracking.
Computer Vision, 29(1):5–28, Aug 1998. 2

[26] M.

Jaderberg, K. Simonyan, A. Zisserman,

and
In Ad-
k. kavukcuoglu.
vances in Neural Information Processing Systems, pages
2017–2025, 2015. 2

Spatial transformer networks.

[27] H. Kiani Galoogahi, A. Fagg, and S. Lucey. Learning
background-aware correlation ﬁlters for visual tracking. In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 1135–1143, 2017. 1

[28] M. Kristan, A. Leonardis,

J. Matas, M. Felsberg,
R. Pﬂugfelder, L. Cehovin Zajc, T. Vojir, G. Hager,
A. Lukezic, A. Eldesokey, and G. Fernandez. The visual
object tracking vot2017 challenge results. In The IEEE Inter-
national Conference on Computer Vision (ICCV), Oct 2017.
1, 7, 8

[29] H. Li, Y. Li, and F. Porikli. Deeptrack: Learning discrimina-
tive feature representations online for robust visual tracking.
IEEE Transactions on Image Processing, 25(4):1834–1848,
2016. 2

[30] X. Li, W. Hu, C. Shen, Z. Zhang, A. Dick, and A. V. D. Hen-
gel. A survey of appearance models in visual object tracking.
ACM Transactions on Intelligent Systems and Technology,
4(4):58:1–58:48, 2013. 1, 2

4862

[47] A. Vedaldi and K. Lenc. Matconvnet: Convolutional neural
networks for matlab. In ACM International Conference on
Multimedia, pages 689–692. ACM, 2015. 6

[48] F. Wang, M. Jiang, C. Qian, S. Yang, C. Li, H. Zhang,
X. Wang, and X. Tang. Residual attention network for image
classiﬁcation. In IEEE Conference on Computer Vision and
Pattern Recognition, pages 3156–3164, 2017. 2

[49] L. Wang, W. Ouyang, X. Wang, and H. Lu. Visual tracking
In IEEE International
with fully convolutional networks.
Conference on Computer Vision, pages 3119–3127, 2015. 1,
2, 7

[50] Q. Wang, J. Gao, J. Xing, M. Zhang, and W. Hu. Dcfnet:
Discriminant correlation ﬁlters network for visual tracking.
In arXiv preprint arXiv:1704.04057, 2017. 8

[51] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In IEEE Conference on Computer Vision and

benchmark.
Pattern Recognition, pages 2411–2418, 2013. 1, 2, 7
[52] Y. Wu, J. Lim, and M.-H. Yang. Object tracking benchmark.
IEEE Transactions on Pattern Analysis and Machine Intelli-
gence, 37(9):1834–1848, 2015. 1, 2, 7

[53] A. Yilmaz, O. Javed, and M. Shah. Object tracking: A sur-
vey. ACM Computing Surverys, 38(4):1–45, 2006. 1, 2
[54] M. Zhang, J. Xing, J. Gao, and W. Hu. Robust visual tracking
using joint scale-spatial correlation ﬁlters. In IEEE Interna-
tional Conference on Image Processing, pages 1468–1472,
2015. 1

[55] M. Zhang, J. Xing, J. Gao, X. Shi, Q. Wang, and W. Hu.
Joint scale-spatial correlation tracking with adaptive rotation
estimation. In IEEE International Conference on Computer
Vision Workshops, pages 32–40, 2015. 1

[31] L. Liu, J. Xing, and H. Ai. Multi-view vehicle detection and
tracking in crossroads. In Proceedings of the Asian Confer-
ence on Pattern Recognition, pages 608–612, 2011. 1
[32] L. Liu, J. Xing, H. Ai, and X. Ruan. Hand posture recog-
nition using ﬁnger geometric feature. In IEEE International
Conference on Pattern Recognition, pages 565–568, 2012. 1
[33] A. Lukezic, T. Vojir, L. Cehovin Zajc, J. Matas, and M. Kris-
tan. Discriminative correlation ﬁlter with channel and spatial
reliability. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2017. 1, 2, 5, 7

[34] W. Luo, J. Xing, A. Milan, X. Zhang, W. Liu, X. Zhao, and
T. Kim. Multiple object tracking: A literature review. arXiv
preprint arXiv:1409.7618, 2014. 2

[35] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchical
In IEEE Inter-
convolutional features for visual tracking.
national Conference on Computer Vision, pages 3074–3082,
2015. 2, 7

[36] H. Nam and B. Han. Learning multi-domain convolutional
In IEEE Conference
neural networks for visual tracking.
on Computer Vision and Pattern Recognition, pages 4293–
4302, 2016. 1, 2

[37] A. Newell, K. Yang, and J. Deng. Stacked hourglass net-
works for human pose estimation. In European Conference
on Computer Vision, 2016. 1

[38] B. A. Olshausen, C. H. Anderson, and D. C. Van Essen. A
neurobiological model of visual attention and invariant pat-
tern recognition based on dynamic routing of information.
Journal of Neuroscience, 13(11):4700–4719, 1993. 2
[39] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein,
A. C. Berg, and L. Fei-Fei.
ImageNet Large Scale Visual
Recognition Challenge. International Journal of Computer
Vision, 115(3):211–252, 2015. 6

[40] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 2

[41] A. W. Smeulders, D. Chu, R. Cucchiara, S. Calderara, A. De-
hghan, and M. Shah. Visual tracking: An experimental sur-
IEEE Transactions on Pattern Analysis and Machine
vey.
Intelligence, 36(7):1442–1468, 2014. 1, 2

[42] Y. Song, C. Ma, L. Gong, J. Zhang, R. W. H. Lau, and M.-
H. Yang. Crest: Convolutional residual learning for visual
In IEEE International Conference on Computer
tracking.
Vision, Oct 2017. 7

[43] C. Sun, H. Lu, and M.-H. Yang.
aware regressions for visual
arXiv:1706.07457, 2017. 1, 8

tracking.

Learning spatial-
arXiv preprint

[44] R. Tao, E. Gavves, and A. W. M. Smeulders. Siamese in-
stance search for tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2016. 1, 2, 3, 7

[45] Z. Teng, J. Xing, Q. Wang, C. Lang, S. Feng, and Y. Jin.
Robust object tracking based on temporal and spatial deep
networks. In IEEE International Conference on Computer
Vision, Oct 2017. 2

[46] J. Valmadre, L. Bertinetto, J. F. Henriques, A. Vedaldi, and
P. H. Torr. End-to-end representation learning for correla-
tion ﬁlter based tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2017. 2, 3, 4, 7

4863

Learning Attentions: Residual Attentional Siamese Network
for High Performance Online Visual Tracking
Qiang Wang1,3∗, Zhu Teng2∗, Junliang Xing3†, Jin Gao3, Weiming Hu1,3, Stephen Maybank4
1University of Chinese Academy of Sciences, Beijing, China
2School of Computer and Information Technology, Beijing Jiaotong University, Beijing, China
3National Laboratory of Pattern Recognition, Institute of Automation, Chinese Academy of Sciences, Beijing, China
4Department of Computer Science and Information Systems, Birkbeck College, University of London, UK.
{qiang.wang, jlxing, jin.gao, wmhu}@nlpr.ia.ac.cn zteng@bjtu.edu.cn sjmaybank@dcs.bbk.ac.uk

Abstract

Ofﬂine training for object tracking has recently shown
great potentials in balancing tracking accuracy and speed.
However, it is still difﬁcult to adapt an ofﬂine trained model
to a target tracked online. This work presents a Residual At-
tentional Siamese Network (RASNet) for high performance
object tracking. The RASNet model reformulates the corre-
lation ﬁlter within a Siamese tracking framework, and intro-
duces different kinds of the attention mechanisms to adapt
the model without updating the model online. In particular,
by exploiting the ofﬂine trained general attention, the tar-
get adapted residual attention, and the channel favored fea-
ture attention, the RASNet not only mitigates the over-ﬁtting
problem in deep network training, but also enhances its dis-
criminative capacity and adaptability due to the separation
of representation learning and discriminator learning. The
proposed deep architecture is trained from end to end and
takes full advantage of the rich spatial temporal informa-
tion to achieve robust visual tracking. Experimental results
on two latest benchmarks, OTB-2015 and VOT2017, show
that the RASNet tracker has the state-of-the-art tracking ac-
curacy while runs at more than 80 frames per second.

1. Introduction

Online visual tracking of an arbitrary temporally chang-
ing object, speciﬁed at the ﬁrst frame, is an extensively stud-
ied problem in computer vision [30, 41, 53]. It still remains
very challenging due to practical factors like scale varia-
tion, fast motion, occlusions, deformation, and background
clutter [52]. High performance visual tracking algorithms
with good tracking accuracy and efﬁciency are required by
many applications like visual surveillance [14], trafﬁc mon-
itoring [31], human-computer interaction [32], and video
editing [1], to name a few.

One of the most successful tracking frameworks is Cor-
relation Filter (CF) [3,8,22,27,33,54,55]. Algorithms based
on correlation ﬁltering have demonstrated superior compu-

∗Equal contribution.
†Corresponding author.

tational efﬁciency and fairly good tracking accuracy. One
notable example is the MOSSE tracker [3] with the running
speed of about 700 frames per second. The main reasons for
its high running speed are the replacement of the exhausted
convolutions with element-wise multiplications using Fast
Fourier Transform, as well as the adoption of relatively
simple image features. For complex tracking scenarios,
however, the performance of CF trackers with hand-crafted
features often drops considerably. Recently, deep learning
models [8,36,43,49], have become an essential oracle to im-
prove the tracking accuracy, mainly due to their large model
capacities and strong feature learning abilities. By exten-
sively training large deep networks on large datasets ofﬂine
and aggressively learning the target sequence online, those
trackers have obtained record-breaking results on all recent
benchmarks [51, 52] and challenges [15, 16, 28].

Despite all these signiﬁcant progress, most deep learn-
ing based tracking methods still cannot attain consummate
results. One issue is that the deep feature learned ofﬂine
sometimes cannot adapt well to speciﬁc target during track-
ing.
If the deep feature extractor is learnt online then it
tends to overﬁt the target. Moreover, the online learning
of the feature extractor, its updating process, and even its
inference process, are all computationally expensive. This
prevents a tracking algorithm from performing all these op-
erations simultaneously at each frame [2, 12, 21, 44]. Moti-
vated by these considerations, we develop an effective and
efﬁcient deep learning based tracking approach to produce
high performance visual tracking. To this end, we adapt
the model architecture and training objective for more ef-
fective feature learning, and also introduce different kinds
of attention mechanisms into the tracking model learning to
produce more adaptive discriminative learning.

In particular, a new end-to-end deep architecture, named
Residual Attentional Siamese Network (RASNet), is de-
signed to learn both effective feature representation and de-
cision discriminators. The backbone of the attention mod-
ule in the RASNet is an Hourglass-like Convolutional Neu-
[37] to learn contextualized
ral Network (CNN) model
and multi-scaled feature representation. The residual learn-
ing within the RASNet further helps to encode more adap-

4854

tive representation of the object from multiple levels and
a weighted cross correlation layer is proposed to learn the
Siamese structure. The proposed RASNet extensively ex-
plores diverse attentional mechanisms to adapt the ofﬂine
learned feature representations to a speciﬁc tracking tar-
get. To guarantee high tracking efﬁciency, all these learning
processes are performed during the ofﬂine training stage.
Extensive analyses and evaluations on the latest tracking
benchmarks [51, 52] and challenges [15, 16] verify the ef-
fectiveness and efﬁciency of the proposed model.

To summarize, the main contributions of this work are

three-fold.

• An end-to-end deep architecture speciﬁcally designed
for the object tracking problem is proposed. The deep
architecture inherits the merits from many recent mod-
els like Hourglass structure, residual skip connection,
as well as our newly proposed weighted cross corre-
lations to produce effective deep feature learning for
visual tracking.

• Different kinds of attention mechanisms are explored
within the RASNet. These mechanisms include the
General Attention, Residual Attention, and Channel
Attention. The ofﬂine learned feature representations
are thus adapted to the online tracking target, to greatly
alleviate over-ﬁtting.

• Very effective and efﬁcient deep learning based tracker
is developed. It performs favorably against a number
of state-of-the-art trackers with the running speed over
80 frames per seconds. To facilitate further studies,
our source code and trained models are available at:
https://github.com/foolwood/RASNet.

2. Related Works

The most relevant tracking methods and techniques are
discussed. In particular, deep feature based tracking meth-
ods, end-to-end network learning based tracking methods,
as well as attention mechanisms are examined. The reader
is referred to more thorough reviews on object tracking sur-
vey [30, 34, 53] and benchmark evaluations [41, 52].

Deep feature based tracking. Recently deep features have
been widely employed to boost performance in tracking due
to its superior representation power. Some trackers combine
deep features with correlation ﬁlters. For example, CF2 [35]
and DeepSRDCF [11] concatenated features from different
layers of a pretrained CNN such as VGG [40] into corre-
lation ﬁlter. CCOT [12] and ECO [8] constructed trackers
based on the continuous convolution ﬁlters. Tracking can
also be regarded as a classiﬁcation or regression problem.
Accordingly, another approach to introduce deep features in
tracking borrows from classiﬁcation or regression network.
For instance, CNN-SVM tracker [23] utilized CNN model
with saliency map and SVM. FCNT [49] proposed feature

selection in a regression framework. DeepTrack [29] casted
tracking as a classiﬁcation problem and employed a candi-
date pool of multiple CNN as a data-driven model of dif-
ferent instances of the target object. The TSN tracker [45]
proposed a CNN network encoding temporal and spatial in-
formation in the context of classiﬁcation. The advantage of
these methods is they use the outstanding representations of
deep networks. However, these online only approaches do
not train the method on the ofﬂine dataset. This limits the
richness of the model, and the tracking speed is reduced if
online training or updating of the deep network are required.

End-to-End learning based tracking. To obtain the bene-
ﬁts of end-to-end learning, researchers train deep models on
videos ofﬂine and evaluate the model on the target tracking
benchmark for online tracking [2, 19, 21, 36, 44]. The key
points are how to formulate the tracking problem and how
to design the ofﬂine training loss function. The SINT [44]
formulated visual tracking as a veriﬁcation problem and
trained a Siamese architecture to learn a metric for on-
line target matching. SiamFC [2] brought cross correlation
into a fully-convolutional Siamese network. The GOTURN
[21] concatenated pairs of consecutive frames and learnt
the target tracking states by regression. The MDNet [36]
treated tracking as a classiﬁcation problem, and learnt an
ofﬂine deep feature extractor and then online updated the
classiﬁer by adding some learnable fully-connected layers
to perform online tracking within the Particle Filter frame-
work [25]. CFNet [46] interpreted the correlation ﬁlter
learner as a differentiable layer in a deep neural network.
These approaches advance the development of end-to-end
deep tracking models and achieve very good results on re-
cent benchmarks [51,52] and challenges [15,16]. However,
over-ﬁtting might occur when training their models using
similar benchmarks.

Attention mechanisms. Attention mechanisms were ﬁrst
used in neuroscience area [38]. They have spread to other
areas such as image classiﬁcation [24, 26, 48], pose esti-
mation [13], multi-object tracking [6], etc. For short-time
tracking, DAVT [17] used a discriminative spatial attention
for object tracking and afterwards ACFN [5] developed an
attentional mechanism that chose a subset of the associated
correlation ﬁlters for tracking. On the other hand, RTT [7]
drew attention to possible targets by a multidirectional RNN
to generate saliency and CSR-DCF [33] constructed a fore-
ground spatial reliability map by using color histograms to
constrain correlation ﬁlter learning. In contrast to these at-
tention mechanisms, it is proposed to learn the attention
through an end-to-end deep network. This attention mech-
anism consists of a general attention learning from ofﬂine
training dataset and a residual attention estimated by a resid-
ual net, which incorporates beneﬁts from both ofﬂine train-
ing dataset and the online target of live tracking.

4855

e
r
u
t
a
e
F

e
r
u
t
a
e
F

Co(cid:374)(cid:448)Net

Rtsidual

 Attente

ρ~ 

Gtetral

 Attente

ρ  

Chaeetl

 Attente

β 

g
(cid:374)

i
l

o
o
p

 
l

a
(cid:271)
o
G

l

(cid:1005)
(cid:272)
f

l

u
e
r

(cid:1006)
(cid:272)
f

i

d
o
(cid:373)
g
S

i

WXCtrr

Co(cid:374)(cid:448)Net

 (cid:272)ha(cid:374)(cid:374)el-(cid:449)ise s(cid:272)ale

ele(cid:373)e(cid:374)t-(cid:449)ise su(cid:373)(cid:373)atio(cid:374)

Figure 1. Pipeline of RASNet. The RASNet is constituted by a shared feature extractor, attention mechanisms (general attention, residual
attention, channel attention), and the weighted cross correlation layer (WXCorr). When a pair of an exemplar and a search image ﬂows into
the net, feature maps are produced through the feature extractor. Based on the exemplar features, three types of attentions are extracted.
Exemplar and search features, along with the attentions as weights are inputed to WXCorr and ﬁnally transformed to a response map.

3. Residual Attentional Siamese Network

To produce effective and efﬁcient visual tracking, a novel
deep architecture named Residual Attentional Siamese Net-
work (RASNet) is proposed. Fig. 1 shows the pipeline
of the proposed RASNet tracker.
In contrast to previous
deep architectures for tracking, the RASNet reformulates
the Siamese tracking from a regression prospective, and
propose a weighted cross correlation to learn the whole
Siamese model from end to end. As shown in Fig. 1, the
weighted cross correlation explores different kinds of at-
tention mechanisms, i.e., general attention, residual atten-
tion, and channel attention, to adapt the ofﬂine learned deep
model to online tracking target.

3.1. Siamese Tracker Introduction

The object tracking problem can be formulated as a re-

gression problem by:

min
w

k Aw − y k2

2 +λ k w k2
2,

where matrix A is a set of feature vectors of the training
samples, vector y is the corresponding labels, and k · k2
denotes the ℓ2-norm of a vector. The solution is described
in Eq. (2).

w = (A⊤A + λI)−1A⊤y.

Since the computation of the inverse matrix is computation-
ally costly, it is difﬁcult to use Eq. (2) directly in object
tracking. The above problem can also be solved in the dual
form [4], with the result as in Eq. (3):

(1)

(2)

(3)

w = A⊤α.

From Eq. (3) we can observe that the dual form decouples
feature representation from discriminator learning, and

here α reﬂects the discriminator part. For regression based
tracking algorithms, e.g. KCF [22], the essential problem is
how to learn an estimation of α.

As a contrast, the Siamese Tracker [19,44] learns a func-
tion f (z, z′) to compare an exemplar image z to a candidate
image z′ of the same size. Comparisons with multiple can-
didates can be implemented by a correlation between the
exemplar and a search image with a larger size and obtain a
response map as depicted in Eq. (4), where x indicates the
search image.

f (z, x) = φ(z) ∗ φ(x) + b · ✶.

(4)

From Eq. (4) we can observe that the Siamese tracker
needs to simultaneously perform feature representation and
discriminator learning in one function φ(·). Let φ(z) inter-
pret as the feature vector of the training sample z, and com-
pare to Eq. (3), the discriminator part of Siamese tracker
corresponds to learning an α with unit vector from only one
sample. This interpretation gives an essential exposure on
the limitations of the original Siamese tracker. Moreover,
the joint learning of feature representation and discrimina-
tor also makes the model very easy to be over-ﬁtting.

To overcome the limitations of the Siamese tracker,
CFNet [46] improves SiamFC by using a circulant matrix
online to approximate a solution for α. The computation
load is reduced by the use of circulant matrix but the ap-
proximate solution inevitably brings in a boundary effect
and the aggressive online learning also depresses the gen-
eralization capacity, and the performance of CFNet is no
better than that of SiamFC. In this work, a better Siamese
tracker is obtained by designing a network that decouples
discriminator learning from feature representation learning
with a weighted cross correlation powered by multiple at-
tention mechanisms.

4856

Co(cid:374)(cid:448)Net

Figure 2. An example of feature producing in Siamese network.
The green and blue boxes in the cubic contain feature maps for the
corresponding green and blue windows.

3.2. Weighted Cross Correlation

To overcome the limitations of Siamese tracker,
the
Siamese network is reformulated by the inclusion of a
weighted cross correlation. This weighted correlation layer
is general and can be used in other Siamese networks. The
intuition behind this idea is that not every constituent pro-
vides the same contribution to the cross correlation oper-
ation in the Siamese network. As shown in Fig. 2, obvi-
ously, the object within the blue rectangular region should
be reﬂected more to the cross correlation operation com-
pared with the green rectangular region.

We expand Eq. (4) more precisely and replenish the tar-
get feature maps φ(z) ∈ Rm×n×d, the search image feature
maps φ(x) ∈ Rp×q×d and the response f ∈ Rp′×q′
, where
p > m, q > n, p′ = p − m + 1, q′ = q − n + 1.

fp′,q′ =

φi,j,c(z)φp′+i,q′+j,c(x) + b

(5)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

The contribution of each spatial position φ(z) in Eq. (5)
is not always the same. Thus, we propose the weighted
cross correlation function to distinguish the importance of
each sample as shown in Eq. (6).

fp′,q′ =

γi,j,cφi,j,c(z)φp′+i,q′+j,c(x) + b (6)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

f (z, x) = (γ ⊙ φ(z)) ∗ φ(x) + b · ✶.

(7)

The way to bring γ in Eq. (7) is named as an attention
mechanism and the formulation is called full attention. We
propose to learn this attention from deep network. Heuris-
tically, in visual tracking the center of the image is more
useful than the border because more of the target is likely to
be visible. The weighted cross correlation encodes both the
importance of samples (36 samples in SiameseFC-AlexNet)
and the features from different channels in exemplar image.
While the solution of a suitable parameter γ in Eq. (6) is
very difﬁcult to obtain as it imports too many parameters.
We further decompose the full attention γ into a dual atten-
tion ρ portraying the tracking target and a channel attention

β interpreting feature channels and propose a joint form as
shown in Eq. (8). Apparently, the number of parameters in
the full form is m · n · d, while the parameter number of the
joint form is m · n + d, which is largely reduced and easy to
tune. We execute a comparative experiment in Sec. 4.2.

fp′,q′=

ρi,jβcφi,j,c(z)φp′+i,q′+j,c(x)+b (8)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

3.3. Dual Attention

The dual attention ρ in Eq. (8) is learnt by a deep net-
work. This section concentrates on the training process,
which is also a trend for recent trackers [2, 13], because for
object tracking there is limited information to train a brand-
new deep model online.

One way to capture the attention from training data is
to constrain all data to share a common attention. We then
train the attention ρ with m · n parameters using the initial-
ization of matrix of ones. It is consistent with a common as-
sumption in tracking as similar to the method in [10]. How-
ever, in practical applications, it is too restrictive to con-
strain all training data and the live tracking target to share
a single shared structure. We therefore propose to model
the dual attention as a general attention superimposed by a
residual attention as shown in Eq. (9). The intuition behind
this idea is that any one estimation might not capture both
the common characteristics and distinctions of targets in
different videos while a superposition of estimations might.
The residual attention encodes the global information of the
target and has low computation complexity.

ρ = ¯ρ + ˜ρ

(9)

The general part ¯ρ in Eq. (9) encodes a generality learn-
ing from all training samples, while the residual part ˜ρ de-
scribes the distinctiveness between the live tracking target
and the learnt common model. The adaptation to the spe-
ciﬁc tracking target via the residual attention net can also be
viewed as a discriminator. The general attention ¯ρ we learnt
(see more details in Sec. 4.2) is similar to a Gaussian distri-
bution which accords with the common sense. SRDCF [10]
directly employs a Gaussian distribution but uses a hand-
crafted setting for parameters rather than learning from a
deep network. CFNet [46] also executed an experiment to
set the dual variable at a constant but the approach lacks
adaptation and it is difﬁcult to use circulant matrix to en-
code spatial localization. Overall, with this simple decom-
position we are able to leverage any extent of attentions,
while allowing disparities in values of the parameters, so
that the RASNet tracker gets a better performance than ei-
ther the general attention or a special type attention.

3.4. Channel Attention

A convolutional feature channel often corresponds to a
certain type of visual pattern. Therefore, in certain cir-

4857

ConvNet

Figure 3. Dual attention.
It is an annexation of the general at-
tention and the residual attention responded through an encoding-
decoding net that improves the attention near object boundaries.

cumstance some feature channels are more signiﬁcant than
the others. The channel attention module can be viewed
as the process of selecting semantic attributes for differ-
ent contexts [24]. Our goal is to keep the adaptation abil-
ity of deep network to the appearance variation of the tar-
get. CSRDCF [33] also contains a channel weight in their
tracker, but it is obtained via an optimization problem. In
this work, we propose to learn the channel attention using
a deep network. Channel attention is only involved in the
forward process of live tracking, which contributes a lot to
the tracking efﬁciency. The channel attention net is com-
posed by a dimension reduction layer with reduction ratio
r (set to 4), a ReLU, and then a dimension increasing layer
with a sigmoid activation. Given a set of d channel fea-
tures Z = [z1, z2, ..., zd] with zi ∈ RW ×H , i = 1, 2, ..., d,
the ﬁnal output of the net (denoted as ˜Z = [˜z1, ˜z2, ..., ˜zd]
with ˜zi ∈ RW ×H , i = 1, 2, ..., d) is achieved by executing
channel-wise re-scaling on the input as presented in Eq. (10)
where β is the parameter for channel attention.

˜zi = βi · zi

i = 1, 2, . . . , d

(10)

3.5. Network Architecture

The proposed network is designed by three attention
modules conjuncted by the weighted correlation layer. Gen-
eral attention is directly trained ofﬂine and initialized as ma-
trix of ones, and the residual attention is presented in Fig. 3
where hourglass structure is utilized. Channel attention is
a computational unit that can be constructed for any given
transformation. It contains a dimension reduction layer and
a dimension increasing layer and is activated by Sigmoid.

In the ofﬂine training of Siamese based tracker, the loss
function of a training pair is generally depicted as logistic
function as shown in Eq. (11) where Zi is an exemplar, Xj
is a search image, ∇ is the set of all the shifting positions
on the search image and u describes a sample of the same
size with the exemplar. While the selection of training pair
for Siamese network is subtle since the frames of a video
encode temporal information.

L(Zi, Xj) =

log(1 + exp(−Z[u] · X[u]))

(11)

1
|∇| X
u∈∇

Deﬁne {Xt}v as the instance set and {Zt}v as the exem-
plar set for training on the vth video sequence. Let ℵ be the

#1

#5

#2

#6

#3

#7

#4

#8

Figure 4. Illustration on training pair selection for Siamese net-
work. Eight frames are exhibited to represent frames of a se-
quence. For a typical Siamese network, a training pair is con-
sisted by randomly selected two frames. Thus, (#1, #4) pair is
completely possible to be chosen, which can result in over-ﬁtting.

sample feature space, for ∀Zi, Xj ∈ ℵ, i 6= j, a mini-batch
loss function is proposed in Eq. (12).

Lall = X
i

X
j

L(Zi, Xj) · Ω(i, j)

Ω(i, j) = exp(−

|i − j|
σ

)

(12)

(13)

Here, we impose a weighting function Ω(i, j) indicat-
ing temporal validity. In contrast, SiamFC imposed a step
function as the weighting function. Our loss function en-
courages a close-frame selection and puts less focus on a
far-frame selection to avoid over-ﬁtting brought by the fully
occlusion. As illustrated in Fig. 4, our loss function lays
more emphasis on a selection of pair (#3, #4) and pair (#5,
#6) than the selection of pair (#1, #4).

In the stage of network learning, a total number of 3
million pairs are used. For a target frame, 200 pairs are
sampled. We employ a strategy of random selection for the
video sequence, the target frame, and the pair selection. A
training pair is constituted by an exemplar and an instance,
and response ground-truth. The exemplar and instance are
ﬁrst transmitted to their separate branch of Siamese net to
obtain feature map. The exemplar feature map simultane-
ously goes into the residual attention net and the channel
attention net. The channel attention describes a priority
among channels, by which the exemplar feature is channel-
wise multiplied. The channel attention feature is convolved
with the feature extracted from the instance by the dual
attention. This operation is implemented by the weighted
cross correlation layer and generates a response map. The
loss layer is functioned according to Eq. (12).

In the stage of live tracking, the inference of attention
mechanisms is only practised on the ﬁrst frame, which con-
tributes to the high running speed of the proposed tracker.
This ﬁrst frame adaptation reforms the weight distribution
and is a target-level adaptation. Pairs making by the pre-
vious target and three scaled current search regions are re-
ceived by the RASNet, and three response maps are gener-
ated. The target scale and target position are obtained by
maximizing these responses.

4858

4. Experiments

We ﬁrst provide the implementation details, and then
carry out ablative studies and analyse the impact of each
component of RASNet tracker for both the ofﬂine train-
ing process and the online tracking performance. Exten-
sive experiments are conducted to evaluate the RASNet
tracker against plenty of state-of-the-art trackers on OTB-
2013, OTB-2015, VOT2015, and VOT2017 benchmarks.

4.1. Implementation Details

Training Data Preparation. To increase the generaliza-
tion capability and discriminative power of our feature
representation, and in the meantime avoid over-ﬁtting to
the scarce tracking data, our RASNet is pre-trained of-
ﬂine from scratch on the video object detection dataset of
the ImageNet Large Scale Visual Recognition Challenge
(ILSVRC15) [39]. This dataset includes more than 4000 se-
quences with about 1.3 million labelled frames. It is widely
utilized in tracking methods recently as it depicts scenes and
objects distinct to those in the traditional tracking bench-
marks. In each video snippet of an object, we collect each
pair of frames within the nearest 100 frames.
Learning setting. We apply stochastic gradient descent
(SGD) with momentum of 0.9 to train the network from
scratch and set the weight decay to 0.0005. The learning
rate exponentially decays from 10−2 to 10−5. The model
is trained for 50 epochs with a mini-batch size of 32. The
weighting parameter σ in Eq. (13) is set to 100.
Tracking setting.
to the scale varia-
current
tions, we
the
search image with scale factors {qs|q = 1.03, s =
S−1
(cid:4)− S−1
2 (cid:5) , S = 3}. The current target
scale is determined by a linear interpolation with a factor
of 0.56 on the newly predicted scale for a smooth tracking.
The proposed tracker is implemented on MATLAB with
MatConvNet [47] and all the experiments are executed on
a workstation with Intel(R) Xeon(R) CPU E5-2630 v4 @
2.20GHz and a NVIDIA TITAN Xp GPU.

2 (cid:5) , (cid:4)− S−3

search on three

2 (cid:5) , ..., (cid:4)

scales of

To adapt

4.2. Ablation Studies

A study on the training procedure of the Siamese net-
work is ﬁrst conducted on ILSVRC15. SiamFC [2] is in-
tended as the baseline in this section, and is re-trained by
using the released code with default parameter settings.

The training and validation curves of objective vs. epoch
are reported in Fig. 5(a) and it can be observed that the vali-
dation objective begins to rise at an early stage (∼15 epoch)
of the training procedure and there is a big gap between
the training objective and validation objective. Three other
lightweight SiamFC networks (#channels×0.5, ×0.25,
×0.125) are also designed, but similar results are obtained.
The main cause is the twining between the feature rep-
resentation and discriminator learning in one network for

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

10

20

30

40

50

10

20

30

40

50

epoch

epoch

(a) SiamFC [2] family

(b) RASNet family

Figure 5. Training on ILSVRC15 VID. The bold curves denote
training objective and the thin curves denote the validation objec-
(a): Training and validation objectives of SiamFC and its
tive.
lightweight varieties.
(b): Training and validation objectives of
GenAtt tracker, DualAtt tracker, ChanAtt tracker, RASNet tracker
compared with SiamFC.

(a) General attention learning

(b) Dual attention results

Figure 6. Visualizations on general attention learning and dual at-
tention results

SiamFC. In contrast, we bring in the attention mechanism
and the weighted correlation layer to decouple representa-
tion learning from discriminator learning.

To highlight each component of RASNet, we examine
the general attention initialized by a matrix of ones with the
size of 6 × 6 and ﬁnd the weights gradually agglomerate to
the center of the matrix as learning proceeds as visualized in
Fig. 6(a), the distribution of which is similar to a Gaussian
distribution where center position shows more importance
than the peripheral zone. While the validation objective of
the general attention (GenAtt in Fig. 5(b)) ameliorates com-
pared with SiamFC but still tends to increase. We analyse
that the reason for such observation is the discrimination
capacity is also associated with the speciﬁc tracking target.
Therefore, we introduce the residual attention to rein-
force the general attention, named as DualAtt model (sev-
eral examples shown in Fig. 6(b)). Compared with GenAtt,
by training with the dual attention, the objective is much
more reasonable, as the network learns more representa-
tive features and has less bias towards the training data.

4859

OTB-2013  Precision plots of OPE

OTB-2013  Success plots of OPE

OTB-2013  Success plots of OPE

OTB-2015  Success plots of OPE

0

0

5

10

20

15

25
Location error threshold

30

35

40

45

50

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(a) OPE on OTB-2013

(b) OPE on OTB-2015

OTB-2015  Success plots of TRE

OTB-2015  Success plots of SRE

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

e
t
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

i

i

n
o
s
c
e
r
P

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

(a) Precision plot

(b) Success plot

Figure 7. Precision and success plots using OPE on OTB-2013.
The performance of RASNet is improved gradually with the addi-
tion of general attention, residual attention, and channel attention.

Furthermore, we construct a ChanAtt model with only the
branch of channel attention equipped, the validation objec-
tive of which converges as well. Lastly, the practical RAS-
Net achieves the best validation accuracy due to the separa-
tion of feature representation from discriminator learning.

Finally, an estimate of each component contribution to
the overall tracking performance is made. Four ablative
trackers (GenAtt, DualAtt, ChanAtt, RASNet) as well as the
baseline tracker SiamFC are evaluated by the AUC score
of success plot on the benchmark of OTB-2013 as shown
in Fig. 7. Compared with SiamFC, GenAtt only adds a
constant general attention with 36 ﬂoating point parame-
ters, while the performance boosts 0.4% measured by the
AUC score as shown in Fig. 7. DualAtt model dramatically
improves the performance by an AUC score of 4.9% com-
pared with GenAtt due to the consideration of an adaptive
discrimination. On the other side, ChanAtt advances the
performance by almost 4% against the baseline. If the chan-
nel attention is reduced to a binary version, it can be viewed
as a feature selector as employed in [8, 49]. The overall
RASNet achieves a gain of 6.3% in AUC score in compar-
ison with SiamFC, which demonstrates the effectiveness of
the attention mechanism in practical tracking.

4.3. Comparison with the State of the Arts

Four benchmarks including OTB-2013, OTB-2015,
VOT2015, and VOT2017 are adopted to demonstrate the
performance of our tracker against a number of state-of-
the-arts. All results in this section are obtained by using
the OTB toolkit [52] and VOT toolkit [28].
Experiments on OTB-2013 and OTB-2015

OTB-2013 [51] is a widely used public tracking bench-
mark consisting by 50 fully annotated sequences. OTB-
2015 dataset [52] expands the sequences in OTB-2013 to
include 100 target objects in the tracking benchmark.

We evaluate the proposed algorithms with comparisons
to numerous state-of-the-art
trackers including CREST
[42], CFNet [46], GOTURN [21], SiamFC [2], SINT [44],
ACFN [5], CSR-DCF [33], RTT [7], HCF [35], SRDCF
[10], KCF [22], and DSST [9]. Note that CFNet, SiamFC,

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

4860

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(c) TRE on OTB-2015

(d) SRE on OTB-2015

Figure 8. Success plots showing a comparison of our trackers with
state-of-the-art trackers on the OTB-2013 and OTB-2015 dataset.

and SINT are latest Siamese based trackers, and CSR-DCF,
RTT and ACFN employ attention mechanisms, and GO-
TURN and SiamFC are recent fast deep trackers. All the
trackers were initialized with ground-truth object state in
the ﬁrst frame and average success plots were reported.

Fig. 8 exhibits the success plot in AUC and running
speed in frames per second (fps) on OTB-2013 and OTB-
2015. On the results of OTB-2013, CREST tracker per-
forms the best against the other trackers at a speed of 2fps.
The proposed RASNet tracker achieves an AUC score of
67.0% at real-time speed (83fps). ACFN obtains an AUC
score of 60.7%.
It adopts an attention mechanism to se-
lect a tracker and is required to maintain 260 trackers at
the same time, which makes it less efﬁcient. RTT and
CSR-DCF achieve AUC scores of 60.7% and 59.9%, re-
spectively. They both utilize saliency to regularize correla-
tion ﬁlters with hand-crafted features. Although recent fast
trackers GOTURN runs two times faster than ours, the per-
formance drops by more than 25%.

On the results of OTB-2015, our proposed method, RAS-
Net, occupies the best one, outperforming the second best
tracker CREST by a gain of 1.9% in AUC score, and at the
same time our running speed is an order of magnitude faster
than CREST. Both CREST and ours employed residual
learning, but the aggressive online learning of CREST hin-
ders the running speed. Among the trackers using Siamese
network, ours outperforms SINT with a relative improve-
ment of 5% in AUC score. SiamFC is a seminal tracking
framework, but the performance is still left behind by the
recent state-of-the-art methods. Even though CFNet adds a

0.4

0.3

0.2

0.1

0

RASNet

RASNet

SiamFC

61

56

51

46

41

36

31

26

21

16

11

6

1

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 9. An illustration of the expected average overlap plot on
the VOT2015 challenge.

Figure 10. An illustration of the expected average overlap plot on
the VOT2017 challenge. The gray horizontal line indicates the
VOT2017 state-of-the-art bound.

correlation layer based on SiamFC, it obtains a limited per-
formance gain. Incorporating our attention mechanisms to
the RASNet tracker elevates us to an AUC score of 64.2%,
leading to a consistent gain of 6% and 7.5% in AUC socre,
compared to SiamFC and CFNet.

Besides the one-pass evaluation(OPE), temporal robust-
ness evaluation (TRE) and spatial robustness evaluation
(SRE) are reported to examine the network sensitivity to the
initialization temporally and spatially. Our RASNet tracker
obtains the best TRE and SRE AUCs, which demonstrates
that our method achieves robustness to different temporal
and spatial initializations.
Experiments on VOT2015 and VOT2017

In this section the latest version of the Visual Object
Tracking toolkit (vot2017-challenge) is used. The toolkit
applies a reset-based methodology. Whenever a failure
(zero overlap with the ground truth) is detected, the tracker
is re-initialized ﬁve frames after the failure. The perfor-
mance is measured in terms of expected average overlap
(EAO), which quantitatively reﬂects both robustness and
accuracy. In addition, VOT2017 also newly introduced a
real-time experiment. We report all these metrics com-
pared with a number of the latest state-of-the-art trackers
on VOT2015 [15] and VOT2017 [28].

The EAO curve evaluated on VOT2015 is presented in
Fig. 9 and 62 other state-of-the-art trackers are compared.
The results of the proposed tracker are on par with that of
the state-of-the-art algorithms and is the second best with a
EAO score of 0.327. The best tracker, MDNet, employs dif-
ferent tracking benchmarks for training, while our tracker
does not employ any tracking benchmark in ofﬂine training.
Furthermore, our tracker is 80× faster than MDNet.

For the assessment on VOT2017, Fig. 10 reports the re-
sults of ours against 51 other state-of-the-art trackers with
respect to the EAO score. RASNet ranked fourth. Among
the three trackers that perform better than ours, CFCF [18]
and CFWCR [20] apply continuous convolution operator as
the baseline approach. The top performer LSART [43] com-
bines kernelized ridge regression with CNN. Fig. 10 also
reveals the EAO values in the real-time experiment denoted
by red points. Our tracker obviously is the top-performer
followed by SiamDCF [50] among the top ten best trackers
with respect to baseline EAO.

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 11. The EAO scores for the real-time experiment on
VOT2017 challenge.

We further report the EAO scores for the real-time exper-
iment as shown in Fig. 11. The realtime experiment simu-
lates a situation where a tracker processes images as if pro-
vided by a continuously running sensor [28]. We ranked
top one on this evaluation as shown in Fig. 11, which veri-
ﬁes that our track achieves a fast processing speed as well as
excellent performance and shows a potential to the practical
tracking application.

5. Conclusions

This paper proposes a new deep architecture named
RASNet, especially designed for online visual tracking. It
incorporates diverse attention mechanisms embedded in an
end-to-end Siamese network. The attention mechanisms
consist of a general attention ofﬂine trained on labeled VID,
a residual attention adapting the ofﬂine trained model to on-
line tracking by encoding information about the speciﬁc tar-
get, and a channel attention reﬂecting channel-wise quality
of features. RASNet is evaluated on OTB-2013, OTB-2015,
VOT2015 and VOT2017. Signiﬁcant improvements of the
RASNet tracker over the state of the arts are obtained. Fur-
thermore, the proposed RASNet tracker runs at 83 frames
per second, which is far beyond real-time.

6. Acknowledgements

This work is supported by the Natural Science Founda-
tion of China (Grant No. 61672519, 61751212, 61472421,
61602478, 61502026), the NSFC general technology col-
laborative Fund for basic research (Grant No. U1636218),
the Key Research Program of Frontier Sciences, CAS,
Grant No. QYZDJ-SSW-JSC040, and the CAS External
cooperation key project.

0.4

0.3

0.2

0.1

0

0.25

0.2

0.15

0.1

0.05

0

4861

References

[1] A. Agarwala, A. Hertzmann, D. H. Salesin, and S. M.
Seitz. Keyframe-based tracking for rotoscoping and anima-
tion. ACM Transactions on Graphics, 23(3):584–591, Aug.
2004. 1

[2] L. Bertinetto, J. Valmadre, J. F. Henriques, A. Vedaldi, and
P. H. Torr. Fully-convolutional siamese networks for ob-
ject tracking. In European Conference on Computer Vision,
pages 850–865, 2016. 1, 2, 4, 6, 7

[3] D. Bolme, J. Beveridge, B. Draper, and Y. Lui. Visual ob-
ject tracking using adaptive correlation ﬁlters. In IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2544–2550, 2010. 1

[4] S. Boyd and L. Vandenberghe. Convex Optimization. Cam-

bridge University Press, 2004. 3

[5] J. Choi, H. J. Chang, S. Yun, T. Fischer, and Y. Demiris. At-
tentional correlation ﬁlter network for adaptive visual track-
In IEEE Conference on Computer Vision and Pattern
ing.
Recognition, pages 4807–4816, 2017. 2, 7

[6] Q. Chu, W. Ouyang, H. Li, X. Wang, B. Liu, and N. Yu.
Online multi-object tracking using cnn-based single object
tracker with spatial-temporal attention mechanism. In IEEE
International Conference on Computer Vision, Oct 2017. 2
[7] Z. Cui, S. Xiao, J. Feng, and S. Yan. Recurrently target-
attending tracking. In IEEE Conference on Computer Vision
and Pattern Recognition, June 2016. 2, 7

[8] M. Danelljan, G. Bhat, F. Shahbaz Khan, and M. Felsberg.
Eco: Efﬁcient convolution operators for tracking. In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 6638–6642, 2017. 1, 2, 7

[9] M. Danelljan, G. H¨ager, F. Khan, and M. Felsberg. Accu-
In British

rate scale estimation for robust visual tracking.
Machine Vision Conference, 2014. 7

[10] M. Danelljan, G. H¨ager, F. S. Khan, and M. Felsberg. Adap-
tive decontamination of the training set: A uniﬁed formula-
tion for discriminative visual tracking. In IEEE Conference
on Computer Vision and Pattern Recognition, pages 1430–
1438, 2016. 4, 7

[11] M. Danelljan, G. Hager, F. Shahbaz Khan, and M. Fels-
berg. Convolutional features for correlation ﬁlter based vi-
In IEEE International Conference on Com-
sual tracking.
puter Vision Workshops, pages 58–66, 2015. 2

[12] M. Danelljan, A. Robinson, F. Khan, and M. Felsberg. Be-
yond correlation ﬁlters: Learning continuous convolution
In European Conference on
operators for visual tracking.
Computer Vision, 2016. 1, 2

[13] W. Du, Y. Wang, and Y. Qiao. Rpan: An end-to-end recur-
rent pose-attention network for action recognition in videos.
In IEEE International Conference on Computer Vision, Oct
2017. 2, 4

[14] A. Emami, F. Dadgostar, A. Bigdeli, and B. Lovell. Role
of spatiotemporal oriented energy features for robust visual
tracking in video surveillance. In IEEE International Con-
ference on Advanced Video and Signal-Based Surveillance,
pages 349–354, 2012. 1

[15] M. K. et al. The visual object tracking vot2015 challenge re-
sults. In IEEE International Conference on Computer Vision
Workshops, pages 564–586, 2015. 1, 2, 8

[16] M. K. et al. The visual object tracking vot2016 challenge
results. In European Conference on Computer Vision Work-
shops, pages 777–823, 2016. 1, 2

[17] J. Fan, Y. Wu, and S. Dai. Discriminative spatial attention
for robust tracking. In European Conference on Computer
Vision, pages 480–493, 2010. 2

[18] E. Gundogdu and A. A. Alatan. Good features to correlate
for visual tracking. arXiv preprint arXiv:1704.06326, 2017.
8

[19] Q. Guo, W. Feng, C. Zhou, R. Huang, L. Wan, and S. Wang.
Learning dynamic siamese network for visual object track-
ing. In IEEE International Conference on Computer Vision,
Oct 2017. 2, 3

[20] Z. He, Y. Fan, J. Zhuang, Y. Dong, and H. Bai. Correla-
tion ﬁlters with weighted convolution responses. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1992–2000, 2017. 8

[21] D. Held, S. Thrun, and S. Savarese. Learning to track at 100
fps with deep regression networks. In European Conference
Computer Vision, pages 749–765, 2016. 1, 2, 7

[22] J. Henriques, R. Caseiro, P. Martins, and J. Batista. High-
IEEE
speed tracking with kernelized correlation ﬁlters.
Transactions on Pattern Analysis and Machine Intelligence,
37(3):583–596, 2015. 1, 3, 7

[23] S. Hong, T. You, S. Kwak, and B. Han. Online tracking by
learning discriminative saliency map with convolutional neu-
ral network. In International Conference on Machine Learn-
ing, pages 1–10, 2015. 2

[24] J. Hu, L. Shen, and G. Sun. Squeeze-and-excitation net-
works. arXiv preprint arXiv:1709.01507, 2017. 2, 5
[25] M. Isard and A. Blake. Condensation—conditional density
International Journal of

propagation for visual tracking.
Computer Vision, 29(1):5–28, Aug 1998. 2

[26] M.

Jaderberg, K. Simonyan, A. Zisserman,

and
In Ad-
k. kavukcuoglu.
vances in Neural Information Processing Systems, pages
2017–2025, 2015. 2

Spatial transformer networks.

[27] H. Kiani Galoogahi, A. Fagg, and S. Lucey. Learning
background-aware correlation ﬁlters for visual tracking. In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 1135–1143, 2017. 1

[28] M. Kristan, A. Leonardis,

J. Matas, M. Felsberg,
R. Pﬂugfelder, L. Cehovin Zajc, T. Vojir, G. Hager,
A. Lukezic, A. Eldesokey, and G. Fernandez. The visual
object tracking vot2017 challenge results. In The IEEE Inter-
national Conference on Computer Vision (ICCV), Oct 2017.
1, 7, 8

[29] H. Li, Y. Li, and F. Porikli. Deeptrack: Learning discrimina-
tive feature representations online for robust visual tracking.
IEEE Transactions on Image Processing, 25(4):1834–1848,
2016. 2

[30] X. Li, W. Hu, C. Shen, Z. Zhang, A. Dick, and A. V. D. Hen-
gel. A survey of appearance models in visual object tracking.
ACM Transactions on Intelligent Systems and Technology,
4(4):58:1–58:48, 2013. 1, 2

4862

[47] A. Vedaldi and K. Lenc. Matconvnet: Convolutional neural
networks for matlab. In ACM International Conference on
Multimedia, pages 689–692. ACM, 2015. 6

[48] F. Wang, M. Jiang, C. Qian, S. Yang, C. Li, H. Zhang,
X. Wang, and X. Tang. Residual attention network for image
classiﬁcation. In IEEE Conference on Computer Vision and
Pattern Recognition, pages 3156–3164, 2017. 2

[49] L. Wang, W. Ouyang, X. Wang, and H. Lu. Visual tracking
In IEEE International
with fully convolutional networks.
Conference on Computer Vision, pages 3119–3127, 2015. 1,
2, 7

[50] Q. Wang, J. Gao, J. Xing, M. Zhang, and W. Hu. Dcfnet:
Discriminant correlation ﬁlters network for visual tracking.
In arXiv preprint arXiv:1704.04057, 2017. 8

[51] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In IEEE Conference on Computer Vision and

benchmark.
Pattern Recognition, pages 2411–2418, 2013. 1, 2, 7
[52] Y. Wu, J. Lim, and M.-H. Yang. Object tracking benchmark.
IEEE Transactions on Pattern Analysis and Machine Intelli-
gence, 37(9):1834–1848, 2015. 1, 2, 7

[53] A. Yilmaz, O. Javed, and M. Shah. Object tracking: A sur-
vey. ACM Computing Surverys, 38(4):1–45, 2006. 1, 2
[54] M. Zhang, J. Xing, J. Gao, and W. Hu. Robust visual tracking
using joint scale-spatial correlation ﬁlters. In IEEE Interna-
tional Conference on Image Processing, pages 1468–1472,
2015. 1

[55] M. Zhang, J. Xing, J. Gao, X. Shi, Q. Wang, and W. Hu.
Joint scale-spatial correlation tracking with adaptive rotation
estimation. In IEEE International Conference on Computer
Vision Workshops, pages 32–40, 2015. 1

[31] L. Liu, J. Xing, and H. Ai. Multi-view vehicle detection and
tracking in crossroads. In Proceedings of the Asian Confer-
ence on Pattern Recognition, pages 608–612, 2011. 1
[32] L. Liu, J. Xing, H. Ai, and X. Ruan. Hand posture recog-
nition using ﬁnger geometric feature. In IEEE International
Conference on Pattern Recognition, pages 565–568, 2012. 1
[33] A. Lukezic, T. Vojir, L. Cehovin Zajc, J. Matas, and M. Kris-
tan. Discriminative correlation ﬁlter with channel and spatial
reliability. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2017. 1, 2, 5, 7

[34] W. Luo, J. Xing, A. Milan, X. Zhang, W. Liu, X. Zhao, and
T. Kim. Multiple object tracking: A literature review. arXiv
preprint arXiv:1409.7618, 2014. 2

[35] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchical
In IEEE Inter-
convolutional features for visual tracking.
national Conference on Computer Vision, pages 3074–3082,
2015. 2, 7

[36] H. Nam and B. Han. Learning multi-domain convolutional
In IEEE Conference
neural networks for visual tracking.
on Computer Vision and Pattern Recognition, pages 4293–
4302, 2016. 1, 2

[37] A. Newell, K. Yang, and J. Deng. Stacked hourglass net-
works for human pose estimation. In European Conference
on Computer Vision, 2016. 1

[38] B. A. Olshausen, C. H. Anderson, and D. C. Van Essen. A
neurobiological model of visual attention and invariant pat-
tern recognition based on dynamic routing of information.
Journal of Neuroscience, 13(11):4700–4719, 1993. 2
[39] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein,
A. C. Berg, and L. Fei-Fei.
ImageNet Large Scale Visual
Recognition Challenge. International Journal of Computer
Vision, 115(3):211–252, 2015. 6

[40] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 2

[41] A. W. Smeulders, D. Chu, R. Cucchiara, S. Calderara, A. De-
hghan, and M. Shah. Visual tracking: An experimental sur-
IEEE Transactions on Pattern Analysis and Machine
vey.
Intelligence, 36(7):1442–1468, 2014. 1, 2

[42] Y. Song, C. Ma, L. Gong, J. Zhang, R. W. H. Lau, and M.-
H. Yang. Crest: Convolutional residual learning for visual
In IEEE International Conference on Computer
tracking.
Vision, Oct 2017. 7

[43] C. Sun, H. Lu, and M.-H. Yang.
aware regressions for visual
arXiv:1706.07457, 2017. 1, 8

tracking.

Learning spatial-
arXiv preprint

[44] R. Tao, E. Gavves, and A. W. M. Smeulders. Siamese in-
stance search for tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2016. 1, 2, 3, 7

[45] Z. Teng, J. Xing, Q. Wang, C. Lang, S. Feng, and Y. Jin.
Robust object tracking based on temporal and spatial deep
networks. In IEEE International Conference on Computer
Vision, Oct 2017. 2

[46] J. Valmadre, L. Bertinetto, J. F. Henriques, A. Vedaldi, and
P. H. Torr. End-to-end representation learning for correla-
tion ﬁlter based tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2017. 2, 3, 4, 7

4863

Learning Attentions: Residual Attentional Siamese Network
for High Performance Online Visual Tracking
Qiang Wang1,3∗, Zhu Teng2∗, Junliang Xing3†, Jin Gao3, Weiming Hu1,3, Stephen Maybank4
1University of Chinese Academy of Sciences, Beijing, China
2School of Computer and Information Technology, Beijing Jiaotong University, Beijing, China
3National Laboratory of Pattern Recognition, Institute of Automation, Chinese Academy of Sciences, Beijing, China
4Department of Computer Science and Information Systems, Birkbeck College, University of London, UK.
{qiang.wang, jlxing, jin.gao, wmhu}@nlpr.ia.ac.cn zteng@bjtu.edu.cn sjmaybank@dcs.bbk.ac.uk

Abstract

Ofﬂine training for object tracking has recently shown
great potentials in balancing tracking accuracy and speed.
However, it is still difﬁcult to adapt an ofﬂine trained model
to a target tracked online. This work presents a Residual At-
tentional Siamese Network (RASNet) for high performance
object tracking. The RASNet model reformulates the corre-
lation ﬁlter within a Siamese tracking framework, and intro-
duces different kinds of the attention mechanisms to adapt
the model without updating the model online. In particular,
by exploiting the ofﬂine trained general attention, the tar-
get adapted residual attention, and the channel favored fea-
ture attention, the RASNet not only mitigates the over-ﬁtting
problem in deep network training, but also enhances its dis-
criminative capacity and adaptability due to the separation
of representation learning and discriminator learning. The
proposed deep architecture is trained from end to end and
takes full advantage of the rich spatial temporal informa-
tion to achieve robust visual tracking. Experimental results
on two latest benchmarks, OTB-2015 and VOT2017, show
that the RASNet tracker has the state-of-the-art tracking ac-
curacy while runs at more than 80 frames per second.

1. Introduction

Online visual tracking of an arbitrary temporally chang-
ing object, speciﬁed at the ﬁrst frame, is an extensively stud-
ied problem in computer vision [30, 41, 53]. It still remains
very challenging due to practical factors like scale varia-
tion, fast motion, occlusions, deformation, and background
clutter [52]. High performance visual tracking algorithms
with good tracking accuracy and efﬁciency are required by
many applications like visual surveillance [14], trafﬁc mon-
itoring [31], human-computer interaction [32], and video
editing [1], to name a few.

One of the most successful tracking frameworks is Cor-
relation Filter (CF) [3,8,22,27,33,54,55]. Algorithms based
on correlation ﬁltering have demonstrated superior compu-

∗Equal contribution.
†Corresponding author.

tational efﬁciency and fairly good tracking accuracy. One
notable example is the MOSSE tracker [3] with the running
speed of about 700 frames per second. The main reasons for
its high running speed are the replacement of the exhausted
convolutions with element-wise multiplications using Fast
Fourier Transform, as well as the adoption of relatively
simple image features. For complex tracking scenarios,
however, the performance of CF trackers with hand-crafted
features often drops considerably. Recently, deep learning
models [8,36,43,49], have become an essential oracle to im-
prove the tracking accuracy, mainly due to their large model
capacities and strong feature learning abilities. By exten-
sively training large deep networks on large datasets ofﬂine
and aggressively learning the target sequence online, those
trackers have obtained record-breaking results on all recent
benchmarks [51, 52] and challenges [15, 16, 28].

Despite all these signiﬁcant progress, most deep learn-
ing based tracking methods still cannot attain consummate
results. One issue is that the deep feature learned ofﬂine
sometimes cannot adapt well to speciﬁc target during track-
ing.
If the deep feature extractor is learnt online then it
tends to overﬁt the target. Moreover, the online learning
of the feature extractor, its updating process, and even its
inference process, are all computationally expensive. This
prevents a tracking algorithm from performing all these op-
erations simultaneously at each frame [2, 12, 21, 44]. Moti-
vated by these considerations, we develop an effective and
efﬁcient deep learning based tracking approach to produce
high performance visual tracking. To this end, we adapt
the model architecture and training objective for more ef-
fective feature learning, and also introduce different kinds
of attention mechanisms into the tracking model learning to
produce more adaptive discriminative learning.

In particular, a new end-to-end deep architecture, named
Residual Attentional Siamese Network (RASNet), is de-
signed to learn both effective feature representation and de-
cision discriminators. The backbone of the attention mod-
ule in the RASNet is an Hourglass-like Convolutional Neu-
[37] to learn contextualized
ral Network (CNN) model
and multi-scaled feature representation. The residual learn-
ing within the RASNet further helps to encode more adap-

4854

tive representation of the object from multiple levels and
a weighted cross correlation layer is proposed to learn the
Siamese structure. The proposed RASNet extensively ex-
plores diverse attentional mechanisms to adapt the ofﬂine
learned feature representations to a speciﬁc tracking tar-
get. To guarantee high tracking efﬁciency, all these learning
processes are performed during the ofﬂine training stage.
Extensive analyses and evaluations on the latest tracking
benchmarks [51, 52] and challenges [15, 16] verify the ef-
fectiveness and efﬁciency of the proposed model.

To summarize, the main contributions of this work are

three-fold.

• An end-to-end deep architecture speciﬁcally designed
for the object tracking problem is proposed. The deep
architecture inherits the merits from many recent mod-
els like Hourglass structure, residual skip connection,
as well as our newly proposed weighted cross corre-
lations to produce effective deep feature learning for
visual tracking.

• Different kinds of attention mechanisms are explored
within the RASNet. These mechanisms include the
General Attention, Residual Attention, and Channel
Attention. The ofﬂine learned feature representations
are thus adapted to the online tracking target, to greatly
alleviate over-ﬁtting.

• Very effective and efﬁcient deep learning based tracker
is developed. It performs favorably against a number
of state-of-the-art trackers with the running speed over
80 frames per seconds. To facilitate further studies,
our source code and trained models are available at:
https://github.com/foolwood/RASNet.

2. Related Works

The most relevant tracking methods and techniques are
discussed. In particular, deep feature based tracking meth-
ods, end-to-end network learning based tracking methods,
as well as attention mechanisms are examined. The reader
is referred to more thorough reviews on object tracking sur-
vey [30, 34, 53] and benchmark evaluations [41, 52].

Deep feature based tracking. Recently deep features have
been widely employed to boost performance in tracking due
to its superior representation power. Some trackers combine
deep features with correlation ﬁlters. For example, CF2 [35]
and DeepSRDCF [11] concatenated features from different
layers of a pretrained CNN such as VGG [40] into corre-
lation ﬁlter. CCOT [12] and ECO [8] constructed trackers
based on the continuous convolution ﬁlters. Tracking can
also be regarded as a classiﬁcation or regression problem.
Accordingly, another approach to introduce deep features in
tracking borrows from classiﬁcation or regression network.
For instance, CNN-SVM tracker [23] utilized CNN model
with saliency map and SVM. FCNT [49] proposed feature

selection in a regression framework. DeepTrack [29] casted
tracking as a classiﬁcation problem and employed a candi-
date pool of multiple CNN as a data-driven model of dif-
ferent instances of the target object. The TSN tracker [45]
proposed a CNN network encoding temporal and spatial in-
formation in the context of classiﬁcation. The advantage of
these methods is they use the outstanding representations of
deep networks. However, these online only approaches do
not train the method on the ofﬂine dataset. This limits the
richness of the model, and the tracking speed is reduced if
online training or updating of the deep network are required.

End-to-End learning based tracking. To obtain the bene-
ﬁts of end-to-end learning, researchers train deep models on
videos ofﬂine and evaluate the model on the target tracking
benchmark for online tracking [2, 19, 21, 36, 44]. The key
points are how to formulate the tracking problem and how
to design the ofﬂine training loss function. The SINT [44]
formulated visual tracking as a veriﬁcation problem and
trained a Siamese architecture to learn a metric for on-
line target matching. SiamFC [2] brought cross correlation
into a fully-convolutional Siamese network. The GOTURN
[21] concatenated pairs of consecutive frames and learnt
the target tracking states by regression. The MDNet [36]
treated tracking as a classiﬁcation problem, and learnt an
ofﬂine deep feature extractor and then online updated the
classiﬁer by adding some learnable fully-connected layers
to perform online tracking within the Particle Filter frame-
work [25]. CFNet [46] interpreted the correlation ﬁlter
learner as a differentiable layer in a deep neural network.
These approaches advance the development of end-to-end
deep tracking models and achieve very good results on re-
cent benchmarks [51,52] and challenges [15,16]. However,
over-ﬁtting might occur when training their models using
similar benchmarks.

Attention mechanisms. Attention mechanisms were ﬁrst
used in neuroscience area [38]. They have spread to other
areas such as image classiﬁcation [24, 26, 48], pose esti-
mation [13], multi-object tracking [6], etc. For short-time
tracking, DAVT [17] used a discriminative spatial attention
for object tracking and afterwards ACFN [5] developed an
attentional mechanism that chose a subset of the associated
correlation ﬁlters for tracking. On the other hand, RTT [7]
drew attention to possible targets by a multidirectional RNN
to generate saliency and CSR-DCF [33] constructed a fore-
ground spatial reliability map by using color histograms to
constrain correlation ﬁlter learning. In contrast to these at-
tention mechanisms, it is proposed to learn the attention
through an end-to-end deep network. This attention mech-
anism consists of a general attention learning from ofﬂine
training dataset and a residual attention estimated by a resid-
ual net, which incorporates beneﬁts from both ofﬂine train-
ing dataset and the online target of live tracking.

4855

e
r
u
t
a
e
F

e
r
u
t
a
e
F

Co(cid:374)(cid:448)Net

Rtsidual

 Attente

ρ~ 

Gtetral

 Attente

ρ  

Chaeetl

 Attente

β 

g
(cid:374)

i
l

o
o
p

 
l

a
(cid:271)
o
G

l

(cid:1005)
(cid:272)
f

l

u
e
r

(cid:1006)
(cid:272)
f

i

d
o
(cid:373)
g
S

i

WXCtrr

Co(cid:374)(cid:448)Net

 (cid:272)ha(cid:374)(cid:374)el-(cid:449)ise s(cid:272)ale

ele(cid:373)e(cid:374)t-(cid:449)ise su(cid:373)(cid:373)atio(cid:374)

Figure 1. Pipeline of RASNet. The RASNet is constituted by a shared feature extractor, attention mechanisms (general attention, residual
attention, channel attention), and the weighted cross correlation layer (WXCorr). When a pair of an exemplar and a search image ﬂows into
the net, feature maps are produced through the feature extractor. Based on the exemplar features, three types of attentions are extracted.
Exemplar and search features, along with the attentions as weights are inputed to WXCorr and ﬁnally transformed to a response map.

3. Residual Attentional Siamese Network

To produce effective and efﬁcient visual tracking, a novel
deep architecture named Residual Attentional Siamese Net-
work (RASNet) is proposed. Fig. 1 shows the pipeline
of the proposed RASNet tracker.
In contrast to previous
deep architectures for tracking, the RASNet reformulates
the Siamese tracking from a regression prospective, and
propose a weighted cross correlation to learn the whole
Siamese model from end to end. As shown in Fig. 1, the
weighted cross correlation explores different kinds of at-
tention mechanisms, i.e., general attention, residual atten-
tion, and channel attention, to adapt the ofﬂine learned deep
model to online tracking target.

3.1. Siamese Tracker Introduction

The object tracking problem can be formulated as a re-

gression problem by:

min
w

k Aw − y k2

2 +λ k w k2
2,

where matrix A is a set of feature vectors of the training
samples, vector y is the corresponding labels, and k · k2
denotes the ℓ2-norm of a vector. The solution is described
in Eq. (2).

w = (A⊤A + λI)−1A⊤y.

Since the computation of the inverse matrix is computation-
ally costly, it is difﬁcult to use Eq. (2) directly in object
tracking. The above problem can also be solved in the dual
form [4], with the result as in Eq. (3):

(1)

(2)

(3)

w = A⊤α.

From Eq. (3) we can observe that the dual form decouples
feature representation from discriminator learning, and

here α reﬂects the discriminator part. For regression based
tracking algorithms, e.g. KCF [22], the essential problem is
how to learn an estimation of α.

As a contrast, the Siamese Tracker [19,44] learns a func-
tion f (z, z′) to compare an exemplar image z to a candidate
image z′ of the same size. Comparisons with multiple can-
didates can be implemented by a correlation between the
exemplar and a search image with a larger size and obtain a
response map as depicted in Eq. (4), where x indicates the
search image.

f (z, x) = φ(z) ∗ φ(x) + b · ✶.

(4)

From Eq. (4) we can observe that the Siamese tracker
needs to simultaneously perform feature representation and
discriminator learning in one function φ(·). Let φ(z) inter-
pret as the feature vector of the training sample z, and com-
pare to Eq. (3), the discriminator part of Siamese tracker
corresponds to learning an α with unit vector from only one
sample. This interpretation gives an essential exposure on
the limitations of the original Siamese tracker. Moreover,
the joint learning of feature representation and discrimina-
tor also makes the model very easy to be over-ﬁtting.

To overcome the limitations of the Siamese tracker,
CFNet [46] improves SiamFC by using a circulant matrix
online to approximate a solution for α. The computation
load is reduced by the use of circulant matrix but the ap-
proximate solution inevitably brings in a boundary effect
and the aggressive online learning also depresses the gen-
eralization capacity, and the performance of CFNet is no
better than that of SiamFC. In this work, a better Siamese
tracker is obtained by designing a network that decouples
discriminator learning from feature representation learning
with a weighted cross correlation powered by multiple at-
tention mechanisms.

4856

Co(cid:374)(cid:448)Net

Figure 2. An example of feature producing in Siamese network.
The green and blue boxes in the cubic contain feature maps for the
corresponding green and blue windows.

3.2. Weighted Cross Correlation

To overcome the limitations of Siamese tracker,
the
Siamese network is reformulated by the inclusion of a
weighted cross correlation. This weighted correlation layer
is general and can be used in other Siamese networks. The
intuition behind this idea is that not every constituent pro-
vides the same contribution to the cross correlation oper-
ation in the Siamese network. As shown in Fig. 2, obvi-
ously, the object within the blue rectangular region should
be reﬂected more to the cross correlation operation com-
pared with the green rectangular region.

We expand Eq. (4) more precisely and replenish the tar-
get feature maps φ(z) ∈ Rm×n×d, the search image feature
maps φ(x) ∈ Rp×q×d and the response f ∈ Rp′×q′
, where
p > m, q > n, p′ = p − m + 1, q′ = q − n + 1.

fp′,q′ =

φi,j,c(z)φp′+i,q′+j,c(x) + b

(5)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

The contribution of each spatial position φ(z) in Eq. (5)
is not always the same. Thus, we propose the weighted
cross correlation function to distinguish the importance of
each sample as shown in Eq. (6).

fp′,q′ =

γi,j,cφi,j,c(z)φp′+i,q′+j,c(x) + b (6)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

f (z, x) = (γ ⊙ φ(z)) ∗ φ(x) + b · ✶.

(7)

The way to bring γ in Eq. (7) is named as an attention
mechanism and the formulation is called full attention. We
propose to learn this attention from deep network. Heuris-
tically, in visual tracking the center of the image is more
useful than the border because more of the target is likely to
be visible. The weighted cross correlation encodes both the
importance of samples (36 samples in SiameseFC-AlexNet)
and the features from different channels in exemplar image.
While the solution of a suitable parameter γ in Eq. (6) is
very difﬁcult to obtain as it imports too many parameters.
We further decompose the full attention γ into a dual atten-
tion ρ portraying the tracking target and a channel attention

β interpreting feature channels and propose a joint form as
shown in Eq. (8). Apparently, the number of parameters in
the full form is m · n · d, while the parameter number of the
joint form is m · n + d, which is largely reduced and easy to
tune. We execute a comparative experiment in Sec. 4.2.

fp′,q′=

ρi,jβcφi,j,c(z)φp′+i,q′+j,c(x)+b (8)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

3.3. Dual Attention

The dual attention ρ in Eq. (8) is learnt by a deep net-
work. This section concentrates on the training process,
which is also a trend for recent trackers [2, 13], because for
object tracking there is limited information to train a brand-
new deep model online.

One way to capture the attention from training data is
to constrain all data to share a common attention. We then
train the attention ρ with m · n parameters using the initial-
ization of matrix of ones. It is consistent with a common as-
sumption in tracking as similar to the method in [10]. How-
ever, in practical applications, it is too restrictive to con-
strain all training data and the live tracking target to share
a single shared structure. We therefore propose to model
the dual attention as a general attention superimposed by a
residual attention as shown in Eq. (9). The intuition behind
this idea is that any one estimation might not capture both
the common characteristics and distinctions of targets in
different videos while a superposition of estimations might.
The residual attention encodes the global information of the
target and has low computation complexity.

ρ = ¯ρ + ˜ρ

(9)

The general part ¯ρ in Eq. (9) encodes a generality learn-
ing from all training samples, while the residual part ˜ρ de-
scribes the distinctiveness between the live tracking target
and the learnt common model. The adaptation to the spe-
ciﬁc tracking target via the residual attention net can also be
viewed as a discriminator. The general attention ¯ρ we learnt
(see more details in Sec. 4.2) is similar to a Gaussian distri-
bution which accords with the common sense. SRDCF [10]
directly employs a Gaussian distribution but uses a hand-
crafted setting for parameters rather than learning from a
deep network. CFNet [46] also executed an experiment to
set the dual variable at a constant but the approach lacks
adaptation and it is difﬁcult to use circulant matrix to en-
code spatial localization. Overall, with this simple decom-
position we are able to leverage any extent of attentions,
while allowing disparities in values of the parameters, so
that the RASNet tracker gets a better performance than ei-
ther the general attention or a special type attention.

3.4. Channel Attention

A convolutional feature channel often corresponds to a
certain type of visual pattern. Therefore, in certain cir-

4857

ConvNet

Figure 3. Dual attention.
It is an annexation of the general at-
tention and the residual attention responded through an encoding-
decoding net that improves the attention near object boundaries.

cumstance some feature channels are more signiﬁcant than
the others. The channel attention module can be viewed
as the process of selecting semantic attributes for differ-
ent contexts [24]. Our goal is to keep the adaptation abil-
ity of deep network to the appearance variation of the tar-
get. CSRDCF [33] also contains a channel weight in their
tracker, but it is obtained via an optimization problem. In
this work, we propose to learn the channel attention using
a deep network. Channel attention is only involved in the
forward process of live tracking, which contributes a lot to
the tracking efﬁciency. The channel attention net is com-
posed by a dimension reduction layer with reduction ratio
r (set to 4), a ReLU, and then a dimension increasing layer
with a sigmoid activation. Given a set of d channel fea-
tures Z = [z1, z2, ..., zd] with zi ∈ RW ×H , i = 1, 2, ..., d,
the ﬁnal output of the net (denoted as ˜Z = [˜z1, ˜z2, ..., ˜zd]
with ˜zi ∈ RW ×H , i = 1, 2, ..., d) is achieved by executing
channel-wise re-scaling on the input as presented in Eq. (10)
where β is the parameter for channel attention.

˜zi = βi · zi

i = 1, 2, . . . , d

(10)

3.5. Network Architecture

The proposed network is designed by three attention
modules conjuncted by the weighted correlation layer. Gen-
eral attention is directly trained ofﬂine and initialized as ma-
trix of ones, and the residual attention is presented in Fig. 3
where hourglass structure is utilized. Channel attention is
a computational unit that can be constructed for any given
transformation. It contains a dimension reduction layer and
a dimension increasing layer and is activated by Sigmoid.

In the ofﬂine training of Siamese based tracker, the loss
function of a training pair is generally depicted as logistic
function as shown in Eq. (11) where Zi is an exemplar, Xj
is a search image, ∇ is the set of all the shifting positions
on the search image and u describes a sample of the same
size with the exemplar. While the selection of training pair
for Siamese network is subtle since the frames of a video
encode temporal information.

L(Zi, Xj) =

log(1 + exp(−Z[u] · X[u]))

(11)

1
|∇| X
u∈∇

Deﬁne {Xt}v as the instance set and {Zt}v as the exem-
plar set for training on the vth video sequence. Let ℵ be the

#1

#5

#2

#6

#3

#7

#4

#8

Figure 4. Illustration on training pair selection for Siamese net-
work. Eight frames are exhibited to represent frames of a se-
quence. For a typical Siamese network, a training pair is con-
sisted by randomly selected two frames. Thus, (#1, #4) pair is
completely possible to be chosen, which can result in over-ﬁtting.

sample feature space, for ∀Zi, Xj ∈ ℵ, i 6= j, a mini-batch
loss function is proposed in Eq. (12).

Lall = X
i

X
j

L(Zi, Xj) · Ω(i, j)

Ω(i, j) = exp(−

|i − j|
σ

)

(12)

(13)

Here, we impose a weighting function Ω(i, j) indicat-
ing temporal validity. In contrast, SiamFC imposed a step
function as the weighting function. Our loss function en-
courages a close-frame selection and puts less focus on a
far-frame selection to avoid over-ﬁtting brought by the fully
occlusion. As illustrated in Fig. 4, our loss function lays
more emphasis on a selection of pair (#3, #4) and pair (#5,
#6) than the selection of pair (#1, #4).

In the stage of network learning, a total number of 3
million pairs are used. For a target frame, 200 pairs are
sampled. We employ a strategy of random selection for the
video sequence, the target frame, and the pair selection. A
training pair is constituted by an exemplar and an instance,
and response ground-truth. The exemplar and instance are
ﬁrst transmitted to their separate branch of Siamese net to
obtain feature map. The exemplar feature map simultane-
ously goes into the residual attention net and the channel
attention net. The channel attention describes a priority
among channels, by which the exemplar feature is channel-
wise multiplied. The channel attention feature is convolved
with the feature extracted from the instance by the dual
attention. This operation is implemented by the weighted
cross correlation layer and generates a response map. The
loss layer is functioned according to Eq. (12).

In the stage of live tracking, the inference of attention
mechanisms is only practised on the ﬁrst frame, which con-
tributes to the high running speed of the proposed tracker.
This ﬁrst frame adaptation reforms the weight distribution
and is a target-level adaptation. Pairs making by the pre-
vious target and three scaled current search regions are re-
ceived by the RASNet, and three response maps are gener-
ated. The target scale and target position are obtained by
maximizing these responses.

4858

4. Experiments

We ﬁrst provide the implementation details, and then
carry out ablative studies and analyse the impact of each
component of RASNet tracker for both the ofﬂine train-
ing process and the online tracking performance. Exten-
sive experiments are conducted to evaluate the RASNet
tracker against plenty of state-of-the-art trackers on OTB-
2013, OTB-2015, VOT2015, and VOT2017 benchmarks.

4.1. Implementation Details

Training Data Preparation. To increase the generaliza-
tion capability and discriminative power of our feature
representation, and in the meantime avoid over-ﬁtting to
the scarce tracking data, our RASNet is pre-trained of-
ﬂine from scratch on the video object detection dataset of
the ImageNet Large Scale Visual Recognition Challenge
(ILSVRC15) [39]. This dataset includes more than 4000 se-
quences with about 1.3 million labelled frames. It is widely
utilized in tracking methods recently as it depicts scenes and
objects distinct to those in the traditional tracking bench-
marks. In each video snippet of an object, we collect each
pair of frames within the nearest 100 frames.
Learning setting. We apply stochastic gradient descent
(SGD) with momentum of 0.9 to train the network from
scratch and set the weight decay to 0.0005. The learning
rate exponentially decays from 10−2 to 10−5. The model
is trained for 50 epochs with a mini-batch size of 32. The
weighting parameter σ in Eq. (13) is set to 100.
Tracking setting.
to the scale varia-
current
tions, we
the
search image with scale factors {qs|q = 1.03, s =
S−1
(cid:4)− S−1
2 (cid:5) , S = 3}. The current target
scale is determined by a linear interpolation with a factor
of 0.56 on the newly predicted scale for a smooth tracking.
The proposed tracker is implemented on MATLAB with
MatConvNet [47] and all the experiments are executed on
a workstation with Intel(R) Xeon(R) CPU E5-2630 v4 @
2.20GHz and a NVIDIA TITAN Xp GPU.

2 (cid:5) , (cid:4)− S−3

search on three

2 (cid:5) , ..., (cid:4)

scales of

To adapt

4.2. Ablation Studies

A study on the training procedure of the Siamese net-
work is ﬁrst conducted on ILSVRC15. SiamFC [2] is in-
tended as the baseline in this section, and is re-trained by
using the released code with default parameter settings.

The training and validation curves of objective vs. epoch
are reported in Fig. 5(a) and it can be observed that the vali-
dation objective begins to rise at an early stage (∼15 epoch)
of the training procedure and there is a big gap between
the training objective and validation objective. Three other
lightweight SiamFC networks (#channels×0.5, ×0.25,
×0.125) are also designed, but similar results are obtained.
The main cause is the twining between the feature rep-
resentation and discriminator learning in one network for

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

10

20

30

40

50

10

20

30

40

50

epoch

epoch

(a) SiamFC [2] family

(b) RASNet family

Figure 5. Training on ILSVRC15 VID. The bold curves denote
training objective and the thin curves denote the validation objec-
(a): Training and validation objectives of SiamFC and its
tive.
lightweight varieties.
(b): Training and validation objectives of
GenAtt tracker, DualAtt tracker, ChanAtt tracker, RASNet tracker
compared with SiamFC.

(a) General attention learning

(b) Dual attention results

Figure 6. Visualizations on general attention learning and dual at-
tention results

SiamFC. In contrast, we bring in the attention mechanism
and the weighted correlation layer to decouple representa-
tion learning from discriminator learning.

To highlight each component of RASNet, we examine
the general attention initialized by a matrix of ones with the
size of 6 × 6 and ﬁnd the weights gradually agglomerate to
the center of the matrix as learning proceeds as visualized in
Fig. 6(a), the distribution of which is similar to a Gaussian
distribution where center position shows more importance
than the peripheral zone. While the validation objective of
the general attention (GenAtt in Fig. 5(b)) ameliorates com-
pared with SiamFC but still tends to increase. We analyse
that the reason for such observation is the discrimination
capacity is also associated with the speciﬁc tracking target.
Therefore, we introduce the residual attention to rein-
force the general attention, named as DualAtt model (sev-
eral examples shown in Fig. 6(b)). Compared with GenAtt,
by training with the dual attention, the objective is much
more reasonable, as the network learns more representa-
tive features and has less bias towards the training data.

4859

OTB-2013  Precision plots of OPE

OTB-2013  Success plots of OPE

OTB-2013  Success plots of OPE

OTB-2015  Success plots of OPE

0

0

5

10

20

15

25
Location error threshold

30

35

40

45

50

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(a) OPE on OTB-2013

(b) OPE on OTB-2015

OTB-2015  Success plots of TRE

OTB-2015  Success plots of SRE

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

e
t
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

i

i

n
o
s
c
e
r
P

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

(a) Precision plot

(b) Success plot

Figure 7. Precision and success plots using OPE on OTB-2013.
The performance of RASNet is improved gradually with the addi-
tion of general attention, residual attention, and channel attention.

Furthermore, we construct a ChanAtt model with only the
branch of channel attention equipped, the validation objec-
tive of which converges as well. Lastly, the practical RAS-
Net achieves the best validation accuracy due to the separa-
tion of feature representation from discriminator learning.

Finally, an estimate of each component contribution to
the overall tracking performance is made. Four ablative
trackers (GenAtt, DualAtt, ChanAtt, RASNet) as well as the
baseline tracker SiamFC are evaluated by the AUC score
of success plot on the benchmark of OTB-2013 as shown
in Fig. 7. Compared with SiamFC, GenAtt only adds a
constant general attention with 36 ﬂoating point parame-
ters, while the performance boosts 0.4% measured by the
AUC score as shown in Fig. 7. DualAtt model dramatically
improves the performance by an AUC score of 4.9% com-
pared with GenAtt due to the consideration of an adaptive
discrimination. On the other side, ChanAtt advances the
performance by almost 4% against the baseline. If the chan-
nel attention is reduced to a binary version, it can be viewed
as a feature selector as employed in [8, 49]. The overall
RASNet achieves a gain of 6.3% in AUC score in compar-
ison with SiamFC, which demonstrates the effectiveness of
the attention mechanism in practical tracking.

4.3. Comparison with the State of the Arts

Four benchmarks including OTB-2013, OTB-2015,
VOT2015, and VOT2017 are adopted to demonstrate the
performance of our tracker against a number of state-of-
the-arts. All results in this section are obtained by using
the OTB toolkit [52] and VOT toolkit [28].
Experiments on OTB-2013 and OTB-2015

OTB-2013 [51] is a widely used public tracking bench-
mark consisting by 50 fully annotated sequences. OTB-
2015 dataset [52] expands the sequences in OTB-2013 to
include 100 target objects in the tracking benchmark.

We evaluate the proposed algorithms with comparisons
to numerous state-of-the-art
trackers including CREST
[42], CFNet [46], GOTURN [21], SiamFC [2], SINT [44],
ACFN [5], CSR-DCF [33], RTT [7], HCF [35], SRDCF
[10], KCF [22], and DSST [9]. Note that CFNet, SiamFC,

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

4860

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(c) TRE on OTB-2015

(d) SRE on OTB-2015

Figure 8. Success plots showing a comparison of our trackers with
state-of-the-art trackers on the OTB-2013 and OTB-2015 dataset.

and SINT are latest Siamese based trackers, and CSR-DCF,
RTT and ACFN employ attention mechanisms, and GO-
TURN and SiamFC are recent fast deep trackers. All the
trackers were initialized with ground-truth object state in
the ﬁrst frame and average success plots were reported.

Fig. 8 exhibits the success plot in AUC and running
speed in frames per second (fps) on OTB-2013 and OTB-
2015. On the results of OTB-2013, CREST tracker per-
forms the best against the other trackers at a speed of 2fps.
The proposed RASNet tracker achieves an AUC score of
67.0% at real-time speed (83fps). ACFN obtains an AUC
score of 60.7%.
It adopts an attention mechanism to se-
lect a tracker and is required to maintain 260 trackers at
the same time, which makes it less efﬁcient. RTT and
CSR-DCF achieve AUC scores of 60.7% and 59.9%, re-
spectively. They both utilize saliency to regularize correla-
tion ﬁlters with hand-crafted features. Although recent fast
trackers GOTURN runs two times faster than ours, the per-
formance drops by more than 25%.

On the results of OTB-2015, our proposed method, RAS-
Net, occupies the best one, outperforming the second best
tracker CREST by a gain of 1.9% in AUC score, and at the
same time our running speed is an order of magnitude faster
than CREST. Both CREST and ours employed residual
learning, but the aggressive online learning of CREST hin-
ders the running speed. Among the trackers using Siamese
network, ours outperforms SINT with a relative improve-
ment of 5% in AUC score. SiamFC is a seminal tracking
framework, but the performance is still left behind by the
recent state-of-the-art methods. Even though CFNet adds a

0.4

0.3

0.2

0.1

0

RASNet

RASNet

SiamFC

61

56

51

46

41

36

31

26

21

16

11

6

1

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 9. An illustration of the expected average overlap plot on
the VOT2015 challenge.

Figure 10. An illustration of the expected average overlap plot on
the VOT2017 challenge. The gray horizontal line indicates the
VOT2017 state-of-the-art bound.

correlation layer based on SiamFC, it obtains a limited per-
formance gain. Incorporating our attention mechanisms to
the RASNet tracker elevates us to an AUC score of 64.2%,
leading to a consistent gain of 6% and 7.5% in AUC socre,
compared to SiamFC and CFNet.

Besides the one-pass evaluation(OPE), temporal robust-
ness evaluation (TRE) and spatial robustness evaluation
(SRE) are reported to examine the network sensitivity to the
initialization temporally and spatially. Our RASNet tracker
obtains the best TRE and SRE AUCs, which demonstrates
that our method achieves robustness to different temporal
and spatial initializations.
Experiments on VOT2015 and VOT2017

In this section the latest version of the Visual Object
Tracking toolkit (vot2017-challenge) is used. The toolkit
applies a reset-based methodology. Whenever a failure
(zero overlap with the ground truth) is detected, the tracker
is re-initialized ﬁve frames after the failure. The perfor-
mance is measured in terms of expected average overlap
(EAO), which quantitatively reﬂects both robustness and
accuracy. In addition, VOT2017 also newly introduced a
real-time experiment. We report all these metrics com-
pared with a number of the latest state-of-the-art trackers
on VOT2015 [15] and VOT2017 [28].

The EAO curve evaluated on VOT2015 is presented in
Fig. 9 and 62 other state-of-the-art trackers are compared.
The results of the proposed tracker are on par with that of
the state-of-the-art algorithms and is the second best with a
EAO score of 0.327. The best tracker, MDNet, employs dif-
ferent tracking benchmarks for training, while our tracker
does not employ any tracking benchmark in ofﬂine training.
Furthermore, our tracker is 80× faster than MDNet.

For the assessment on VOT2017, Fig. 10 reports the re-
sults of ours against 51 other state-of-the-art trackers with
respect to the EAO score. RASNet ranked fourth. Among
the three trackers that perform better than ours, CFCF [18]
and CFWCR [20] apply continuous convolution operator as
the baseline approach. The top performer LSART [43] com-
bines kernelized ridge regression with CNN. Fig. 10 also
reveals the EAO values in the real-time experiment denoted
by red points. Our tracker obviously is the top-performer
followed by SiamDCF [50] among the top ten best trackers
with respect to baseline EAO.

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 11. The EAO scores for the real-time experiment on
VOT2017 challenge.

We further report the EAO scores for the real-time exper-
iment as shown in Fig. 11. The realtime experiment simu-
lates a situation where a tracker processes images as if pro-
vided by a continuously running sensor [28]. We ranked
top one on this evaluation as shown in Fig. 11, which veri-
ﬁes that our track achieves a fast processing speed as well as
excellent performance and shows a potential to the practical
tracking application.

5. Conclusions

This paper proposes a new deep architecture named
RASNet, especially designed for online visual tracking. It
incorporates diverse attention mechanisms embedded in an
end-to-end Siamese network. The attention mechanisms
consist of a general attention ofﬂine trained on labeled VID,
a residual attention adapting the ofﬂine trained model to on-
line tracking by encoding information about the speciﬁc tar-
get, and a channel attention reﬂecting channel-wise quality
of features. RASNet is evaluated on OTB-2013, OTB-2015,
VOT2015 and VOT2017. Signiﬁcant improvements of the
RASNet tracker over the state of the arts are obtained. Fur-
thermore, the proposed RASNet tracker runs at 83 frames
per second, which is far beyond real-time.

6. Acknowledgements

This work is supported by the Natural Science Founda-
tion of China (Grant No. 61672519, 61751212, 61472421,
61602478, 61502026), the NSFC general technology col-
laborative Fund for basic research (Grant No. U1636218),
the Key Research Program of Frontier Sciences, CAS,
Grant No. QYZDJ-SSW-JSC040, and the CAS External
cooperation key project.

0.4

0.3

0.2

0.1

0

0.25

0.2

0.15

0.1

0.05

0

4861

References

[1] A. Agarwala, A. Hertzmann, D. H. Salesin, and S. M.
Seitz. Keyframe-based tracking for rotoscoping and anima-
tion. ACM Transactions on Graphics, 23(3):584–591, Aug.
2004. 1

[2] L. Bertinetto, J. Valmadre, J. F. Henriques, A. Vedaldi, and
P. H. Torr. Fully-convolutional siamese networks for ob-
ject tracking. In European Conference on Computer Vision,
pages 850–865, 2016. 1, 2, 4, 6, 7

[3] D. Bolme, J. Beveridge, B. Draper, and Y. Lui. Visual ob-
ject tracking using adaptive correlation ﬁlters. In IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2544–2550, 2010. 1

[4] S. Boyd and L. Vandenberghe. Convex Optimization. Cam-

bridge University Press, 2004. 3

[5] J. Choi, H. J. Chang, S. Yun, T. Fischer, and Y. Demiris. At-
tentional correlation ﬁlter network for adaptive visual track-
In IEEE Conference on Computer Vision and Pattern
ing.
Recognition, pages 4807–4816, 2017. 2, 7

[6] Q. Chu, W. Ouyang, H. Li, X. Wang, B. Liu, and N. Yu.
Online multi-object tracking using cnn-based single object
tracker with spatial-temporal attention mechanism. In IEEE
International Conference on Computer Vision, Oct 2017. 2
[7] Z. Cui, S. Xiao, J. Feng, and S. Yan. Recurrently target-
attending tracking. In IEEE Conference on Computer Vision
and Pattern Recognition, June 2016. 2, 7

[8] M. Danelljan, G. Bhat, F. Shahbaz Khan, and M. Felsberg.
Eco: Efﬁcient convolution operators for tracking. In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 6638–6642, 2017. 1, 2, 7

[9] M. Danelljan, G. H¨ager, F. Khan, and M. Felsberg. Accu-
In British

rate scale estimation for robust visual tracking.
Machine Vision Conference, 2014. 7

[10] M. Danelljan, G. H¨ager, F. S. Khan, and M. Felsberg. Adap-
tive decontamination of the training set: A uniﬁed formula-
tion for discriminative visual tracking. In IEEE Conference
on Computer Vision and Pattern Recognition, pages 1430–
1438, 2016. 4, 7

[11] M. Danelljan, G. Hager, F. Shahbaz Khan, and M. Fels-
berg. Convolutional features for correlation ﬁlter based vi-
In IEEE International Conference on Com-
sual tracking.
puter Vision Workshops, pages 58–66, 2015. 2

[12] M. Danelljan, A. Robinson, F. Khan, and M. Felsberg. Be-
yond correlation ﬁlters: Learning continuous convolution
In European Conference on
operators for visual tracking.
Computer Vision, 2016. 1, 2

[13] W. Du, Y. Wang, and Y. Qiao. Rpan: An end-to-end recur-
rent pose-attention network for action recognition in videos.
In IEEE International Conference on Computer Vision, Oct
2017. 2, 4

[14] A. Emami, F. Dadgostar, A. Bigdeli, and B. Lovell. Role
of spatiotemporal oriented energy features for robust visual
tracking in video surveillance. In IEEE International Con-
ference on Advanced Video and Signal-Based Surveillance,
pages 349–354, 2012. 1

[15] M. K. et al. The visual object tracking vot2015 challenge re-
sults. In IEEE International Conference on Computer Vision
Workshops, pages 564–586, 2015. 1, 2, 8

[16] M. K. et al. The visual object tracking vot2016 challenge
results. In European Conference on Computer Vision Work-
shops, pages 777–823, 2016. 1, 2

[17] J. Fan, Y. Wu, and S. Dai. Discriminative spatial attention
for robust tracking. In European Conference on Computer
Vision, pages 480–493, 2010. 2

[18] E. Gundogdu and A. A. Alatan. Good features to correlate
for visual tracking. arXiv preprint arXiv:1704.06326, 2017.
8

[19] Q. Guo, W. Feng, C. Zhou, R. Huang, L. Wan, and S. Wang.
Learning dynamic siamese network for visual object track-
ing. In IEEE International Conference on Computer Vision,
Oct 2017. 2, 3

[20] Z. He, Y. Fan, J. Zhuang, Y. Dong, and H. Bai. Correla-
tion ﬁlters with weighted convolution responses. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1992–2000, 2017. 8

[21] D. Held, S. Thrun, and S. Savarese. Learning to track at 100
fps with deep regression networks. In European Conference
Computer Vision, pages 749–765, 2016. 1, 2, 7

[22] J. Henriques, R. Caseiro, P. Martins, and J. Batista. High-
IEEE
speed tracking with kernelized correlation ﬁlters.
Transactions on Pattern Analysis and Machine Intelligence,
37(3):583–596, 2015. 1, 3, 7

[23] S. Hong, T. You, S. Kwak, and B. Han. Online tracking by
learning discriminative saliency map with convolutional neu-
ral network. In International Conference on Machine Learn-
ing, pages 1–10, 2015. 2

[24] J. Hu, L. Shen, and G. Sun. Squeeze-and-excitation net-
works. arXiv preprint arXiv:1709.01507, 2017. 2, 5
[25] M. Isard and A. Blake. Condensation—conditional density
International Journal of

propagation for visual tracking.
Computer Vision, 29(1):5–28, Aug 1998. 2

[26] M.

Jaderberg, K. Simonyan, A. Zisserman,

and
In Ad-
k. kavukcuoglu.
vances in Neural Information Processing Systems, pages
2017–2025, 2015. 2

Spatial transformer networks.

[27] H. Kiani Galoogahi, A. Fagg, and S. Lucey. Learning
background-aware correlation ﬁlters for visual tracking. In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 1135–1143, 2017. 1

[28] M. Kristan, A. Leonardis,

J. Matas, M. Felsberg,
R. Pﬂugfelder, L. Cehovin Zajc, T. Vojir, G. Hager,
A. Lukezic, A. Eldesokey, and G. Fernandez. The visual
object tracking vot2017 challenge results. In The IEEE Inter-
national Conference on Computer Vision (ICCV), Oct 2017.
1, 7, 8

[29] H. Li, Y. Li, and F. Porikli. Deeptrack: Learning discrimina-
tive feature representations online for robust visual tracking.
IEEE Transactions on Image Processing, 25(4):1834–1848,
2016. 2

[30] X. Li, W. Hu, C. Shen, Z. Zhang, A. Dick, and A. V. D. Hen-
gel. A survey of appearance models in visual object tracking.
ACM Transactions on Intelligent Systems and Technology,
4(4):58:1–58:48, 2013. 1, 2

4862

[47] A. Vedaldi and K. Lenc. Matconvnet: Convolutional neural
networks for matlab. In ACM International Conference on
Multimedia, pages 689–692. ACM, 2015. 6

[48] F. Wang, M. Jiang, C. Qian, S. Yang, C. Li, H. Zhang,
X. Wang, and X. Tang. Residual attention network for image
classiﬁcation. In IEEE Conference on Computer Vision and
Pattern Recognition, pages 3156–3164, 2017. 2

[49] L. Wang, W. Ouyang, X. Wang, and H. Lu. Visual tracking
In IEEE International
with fully convolutional networks.
Conference on Computer Vision, pages 3119–3127, 2015. 1,
2, 7

[50] Q. Wang, J. Gao, J. Xing, M. Zhang, and W. Hu. Dcfnet:
Discriminant correlation ﬁlters network for visual tracking.
In arXiv preprint arXiv:1704.04057, 2017. 8

[51] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In IEEE Conference on Computer Vision and

benchmark.
Pattern Recognition, pages 2411–2418, 2013. 1, 2, 7
[52] Y. Wu, J. Lim, and M.-H. Yang. Object tracking benchmark.
IEEE Transactions on Pattern Analysis and Machine Intelli-
gence, 37(9):1834–1848, 2015. 1, 2, 7

[53] A. Yilmaz, O. Javed, and M. Shah. Object tracking: A sur-
vey. ACM Computing Surverys, 38(4):1–45, 2006. 1, 2
[54] M. Zhang, J. Xing, J. Gao, and W. Hu. Robust visual tracking
using joint scale-spatial correlation ﬁlters. In IEEE Interna-
tional Conference on Image Processing, pages 1468–1472,
2015. 1

[55] M. Zhang, J. Xing, J. Gao, X. Shi, Q. Wang, and W. Hu.
Joint scale-spatial correlation tracking with adaptive rotation
estimation. In IEEE International Conference on Computer
Vision Workshops, pages 32–40, 2015. 1

[31] L. Liu, J. Xing, and H. Ai. Multi-view vehicle detection and
tracking in crossroads. In Proceedings of the Asian Confer-
ence on Pattern Recognition, pages 608–612, 2011. 1
[32] L. Liu, J. Xing, H. Ai, and X. Ruan. Hand posture recog-
nition using ﬁnger geometric feature. In IEEE International
Conference on Pattern Recognition, pages 565–568, 2012. 1
[33] A. Lukezic, T. Vojir, L. Cehovin Zajc, J. Matas, and M. Kris-
tan. Discriminative correlation ﬁlter with channel and spatial
reliability. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2017. 1, 2, 5, 7

[34] W. Luo, J. Xing, A. Milan, X. Zhang, W. Liu, X. Zhao, and
T. Kim. Multiple object tracking: A literature review. arXiv
preprint arXiv:1409.7618, 2014. 2

[35] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchical
In IEEE Inter-
convolutional features for visual tracking.
national Conference on Computer Vision, pages 3074–3082,
2015. 2, 7

[36] H. Nam and B. Han. Learning multi-domain convolutional
In IEEE Conference
neural networks for visual tracking.
on Computer Vision and Pattern Recognition, pages 4293–
4302, 2016. 1, 2

[37] A. Newell, K. Yang, and J. Deng. Stacked hourglass net-
works for human pose estimation. In European Conference
on Computer Vision, 2016. 1

[38] B. A. Olshausen, C. H. Anderson, and D. C. Van Essen. A
neurobiological model of visual attention and invariant pat-
tern recognition based on dynamic routing of information.
Journal of Neuroscience, 13(11):4700–4719, 1993. 2
[39] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein,
A. C. Berg, and L. Fei-Fei.
ImageNet Large Scale Visual
Recognition Challenge. International Journal of Computer
Vision, 115(3):211–252, 2015. 6

[40] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 2

[41] A. W. Smeulders, D. Chu, R. Cucchiara, S. Calderara, A. De-
hghan, and M. Shah. Visual tracking: An experimental sur-
IEEE Transactions on Pattern Analysis and Machine
vey.
Intelligence, 36(7):1442–1468, 2014. 1, 2

[42] Y. Song, C. Ma, L. Gong, J. Zhang, R. W. H. Lau, and M.-
H. Yang. Crest: Convolutional residual learning for visual
In IEEE International Conference on Computer
tracking.
Vision, Oct 2017. 7

[43] C. Sun, H. Lu, and M.-H. Yang.
aware regressions for visual
arXiv:1706.07457, 2017. 1, 8

tracking.

Learning spatial-
arXiv preprint

[44] R. Tao, E. Gavves, and A. W. M. Smeulders. Siamese in-
stance search for tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2016. 1, 2, 3, 7

[45] Z. Teng, J. Xing, Q. Wang, C. Lang, S. Feng, and Y. Jin.
Robust object tracking based on temporal and spatial deep
networks. In IEEE International Conference on Computer
Vision, Oct 2017. 2

[46] J. Valmadre, L. Bertinetto, J. F. Henriques, A. Vedaldi, and
P. H. Torr. End-to-end representation learning for correla-
tion ﬁlter based tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2017. 2, 3, 4, 7

4863

Learning Attentions: Residual Attentional Siamese Network
for High Performance Online Visual Tracking
Qiang Wang1,3∗, Zhu Teng2∗, Junliang Xing3†, Jin Gao3, Weiming Hu1,3, Stephen Maybank4
1University of Chinese Academy of Sciences, Beijing, China
2School of Computer and Information Technology, Beijing Jiaotong University, Beijing, China
3National Laboratory of Pattern Recognition, Institute of Automation, Chinese Academy of Sciences, Beijing, China
4Department of Computer Science and Information Systems, Birkbeck College, University of London, UK.
{qiang.wang, jlxing, jin.gao, wmhu}@nlpr.ia.ac.cn zteng@bjtu.edu.cn sjmaybank@dcs.bbk.ac.uk

Abstract

Ofﬂine training for object tracking has recently shown
great potentials in balancing tracking accuracy and speed.
However, it is still difﬁcult to adapt an ofﬂine trained model
to a target tracked online. This work presents a Residual At-
tentional Siamese Network (RASNet) for high performance
object tracking. The RASNet model reformulates the corre-
lation ﬁlter within a Siamese tracking framework, and intro-
duces different kinds of the attention mechanisms to adapt
the model without updating the model online. In particular,
by exploiting the ofﬂine trained general attention, the tar-
get adapted residual attention, and the channel favored fea-
ture attention, the RASNet not only mitigates the over-ﬁtting
problem in deep network training, but also enhances its dis-
criminative capacity and adaptability due to the separation
of representation learning and discriminator learning. The
proposed deep architecture is trained from end to end and
takes full advantage of the rich spatial temporal informa-
tion to achieve robust visual tracking. Experimental results
on two latest benchmarks, OTB-2015 and VOT2017, show
that the RASNet tracker has the state-of-the-art tracking ac-
curacy while runs at more than 80 frames per second.

1. Introduction

Online visual tracking of an arbitrary temporally chang-
ing object, speciﬁed at the ﬁrst frame, is an extensively stud-
ied problem in computer vision [30, 41, 53]. It still remains
very challenging due to practical factors like scale varia-
tion, fast motion, occlusions, deformation, and background
clutter [52]. High performance visual tracking algorithms
with good tracking accuracy and efﬁciency are required by
many applications like visual surveillance [14], trafﬁc mon-
itoring [31], human-computer interaction [32], and video
editing [1], to name a few.

One of the most successful tracking frameworks is Cor-
relation Filter (CF) [3,8,22,27,33,54,55]. Algorithms based
on correlation ﬁltering have demonstrated superior compu-

∗Equal contribution.
†Corresponding author.

tational efﬁciency and fairly good tracking accuracy. One
notable example is the MOSSE tracker [3] with the running
speed of about 700 frames per second. The main reasons for
its high running speed are the replacement of the exhausted
convolutions with element-wise multiplications using Fast
Fourier Transform, as well as the adoption of relatively
simple image features. For complex tracking scenarios,
however, the performance of CF trackers with hand-crafted
features often drops considerably. Recently, deep learning
models [8,36,43,49], have become an essential oracle to im-
prove the tracking accuracy, mainly due to their large model
capacities and strong feature learning abilities. By exten-
sively training large deep networks on large datasets ofﬂine
and aggressively learning the target sequence online, those
trackers have obtained record-breaking results on all recent
benchmarks [51, 52] and challenges [15, 16, 28].

Despite all these signiﬁcant progress, most deep learn-
ing based tracking methods still cannot attain consummate
results. One issue is that the deep feature learned ofﬂine
sometimes cannot adapt well to speciﬁc target during track-
ing.
If the deep feature extractor is learnt online then it
tends to overﬁt the target. Moreover, the online learning
of the feature extractor, its updating process, and even its
inference process, are all computationally expensive. This
prevents a tracking algorithm from performing all these op-
erations simultaneously at each frame [2, 12, 21, 44]. Moti-
vated by these considerations, we develop an effective and
efﬁcient deep learning based tracking approach to produce
high performance visual tracking. To this end, we adapt
the model architecture and training objective for more ef-
fective feature learning, and also introduce different kinds
of attention mechanisms into the tracking model learning to
produce more adaptive discriminative learning.

In particular, a new end-to-end deep architecture, named
Residual Attentional Siamese Network (RASNet), is de-
signed to learn both effective feature representation and de-
cision discriminators. The backbone of the attention mod-
ule in the RASNet is an Hourglass-like Convolutional Neu-
[37] to learn contextualized
ral Network (CNN) model
and multi-scaled feature representation. The residual learn-
ing within the RASNet further helps to encode more adap-

4854

tive representation of the object from multiple levels and
a weighted cross correlation layer is proposed to learn the
Siamese structure. The proposed RASNet extensively ex-
plores diverse attentional mechanisms to adapt the ofﬂine
learned feature representations to a speciﬁc tracking tar-
get. To guarantee high tracking efﬁciency, all these learning
processes are performed during the ofﬂine training stage.
Extensive analyses and evaluations on the latest tracking
benchmarks [51, 52] and challenges [15, 16] verify the ef-
fectiveness and efﬁciency of the proposed model.

To summarize, the main contributions of this work are

three-fold.

• An end-to-end deep architecture speciﬁcally designed
for the object tracking problem is proposed. The deep
architecture inherits the merits from many recent mod-
els like Hourglass structure, residual skip connection,
as well as our newly proposed weighted cross corre-
lations to produce effective deep feature learning for
visual tracking.

• Different kinds of attention mechanisms are explored
within the RASNet. These mechanisms include the
General Attention, Residual Attention, and Channel
Attention. The ofﬂine learned feature representations
are thus adapted to the online tracking target, to greatly
alleviate over-ﬁtting.

• Very effective and efﬁcient deep learning based tracker
is developed. It performs favorably against a number
of state-of-the-art trackers with the running speed over
80 frames per seconds. To facilitate further studies,
our source code and trained models are available at:
https://github.com/foolwood/RASNet.

2. Related Works

The most relevant tracking methods and techniques are
discussed. In particular, deep feature based tracking meth-
ods, end-to-end network learning based tracking methods,
as well as attention mechanisms are examined. The reader
is referred to more thorough reviews on object tracking sur-
vey [30, 34, 53] and benchmark evaluations [41, 52].

Deep feature based tracking. Recently deep features have
been widely employed to boost performance in tracking due
to its superior representation power. Some trackers combine
deep features with correlation ﬁlters. For example, CF2 [35]
and DeepSRDCF [11] concatenated features from different
layers of a pretrained CNN such as VGG [40] into corre-
lation ﬁlter. CCOT [12] and ECO [8] constructed trackers
based on the continuous convolution ﬁlters. Tracking can
also be regarded as a classiﬁcation or regression problem.
Accordingly, another approach to introduce deep features in
tracking borrows from classiﬁcation or regression network.
For instance, CNN-SVM tracker [23] utilized CNN model
with saliency map and SVM. FCNT [49] proposed feature

selection in a regression framework. DeepTrack [29] casted
tracking as a classiﬁcation problem and employed a candi-
date pool of multiple CNN as a data-driven model of dif-
ferent instances of the target object. The TSN tracker [45]
proposed a CNN network encoding temporal and spatial in-
formation in the context of classiﬁcation. The advantage of
these methods is they use the outstanding representations of
deep networks. However, these online only approaches do
not train the method on the ofﬂine dataset. This limits the
richness of the model, and the tracking speed is reduced if
online training or updating of the deep network are required.

End-to-End learning based tracking. To obtain the bene-
ﬁts of end-to-end learning, researchers train deep models on
videos ofﬂine and evaluate the model on the target tracking
benchmark for online tracking [2, 19, 21, 36, 44]. The key
points are how to formulate the tracking problem and how
to design the ofﬂine training loss function. The SINT [44]
formulated visual tracking as a veriﬁcation problem and
trained a Siamese architecture to learn a metric for on-
line target matching. SiamFC [2] brought cross correlation
into a fully-convolutional Siamese network. The GOTURN
[21] concatenated pairs of consecutive frames and learnt
the target tracking states by regression. The MDNet [36]
treated tracking as a classiﬁcation problem, and learnt an
ofﬂine deep feature extractor and then online updated the
classiﬁer by adding some learnable fully-connected layers
to perform online tracking within the Particle Filter frame-
work [25]. CFNet [46] interpreted the correlation ﬁlter
learner as a differentiable layer in a deep neural network.
These approaches advance the development of end-to-end
deep tracking models and achieve very good results on re-
cent benchmarks [51,52] and challenges [15,16]. However,
over-ﬁtting might occur when training their models using
similar benchmarks.

Attention mechanisms. Attention mechanisms were ﬁrst
used in neuroscience area [38]. They have spread to other
areas such as image classiﬁcation [24, 26, 48], pose esti-
mation [13], multi-object tracking [6], etc. For short-time
tracking, DAVT [17] used a discriminative spatial attention
for object tracking and afterwards ACFN [5] developed an
attentional mechanism that chose a subset of the associated
correlation ﬁlters for tracking. On the other hand, RTT [7]
drew attention to possible targets by a multidirectional RNN
to generate saliency and CSR-DCF [33] constructed a fore-
ground spatial reliability map by using color histograms to
constrain correlation ﬁlter learning. In contrast to these at-
tention mechanisms, it is proposed to learn the attention
through an end-to-end deep network. This attention mech-
anism consists of a general attention learning from ofﬂine
training dataset and a residual attention estimated by a resid-
ual net, which incorporates beneﬁts from both ofﬂine train-
ing dataset and the online target of live tracking.

4855

e
r
u
t
a
e
F

e
r
u
t
a
e
F

Co(cid:374)(cid:448)Net

Rtsidual

 Attente

ρ~ 

Gtetral

 Attente

ρ  

Chaeetl

 Attente

β 

g
(cid:374)

i
l

o
o
p

 
l

a
(cid:271)
o
G

l

(cid:1005)
(cid:272)
f

l

u
e
r

(cid:1006)
(cid:272)
f

i

d
o
(cid:373)
g
S

i

WXCtrr

Co(cid:374)(cid:448)Net

 (cid:272)ha(cid:374)(cid:374)el-(cid:449)ise s(cid:272)ale

ele(cid:373)e(cid:374)t-(cid:449)ise su(cid:373)(cid:373)atio(cid:374)

Figure 1. Pipeline of RASNet. The RASNet is constituted by a shared feature extractor, attention mechanisms (general attention, residual
attention, channel attention), and the weighted cross correlation layer (WXCorr). When a pair of an exemplar and a search image ﬂows into
the net, feature maps are produced through the feature extractor. Based on the exemplar features, three types of attentions are extracted.
Exemplar and search features, along with the attentions as weights are inputed to WXCorr and ﬁnally transformed to a response map.

3. Residual Attentional Siamese Network

To produce effective and efﬁcient visual tracking, a novel
deep architecture named Residual Attentional Siamese Net-
work (RASNet) is proposed. Fig. 1 shows the pipeline
of the proposed RASNet tracker.
In contrast to previous
deep architectures for tracking, the RASNet reformulates
the Siamese tracking from a regression prospective, and
propose a weighted cross correlation to learn the whole
Siamese model from end to end. As shown in Fig. 1, the
weighted cross correlation explores different kinds of at-
tention mechanisms, i.e., general attention, residual atten-
tion, and channel attention, to adapt the ofﬂine learned deep
model to online tracking target.

3.1. Siamese Tracker Introduction

The object tracking problem can be formulated as a re-

gression problem by:

min
w

k Aw − y k2

2 +λ k w k2
2,

where matrix A is a set of feature vectors of the training
samples, vector y is the corresponding labels, and k · k2
denotes the ℓ2-norm of a vector. The solution is described
in Eq. (2).

w = (A⊤A + λI)−1A⊤y.

Since the computation of the inverse matrix is computation-
ally costly, it is difﬁcult to use Eq. (2) directly in object
tracking. The above problem can also be solved in the dual
form [4], with the result as in Eq. (3):

(1)

(2)

(3)

w = A⊤α.

From Eq. (3) we can observe that the dual form decouples
feature representation from discriminator learning, and

here α reﬂects the discriminator part. For regression based
tracking algorithms, e.g. KCF [22], the essential problem is
how to learn an estimation of α.

As a contrast, the Siamese Tracker [19,44] learns a func-
tion f (z, z′) to compare an exemplar image z to a candidate
image z′ of the same size. Comparisons with multiple can-
didates can be implemented by a correlation between the
exemplar and a search image with a larger size and obtain a
response map as depicted in Eq. (4), where x indicates the
search image.

f (z, x) = φ(z) ∗ φ(x) + b · ✶.

(4)

From Eq. (4) we can observe that the Siamese tracker
needs to simultaneously perform feature representation and
discriminator learning in one function φ(·). Let φ(z) inter-
pret as the feature vector of the training sample z, and com-
pare to Eq. (3), the discriminator part of Siamese tracker
corresponds to learning an α with unit vector from only one
sample. This interpretation gives an essential exposure on
the limitations of the original Siamese tracker. Moreover,
the joint learning of feature representation and discrimina-
tor also makes the model very easy to be over-ﬁtting.

To overcome the limitations of the Siamese tracker,
CFNet [46] improves SiamFC by using a circulant matrix
online to approximate a solution for α. The computation
load is reduced by the use of circulant matrix but the ap-
proximate solution inevitably brings in a boundary effect
and the aggressive online learning also depresses the gen-
eralization capacity, and the performance of CFNet is no
better than that of SiamFC. In this work, a better Siamese
tracker is obtained by designing a network that decouples
discriminator learning from feature representation learning
with a weighted cross correlation powered by multiple at-
tention mechanisms.

4856

Co(cid:374)(cid:448)Net

Figure 2. An example of feature producing in Siamese network.
The green and blue boxes in the cubic contain feature maps for the
corresponding green and blue windows.

3.2. Weighted Cross Correlation

To overcome the limitations of Siamese tracker,
the
Siamese network is reformulated by the inclusion of a
weighted cross correlation. This weighted correlation layer
is general and can be used in other Siamese networks. The
intuition behind this idea is that not every constituent pro-
vides the same contribution to the cross correlation oper-
ation in the Siamese network. As shown in Fig. 2, obvi-
ously, the object within the blue rectangular region should
be reﬂected more to the cross correlation operation com-
pared with the green rectangular region.

We expand Eq. (4) more precisely and replenish the tar-
get feature maps φ(z) ∈ Rm×n×d, the search image feature
maps φ(x) ∈ Rp×q×d and the response f ∈ Rp′×q′
, where
p > m, q > n, p′ = p − m + 1, q′ = q − n + 1.

fp′,q′ =

φi,j,c(z)φp′+i,q′+j,c(x) + b

(5)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

The contribution of each spatial position φ(z) in Eq. (5)
is not always the same. Thus, we propose the weighted
cross correlation function to distinguish the importance of
each sample as shown in Eq. (6).

fp′,q′ =

γi,j,cφi,j,c(z)φp′+i,q′+j,c(x) + b (6)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

f (z, x) = (γ ⊙ φ(z)) ∗ φ(x) + b · ✶.

(7)

The way to bring γ in Eq. (7) is named as an attention
mechanism and the formulation is called full attention. We
propose to learn this attention from deep network. Heuris-
tically, in visual tracking the center of the image is more
useful than the border because more of the target is likely to
be visible. The weighted cross correlation encodes both the
importance of samples (36 samples in SiameseFC-AlexNet)
and the features from different channels in exemplar image.
While the solution of a suitable parameter γ in Eq. (6) is
very difﬁcult to obtain as it imports too many parameters.
We further decompose the full attention γ into a dual atten-
tion ρ portraying the tracking target and a channel attention

β interpreting feature channels and propose a joint form as
shown in Eq. (8). Apparently, the number of parameters in
the full form is m · n · d, while the parameter number of the
joint form is m · n + d, which is largely reduced and easy to
tune. We execute a comparative experiment in Sec. 4.2.

fp′,q′=

ρi,jβcφi,j,c(z)φp′+i,q′+j,c(x)+b (8)

m−1

n−1

d−1

X
i=0

X
j=0

X
c=0

3.3. Dual Attention

The dual attention ρ in Eq. (8) is learnt by a deep net-
work. This section concentrates on the training process,
which is also a trend for recent trackers [2, 13], because for
object tracking there is limited information to train a brand-
new deep model online.

One way to capture the attention from training data is
to constrain all data to share a common attention. We then
train the attention ρ with m · n parameters using the initial-
ization of matrix of ones. It is consistent with a common as-
sumption in tracking as similar to the method in [10]. How-
ever, in practical applications, it is too restrictive to con-
strain all training data and the live tracking target to share
a single shared structure. We therefore propose to model
the dual attention as a general attention superimposed by a
residual attention as shown in Eq. (9). The intuition behind
this idea is that any one estimation might not capture both
the common characteristics and distinctions of targets in
different videos while a superposition of estimations might.
The residual attention encodes the global information of the
target and has low computation complexity.

ρ = ¯ρ + ˜ρ

(9)

The general part ¯ρ in Eq. (9) encodes a generality learn-
ing from all training samples, while the residual part ˜ρ de-
scribes the distinctiveness between the live tracking target
and the learnt common model. The adaptation to the spe-
ciﬁc tracking target via the residual attention net can also be
viewed as a discriminator. The general attention ¯ρ we learnt
(see more details in Sec. 4.2) is similar to a Gaussian distri-
bution which accords with the common sense. SRDCF [10]
directly employs a Gaussian distribution but uses a hand-
crafted setting for parameters rather than learning from a
deep network. CFNet [46] also executed an experiment to
set the dual variable at a constant but the approach lacks
adaptation and it is difﬁcult to use circulant matrix to en-
code spatial localization. Overall, with this simple decom-
position we are able to leverage any extent of attentions,
while allowing disparities in values of the parameters, so
that the RASNet tracker gets a better performance than ei-
ther the general attention or a special type attention.

3.4. Channel Attention

A convolutional feature channel often corresponds to a
certain type of visual pattern. Therefore, in certain cir-

4857

ConvNet

Figure 3. Dual attention.
It is an annexation of the general at-
tention and the residual attention responded through an encoding-
decoding net that improves the attention near object boundaries.

cumstance some feature channels are more signiﬁcant than
the others. The channel attention module can be viewed
as the process of selecting semantic attributes for differ-
ent contexts [24]. Our goal is to keep the adaptation abil-
ity of deep network to the appearance variation of the tar-
get. CSRDCF [33] also contains a channel weight in their
tracker, but it is obtained via an optimization problem. In
this work, we propose to learn the channel attention using
a deep network. Channel attention is only involved in the
forward process of live tracking, which contributes a lot to
the tracking efﬁciency. The channel attention net is com-
posed by a dimension reduction layer with reduction ratio
r (set to 4), a ReLU, and then a dimension increasing layer
with a sigmoid activation. Given a set of d channel fea-
tures Z = [z1, z2, ..., zd] with zi ∈ RW ×H , i = 1, 2, ..., d,
the ﬁnal output of the net (denoted as ˜Z = [˜z1, ˜z2, ..., ˜zd]
with ˜zi ∈ RW ×H , i = 1, 2, ..., d) is achieved by executing
channel-wise re-scaling on the input as presented in Eq. (10)
where β is the parameter for channel attention.

˜zi = βi · zi

i = 1, 2, . . . , d

(10)

3.5. Network Architecture

The proposed network is designed by three attention
modules conjuncted by the weighted correlation layer. Gen-
eral attention is directly trained ofﬂine and initialized as ma-
trix of ones, and the residual attention is presented in Fig. 3
where hourglass structure is utilized. Channel attention is
a computational unit that can be constructed for any given
transformation. It contains a dimension reduction layer and
a dimension increasing layer and is activated by Sigmoid.

In the ofﬂine training of Siamese based tracker, the loss
function of a training pair is generally depicted as logistic
function as shown in Eq. (11) where Zi is an exemplar, Xj
is a search image, ∇ is the set of all the shifting positions
on the search image and u describes a sample of the same
size with the exemplar. While the selection of training pair
for Siamese network is subtle since the frames of a video
encode temporal information.

L(Zi, Xj) =

log(1 + exp(−Z[u] · X[u]))

(11)

1
|∇| X
u∈∇

Deﬁne {Xt}v as the instance set and {Zt}v as the exem-
plar set for training on the vth video sequence. Let ℵ be the

#1

#5

#2

#6

#3

#7

#4

#8

Figure 4. Illustration on training pair selection for Siamese net-
work. Eight frames are exhibited to represent frames of a se-
quence. For a typical Siamese network, a training pair is con-
sisted by randomly selected two frames. Thus, (#1, #4) pair is
completely possible to be chosen, which can result in over-ﬁtting.

sample feature space, for ∀Zi, Xj ∈ ℵ, i 6= j, a mini-batch
loss function is proposed in Eq. (12).

Lall = X
i

X
j

L(Zi, Xj) · Ω(i, j)

Ω(i, j) = exp(−

|i − j|
σ

)

(12)

(13)

Here, we impose a weighting function Ω(i, j) indicat-
ing temporal validity. In contrast, SiamFC imposed a step
function as the weighting function. Our loss function en-
courages a close-frame selection and puts less focus on a
far-frame selection to avoid over-ﬁtting brought by the fully
occlusion. As illustrated in Fig. 4, our loss function lays
more emphasis on a selection of pair (#3, #4) and pair (#5,
#6) than the selection of pair (#1, #4).

In the stage of network learning, a total number of 3
million pairs are used. For a target frame, 200 pairs are
sampled. We employ a strategy of random selection for the
video sequence, the target frame, and the pair selection. A
training pair is constituted by an exemplar and an instance,
and response ground-truth. The exemplar and instance are
ﬁrst transmitted to their separate branch of Siamese net to
obtain feature map. The exemplar feature map simultane-
ously goes into the residual attention net and the channel
attention net. The channel attention describes a priority
among channels, by which the exemplar feature is channel-
wise multiplied. The channel attention feature is convolved
with the feature extracted from the instance by the dual
attention. This operation is implemented by the weighted
cross correlation layer and generates a response map. The
loss layer is functioned according to Eq. (12).

In the stage of live tracking, the inference of attention
mechanisms is only practised on the ﬁrst frame, which con-
tributes to the high running speed of the proposed tracker.
This ﬁrst frame adaptation reforms the weight distribution
and is a target-level adaptation. Pairs making by the pre-
vious target and three scaled current search regions are re-
ceived by the RASNet, and three response maps are gener-
ated. The target scale and target position are obtained by
maximizing these responses.

4858

4. Experiments

We ﬁrst provide the implementation details, and then
carry out ablative studies and analyse the impact of each
component of RASNet tracker for both the ofﬂine train-
ing process and the online tracking performance. Exten-
sive experiments are conducted to evaluate the RASNet
tracker against plenty of state-of-the-art trackers on OTB-
2013, OTB-2015, VOT2015, and VOT2017 benchmarks.

4.1. Implementation Details

Training Data Preparation. To increase the generaliza-
tion capability and discriminative power of our feature
representation, and in the meantime avoid over-ﬁtting to
the scarce tracking data, our RASNet is pre-trained of-
ﬂine from scratch on the video object detection dataset of
the ImageNet Large Scale Visual Recognition Challenge
(ILSVRC15) [39]. This dataset includes more than 4000 se-
quences with about 1.3 million labelled frames. It is widely
utilized in tracking methods recently as it depicts scenes and
objects distinct to those in the traditional tracking bench-
marks. In each video snippet of an object, we collect each
pair of frames within the nearest 100 frames.
Learning setting. We apply stochastic gradient descent
(SGD) with momentum of 0.9 to train the network from
scratch and set the weight decay to 0.0005. The learning
rate exponentially decays from 10−2 to 10−5. The model
is trained for 50 epochs with a mini-batch size of 32. The
weighting parameter σ in Eq. (13) is set to 100.
Tracking setting.
to the scale varia-
current
tions, we
the
search image with scale factors {qs|q = 1.03, s =
S−1
(cid:4)− S−1
2 (cid:5) , S = 3}. The current target
scale is determined by a linear interpolation with a factor
of 0.56 on the newly predicted scale for a smooth tracking.
The proposed tracker is implemented on MATLAB with
MatConvNet [47] and all the experiments are executed on
a workstation with Intel(R) Xeon(R) CPU E5-2630 v4 @
2.20GHz and a NVIDIA TITAN Xp GPU.

2 (cid:5) , (cid:4)− S−3

search on three

2 (cid:5) , ..., (cid:4)

scales of

To adapt

4.2. Ablation Studies

A study on the training procedure of the Siamese net-
work is ﬁrst conducted on ILSVRC15. SiamFC [2] is in-
tended as the baseline in this section, and is re-trained by
using the released code with default parameter settings.

The training and validation curves of objective vs. epoch
are reported in Fig. 5(a) and it can be observed that the vali-
dation objective begins to rise at an early stage (∼15 epoch)
of the training procedure and there is a big gap between
the training objective and validation objective. Three other
lightweight SiamFC networks (#channels×0.5, ×0.25,
×0.125) are also designed, but similar results are obtained.
The main cause is the twining between the feature rep-
resentation and discriminator learning in one network for

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

0.35

0.3

e
v
i
t
c
e
b
o

j

0.25

0.2

0.15

0.1

0

10

20

30

40

50

10

20

30

40

50

epoch

epoch

(a) SiamFC [2] family

(b) RASNet family

Figure 5. Training on ILSVRC15 VID. The bold curves denote
training objective and the thin curves denote the validation objec-
(a): Training and validation objectives of SiamFC and its
tive.
lightweight varieties.
(b): Training and validation objectives of
GenAtt tracker, DualAtt tracker, ChanAtt tracker, RASNet tracker
compared with SiamFC.

(a) General attention learning

(b) Dual attention results

Figure 6. Visualizations on general attention learning and dual at-
tention results

SiamFC. In contrast, we bring in the attention mechanism
and the weighted correlation layer to decouple representa-
tion learning from discriminator learning.

To highlight each component of RASNet, we examine
the general attention initialized by a matrix of ones with the
size of 6 × 6 and ﬁnd the weights gradually agglomerate to
the center of the matrix as learning proceeds as visualized in
Fig. 6(a), the distribution of which is similar to a Gaussian
distribution where center position shows more importance
than the peripheral zone. While the validation objective of
the general attention (GenAtt in Fig. 5(b)) ameliorates com-
pared with SiamFC but still tends to increase. We analyse
that the reason for such observation is the discrimination
capacity is also associated with the speciﬁc tracking target.
Therefore, we introduce the residual attention to rein-
force the general attention, named as DualAtt model (sev-
eral examples shown in Fig. 6(b)). Compared with GenAtt,
by training with the dual attention, the objective is much
more reasonable, as the network learns more representa-
tive features and has less bias towards the training data.

4859

OTB-2013  Precision plots of OPE

OTB-2013  Success plots of OPE

OTB-2013  Success plots of OPE

OTB-2015  Success plots of OPE

0

0

5

10

20

15

25
Location error threshold

30

35

40

45

50

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(a) OPE on OTB-2013

(b) OPE on OTB-2015

OTB-2015  Success plots of TRE

OTB-2015  Success plots of SRE

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

e
t
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

i

i

n
o
s
c
e
r
P

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

(a) Precision plot

(b) Success plot

Figure 7. Precision and success plots using OPE on OTB-2013.
The performance of RASNet is improved gradually with the addi-
tion of general attention, residual attention, and channel attention.

Furthermore, we construct a ChanAtt model with only the
branch of channel attention equipped, the validation objec-
tive of which converges as well. Lastly, the practical RAS-
Net achieves the best validation accuracy due to the separa-
tion of feature representation from discriminator learning.

Finally, an estimate of each component contribution to
the overall tracking performance is made. Four ablative
trackers (GenAtt, DualAtt, ChanAtt, RASNet) as well as the
baseline tracker SiamFC are evaluated by the AUC score
of success plot on the benchmark of OTB-2013 as shown
in Fig. 7. Compared with SiamFC, GenAtt only adds a
constant general attention with 36 ﬂoating point parame-
ters, while the performance boosts 0.4% measured by the
AUC score as shown in Fig. 7. DualAtt model dramatically
improves the performance by an AUC score of 4.9% com-
pared with GenAtt due to the consideration of an adaptive
discrimination. On the other side, ChanAtt advances the
performance by almost 4% against the baseline. If the chan-
nel attention is reduced to a binary version, it can be viewed
as a feature selector as employed in [8, 49]. The overall
RASNet achieves a gain of 6.3% in AUC score in compar-
ison with SiamFC, which demonstrates the effectiveness of
the attention mechanism in practical tracking.

4.3. Comparison with the State of the Arts

Four benchmarks including OTB-2013, OTB-2015,
VOT2015, and VOT2017 are adopted to demonstrate the
performance of our tracker against a number of state-of-
the-arts. All results in this section are obtained by using
the OTB toolkit [52] and VOT toolkit [28].
Experiments on OTB-2013 and OTB-2015

OTB-2013 [51] is a widely used public tracking bench-
mark consisting by 50 fully annotated sequences. OTB-
2015 dataset [52] expands the sequences in OTB-2013 to
include 100 target objects in the tracking benchmark.

We evaluate the proposed algorithms with comparisons
to numerous state-of-the-art
trackers including CREST
[42], CFNet [46], GOTURN [21], SiamFC [2], SINT [44],
ACFN [5], CSR-DCF [33], RTT [7], HCF [35], SRDCF
[10], KCF [22], and DSST [9]. Note that CFNet, SiamFC,

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

t

e
a
r
 
s
s
e
c
c
u
S

e

t

a
r
 
s
s
e
c
c
u
S

4860

0

0

0.1

0.2

0.8

0.9

1

0.1

0.2

0

0

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.3

0.4

0.5
0.7
Overlap threshold

0.6

0.8

0.9

1

(c) TRE on OTB-2015

(d) SRE on OTB-2015

Figure 8. Success plots showing a comparison of our trackers with
state-of-the-art trackers on the OTB-2013 and OTB-2015 dataset.

and SINT are latest Siamese based trackers, and CSR-DCF,
RTT and ACFN employ attention mechanisms, and GO-
TURN and SiamFC are recent fast deep trackers. All the
trackers were initialized with ground-truth object state in
the ﬁrst frame and average success plots were reported.

Fig. 8 exhibits the success plot in AUC and running
speed in frames per second (fps) on OTB-2013 and OTB-
2015. On the results of OTB-2013, CREST tracker per-
forms the best against the other trackers at a speed of 2fps.
The proposed RASNet tracker achieves an AUC score of
67.0% at real-time speed (83fps). ACFN obtains an AUC
score of 60.7%.
It adopts an attention mechanism to se-
lect a tracker and is required to maintain 260 trackers at
the same time, which makes it less efﬁcient. RTT and
CSR-DCF achieve AUC scores of 60.7% and 59.9%, re-
spectively. They both utilize saliency to regularize correla-
tion ﬁlters with hand-crafted features. Although recent fast
trackers GOTURN runs two times faster than ours, the per-
formance drops by more than 25%.

On the results of OTB-2015, our proposed method, RAS-
Net, occupies the best one, outperforming the second best
tracker CREST by a gain of 1.9% in AUC score, and at the
same time our running speed is an order of magnitude faster
than CREST. Both CREST and ours employed residual
learning, but the aggressive online learning of CREST hin-
ders the running speed. Among the trackers using Siamese
network, ours outperforms SINT with a relative improve-
ment of 5% in AUC score. SiamFC is a seminal tracking
framework, but the performance is still left behind by the
recent state-of-the-art methods. Even though CFNet adds a

0.4

0.3

0.2

0.1

0

RASNet

RASNet

SiamFC

61

56

51

46

41

36

31

26

21

16

11

6

1

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 9. An illustration of the expected average overlap plot on
the VOT2015 challenge.

Figure 10. An illustration of the expected average overlap plot on
the VOT2017 challenge. The gray horizontal line indicates the
VOT2017 state-of-the-art bound.

correlation layer based on SiamFC, it obtains a limited per-
formance gain. Incorporating our attention mechanisms to
the RASNet tracker elevates us to an AUC score of 64.2%,
leading to a consistent gain of 6% and 7.5% in AUC socre,
compared to SiamFC and CFNet.

Besides the one-pass evaluation(OPE), temporal robust-
ness evaluation (TRE) and spatial robustness evaluation
(SRE) are reported to examine the network sensitivity to the
initialization temporally and spatially. Our RASNet tracker
obtains the best TRE and SRE AUCs, which demonstrates
that our method achieves robustness to different temporal
and spatial initializations.
Experiments on VOT2015 and VOT2017

In this section the latest version of the Visual Object
Tracking toolkit (vot2017-challenge) is used. The toolkit
applies a reset-based methodology. Whenever a failure
(zero overlap with the ground truth) is detected, the tracker
is re-initialized ﬁve frames after the failure. The perfor-
mance is measured in terms of expected average overlap
(EAO), which quantitatively reﬂects both robustness and
accuracy. In addition, VOT2017 also newly introduced a
real-time experiment. We report all these metrics com-
pared with a number of the latest state-of-the-art trackers
on VOT2015 [15] and VOT2017 [28].

The EAO curve evaluated on VOT2015 is presented in
Fig. 9 and 62 other state-of-the-art trackers are compared.
The results of the proposed tracker are on par with that of
the state-of-the-art algorithms and is the second best with a
EAO score of 0.327. The best tracker, MDNet, employs dif-
ferent tracking benchmarks for training, while our tracker
does not employ any tracking benchmark in ofﬂine training.
Furthermore, our tracker is 80× faster than MDNet.

For the assessment on VOT2017, Fig. 10 reports the re-
sults of ours against 51 other state-of-the-art trackers with
respect to the EAO score. RASNet ranked fourth. Among
the three trackers that perform better than ours, CFCF [18]
and CFWCR [20] apply continuous convolution operator as
the baseline approach. The top performer LSART [43] com-
bines kernelized ridge regression with CNN. Fig. 10 also
reveals the EAO values in the real-time experiment denoted
by red points. Our tracker obviously is the top-performer
followed by SiamDCF [50] among the top ten best trackers
with respect to baseline EAO.

49

45

41

37

33

29

25

21

17

13

9

5

1

Figure 11. The EAO scores for the real-time experiment on
VOT2017 challenge.

We further report the EAO scores for the real-time exper-
iment as shown in Fig. 11. The realtime experiment simu-
lates a situation where a tracker processes images as if pro-
vided by a continuously running sensor [28]. We ranked
top one on this evaluation as shown in Fig. 11, which veri-
ﬁes that our track achieves a fast processing speed as well as
excellent performance and shows a potential to the practical
tracking application.

5. Conclusions

This paper proposes a new deep architecture named
RASNet, especially designed for online visual tracking. It
incorporates diverse attention mechanisms embedded in an
end-to-end Siamese network. The attention mechanisms
consist of a general attention ofﬂine trained on labeled VID,
a residual attention adapting the ofﬂine trained model to on-
line tracking by encoding information about the speciﬁc tar-
get, and a channel attention reﬂecting channel-wise quality
of features. RASNet is evaluated on OTB-2013, OTB-2015,
VOT2015 and VOT2017. Signiﬁcant improvements of the
RASNet tracker over the state of the arts are obtained. Fur-
thermore, the proposed RASNet tracker runs at 83 frames
per second, which is far beyond real-time.

6. Acknowledgements

This work is supported by the Natural Science Founda-
tion of China (Grant No. 61672519, 61751212, 61472421,
61602478, 61502026), the NSFC general technology col-
laborative Fund for basic research (Grant No. U1636218),
the Key Research Program of Frontier Sciences, CAS,
Grant No. QYZDJ-SSW-JSC040, and the CAS External
cooperation key project.

0.4

0.3

0.2

0.1

0

0.25

0.2

0.15

0.1

0.05

0

4861

References

[1] A. Agarwala, A. Hertzmann, D. H. Salesin, and S. M.
Seitz. Keyframe-based tracking for rotoscoping and anima-
tion. ACM Transactions on Graphics, 23(3):584–591, Aug.
2004. 1

[2] L. Bertinetto, J. Valmadre, J. F. Henriques, A. Vedaldi, and
P. H. Torr. Fully-convolutional siamese networks for ob-
ject tracking. In European Conference on Computer Vision,
pages 850–865, 2016. 1, 2, 4, 6, 7

[3] D. Bolme, J. Beveridge, B. Draper, and Y. Lui. Visual ob-
ject tracking using adaptive correlation ﬁlters. In IEEE Con-
ference on Computer Vision and Pattern Recognition, pages
2544–2550, 2010. 1

[4] S. Boyd and L. Vandenberghe. Convex Optimization. Cam-

bridge University Press, 2004. 3

[5] J. Choi, H. J. Chang, S. Yun, T. Fischer, and Y. Demiris. At-
tentional correlation ﬁlter network for adaptive visual track-
In IEEE Conference on Computer Vision and Pattern
ing.
Recognition, pages 4807–4816, 2017. 2, 7

[6] Q. Chu, W. Ouyang, H. Li, X. Wang, B. Liu, and N. Yu.
Online multi-object tracking using cnn-based single object
tracker with spatial-temporal attention mechanism. In IEEE
International Conference on Computer Vision, Oct 2017. 2
[7] Z. Cui, S. Xiao, J. Feng, and S. Yan. Recurrently target-
attending tracking. In IEEE Conference on Computer Vision
and Pattern Recognition, June 2016. 2, 7

[8] M. Danelljan, G. Bhat, F. Shahbaz Khan, and M. Felsberg.
Eco: Efﬁcient convolution operators for tracking. In IEEE
Conference on Computer Vision and Pattern Recognition,
pages 6638–6642, 2017. 1, 2, 7

[9] M. Danelljan, G. H¨ager, F. Khan, and M. Felsberg. Accu-
In British

rate scale estimation for robust visual tracking.
Machine Vision Conference, 2014. 7

[10] M. Danelljan, G. H¨ager, F. S. Khan, and M. Felsberg. Adap-
tive decontamination of the training set: A uniﬁed formula-
tion for discriminative visual tracking. In IEEE Conference
on Computer Vision and Pattern Recognition, pages 1430–
1438, 2016. 4, 7

[11] M. Danelljan, G. Hager, F. Shahbaz Khan, and M. Fels-
berg. Convolutional features for correlation ﬁlter based vi-
In IEEE International Conference on Com-
sual tracking.
puter Vision Workshops, pages 58–66, 2015. 2

[12] M. Danelljan, A. Robinson, F. Khan, and M. Felsberg. Be-
yond correlation ﬁlters: Learning continuous convolution
In European Conference on
operators for visual tracking.
Computer Vision, 2016. 1, 2

[13] W. Du, Y. Wang, and Y. Qiao. Rpan: An end-to-end recur-
rent pose-attention network for action recognition in videos.
In IEEE International Conference on Computer Vision, Oct
2017. 2, 4

[14] A. Emami, F. Dadgostar, A. Bigdeli, and B. Lovell. Role
of spatiotemporal oriented energy features for robust visual
tracking in video surveillance. In IEEE International Con-
ference on Advanced Video and Signal-Based Surveillance,
pages 349–354, 2012. 1

[15] M. K. et al. The visual object tracking vot2015 challenge re-
sults. In IEEE International Conference on Computer Vision
Workshops, pages 564–586, 2015. 1, 2, 8

[16] M. K. et al. The visual object tracking vot2016 challenge
results. In European Conference on Computer Vision Work-
shops, pages 777–823, 2016. 1, 2

[17] J. Fan, Y. Wu, and S. Dai. Discriminative spatial attention
for robust tracking. In European Conference on Computer
Vision, pages 480–493, 2010. 2

[18] E. Gundogdu and A. A. Alatan. Good features to correlate
for visual tracking. arXiv preprint arXiv:1704.06326, 2017.
8

[19] Q. Guo, W. Feng, C. Zhou, R. Huang, L. Wan, and S. Wang.
Learning dynamic siamese network for visual object track-
ing. In IEEE International Conference on Computer Vision,
Oct 2017. 2, 3

[20] Z. He, Y. Fan, J. Zhuang, Y. Dong, and H. Bai. Correla-
tion ﬁlters with weighted convolution responses. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1992–2000, 2017. 8

[21] D. Held, S. Thrun, and S. Savarese. Learning to track at 100
fps with deep regression networks. In European Conference
Computer Vision, pages 749–765, 2016. 1, 2, 7

[22] J. Henriques, R. Caseiro, P. Martins, and J. Batista. High-
IEEE
speed tracking with kernelized correlation ﬁlters.
Transactions on Pattern Analysis and Machine Intelligence,
37(3):583–596, 2015. 1, 3, 7

[23] S. Hong, T. You, S. Kwak, and B. Han. Online tracking by
learning discriminative saliency map with convolutional neu-
ral network. In International Conference on Machine Learn-
ing, pages 1–10, 2015. 2

[24] J. Hu, L. Shen, and G. Sun. Squeeze-and-excitation net-
works. arXiv preprint arXiv:1709.01507, 2017. 2, 5
[25] M. Isard and A. Blake. Condensation—conditional density
International Journal of

propagation for visual tracking.
Computer Vision, 29(1):5–28, Aug 1998. 2

[26] M.

Jaderberg, K. Simonyan, A. Zisserman,

and
In Ad-
k. kavukcuoglu.
vances in Neural Information Processing Systems, pages
2017–2025, 2015. 2

Spatial transformer networks.

[27] H. Kiani Galoogahi, A. Fagg, and S. Lucey. Learning
background-aware correlation ﬁlters for visual tracking. In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 1135–1143, 2017. 1

[28] M. Kristan, A. Leonardis,

J. Matas, M. Felsberg,
R. Pﬂugfelder, L. Cehovin Zajc, T. Vojir, G. Hager,
A. Lukezic, A. Eldesokey, and G. Fernandez. The visual
object tracking vot2017 challenge results. In The IEEE Inter-
national Conference on Computer Vision (ICCV), Oct 2017.
1, 7, 8

[29] H. Li, Y. Li, and F. Porikli. Deeptrack: Learning discrimina-
tive feature representations online for robust visual tracking.
IEEE Transactions on Image Processing, 25(4):1834–1848,
2016. 2

[30] X. Li, W. Hu, C. Shen, Z. Zhang, A. Dick, and A. V. D. Hen-
gel. A survey of appearance models in visual object tracking.
ACM Transactions on Intelligent Systems and Technology,
4(4):58:1–58:48, 2013. 1, 2

4862

[47] A. Vedaldi and K. Lenc. Matconvnet: Convolutional neural
networks for matlab. In ACM International Conference on
Multimedia, pages 689–692. ACM, 2015. 6

[48] F. Wang, M. Jiang, C. Qian, S. Yang, C. Li, H. Zhang,
X. Wang, and X. Tang. Residual attention network for image
classiﬁcation. In IEEE Conference on Computer Vision and
Pattern Recognition, pages 3156–3164, 2017. 2

[49] L. Wang, W. Ouyang, X. Wang, and H. Lu. Visual tracking
In IEEE International
with fully convolutional networks.
Conference on Computer Vision, pages 3119–3127, 2015. 1,
2, 7

[50] Q. Wang, J. Gao, J. Xing, M. Zhang, and W. Hu. Dcfnet:
Discriminant correlation ﬁlters network for visual tracking.
In arXiv preprint arXiv:1704.04057, 2017. 8

[51] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In IEEE Conference on Computer Vision and

benchmark.
Pattern Recognition, pages 2411–2418, 2013. 1, 2, 7
[52] Y. Wu, J. Lim, and M.-H. Yang. Object tracking benchmark.
IEEE Transactions on Pattern Analysis and Machine Intelli-
gence, 37(9):1834–1848, 2015. 1, 2, 7

[53] A. Yilmaz, O. Javed, and M. Shah. Object tracking: A sur-
vey. ACM Computing Surverys, 38(4):1–45, 2006. 1, 2
[54] M. Zhang, J. Xing, J. Gao, and W. Hu. Robust visual tracking
using joint scale-spatial correlation ﬁlters. In IEEE Interna-
tional Conference on Image Processing, pages 1468–1472,
2015. 1

[55] M. Zhang, J. Xing, J. Gao, X. Shi, Q. Wang, and W. Hu.
Joint scale-spatial correlation tracking with adaptive rotation
estimation. In IEEE International Conference on Computer
Vision Workshops, pages 32–40, 2015. 1

[31] L. Liu, J. Xing, and H. Ai. Multi-view vehicle detection and
tracking in crossroads. In Proceedings of the Asian Confer-
ence on Pattern Recognition, pages 608–612, 2011. 1
[32] L. Liu, J. Xing, H. Ai, and X. Ruan. Hand posture recog-
nition using ﬁnger geometric feature. In IEEE International
Conference on Pattern Recognition, pages 565–568, 2012. 1
[33] A. Lukezic, T. Vojir, L. Cehovin Zajc, J. Matas, and M. Kris-
tan. Discriminative correlation ﬁlter with channel and spatial
reliability. In IEEE Conference on Computer Vision and Pat-
tern Recognition, 2017. 1, 2, 5, 7

[34] W. Luo, J. Xing, A. Milan, X. Zhang, W. Liu, X. Zhao, and
T. Kim. Multiple object tracking: A literature review. arXiv
preprint arXiv:1409.7618, 2014. 2

[35] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchical
In IEEE Inter-
convolutional features for visual tracking.
national Conference on Computer Vision, pages 3074–3082,
2015. 2, 7

[36] H. Nam and B. Han. Learning multi-domain convolutional
In IEEE Conference
neural networks for visual tracking.
on Computer Vision and Pattern Recognition, pages 4293–
4302, 2016. 1, 2

[37] A. Newell, K. Yang, and J. Deng. Stacked hourglass net-
works for human pose estimation. In European Conference
on Computer Vision, 2016. 1

[38] B. A. Olshausen, C. H. Anderson, and D. C. Van Essen. A
neurobiological model of visual attention and invariant pat-
tern recognition based on dynamic routing of information.
Journal of Neuroscience, 13(11):4700–4719, 1993. 2
[39] O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh,
S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein,
A. C. Berg, and L. Fei-Fei.
ImageNet Large Scale Visual
Recognition Challenge. International Journal of Computer
Vision, 115(3):211–252, 2015. 6

[40] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 2

[41] A. W. Smeulders, D. Chu, R. Cucchiara, S. Calderara, A. De-
hghan, and M. Shah. Visual tracking: An experimental sur-
IEEE Transactions on Pattern Analysis and Machine
vey.
Intelligence, 36(7):1442–1468, 2014. 1, 2

[42] Y. Song, C. Ma, L. Gong, J. Zhang, R. W. H. Lau, and M.-
H. Yang. Crest: Convolutional residual learning for visual
In IEEE International Conference on Computer
tracking.
Vision, Oct 2017. 7

[43] C. Sun, H. Lu, and M.-H. Yang.
aware regressions for visual
arXiv:1706.07457, 2017. 1, 8

tracking.

Learning spatial-
arXiv preprint

[44] R. Tao, E. Gavves, and A. W. M. Smeulders. Siamese in-
stance search for tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2016. 1, 2, 3, 7

[45] Z. Teng, J. Xing, Q. Wang, C. Lang, S. Feng, and Y. Jin.
Robust object tracking based on temporal and spatial deep
networks. In IEEE International Conference on Computer
Vision, Oct 2017. 2

[46] J. Valmadre, L. Bertinetto, J. F. Henriques, A. Vedaldi, and
P. H. Torr. End-to-end representation learning for correla-
tion ﬁlter based tracking. In IEEE Conference on Computer
Vision and Pattern Recognition, 2017. 2, 3, 4, 7

4863

