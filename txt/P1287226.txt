7
1
0
2
 
r
p
A
 
0
2
 
 
]

V
C
.
s
c
[
 
 
2
v
5
2
9
3
0
.
2
1
6
1
:
v
i
X
r
a

3D fully convolutional networks for subcortical
segmentation in MRI: A large-scale study

Jose Dolza,˚, Christian Desrosiersa, Ismail Ben Ayeda

aLIVIA Laboratory, ´Ecole de technologie sup´erieure (ETS), Montreal, QC, Canada

Abstract

This study investigates a 3D and fully convolutional neural network (CNN)
for subcortical brain structure segmentation in MRI. 3D CNN architectures have
been generally avoided due to their computational and memory requirements
during inference. We address the problem via small kernels, allowing deeper
architectures. We further model both local and global context by embedding
intermediate-layer outputs in the ﬁnal prediction, which encourages consistency
between features extracted at diﬀerent scales and embeds ﬁne-grained infor-
mation directly in the segmentation process. Our model is eﬃciently trained
end-to-end on a graphics processing unit (GPU), in a single stage, exploiting
the dense inference capabilities of fully CNNs.

We performed comprehensive experiments over two publicly available datasets.

First, we demonstrate a state-of-the-art performance on the ISBR dataset.
Then, we report a large-scale multi-site evaluation over 1112 unregistered sub-
ject datasets acquired from 17 diﬀerent sites (ABIDE dataset), with ages ranging
from 7 to 64 years, showing that our method is robust to various acquisition
protocols, demographics and clinical factors. Our method yielded segmenta-
tions that are highly consistent with a standard atlas-based approach, while
running in a fraction of the time needed by atlas-based methods and avoiding
registration/normalization steps. This makes it convenient for massive multi-
site neuroanatomical imaging studies. To the best of our knowledge, our work
is the ﬁrst to study subcortical structure segmentation on such large-scale and
heterogeneous data.

Keywords: Deep learning, MRI segmentation, brain, 3D CNN, fully CNN.

1. Introduction

Accurate segmentation of subcortical brain structures is crucial to the study
of various brain disorders such as schizophrenia [1], Parkinson [2], autism [3]
and multiple-sclerosis [4, 5], as well as to the assessment of structural brain
abnormalities [6]. For instance, changes in the morphology and developmental

˚Corresponding author: jose.dolz.upv@gmail.com

trajectories of the caudate nucleus, putamen and nucleus accumbens have been
associated with autism spectrum disorder (ASD), and may be linked to the
occurrence of restricted and repetitive behaviors [7]. Accurate segmentation of
these structures would help understanding such complex disorders, monitoring
their progression and evaluating treatment outcomes.

Automating subcortical structure segmentation remains challenging, despite
the substantial research interest and eﬀorts devoted to this computational prob-
lem. Clinicians still rely on manual delineations, a prohibitively time-consuming
process, which depends on rater variability and is prone to inconsistency [8].
These issues impede the use of manual segmentation for very large datasets, such
as those currently used in various multi-center neuroimaging studies. Therefore,
there is a critical need for fast, accurate, reproducible, and fully automated
methods for segmenting subcortical brain structures.

1.1. Prior art

A multitude of (semi-) automatic methods have been proposed for segment-
ing brain structures [9]. We can divide prior-art methods into four main cat-
egories: atlas-based methods [10, 11], statistical models [12, 13], deformable
models [14] and machine learning based classiﬁers [15, 16]. Atlas-based meth-
ods work by aligning one or several anatomical templates to the target image,
via a linear or non-linear registration process, and then transferring segmen-
tation labels from the templates to the image. Although these methods often
provide satisfactory results, segmentation times are typically long (ranging from
several minutes to hours) due to the complexity of registration steps. Further-
more, such methods may not be able to capture the full anatomical variability
of target subjects (e.g., subjects of young age or with structural abnormalities),
and can fail in cases of large misalignments or deformations. Unlike atlas-based
methods, approaches based on statistical models use training data to learn a
parametric model describing the variability of speciﬁc brain structures (e.g.,
shapes, textures, etc.). When the number of training images is small compared
to the number of parameters to learn, these approaches might result in overﬁt-
ting the data, thereby introducing bias in the results. The robustness of such
statistical approaches might also be aﬀected by the presence of noise in training
data. Finally, because parameters are updated iteratively by searching in the
vicinity of the current solution, an accurate initialization is required for such
approaches to converge to the correct structure. Unlike statistical models, seg-
mentation techniques using deformable models do not require training data, nor
prior knowledge. Because they can evolve to ﬁt any target structure, such mod-
els are considered to be highly ﬂexible compared to other segmentation methods.
Yet, deformable models are quite sensitive to the initialization of the segmenta-
tion contour and the stopping criteria, both of which depend on the character-
istics of the problem. The last category of methods, based on machine learning,
uses training images to learn a predictive model that assigns class probabilities
to each pixel/voxel. These probabilities are sometimes used as unary potentials
in standard regularization techniques such as graph cuts [17]. Recently, machine
learning approaches have achieved state-of-the-art performances in segmenting

2

brain structures [9, 15]. Nevertheless, these approaches usually involve heavy
algorithm design, with carefully engineered, application-dependent features and
meta-parameters, which limit their applicability to diﬀerent brain structures
and modalities.

Deep learning has recently emerged as a powerful tool, achieving state-of-the
art results in numerous applications of pattern or speech recognition. Unlike
traditional methods that use hand-crafted features, deep learning techniques
have the ability to learn hierarchical features representing diﬀerent levels of ab-
straction, in a data-driven manner. Among the diﬀerent types of deep learning
approaches, convolutional neural networks (CNNs) [18, 19] have shown out-
standing potential for solving computer vision and image analysis problems.
Networks of this type are typically made up of multiple convolution, pooling
and fully-connected layers, the parameters of which are learned using back-
propagation. Their advantage over traditional architectures come from two
properties: local-connectivity and parameter sharing. Unlike in typical neural
nets, units in hidden layers of a CNN are only connected to a small number
of units, corresponding to a spatially localized region. This reduces the num-
ber of parameters in the net, which limits memory/computational requirements
and reduces the risk of overﬁtting. Moreover, CNNs also reduce the number of
learned parameters by sharing the same basis function (i.e., convolution ﬁlters)
across diﬀerent image locations.

In biomedical imaging, CNNs have been recently investigated for several
neuroimaging applications [20, 21, 22, 23]. For instance, Ciresan et al.
[20]
used a CNN to accurately segment neuronal membranes in electron microscopy
images. In this study, a sliding-window strategy was applied to predict the class
probabilities of each pixel, using patches centered at the pixels as input to the
network. An important drawback of this strategy is that its label prediction
is based on very localized information. Moreover, since the prediction must be
carried out for each pixel, this strategy is typically slow. Zhang et al. [21] pre-
sented a CNN method to segment three brain tissues (white matter, gray matter
and cerebrospinal ﬂuid) from multi-sequence magnetic resonance imaging (MRI)
images of infants. As inputs to the network, 2D images corresponding to a sin-
gle plane were used. Deep CNNs were also investigated for glioblastoma tumor
segmentation [22], using an architecture with several pathways, which modeled
both local and global-context features. Pereira et al. [23] presented a diﬀerent
CNN architecture for segmenting brain tumors in MRI data, exploring the use
of small convolution kernels. Closer to this work, several recent studies inves-
tigated CNNs for segmenting subcortical brain structures [17, 24, 25, 26, 27].
For instance, Lee et al. [24] presented a CNN-based approach to learn discrim-
inative features from expert-labelled MR images. The study in [25] used CNNs
to segment brain structures in images from ﬁve diﬀerent datasets, and reported
performance for subjects in various age groups (ranging from pre-term infants
to older adults). A multiscale patch-based strategy was used to improve these
results, where patches of diﬀerent sizes were extracted around each pixel as
input to the network.

Although medical images are often in the form of 3D volumes (e.g., MRI

3

or computed tomography scans), most of the existing CNN approaches use a
slice-by-slice analysis of 2D images. An obvious advantage of a 2D approach,
compared to one using 3D images, is its lower computational and memory re-
quirements. Furthermore, 2D inputs accommodate using pre-trained nets, ei-
ther directly or via transfer learning. However, an important drawback of such
an approach is that anatomic context in directions orthogonal to the 2D plane
is completely discarded. As discussed recently in [26], considering 3D MRI
data directly, instead of slice-by-slice, can improve the performance of a seg-
mentation method. To incorporate 3D contextual information, de Brebisson
et al. used 2D CNNs on images from the three orthogonal planes [27]. The
memory requirements of fully 3D networks were avoided by extracting large 2D
patches from multiple image scales, and combining them with small single-scale
3D patches. All patches were assembled into eight parallel network pathways
to achieve a high-quality segmentation of 134 brain regions from whole brain
MRI. More recently, Shakeri et al.
[17] proposed a CNN scheme based on 2D
convolutions to segment a set of subcortical brain structures. In their work, the
segmentation of the whole volume was ﬁrst achieved by processing each 2D slice
independently. Then, to impose volumetric homogeneity, they constructed a 3D
conditional random ﬁeld (CRF) using scores from the CNN as unary potentials
in a multi-label energy minimization problem.

So far, 3D CNNs have been largely avoided due to the computational and
memory requirements of running 3D convolutions during inference. However,
the ability to fully exploit dense inference is an important advantage of 3D CNNs
over 2D representations [28]. While standard CNN approaches predict the class
probabilities of each pixel independently from its local patch, fully convolutional
networks (FCNNs) [29] consider the network as a large non-linear ﬁlter whose
output yields class probabilities. This accommodates images of arbitrary size,
as in regular convolution ﬁlters, and provides much greater eﬃciency by avoid-
ing redundant convolutions/pooling operations. Recently, 3D FCNNs yielded
outstanding segmentation performances in the context of brain lesions [30, 31].

1.2. Contributions

This study investigates a 3D and fully convolutional neural network for sub-
cortical brain structure segmentation in MRI. Architectures using 3D convo-
lutions have been generally avoided due to their computational and memory
requirements during inference and, to the best of our knowledge, this work is
the ﬁrst to examine 3D FCNNs for subcortical structure segmentation. We ad-
dress the problem via small kernels, allowing deeper architectures. We further
model both local and global context by embedding intermediate-layer outputs
in the ﬁnal prediction, which encourages consistency between features extracted
at diﬀerent scales and embeds ﬁne-grained information directly in the segmen-
tation process. This contrasts with previous architectures (e.g., [31]), where
global context is modelled using separate pathways and low-resolution images.
Our model is eﬃciently trained end-to-end on a graphics processing unit (GPU),
in a single learning stage, exploiting the dense inference capabilities of FCNNs.
Compared to conventional approaches, which typically require time-consuming

4

and error-prone registration steps, the proposed method also has the advantage
of being alignment independent. This property is of great importance in clini-
cal applications where scans from diﬀerent subjects, modalities and acquisition
protocols need to be analyzed.

We performed comprehensive experiments over two publicly available datasets.

The IBSR dataset is ﬁrst used to compare our method to existing approaches
for subcortical brain segmentation, and demonstrate its state-of-the-art perfor-
mance. We then report a large-scale evaluation over 1112 unregistered subject
data from the multi-site ABIDE dataset, with ages ranging from 7 to 64 years,
showing that our method is robust to various acquisition protocols, demograph-
ics and clinical factors. Our method yielded segmentations that are highly
consistent with a standard atlas-based approach, while running in a fraction of
the time needed by such methods.

This makes it convenient for massive multi-site neuroanatomical imaging
studies. We believe our work is the ﬁrst to assess subcortical structure segmen-
tation on such large-scale and heterogeneous data.

2. Methods and materials

We start by presenting the proposed 3D FCNN architecture, which is at the
core of our segmentation method. Sections 2.2 and 2.3 then describe how this
architecture can be improved by additional convolution layers with smaller ker-
nels, and by considering multiscale information from intermediate convolutional
layers. Thereafter, Section 2.4 presents the pre- and post-processing steps per-
formed by our method on the data and output segmentations. Finally, Section
2.5 focuses on the study design and experimental setup, providing information
on the datasets used in the study, implementation details of the tested net-
work architectures, and the metrics used to evaluate the performance of these
architectures.

2.1. The proposed 3D FCNN architecture

Figure 1: The baseline FCNN architecture (CNNbase), composed of 3 convolutional
layers with kernels of size 7ˆ7ˆ7. This FCNN is obtained from a standard CNN by
replacing the fully connected layers by a set of 1ˆ1ˆ1 convolutional ﬁlters.

5

Traditional CNN architectures, like AlexNet or GoogLeNet, require an input
image of ﬁxed size and use pooling layers to gradually reduce the spatial reso-
lution of the representation. Spatial information is then completely discarded
in fully-connected layers at the end of the network. Although originally de-
signed for image recognition and classiﬁcation tasks, such architectures can be
used for semantic segmentation via a sliding-window approach, where regions
deﬁned by the window are processed one-by-one. However, this strategy has a
low eﬃciency, due to the many redundant convolution and pooling operations.
Processing regions in the image independently, instead of as a whole, also re-
duces segmentation accuracy. Fully Convolutional Networks (FCNNs) mitigate
these limitations by treating the network as a single non-linear convolution,
trained end-to-end [29]. Unlike traditional CNNs, FCNNs are only composed
of convolutional layers, allowing them to be applied to images of arbitrary size.
Moreover, because the spatial map of class scores is obtained in a single dense
inference step, FCNNs can avoid redundant convolution and pooling operations,
which makes them computationally more eﬃcient.

The proposed segmentation method is based on a 3D fully CNN (FCNN)
architecture, depicted in Figure 1. This architecture is composed of three con-
volutional layers, each one containing several 3D convolution ﬁlters (or kernels).
Each ﬁlter in a layer is applied to the output of the previous layer, or the input
volume in the case of the ﬁrst layer, and the result of this operation is known
as a feature map. Denote as ml the number of convolution kernels in layer l of
the network, and let xn
l´1 be the 3D array corresponding to the n-th input of
layer l. The k-th output feature map of layer l is then given by:

yk
l “ f

W k,n

i b xn

l´1 ` bk
l

(1)

¯
,

´ ml´1ÿ

n“1

where W k,n
is a ﬁlter convolved (represented by b) with each of the previous
i
layers, bk
l is the bias, and f is a non-linear activation function. Note that feature
maps produced by convolutions are slightly smaller than their input volumes,
the size diﬀerence along each dimension equal to the ﬁlter size in this dimension,
minus one voxel. Hence, applying a 3ˆ3ˆ3 convolution ﬁlter will reduce the
input volume by 2 voxels along each dimension. A stride may also be deﬁned
for each convolutional layer, representing the displacement of the ﬁlter, along
the three dimensions, after each application.

In some FCNN architectures, pooling layers may be added between convo-
lutional layers to reduce spatial resolution and, thus, the number of parameters
to learn. Such layers can be interpreted as simple convolutional layers with
non-unit stride (e.g., a stride of 2). The resolution of the input image is recov-
ered by adding deconvolution (or transpose convolution) layers at the end of the
network [29]. However, this strategy may lead to coarse segmentations. In the
proposed architecture, we preserve spatial resolution by avoiding pooling layers
and using a unit stride for all convolutional layers.

For the activation function, we used the Parametric Rectiﬁed Linear Unit
(PReLU) [32] instead of the popular Rectiﬁed Linear Unit (ReLU). This function

6

can be formulated as

f pxiq “ maxp0, xiq ` ai ¨minp0, xiq,

(2)

where xi deﬁnes the input signal, f pxiq represents the output, and ai is a scaling
coeﬃcient for when xi is negative. While ReLU employs predeﬁned values
for ai (typically equal to 0), PReLU requires learning this coeﬃcient. Thus,
this activation function can adapt the rectiﬁers to their inputs, improving the
network’s accuracy at a negligible extra computational cost.

As in standard CNNs, fully-connected layers are added at the end of the
network to encode semantic information. However, to ensure that the network
contains only convolutional layers, we use the strategy described in [29] and
[31], in which fully-connected layers are converted to a large set of 1 ˆ 1 ˆ 1
convolutions. Doing this allows the network to retain spatial information and
learn the parameters of these layers as in other convolutional layers. Lastly,
neurons in the last layer (i.e., the classiﬁcation layer) are grouped into m “
C feature maps, where C denotes the number of classes. The output of the
classiﬁcation layer L is then converted into normalized probability values via a
softmax function. The probability score of class c P t1, . . . , Cu is computed as
follows:

pc “

ř

`

˘

yc
exp
L
`
C
c1“1 exp

yc1
L

˘ .

(3)

The 3D FCNN architecture described in this section constitutes our baseline
model for segmentation. In the following two sections, we describe how a deeper
architecture can be achieved with smaller convolution kernels and how multiscale
information can be added by combining features from intermediate convolutional
layers.

2.2. Deeper architecture via small convolution kernels

Numerous studies have shown the beneﬁts of using deeper network archi-
tectures.
In FCNNs, however, having many convolutions layers reduces the
resolution of feature maps at the end of the network, leading to a coarse seg-
mentation. To alleviate this problem, we extend the architecture of Figure 1 by
replacing each convolutional layer by three successive convolutional layers with
the same number of kernels, but smaller kernel sizes: 3ˆ3ˆ3 instead of 7ˆ7ˆ7.
The resulting topology is shown in Figure 2.

By using these smaller kernels, we obtain a deeper architecture while having
fewer parameters in the network. Consequently, the network can learn a more
complex hierarchy of features, with a reduced risk of overﬁtting. This fact is
supported by the ﬁndings reported in [33] for 2D CNNs, and in [31] for 3D
CNNs.

2.3. Combining features across multiple scales

In CNNs, the sequence of layers encodes features representing increasing
levels of abstraction: the ﬁrst convolutional layer typically models simple edge or

7

Figure 2: The proposed improvements to the baseline architecture CNNbase. A deeper
architecture is achieved via smaller convolution kernels (3 ˆ 3 ˆ 3). Also, multiscale
information is used in the segmentation by injecting feature maps of intermediate layers
(convolutional layers 3, 6 and 9) directly in the fully-connected layers, as represented
by the arrows. We refer as CNNsingle the architecture with small kernel but a single
scale, and as CNNmulti the architecture including both small kernels and multiscale
information.

blob detectors, whereas convolutional layers directly before the fully-connected
ones model larger-scale and more complex structures. In various computer vision
problems, like optical ﬂow [34], reasoning across multiple levels of abstraction
(i.e., scales) has proven beneﬁcial. Following this principle, we further improve
our baseline FCNN to include multiscale information in the segmentation.

The multiscale version of our segmentation model, shown in Figure 2, has a
single 3D image as input (highest available resolution) and combines the feature
maps of various intermediate layers (i.e., convolutional layers 3, 6 and 9) in
the fully-connected layers. This strategy [35, 36, 37, 38] has two important
advantages over other multiscale approaches, where the input image is resampled
at multiple scales of resolution before being fed to the network [31]. First,
because it has a single set convolution ﬁlters at each layer, instead of one per
pathway, the features at diﬀerent scales are more likely to be consistent with
each other. Moreover, since features from intermediate layers are injected in
top-most layers, ﬁne-grained information is used directly in the segmentation
process. However, a drawback of this strategy is that it introduces a large
number of parameters in fully-connected layers, which can make learning these
parameters computationally complex.

Due to repeated convolution operations, the feature maps that need to be
combined at the end of the network have diﬀerent sizes: 21 ˆ 21 ˆ 21 in layer
3, 15ˆ15ˆ15 in layer 6, and 9ˆ9ˆ9 in layer 9. Instead of vectorizing these
features maps and appending them to one another, we extract 9ˆ9ˆ9 volumes
around the center of these feature maps, which are then stacked on top of each
other. These volumes, which are compatible in size, encode diﬀerent resolutions

8

and receptive ﬁelds of the input image (i.e., the volume of layer 3 has a smaller
receptive ﬁeld but a higher resolution than the volumes of layers 6 and 9). Note
that this technique leads to less parameters than vectorizing the full feature
maps.

2.4. Pre- and post-processing steps

Data pre-processing steps are often required to ensure the performance of
segmentation methods. Typical pre-processing steps for MRI data include the
removal of non-brain tissues like the skull, as well as bias ﬁeld correction. For
multi-subject or longitudinal studies, additional steps are often necessary to nor-
malize intensities or align volumes across multiple scans. In [17], Shakeri et al.
used registered and normalized MRI volumes to validate their subcortical parcel-
lation method. Such elaborate data pre-processing has several disadvantages.
First, aligning volumes to a template (e.g., MNI space) is a time-consuming
operation, which would remove the computational beneﬁt of using CNNs over
atlas-based methods. Furthermore, training the network using data with a very
speciﬁc and strict pre-processing reduces the network’s ability of generalizing to
unprocessed data, or data pre-processed diﬀerently.

In order to make our method robust to diﬀerent imaging protocols and pa-
rameters, we used a simple pre-processing step that includes volume-wise in-
tensity normalization, bias ﬁeld correction and skull-stripping. The ﬁrst two
transforms, both computationally inexpensive, are used to reduce the sensi-
tivity of the network to contrast and intensity bias. Skull-stripping, although
more time-consuming, can be performed without registration (e.g., see [39]).
This step is used mostly to reduce the size of the input image by discarding
non-interesting areas, and thus unnecessary computations.

Although the segmentations obtained using our network are generally smooth
and close to manual labels, small isolated regions can sometimes appear in the
segmentation. As post-processing step, we remove these small regions by keep-
ing only the largest connected component from each class. Note that standard
regularization approaches like CRFs [40] have also been tested, but did not lead
to signiﬁcant improvements in accuracy.

2.5. Study design and experiment setup

2.5.1. Datasets

available datasets.

The proposed segmentation method was tested on the following two publicly

IBSR. A set of 18 T1-weighted MRI scans from the Internet Brain Segmenta-
tion Repository (IBSR) was employed to obtain quantitative measures of perfor-
mance and compare our method against competing approaches. These images
were acquired at the Massachusetts General Hospital and are freely available at
http://www.cma.mgh.harvard.edu/ibsr/data.html. In addition, the dataset
also contains expert-labelled segmentations of 45 brain structures. Among these,
a subset of 8 important subcortical structures were considered in this work: left

9

and right thalamus, caudate, putamen, and pallidum. These structures were
used in recent studies on brain parcellation (e.g., see [17]). All volumes have a
size of 256ˆ256ˆ128 voxels, with voxel sizes ranging from 0.8ˆ0.8ˆ1.5 mm3 to
1.0ˆ1.0ˆ1.5 mm3. To get unbiased estimates of performance, and following the
validation methodolody of [17], we employed a 6-fold cross validation strategy,
where each fold is composed of 12 training examples (i.e., subjects), 3 validation
examples and 3 test examples.

ABIDE. The Autism Brain Imaging Data Exchange (ABIDE) [41] was used
as a second dataset in our experiments. ABIDE I involved 17 international
sites, sharing previously collected resting state functional magnetic resonance
imaging (R-fMRI), anatomical and phenotypic datasets made available for data
sharing with the broader scientiﬁc community. This eﬀort yielded a huge dataset
containing 1112 subjects, including 539 from individuals with autism spectrum
disorder (ASD) and 573 from typical controls (ages 7-64 years, median 14.7
years across groups). Characteristics for each site are presented in Table 1.

Unlike IBSR, the ABIDE dataset does not contain ground-truth segmenta-
tions of subcortical structures. Instead, we have used automatic segmentations
obtained using the recon-all pipeline1 of the FreeSurfer 5.1 tool [42], which
are freely available at http://fcon_1000.projects.nitrc.org/indi/abide/.
This pipeline involves the following steps: motion correction, intensity normal-
ization, aﬃne registration of volumes to the MNI305 atlas, skull-stripping, non-
linear registration using the Gaussian Classiﬁer Atlas (GCA), and brain parcella-
tion. The outputs of this pipeline used in our study are the skull stripped, inten-
sity normalized brain volumes in the unregistered subject space (i.e., brain.mgz
ﬁles) and the subcortical labelling of these volumes (i.e., aseg.mgz ﬁles). Note
that FreeSurfers registration and segmentation steps were shown to be robust
to age-associated bias [43].

For this dataset, the objectives of our experiment was to measure the impact
of diﬀerent imaging, demographic and clinical factors on the reliability of the
proposed method. Another goal was to verify that our method could obtain
segmentations similar to those of atlas-based approaches (e.g., the segmenta-
tion approach of FreeSurfer ), but in a fraction of the time. To measure the
impact of age (and thus brain size) on our method’s performance, we followed
the methodology of [44] and divided subjects into three non-overlapping groups:
ă13 years, 13 to 18 years, and ą18 years. Furthermore, to account for potential
structural diﬀerences related to autism, we further split each age group into two
sub-groups, containing control and ASD subjects respectively. Lastly, to evalu-
ate the robustness of our method in unseen cohorts, the resulting subject groups
were again split based on whether the subject is from a site used in training or
not. Note that, in the case of subjects from sites used in training, only subjects
from the test set are considered (i.e., no training example is used while measure
the segmentation performance). A summary of group conﬁguration and train-

1http://surfer.nmr.mgh.harvard.edu/fswiki/recon-all

10

San Diego State University˚

1.0ˆ1.0ˆ1.1

22/14

8.7-17.2

Site

California Institute of Technology˚

Carnegie Mellon University˚

Kennedy Krieger Institute˚

Ludwig Maximilians
Munich˚
NYU Langone Medical Center˚

University

Olin, Institute of Living at Hartford
Hospital˚
Oregon Health and Science Univer-
sity

Social Brain Lab BCN NIC UMC
Groningen˚

Stanford University˚

Trinity Centre for Health Sciences

University of California, Los Angeles:
Sample 1˚
University of California, Los Angeles:
Sample 2

University of Leuven: Sample 1˚

University of Leuven: Sample 2˚

Number
images

Voxel size
(mm3)

Control
vs. ASD

Ages
(Years)

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

19/19

13/14

33/22

17.0-56.2

19-40

8.0-12.8

1.0ˆ1.0ˆ1.0

33/24

7-58

184

1.3ˆ1.0ˆ1.3

105/79

6.5-39.1

1.0ˆ1.0ˆ1.0

16/20

10-24

1.0ˆ1.0ˆ1.1

15/13

8.0-15.2

1.0ˆ1.0ˆ1.1

15/15

20-64

0.86ˆ1.5ˆ0.86 20/20

1.0ˆ1.0ˆ1.0

25/24

7.5-12.9

12.0-25.9

1.0ˆ1.0ˆ1.2

33/49

8.4-17.9

1.0ˆ1.0ˆ1.2

14/13

9.8-16.5

0.98ˆ0.98ˆ1.2 15/14

18-32

0.98ˆ0.98ˆ1.2 20/15

-ˆ-ˆ1.2

-ˆ-ˆ1.2

55/55

22/13

12.1-16.9

8.2-19.2

12.8-28.8

1.1ˆ1.1ˆ1.1

27/30

9.3-35.2

University of Michigan: Sample 1

110

University of Michigan: Sample 2˚

University of Pittsburgh School of
Medicine˚
University
Medicine˚
Yale Child Study Center

of Utah

School

of

101

56

1.0ˆ1.0ˆ1.2

43/58

8.8-50.2

1.0ˆ1.0ˆ1.0

28/28

7.0-17.8

Table 1: Scan parameters and characteristics of sites included in the ABIDE dataset.
An asterisk beside the site name indicates that data from this site were used for
training.

ing/testing distribution is presented in Table 2. To facilitate the presentation of
results, each group is identiﬁed by a unique ID, from A to L. For instance, group
A corresponds to control subjects less than 13 years of age, from sites used in
training. Among this group, the data of 42 subjects were used for training our
FCNN, and the data of 93 subjects for measuring its performance.

We evaluated the segmentation of target subcortical brain structures by
training and testing with data from diﬀerent sites or age/diagnosis groups. For
training, we considered 10 control subjects from 15 sites (indicated by an asterisk
in Table 1), giving a total of 150 training examples. The reason for employing
only control subjects is that ASD subjects may present structural abnormalities

38

27

55

57

36

28

36

30

40

49

82

27

29

35

35

57

11

DX group
Age group ă 13

Subjects
train/test

Site used in training

Site NOT used in training

Control

ASD

Control

ASD

13-18 ą 18 ă 13

13-18 ą 18 ă 13 13-18 ą 18 ă 13 13-18 ą 18

42/93 46/87 62/98 0/133 0/113 0/144 0/65 0/53 0/16 0/62 0/48 0/11

Group ID

A

B

C

D

E

F

G

H

I

J

K

L

Table 2: Conﬁguration of subject groups used in the proposed experiments. The
number of training and testing subjects included in each group is detailed in last row.

that are not representative of the population. Including these subjects in the
training set might thus aﬀect the generability of our segmentation model. For
validation, we used a single subject per site, leading to a validation set composed
of 15 examples. Segmentation performance was evaluated on remaining subjects
from all sites.

2.5.2. Implementation details

Selecting the network’s architecture is a complex and problem-speciﬁc task,
which can greatly aﬀect the performance and computational eﬃciency of the
solution. In this study, we investigate three diﬀerent FCNN architectures. The
ﬁrst architecture, called CNNbase, is composed of 3 convolutional layers with 25,
50 and 75 feature maps (i.e., ﬁlters), respectively, and a kernel size of 7ˆ7ˆ 7.
Three fully-connected layers are added after the last convolutional layer to model
the relationship between features and class labels. The CNNbase architecture,
depicted in Figure 1, is employed as a baseline to generate “standard” or “con-
trol” segmentations.
In the second architecture, denoted as CNNsingle, each
convolutional layer is replaced by three successive convolutional with smaller
kernels of size 3ˆ3ˆ 3. As mentioned in Section 2.2, this strategy allows hav-
ing a deeper network with the same number of parameters. Finally, the third
architecture, called CNNmulti, corresponds to the multiscale FCNN of Figure 2,
which was presented in Section 2.3.

All three architectures have three fully-connected layers, composed of 400,
200 and 150 hidden units respectively. These layers are followed by a ﬁnal classi-
ﬁcation layer, which outputs the probability maps for each of the 9 classes: 8 for
each of the subcortical structures (left and right) and one for the background.
The CNNmulti architecture proposed in this paper is thus composed of 13 lay-
ers in total, with the following layout: 9 convolutional layers, 3 fully-connected
layers, and the classiﬁcation layer. Furthermore, the number of kernels in each
convolutional layer (from ﬁrst to last) is as follows: 25, 25, 25, 50, 50, 50, 75,
75 and 75.

The optimization of network parameters is performed with stochastic gra-
dient descent (SGD), using cross-entropy as cost function. However, since our
network employs 3D convolutions, and due to the large sizes of MRI volumes,
dense training cannot be applied to whole volumes. Instead, volumes are split
into B smaller segments, which allows dense inference in our hardware setting.
Let θ be the network parameters (i.e., convolution weights and biases), and de-
note as L the set of ground-truth labels such that Lv
s P L is the label of voxel v

12

in the s-th image segment. Following [31], we deﬁned the cost function as

Jpθ; Lq “ ´

log pLv

s pXvq,

(4)

1
B ¨V

Bÿ

Vÿ

s“1

v“1

where pcpXvq is the output of the classiﬁcation layer for voxel v and class c.
In [31], Kamnitsas et al.
found that increasing the size of input segments in
training leads to a higher performance, but this performance increase stops
beyond segment sizes of 25ˆ25ˆ25. In their network, using this segment size
for training, score maps at the classiﬁcation stage were of size 9ˆ9ˆ9. Since
our architecture is one layer deeper, and to keep the same score map sizes, we
set the segment size in our network to 27ˆ27ˆ27.

Deep CNNs are usually initialized by assigning random normal-distributed
values to kernel and bias weights. As demonstrated in [33], initializing weights
with ﬁxed standard deviations may lead to poor convergence. To overcome
this limitation, we adopted the strategy proposed in [32], and used in [31] for
segmentation, that allows very deep architectures (e.g., 30 convolutional or fully-
connected layers) to converge rapidly. In this strategy, weights in layer l are
initialized based on a zero-mean Gaussian distribution of standard deviation
a
2{nl, where nl denotes the number of connections to units in that layer. For
example, in the ﬁrst convolutional layer of Figure 2, the input is composed of
single-channel (i.e., grey level) image segments and kernels have a size of 3ˆ3ˆ3,
therefore the standard deviation is equal to

2{p1 ˆ 3 ˆ 3 ˆ 3q “ 0.2722.

a

Our 3D FCNNs were initially trained for 50 epochs, each one composed of
20 subepochs. At each subepoch, a total of 500 samples were randomly selected
from the training image segments, and processed in batches of size 5. However,
we observed that the performance of the trained network on the validation set
did not improve after 30 epochs, allowing us to terminate the training process
at this point. As other important meta-parameters, the training momentum
was set to 0.6 and the initial learning rate to 0.001, being reduced by a factor
of 2 after every 3 epochs. Note that instead of an adaptive strategy for learning
rate, we used step decay and monitored the evolution of the cost error during
training. We observed that it followed a decreasing curve, with and exponential
shape and small increasing/decreasing slopes. Therefore, we considered that
decreasing the learning rate at certain epochs was suﬃcient to properly train
the network.

To implement our network, we adapted the 3D FCNN architecture of Kam-
nitsas et al. [31]. Their architecture was developed using Theano, a CPU and
GPU mathematical compiler for implementing deep learning models [45]. The
PC used for training is an Intel(R) Core(TM) i7-6700K 4.0GHz CPU, equipped
with a NVIDIA GeForce GTX 960 GPU with 2 GB of memory. Training our
network took a little over 2 hours per epoch, and around 2 days and a half
for the fully trained CNN. The source code of our implementation is publicly
available on https://github.com/josedolz/LiviaNET.

13

2.5.3. Evaluation

Various comparison metrics exist to evaluate the accuracy of segmentation
methods. Although volume-based metrics, such as Dice similarity coeﬃcient
(DSC) [46], have been broadly used to compare segmentation results, they are
fairly insensitive to the precise contour of segmented regions, which only has
small impact on the overall volume. However, two segmentations with a high
spatial overlap may exhibit clinically relevant diﬀerences in their boundaries. To
measure such diﬀerences, distance-based metrics such as the Modiﬁed Hausdorﬀ
distance (MHD) are typically used.

Dice similarity coeﬃcient. Let Vref and Vauto denote the binary reference
segmentation and the automatic segmentation, respectively, of a given tissue
class for a given subject. The DSC is then deﬁned as

`

˘

DSC

Vref , Vauto

“

2 | Vref X Vauto |
| Vref | ` | Vauto |

(5)

DSC values are comprised in the r0, 1s range, where 1 indicates perfect overlap-
ping and 0 represents no overlapping at all.

Modiﬁed Hausdorﬀ distance. Let Pref and Pauto denote the sets of voxels
within the reference segmentation and the automatic one, respectively. The
MHD can be then deﬁned as
˘

!

Pref , Pauto

“ max

dpPref , Pautoq, dpPauto, Pref q

(6)

`
MHD

)
,

where dpP, P 1q is the maximum distance between a voxel in P and its nearest
voxel in P 1. In this case, smaller values indicate higher proximity between two
point sets, and thus a better segmentation.

3. Results

We ﬁrst test our segmentation method on the IBSR dataset, which has been
used in numerous studies on subcortical parcellation. In Section 3.2, we then
measure the beneﬁts of having a deeper network with smaller kernels and using
multiscale features, as well as evaluate the impact of various acquisition, demo-
graphics, and clinical factors, by applying our CNNbase, CNNsingle and CNNmulti
architectures on the ABIDE dataset. Finally, in Section 3.3, we demonstrate the
cross-dataset generalization of our method by evaluating on the IBSR dataset
the FCNN trained using the ABIDE dataset.

For notation simplicity, we now on denote brain structures by their ﬁrst two
characters, indicating within parenthesis their location, i.e left (L) or right (R)
hemisphere. For example, the caudate in the left brain side will be referred to
as Ca(L).

14

3.1. Evaluation on the IBSR dataset

Figure 3 shows the segmentation accuracy of the proposed CNNmulti ar-
chitecture, in terms of the DSC and MHD, obtained for the target left- and
right-side brain structures. We see that the segmentation of the pallidum, both
left and right, was signiﬁcantly less accurate than other structures (i.e., thala-
mus, caudate and putamen), likely due to the smaller size of this brain structure.
Furthermore, we observe that the segmentation of all four subcortical structures
is slightly more accurate in the right hemisphere, although the diﬀerences are
not statistically signiﬁcant following a Wilcoxon signed-rank test.

In light of the various studies using the IBSR dataset as segmentation bench-
mark, the results obtained by our method are state-of-the-art (Table 5). Specif-
ically, when comparing against the recent work of Shakeri et al. [17], which used
a 2D FCNN and the same validation methodology, our method achieved DSC
improvements ranging from 5% (in the thalamus) to 13% (in the caudate).

To demonstrate that the proposed approach actually learns from training
data, we also measured the performance of a simple majority voting technique,
using the same leave-one-out-cross-validation strategy. In this technique, each
voxel of the volume to segment is mapped to the most frequent class in cor-
responding voxels of training volumes. Applying this technique to all IBSR
subjects gave mean DSC values of 0.83, 0.69, 0.74 and 0.75 for the thalamus,
caudate, putamen and pallidum, respectively.

Figure 3: Segmentation accuracy (mean DSC and MHD) obtained, for each brain
structure, by the CNNmulti architecture on subjects of the IBSR dataset.

3.2. Evaluation on the ABIDE dataset

Table 3 gives the mean DSC and mean MHD obtained by the CNNbase,
CNNsingle and CNNmulti architectures on all test examples of the the ABIDE
dataset. Recall that these accuracy measures were computed using the labels
obtained from FreeSurfer , since ground-truth segmentations were not available.
We ﬁrst observe that having a deeper network, via smaller kernels, increases
the segmentation performance in both metrics.
In a one-sided A one-sided
non-parametric statistical test can handle non-Gaussian data distributions, and
accommodates the following alternative hypothesis: The architecture is better

15

than the baseline. Wilcoxon signed-rank test or t-test, the mean DSC and
MHD of CNNsingle is statistically better (i.e., higher for DSC and lower for
MHD) than CNNbase, with p ă 0.01. Likewise, when features extracted at
intermediate layers are fed into the ﬁrst fully-connected layer, the proposed
CNNmulti network generated more reliable segmentations, both in terms DSC
and MHD. These results are also statistically signiﬁcant, with p ă 0.01, in a
Wilcoxon signed-rank test or t-test.

Mean DSC

Mean MHD

Caudate

Structure CNNbase CNNsingle CNNmulti

Thalamus

Caudate

Putamen

Pallidum

Thalamus

Putamen

Pallidum

0.8987
(0.002)

0.8979
(0.0012)

0.8909
(0.0017)

0.8381
(0.0096)

0.1487
(0.0087)

0.1710
(0.0154)

0.2074
(0.0296)

0.2487
(0.0205)

0.9039
(0.0052)

0.9011
(0.0002)

0.8992
(0.0009)

0.8497
(0.0096)

0.1462
(0.0153)

0.1583
(0.0213)

0.1742
(0.0467)

0.2305
(0.0208)

0.9156
(0.0012)

0.9073
(0.0021)

0.9041
(0.0014)

0.8621
(0.0095)

0.1405
(0.0002)

0.1557
(0.0165)

0.1706
(0.0296)

0.2232
(0.0232)

Table 3: Mean DSC and MHD (standard deviation between brackets), obtained by the
three tested FCNN architectures on the ABIDE dataset. Bold font numbers indicate
the best result among the three architectures.

Figure 4 plots the mean DSC and MHD values obtained by our CNNmulti
architecture for each of the subject groups in Table 2. These values are grouped
by subcortical structure of interest, i.e., thalamus, caudate, putamen and pal-
lidum. For each structure, an additional bar is added, giving the mean DSC and
MHD obtained on subjects of all groups together. Across all subject groups,
the segmentations produced by our 3D FCNN achieved mean DSC values above
0.90 for all structures except the pallidum, which had a mean DSC of 0.85.
Likewise, mean MHD values were below 0.25 mm in all subject groups and for
all four subcortical structures. These results are consistent with those obtained
for the IBSR dataset.

Analyzing the results obtained using data from sites considered in training
(groups A-F), we observe that mean DSC values obtained for control subjects
(groups A-C) are usually higher than for ASD subjects (groups D-E). For in-
stance, putamen segmentation in control subjects less than 13 years old yielded

16

a) Data employed in training

b) Unseen data

Figure 4: Mean DSC and MHD values obtained for subject data used during training,
and for unseen data.

a mean DSC of 0.9127, compared to 0.9055 for ASD subjects in the same age
group. The same trend is seen for distance similarities, for example in the cau-
date, where a mean MHD of 0.1397 was obtained for control subjects, versus
0.2568 for ASD subjects. These results illustrate that physiological diﬀerences
related to autism, especially in young subjects, can have a small impact on
segmentation accuracy.

Looking at the impact of subject age on results, it can be seen that the
segmentation of the thalamus and caudate improves as the subject gets older,
in both control and ASD subjects. The relationship between subject age and
segmentation accuracy in these structures is further illustrated in Figure 5,
which gives the scatter plot of DSC versus age in the left/right thalamus and
caudate, considering all control and ASD subjects together. In each plot, the
Spearman rank correlation coeﬃcient and corresponding p-value are given as
variables r and p. Note that p-values have been corrected using the Bonferroni
procedure, to account for the multiple comparisons (8 structures). We notice
a weak but statistically signiﬁcant correlation, with p ă 0.01, validating our
previous observation.
It is also worth noting a greater variance in accuracy
occurring for younger subjects, most of the low accuracy values observed for

17

ages less than 20 years old. This is consistent with the fact that the brain is
continuously developing until adulthood, and suggests that the physiological
variability of younger subjects may not be completely captured while training
the network.

The same patterns can be observed when segmenting subjects from sites
not used in training (groups G-L). Particularly noticeable is the relationship
between age and accuracy, which can be seen in all structures, and in both
control and ASD subjects. Comparing with results obtained on data from sites
used in training, we ﬁnd no statistically signiﬁcant diﬀerence in accuracy (DSC
or MHD), for any brain structure. This suggests that the proposed method can
generalize to acquisition protocols and imaging parameters not seen in training.
Overall the results of these experiments illustrate that our method is robust to
various clinical, demographics and site-related factors.

Figure 5: Scatter plots of left and right thalamus and caudate segmentation perfor-
mance regarding DSC and subject age, where the Spearman rank correlation coeﬃcient
r and corresponding p-values are given for each plot. From these plots, a weak but
statistically signiﬁcant correlation between performance and subject age is observed.

Figures 6 and 7 give visual examples of segmentations obtained by our 3D

FCNN architecture and standard references contoured by FreeSurfer .

It can be observed that the segmentations generated by our proposed ar-
chitecture are signiﬁcantly smoother than those of FreeSurfer , regardless of the

18

subject group (i.e diagnosis, age, site employed or not in training). We also
notice that our system is better at identifying thin regions in the structures of
interest, for instance, the lower extremities of pallidum (green regions).

Site used in training

FreeSurfer

Our CNN

Figure 6: Visual examples of our 3D FCNN architecture compared with the standard
references contoured by FreeSurfer , for three test subjects from sites used in training.

To better understand the features learned by the network, Figure 8 shows
examples of feature map activations obtained for a given input patch (cyan
box in the ﬁgure). Each column corresponds to a diﬀerent CNN layer, left-side
columns corresponding to shallow layers, and right-side columns to deep layers
in the network. Likewise, images in each row correspond to a randomly selected
activation of the layer’s feature map. Although diﬃcult to analyze, we notice

19

Site NOT used in training

FreeSurfer

Our CNN

Figure 7: Visual examples of our 3D FCNN architecture compared with the references
standard contoured by FreeSurfer for three test subjects from sites not used in training.

that activation values in initial layers mainly indicate the presence of strong
edges or boundaries, whereas those in deeper layers of the network represent
more complex structures. In particular, images in the last two columns (i.e.,
convolutional layers of the network) roughly delineate the right caudate. Note
that 2D images are used here for visualization purposes and that both input
patches and features map activations are actually in 3D.

As previously explained, score maps (i.e., class probabilities, ranging from 0
to 1) are obtained at the end of the network, before the voxels are assigned to the
target labels. To illustrate this output, Figure 9 shows an example of probability

20

Figure 8: Feature map activations in all convolutional layers of the FCNN (right),
obtained for a given patch of the input MRI image (left). Each column corresponds
to a diﬀerent convolutional layer, from shallow to deeper, and each image in a row to
a features map activation randomly selected in the layer.

maps for a given slice of the volume. Red pixels indicate probability values close
to 1, and blue pixels near 0. Each image of the ﬁgure gives the probability map
of a speciﬁc structure of interest, including the background. It can be seen that
generated probability maps are well deﬁned, reﬂecting the actual contours of the
imaged structures (ﬁrst subﬁgure of the set). This suggests that these proba-
bility maps can be used directly for segmentation, without requiring additional,
and potential computationally expensive, spatial regularization. Smoothed ex-
amples of 3D segmentation outputs are displayed in Figure 10. These images,
which were rendered using the Medical Interaction ToolKit (MITK) software
package [47], highlight the spatial consistency of the obtained segmentation. All
automatic contours and probability maps generated by our network are publicly
available at: https://github.com/josedolz/3D-FCNN-BrainStruct.

Using the GPU mentioned in Section 2.5.2, our method takes on average
2-3 minutes to segment the data of a single subject from the ABIDE dataset
(nearly two days for all 947 subjects). For a fair comparison with a CPU-based
FreeSurfer implementation, we evaluated our method’s processing time when
running on the CPU only. A CPU version of our 3D CNN required less than
5 minutes per subject, in all cases. These CPU times are much lower than
the several hours required by FreeSurfer ’s full segmentation pipeline [48, 49].
Note that recent FreeSurfer versions provide GPU support for some steps of
the segmentation pipeline. For instance, in a benchmark test, performing a
linear volumetric registration (i.e., mri em register ) takes 3 minutes on a GPU,
compared to 33 minutes on a CPU2. However, this step is much less expensive
computationally than the deformable registration step (i.e., mri ca register ),

2http://surfer.nmr.mgh.harvard.edu/fswiki/CUDADevelopersGuide

21

MRI image

Background

Th(R)

Ca(R)

Pu(R)

Pa(R)

Th(L)

Ca(L)

Pu(L)

Pa(L)

Figure 9: Probability maps generated by the proposed 3D FCNN for the background
and the eight structures given an input MRI image. Note that input MRI has been
cropped for better resolution.

Figure 10: Diﬀerent views of a smoothed version of contours provided by our automatic
segmentation system. In these images, the thalamus, caudate, putamen and pallidum
are respectively depicted in yellow, cyan, red and green.

which typically takes an order of magnitude longer than linear registration3.

3.3. Cross-dataset evaluation

To further assess the potential of the proposed method on new data, we
used the model trained on the ABIDE dataset for segmenting volumes from the
IBSR dataset. Results of this experiment, presented in Table 4, suggest that
our method is reliable when tested on a diﬀerent dataset, with a mean DSC
ranging from 0.79 (in the pallidum) to 0.87 (in the thalamus). Compared to
both training and testing on the IBSR dataset, these results correspond to an

3http://surfer.nmr.mgh.harvard.edu/fswiki/ReconAllRunTimes

22

average decrease of 0.05 in DSC and an average increase of 0.12 mm in MHD.
A possible reason for this performance drop is the diﬀerence in voxel resolutions
between the two datasets, particularly in terms of thickness. While thickness in
images acquired across the various sites of the ABIDE project is in the range
between 1.0 to 1.2 mm (with only two sites providing images with thickness
outside this range, i.e., 0.86 and 1.3 mm), all the scans in IBSR had a thickness
of 1.5 mm.

Mean DSC

Training Thalamus Caudate Putamen Pallidum
0.91
0.84

IBSR
ABIDE

0.83
0.79

0.90
0.85

0.92
0.87

Mean MHD

IBSR
ABIDE

0.13
0.25

0.21
0.32

0.18
0.34

0.26
0.38

Table 4: Segmentation accuracy (mean DSC and MHD) obtained on the IBSR dataset
by the proposed 3D FCNN model trained with the ABIDE dataset or with the IBSR
dataset.

4. Discussion

We conducted a comprehensive quantitative evaluation of our method using
the publicly available IBSR and ABIDE datasets. The segmentation accuracy
of our method was measured with respect to the ground-truth segmentations of
the IBSR dataset, and compared to recently proposed methods for the task of
brain parcellation. As reported in Table 5, our method obtained state-of-the-art
performance, with mean DSC values ranging from 0.83 to 0.91 and mean MHD
values between 0.13 mm and 0.26 mm (Figure 3). The ABIDE dataset was then
used to demonstrate our method’s reliability for large-scale datasets acquired at
multiple sites, and measure the impact of various factors, including age, diagno-
sis group (i.e., healthy control or ASD). Considering all test subjects together,
our method obtained segmentations consistent with those of FreeSurfer , with
mean DSC between 0.86 and 0.92 and mean MHD ranging from 0.14 mm to
0.22 mm, across the target brain structures. The accuracy of our CNNmulti
architecture was statistically higher than two other tester architectures, which
do not use multiscale features and small kernels (Table 3).

Considering the diagnosis group of subjects, segmentations obtained for both
control and ASD subjects were of high quality, with similar mean DSC and MHD
values (Figure 7). Since ASD subjects are likely to have morphological (e.g.,
volumetric) diﬀerences in brain regions like the putamen [50], hippocampus [51]
or amygdala [52], compared to healthy sujects, this suggests that our method is
robust to such diﬀerences. Analyzing the results according to subject age group,
we noticed a slightly lower segmentation accuracy for younger subjects. This
is consistent the fact that the brain is continuously developing until adulthood,
and that young subjects have a larger variability during their development pro-
cess. However, it has been found that brain development in autism follows an

23

abnormal pattern, with accelerated growth in early life, which results in brain
enlargement during childhood [44]. Therefore, there may be some intermediate
states of brain development in early ages of control and ASD subjects that were
not fully captured by the network during training. blueAnother reason to ex-
plain such diﬀerences is that template-based segmentation may not be ﬂexible
enough to adapt to these pathological diﬀerences. Finally, by achieving a com-
parable performance on subjects from sites used in training and subject from
other sites, we demonstrated that our method is robust to the various imaging
parameters and protocols.

The automated segmentation of brain regions in MRI is a challenging task
due to the structural variability across individuals. To tackle this problem, a
broad range of approaches have been proposed during the last decade (Table
5), many of which are based on atlases. Although atlas-based segmentation has
been used successfully for subcortical brain structure segmentation, a single at-
las is often unsuitable for capturing the full structural variability of subjects in
a given neuroimaging study. Several strategies have been presented to overcome
the limitation of single atlas segmentation, for instance using multiple atlases
alongside label fusion techniques [53]. Nevertheless, one of the main drawbacks
shared by all atlas-based methods is their dependency to the image registration
step, which is both time-consuming and prone to errors. Recent studies have
reported segmentation times of up to several hours per subject when employ-
ing FreeSurfer [48, 49]. In [15], Powell et al. presented an approach based on
artiﬁcial neural networks as an alternative to atlas-based methods. However,
registration was also a key component of their segmentation scheme, thus hav-
ing the same drawbacks as atlas-based techniques. Also using machine learning,
a 2D FCNN was proposed in [17] for the task of subcortical brain parcellation.
Although the registration of subjects volumes was not initially required, the au-
thors tested their CNN on data pre-registered to the Talairach space. As demon-
strated by our experiments, our approach has the advantage of being alignment
independent, a property of great importance when working with multi-subject
or multi-site data.

Although 2D CNNs have led to record-breaking performances in various
computer vision tasks, their usefulness for 3D medical images is more limited.
Numerous strategies have been proposed to mitigate this, for instance, consid-
ering all three orthogonal planes [27], or using single slices with a regularization
scheme (e.g., CRF) to impose volumetric homogeneity [17]. While these tech-
niques have helped improving segmentation results, they lack the ability to
capture the full spatial context of 3D images. By using 3D convolutions, our
approach can better capture spatial context in volumetric data. This is re-
ﬂected by a performance improvement with respect to typical 2D CNN models.
Another noteworthy point is the ability of our method to successfully segment
subjects from sites that were not employed during training. Diﬀerences in scan-
ners or acquisition protocols, for instance, can introduce a signiﬁcant bias on the
appearance of images (e.g., alignment, contrast, etc.), and the heterogeneity of
multi-site data has been a stumbling block for large-scale neuroimaging studies.
As conﬁrmed by our results, incorporating training samples from diﬀerent sites,

24

Work

Method

Structures

DSC

Dataset

Artificial
Neural
Network

Own dataset

Artaechevarria et al. [58]
(2009)

Atlas

Heckemann et al. [54]
(2006)

Han et al. [55]
(2007)

Linguraru et al. [56]
(2007)

Bazin et al. [57]
(2008)

Powell et al. [15]
(2008)

Ciofolo et al. [59]
(2009)

Lotjonen et al. [10]
(2010)

Sabuncu et al. [60]
(2010)

Rousseau et al. [62]
(2011)

Asman et al. [63]
(2014)

Wang et al. [64]
(2014)

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Patenaude et al. [61]
(2011)

Bayesian
model

Shakeri et al. [17]
(2016)

2D FCNN
+ CRF

Bao et al. [65]
(2016)

2D CNN

Our CNN

3D FCNN

Own dataset

Own dataset

Own dataset

Own dataset

IBSR

IBSR

IBSR

IBSR

IBSR

IBSR

OASIS

OASIS

IBSR

IBSR

IBSR

0.90
0.90
0.90
0.80

0.88
0.84
0.85
0.76

0.88
0.82
0.86
0.79

0.77
0.78
0.82
-

0.88
0.84
0.85
-

0.88
0.83
0.87
0.81

0.77
0.60
0.66
0.56

0.89
0.85
0.90
0.80

0.91
0.87
0.89
0.84

0.89
0.83
0.88
0.79

0.88
0.87
0.87
0.64

0.89
0.90
0.89
0.84

0.89
0.75
0.88
0.84

0.87
0.78
0.83
0.75

0.90
0.87
0.88
0.80

0.92
0.91
0.90
0.83

0.92
0.92
0.91
0.86

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

25

Our CNN

3D FCNN

ABIDE

Table 5: Summary of brain subcortical structures segmentation methods. While most
of these methods employ IBSR for evaluation purposes, OASIS public dataset and
proprietary datasets have been also employed.

which cover a wider range of variability, allowed us to alleviate this problem.

For the experiments on the ABIDE dataset, the reference contours used

for training our CNN were obtained with FreeSurfer , which is considered as a
standard approach to subcortical brain labelling. While expert-labelled contours
would have provided a more reliable validation of our approach, it was found that
the contours obtained by our method were consistent with those of FreeSurfer .
Furthermore, a visual inspection of the results revealed that our method’s con-
tours were, in most cases, more regular than those obtained by FreeSurfer .
This suggests our method to be a suitable alternative to FreeSurfer ’s parcella-
tion pipeline. Nevertheless, an evaluation involving trained clinicians would be
necessary to fully validate this assertion.

An interesting ﬁnding that can be observed from the experiments, is the
comparable performance of the proposed 3D FCNN on both IBSR and ABIDE
datasets (See table 5, last two rows). It is important to note that while IBSR
subjects are pre-aligned, ABIDE subjects are not. This suggests that pre-
alignment does not have a signiﬁcant inﬂuence on the performance of the pro-
posed architecture.

Another important fact is that the performance was not aﬀected by dataset
size (IBSR is small whereas ABIDE is very large). This suggests that, in our
case, data augmentation may not be of substantial beneﬁt. This is due to our
use of sub-volumes, which yields a large number of samples for each subject.

Analyzing the results, we observed that the segmentation of several subject
data diﬀered considerably from others. Upon visual inspection, we found that
the corresponding MRI images had a poor quality (e.g., motion artifacts), and
decided not to include them in the evaluation. Figure 11 shows examples of 2D
slices (in axial view) of two subjects with problematic data.

Figure 11: Axial slices from a bad quality scan of two subjects that were excluded
from the evaluation.

Many modiﬁcations to the proposed architecture are possible. For example,
the architecture could have a diﬀerent number of convolutional/fully-connected
layers, or a diﬀerent number of ﬁlters/units in these layers. Several parameters
settings were tested in preliminary experiments to come up with a deﬁnitive ar-
chitecture. Although the chosen parameters were found to perform well on the

26

test data, they might not be optimal for other datasets. Despite this, small vari-
ations in the architecture are unlikely to have a large impact on performance.
In future work, it would be interesting to further investigate the optimization
of these parameters, such that they could be tuned automatically for a speciﬁc
task and target data. In [31], Kamnitsas et al. found that diﬀerent segment sizes
as input to their network led to diﬀerences in performance. In our study, we
used input sizes that worked well for their speciﬁc application, i.e. brain lesion
segmentation. Although our target problem also uses brain images, characteris-
tics of both problems are diﬀerent, and the eﬀect of input sizes on performance
might also diﬀer. We thus intend to investigate the impact of this factor in a
subsequent study.

A notable limitation of our architecture is its small receptive ﬁeld, con-
strained by the signiﬁcant memory requirements of 3D convolutions. As dis-
cussed earlier, some approaches have overcome this limitation by employing ad-
ditional path-ways with lower image resolutions as input. However, this strategy
comes at the cost of losing ﬁne-grained information in the segmentation. In fu-
ture work, we plan to investigate the use of dilated convolutional kernels [66] to
enlarge the receptive ﬁeld without losing resolution or increasing the number of
trainable parameters.

Another important aspect of CNNs is the transferability of knowledge em-
bedded in the pre-trained architectures, i.e transfer learning. The use of pre-
trained CNNs has been already investigated in previous works. Nevertheless,
available pre-trained models mainly come from 2D convolutions and its use is
often tailored to the same application. We believe that pre-trained CNNs can
be successfully used for diﬀerent applications sharing the same nature, even if
their objectives diﬀer. For instance, our 3D FCNN trained on subcortical brain
structures may be employed as pre-trained network to segment cardiac images.

5. Conclusion

We presented a method based on fully-convolutional networks (FCNNs) for
the automatic segmentation of subcortical brain regions. Our approach is the
ﬁrst to use 3D convolutional ﬁlters for this task. Moreover, by exploiting small
convolution kernels, we obtained a deeper network that has fewer parameters
and, thus,
is less prone to overﬁtting. Local and global context were also
modelled by injecting the outputs of intermediate layers in the network’s fully-
connected layers, thereby encouraging consistency between features extracted
at diﬀerent scales, and embedding ﬁne-grained information directly in the seg-
mentation process.

We showed our multiscale FCNN approach to obtain state-of-the-art per-
formance on the well-known IBSR dataset. We then evaluated the impact of
various factors, including acquisition site, age and diagnosis group, using 1112
unregistered subject datasets acquired from 17 diﬀerent sites. This large-scale
evaluation indicated our method to be robust to these factors, achieving out-
standing accuracy for all subjects groups. Additionally, these experiments have

27

highlighted the computational advantages of our approach compared to atlas-
based methods, by obtaining consistent segmentation results in less time. In
summary, we believe this work to be an important step toward the adoption of
automatic segmentation methods in large-scale neuroimaging studies.

Acknowledgments

This work is supported by the National Science and Engineering Research
Council of Canada (NSERC), discovery grant program, and by the ETS Re-
search Chair on Artiﬁcial Intelligence in Medical Imaging.

References

References

1. T. van Erp, D. Hibar, J. Rasmussen, D. Glahn, G. Pearlson, O. Andreassen,
I. Agartz, L. Westlye, U. Haukvik, A. Dale, et al., Subcortical brain vol-
ume abnormalities in 2028 individuals with schizophrenia and 2540 healthy
controls via the enigma consortium, Molecular psychiatry 21 (4) (2016)
547–553.

2. R. Geevarghese, D. E. Lumsden, N. Hulse, M. Samuel, K. Ashkan, Subcor-
tical structure volumes and correlation to clinical variables in parkinson’s
disease, Journal of Neuroimaging 25 (2) (2015) 275–280.

3. S. Goldman, L. M. O’Brien, P. A. Filipek, I. Rapin, M. R. Herbert, Mo-
tor stereotypies and volumetric brain alterations in children with autistic
disorder, Research in autism spectrum disorders 7 (1) (2013) 82–92.

4. X. Llad´o, A. Oliver, M. Cabezas, J. Freixenet, J. C. Vilanova, A. Quiles,
L. Valls, L. Rami´o-Torrent`a, `A. Rovira, Segmentation of multiple sclero-
sis lesions in brain mri: a review of automated approaches, Information
Sciences 186 (1) (2012) 164–185.

5. D. Garc´ıa-Lorenzo, S. Francis, S. Narayanan, D. L. Arnold, D. L. Collins,
Review of automatic segmentation methods of multiple sclerosis white mat-
ter lesions on conventional magnetic resonance imaging, Medical image anal-
ysis 17 (1) (2013) 1–18.

6. P. Koolschijn, N. E. van Haren, G. J. Lensvelt-Mulders, H. Pol, E. Hilleke,
R. S. Kahn, Brain volume abnormalities in major depressive disorder: A
meta-analysis of magnetic resonance imaging studies, Human brain mapping
30 (11) (2009) 3719–3735.

7. M. Langen, H. G. Schnack, H. Nederveen, D. Bos, B. E. Lahuis, M. V.
de Jonge, H. van Engeland, S. Durston, Changes in the developmental tra-
jectories of striatum in autism, Biological psychiatry 66 (4) (2009) 327–333.

28

8. M. Deeley, A. Chen, R. Datteri, J. Noble, A. Cmelak, E. Donnelly, A. Mal-
colm, L. Moretti, J. Jaboin, K. Niermann, et al., Comparison of manual
and automatic segmentation methods for brain structures in the presence
of space-occupying lesions: a multi-expert study, Physics in medicine and
biology 56 (14) (2011) 4557.

9. J. Dolz, L. Massoptier, M. Vermandel, Segmentation algorithms of subcor-
tical brain structures on mri for radiotherapy and radiosurgery: a survey,
IRBM 36 (4) (2015) 200–212.

10. J. M. L¨otj¨onen, R. Wolz, J. R. Koikkalainen, L. Thurfjell, G. Waldemar,
H. Soininen, D. Rueckert, A. D. N. Initiative, et al., Fast and robust multi-
atlas segmentation of brain magnetic resonance images, Neuroimage 49 (3)
(2010) 2352–2365.

11. H. Wang, J. W. Suh, S. R. Das, J. B. Pluta, C. Craige, P. A. Yushke-
vich, Multi-atlas segmentation with joint label fusion, IEEE transactions
on pattern analysis and machine intelligence 35 (3) (2013) 611–623.

12. K. O. Babalola, T. F. Cootes, C. J. Twining, V. Petrovic, C. Taylor, 3d
brain segmentation using active appearance models and local regressors,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2008, pp. 401–408.

13. A. Rao, P. Aljabar, D. Rueckert, Hierarchical statistical shape analysis and
prediction of sub-cortical brain structures, Medical image analysis 12 (1)
(2008) 55–68.

14. J. Yang, J. S. Duncan, 3d image segmentation of deformable objects with
joint shape-intensity prior models using level sets, Medical Image Analysis
8 (3) (2004) 285–294.

15. S. Powell, V. A. Magnotta, H. Johnson, V. K. Jammalamadaka, R. Pierson,
N. C. Andreasen, Registration and machine learning-based automated seg-
mentation of subcortical and cerebellar brain structures, Neuroimage 39 (1)
(2008) 238–247.

16. J. Dolz, A. Laprie, S. Ken, H.-A. Leroy, N. Reyns, L. Massoptier, M. Ver-
mandel, Supervised machine learning-based classiﬁcation scheme to segment
the brainstem on mri in multicenter brain tumor treatment context, Inter-
national journal of computer assisted radiology and surgery 11 (1) (2016)
43–51.

17. M. Shakeri, S. Tsogkas, E. Ferrante, S. Lippe, S. Kadoury, N. Paragios,
I. Kokkinos, Sub-cortical brain structure segmentation using f-cnn’s, arXiv
preprint arXiv:1602.02130.

18. Y. LeCun, L. Bottou, Y. Bengio, P. Haﬀner, Gradient-based learning ap-
plied to document recognition, Proceedings of the IEEE 86 (11) (1998)
2278–2324.

29

19. A. Krizhevsky, I. Sutskever, G. E. Hinton, Imagenet classiﬁcation with deep
convolutional neural networks, in: Advances in neural information process-
ing systems, 2012, pp. 1097–1105.

20. D. Ciresan, A. Giusti, L. M. Gambardella, J. Schmidhuber, Deep neural
networks segment neuronal membranes in electron microscopy images, in:
Advances in neural information processing systems, 2012, pp. 2843–2851.

21. W. Zhang, R. Li, H. Deng, L. Wang, W. Lin, S. Ji, D. Shen, Deep con-
volutional neural networks for multi-modality isointense infant brain image
segmentation, NeuroImage 108 (2015) 214–224.

22. M. Havaei, A. Davy, D. Warde-Farley, A. Biard, A. Courville, Y. Bengio,
C. Pal, P.-M. Jodoin, H. Larochelle, Brain tumor segmentation with deep
neural networks, Medical Image Analysis.

23. S. Pereira, A. Pinto, V. Alves, C. A. Silva, Brain tumor segmentation using
convolutional neural networks in mri images, IEEE transactions on medical
imaging 35 (5) (2016) 1240–1251.

24. N. Lee, A. F. Laine, A. Klein, Towards a deep learning approach to brain
parcellation, in: 2011 IEEE International Symposium on Biomedical Imag-
ing: From Nano to Macro, IEEE, 2011, pp. 321–324.

25. P. Moeskops, M. A. Viergever, A. M. Mendrik, L. S. de Vries, M. J. Benders,
I. Iˇsgum, Automatic segmentation of mr brain images with a convolutional
neural network, IEEE transactions on medical imaging 35 (5) (2016) 1252–
1261.

26. F. Milletari, S.-A. Ahmadi, C. Kroll, A. Plate, V. Rozanski, J. Maiostre,
J. Levin, O. Dietrich, B. Ertl-Wagner, K. B¨otzel, et al., Hough-cnn: Deep
learning for segmentation of deep brain regions in mri and ultrasound, arXiv
preprint arXiv:1601.07014.

27. A. de Brebisson, G. Montana, Deep neural networks for anatomical brain
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition Workshops, 2015, pp. 20–28.

28. C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan,
V. Vanhoucke, A. Rabinovich, Going deeper with convolutions, in: Proceed-
ings of the IEEE Conference on Computer Vision and Pattern Recognition,
2015, pp. 1–9.

29. J. Long, E. Shelhamer, T. Darrell, Fully convolutional networks for semantic
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2015, pp. 3431–3440.

30. T. Brosch, Y. Yoo, L. Y. Tang, D. K. Li, A. Traboulsee, R. Tam, Deep
convolutional encoder networks for multiple sclerosis lesion segmentation,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2015, pp. 3–11.

30

31. K. Kamnitsas, C. Ledig, V. F. Newcombe, J. P. Simpson, A. D. Kane,
D. K. Menon, D. Rueckert, B. Glocker, Eﬃcient multi-scale 3d cnn with
fully connected crf for accurate brain lesion segmentation, arXiv preprint
arXiv:1603.05959.

32. K. He, X. Zhang, S. Ren, J. Sun, Delving deep into rectiﬁers: Surpassing
human-level performance on imagenet classiﬁcation, in: Proceedings of the
IEEE International Conference on Computer Vision, 2015, pp. 1026–1034.

33. K. Simonyan, A. Zisserman, Very deep convolutional networks for large-

scale image recognition, arXiv preprint arXiv:1409.1556.

34. T. Brox, A. Bruhn, N. Papenberg, J. Weickert, High accuracy optical ﬂow
estimation based on a theory for warping, in: European conference on com-
puter vision, Springer, 2004, pp. 25–36.

35. C. Farabet, C. Couprie, L. Najman, Y. LeCun, Learning hierarchical fea-
tures for scene labeling, IEEE transactions on pattern analysis and machine
intelligence 35 (8) (2013) 1915–1929.

36. L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, A. L. Yuille, Semantic
image segmentation with deep convolutional nets and fully connected crfs,
arXiv preprint arXiv:1412.7062.

37. L.-C. Chen, J. T. Barron, G. Papandreou, K. Murphy, A. L. Yuille, Semantic
image segmentation with task-speciﬁc edge detection using cnns and a dis-
criminatively trained domain transform, arXiv preprint arXiv:1511.03328.

38. B. Hariharan, P. Arbel´aez, R. Girshick, J. Malik, Hypercolumns for object
segmentation and ﬁne-grained localization, in: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition, 2015, pp. 447–
456.

39. S. M. Smith, Fast robust automated brain extraction, Human brain mapping

17 (3) (2002) 143–155.

40. J. Laﬀerty, A. McCallum, F. Pereira, Conditional random ﬁelds: Probabilis-
tic models for segmenting and labeling sequence data, in: Proceedings of
the eighteenth international conference on machine learning, ICML, Vol. 1,
2001, pp. 282–289.

41. A. Di Martino, C.-G. Yan, Q. Li, E. Denio, F. X. Castellanos, K. Alaerts,
J. S. Anderson, M. Assaf, S. Y. Bookheimer, M. Dapretto, et al., The
autism brain imaging data exchange: towards a large-scale evaluation of the
intrinsic brain architecture in autism, Molecular psychiatry 19 (6) (2014)
659–667.

42. B. Fischl, Freesurfer, Neuroimage 62 (2) (2012) 774–781.

31

43. S. S. Ghosh, S. Kakunoori, J. Augustinack, A. Nieto-Castanon, I. Kovelman,
N. Gaab, J. A. Christodoulou, C. Triantafyllou, J. D. Gabrieli, B. Fischl,
Evaluating the validity of volume-based and surface-based brain image reg-
istration for developmental cognitive neuroscience studies in children 4 to
11 years of age, Neuroimage 53 (1) (2010) 85–93.

44. E. H. Aylward, N. J. Minshew, K. Field, B. Sparks, N. Singh, Eﬀects of age
on brain volume and head circumference in autism, Neurology 59 (2) (2002)
175–183.

45. J. Bergstra, O. Breuleux, F. Bastien, P. Lamblin, R. Pascanu, G. Des-
jardins, J. Turian, D. Warde-Farley, Y. Bengio, Theano: A cpu and gpu
math compiler in python, in: Proc. 9th Python in Science Conf, 2010, pp.
1–7.

46. L. R. Dice, Measures of the amount of ecologic association between species,

Ecology 26 (3) (1945) 297–302.

47. I. Wolf, M. Vetter, I. Wegner, T. B¨ottger, M. Nolden, M. Sch¨obinger,
M. Hastenteufel, T. Kunert, H.-P. Meinzer, The medical imaging interaction
toolkit, Medical image analysis 9 (6) (2005) 594–604.

48. A. R. Khan, L. Wang, M. F. Beg, Freesurfer-initiated fully-automated sub-
cortical brain segmentation in mri using large deformation diﬀeomorphic
metric mapping, Neuroimage 41 (3) (2008) 735–746.

49. Y. Huo, A. J. Plassard, A. Carass, S. M. Resnick, D. L. Pham, J. L. Prince,
B. A. Landman, Consistent cortical reconstruction and multi-atlas brain
segmentation, NeuroImage 138 (2016) 197–210.

50. W. Sato, Y. Kubota, T. Kochiyama, S. Uono, S. Yoshimura, R. Sawada,
M. Sakihama, M. Toichi, Increased putamen volume in adults with autism
spectrum disorder., Frontiers in human neuroscience 8 (2013) 957–957.

51. R. Nicolson, T. J. DeVito, C. N. Vidal, Y. Sui, K. M. Hayashi, D. J. Drost,
P. C. Williamson, N. Rajakumar, A. W. Toga, P. M. Thompson, Detection
and mapping of hippocampal abnormalities in autism, Psychiatry Research:
Neuroimaging 148 (1) (2006) 11–21.

52. C. M. Schumann, J. Hamstra, B. L. Goodlin-Jones, L. J. Lotspeich,
H. Kwon, M. H. Buonocore, C. R. Lammers, A. L. Reiss, D. G. Amaral,
The amygdala is enlarged in children but not adolescents with autism; the
hippocampus is enlarged at all ages, The Journal of Neuroscience 24 (28)
(2004) 6392–6401.

53. A. R. Khan, N. Cherbuin, W. Wen, K. J. Anstey, P. Sachdev, M. F. Beg,
Optimal weights for local multi-atlas fusion using supervised learning and
dynamic information (superdyn): validation on hippocampus segmentation,
NeuroImage 56 (1) (2011) 126–139.

32

54. R. A. Heckemann, J. V. Hajnal, P. Aljabar, D. Rueckert, A. Hammers,
Automatic anatomical brain mri segmentation combining label propagation
and decision fusion, NeuroImage 33 (1) (2006) 115–126.

55. X. Han, B. Fischl, Atlas renormalization for improved brain mr image seg-
mentation across scanner platforms, IEEE transactions on medical imaging
26 (4) (2007) 479–486.

56. M. G. Linguraru, T. Vercauteren, M. Reyes-Aguirre, M. ´A. G. Ballester,
N. Ayache, Segmentation propagation from deformable atlases for brain
mapping and analysis, Brain Research Journal 1 (4) (2007) 1–18.

57. P.-L. Bazin, D. L. Pham, Homeomorphic brain image segmentation with
topological and statistical atlases, Medical image analysis 12 (5) (2008)
616–625.

58. X. Artaechevarria, A. Munoz-Barrutia, C. Ortiz-de Sol´orzano, Combination
strategies in multi-atlas image segmentation: application to brain mr data,
IEEE transactions on medical imaging 28 (8) (2009) 1266–1277.

59. C. Ciofolo, C. Barillot, Atlas-based segmentation of 3d cerebral structures
with competitive level sets and fuzzy control, Medical image analysis 13 (3)
(2009) 456–470.

60. M. R. Sabuncu, B. T. Yeo, K. Van Leemput, B. Fischl, P. Golland, A genera-
tive model for image segmentation based on label fusion, IEEE transactions
on medical imaging 29 (10) (2010) 1714–1729.

61. B. Patenaude, S. M. Smith, D. N. Kennedy, M. Jenkinson, A bayesian model
of shape and appearance for subcortical brain segmentation, Neuroimage
56 (3) (2011) 907–922.

62. F. Rousseau, P. A. Habas, C. Studholme, A supervised patch-based ap-
proach for human brain labeling, IEEE transactions on medical imaging
30 (10) (2011) 1852–1862.

63. A. J. Asman, F. W. Bryan, S. A. Smith, D. S. Reich, B. A. Landman,
Groupwise multi-atlas segmentation of the spinal cords internal structure,
Medical image analysis 18 (3) (2014) 460–471.

64. J. Wang, C. Vachet, A. Rumple, S. Gouttard, C. Ouziel, E. Perrot, G. Du,
X. Huang, G. Gerig, M. A. Styner, Multi-atlas segmentation of subcortical
brain structures via the autoseg software pipeline, Frontiers in neuroinfor-
matics 8 (2014) 7.

65. S. Bao, A. C. Chung, Multi-scale structured cnn with label consistency
for brain mr image segmentation, Computer Methods in Biomechanics and
Biomedical Engineering: Imaging & Visualization (2016) 1–5.

66. F. Yu, V. Koltun, Multi-scale context aggregation by dilated convolutions,

arXiv preprint arXiv:1511.07122.

33

7
1
0
2
 
r
p
A
 
0
2
 
 
]

V
C
.
s
c
[
 
 
2
v
5
2
9
3
0
.
2
1
6
1
:
v
i
X
r
a

3D fully convolutional networks for subcortical
segmentation in MRI: A large-scale study

Jose Dolza,˚, Christian Desrosiersa, Ismail Ben Ayeda

aLIVIA Laboratory, ´Ecole de technologie sup´erieure (ETS), Montreal, QC, Canada

Abstract

This study investigates a 3D and fully convolutional neural network (CNN)
for subcortical brain structure segmentation in MRI. 3D CNN architectures have
been generally avoided due to their computational and memory requirements
during inference. We address the problem via small kernels, allowing deeper
architectures. We further model both local and global context by embedding
intermediate-layer outputs in the ﬁnal prediction, which encourages consistency
between features extracted at diﬀerent scales and embeds ﬁne-grained infor-
mation directly in the segmentation process. Our model is eﬃciently trained
end-to-end on a graphics processing unit (GPU), in a single stage, exploiting
the dense inference capabilities of fully CNNs.

We performed comprehensive experiments over two publicly available datasets.

First, we demonstrate a state-of-the-art performance on the ISBR dataset.
Then, we report a large-scale multi-site evaluation over 1112 unregistered sub-
ject datasets acquired from 17 diﬀerent sites (ABIDE dataset), with ages ranging
from 7 to 64 years, showing that our method is robust to various acquisition
protocols, demographics and clinical factors. Our method yielded segmenta-
tions that are highly consistent with a standard atlas-based approach, while
running in a fraction of the time needed by atlas-based methods and avoiding
registration/normalization steps. This makes it convenient for massive multi-
site neuroanatomical imaging studies. To the best of our knowledge, our work
is the ﬁrst to study subcortical structure segmentation on such large-scale and
heterogeneous data.

Keywords: Deep learning, MRI segmentation, brain, 3D CNN, fully CNN.

1. Introduction

Accurate segmentation of subcortical brain structures is crucial to the study
of various brain disorders such as schizophrenia [1], Parkinson [2], autism [3]
and multiple-sclerosis [4, 5], as well as to the assessment of structural brain
abnormalities [6]. For instance, changes in the morphology and developmental

˚Corresponding author: jose.dolz.upv@gmail.com

trajectories of the caudate nucleus, putamen and nucleus accumbens have been
associated with autism spectrum disorder (ASD), and may be linked to the
occurrence of restricted and repetitive behaviors [7]. Accurate segmentation of
these structures would help understanding such complex disorders, monitoring
their progression and evaluating treatment outcomes.

Automating subcortical structure segmentation remains challenging, despite
the substantial research interest and eﬀorts devoted to this computational prob-
lem. Clinicians still rely on manual delineations, a prohibitively time-consuming
process, which depends on rater variability and is prone to inconsistency [8].
These issues impede the use of manual segmentation for very large datasets, such
as those currently used in various multi-center neuroimaging studies. Therefore,
there is a critical need for fast, accurate, reproducible, and fully automated
methods for segmenting subcortical brain structures.

1.1. Prior art

A multitude of (semi-) automatic methods have been proposed for segment-
ing brain structures [9]. We can divide prior-art methods into four main cat-
egories: atlas-based methods [10, 11], statistical models [12, 13], deformable
models [14] and machine learning based classiﬁers [15, 16]. Atlas-based meth-
ods work by aligning one or several anatomical templates to the target image,
via a linear or non-linear registration process, and then transferring segmen-
tation labels from the templates to the image. Although these methods often
provide satisfactory results, segmentation times are typically long (ranging from
several minutes to hours) due to the complexity of registration steps. Further-
more, such methods may not be able to capture the full anatomical variability
of target subjects (e.g., subjects of young age or with structural abnormalities),
and can fail in cases of large misalignments or deformations. Unlike atlas-based
methods, approaches based on statistical models use training data to learn a
parametric model describing the variability of speciﬁc brain structures (e.g.,
shapes, textures, etc.). When the number of training images is small compared
to the number of parameters to learn, these approaches might result in overﬁt-
ting the data, thereby introducing bias in the results. The robustness of such
statistical approaches might also be aﬀected by the presence of noise in training
data. Finally, because parameters are updated iteratively by searching in the
vicinity of the current solution, an accurate initialization is required for such
approaches to converge to the correct structure. Unlike statistical models, seg-
mentation techniques using deformable models do not require training data, nor
prior knowledge. Because they can evolve to ﬁt any target structure, such mod-
els are considered to be highly ﬂexible compared to other segmentation methods.
Yet, deformable models are quite sensitive to the initialization of the segmenta-
tion contour and the stopping criteria, both of which depend on the character-
istics of the problem. The last category of methods, based on machine learning,
uses training images to learn a predictive model that assigns class probabilities
to each pixel/voxel. These probabilities are sometimes used as unary potentials
in standard regularization techniques such as graph cuts [17]. Recently, machine
learning approaches have achieved state-of-the-art performances in segmenting

2

brain structures [9, 15]. Nevertheless, these approaches usually involve heavy
algorithm design, with carefully engineered, application-dependent features and
meta-parameters, which limit their applicability to diﬀerent brain structures
and modalities.

Deep learning has recently emerged as a powerful tool, achieving state-of-the
art results in numerous applications of pattern or speech recognition. Unlike
traditional methods that use hand-crafted features, deep learning techniques
have the ability to learn hierarchical features representing diﬀerent levels of ab-
straction, in a data-driven manner. Among the diﬀerent types of deep learning
approaches, convolutional neural networks (CNNs) [18, 19] have shown out-
standing potential for solving computer vision and image analysis problems.
Networks of this type are typically made up of multiple convolution, pooling
and fully-connected layers, the parameters of which are learned using back-
propagation. Their advantage over traditional architectures come from two
properties: local-connectivity and parameter sharing. Unlike in typical neural
nets, units in hidden layers of a CNN are only connected to a small number
of units, corresponding to a spatially localized region. This reduces the num-
ber of parameters in the net, which limits memory/computational requirements
and reduces the risk of overﬁtting. Moreover, CNNs also reduce the number of
learned parameters by sharing the same basis function (i.e., convolution ﬁlters)
across diﬀerent image locations.

In biomedical imaging, CNNs have been recently investigated for several
neuroimaging applications [20, 21, 22, 23]. For instance, Ciresan et al.
[20]
used a CNN to accurately segment neuronal membranes in electron microscopy
images. In this study, a sliding-window strategy was applied to predict the class
probabilities of each pixel, using patches centered at the pixels as input to the
network. An important drawback of this strategy is that its label prediction
is based on very localized information. Moreover, since the prediction must be
carried out for each pixel, this strategy is typically slow. Zhang et al. [21] pre-
sented a CNN method to segment three brain tissues (white matter, gray matter
and cerebrospinal ﬂuid) from multi-sequence magnetic resonance imaging (MRI)
images of infants. As inputs to the network, 2D images corresponding to a sin-
gle plane were used. Deep CNNs were also investigated for glioblastoma tumor
segmentation [22], using an architecture with several pathways, which modeled
both local and global-context features. Pereira et al. [23] presented a diﬀerent
CNN architecture for segmenting brain tumors in MRI data, exploring the use
of small convolution kernels. Closer to this work, several recent studies inves-
tigated CNNs for segmenting subcortical brain structures [17, 24, 25, 26, 27].
For instance, Lee et al. [24] presented a CNN-based approach to learn discrim-
inative features from expert-labelled MR images. The study in [25] used CNNs
to segment brain structures in images from ﬁve diﬀerent datasets, and reported
performance for subjects in various age groups (ranging from pre-term infants
to older adults). A multiscale patch-based strategy was used to improve these
results, where patches of diﬀerent sizes were extracted around each pixel as
input to the network.

Although medical images are often in the form of 3D volumes (e.g., MRI

3

or computed tomography scans), most of the existing CNN approaches use a
slice-by-slice analysis of 2D images. An obvious advantage of a 2D approach,
compared to one using 3D images, is its lower computational and memory re-
quirements. Furthermore, 2D inputs accommodate using pre-trained nets, ei-
ther directly or via transfer learning. However, an important drawback of such
an approach is that anatomic context in directions orthogonal to the 2D plane
is completely discarded. As discussed recently in [26], considering 3D MRI
data directly, instead of slice-by-slice, can improve the performance of a seg-
mentation method. To incorporate 3D contextual information, de Brebisson
et al. used 2D CNNs on images from the three orthogonal planes [27]. The
memory requirements of fully 3D networks were avoided by extracting large 2D
patches from multiple image scales, and combining them with small single-scale
3D patches. All patches were assembled into eight parallel network pathways
to achieve a high-quality segmentation of 134 brain regions from whole brain
MRI. More recently, Shakeri et al.
[17] proposed a CNN scheme based on 2D
convolutions to segment a set of subcortical brain structures. In their work, the
segmentation of the whole volume was ﬁrst achieved by processing each 2D slice
independently. Then, to impose volumetric homogeneity, they constructed a 3D
conditional random ﬁeld (CRF) using scores from the CNN as unary potentials
in a multi-label energy minimization problem.

So far, 3D CNNs have been largely avoided due to the computational and
memory requirements of running 3D convolutions during inference. However,
the ability to fully exploit dense inference is an important advantage of 3D CNNs
over 2D representations [28]. While standard CNN approaches predict the class
probabilities of each pixel independently from its local patch, fully convolutional
networks (FCNNs) [29] consider the network as a large non-linear ﬁlter whose
output yields class probabilities. This accommodates images of arbitrary size,
as in regular convolution ﬁlters, and provides much greater eﬃciency by avoid-
ing redundant convolutions/pooling operations. Recently, 3D FCNNs yielded
outstanding segmentation performances in the context of brain lesions [30, 31].

1.2. Contributions

This study investigates a 3D and fully convolutional neural network for sub-
cortical brain structure segmentation in MRI. Architectures using 3D convo-
lutions have been generally avoided due to their computational and memory
requirements during inference and, to the best of our knowledge, this work is
the ﬁrst to examine 3D FCNNs for subcortical structure segmentation. We ad-
dress the problem via small kernels, allowing deeper architectures. We further
model both local and global context by embedding intermediate-layer outputs
in the ﬁnal prediction, which encourages consistency between features extracted
at diﬀerent scales and embeds ﬁne-grained information directly in the segmen-
tation process. This contrasts with previous architectures (e.g., [31]), where
global context is modelled using separate pathways and low-resolution images.
Our model is eﬃciently trained end-to-end on a graphics processing unit (GPU),
in a single learning stage, exploiting the dense inference capabilities of FCNNs.
Compared to conventional approaches, which typically require time-consuming

4

and error-prone registration steps, the proposed method also has the advantage
of being alignment independent. This property is of great importance in clini-
cal applications where scans from diﬀerent subjects, modalities and acquisition
protocols need to be analyzed.

We performed comprehensive experiments over two publicly available datasets.

The IBSR dataset is ﬁrst used to compare our method to existing approaches
for subcortical brain segmentation, and demonstrate its state-of-the-art perfor-
mance. We then report a large-scale evaluation over 1112 unregistered subject
data from the multi-site ABIDE dataset, with ages ranging from 7 to 64 years,
showing that our method is robust to various acquisition protocols, demograph-
ics and clinical factors. Our method yielded segmentations that are highly
consistent with a standard atlas-based approach, while running in a fraction of
the time needed by such methods.

This makes it convenient for massive multi-site neuroanatomical imaging
studies. We believe our work is the ﬁrst to assess subcortical structure segmen-
tation on such large-scale and heterogeneous data.

2. Methods and materials

We start by presenting the proposed 3D FCNN architecture, which is at the
core of our segmentation method. Sections 2.2 and 2.3 then describe how this
architecture can be improved by additional convolution layers with smaller ker-
nels, and by considering multiscale information from intermediate convolutional
layers. Thereafter, Section 2.4 presents the pre- and post-processing steps per-
formed by our method on the data and output segmentations. Finally, Section
2.5 focuses on the study design and experimental setup, providing information
on the datasets used in the study, implementation details of the tested net-
work architectures, and the metrics used to evaluate the performance of these
architectures.

2.1. The proposed 3D FCNN architecture

Figure 1: The baseline FCNN architecture (CNNbase), composed of 3 convolutional
layers with kernels of size 7ˆ7ˆ7. This FCNN is obtained from a standard CNN by
replacing the fully connected layers by a set of 1ˆ1ˆ1 convolutional ﬁlters.

5

Traditional CNN architectures, like AlexNet or GoogLeNet, require an input
image of ﬁxed size and use pooling layers to gradually reduce the spatial reso-
lution of the representation. Spatial information is then completely discarded
in fully-connected layers at the end of the network. Although originally de-
signed for image recognition and classiﬁcation tasks, such architectures can be
used for semantic segmentation via a sliding-window approach, where regions
deﬁned by the window are processed one-by-one. However, this strategy has a
low eﬃciency, due to the many redundant convolution and pooling operations.
Processing regions in the image independently, instead of as a whole, also re-
duces segmentation accuracy. Fully Convolutional Networks (FCNNs) mitigate
these limitations by treating the network as a single non-linear convolution,
trained end-to-end [29]. Unlike traditional CNNs, FCNNs are only composed
of convolutional layers, allowing them to be applied to images of arbitrary size.
Moreover, because the spatial map of class scores is obtained in a single dense
inference step, FCNNs can avoid redundant convolution and pooling operations,
which makes them computationally more eﬃcient.

The proposed segmentation method is based on a 3D fully CNN (FCNN)
architecture, depicted in Figure 1. This architecture is composed of three con-
volutional layers, each one containing several 3D convolution ﬁlters (or kernels).
Each ﬁlter in a layer is applied to the output of the previous layer, or the input
volume in the case of the ﬁrst layer, and the result of this operation is known
as a feature map. Denote as ml the number of convolution kernels in layer l of
the network, and let xn
l´1 be the 3D array corresponding to the n-th input of
layer l. The k-th output feature map of layer l is then given by:

yk
l “ f

W k,n

i b xn

l´1 ` bk
l

(1)

¯
,

´ ml´1ÿ

n“1

where W k,n
is a ﬁlter convolved (represented by b) with each of the previous
i
layers, bk
l is the bias, and f is a non-linear activation function. Note that feature
maps produced by convolutions are slightly smaller than their input volumes,
the size diﬀerence along each dimension equal to the ﬁlter size in this dimension,
minus one voxel. Hence, applying a 3ˆ3ˆ3 convolution ﬁlter will reduce the
input volume by 2 voxels along each dimension. A stride may also be deﬁned
for each convolutional layer, representing the displacement of the ﬁlter, along
the three dimensions, after each application.

In some FCNN architectures, pooling layers may be added between convo-
lutional layers to reduce spatial resolution and, thus, the number of parameters
to learn. Such layers can be interpreted as simple convolutional layers with
non-unit stride (e.g., a stride of 2). The resolution of the input image is recov-
ered by adding deconvolution (or transpose convolution) layers at the end of the
network [29]. However, this strategy may lead to coarse segmentations. In the
proposed architecture, we preserve spatial resolution by avoiding pooling layers
and using a unit stride for all convolutional layers.

For the activation function, we used the Parametric Rectiﬁed Linear Unit
(PReLU) [32] instead of the popular Rectiﬁed Linear Unit (ReLU). This function

6

can be formulated as

f pxiq “ maxp0, xiq ` ai ¨minp0, xiq,

(2)

where xi deﬁnes the input signal, f pxiq represents the output, and ai is a scaling
coeﬃcient for when xi is negative. While ReLU employs predeﬁned values
for ai (typically equal to 0), PReLU requires learning this coeﬃcient. Thus,
this activation function can adapt the rectiﬁers to their inputs, improving the
network’s accuracy at a negligible extra computational cost.

As in standard CNNs, fully-connected layers are added at the end of the
network to encode semantic information. However, to ensure that the network
contains only convolutional layers, we use the strategy described in [29] and
[31], in which fully-connected layers are converted to a large set of 1 ˆ 1 ˆ 1
convolutions. Doing this allows the network to retain spatial information and
learn the parameters of these layers as in other convolutional layers. Lastly,
neurons in the last layer (i.e., the classiﬁcation layer) are grouped into m “
C feature maps, where C denotes the number of classes. The output of the
classiﬁcation layer L is then converted into normalized probability values via a
softmax function. The probability score of class c P t1, . . . , Cu is computed as
follows:

pc “

ř

`

˘

yc
exp
L
`
C
c1“1 exp

yc1
L

˘ .

(3)

The 3D FCNN architecture described in this section constitutes our baseline
model for segmentation. In the following two sections, we describe how a deeper
architecture can be achieved with smaller convolution kernels and how multiscale
information can be added by combining features from intermediate convolutional
layers.

2.2. Deeper architecture via small convolution kernels

Numerous studies have shown the beneﬁts of using deeper network archi-
tectures.
In FCNNs, however, having many convolutions layers reduces the
resolution of feature maps at the end of the network, leading to a coarse seg-
mentation. To alleviate this problem, we extend the architecture of Figure 1 by
replacing each convolutional layer by three successive convolutional layers with
the same number of kernels, but smaller kernel sizes: 3ˆ3ˆ3 instead of 7ˆ7ˆ7.
The resulting topology is shown in Figure 2.

By using these smaller kernels, we obtain a deeper architecture while having
fewer parameters in the network. Consequently, the network can learn a more
complex hierarchy of features, with a reduced risk of overﬁtting. This fact is
supported by the ﬁndings reported in [33] for 2D CNNs, and in [31] for 3D
CNNs.

2.3. Combining features across multiple scales

In CNNs, the sequence of layers encodes features representing increasing
levels of abstraction: the ﬁrst convolutional layer typically models simple edge or

7

Figure 2: The proposed improvements to the baseline architecture CNNbase. A deeper
architecture is achieved via smaller convolution kernels (3 ˆ 3 ˆ 3). Also, multiscale
information is used in the segmentation by injecting feature maps of intermediate layers
(convolutional layers 3, 6 and 9) directly in the fully-connected layers, as represented
by the arrows. We refer as CNNsingle the architecture with small kernel but a single
scale, and as CNNmulti the architecture including both small kernels and multiscale
information.

blob detectors, whereas convolutional layers directly before the fully-connected
ones model larger-scale and more complex structures. In various computer vision
problems, like optical ﬂow [34], reasoning across multiple levels of abstraction
(i.e., scales) has proven beneﬁcial. Following this principle, we further improve
our baseline FCNN to include multiscale information in the segmentation.

The multiscale version of our segmentation model, shown in Figure 2, has a
single 3D image as input (highest available resolution) and combines the feature
maps of various intermediate layers (i.e., convolutional layers 3, 6 and 9) in
the fully-connected layers. This strategy [35, 36, 37, 38] has two important
advantages over other multiscale approaches, where the input image is resampled
at multiple scales of resolution before being fed to the network [31]. First,
because it has a single set convolution ﬁlters at each layer, instead of one per
pathway, the features at diﬀerent scales are more likely to be consistent with
each other. Moreover, since features from intermediate layers are injected in
top-most layers, ﬁne-grained information is used directly in the segmentation
process. However, a drawback of this strategy is that it introduces a large
number of parameters in fully-connected layers, which can make learning these
parameters computationally complex.

Due to repeated convolution operations, the feature maps that need to be
combined at the end of the network have diﬀerent sizes: 21 ˆ 21 ˆ 21 in layer
3, 15ˆ15ˆ15 in layer 6, and 9ˆ9ˆ9 in layer 9. Instead of vectorizing these
features maps and appending them to one another, we extract 9ˆ9ˆ9 volumes
around the center of these feature maps, which are then stacked on top of each
other. These volumes, which are compatible in size, encode diﬀerent resolutions

8

and receptive ﬁelds of the input image (i.e., the volume of layer 3 has a smaller
receptive ﬁeld but a higher resolution than the volumes of layers 6 and 9). Note
that this technique leads to less parameters than vectorizing the full feature
maps.

2.4. Pre- and post-processing steps

Data pre-processing steps are often required to ensure the performance of
segmentation methods. Typical pre-processing steps for MRI data include the
removal of non-brain tissues like the skull, as well as bias ﬁeld correction. For
multi-subject or longitudinal studies, additional steps are often necessary to nor-
malize intensities or align volumes across multiple scans. In [17], Shakeri et al.
used registered and normalized MRI volumes to validate their subcortical parcel-
lation method. Such elaborate data pre-processing has several disadvantages.
First, aligning volumes to a template (e.g., MNI space) is a time-consuming
operation, which would remove the computational beneﬁt of using CNNs over
atlas-based methods. Furthermore, training the network using data with a very
speciﬁc and strict pre-processing reduces the network’s ability of generalizing to
unprocessed data, or data pre-processed diﬀerently.

In order to make our method robust to diﬀerent imaging protocols and pa-
rameters, we used a simple pre-processing step that includes volume-wise in-
tensity normalization, bias ﬁeld correction and skull-stripping. The ﬁrst two
transforms, both computationally inexpensive, are used to reduce the sensi-
tivity of the network to contrast and intensity bias. Skull-stripping, although
more time-consuming, can be performed without registration (e.g., see [39]).
This step is used mostly to reduce the size of the input image by discarding
non-interesting areas, and thus unnecessary computations.

Although the segmentations obtained using our network are generally smooth
and close to manual labels, small isolated regions can sometimes appear in the
segmentation. As post-processing step, we remove these small regions by keep-
ing only the largest connected component from each class. Note that standard
regularization approaches like CRFs [40] have also been tested, but did not lead
to signiﬁcant improvements in accuracy.

2.5. Study design and experiment setup

2.5.1. Datasets

available datasets.

The proposed segmentation method was tested on the following two publicly

IBSR. A set of 18 T1-weighted MRI scans from the Internet Brain Segmenta-
tion Repository (IBSR) was employed to obtain quantitative measures of perfor-
mance and compare our method against competing approaches. These images
were acquired at the Massachusetts General Hospital and are freely available at
http://www.cma.mgh.harvard.edu/ibsr/data.html. In addition, the dataset
also contains expert-labelled segmentations of 45 brain structures. Among these,
a subset of 8 important subcortical structures were considered in this work: left

9

and right thalamus, caudate, putamen, and pallidum. These structures were
used in recent studies on brain parcellation (e.g., see [17]). All volumes have a
size of 256ˆ256ˆ128 voxels, with voxel sizes ranging from 0.8ˆ0.8ˆ1.5 mm3 to
1.0ˆ1.0ˆ1.5 mm3. To get unbiased estimates of performance, and following the
validation methodolody of [17], we employed a 6-fold cross validation strategy,
where each fold is composed of 12 training examples (i.e., subjects), 3 validation
examples and 3 test examples.

ABIDE. The Autism Brain Imaging Data Exchange (ABIDE) [41] was used
as a second dataset in our experiments. ABIDE I involved 17 international
sites, sharing previously collected resting state functional magnetic resonance
imaging (R-fMRI), anatomical and phenotypic datasets made available for data
sharing with the broader scientiﬁc community. This eﬀort yielded a huge dataset
containing 1112 subjects, including 539 from individuals with autism spectrum
disorder (ASD) and 573 from typical controls (ages 7-64 years, median 14.7
years across groups). Characteristics for each site are presented in Table 1.

Unlike IBSR, the ABIDE dataset does not contain ground-truth segmenta-
tions of subcortical structures. Instead, we have used automatic segmentations
obtained using the recon-all pipeline1 of the FreeSurfer 5.1 tool [42], which
are freely available at http://fcon_1000.projects.nitrc.org/indi/abide/.
This pipeline involves the following steps: motion correction, intensity normal-
ization, aﬃne registration of volumes to the MNI305 atlas, skull-stripping, non-
linear registration using the Gaussian Classiﬁer Atlas (GCA), and brain parcella-
tion. The outputs of this pipeline used in our study are the skull stripped, inten-
sity normalized brain volumes in the unregistered subject space (i.e., brain.mgz
ﬁles) and the subcortical labelling of these volumes (i.e., aseg.mgz ﬁles). Note
that FreeSurfers registration and segmentation steps were shown to be robust
to age-associated bias [43].

For this dataset, the objectives of our experiment was to measure the impact
of diﬀerent imaging, demographic and clinical factors on the reliability of the
proposed method. Another goal was to verify that our method could obtain
segmentations similar to those of atlas-based approaches (e.g., the segmenta-
tion approach of FreeSurfer ), but in a fraction of the time. To measure the
impact of age (and thus brain size) on our method’s performance, we followed
the methodology of [44] and divided subjects into three non-overlapping groups:
ă13 years, 13 to 18 years, and ą18 years. Furthermore, to account for potential
structural diﬀerences related to autism, we further split each age group into two
sub-groups, containing control and ASD subjects respectively. Lastly, to evalu-
ate the robustness of our method in unseen cohorts, the resulting subject groups
were again split based on whether the subject is from a site used in training or
not. Note that, in the case of subjects from sites used in training, only subjects
from the test set are considered (i.e., no training example is used while measure
the segmentation performance). A summary of group conﬁguration and train-

1http://surfer.nmr.mgh.harvard.edu/fswiki/recon-all

10

San Diego State University˚

1.0ˆ1.0ˆ1.1

22/14

8.7-17.2

Site

California Institute of Technology˚

Carnegie Mellon University˚

Kennedy Krieger Institute˚

Ludwig Maximilians
Munich˚
NYU Langone Medical Center˚

University

Olin, Institute of Living at Hartford
Hospital˚
Oregon Health and Science Univer-
sity

Social Brain Lab BCN NIC UMC
Groningen˚

Stanford University˚

Trinity Centre for Health Sciences

University of California, Los Angeles:
Sample 1˚
University of California, Los Angeles:
Sample 2

University of Leuven: Sample 1˚

University of Leuven: Sample 2˚

Number
images

Voxel size
(mm3)

Control
vs. ASD

Ages
(Years)

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

19/19

13/14

33/22

17.0-56.2

19-40

8.0-12.8

1.0ˆ1.0ˆ1.0

33/24

7-58

184

1.3ˆ1.0ˆ1.3

105/79

6.5-39.1

1.0ˆ1.0ˆ1.0

16/20

10-24

1.0ˆ1.0ˆ1.1

15/13

8.0-15.2

1.0ˆ1.0ˆ1.1

15/15

20-64

0.86ˆ1.5ˆ0.86 20/20

1.0ˆ1.0ˆ1.0

25/24

7.5-12.9

12.0-25.9

1.0ˆ1.0ˆ1.2

33/49

8.4-17.9

1.0ˆ1.0ˆ1.2

14/13

9.8-16.5

0.98ˆ0.98ˆ1.2 15/14

18-32

0.98ˆ0.98ˆ1.2 20/15

-ˆ-ˆ1.2

-ˆ-ˆ1.2

55/55

22/13

12.1-16.9

8.2-19.2

12.8-28.8

1.1ˆ1.1ˆ1.1

27/30

9.3-35.2

University of Michigan: Sample 1

110

University of Michigan: Sample 2˚

University of Pittsburgh School of
Medicine˚
University
Medicine˚
Yale Child Study Center

of Utah

School

of

101

56

1.0ˆ1.0ˆ1.2

43/58

8.8-50.2

1.0ˆ1.0ˆ1.0

28/28

7.0-17.8

Table 1: Scan parameters and characteristics of sites included in the ABIDE dataset.
An asterisk beside the site name indicates that data from this site were used for
training.

ing/testing distribution is presented in Table 2. To facilitate the presentation of
results, each group is identiﬁed by a unique ID, from A to L. For instance, group
A corresponds to control subjects less than 13 years of age, from sites used in
training. Among this group, the data of 42 subjects were used for training our
FCNN, and the data of 93 subjects for measuring its performance.

We evaluated the segmentation of target subcortical brain structures by
training and testing with data from diﬀerent sites or age/diagnosis groups. For
training, we considered 10 control subjects from 15 sites (indicated by an asterisk
in Table 1), giving a total of 150 training examples. The reason for employing
only control subjects is that ASD subjects may present structural abnormalities

38

27

55

57

36

28

36

30

40

49

82

27

29

35

35

57

11

DX group
Age group ă 13

Subjects
train/test

Site used in training

Site NOT used in training

Control

ASD

Control

ASD

13-18 ą 18 ă 13

13-18 ą 18 ă 13 13-18 ą 18 ă 13 13-18 ą 18

42/93 46/87 62/98 0/133 0/113 0/144 0/65 0/53 0/16 0/62 0/48 0/11

Group ID

A

B

C

D

E

F

G

H

I

J

K

L

Table 2: Conﬁguration of subject groups used in the proposed experiments. The
number of training and testing subjects included in each group is detailed in last row.

that are not representative of the population. Including these subjects in the
training set might thus aﬀect the generability of our segmentation model. For
validation, we used a single subject per site, leading to a validation set composed
of 15 examples. Segmentation performance was evaluated on remaining subjects
from all sites.

2.5.2. Implementation details

Selecting the network’s architecture is a complex and problem-speciﬁc task,
which can greatly aﬀect the performance and computational eﬃciency of the
solution. In this study, we investigate three diﬀerent FCNN architectures. The
ﬁrst architecture, called CNNbase, is composed of 3 convolutional layers with 25,
50 and 75 feature maps (i.e., ﬁlters), respectively, and a kernel size of 7ˆ7ˆ 7.
Three fully-connected layers are added after the last convolutional layer to model
the relationship between features and class labels. The CNNbase architecture,
depicted in Figure 1, is employed as a baseline to generate “standard” or “con-
trol” segmentations.
In the second architecture, denoted as CNNsingle, each
convolutional layer is replaced by three successive convolutional with smaller
kernels of size 3ˆ3ˆ 3. As mentioned in Section 2.2, this strategy allows hav-
ing a deeper network with the same number of parameters. Finally, the third
architecture, called CNNmulti, corresponds to the multiscale FCNN of Figure 2,
which was presented in Section 2.3.

All three architectures have three fully-connected layers, composed of 400,
200 and 150 hidden units respectively. These layers are followed by a ﬁnal classi-
ﬁcation layer, which outputs the probability maps for each of the 9 classes: 8 for
each of the subcortical structures (left and right) and one for the background.
The CNNmulti architecture proposed in this paper is thus composed of 13 lay-
ers in total, with the following layout: 9 convolutional layers, 3 fully-connected
layers, and the classiﬁcation layer. Furthermore, the number of kernels in each
convolutional layer (from ﬁrst to last) is as follows: 25, 25, 25, 50, 50, 50, 75,
75 and 75.

The optimization of network parameters is performed with stochastic gra-
dient descent (SGD), using cross-entropy as cost function. However, since our
network employs 3D convolutions, and due to the large sizes of MRI volumes,
dense training cannot be applied to whole volumes. Instead, volumes are split
into B smaller segments, which allows dense inference in our hardware setting.
Let θ be the network parameters (i.e., convolution weights and biases), and de-
note as L the set of ground-truth labels such that Lv
s P L is the label of voxel v

12

in the s-th image segment. Following [31], we deﬁned the cost function as

Jpθ; Lq “ ´

log pLv

s pXvq,

(4)

1
B ¨V

Bÿ

Vÿ

s“1

v“1

where pcpXvq is the output of the classiﬁcation layer for voxel v and class c.
In [31], Kamnitsas et al.
found that increasing the size of input segments in
training leads to a higher performance, but this performance increase stops
beyond segment sizes of 25ˆ25ˆ25. In their network, using this segment size
for training, score maps at the classiﬁcation stage were of size 9ˆ9ˆ9. Since
our architecture is one layer deeper, and to keep the same score map sizes, we
set the segment size in our network to 27ˆ27ˆ27.

Deep CNNs are usually initialized by assigning random normal-distributed
values to kernel and bias weights. As demonstrated in [33], initializing weights
with ﬁxed standard deviations may lead to poor convergence. To overcome
this limitation, we adopted the strategy proposed in [32], and used in [31] for
segmentation, that allows very deep architectures (e.g., 30 convolutional or fully-
connected layers) to converge rapidly. In this strategy, weights in layer l are
initialized based on a zero-mean Gaussian distribution of standard deviation
a
2{nl, where nl denotes the number of connections to units in that layer. For
example, in the ﬁrst convolutional layer of Figure 2, the input is composed of
single-channel (i.e., grey level) image segments and kernels have a size of 3ˆ3ˆ3,
therefore the standard deviation is equal to

2{p1 ˆ 3 ˆ 3 ˆ 3q “ 0.2722.

a

Our 3D FCNNs were initially trained for 50 epochs, each one composed of
20 subepochs. At each subepoch, a total of 500 samples were randomly selected
from the training image segments, and processed in batches of size 5. However,
we observed that the performance of the trained network on the validation set
did not improve after 30 epochs, allowing us to terminate the training process
at this point. As other important meta-parameters, the training momentum
was set to 0.6 and the initial learning rate to 0.001, being reduced by a factor
of 2 after every 3 epochs. Note that instead of an adaptive strategy for learning
rate, we used step decay and monitored the evolution of the cost error during
training. We observed that it followed a decreasing curve, with and exponential
shape and small increasing/decreasing slopes. Therefore, we considered that
decreasing the learning rate at certain epochs was suﬃcient to properly train
the network.

To implement our network, we adapted the 3D FCNN architecture of Kam-
nitsas et al. [31]. Their architecture was developed using Theano, a CPU and
GPU mathematical compiler for implementing deep learning models [45]. The
PC used for training is an Intel(R) Core(TM) i7-6700K 4.0GHz CPU, equipped
with a NVIDIA GeForce GTX 960 GPU with 2 GB of memory. Training our
network took a little over 2 hours per epoch, and around 2 days and a half
for the fully trained CNN. The source code of our implementation is publicly
available on https://github.com/josedolz/LiviaNET.

13

2.5.3. Evaluation

Various comparison metrics exist to evaluate the accuracy of segmentation
methods. Although volume-based metrics, such as Dice similarity coeﬃcient
(DSC) [46], have been broadly used to compare segmentation results, they are
fairly insensitive to the precise contour of segmented regions, which only has
small impact on the overall volume. However, two segmentations with a high
spatial overlap may exhibit clinically relevant diﬀerences in their boundaries. To
measure such diﬀerences, distance-based metrics such as the Modiﬁed Hausdorﬀ
distance (MHD) are typically used.

Dice similarity coeﬃcient. Let Vref and Vauto denote the binary reference
segmentation and the automatic segmentation, respectively, of a given tissue
class for a given subject. The DSC is then deﬁned as

`

˘

DSC

Vref , Vauto

“

2 | Vref X Vauto |
| Vref | ` | Vauto |

(5)

DSC values are comprised in the r0, 1s range, where 1 indicates perfect overlap-
ping and 0 represents no overlapping at all.

Modiﬁed Hausdorﬀ distance. Let Pref and Pauto denote the sets of voxels
within the reference segmentation and the automatic one, respectively. The
MHD can be then deﬁned as
˘

!

Pref , Pauto

“ max

dpPref , Pautoq, dpPauto, Pref q

(6)

`
MHD

)
,

where dpP, P 1q is the maximum distance between a voxel in P and its nearest
voxel in P 1. In this case, smaller values indicate higher proximity between two
point sets, and thus a better segmentation.

3. Results

We ﬁrst test our segmentation method on the IBSR dataset, which has been
used in numerous studies on subcortical parcellation. In Section 3.2, we then
measure the beneﬁts of having a deeper network with smaller kernels and using
multiscale features, as well as evaluate the impact of various acquisition, demo-
graphics, and clinical factors, by applying our CNNbase, CNNsingle and CNNmulti
architectures on the ABIDE dataset. Finally, in Section 3.3, we demonstrate the
cross-dataset generalization of our method by evaluating on the IBSR dataset
the FCNN trained using the ABIDE dataset.

For notation simplicity, we now on denote brain structures by their ﬁrst two
characters, indicating within parenthesis their location, i.e left (L) or right (R)
hemisphere. For example, the caudate in the left brain side will be referred to
as Ca(L).

14

3.1. Evaluation on the IBSR dataset

Figure 3 shows the segmentation accuracy of the proposed CNNmulti ar-
chitecture, in terms of the DSC and MHD, obtained for the target left- and
right-side brain structures. We see that the segmentation of the pallidum, both
left and right, was signiﬁcantly less accurate than other structures (i.e., thala-
mus, caudate and putamen), likely due to the smaller size of this brain structure.
Furthermore, we observe that the segmentation of all four subcortical structures
is slightly more accurate in the right hemisphere, although the diﬀerences are
not statistically signiﬁcant following a Wilcoxon signed-rank test.

In light of the various studies using the IBSR dataset as segmentation bench-
mark, the results obtained by our method are state-of-the-art (Table 5). Specif-
ically, when comparing against the recent work of Shakeri et al. [17], which used
a 2D FCNN and the same validation methodology, our method achieved DSC
improvements ranging from 5% (in the thalamus) to 13% (in the caudate).

To demonstrate that the proposed approach actually learns from training
data, we also measured the performance of a simple majority voting technique,
using the same leave-one-out-cross-validation strategy. In this technique, each
voxel of the volume to segment is mapped to the most frequent class in cor-
responding voxels of training volumes. Applying this technique to all IBSR
subjects gave mean DSC values of 0.83, 0.69, 0.74 and 0.75 for the thalamus,
caudate, putamen and pallidum, respectively.

Figure 3: Segmentation accuracy (mean DSC and MHD) obtained, for each brain
structure, by the CNNmulti architecture on subjects of the IBSR dataset.

3.2. Evaluation on the ABIDE dataset

Table 3 gives the mean DSC and mean MHD obtained by the CNNbase,
CNNsingle and CNNmulti architectures on all test examples of the the ABIDE
dataset. Recall that these accuracy measures were computed using the labels
obtained from FreeSurfer , since ground-truth segmentations were not available.
We ﬁrst observe that having a deeper network, via smaller kernels, increases
the segmentation performance in both metrics.
In a one-sided A one-sided
non-parametric statistical test can handle non-Gaussian data distributions, and
accommodates the following alternative hypothesis: The architecture is better

15

than the baseline. Wilcoxon signed-rank test or t-test, the mean DSC and
MHD of CNNsingle is statistically better (i.e., higher for DSC and lower for
MHD) than CNNbase, with p ă 0.01. Likewise, when features extracted at
intermediate layers are fed into the ﬁrst fully-connected layer, the proposed
CNNmulti network generated more reliable segmentations, both in terms DSC
and MHD. These results are also statistically signiﬁcant, with p ă 0.01, in a
Wilcoxon signed-rank test or t-test.

Mean DSC

Mean MHD

Caudate

Structure CNNbase CNNsingle CNNmulti

Thalamus

Caudate

Putamen

Pallidum

Thalamus

Putamen

Pallidum

0.8987
(0.002)

0.8979
(0.0012)

0.8909
(0.0017)

0.8381
(0.0096)

0.1487
(0.0087)

0.1710
(0.0154)

0.2074
(0.0296)

0.2487
(0.0205)

0.9039
(0.0052)

0.9011
(0.0002)

0.8992
(0.0009)

0.8497
(0.0096)

0.1462
(0.0153)

0.1583
(0.0213)

0.1742
(0.0467)

0.2305
(0.0208)

0.9156
(0.0012)

0.9073
(0.0021)

0.9041
(0.0014)

0.8621
(0.0095)

0.1405
(0.0002)

0.1557
(0.0165)

0.1706
(0.0296)

0.2232
(0.0232)

Table 3: Mean DSC and MHD (standard deviation between brackets), obtained by the
three tested FCNN architectures on the ABIDE dataset. Bold font numbers indicate
the best result among the three architectures.

Figure 4 plots the mean DSC and MHD values obtained by our CNNmulti
architecture for each of the subject groups in Table 2. These values are grouped
by subcortical structure of interest, i.e., thalamus, caudate, putamen and pal-
lidum. For each structure, an additional bar is added, giving the mean DSC and
MHD obtained on subjects of all groups together. Across all subject groups,
the segmentations produced by our 3D FCNN achieved mean DSC values above
0.90 for all structures except the pallidum, which had a mean DSC of 0.85.
Likewise, mean MHD values were below 0.25 mm in all subject groups and for
all four subcortical structures. These results are consistent with those obtained
for the IBSR dataset.

Analyzing the results obtained using data from sites considered in training
(groups A-F), we observe that mean DSC values obtained for control subjects
(groups A-C) are usually higher than for ASD subjects (groups D-E). For in-
stance, putamen segmentation in control subjects less than 13 years old yielded

16

a) Data employed in training

b) Unseen data

Figure 4: Mean DSC and MHD values obtained for subject data used during training,
and for unseen data.

a mean DSC of 0.9127, compared to 0.9055 for ASD subjects in the same age
group. The same trend is seen for distance similarities, for example in the cau-
date, where a mean MHD of 0.1397 was obtained for control subjects, versus
0.2568 for ASD subjects. These results illustrate that physiological diﬀerences
related to autism, especially in young subjects, can have a small impact on
segmentation accuracy.

Looking at the impact of subject age on results, it can be seen that the
segmentation of the thalamus and caudate improves as the subject gets older,
in both control and ASD subjects. The relationship between subject age and
segmentation accuracy in these structures is further illustrated in Figure 5,
which gives the scatter plot of DSC versus age in the left/right thalamus and
caudate, considering all control and ASD subjects together. In each plot, the
Spearman rank correlation coeﬃcient and corresponding p-value are given as
variables r and p. Note that p-values have been corrected using the Bonferroni
procedure, to account for the multiple comparisons (8 structures). We notice
a weak but statistically signiﬁcant correlation, with p ă 0.01, validating our
previous observation.
It is also worth noting a greater variance in accuracy
occurring for younger subjects, most of the low accuracy values observed for

17

ages less than 20 years old. This is consistent with the fact that the brain is
continuously developing until adulthood, and suggests that the physiological
variability of younger subjects may not be completely captured while training
the network.

The same patterns can be observed when segmenting subjects from sites
not used in training (groups G-L). Particularly noticeable is the relationship
between age and accuracy, which can be seen in all structures, and in both
control and ASD subjects. Comparing with results obtained on data from sites
used in training, we ﬁnd no statistically signiﬁcant diﬀerence in accuracy (DSC
or MHD), for any brain structure. This suggests that the proposed method can
generalize to acquisition protocols and imaging parameters not seen in training.
Overall the results of these experiments illustrate that our method is robust to
various clinical, demographics and site-related factors.

Figure 5: Scatter plots of left and right thalamus and caudate segmentation perfor-
mance regarding DSC and subject age, where the Spearman rank correlation coeﬃcient
r and corresponding p-values are given for each plot. From these plots, a weak but
statistically signiﬁcant correlation between performance and subject age is observed.

Figures 6 and 7 give visual examples of segmentations obtained by our 3D

FCNN architecture and standard references contoured by FreeSurfer .

It can be observed that the segmentations generated by our proposed ar-
chitecture are signiﬁcantly smoother than those of FreeSurfer , regardless of the

18

subject group (i.e diagnosis, age, site employed or not in training). We also
notice that our system is better at identifying thin regions in the structures of
interest, for instance, the lower extremities of pallidum (green regions).

Site used in training

FreeSurfer

Our CNN

Figure 6: Visual examples of our 3D FCNN architecture compared with the standard
references contoured by FreeSurfer , for three test subjects from sites used in training.

To better understand the features learned by the network, Figure 8 shows
examples of feature map activations obtained for a given input patch (cyan
box in the ﬁgure). Each column corresponds to a diﬀerent CNN layer, left-side
columns corresponding to shallow layers, and right-side columns to deep layers
in the network. Likewise, images in each row correspond to a randomly selected
activation of the layer’s feature map. Although diﬃcult to analyze, we notice

19

Site NOT used in training

FreeSurfer

Our CNN

Figure 7: Visual examples of our 3D FCNN architecture compared with the references
standard contoured by FreeSurfer for three test subjects from sites not used in training.

that activation values in initial layers mainly indicate the presence of strong
edges or boundaries, whereas those in deeper layers of the network represent
more complex structures. In particular, images in the last two columns (i.e.,
convolutional layers of the network) roughly delineate the right caudate. Note
that 2D images are used here for visualization purposes and that both input
patches and features map activations are actually in 3D.

As previously explained, score maps (i.e., class probabilities, ranging from 0
to 1) are obtained at the end of the network, before the voxels are assigned to the
target labels. To illustrate this output, Figure 9 shows an example of probability

20

Figure 8: Feature map activations in all convolutional layers of the FCNN (right),
obtained for a given patch of the input MRI image (left). Each column corresponds
to a diﬀerent convolutional layer, from shallow to deeper, and each image in a row to
a features map activation randomly selected in the layer.

maps for a given slice of the volume. Red pixels indicate probability values close
to 1, and blue pixels near 0. Each image of the ﬁgure gives the probability map
of a speciﬁc structure of interest, including the background. It can be seen that
generated probability maps are well deﬁned, reﬂecting the actual contours of the
imaged structures (ﬁrst subﬁgure of the set). This suggests that these proba-
bility maps can be used directly for segmentation, without requiring additional,
and potential computationally expensive, spatial regularization. Smoothed ex-
amples of 3D segmentation outputs are displayed in Figure 10. These images,
which were rendered using the Medical Interaction ToolKit (MITK) software
package [47], highlight the spatial consistency of the obtained segmentation. All
automatic contours and probability maps generated by our network are publicly
available at: https://github.com/josedolz/3D-FCNN-BrainStruct.

Using the GPU mentioned in Section 2.5.2, our method takes on average
2-3 minutes to segment the data of a single subject from the ABIDE dataset
(nearly two days for all 947 subjects). For a fair comparison with a CPU-based
FreeSurfer implementation, we evaluated our method’s processing time when
running on the CPU only. A CPU version of our 3D CNN required less than
5 minutes per subject, in all cases. These CPU times are much lower than
the several hours required by FreeSurfer ’s full segmentation pipeline [48, 49].
Note that recent FreeSurfer versions provide GPU support for some steps of
the segmentation pipeline. For instance, in a benchmark test, performing a
linear volumetric registration (i.e., mri em register ) takes 3 minutes on a GPU,
compared to 33 minutes on a CPU2. However, this step is much less expensive
computationally than the deformable registration step (i.e., mri ca register ),

2http://surfer.nmr.mgh.harvard.edu/fswiki/CUDADevelopersGuide

21

MRI image

Background

Th(R)

Ca(R)

Pu(R)

Pa(R)

Th(L)

Ca(L)

Pu(L)

Pa(L)

Figure 9: Probability maps generated by the proposed 3D FCNN for the background
and the eight structures given an input MRI image. Note that input MRI has been
cropped for better resolution.

Figure 10: Diﬀerent views of a smoothed version of contours provided by our automatic
segmentation system. In these images, the thalamus, caudate, putamen and pallidum
are respectively depicted in yellow, cyan, red and green.

which typically takes an order of magnitude longer than linear registration3.

3.3. Cross-dataset evaluation

To further assess the potential of the proposed method on new data, we
used the model trained on the ABIDE dataset for segmenting volumes from the
IBSR dataset. Results of this experiment, presented in Table 4, suggest that
our method is reliable when tested on a diﬀerent dataset, with a mean DSC
ranging from 0.79 (in the pallidum) to 0.87 (in the thalamus). Compared to
both training and testing on the IBSR dataset, these results correspond to an

3http://surfer.nmr.mgh.harvard.edu/fswiki/ReconAllRunTimes

22

average decrease of 0.05 in DSC and an average increase of 0.12 mm in MHD.
A possible reason for this performance drop is the diﬀerence in voxel resolutions
between the two datasets, particularly in terms of thickness. While thickness in
images acquired across the various sites of the ABIDE project is in the range
between 1.0 to 1.2 mm (with only two sites providing images with thickness
outside this range, i.e., 0.86 and 1.3 mm), all the scans in IBSR had a thickness
of 1.5 mm.

Mean DSC

Training Thalamus Caudate Putamen Pallidum
0.91
0.84

IBSR
ABIDE

0.83
0.79

0.90
0.85

0.92
0.87

Mean MHD

IBSR
ABIDE

0.13
0.25

0.21
0.32

0.18
0.34

0.26
0.38

Table 4: Segmentation accuracy (mean DSC and MHD) obtained on the IBSR dataset
by the proposed 3D FCNN model trained with the ABIDE dataset or with the IBSR
dataset.

4. Discussion

We conducted a comprehensive quantitative evaluation of our method using
the publicly available IBSR and ABIDE datasets. The segmentation accuracy
of our method was measured with respect to the ground-truth segmentations of
the IBSR dataset, and compared to recently proposed methods for the task of
brain parcellation. As reported in Table 5, our method obtained state-of-the-art
performance, with mean DSC values ranging from 0.83 to 0.91 and mean MHD
values between 0.13 mm and 0.26 mm (Figure 3). The ABIDE dataset was then
used to demonstrate our method’s reliability for large-scale datasets acquired at
multiple sites, and measure the impact of various factors, including age, diagno-
sis group (i.e., healthy control or ASD). Considering all test subjects together,
our method obtained segmentations consistent with those of FreeSurfer , with
mean DSC between 0.86 and 0.92 and mean MHD ranging from 0.14 mm to
0.22 mm, across the target brain structures. The accuracy of our CNNmulti
architecture was statistically higher than two other tester architectures, which
do not use multiscale features and small kernels (Table 3).

Considering the diagnosis group of subjects, segmentations obtained for both
control and ASD subjects were of high quality, with similar mean DSC and MHD
values (Figure 7). Since ASD subjects are likely to have morphological (e.g.,
volumetric) diﬀerences in brain regions like the putamen [50], hippocampus [51]
or amygdala [52], compared to healthy sujects, this suggests that our method is
robust to such diﬀerences. Analyzing the results according to subject age group,
we noticed a slightly lower segmentation accuracy for younger subjects. This
is consistent the fact that the brain is continuously developing until adulthood,
and that young subjects have a larger variability during their development pro-
cess. However, it has been found that brain development in autism follows an

23

abnormal pattern, with accelerated growth in early life, which results in brain
enlargement during childhood [44]. Therefore, there may be some intermediate
states of brain development in early ages of control and ASD subjects that were
not fully captured by the network during training. blueAnother reason to ex-
plain such diﬀerences is that template-based segmentation may not be ﬂexible
enough to adapt to these pathological diﬀerences. Finally, by achieving a com-
parable performance on subjects from sites used in training and subject from
other sites, we demonstrated that our method is robust to the various imaging
parameters and protocols.

The automated segmentation of brain regions in MRI is a challenging task
due to the structural variability across individuals. To tackle this problem, a
broad range of approaches have been proposed during the last decade (Table
5), many of which are based on atlases. Although atlas-based segmentation has
been used successfully for subcortical brain structure segmentation, a single at-
las is often unsuitable for capturing the full structural variability of subjects in
a given neuroimaging study. Several strategies have been presented to overcome
the limitation of single atlas segmentation, for instance using multiple atlases
alongside label fusion techniques [53]. Nevertheless, one of the main drawbacks
shared by all atlas-based methods is their dependency to the image registration
step, which is both time-consuming and prone to errors. Recent studies have
reported segmentation times of up to several hours per subject when employ-
ing FreeSurfer [48, 49]. In [15], Powell et al. presented an approach based on
artiﬁcial neural networks as an alternative to atlas-based methods. However,
registration was also a key component of their segmentation scheme, thus hav-
ing the same drawbacks as atlas-based techniques. Also using machine learning,
a 2D FCNN was proposed in [17] for the task of subcortical brain parcellation.
Although the registration of subjects volumes was not initially required, the au-
thors tested their CNN on data pre-registered to the Talairach space. As demon-
strated by our experiments, our approach has the advantage of being alignment
independent, a property of great importance when working with multi-subject
or multi-site data.

Although 2D CNNs have led to record-breaking performances in various
computer vision tasks, their usefulness for 3D medical images is more limited.
Numerous strategies have been proposed to mitigate this, for instance, consid-
ering all three orthogonal planes [27], or using single slices with a regularization
scheme (e.g., CRF) to impose volumetric homogeneity [17]. While these tech-
niques have helped improving segmentation results, they lack the ability to
capture the full spatial context of 3D images. By using 3D convolutions, our
approach can better capture spatial context in volumetric data. This is re-
ﬂected by a performance improvement with respect to typical 2D CNN models.
Another noteworthy point is the ability of our method to successfully segment
subjects from sites that were not employed during training. Diﬀerences in scan-
ners or acquisition protocols, for instance, can introduce a signiﬁcant bias on the
appearance of images (e.g., alignment, contrast, etc.), and the heterogeneity of
multi-site data has been a stumbling block for large-scale neuroimaging studies.
As conﬁrmed by our results, incorporating training samples from diﬀerent sites,

24

Work

Method

Structures

DSC

Dataset

Artificial
Neural
Network

Own dataset

Artaechevarria et al. [58]
(2009)

Atlas

Heckemann et al. [54]
(2006)

Han et al. [55]
(2007)

Linguraru et al. [56]
(2007)

Bazin et al. [57]
(2008)

Powell et al. [15]
(2008)

Ciofolo et al. [59]
(2009)

Lotjonen et al. [10]
(2010)

Sabuncu et al. [60]
(2010)

Rousseau et al. [62]
(2011)

Asman et al. [63]
(2014)

Wang et al. [64]
(2014)

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Patenaude et al. [61]
(2011)

Bayesian
model

Shakeri et al. [17]
(2016)

2D FCNN
+ CRF

Bao et al. [65]
(2016)

2D CNN

Our CNN

3D FCNN

Own dataset

Own dataset

Own dataset

Own dataset

IBSR

IBSR

IBSR

IBSR

IBSR

IBSR

OASIS

OASIS

IBSR

IBSR

IBSR

0.90
0.90
0.90
0.80

0.88
0.84
0.85
0.76

0.88
0.82
0.86
0.79

0.77
0.78
0.82
-

0.88
0.84
0.85
-

0.88
0.83
0.87
0.81

0.77
0.60
0.66
0.56

0.89
0.85
0.90
0.80

0.91
0.87
0.89
0.84

0.89
0.83
0.88
0.79

0.88
0.87
0.87
0.64

0.89
0.90
0.89
0.84

0.89
0.75
0.88
0.84

0.87
0.78
0.83
0.75

0.90
0.87
0.88
0.80

0.92
0.91
0.90
0.83

0.92
0.92
0.91
0.86

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

25

Our CNN

3D FCNN

ABIDE

Table 5: Summary of brain subcortical structures segmentation methods. While most
of these methods employ IBSR for evaluation purposes, OASIS public dataset and
proprietary datasets have been also employed.

which cover a wider range of variability, allowed us to alleviate this problem.

For the experiments on the ABIDE dataset, the reference contours used

for training our CNN were obtained with FreeSurfer , which is considered as a
standard approach to subcortical brain labelling. While expert-labelled contours
would have provided a more reliable validation of our approach, it was found that
the contours obtained by our method were consistent with those of FreeSurfer .
Furthermore, a visual inspection of the results revealed that our method’s con-
tours were, in most cases, more regular than those obtained by FreeSurfer .
This suggests our method to be a suitable alternative to FreeSurfer ’s parcella-
tion pipeline. Nevertheless, an evaluation involving trained clinicians would be
necessary to fully validate this assertion.

An interesting ﬁnding that can be observed from the experiments, is the
comparable performance of the proposed 3D FCNN on both IBSR and ABIDE
datasets (See table 5, last two rows). It is important to note that while IBSR
subjects are pre-aligned, ABIDE subjects are not. This suggests that pre-
alignment does not have a signiﬁcant inﬂuence on the performance of the pro-
posed architecture.

Another important fact is that the performance was not aﬀected by dataset
size (IBSR is small whereas ABIDE is very large). This suggests that, in our
case, data augmentation may not be of substantial beneﬁt. This is due to our
use of sub-volumes, which yields a large number of samples for each subject.

Analyzing the results, we observed that the segmentation of several subject
data diﬀered considerably from others. Upon visual inspection, we found that
the corresponding MRI images had a poor quality (e.g., motion artifacts), and
decided not to include them in the evaluation. Figure 11 shows examples of 2D
slices (in axial view) of two subjects with problematic data.

Figure 11: Axial slices from a bad quality scan of two subjects that were excluded
from the evaluation.

Many modiﬁcations to the proposed architecture are possible. For example,
the architecture could have a diﬀerent number of convolutional/fully-connected
layers, or a diﬀerent number of ﬁlters/units in these layers. Several parameters
settings were tested in preliminary experiments to come up with a deﬁnitive ar-
chitecture. Although the chosen parameters were found to perform well on the

26

test data, they might not be optimal for other datasets. Despite this, small vari-
ations in the architecture are unlikely to have a large impact on performance.
In future work, it would be interesting to further investigate the optimization
of these parameters, such that they could be tuned automatically for a speciﬁc
task and target data. In [31], Kamnitsas et al. found that diﬀerent segment sizes
as input to their network led to diﬀerences in performance. In our study, we
used input sizes that worked well for their speciﬁc application, i.e. brain lesion
segmentation. Although our target problem also uses brain images, characteris-
tics of both problems are diﬀerent, and the eﬀect of input sizes on performance
might also diﬀer. We thus intend to investigate the impact of this factor in a
subsequent study.

A notable limitation of our architecture is its small receptive ﬁeld, con-
strained by the signiﬁcant memory requirements of 3D convolutions. As dis-
cussed earlier, some approaches have overcome this limitation by employing ad-
ditional path-ways with lower image resolutions as input. However, this strategy
comes at the cost of losing ﬁne-grained information in the segmentation. In fu-
ture work, we plan to investigate the use of dilated convolutional kernels [66] to
enlarge the receptive ﬁeld without losing resolution or increasing the number of
trainable parameters.

Another important aspect of CNNs is the transferability of knowledge em-
bedded in the pre-trained architectures, i.e transfer learning. The use of pre-
trained CNNs has been already investigated in previous works. Nevertheless,
available pre-trained models mainly come from 2D convolutions and its use is
often tailored to the same application. We believe that pre-trained CNNs can
be successfully used for diﬀerent applications sharing the same nature, even if
their objectives diﬀer. For instance, our 3D FCNN trained on subcortical brain
structures may be employed as pre-trained network to segment cardiac images.

5. Conclusion

We presented a method based on fully-convolutional networks (FCNNs) for
the automatic segmentation of subcortical brain regions. Our approach is the
ﬁrst to use 3D convolutional ﬁlters for this task. Moreover, by exploiting small
convolution kernels, we obtained a deeper network that has fewer parameters
and, thus,
is less prone to overﬁtting. Local and global context were also
modelled by injecting the outputs of intermediate layers in the network’s fully-
connected layers, thereby encouraging consistency between features extracted
at diﬀerent scales, and embedding ﬁne-grained information directly in the seg-
mentation process.

We showed our multiscale FCNN approach to obtain state-of-the-art per-
formance on the well-known IBSR dataset. We then evaluated the impact of
various factors, including acquisition site, age and diagnosis group, using 1112
unregistered subject datasets acquired from 17 diﬀerent sites. This large-scale
evaluation indicated our method to be robust to these factors, achieving out-
standing accuracy for all subjects groups. Additionally, these experiments have

27

highlighted the computational advantages of our approach compared to atlas-
based methods, by obtaining consistent segmentation results in less time. In
summary, we believe this work to be an important step toward the adoption of
automatic segmentation methods in large-scale neuroimaging studies.

Acknowledgments

This work is supported by the National Science and Engineering Research
Council of Canada (NSERC), discovery grant program, and by the ETS Re-
search Chair on Artiﬁcial Intelligence in Medical Imaging.

References

References

1. T. van Erp, D. Hibar, J. Rasmussen, D. Glahn, G. Pearlson, O. Andreassen,
I. Agartz, L. Westlye, U. Haukvik, A. Dale, et al., Subcortical brain vol-
ume abnormalities in 2028 individuals with schizophrenia and 2540 healthy
controls via the enigma consortium, Molecular psychiatry 21 (4) (2016)
547–553.

2. R. Geevarghese, D. E. Lumsden, N. Hulse, M. Samuel, K. Ashkan, Subcor-
tical structure volumes and correlation to clinical variables in parkinson’s
disease, Journal of Neuroimaging 25 (2) (2015) 275–280.

3. S. Goldman, L. M. O’Brien, P. A. Filipek, I. Rapin, M. R. Herbert, Mo-
tor stereotypies and volumetric brain alterations in children with autistic
disorder, Research in autism spectrum disorders 7 (1) (2013) 82–92.

4. X. Llad´o, A. Oliver, M. Cabezas, J. Freixenet, J. C. Vilanova, A. Quiles,
L. Valls, L. Rami´o-Torrent`a, `A. Rovira, Segmentation of multiple sclero-
sis lesions in brain mri: a review of automated approaches, Information
Sciences 186 (1) (2012) 164–185.

5. D. Garc´ıa-Lorenzo, S. Francis, S. Narayanan, D. L. Arnold, D. L. Collins,
Review of automatic segmentation methods of multiple sclerosis white mat-
ter lesions on conventional magnetic resonance imaging, Medical image anal-
ysis 17 (1) (2013) 1–18.

6. P. Koolschijn, N. E. van Haren, G. J. Lensvelt-Mulders, H. Pol, E. Hilleke,
R. S. Kahn, Brain volume abnormalities in major depressive disorder: A
meta-analysis of magnetic resonance imaging studies, Human brain mapping
30 (11) (2009) 3719–3735.

7. M. Langen, H. G. Schnack, H. Nederveen, D. Bos, B. E. Lahuis, M. V.
de Jonge, H. van Engeland, S. Durston, Changes in the developmental tra-
jectories of striatum in autism, Biological psychiatry 66 (4) (2009) 327–333.

28

8. M. Deeley, A. Chen, R. Datteri, J. Noble, A. Cmelak, E. Donnelly, A. Mal-
colm, L. Moretti, J. Jaboin, K. Niermann, et al., Comparison of manual
and automatic segmentation methods for brain structures in the presence
of space-occupying lesions: a multi-expert study, Physics in medicine and
biology 56 (14) (2011) 4557.

9. J. Dolz, L. Massoptier, M. Vermandel, Segmentation algorithms of subcor-
tical brain structures on mri for radiotherapy and radiosurgery: a survey,
IRBM 36 (4) (2015) 200–212.

10. J. M. L¨otj¨onen, R. Wolz, J. R. Koikkalainen, L. Thurfjell, G. Waldemar,
H. Soininen, D. Rueckert, A. D. N. Initiative, et al., Fast and robust multi-
atlas segmentation of brain magnetic resonance images, Neuroimage 49 (3)
(2010) 2352–2365.

11. H. Wang, J. W. Suh, S. R. Das, J. B. Pluta, C. Craige, P. A. Yushke-
vich, Multi-atlas segmentation with joint label fusion, IEEE transactions
on pattern analysis and machine intelligence 35 (3) (2013) 611–623.

12. K. O. Babalola, T. F. Cootes, C. J. Twining, V. Petrovic, C. Taylor, 3d
brain segmentation using active appearance models and local regressors,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2008, pp. 401–408.

13. A. Rao, P. Aljabar, D. Rueckert, Hierarchical statistical shape analysis and
prediction of sub-cortical brain structures, Medical image analysis 12 (1)
(2008) 55–68.

14. J. Yang, J. S. Duncan, 3d image segmentation of deformable objects with
joint shape-intensity prior models using level sets, Medical Image Analysis
8 (3) (2004) 285–294.

15. S. Powell, V. A. Magnotta, H. Johnson, V. K. Jammalamadaka, R. Pierson,
N. C. Andreasen, Registration and machine learning-based automated seg-
mentation of subcortical and cerebellar brain structures, Neuroimage 39 (1)
(2008) 238–247.

16. J. Dolz, A. Laprie, S. Ken, H.-A. Leroy, N. Reyns, L. Massoptier, M. Ver-
mandel, Supervised machine learning-based classiﬁcation scheme to segment
the brainstem on mri in multicenter brain tumor treatment context, Inter-
national journal of computer assisted radiology and surgery 11 (1) (2016)
43–51.

17. M. Shakeri, S. Tsogkas, E. Ferrante, S. Lippe, S. Kadoury, N. Paragios,
I. Kokkinos, Sub-cortical brain structure segmentation using f-cnn’s, arXiv
preprint arXiv:1602.02130.

18. Y. LeCun, L. Bottou, Y. Bengio, P. Haﬀner, Gradient-based learning ap-
plied to document recognition, Proceedings of the IEEE 86 (11) (1998)
2278–2324.

29

19. A. Krizhevsky, I. Sutskever, G. E. Hinton, Imagenet classiﬁcation with deep
convolutional neural networks, in: Advances in neural information process-
ing systems, 2012, pp. 1097–1105.

20. D. Ciresan, A. Giusti, L. M. Gambardella, J. Schmidhuber, Deep neural
networks segment neuronal membranes in electron microscopy images, in:
Advances in neural information processing systems, 2012, pp. 2843–2851.

21. W. Zhang, R. Li, H. Deng, L. Wang, W. Lin, S. Ji, D. Shen, Deep con-
volutional neural networks for multi-modality isointense infant brain image
segmentation, NeuroImage 108 (2015) 214–224.

22. M. Havaei, A. Davy, D. Warde-Farley, A. Biard, A. Courville, Y. Bengio,
C. Pal, P.-M. Jodoin, H. Larochelle, Brain tumor segmentation with deep
neural networks, Medical Image Analysis.

23. S. Pereira, A. Pinto, V. Alves, C. A. Silva, Brain tumor segmentation using
convolutional neural networks in mri images, IEEE transactions on medical
imaging 35 (5) (2016) 1240–1251.

24. N. Lee, A. F. Laine, A. Klein, Towards a deep learning approach to brain
parcellation, in: 2011 IEEE International Symposium on Biomedical Imag-
ing: From Nano to Macro, IEEE, 2011, pp. 321–324.

25. P. Moeskops, M. A. Viergever, A. M. Mendrik, L. S. de Vries, M. J. Benders,
I. Iˇsgum, Automatic segmentation of mr brain images with a convolutional
neural network, IEEE transactions on medical imaging 35 (5) (2016) 1252–
1261.

26. F. Milletari, S.-A. Ahmadi, C. Kroll, A. Plate, V. Rozanski, J. Maiostre,
J. Levin, O. Dietrich, B. Ertl-Wagner, K. B¨otzel, et al., Hough-cnn: Deep
learning for segmentation of deep brain regions in mri and ultrasound, arXiv
preprint arXiv:1601.07014.

27. A. de Brebisson, G. Montana, Deep neural networks for anatomical brain
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition Workshops, 2015, pp. 20–28.

28. C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan,
V. Vanhoucke, A. Rabinovich, Going deeper with convolutions, in: Proceed-
ings of the IEEE Conference on Computer Vision and Pattern Recognition,
2015, pp. 1–9.

29. J. Long, E. Shelhamer, T. Darrell, Fully convolutional networks for semantic
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2015, pp. 3431–3440.

30. T. Brosch, Y. Yoo, L. Y. Tang, D. K. Li, A. Traboulsee, R. Tam, Deep
convolutional encoder networks for multiple sclerosis lesion segmentation,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2015, pp. 3–11.

30

31. K. Kamnitsas, C. Ledig, V. F. Newcombe, J. P. Simpson, A. D. Kane,
D. K. Menon, D. Rueckert, B. Glocker, Eﬃcient multi-scale 3d cnn with
fully connected crf for accurate brain lesion segmentation, arXiv preprint
arXiv:1603.05959.

32. K. He, X. Zhang, S. Ren, J. Sun, Delving deep into rectiﬁers: Surpassing
human-level performance on imagenet classiﬁcation, in: Proceedings of the
IEEE International Conference on Computer Vision, 2015, pp. 1026–1034.

33. K. Simonyan, A. Zisserman, Very deep convolutional networks for large-

scale image recognition, arXiv preprint arXiv:1409.1556.

34. T. Brox, A. Bruhn, N. Papenberg, J. Weickert, High accuracy optical ﬂow
estimation based on a theory for warping, in: European conference on com-
puter vision, Springer, 2004, pp. 25–36.

35. C. Farabet, C. Couprie, L. Najman, Y. LeCun, Learning hierarchical fea-
tures for scene labeling, IEEE transactions on pattern analysis and machine
intelligence 35 (8) (2013) 1915–1929.

36. L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, A. L. Yuille, Semantic
image segmentation with deep convolutional nets and fully connected crfs,
arXiv preprint arXiv:1412.7062.

37. L.-C. Chen, J. T. Barron, G. Papandreou, K. Murphy, A. L. Yuille, Semantic
image segmentation with task-speciﬁc edge detection using cnns and a dis-
criminatively trained domain transform, arXiv preprint arXiv:1511.03328.

38. B. Hariharan, P. Arbel´aez, R. Girshick, J. Malik, Hypercolumns for object
segmentation and ﬁne-grained localization, in: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition, 2015, pp. 447–
456.

39. S. M. Smith, Fast robust automated brain extraction, Human brain mapping

17 (3) (2002) 143–155.

40. J. Laﬀerty, A. McCallum, F. Pereira, Conditional random ﬁelds: Probabilis-
tic models for segmenting and labeling sequence data, in: Proceedings of
the eighteenth international conference on machine learning, ICML, Vol. 1,
2001, pp. 282–289.

41. A. Di Martino, C.-G. Yan, Q. Li, E. Denio, F. X. Castellanos, K. Alaerts,
J. S. Anderson, M. Assaf, S. Y. Bookheimer, M. Dapretto, et al., The
autism brain imaging data exchange: towards a large-scale evaluation of the
intrinsic brain architecture in autism, Molecular psychiatry 19 (6) (2014)
659–667.

42. B. Fischl, Freesurfer, Neuroimage 62 (2) (2012) 774–781.

31

43. S. S. Ghosh, S. Kakunoori, J. Augustinack, A. Nieto-Castanon, I. Kovelman,
N. Gaab, J. A. Christodoulou, C. Triantafyllou, J. D. Gabrieli, B. Fischl,
Evaluating the validity of volume-based and surface-based brain image reg-
istration for developmental cognitive neuroscience studies in children 4 to
11 years of age, Neuroimage 53 (1) (2010) 85–93.

44. E. H. Aylward, N. J. Minshew, K. Field, B. Sparks, N. Singh, Eﬀects of age
on brain volume and head circumference in autism, Neurology 59 (2) (2002)
175–183.

45. J. Bergstra, O. Breuleux, F. Bastien, P. Lamblin, R. Pascanu, G. Des-
jardins, J. Turian, D. Warde-Farley, Y. Bengio, Theano: A cpu and gpu
math compiler in python, in: Proc. 9th Python in Science Conf, 2010, pp.
1–7.

46. L. R. Dice, Measures of the amount of ecologic association between species,

Ecology 26 (3) (1945) 297–302.

47. I. Wolf, M. Vetter, I. Wegner, T. B¨ottger, M. Nolden, M. Sch¨obinger,
M. Hastenteufel, T. Kunert, H.-P. Meinzer, The medical imaging interaction
toolkit, Medical image analysis 9 (6) (2005) 594–604.

48. A. R. Khan, L. Wang, M. F. Beg, Freesurfer-initiated fully-automated sub-
cortical brain segmentation in mri using large deformation diﬀeomorphic
metric mapping, Neuroimage 41 (3) (2008) 735–746.

49. Y. Huo, A. J. Plassard, A. Carass, S. M. Resnick, D. L. Pham, J. L. Prince,
B. A. Landman, Consistent cortical reconstruction and multi-atlas brain
segmentation, NeuroImage 138 (2016) 197–210.

50. W. Sato, Y. Kubota, T. Kochiyama, S. Uono, S. Yoshimura, R. Sawada,
M. Sakihama, M. Toichi, Increased putamen volume in adults with autism
spectrum disorder., Frontiers in human neuroscience 8 (2013) 957–957.

51. R. Nicolson, T. J. DeVito, C. N. Vidal, Y. Sui, K. M. Hayashi, D. J. Drost,
P. C. Williamson, N. Rajakumar, A. W. Toga, P. M. Thompson, Detection
and mapping of hippocampal abnormalities in autism, Psychiatry Research:
Neuroimaging 148 (1) (2006) 11–21.

52. C. M. Schumann, J. Hamstra, B. L. Goodlin-Jones, L. J. Lotspeich,
H. Kwon, M. H. Buonocore, C. R. Lammers, A. L. Reiss, D. G. Amaral,
The amygdala is enlarged in children but not adolescents with autism; the
hippocampus is enlarged at all ages, The Journal of Neuroscience 24 (28)
(2004) 6392–6401.

53. A. R. Khan, N. Cherbuin, W. Wen, K. J. Anstey, P. Sachdev, M. F. Beg,
Optimal weights for local multi-atlas fusion using supervised learning and
dynamic information (superdyn): validation on hippocampus segmentation,
NeuroImage 56 (1) (2011) 126–139.

32

54. R. A. Heckemann, J. V. Hajnal, P. Aljabar, D. Rueckert, A. Hammers,
Automatic anatomical brain mri segmentation combining label propagation
and decision fusion, NeuroImage 33 (1) (2006) 115–126.

55. X. Han, B. Fischl, Atlas renormalization for improved brain mr image seg-
mentation across scanner platforms, IEEE transactions on medical imaging
26 (4) (2007) 479–486.

56. M. G. Linguraru, T. Vercauteren, M. Reyes-Aguirre, M. ´A. G. Ballester,
N. Ayache, Segmentation propagation from deformable atlases for brain
mapping and analysis, Brain Research Journal 1 (4) (2007) 1–18.

57. P.-L. Bazin, D. L. Pham, Homeomorphic brain image segmentation with
topological and statistical atlases, Medical image analysis 12 (5) (2008)
616–625.

58. X. Artaechevarria, A. Munoz-Barrutia, C. Ortiz-de Sol´orzano, Combination
strategies in multi-atlas image segmentation: application to brain mr data,
IEEE transactions on medical imaging 28 (8) (2009) 1266–1277.

59. C. Ciofolo, C. Barillot, Atlas-based segmentation of 3d cerebral structures
with competitive level sets and fuzzy control, Medical image analysis 13 (3)
(2009) 456–470.

60. M. R. Sabuncu, B. T. Yeo, K. Van Leemput, B. Fischl, P. Golland, A genera-
tive model for image segmentation based on label fusion, IEEE transactions
on medical imaging 29 (10) (2010) 1714–1729.

61. B. Patenaude, S. M. Smith, D. N. Kennedy, M. Jenkinson, A bayesian model
of shape and appearance for subcortical brain segmentation, Neuroimage
56 (3) (2011) 907–922.

62. F. Rousseau, P. A. Habas, C. Studholme, A supervised patch-based ap-
proach for human brain labeling, IEEE transactions on medical imaging
30 (10) (2011) 1852–1862.

63. A. J. Asman, F. W. Bryan, S. A. Smith, D. S. Reich, B. A. Landman,
Groupwise multi-atlas segmentation of the spinal cords internal structure,
Medical image analysis 18 (3) (2014) 460–471.

64. J. Wang, C. Vachet, A. Rumple, S. Gouttard, C. Ouziel, E. Perrot, G. Du,
X. Huang, G. Gerig, M. A. Styner, Multi-atlas segmentation of subcortical
brain structures via the autoseg software pipeline, Frontiers in neuroinfor-
matics 8 (2014) 7.

65. S. Bao, A. C. Chung, Multi-scale structured cnn with label consistency
for brain mr image segmentation, Computer Methods in Biomechanics and
Biomedical Engineering: Imaging & Visualization (2016) 1–5.

66. F. Yu, V. Koltun, Multi-scale context aggregation by dilated convolutions,

arXiv preprint arXiv:1511.07122.

33

7
1
0
2
 
r
p
A
 
0
2
 
 
]

V
C
.
s
c
[
 
 
2
v
5
2
9
3
0
.
2
1
6
1
:
v
i
X
r
a

3D fully convolutional networks for subcortical
segmentation in MRI: A large-scale study

Jose Dolza,˚, Christian Desrosiersa, Ismail Ben Ayeda

aLIVIA Laboratory, ´Ecole de technologie sup´erieure (ETS), Montreal, QC, Canada

Abstract

This study investigates a 3D and fully convolutional neural network (CNN)
for subcortical brain structure segmentation in MRI. 3D CNN architectures have
been generally avoided due to their computational and memory requirements
during inference. We address the problem via small kernels, allowing deeper
architectures. We further model both local and global context by embedding
intermediate-layer outputs in the ﬁnal prediction, which encourages consistency
between features extracted at diﬀerent scales and embeds ﬁne-grained infor-
mation directly in the segmentation process. Our model is eﬃciently trained
end-to-end on a graphics processing unit (GPU), in a single stage, exploiting
the dense inference capabilities of fully CNNs.

We performed comprehensive experiments over two publicly available datasets.

First, we demonstrate a state-of-the-art performance on the ISBR dataset.
Then, we report a large-scale multi-site evaluation over 1112 unregistered sub-
ject datasets acquired from 17 diﬀerent sites (ABIDE dataset), with ages ranging
from 7 to 64 years, showing that our method is robust to various acquisition
protocols, demographics and clinical factors. Our method yielded segmenta-
tions that are highly consistent with a standard atlas-based approach, while
running in a fraction of the time needed by atlas-based methods and avoiding
registration/normalization steps. This makes it convenient for massive multi-
site neuroanatomical imaging studies. To the best of our knowledge, our work
is the ﬁrst to study subcortical structure segmentation on such large-scale and
heterogeneous data.

Keywords: Deep learning, MRI segmentation, brain, 3D CNN, fully CNN.

1. Introduction

Accurate segmentation of subcortical brain structures is crucial to the study
of various brain disorders such as schizophrenia [1], Parkinson [2], autism [3]
and multiple-sclerosis [4, 5], as well as to the assessment of structural brain
abnormalities [6]. For instance, changes in the morphology and developmental

˚Corresponding author: jose.dolz.upv@gmail.com

trajectories of the caudate nucleus, putamen and nucleus accumbens have been
associated with autism spectrum disorder (ASD), and may be linked to the
occurrence of restricted and repetitive behaviors [7]. Accurate segmentation of
these structures would help understanding such complex disorders, monitoring
their progression and evaluating treatment outcomes.

Automating subcortical structure segmentation remains challenging, despite
the substantial research interest and eﬀorts devoted to this computational prob-
lem. Clinicians still rely on manual delineations, a prohibitively time-consuming
process, which depends on rater variability and is prone to inconsistency [8].
These issues impede the use of manual segmentation for very large datasets, such
as those currently used in various multi-center neuroimaging studies. Therefore,
there is a critical need for fast, accurate, reproducible, and fully automated
methods for segmenting subcortical brain structures.

1.1. Prior art

A multitude of (semi-) automatic methods have been proposed for segment-
ing brain structures [9]. We can divide prior-art methods into four main cat-
egories: atlas-based methods [10, 11], statistical models [12, 13], deformable
models [14] and machine learning based classiﬁers [15, 16]. Atlas-based meth-
ods work by aligning one or several anatomical templates to the target image,
via a linear or non-linear registration process, and then transferring segmen-
tation labels from the templates to the image. Although these methods often
provide satisfactory results, segmentation times are typically long (ranging from
several minutes to hours) due to the complexity of registration steps. Further-
more, such methods may not be able to capture the full anatomical variability
of target subjects (e.g., subjects of young age or with structural abnormalities),
and can fail in cases of large misalignments or deformations. Unlike atlas-based
methods, approaches based on statistical models use training data to learn a
parametric model describing the variability of speciﬁc brain structures (e.g.,
shapes, textures, etc.). When the number of training images is small compared
to the number of parameters to learn, these approaches might result in overﬁt-
ting the data, thereby introducing bias in the results. The robustness of such
statistical approaches might also be aﬀected by the presence of noise in training
data. Finally, because parameters are updated iteratively by searching in the
vicinity of the current solution, an accurate initialization is required for such
approaches to converge to the correct structure. Unlike statistical models, seg-
mentation techniques using deformable models do not require training data, nor
prior knowledge. Because they can evolve to ﬁt any target structure, such mod-
els are considered to be highly ﬂexible compared to other segmentation methods.
Yet, deformable models are quite sensitive to the initialization of the segmenta-
tion contour and the stopping criteria, both of which depend on the character-
istics of the problem. The last category of methods, based on machine learning,
uses training images to learn a predictive model that assigns class probabilities
to each pixel/voxel. These probabilities are sometimes used as unary potentials
in standard regularization techniques such as graph cuts [17]. Recently, machine
learning approaches have achieved state-of-the-art performances in segmenting

2

brain structures [9, 15]. Nevertheless, these approaches usually involve heavy
algorithm design, with carefully engineered, application-dependent features and
meta-parameters, which limit their applicability to diﬀerent brain structures
and modalities.

Deep learning has recently emerged as a powerful tool, achieving state-of-the
art results in numerous applications of pattern or speech recognition. Unlike
traditional methods that use hand-crafted features, deep learning techniques
have the ability to learn hierarchical features representing diﬀerent levels of ab-
straction, in a data-driven manner. Among the diﬀerent types of deep learning
approaches, convolutional neural networks (CNNs) [18, 19] have shown out-
standing potential for solving computer vision and image analysis problems.
Networks of this type are typically made up of multiple convolution, pooling
and fully-connected layers, the parameters of which are learned using back-
propagation. Their advantage over traditional architectures come from two
properties: local-connectivity and parameter sharing. Unlike in typical neural
nets, units in hidden layers of a CNN are only connected to a small number
of units, corresponding to a spatially localized region. This reduces the num-
ber of parameters in the net, which limits memory/computational requirements
and reduces the risk of overﬁtting. Moreover, CNNs also reduce the number of
learned parameters by sharing the same basis function (i.e., convolution ﬁlters)
across diﬀerent image locations.

In biomedical imaging, CNNs have been recently investigated for several
neuroimaging applications [20, 21, 22, 23]. For instance, Ciresan et al.
[20]
used a CNN to accurately segment neuronal membranes in electron microscopy
images. In this study, a sliding-window strategy was applied to predict the class
probabilities of each pixel, using patches centered at the pixels as input to the
network. An important drawback of this strategy is that its label prediction
is based on very localized information. Moreover, since the prediction must be
carried out for each pixel, this strategy is typically slow. Zhang et al. [21] pre-
sented a CNN method to segment three brain tissues (white matter, gray matter
and cerebrospinal ﬂuid) from multi-sequence magnetic resonance imaging (MRI)
images of infants. As inputs to the network, 2D images corresponding to a sin-
gle plane were used. Deep CNNs were also investigated for glioblastoma tumor
segmentation [22], using an architecture with several pathways, which modeled
both local and global-context features. Pereira et al. [23] presented a diﬀerent
CNN architecture for segmenting brain tumors in MRI data, exploring the use
of small convolution kernels. Closer to this work, several recent studies inves-
tigated CNNs for segmenting subcortical brain structures [17, 24, 25, 26, 27].
For instance, Lee et al. [24] presented a CNN-based approach to learn discrim-
inative features from expert-labelled MR images. The study in [25] used CNNs
to segment brain structures in images from ﬁve diﬀerent datasets, and reported
performance for subjects in various age groups (ranging from pre-term infants
to older adults). A multiscale patch-based strategy was used to improve these
results, where patches of diﬀerent sizes were extracted around each pixel as
input to the network.

Although medical images are often in the form of 3D volumes (e.g., MRI

3

or computed tomography scans), most of the existing CNN approaches use a
slice-by-slice analysis of 2D images. An obvious advantage of a 2D approach,
compared to one using 3D images, is its lower computational and memory re-
quirements. Furthermore, 2D inputs accommodate using pre-trained nets, ei-
ther directly or via transfer learning. However, an important drawback of such
an approach is that anatomic context in directions orthogonal to the 2D plane
is completely discarded. As discussed recently in [26], considering 3D MRI
data directly, instead of slice-by-slice, can improve the performance of a seg-
mentation method. To incorporate 3D contextual information, de Brebisson
et al. used 2D CNNs on images from the three orthogonal planes [27]. The
memory requirements of fully 3D networks were avoided by extracting large 2D
patches from multiple image scales, and combining them with small single-scale
3D patches. All patches were assembled into eight parallel network pathways
to achieve a high-quality segmentation of 134 brain regions from whole brain
MRI. More recently, Shakeri et al.
[17] proposed a CNN scheme based on 2D
convolutions to segment a set of subcortical brain structures. In their work, the
segmentation of the whole volume was ﬁrst achieved by processing each 2D slice
independently. Then, to impose volumetric homogeneity, they constructed a 3D
conditional random ﬁeld (CRF) using scores from the CNN as unary potentials
in a multi-label energy minimization problem.

So far, 3D CNNs have been largely avoided due to the computational and
memory requirements of running 3D convolutions during inference. However,
the ability to fully exploit dense inference is an important advantage of 3D CNNs
over 2D representations [28]. While standard CNN approaches predict the class
probabilities of each pixel independently from its local patch, fully convolutional
networks (FCNNs) [29] consider the network as a large non-linear ﬁlter whose
output yields class probabilities. This accommodates images of arbitrary size,
as in regular convolution ﬁlters, and provides much greater eﬃciency by avoid-
ing redundant convolutions/pooling operations. Recently, 3D FCNNs yielded
outstanding segmentation performances in the context of brain lesions [30, 31].

1.2. Contributions

This study investigates a 3D and fully convolutional neural network for sub-
cortical brain structure segmentation in MRI. Architectures using 3D convo-
lutions have been generally avoided due to their computational and memory
requirements during inference and, to the best of our knowledge, this work is
the ﬁrst to examine 3D FCNNs for subcortical structure segmentation. We ad-
dress the problem via small kernels, allowing deeper architectures. We further
model both local and global context by embedding intermediate-layer outputs
in the ﬁnal prediction, which encourages consistency between features extracted
at diﬀerent scales and embeds ﬁne-grained information directly in the segmen-
tation process. This contrasts with previous architectures (e.g., [31]), where
global context is modelled using separate pathways and low-resolution images.
Our model is eﬃciently trained end-to-end on a graphics processing unit (GPU),
in a single learning stage, exploiting the dense inference capabilities of FCNNs.
Compared to conventional approaches, which typically require time-consuming

4

and error-prone registration steps, the proposed method also has the advantage
of being alignment independent. This property is of great importance in clini-
cal applications where scans from diﬀerent subjects, modalities and acquisition
protocols need to be analyzed.

We performed comprehensive experiments over two publicly available datasets.

The IBSR dataset is ﬁrst used to compare our method to existing approaches
for subcortical brain segmentation, and demonstrate its state-of-the-art perfor-
mance. We then report a large-scale evaluation over 1112 unregistered subject
data from the multi-site ABIDE dataset, with ages ranging from 7 to 64 years,
showing that our method is robust to various acquisition protocols, demograph-
ics and clinical factors. Our method yielded segmentations that are highly
consistent with a standard atlas-based approach, while running in a fraction of
the time needed by such methods.

This makes it convenient for massive multi-site neuroanatomical imaging
studies. We believe our work is the ﬁrst to assess subcortical structure segmen-
tation on such large-scale and heterogeneous data.

2. Methods and materials

We start by presenting the proposed 3D FCNN architecture, which is at the
core of our segmentation method. Sections 2.2 and 2.3 then describe how this
architecture can be improved by additional convolution layers with smaller ker-
nels, and by considering multiscale information from intermediate convolutional
layers. Thereafter, Section 2.4 presents the pre- and post-processing steps per-
formed by our method on the data and output segmentations. Finally, Section
2.5 focuses on the study design and experimental setup, providing information
on the datasets used in the study, implementation details of the tested net-
work architectures, and the metrics used to evaluate the performance of these
architectures.

2.1. The proposed 3D FCNN architecture

Figure 1: The baseline FCNN architecture (CNNbase), composed of 3 convolutional
layers with kernels of size 7ˆ7ˆ7. This FCNN is obtained from a standard CNN by
replacing the fully connected layers by a set of 1ˆ1ˆ1 convolutional ﬁlters.

5

Traditional CNN architectures, like AlexNet or GoogLeNet, require an input
image of ﬁxed size and use pooling layers to gradually reduce the spatial reso-
lution of the representation. Spatial information is then completely discarded
in fully-connected layers at the end of the network. Although originally de-
signed for image recognition and classiﬁcation tasks, such architectures can be
used for semantic segmentation via a sliding-window approach, where regions
deﬁned by the window are processed one-by-one. However, this strategy has a
low eﬃciency, due to the many redundant convolution and pooling operations.
Processing regions in the image independently, instead of as a whole, also re-
duces segmentation accuracy. Fully Convolutional Networks (FCNNs) mitigate
these limitations by treating the network as a single non-linear convolution,
trained end-to-end [29]. Unlike traditional CNNs, FCNNs are only composed
of convolutional layers, allowing them to be applied to images of arbitrary size.
Moreover, because the spatial map of class scores is obtained in a single dense
inference step, FCNNs can avoid redundant convolution and pooling operations,
which makes them computationally more eﬃcient.

The proposed segmentation method is based on a 3D fully CNN (FCNN)
architecture, depicted in Figure 1. This architecture is composed of three con-
volutional layers, each one containing several 3D convolution ﬁlters (or kernels).
Each ﬁlter in a layer is applied to the output of the previous layer, or the input
volume in the case of the ﬁrst layer, and the result of this operation is known
as a feature map. Denote as ml the number of convolution kernels in layer l of
the network, and let xn
l´1 be the 3D array corresponding to the n-th input of
layer l. The k-th output feature map of layer l is then given by:

yk
l “ f

W k,n

i b xn

l´1 ` bk
l

(1)

¯
,

´ ml´1ÿ

n“1

where W k,n
is a ﬁlter convolved (represented by b) with each of the previous
i
layers, bk
l is the bias, and f is a non-linear activation function. Note that feature
maps produced by convolutions are slightly smaller than their input volumes,
the size diﬀerence along each dimension equal to the ﬁlter size in this dimension,
minus one voxel. Hence, applying a 3ˆ3ˆ3 convolution ﬁlter will reduce the
input volume by 2 voxels along each dimension. A stride may also be deﬁned
for each convolutional layer, representing the displacement of the ﬁlter, along
the three dimensions, after each application.

In some FCNN architectures, pooling layers may be added between convo-
lutional layers to reduce spatial resolution and, thus, the number of parameters
to learn. Such layers can be interpreted as simple convolutional layers with
non-unit stride (e.g., a stride of 2). The resolution of the input image is recov-
ered by adding deconvolution (or transpose convolution) layers at the end of the
network [29]. However, this strategy may lead to coarse segmentations. In the
proposed architecture, we preserve spatial resolution by avoiding pooling layers
and using a unit stride for all convolutional layers.

For the activation function, we used the Parametric Rectiﬁed Linear Unit
(PReLU) [32] instead of the popular Rectiﬁed Linear Unit (ReLU). This function

6

can be formulated as

f pxiq “ maxp0, xiq ` ai ¨minp0, xiq,

(2)

where xi deﬁnes the input signal, f pxiq represents the output, and ai is a scaling
coeﬃcient for when xi is negative. While ReLU employs predeﬁned values
for ai (typically equal to 0), PReLU requires learning this coeﬃcient. Thus,
this activation function can adapt the rectiﬁers to their inputs, improving the
network’s accuracy at a negligible extra computational cost.

As in standard CNNs, fully-connected layers are added at the end of the
network to encode semantic information. However, to ensure that the network
contains only convolutional layers, we use the strategy described in [29] and
[31], in which fully-connected layers are converted to a large set of 1 ˆ 1 ˆ 1
convolutions. Doing this allows the network to retain spatial information and
learn the parameters of these layers as in other convolutional layers. Lastly,
neurons in the last layer (i.e., the classiﬁcation layer) are grouped into m “
C feature maps, where C denotes the number of classes. The output of the
classiﬁcation layer L is then converted into normalized probability values via a
softmax function. The probability score of class c P t1, . . . , Cu is computed as
follows:

pc “

ř

`

˘

yc
exp
L
`
C
c1“1 exp

yc1
L

˘ .

(3)

The 3D FCNN architecture described in this section constitutes our baseline
model for segmentation. In the following two sections, we describe how a deeper
architecture can be achieved with smaller convolution kernels and how multiscale
information can be added by combining features from intermediate convolutional
layers.

2.2. Deeper architecture via small convolution kernels

Numerous studies have shown the beneﬁts of using deeper network archi-
tectures.
In FCNNs, however, having many convolutions layers reduces the
resolution of feature maps at the end of the network, leading to a coarse seg-
mentation. To alleviate this problem, we extend the architecture of Figure 1 by
replacing each convolutional layer by three successive convolutional layers with
the same number of kernels, but smaller kernel sizes: 3ˆ3ˆ3 instead of 7ˆ7ˆ7.
The resulting topology is shown in Figure 2.

By using these smaller kernels, we obtain a deeper architecture while having
fewer parameters in the network. Consequently, the network can learn a more
complex hierarchy of features, with a reduced risk of overﬁtting. This fact is
supported by the ﬁndings reported in [33] for 2D CNNs, and in [31] for 3D
CNNs.

2.3. Combining features across multiple scales

In CNNs, the sequence of layers encodes features representing increasing
levels of abstraction: the ﬁrst convolutional layer typically models simple edge or

7

Figure 2: The proposed improvements to the baseline architecture CNNbase. A deeper
architecture is achieved via smaller convolution kernels (3 ˆ 3 ˆ 3). Also, multiscale
information is used in the segmentation by injecting feature maps of intermediate layers
(convolutional layers 3, 6 and 9) directly in the fully-connected layers, as represented
by the arrows. We refer as CNNsingle the architecture with small kernel but a single
scale, and as CNNmulti the architecture including both small kernels and multiscale
information.

blob detectors, whereas convolutional layers directly before the fully-connected
ones model larger-scale and more complex structures. In various computer vision
problems, like optical ﬂow [34], reasoning across multiple levels of abstraction
(i.e., scales) has proven beneﬁcial. Following this principle, we further improve
our baseline FCNN to include multiscale information in the segmentation.

The multiscale version of our segmentation model, shown in Figure 2, has a
single 3D image as input (highest available resolution) and combines the feature
maps of various intermediate layers (i.e., convolutional layers 3, 6 and 9) in
the fully-connected layers. This strategy [35, 36, 37, 38] has two important
advantages over other multiscale approaches, where the input image is resampled
at multiple scales of resolution before being fed to the network [31]. First,
because it has a single set convolution ﬁlters at each layer, instead of one per
pathway, the features at diﬀerent scales are more likely to be consistent with
each other. Moreover, since features from intermediate layers are injected in
top-most layers, ﬁne-grained information is used directly in the segmentation
process. However, a drawback of this strategy is that it introduces a large
number of parameters in fully-connected layers, which can make learning these
parameters computationally complex.

Due to repeated convolution operations, the feature maps that need to be
combined at the end of the network have diﬀerent sizes: 21 ˆ 21 ˆ 21 in layer
3, 15ˆ15ˆ15 in layer 6, and 9ˆ9ˆ9 in layer 9. Instead of vectorizing these
features maps and appending them to one another, we extract 9ˆ9ˆ9 volumes
around the center of these feature maps, which are then stacked on top of each
other. These volumes, which are compatible in size, encode diﬀerent resolutions

8

and receptive ﬁelds of the input image (i.e., the volume of layer 3 has a smaller
receptive ﬁeld but a higher resolution than the volumes of layers 6 and 9). Note
that this technique leads to less parameters than vectorizing the full feature
maps.

2.4. Pre- and post-processing steps

Data pre-processing steps are often required to ensure the performance of
segmentation methods. Typical pre-processing steps for MRI data include the
removal of non-brain tissues like the skull, as well as bias ﬁeld correction. For
multi-subject or longitudinal studies, additional steps are often necessary to nor-
malize intensities or align volumes across multiple scans. In [17], Shakeri et al.
used registered and normalized MRI volumes to validate their subcortical parcel-
lation method. Such elaborate data pre-processing has several disadvantages.
First, aligning volumes to a template (e.g., MNI space) is a time-consuming
operation, which would remove the computational beneﬁt of using CNNs over
atlas-based methods. Furthermore, training the network using data with a very
speciﬁc and strict pre-processing reduces the network’s ability of generalizing to
unprocessed data, or data pre-processed diﬀerently.

In order to make our method robust to diﬀerent imaging protocols and pa-
rameters, we used a simple pre-processing step that includes volume-wise in-
tensity normalization, bias ﬁeld correction and skull-stripping. The ﬁrst two
transforms, both computationally inexpensive, are used to reduce the sensi-
tivity of the network to contrast and intensity bias. Skull-stripping, although
more time-consuming, can be performed without registration (e.g., see [39]).
This step is used mostly to reduce the size of the input image by discarding
non-interesting areas, and thus unnecessary computations.

Although the segmentations obtained using our network are generally smooth
and close to manual labels, small isolated regions can sometimes appear in the
segmentation. As post-processing step, we remove these small regions by keep-
ing only the largest connected component from each class. Note that standard
regularization approaches like CRFs [40] have also been tested, but did not lead
to signiﬁcant improvements in accuracy.

2.5. Study design and experiment setup

2.5.1. Datasets

available datasets.

The proposed segmentation method was tested on the following two publicly

IBSR. A set of 18 T1-weighted MRI scans from the Internet Brain Segmenta-
tion Repository (IBSR) was employed to obtain quantitative measures of perfor-
mance and compare our method against competing approaches. These images
were acquired at the Massachusetts General Hospital and are freely available at
http://www.cma.mgh.harvard.edu/ibsr/data.html. In addition, the dataset
also contains expert-labelled segmentations of 45 brain structures. Among these,
a subset of 8 important subcortical structures were considered in this work: left

9

and right thalamus, caudate, putamen, and pallidum. These structures were
used in recent studies on brain parcellation (e.g., see [17]). All volumes have a
size of 256ˆ256ˆ128 voxels, with voxel sizes ranging from 0.8ˆ0.8ˆ1.5 mm3 to
1.0ˆ1.0ˆ1.5 mm3. To get unbiased estimates of performance, and following the
validation methodolody of [17], we employed a 6-fold cross validation strategy,
where each fold is composed of 12 training examples (i.e., subjects), 3 validation
examples and 3 test examples.

ABIDE. The Autism Brain Imaging Data Exchange (ABIDE) [41] was used
as a second dataset in our experiments. ABIDE I involved 17 international
sites, sharing previously collected resting state functional magnetic resonance
imaging (R-fMRI), anatomical and phenotypic datasets made available for data
sharing with the broader scientiﬁc community. This eﬀort yielded a huge dataset
containing 1112 subjects, including 539 from individuals with autism spectrum
disorder (ASD) and 573 from typical controls (ages 7-64 years, median 14.7
years across groups). Characteristics for each site are presented in Table 1.

Unlike IBSR, the ABIDE dataset does not contain ground-truth segmenta-
tions of subcortical structures. Instead, we have used automatic segmentations
obtained using the recon-all pipeline1 of the FreeSurfer 5.1 tool [42], which
are freely available at http://fcon_1000.projects.nitrc.org/indi/abide/.
This pipeline involves the following steps: motion correction, intensity normal-
ization, aﬃne registration of volumes to the MNI305 atlas, skull-stripping, non-
linear registration using the Gaussian Classiﬁer Atlas (GCA), and brain parcella-
tion. The outputs of this pipeline used in our study are the skull stripped, inten-
sity normalized brain volumes in the unregistered subject space (i.e., brain.mgz
ﬁles) and the subcortical labelling of these volumes (i.e., aseg.mgz ﬁles). Note
that FreeSurfers registration and segmentation steps were shown to be robust
to age-associated bias [43].

For this dataset, the objectives of our experiment was to measure the impact
of diﬀerent imaging, demographic and clinical factors on the reliability of the
proposed method. Another goal was to verify that our method could obtain
segmentations similar to those of atlas-based approaches (e.g., the segmenta-
tion approach of FreeSurfer ), but in a fraction of the time. To measure the
impact of age (and thus brain size) on our method’s performance, we followed
the methodology of [44] and divided subjects into three non-overlapping groups:
ă13 years, 13 to 18 years, and ą18 years. Furthermore, to account for potential
structural diﬀerences related to autism, we further split each age group into two
sub-groups, containing control and ASD subjects respectively. Lastly, to evalu-
ate the robustness of our method in unseen cohorts, the resulting subject groups
were again split based on whether the subject is from a site used in training or
not. Note that, in the case of subjects from sites used in training, only subjects
from the test set are considered (i.e., no training example is used while measure
the segmentation performance). A summary of group conﬁguration and train-

1http://surfer.nmr.mgh.harvard.edu/fswiki/recon-all

10

San Diego State University˚

1.0ˆ1.0ˆ1.1

22/14

8.7-17.2

Site

California Institute of Technology˚

Carnegie Mellon University˚

Kennedy Krieger Institute˚

Ludwig Maximilians
Munich˚
NYU Langone Medical Center˚

University

Olin, Institute of Living at Hartford
Hospital˚
Oregon Health and Science Univer-
sity

Social Brain Lab BCN NIC UMC
Groningen˚

Stanford University˚

Trinity Centre for Health Sciences

University of California, Los Angeles:
Sample 1˚
University of California, Los Angeles:
Sample 2

University of Leuven: Sample 1˚

University of Leuven: Sample 2˚

Number
images

Voxel size
(mm3)

Control
vs. ASD

Ages
(Years)

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

19/19

13/14

33/22

17.0-56.2

19-40

8.0-12.8

1.0ˆ1.0ˆ1.0

33/24

7-58

184

1.3ˆ1.0ˆ1.3

105/79

6.5-39.1

1.0ˆ1.0ˆ1.0

16/20

10-24

1.0ˆ1.0ˆ1.1

15/13

8.0-15.2

1.0ˆ1.0ˆ1.1

15/15

20-64

0.86ˆ1.5ˆ0.86 20/20

1.0ˆ1.0ˆ1.0

25/24

7.5-12.9

12.0-25.9

1.0ˆ1.0ˆ1.2

33/49

8.4-17.9

1.0ˆ1.0ˆ1.2

14/13

9.8-16.5

0.98ˆ0.98ˆ1.2 15/14

18-32

0.98ˆ0.98ˆ1.2 20/15

-ˆ-ˆ1.2

-ˆ-ˆ1.2

55/55

22/13

12.1-16.9

8.2-19.2

12.8-28.8

1.1ˆ1.1ˆ1.1

27/30

9.3-35.2

University of Michigan: Sample 1

110

University of Michigan: Sample 2˚

University of Pittsburgh School of
Medicine˚
University
Medicine˚
Yale Child Study Center

of Utah

School

of

101

56

1.0ˆ1.0ˆ1.2

43/58

8.8-50.2

1.0ˆ1.0ˆ1.0

28/28

7.0-17.8

Table 1: Scan parameters and characteristics of sites included in the ABIDE dataset.
An asterisk beside the site name indicates that data from this site were used for
training.

ing/testing distribution is presented in Table 2. To facilitate the presentation of
results, each group is identiﬁed by a unique ID, from A to L. For instance, group
A corresponds to control subjects less than 13 years of age, from sites used in
training. Among this group, the data of 42 subjects were used for training our
FCNN, and the data of 93 subjects for measuring its performance.

We evaluated the segmentation of target subcortical brain structures by
training and testing with data from diﬀerent sites or age/diagnosis groups. For
training, we considered 10 control subjects from 15 sites (indicated by an asterisk
in Table 1), giving a total of 150 training examples. The reason for employing
only control subjects is that ASD subjects may present structural abnormalities

38

27

55

57

36

28

36

30

40

49

82

27

29

35

35

57

11

DX group
Age group ă 13

Subjects
train/test

Site used in training

Site NOT used in training

Control

ASD

Control

ASD

13-18 ą 18 ă 13

13-18 ą 18 ă 13 13-18 ą 18 ă 13 13-18 ą 18

42/93 46/87 62/98 0/133 0/113 0/144 0/65 0/53 0/16 0/62 0/48 0/11

Group ID

A

B

C

D

E

F

G

H

I

J

K

L

Table 2: Conﬁguration of subject groups used in the proposed experiments. The
number of training and testing subjects included in each group is detailed in last row.

that are not representative of the population. Including these subjects in the
training set might thus aﬀect the generability of our segmentation model. For
validation, we used a single subject per site, leading to a validation set composed
of 15 examples. Segmentation performance was evaluated on remaining subjects
from all sites.

2.5.2. Implementation details

Selecting the network’s architecture is a complex and problem-speciﬁc task,
which can greatly aﬀect the performance and computational eﬃciency of the
solution. In this study, we investigate three diﬀerent FCNN architectures. The
ﬁrst architecture, called CNNbase, is composed of 3 convolutional layers with 25,
50 and 75 feature maps (i.e., ﬁlters), respectively, and a kernel size of 7ˆ7ˆ 7.
Three fully-connected layers are added after the last convolutional layer to model
the relationship between features and class labels. The CNNbase architecture,
depicted in Figure 1, is employed as a baseline to generate “standard” or “con-
trol” segmentations.
In the second architecture, denoted as CNNsingle, each
convolutional layer is replaced by three successive convolutional with smaller
kernels of size 3ˆ3ˆ 3. As mentioned in Section 2.2, this strategy allows hav-
ing a deeper network with the same number of parameters. Finally, the third
architecture, called CNNmulti, corresponds to the multiscale FCNN of Figure 2,
which was presented in Section 2.3.

All three architectures have three fully-connected layers, composed of 400,
200 and 150 hidden units respectively. These layers are followed by a ﬁnal classi-
ﬁcation layer, which outputs the probability maps for each of the 9 classes: 8 for
each of the subcortical structures (left and right) and one for the background.
The CNNmulti architecture proposed in this paper is thus composed of 13 lay-
ers in total, with the following layout: 9 convolutional layers, 3 fully-connected
layers, and the classiﬁcation layer. Furthermore, the number of kernels in each
convolutional layer (from ﬁrst to last) is as follows: 25, 25, 25, 50, 50, 50, 75,
75 and 75.

The optimization of network parameters is performed with stochastic gra-
dient descent (SGD), using cross-entropy as cost function. However, since our
network employs 3D convolutions, and due to the large sizes of MRI volumes,
dense training cannot be applied to whole volumes. Instead, volumes are split
into B smaller segments, which allows dense inference in our hardware setting.
Let θ be the network parameters (i.e., convolution weights and biases), and de-
note as L the set of ground-truth labels such that Lv
s P L is the label of voxel v

12

in the s-th image segment. Following [31], we deﬁned the cost function as

Jpθ; Lq “ ´

log pLv

s pXvq,

(4)

1
B ¨V

Bÿ

Vÿ

s“1

v“1

where pcpXvq is the output of the classiﬁcation layer for voxel v and class c.
In [31], Kamnitsas et al.
found that increasing the size of input segments in
training leads to a higher performance, but this performance increase stops
beyond segment sizes of 25ˆ25ˆ25. In their network, using this segment size
for training, score maps at the classiﬁcation stage were of size 9ˆ9ˆ9. Since
our architecture is one layer deeper, and to keep the same score map sizes, we
set the segment size in our network to 27ˆ27ˆ27.

Deep CNNs are usually initialized by assigning random normal-distributed
values to kernel and bias weights. As demonstrated in [33], initializing weights
with ﬁxed standard deviations may lead to poor convergence. To overcome
this limitation, we adopted the strategy proposed in [32], and used in [31] for
segmentation, that allows very deep architectures (e.g., 30 convolutional or fully-
connected layers) to converge rapidly. In this strategy, weights in layer l are
initialized based on a zero-mean Gaussian distribution of standard deviation
a
2{nl, where nl denotes the number of connections to units in that layer. For
example, in the ﬁrst convolutional layer of Figure 2, the input is composed of
single-channel (i.e., grey level) image segments and kernels have a size of 3ˆ3ˆ3,
therefore the standard deviation is equal to

2{p1 ˆ 3 ˆ 3 ˆ 3q “ 0.2722.

a

Our 3D FCNNs were initially trained for 50 epochs, each one composed of
20 subepochs. At each subepoch, a total of 500 samples were randomly selected
from the training image segments, and processed in batches of size 5. However,
we observed that the performance of the trained network on the validation set
did not improve after 30 epochs, allowing us to terminate the training process
at this point. As other important meta-parameters, the training momentum
was set to 0.6 and the initial learning rate to 0.001, being reduced by a factor
of 2 after every 3 epochs. Note that instead of an adaptive strategy for learning
rate, we used step decay and monitored the evolution of the cost error during
training. We observed that it followed a decreasing curve, with and exponential
shape and small increasing/decreasing slopes. Therefore, we considered that
decreasing the learning rate at certain epochs was suﬃcient to properly train
the network.

To implement our network, we adapted the 3D FCNN architecture of Kam-
nitsas et al. [31]. Their architecture was developed using Theano, a CPU and
GPU mathematical compiler for implementing deep learning models [45]. The
PC used for training is an Intel(R) Core(TM) i7-6700K 4.0GHz CPU, equipped
with a NVIDIA GeForce GTX 960 GPU with 2 GB of memory. Training our
network took a little over 2 hours per epoch, and around 2 days and a half
for the fully trained CNN. The source code of our implementation is publicly
available on https://github.com/josedolz/LiviaNET.

13

2.5.3. Evaluation

Various comparison metrics exist to evaluate the accuracy of segmentation
methods. Although volume-based metrics, such as Dice similarity coeﬃcient
(DSC) [46], have been broadly used to compare segmentation results, they are
fairly insensitive to the precise contour of segmented regions, which only has
small impact on the overall volume. However, two segmentations with a high
spatial overlap may exhibit clinically relevant diﬀerences in their boundaries. To
measure such diﬀerences, distance-based metrics such as the Modiﬁed Hausdorﬀ
distance (MHD) are typically used.

Dice similarity coeﬃcient. Let Vref and Vauto denote the binary reference
segmentation and the automatic segmentation, respectively, of a given tissue
class for a given subject. The DSC is then deﬁned as

`

˘

DSC

Vref , Vauto

“

2 | Vref X Vauto |
| Vref | ` | Vauto |

(5)

DSC values are comprised in the r0, 1s range, where 1 indicates perfect overlap-
ping and 0 represents no overlapping at all.

Modiﬁed Hausdorﬀ distance. Let Pref and Pauto denote the sets of voxels
within the reference segmentation and the automatic one, respectively. The
MHD can be then deﬁned as
˘

!

Pref , Pauto

“ max

dpPref , Pautoq, dpPauto, Pref q

(6)

`
MHD

)
,

where dpP, P 1q is the maximum distance between a voxel in P and its nearest
voxel in P 1. In this case, smaller values indicate higher proximity between two
point sets, and thus a better segmentation.

3. Results

We ﬁrst test our segmentation method on the IBSR dataset, which has been
used in numerous studies on subcortical parcellation. In Section 3.2, we then
measure the beneﬁts of having a deeper network with smaller kernels and using
multiscale features, as well as evaluate the impact of various acquisition, demo-
graphics, and clinical factors, by applying our CNNbase, CNNsingle and CNNmulti
architectures on the ABIDE dataset. Finally, in Section 3.3, we demonstrate the
cross-dataset generalization of our method by evaluating on the IBSR dataset
the FCNN trained using the ABIDE dataset.

For notation simplicity, we now on denote brain structures by their ﬁrst two
characters, indicating within parenthesis their location, i.e left (L) or right (R)
hemisphere. For example, the caudate in the left brain side will be referred to
as Ca(L).

14

3.1. Evaluation on the IBSR dataset

Figure 3 shows the segmentation accuracy of the proposed CNNmulti ar-
chitecture, in terms of the DSC and MHD, obtained for the target left- and
right-side brain structures. We see that the segmentation of the pallidum, both
left and right, was signiﬁcantly less accurate than other structures (i.e., thala-
mus, caudate and putamen), likely due to the smaller size of this brain structure.
Furthermore, we observe that the segmentation of all four subcortical structures
is slightly more accurate in the right hemisphere, although the diﬀerences are
not statistically signiﬁcant following a Wilcoxon signed-rank test.

In light of the various studies using the IBSR dataset as segmentation bench-
mark, the results obtained by our method are state-of-the-art (Table 5). Specif-
ically, when comparing against the recent work of Shakeri et al. [17], which used
a 2D FCNN and the same validation methodology, our method achieved DSC
improvements ranging from 5% (in the thalamus) to 13% (in the caudate).

To demonstrate that the proposed approach actually learns from training
data, we also measured the performance of a simple majority voting technique,
using the same leave-one-out-cross-validation strategy. In this technique, each
voxel of the volume to segment is mapped to the most frequent class in cor-
responding voxels of training volumes. Applying this technique to all IBSR
subjects gave mean DSC values of 0.83, 0.69, 0.74 and 0.75 for the thalamus,
caudate, putamen and pallidum, respectively.

Figure 3: Segmentation accuracy (mean DSC and MHD) obtained, for each brain
structure, by the CNNmulti architecture on subjects of the IBSR dataset.

3.2. Evaluation on the ABIDE dataset

Table 3 gives the mean DSC and mean MHD obtained by the CNNbase,
CNNsingle and CNNmulti architectures on all test examples of the the ABIDE
dataset. Recall that these accuracy measures were computed using the labels
obtained from FreeSurfer , since ground-truth segmentations were not available.
We ﬁrst observe that having a deeper network, via smaller kernels, increases
the segmentation performance in both metrics.
In a one-sided A one-sided
non-parametric statistical test can handle non-Gaussian data distributions, and
accommodates the following alternative hypothesis: The architecture is better

15

than the baseline. Wilcoxon signed-rank test or t-test, the mean DSC and
MHD of CNNsingle is statistically better (i.e., higher for DSC and lower for
MHD) than CNNbase, with p ă 0.01. Likewise, when features extracted at
intermediate layers are fed into the ﬁrst fully-connected layer, the proposed
CNNmulti network generated more reliable segmentations, both in terms DSC
and MHD. These results are also statistically signiﬁcant, with p ă 0.01, in a
Wilcoxon signed-rank test or t-test.

Mean DSC

Mean MHD

Caudate

Structure CNNbase CNNsingle CNNmulti

Thalamus

Caudate

Putamen

Pallidum

Thalamus

Putamen

Pallidum

0.8987
(0.002)

0.8979
(0.0012)

0.8909
(0.0017)

0.8381
(0.0096)

0.1487
(0.0087)

0.1710
(0.0154)

0.2074
(0.0296)

0.2487
(0.0205)

0.9039
(0.0052)

0.9011
(0.0002)

0.8992
(0.0009)

0.8497
(0.0096)

0.1462
(0.0153)

0.1583
(0.0213)

0.1742
(0.0467)

0.2305
(0.0208)

0.9156
(0.0012)

0.9073
(0.0021)

0.9041
(0.0014)

0.8621
(0.0095)

0.1405
(0.0002)

0.1557
(0.0165)

0.1706
(0.0296)

0.2232
(0.0232)

Table 3: Mean DSC and MHD (standard deviation between brackets), obtained by the
three tested FCNN architectures on the ABIDE dataset. Bold font numbers indicate
the best result among the three architectures.

Figure 4 plots the mean DSC and MHD values obtained by our CNNmulti
architecture for each of the subject groups in Table 2. These values are grouped
by subcortical structure of interest, i.e., thalamus, caudate, putamen and pal-
lidum. For each structure, an additional bar is added, giving the mean DSC and
MHD obtained on subjects of all groups together. Across all subject groups,
the segmentations produced by our 3D FCNN achieved mean DSC values above
0.90 for all structures except the pallidum, which had a mean DSC of 0.85.
Likewise, mean MHD values were below 0.25 mm in all subject groups and for
all four subcortical structures. These results are consistent with those obtained
for the IBSR dataset.

Analyzing the results obtained using data from sites considered in training
(groups A-F), we observe that mean DSC values obtained for control subjects
(groups A-C) are usually higher than for ASD subjects (groups D-E). For in-
stance, putamen segmentation in control subjects less than 13 years old yielded

16

a) Data employed in training

b) Unseen data

Figure 4: Mean DSC and MHD values obtained for subject data used during training,
and for unseen data.

a mean DSC of 0.9127, compared to 0.9055 for ASD subjects in the same age
group. The same trend is seen for distance similarities, for example in the cau-
date, where a mean MHD of 0.1397 was obtained for control subjects, versus
0.2568 for ASD subjects. These results illustrate that physiological diﬀerences
related to autism, especially in young subjects, can have a small impact on
segmentation accuracy.

Looking at the impact of subject age on results, it can be seen that the
segmentation of the thalamus and caudate improves as the subject gets older,
in both control and ASD subjects. The relationship between subject age and
segmentation accuracy in these structures is further illustrated in Figure 5,
which gives the scatter plot of DSC versus age in the left/right thalamus and
caudate, considering all control and ASD subjects together. In each plot, the
Spearman rank correlation coeﬃcient and corresponding p-value are given as
variables r and p. Note that p-values have been corrected using the Bonferroni
procedure, to account for the multiple comparisons (8 structures). We notice
a weak but statistically signiﬁcant correlation, with p ă 0.01, validating our
previous observation.
It is also worth noting a greater variance in accuracy
occurring for younger subjects, most of the low accuracy values observed for

17

ages less than 20 years old. This is consistent with the fact that the brain is
continuously developing until adulthood, and suggests that the physiological
variability of younger subjects may not be completely captured while training
the network.

The same patterns can be observed when segmenting subjects from sites
not used in training (groups G-L). Particularly noticeable is the relationship
between age and accuracy, which can be seen in all structures, and in both
control and ASD subjects. Comparing with results obtained on data from sites
used in training, we ﬁnd no statistically signiﬁcant diﬀerence in accuracy (DSC
or MHD), for any brain structure. This suggests that the proposed method can
generalize to acquisition protocols and imaging parameters not seen in training.
Overall the results of these experiments illustrate that our method is robust to
various clinical, demographics and site-related factors.

Figure 5: Scatter plots of left and right thalamus and caudate segmentation perfor-
mance regarding DSC and subject age, where the Spearman rank correlation coeﬃcient
r and corresponding p-values are given for each plot. From these plots, a weak but
statistically signiﬁcant correlation between performance and subject age is observed.

Figures 6 and 7 give visual examples of segmentations obtained by our 3D

FCNN architecture and standard references contoured by FreeSurfer .

It can be observed that the segmentations generated by our proposed ar-
chitecture are signiﬁcantly smoother than those of FreeSurfer , regardless of the

18

subject group (i.e diagnosis, age, site employed or not in training). We also
notice that our system is better at identifying thin regions in the structures of
interest, for instance, the lower extremities of pallidum (green regions).

Site used in training

FreeSurfer

Our CNN

Figure 6: Visual examples of our 3D FCNN architecture compared with the standard
references contoured by FreeSurfer , for three test subjects from sites used in training.

To better understand the features learned by the network, Figure 8 shows
examples of feature map activations obtained for a given input patch (cyan
box in the ﬁgure). Each column corresponds to a diﬀerent CNN layer, left-side
columns corresponding to shallow layers, and right-side columns to deep layers
in the network. Likewise, images in each row correspond to a randomly selected
activation of the layer’s feature map. Although diﬃcult to analyze, we notice

19

Site NOT used in training

FreeSurfer

Our CNN

Figure 7: Visual examples of our 3D FCNN architecture compared with the references
standard contoured by FreeSurfer for three test subjects from sites not used in training.

that activation values in initial layers mainly indicate the presence of strong
edges or boundaries, whereas those in deeper layers of the network represent
more complex structures. In particular, images in the last two columns (i.e.,
convolutional layers of the network) roughly delineate the right caudate. Note
that 2D images are used here for visualization purposes and that both input
patches and features map activations are actually in 3D.

As previously explained, score maps (i.e., class probabilities, ranging from 0
to 1) are obtained at the end of the network, before the voxels are assigned to the
target labels. To illustrate this output, Figure 9 shows an example of probability

20

Figure 8: Feature map activations in all convolutional layers of the FCNN (right),
obtained for a given patch of the input MRI image (left). Each column corresponds
to a diﬀerent convolutional layer, from shallow to deeper, and each image in a row to
a features map activation randomly selected in the layer.

maps for a given slice of the volume. Red pixels indicate probability values close
to 1, and blue pixels near 0. Each image of the ﬁgure gives the probability map
of a speciﬁc structure of interest, including the background. It can be seen that
generated probability maps are well deﬁned, reﬂecting the actual contours of the
imaged structures (ﬁrst subﬁgure of the set). This suggests that these proba-
bility maps can be used directly for segmentation, without requiring additional,
and potential computationally expensive, spatial regularization. Smoothed ex-
amples of 3D segmentation outputs are displayed in Figure 10. These images,
which were rendered using the Medical Interaction ToolKit (MITK) software
package [47], highlight the spatial consistency of the obtained segmentation. All
automatic contours and probability maps generated by our network are publicly
available at: https://github.com/josedolz/3D-FCNN-BrainStruct.

Using the GPU mentioned in Section 2.5.2, our method takes on average
2-3 minutes to segment the data of a single subject from the ABIDE dataset
(nearly two days for all 947 subjects). For a fair comparison with a CPU-based
FreeSurfer implementation, we evaluated our method’s processing time when
running on the CPU only. A CPU version of our 3D CNN required less than
5 minutes per subject, in all cases. These CPU times are much lower than
the several hours required by FreeSurfer ’s full segmentation pipeline [48, 49].
Note that recent FreeSurfer versions provide GPU support for some steps of
the segmentation pipeline. For instance, in a benchmark test, performing a
linear volumetric registration (i.e., mri em register ) takes 3 minutes on a GPU,
compared to 33 minutes on a CPU2. However, this step is much less expensive
computationally than the deformable registration step (i.e., mri ca register ),

2http://surfer.nmr.mgh.harvard.edu/fswiki/CUDADevelopersGuide

21

MRI image

Background

Th(R)

Ca(R)

Pu(R)

Pa(R)

Th(L)

Ca(L)

Pu(L)

Pa(L)

Figure 9: Probability maps generated by the proposed 3D FCNN for the background
and the eight structures given an input MRI image. Note that input MRI has been
cropped for better resolution.

Figure 10: Diﬀerent views of a smoothed version of contours provided by our automatic
segmentation system. In these images, the thalamus, caudate, putamen and pallidum
are respectively depicted in yellow, cyan, red and green.

which typically takes an order of magnitude longer than linear registration3.

3.3. Cross-dataset evaluation

To further assess the potential of the proposed method on new data, we
used the model trained on the ABIDE dataset for segmenting volumes from the
IBSR dataset. Results of this experiment, presented in Table 4, suggest that
our method is reliable when tested on a diﬀerent dataset, with a mean DSC
ranging from 0.79 (in the pallidum) to 0.87 (in the thalamus). Compared to
both training and testing on the IBSR dataset, these results correspond to an

3http://surfer.nmr.mgh.harvard.edu/fswiki/ReconAllRunTimes

22

average decrease of 0.05 in DSC and an average increase of 0.12 mm in MHD.
A possible reason for this performance drop is the diﬀerence in voxel resolutions
between the two datasets, particularly in terms of thickness. While thickness in
images acquired across the various sites of the ABIDE project is in the range
between 1.0 to 1.2 mm (with only two sites providing images with thickness
outside this range, i.e., 0.86 and 1.3 mm), all the scans in IBSR had a thickness
of 1.5 mm.

Mean DSC

Training Thalamus Caudate Putamen Pallidum
0.91
0.84

IBSR
ABIDE

0.90
0.85

0.83
0.79

0.92
0.87

Mean MHD

IBSR
ABIDE

0.13
0.25

0.21
0.32

0.18
0.34

0.26
0.38

Table 4: Segmentation accuracy (mean DSC and MHD) obtained on the IBSR dataset
by the proposed 3D FCNN model trained with the ABIDE dataset or with the IBSR
dataset.

4. Discussion

We conducted a comprehensive quantitative evaluation of our method using
the publicly available IBSR and ABIDE datasets. The segmentation accuracy
of our method was measured with respect to the ground-truth segmentations of
the IBSR dataset, and compared to recently proposed methods for the task of
brain parcellation. As reported in Table 5, our method obtained state-of-the-art
performance, with mean DSC values ranging from 0.83 to 0.91 and mean MHD
values between 0.13 mm and 0.26 mm (Figure 3). The ABIDE dataset was then
used to demonstrate our method’s reliability for large-scale datasets acquired at
multiple sites, and measure the impact of various factors, including age, diagno-
sis group (i.e., healthy control or ASD). Considering all test subjects together,
our method obtained segmentations consistent with those of FreeSurfer , with
mean DSC between 0.86 and 0.92 and mean MHD ranging from 0.14 mm to
0.22 mm, across the target brain structures. The accuracy of our CNNmulti
architecture was statistically higher than two other tester architectures, which
do not use multiscale features and small kernels (Table 3).

Considering the diagnosis group of subjects, segmentations obtained for both
control and ASD subjects were of high quality, with similar mean DSC and MHD
values (Figure 7). Since ASD subjects are likely to have morphological (e.g.,
volumetric) diﬀerences in brain regions like the putamen [50], hippocampus [51]
or amygdala [52], compared to healthy sujects, this suggests that our method is
robust to such diﬀerences. Analyzing the results according to subject age group,
we noticed a slightly lower segmentation accuracy for younger subjects. This
is consistent the fact that the brain is continuously developing until adulthood,
and that young subjects have a larger variability during their development pro-
cess. However, it has been found that brain development in autism follows an

23

abnormal pattern, with accelerated growth in early life, which results in brain
enlargement during childhood [44]. Therefore, there may be some intermediate
states of brain development in early ages of control and ASD subjects that were
not fully captured by the network during training. blueAnother reason to ex-
plain such diﬀerences is that template-based segmentation may not be ﬂexible
enough to adapt to these pathological diﬀerences. Finally, by achieving a com-
parable performance on subjects from sites used in training and subject from
other sites, we demonstrated that our method is robust to the various imaging
parameters and protocols.

The automated segmentation of brain regions in MRI is a challenging task
due to the structural variability across individuals. To tackle this problem, a
broad range of approaches have been proposed during the last decade (Table
5), many of which are based on atlases. Although atlas-based segmentation has
been used successfully for subcortical brain structure segmentation, a single at-
las is often unsuitable for capturing the full structural variability of subjects in
a given neuroimaging study. Several strategies have been presented to overcome
the limitation of single atlas segmentation, for instance using multiple atlases
alongside label fusion techniques [53]. Nevertheless, one of the main drawbacks
shared by all atlas-based methods is their dependency to the image registration
step, which is both time-consuming and prone to errors. Recent studies have
reported segmentation times of up to several hours per subject when employ-
ing FreeSurfer [48, 49]. In [15], Powell et al. presented an approach based on
artiﬁcial neural networks as an alternative to atlas-based methods. However,
registration was also a key component of their segmentation scheme, thus hav-
ing the same drawbacks as atlas-based techniques. Also using machine learning,
a 2D FCNN was proposed in [17] for the task of subcortical brain parcellation.
Although the registration of subjects volumes was not initially required, the au-
thors tested their CNN on data pre-registered to the Talairach space. As demon-
strated by our experiments, our approach has the advantage of being alignment
independent, a property of great importance when working with multi-subject
or multi-site data.

Although 2D CNNs have led to record-breaking performances in various
computer vision tasks, their usefulness for 3D medical images is more limited.
Numerous strategies have been proposed to mitigate this, for instance, consid-
ering all three orthogonal planes [27], or using single slices with a regularization
scheme (e.g., CRF) to impose volumetric homogeneity [17]. While these tech-
niques have helped improving segmentation results, they lack the ability to
capture the full spatial context of 3D images. By using 3D convolutions, our
approach can better capture spatial context in volumetric data. This is re-
ﬂected by a performance improvement with respect to typical 2D CNN models.
Another noteworthy point is the ability of our method to successfully segment
subjects from sites that were not employed during training. Diﬀerences in scan-
ners or acquisition protocols, for instance, can introduce a signiﬁcant bias on the
appearance of images (e.g., alignment, contrast, etc.), and the heterogeneity of
multi-site data has been a stumbling block for large-scale neuroimaging studies.
As conﬁrmed by our results, incorporating training samples from diﬀerent sites,

24

Work

Method

Structures

DSC

Dataset

Artificial
Neural
Network

Own dataset

Artaechevarria et al. [58]
(2009)

Atlas

Heckemann et al. [54]
(2006)

Han et al. [55]
(2007)

Linguraru et al. [56]
(2007)

Bazin et al. [57]
(2008)

Powell et al. [15]
(2008)

Ciofolo et al. [59]
(2009)

Lotjonen et al. [10]
(2010)

Sabuncu et al. [60]
(2010)

Rousseau et al. [62]
(2011)

Asman et al. [63]
(2014)

Wang et al. [64]
(2014)

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Patenaude et al. [61]
(2011)

Bayesian
model

Shakeri et al. [17]
(2016)

2D FCNN
+ CRF

Bao et al. [65]
(2016)

2D CNN

Our CNN

3D FCNN

Own dataset

Own dataset

Own dataset

Own dataset

IBSR

IBSR

IBSR

IBSR

IBSR

IBSR

OASIS

OASIS

IBSR

IBSR

IBSR

0.90
0.90
0.90
0.80

0.88
0.84
0.85
0.76

0.88
0.82
0.86
0.79

0.77
0.78
0.82
-

0.88
0.84
0.85
-

0.88
0.83
0.87
0.81

0.77
0.60
0.66
0.56

0.89
0.85
0.90
0.80

0.91
0.87
0.89
0.84

0.89
0.83
0.88
0.79

0.88
0.87
0.87
0.64

0.89
0.90
0.89
0.84

0.89
0.75
0.88
0.84

0.87
0.78
0.83
0.75

0.90
0.87
0.88
0.80

0.92
0.91
0.90
0.83

0.92
0.92
0.91
0.86

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

25

Our CNN

3D FCNN

ABIDE

Table 5: Summary of brain subcortical structures segmentation methods. While most
of these methods employ IBSR for evaluation purposes, OASIS public dataset and
proprietary datasets have been also employed.

which cover a wider range of variability, allowed us to alleviate this problem.

For the experiments on the ABIDE dataset, the reference contours used

for training our CNN were obtained with FreeSurfer , which is considered as a
standard approach to subcortical brain labelling. While expert-labelled contours
would have provided a more reliable validation of our approach, it was found that
the contours obtained by our method were consistent with those of FreeSurfer .
Furthermore, a visual inspection of the results revealed that our method’s con-
tours were, in most cases, more regular than those obtained by FreeSurfer .
This suggests our method to be a suitable alternative to FreeSurfer ’s parcella-
tion pipeline. Nevertheless, an evaluation involving trained clinicians would be
necessary to fully validate this assertion.

An interesting ﬁnding that can be observed from the experiments, is the
comparable performance of the proposed 3D FCNN on both IBSR and ABIDE
datasets (See table 5, last two rows). It is important to note that while IBSR
subjects are pre-aligned, ABIDE subjects are not. This suggests that pre-
alignment does not have a signiﬁcant inﬂuence on the performance of the pro-
posed architecture.

Another important fact is that the performance was not aﬀected by dataset
size (IBSR is small whereas ABIDE is very large). This suggests that, in our
case, data augmentation may not be of substantial beneﬁt. This is due to our
use of sub-volumes, which yields a large number of samples for each subject.

Analyzing the results, we observed that the segmentation of several subject
data diﬀered considerably from others. Upon visual inspection, we found that
the corresponding MRI images had a poor quality (e.g., motion artifacts), and
decided not to include them in the evaluation. Figure 11 shows examples of 2D
slices (in axial view) of two subjects with problematic data.

Figure 11: Axial slices from a bad quality scan of two subjects that were excluded
from the evaluation.

Many modiﬁcations to the proposed architecture are possible. For example,
the architecture could have a diﬀerent number of convolutional/fully-connected
layers, or a diﬀerent number of ﬁlters/units in these layers. Several parameters
settings were tested in preliminary experiments to come up with a deﬁnitive ar-
chitecture. Although the chosen parameters were found to perform well on the

26

test data, they might not be optimal for other datasets. Despite this, small vari-
ations in the architecture are unlikely to have a large impact on performance.
In future work, it would be interesting to further investigate the optimization
of these parameters, such that they could be tuned automatically for a speciﬁc
task and target data. In [31], Kamnitsas et al. found that diﬀerent segment sizes
as input to their network led to diﬀerences in performance. In our study, we
used input sizes that worked well for their speciﬁc application, i.e. brain lesion
segmentation. Although our target problem also uses brain images, characteris-
tics of both problems are diﬀerent, and the eﬀect of input sizes on performance
might also diﬀer. We thus intend to investigate the impact of this factor in a
subsequent study.

A notable limitation of our architecture is its small receptive ﬁeld, con-
strained by the signiﬁcant memory requirements of 3D convolutions. As dis-
cussed earlier, some approaches have overcome this limitation by employing ad-
ditional path-ways with lower image resolutions as input. However, this strategy
comes at the cost of losing ﬁne-grained information in the segmentation. In fu-
ture work, we plan to investigate the use of dilated convolutional kernels [66] to
enlarge the receptive ﬁeld without losing resolution or increasing the number of
trainable parameters.

Another important aspect of CNNs is the transferability of knowledge em-
bedded in the pre-trained architectures, i.e transfer learning. The use of pre-
trained CNNs has been already investigated in previous works. Nevertheless,
available pre-trained models mainly come from 2D convolutions and its use is
often tailored to the same application. We believe that pre-trained CNNs can
be successfully used for diﬀerent applications sharing the same nature, even if
their objectives diﬀer. For instance, our 3D FCNN trained on subcortical brain
structures may be employed as pre-trained network to segment cardiac images.

5. Conclusion

We presented a method based on fully-convolutional networks (FCNNs) for
the automatic segmentation of subcortical brain regions. Our approach is the
ﬁrst to use 3D convolutional ﬁlters for this task. Moreover, by exploiting small
convolution kernels, we obtained a deeper network that has fewer parameters
and, thus,
is less prone to overﬁtting. Local and global context were also
modelled by injecting the outputs of intermediate layers in the network’s fully-
connected layers, thereby encouraging consistency between features extracted
at diﬀerent scales, and embedding ﬁne-grained information directly in the seg-
mentation process.

We showed our multiscale FCNN approach to obtain state-of-the-art per-
formance on the well-known IBSR dataset. We then evaluated the impact of
various factors, including acquisition site, age and diagnosis group, using 1112
unregistered subject datasets acquired from 17 diﬀerent sites. This large-scale
evaluation indicated our method to be robust to these factors, achieving out-
standing accuracy for all subjects groups. Additionally, these experiments have

27

highlighted the computational advantages of our approach compared to atlas-
based methods, by obtaining consistent segmentation results in less time. In
summary, we believe this work to be an important step toward the adoption of
automatic segmentation methods in large-scale neuroimaging studies.

Acknowledgments

This work is supported by the National Science and Engineering Research
Council of Canada (NSERC), discovery grant program, and by the ETS Re-
search Chair on Artiﬁcial Intelligence in Medical Imaging.

References

References

1. T. van Erp, D. Hibar, J. Rasmussen, D. Glahn, G. Pearlson, O. Andreassen,
I. Agartz, L. Westlye, U. Haukvik, A. Dale, et al., Subcortical brain vol-
ume abnormalities in 2028 individuals with schizophrenia and 2540 healthy
controls via the enigma consortium, Molecular psychiatry 21 (4) (2016)
547–553.

2. R. Geevarghese, D. E. Lumsden, N. Hulse, M. Samuel, K. Ashkan, Subcor-
tical structure volumes and correlation to clinical variables in parkinson’s
disease, Journal of Neuroimaging 25 (2) (2015) 275–280.

3. S. Goldman, L. M. O’Brien, P. A. Filipek, I. Rapin, M. R. Herbert, Mo-
tor stereotypies and volumetric brain alterations in children with autistic
disorder, Research in autism spectrum disorders 7 (1) (2013) 82–92.

4. X. Llad´o, A. Oliver, M. Cabezas, J. Freixenet, J. C. Vilanova, A. Quiles,
L. Valls, L. Rami´o-Torrent`a, `A. Rovira, Segmentation of multiple sclero-
sis lesions in brain mri: a review of automated approaches, Information
Sciences 186 (1) (2012) 164–185.

5. D. Garc´ıa-Lorenzo, S. Francis, S. Narayanan, D. L. Arnold, D. L. Collins,
Review of automatic segmentation methods of multiple sclerosis white mat-
ter lesions on conventional magnetic resonance imaging, Medical image anal-
ysis 17 (1) (2013) 1–18.

6. P. Koolschijn, N. E. van Haren, G. J. Lensvelt-Mulders, H. Pol, E. Hilleke,
R. S. Kahn, Brain volume abnormalities in major depressive disorder: A
meta-analysis of magnetic resonance imaging studies, Human brain mapping
30 (11) (2009) 3719–3735.

7. M. Langen, H. G. Schnack, H. Nederveen, D. Bos, B. E. Lahuis, M. V.
de Jonge, H. van Engeland, S. Durston, Changes in the developmental tra-
jectories of striatum in autism, Biological psychiatry 66 (4) (2009) 327–333.

28

8. M. Deeley, A. Chen, R. Datteri, J. Noble, A. Cmelak, E. Donnelly, A. Mal-
colm, L. Moretti, J. Jaboin, K. Niermann, et al., Comparison of manual
and automatic segmentation methods for brain structures in the presence
of space-occupying lesions: a multi-expert study, Physics in medicine and
biology 56 (14) (2011) 4557.

9. J. Dolz, L. Massoptier, M. Vermandel, Segmentation algorithms of subcor-
tical brain structures on mri for radiotherapy and radiosurgery: a survey,
IRBM 36 (4) (2015) 200–212.

10. J. M. L¨otj¨onen, R. Wolz, J. R. Koikkalainen, L. Thurfjell, G. Waldemar,
H. Soininen, D. Rueckert, A. D. N. Initiative, et al., Fast and robust multi-
atlas segmentation of brain magnetic resonance images, Neuroimage 49 (3)
(2010) 2352–2365.

11. H. Wang, J. W. Suh, S. R. Das, J. B. Pluta, C. Craige, P. A. Yushke-
vich, Multi-atlas segmentation with joint label fusion, IEEE transactions
on pattern analysis and machine intelligence 35 (3) (2013) 611–623.

12. K. O. Babalola, T. F. Cootes, C. J. Twining, V. Petrovic, C. Taylor, 3d
brain segmentation using active appearance models and local regressors,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2008, pp. 401–408.

13. A. Rao, P. Aljabar, D. Rueckert, Hierarchical statistical shape analysis and
prediction of sub-cortical brain structures, Medical image analysis 12 (1)
(2008) 55–68.

14. J. Yang, J. S. Duncan, 3d image segmentation of deformable objects with
joint shape-intensity prior models using level sets, Medical Image Analysis
8 (3) (2004) 285–294.

15. S. Powell, V. A. Magnotta, H. Johnson, V. K. Jammalamadaka, R. Pierson,
N. C. Andreasen, Registration and machine learning-based automated seg-
mentation of subcortical and cerebellar brain structures, Neuroimage 39 (1)
(2008) 238–247.

16. J. Dolz, A. Laprie, S. Ken, H.-A. Leroy, N. Reyns, L. Massoptier, M. Ver-
mandel, Supervised machine learning-based classiﬁcation scheme to segment
the brainstem on mri in multicenter brain tumor treatment context, Inter-
national journal of computer assisted radiology and surgery 11 (1) (2016)
43–51.

17. M. Shakeri, S. Tsogkas, E. Ferrante, S. Lippe, S. Kadoury, N. Paragios,
I. Kokkinos, Sub-cortical brain structure segmentation using f-cnn’s, arXiv
preprint arXiv:1602.02130.

18. Y. LeCun, L. Bottou, Y. Bengio, P. Haﬀner, Gradient-based learning ap-
plied to document recognition, Proceedings of the IEEE 86 (11) (1998)
2278–2324.

29

19. A. Krizhevsky, I. Sutskever, G. E. Hinton, Imagenet classiﬁcation with deep
convolutional neural networks, in: Advances in neural information process-
ing systems, 2012, pp. 1097–1105.

20. D. Ciresan, A. Giusti, L. M. Gambardella, J. Schmidhuber, Deep neural
networks segment neuronal membranes in electron microscopy images, in:
Advances in neural information processing systems, 2012, pp. 2843–2851.

21. W. Zhang, R. Li, H. Deng, L. Wang, W. Lin, S. Ji, D. Shen, Deep con-
volutional neural networks for multi-modality isointense infant brain image
segmentation, NeuroImage 108 (2015) 214–224.

22. M. Havaei, A. Davy, D. Warde-Farley, A. Biard, A. Courville, Y. Bengio,
C. Pal, P.-M. Jodoin, H. Larochelle, Brain tumor segmentation with deep
neural networks, Medical Image Analysis.

23. S. Pereira, A. Pinto, V. Alves, C. A. Silva, Brain tumor segmentation using
convolutional neural networks in mri images, IEEE transactions on medical
imaging 35 (5) (2016) 1240–1251.

24. N. Lee, A. F. Laine, A. Klein, Towards a deep learning approach to brain
parcellation, in: 2011 IEEE International Symposium on Biomedical Imag-
ing: From Nano to Macro, IEEE, 2011, pp. 321–324.

25. P. Moeskops, M. A. Viergever, A. M. Mendrik, L. S. de Vries, M. J. Benders,
I. Iˇsgum, Automatic segmentation of mr brain images with a convolutional
neural network, IEEE transactions on medical imaging 35 (5) (2016) 1252–
1261.

26. F. Milletari, S.-A. Ahmadi, C. Kroll, A. Plate, V. Rozanski, J. Maiostre,
J. Levin, O. Dietrich, B. Ertl-Wagner, K. B¨otzel, et al., Hough-cnn: Deep
learning for segmentation of deep brain regions in mri and ultrasound, arXiv
preprint arXiv:1601.07014.

27. A. de Brebisson, G. Montana, Deep neural networks for anatomical brain
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition Workshops, 2015, pp. 20–28.

28. C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan,
V. Vanhoucke, A. Rabinovich, Going deeper with convolutions, in: Proceed-
ings of the IEEE Conference on Computer Vision and Pattern Recognition,
2015, pp. 1–9.

29. J. Long, E. Shelhamer, T. Darrell, Fully convolutional networks for semantic
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2015, pp. 3431–3440.

30. T. Brosch, Y. Yoo, L. Y. Tang, D. K. Li, A. Traboulsee, R. Tam, Deep
convolutional encoder networks for multiple sclerosis lesion segmentation,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2015, pp. 3–11.

30

31. K. Kamnitsas, C. Ledig, V. F. Newcombe, J. P. Simpson, A. D. Kane,
D. K. Menon, D. Rueckert, B. Glocker, Eﬃcient multi-scale 3d cnn with
fully connected crf for accurate brain lesion segmentation, arXiv preprint
arXiv:1603.05959.

32. K. He, X. Zhang, S. Ren, J. Sun, Delving deep into rectiﬁers: Surpassing
human-level performance on imagenet classiﬁcation, in: Proceedings of the
IEEE International Conference on Computer Vision, 2015, pp. 1026–1034.

33. K. Simonyan, A. Zisserman, Very deep convolutional networks for large-

scale image recognition, arXiv preprint arXiv:1409.1556.

34. T. Brox, A. Bruhn, N. Papenberg, J. Weickert, High accuracy optical ﬂow
estimation based on a theory for warping, in: European conference on com-
puter vision, Springer, 2004, pp. 25–36.

35. C. Farabet, C. Couprie, L. Najman, Y. LeCun, Learning hierarchical fea-
tures for scene labeling, IEEE transactions on pattern analysis and machine
intelligence 35 (8) (2013) 1915–1929.

36. L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, A. L. Yuille, Semantic
image segmentation with deep convolutional nets and fully connected crfs,
arXiv preprint arXiv:1412.7062.

37. L.-C. Chen, J. T. Barron, G. Papandreou, K. Murphy, A. L. Yuille, Semantic
image segmentation with task-speciﬁc edge detection using cnns and a dis-
criminatively trained domain transform, arXiv preprint arXiv:1511.03328.

38. B. Hariharan, P. Arbel´aez, R. Girshick, J. Malik, Hypercolumns for object
segmentation and ﬁne-grained localization, in: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition, 2015, pp. 447–
456.

39. S. M. Smith, Fast robust automated brain extraction, Human brain mapping

17 (3) (2002) 143–155.

40. J. Laﬀerty, A. McCallum, F. Pereira, Conditional random ﬁelds: Probabilis-
tic models for segmenting and labeling sequence data, in: Proceedings of
the eighteenth international conference on machine learning, ICML, Vol. 1,
2001, pp. 282–289.

41. A. Di Martino, C.-G. Yan, Q. Li, E. Denio, F. X. Castellanos, K. Alaerts,
J. S. Anderson, M. Assaf, S. Y. Bookheimer, M. Dapretto, et al., The
autism brain imaging data exchange: towards a large-scale evaluation of the
intrinsic brain architecture in autism, Molecular psychiatry 19 (6) (2014)
659–667.

42. B. Fischl, Freesurfer, Neuroimage 62 (2) (2012) 774–781.

31

43. S. S. Ghosh, S. Kakunoori, J. Augustinack, A. Nieto-Castanon, I. Kovelman,
N. Gaab, J. A. Christodoulou, C. Triantafyllou, J. D. Gabrieli, B. Fischl,
Evaluating the validity of volume-based and surface-based brain image reg-
istration for developmental cognitive neuroscience studies in children 4 to
11 years of age, Neuroimage 53 (1) (2010) 85–93.

44. E. H. Aylward, N. J. Minshew, K. Field, B. Sparks, N. Singh, Eﬀects of age
on brain volume and head circumference in autism, Neurology 59 (2) (2002)
175–183.

45. J. Bergstra, O. Breuleux, F. Bastien, P. Lamblin, R. Pascanu, G. Des-
jardins, J. Turian, D. Warde-Farley, Y. Bengio, Theano: A cpu and gpu
math compiler in python, in: Proc. 9th Python in Science Conf, 2010, pp.
1–7.

46. L. R. Dice, Measures of the amount of ecologic association between species,

Ecology 26 (3) (1945) 297–302.

47. I. Wolf, M. Vetter, I. Wegner, T. B¨ottger, M. Nolden, M. Sch¨obinger,
M. Hastenteufel, T. Kunert, H.-P. Meinzer, The medical imaging interaction
toolkit, Medical image analysis 9 (6) (2005) 594–604.

48. A. R. Khan, L. Wang, M. F. Beg, Freesurfer-initiated fully-automated sub-
cortical brain segmentation in mri using large deformation diﬀeomorphic
metric mapping, Neuroimage 41 (3) (2008) 735–746.

49. Y. Huo, A. J. Plassard, A. Carass, S. M. Resnick, D. L. Pham, J. L. Prince,
B. A. Landman, Consistent cortical reconstruction and multi-atlas brain
segmentation, NeuroImage 138 (2016) 197–210.

50. W. Sato, Y. Kubota, T. Kochiyama, S. Uono, S. Yoshimura, R. Sawada,
M. Sakihama, M. Toichi, Increased putamen volume in adults with autism
spectrum disorder., Frontiers in human neuroscience 8 (2013) 957–957.

51. R. Nicolson, T. J. DeVito, C. N. Vidal, Y. Sui, K. M. Hayashi, D. J. Drost,
P. C. Williamson, N. Rajakumar, A. W. Toga, P. M. Thompson, Detection
and mapping of hippocampal abnormalities in autism, Psychiatry Research:
Neuroimaging 148 (1) (2006) 11–21.

52. C. M. Schumann, J. Hamstra, B. L. Goodlin-Jones, L. J. Lotspeich,
H. Kwon, M. H. Buonocore, C. R. Lammers, A. L. Reiss, D. G. Amaral,
The amygdala is enlarged in children but not adolescents with autism; the
hippocampus is enlarged at all ages, The Journal of Neuroscience 24 (28)
(2004) 6392–6401.

53. A. R. Khan, N. Cherbuin, W. Wen, K. J. Anstey, P. Sachdev, M. F. Beg,
Optimal weights for local multi-atlas fusion using supervised learning and
dynamic information (superdyn): validation on hippocampus segmentation,
NeuroImage 56 (1) (2011) 126–139.

32

54. R. A. Heckemann, J. V. Hajnal, P. Aljabar, D. Rueckert, A. Hammers,
Automatic anatomical brain mri segmentation combining label propagation
and decision fusion, NeuroImage 33 (1) (2006) 115–126.

55. X. Han, B. Fischl, Atlas renormalization for improved brain mr image seg-
mentation across scanner platforms, IEEE transactions on medical imaging
26 (4) (2007) 479–486.

56. M. G. Linguraru, T. Vercauteren, M. Reyes-Aguirre, M. ´A. G. Ballester,
N. Ayache, Segmentation propagation from deformable atlases for brain
mapping and analysis, Brain Research Journal 1 (4) (2007) 1–18.

57. P.-L. Bazin, D. L. Pham, Homeomorphic brain image segmentation with
topological and statistical atlases, Medical image analysis 12 (5) (2008)
616–625.

58. X. Artaechevarria, A. Munoz-Barrutia, C. Ortiz-de Sol´orzano, Combination
strategies in multi-atlas image segmentation: application to brain mr data,
IEEE transactions on medical imaging 28 (8) (2009) 1266–1277.

59. C. Ciofolo, C. Barillot, Atlas-based segmentation of 3d cerebral structures
with competitive level sets and fuzzy control, Medical image analysis 13 (3)
(2009) 456–470.

60. M. R. Sabuncu, B. T. Yeo, K. Van Leemput, B. Fischl, P. Golland, A genera-
tive model for image segmentation based on label fusion, IEEE transactions
on medical imaging 29 (10) (2010) 1714–1729.

61. B. Patenaude, S. M. Smith, D. N. Kennedy, M. Jenkinson, A bayesian model
of shape and appearance for subcortical brain segmentation, Neuroimage
56 (3) (2011) 907–922.

62. F. Rousseau, P. A. Habas, C. Studholme, A supervised patch-based ap-
proach for human brain labeling, IEEE transactions on medical imaging
30 (10) (2011) 1852–1862.

63. A. J. Asman, F. W. Bryan, S. A. Smith, D. S. Reich, B. A. Landman,
Groupwise multi-atlas segmentation of the spinal cords internal structure,
Medical image analysis 18 (3) (2014) 460–471.

64. J. Wang, C. Vachet, A. Rumple, S. Gouttard, C. Ouziel, E. Perrot, G. Du,
X. Huang, G. Gerig, M. A. Styner, Multi-atlas segmentation of subcortical
brain structures via the autoseg software pipeline, Frontiers in neuroinfor-
matics 8 (2014) 7.

65. S. Bao, A. C. Chung, Multi-scale structured cnn with label consistency
for brain mr image segmentation, Computer Methods in Biomechanics and
Biomedical Engineering: Imaging & Visualization (2016) 1–5.

66. F. Yu, V. Koltun, Multi-scale context aggregation by dilated convolutions,

arXiv preprint arXiv:1511.07122.

33

7
1
0
2
 
r
p
A
 
0
2
 
 
]

V
C
.
s
c
[
 
 
2
v
5
2
9
3
0
.
2
1
6
1
:
v
i
X
r
a

3D fully convolutional networks for subcortical
segmentation in MRI: A large-scale study

Jose Dolza,˚, Christian Desrosiersa, Ismail Ben Ayeda

aLIVIA Laboratory, ´Ecole de technologie sup´erieure (ETS), Montreal, QC, Canada

Abstract

This study investigates a 3D and fully convolutional neural network (CNN)
for subcortical brain structure segmentation in MRI. 3D CNN architectures have
been generally avoided due to their computational and memory requirements
during inference. We address the problem via small kernels, allowing deeper
architectures. We further model both local and global context by embedding
intermediate-layer outputs in the ﬁnal prediction, which encourages consistency
between features extracted at diﬀerent scales and embeds ﬁne-grained infor-
mation directly in the segmentation process. Our model is eﬃciently trained
end-to-end on a graphics processing unit (GPU), in a single stage, exploiting
the dense inference capabilities of fully CNNs.

We performed comprehensive experiments over two publicly available datasets.

First, we demonstrate a state-of-the-art performance on the ISBR dataset.
Then, we report a large-scale multi-site evaluation over 1112 unregistered sub-
ject datasets acquired from 17 diﬀerent sites (ABIDE dataset), with ages ranging
from 7 to 64 years, showing that our method is robust to various acquisition
protocols, demographics and clinical factors. Our method yielded segmenta-
tions that are highly consistent with a standard atlas-based approach, while
running in a fraction of the time needed by atlas-based methods and avoiding
registration/normalization steps. This makes it convenient for massive multi-
site neuroanatomical imaging studies. To the best of our knowledge, our work
is the ﬁrst to study subcortical structure segmentation on such large-scale and
heterogeneous data.

Keywords: Deep learning, MRI segmentation, brain, 3D CNN, fully CNN.

1. Introduction

Accurate segmentation of subcortical brain structures is crucial to the study
of various brain disorders such as schizophrenia [1], Parkinson [2], autism [3]
and multiple-sclerosis [4, 5], as well as to the assessment of structural brain
abnormalities [6]. For instance, changes in the morphology and developmental

˚Corresponding author: jose.dolz.upv@gmail.com

trajectories of the caudate nucleus, putamen and nucleus accumbens have been
associated with autism spectrum disorder (ASD), and may be linked to the
occurrence of restricted and repetitive behaviors [7]. Accurate segmentation of
these structures would help understanding such complex disorders, monitoring
their progression and evaluating treatment outcomes.

Automating subcortical structure segmentation remains challenging, despite
the substantial research interest and eﬀorts devoted to this computational prob-
lem. Clinicians still rely on manual delineations, a prohibitively time-consuming
process, which depends on rater variability and is prone to inconsistency [8].
These issues impede the use of manual segmentation for very large datasets, such
as those currently used in various multi-center neuroimaging studies. Therefore,
there is a critical need for fast, accurate, reproducible, and fully automated
methods for segmenting subcortical brain structures.

1.1. Prior art

A multitude of (semi-) automatic methods have been proposed for segment-
ing brain structures [9]. We can divide prior-art methods into four main cat-
egories: atlas-based methods [10, 11], statistical models [12, 13], deformable
models [14] and machine learning based classiﬁers [15, 16]. Atlas-based meth-
ods work by aligning one or several anatomical templates to the target image,
via a linear or non-linear registration process, and then transferring segmen-
tation labels from the templates to the image. Although these methods often
provide satisfactory results, segmentation times are typically long (ranging from
several minutes to hours) due to the complexity of registration steps. Further-
more, such methods may not be able to capture the full anatomical variability
of target subjects (e.g., subjects of young age or with structural abnormalities),
and can fail in cases of large misalignments or deformations. Unlike atlas-based
methods, approaches based on statistical models use training data to learn a
parametric model describing the variability of speciﬁc brain structures (e.g.,
shapes, textures, etc.). When the number of training images is small compared
to the number of parameters to learn, these approaches might result in overﬁt-
ting the data, thereby introducing bias in the results. The robustness of such
statistical approaches might also be aﬀected by the presence of noise in training
data. Finally, because parameters are updated iteratively by searching in the
vicinity of the current solution, an accurate initialization is required for such
approaches to converge to the correct structure. Unlike statistical models, seg-
mentation techniques using deformable models do not require training data, nor
prior knowledge. Because they can evolve to ﬁt any target structure, such mod-
els are considered to be highly ﬂexible compared to other segmentation methods.
Yet, deformable models are quite sensitive to the initialization of the segmenta-
tion contour and the stopping criteria, both of which depend on the character-
istics of the problem. The last category of methods, based on machine learning,
uses training images to learn a predictive model that assigns class probabilities
to each pixel/voxel. These probabilities are sometimes used as unary potentials
in standard regularization techniques such as graph cuts [17]. Recently, machine
learning approaches have achieved state-of-the-art performances in segmenting

2

brain structures [9, 15]. Nevertheless, these approaches usually involve heavy
algorithm design, with carefully engineered, application-dependent features and
meta-parameters, which limit their applicability to diﬀerent brain structures
and modalities.

Deep learning has recently emerged as a powerful tool, achieving state-of-the
art results in numerous applications of pattern or speech recognition. Unlike
traditional methods that use hand-crafted features, deep learning techniques
have the ability to learn hierarchical features representing diﬀerent levels of ab-
straction, in a data-driven manner. Among the diﬀerent types of deep learning
approaches, convolutional neural networks (CNNs) [18, 19] have shown out-
standing potential for solving computer vision and image analysis problems.
Networks of this type are typically made up of multiple convolution, pooling
and fully-connected layers, the parameters of which are learned using back-
propagation. Their advantage over traditional architectures come from two
properties: local-connectivity and parameter sharing. Unlike in typical neural
nets, units in hidden layers of a CNN are only connected to a small number
of units, corresponding to a spatially localized region. This reduces the num-
ber of parameters in the net, which limits memory/computational requirements
and reduces the risk of overﬁtting. Moreover, CNNs also reduce the number of
learned parameters by sharing the same basis function (i.e., convolution ﬁlters)
across diﬀerent image locations.

In biomedical imaging, CNNs have been recently investigated for several
neuroimaging applications [20, 21, 22, 23]. For instance, Ciresan et al.
[20]
used a CNN to accurately segment neuronal membranes in electron microscopy
images. In this study, a sliding-window strategy was applied to predict the class
probabilities of each pixel, using patches centered at the pixels as input to the
network. An important drawback of this strategy is that its label prediction
is based on very localized information. Moreover, since the prediction must be
carried out for each pixel, this strategy is typically slow. Zhang et al. [21] pre-
sented a CNN method to segment three brain tissues (white matter, gray matter
and cerebrospinal ﬂuid) from multi-sequence magnetic resonance imaging (MRI)
images of infants. As inputs to the network, 2D images corresponding to a sin-
gle plane were used. Deep CNNs were also investigated for glioblastoma tumor
segmentation [22], using an architecture with several pathways, which modeled
both local and global-context features. Pereira et al. [23] presented a diﬀerent
CNN architecture for segmenting brain tumors in MRI data, exploring the use
of small convolution kernels. Closer to this work, several recent studies inves-
tigated CNNs for segmenting subcortical brain structures [17, 24, 25, 26, 27].
For instance, Lee et al. [24] presented a CNN-based approach to learn discrim-
inative features from expert-labelled MR images. The study in [25] used CNNs
to segment brain structures in images from ﬁve diﬀerent datasets, and reported
performance for subjects in various age groups (ranging from pre-term infants
to older adults). A multiscale patch-based strategy was used to improve these
results, where patches of diﬀerent sizes were extracted around each pixel as
input to the network.

Although medical images are often in the form of 3D volumes (e.g., MRI

3

or computed tomography scans), most of the existing CNN approaches use a
slice-by-slice analysis of 2D images. An obvious advantage of a 2D approach,
compared to one using 3D images, is its lower computational and memory re-
quirements. Furthermore, 2D inputs accommodate using pre-trained nets, ei-
ther directly or via transfer learning. However, an important drawback of such
an approach is that anatomic context in directions orthogonal to the 2D plane
is completely discarded. As discussed recently in [26], considering 3D MRI
data directly, instead of slice-by-slice, can improve the performance of a seg-
mentation method. To incorporate 3D contextual information, de Brebisson
et al. used 2D CNNs on images from the three orthogonal planes [27]. The
memory requirements of fully 3D networks were avoided by extracting large 2D
patches from multiple image scales, and combining them with small single-scale
3D patches. All patches were assembled into eight parallel network pathways
to achieve a high-quality segmentation of 134 brain regions from whole brain
MRI. More recently, Shakeri et al.
[17] proposed a CNN scheme based on 2D
convolutions to segment a set of subcortical brain structures. In their work, the
segmentation of the whole volume was ﬁrst achieved by processing each 2D slice
independently. Then, to impose volumetric homogeneity, they constructed a 3D
conditional random ﬁeld (CRF) using scores from the CNN as unary potentials
in a multi-label energy minimization problem.

So far, 3D CNNs have been largely avoided due to the computational and
memory requirements of running 3D convolutions during inference. However,
the ability to fully exploit dense inference is an important advantage of 3D CNNs
over 2D representations [28]. While standard CNN approaches predict the class
probabilities of each pixel independently from its local patch, fully convolutional
networks (FCNNs) [29] consider the network as a large non-linear ﬁlter whose
output yields class probabilities. This accommodates images of arbitrary size,
as in regular convolution ﬁlters, and provides much greater eﬃciency by avoid-
ing redundant convolutions/pooling operations. Recently, 3D FCNNs yielded
outstanding segmentation performances in the context of brain lesions [30, 31].

1.2. Contributions

This study investigates a 3D and fully convolutional neural network for sub-
cortical brain structure segmentation in MRI. Architectures using 3D convo-
lutions have been generally avoided due to their computational and memory
requirements during inference and, to the best of our knowledge, this work is
the ﬁrst to examine 3D FCNNs for subcortical structure segmentation. We ad-
dress the problem via small kernels, allowing deeper architectures. We further
model both local and global context by embedding intermediate-layer outputs
in the ﬁnal prediction, which encourages consistency between features extracted
at diﬀerent scales and embeds ﬁne-grained information directly in the segmen-
tation process. This contrasts with previous architectures (e.g., [31]), where
global context is modelled using separate pathways and low-resolution images.
Our model is eﬃciently trained end-to-end on a graphics processing unit (GPU),
in a single learning stage, exploiting the dense inference capabilities of FCNNs.
Compared to conventional approaches, which typically require time-consuming

4

and error-prone registration steps, the proposed method also has the advantage
of being alignment independent. This property is of great importance in clini-
cal applications where scans from diﬀerent subjects, modalities and acquisition
protocols need to be analyzed.

We performed comprehensive experiments over two publicly available datasets.

The IBSR dataset is ﬁrst used to compare our method to existing approaches
for subcortical brain segmentation, and demonstrate its state-of-the-art perfor-
mance. We then report a large-scale evaluation over 1112 unregistered subject
data from the multi-site ABIDE dataset, with ages ranging from 7 to 64 years,
showing that our method is robust to various acquisition protocols, demograph-
ics and clinical factors. Our method yielded segmentations that are highly
consistent with a standard atlas-based approach, while running in a fraction of
the time needed by such methods.

This makes it convenient for massive multi-site neuroanatomical imaging
studies. We believe our work is the ﬁrst to assess subcortical structure segmen-
tation on such large-scale and heterogeneous data.

2. Methods and materials

We start by presenting the proposed 3D FCNN architecture, which is at the
core of our segmentation method. Sections 2.2 and 2.3 then describe how this
architecture can be improved by additional convolution layers with smaller ker-
nels, and by considering multiscale information from intermediate convolutional
layers. Thereafter, Section 2.4 presents the pre- and post-processing steps per-
formed by our method on the data and output segmentations. Finally, Section
2.5 focuses on the study design and experimental setup, providing information
on the datasets used in the study, implementation details of the tested net-
work architectures, and the metrics used to evaluate the performance of these
architectures.

2.1. The proposed 3D FCNN architecture

Figure 1: The baseline FCNN architecture (CNNbase), composed of 3 convolutional
layers with kernels of size 7ˆ7ˆ7. This FCNN is obtained from a standard CNN by
replacing the fully connected layers by a set of 1ˆ1ˆ1 convolutional ﬁlters.

5

Traditional CNN architectures, like AlexNet or GoogLeNet, require an input
image of ﬁxed size and use pooling layers to gradually reduce the spatial reso-
lution of the representation. Spatial information is then completely discarded
in fully-connected layers at the end of the network. Although originally de-
signed for image recognition and classiﬁcation tasks, such architectures can be
used for semantic segmentation via a sliding-window approach, where regions
deﬁned by the window are processed one-by-one. However, this strategy has a
low eﬃciency, due to the many redundant convolution and pooling operations.
Processing regions in the image independently, instead of as a whole, also re-
duces segmentation accuracy. Fully Convolutional Networks (FCNNs) mitigate
these limitations by treating the network as a single non-linear convolution,
trained end-to-end [29]. Unlike traditional CNNs, FCNNs are only composed
of convolutional layers, allowing them to be applied to images of arbitrary size.
Moreover, because the spatial map of class scores is obtained in a single dense
inference step, FCNNs can avoid redundant convolution and pooling operations,
which makes them computationally more eﬃcient.

The proposed segmentation method is based on a 3D fully CNN (FCNN)
architecture, depicted in Figure 1. This architecture is composed of three con-
volutional layers, each one containing several 3D convolution ﬁlters (or kernels).
Each ﬁlter in a layer is applied to the output of the previous layer, or the input
volume in the case of the ﬁrst layer, and the result of this operation is known
as a feature map. Denote as ml the number of convolution kernels in layer l of
the network, and let xn
l´1 be the 3D array corresponding to the n-th input of
layer l. The k-th output feature map of layer l is then given by:

yk
l “ f

W k,n

i b xn

l´1 ` bk
l

(1)

¯
,

´ ml´1ÿ

n“1

where W k,n
is a ﬁlter convolved (represented by b) with each of the previous
i
layers, bk
l is the bias, and f is a non-linear activation function. Note that feature
maps produced by convolutions are slightly smaller than their input volumes,
the size diﬀerence along each dimension equal to the ﬁlter size in this dimension,
minus one voxel. Hence, applying a 3ˆ3ˆ3 convolution ﬁlter will reduce the
input volume by 2 voxels along each dimension. A stride may also be deﬁned
for each convolutional layer, representing the displacement of the ﬁlter, along
the three dimensions, after each application.

In some FCNN architectures, pooling layers may be added between convo-
lutional layers to reduce spatial resolution and, thus, the number of parameters
to learn. Such layers can be interpreted as simple convolutional layers with
non-unit stride (e.g., a stride of 2). The resolution of the input image is recov-
ered by adding deconvolution (or transpose convolution) layers at the end of the
network [29]. However, this strategy may lead to coarse segmentations. In the
proposed architecture, we preserve spatial resolution by avoiding pooling layers
and using a unit stride for all convolutional layers.

For the activation function, we used the Parametric Rectiﬁed Linear Unit
(PReLU) [32] instead of the popular Rectiﬁed Linear Unit (ReLU). This function

6

can be formulated as

f pxiq “ maxp0, xiq ` ai ¨minp0, xiq,

(2)

where xi deﬁnes the input signal, f pxiq represents the output, and ai is a scaling
coeﬃcient for when xi is negative. While ReLU employs predeﬁned values
for ai (typically equal to 0), PReLU requires learning this coeﬃcient. Thus,
this activation function can adapt the rectiﬁers to their inputs, improving the
network’s accuracy at a negligible extra computational cost.

As in standard CNNs, fully-connected layers are added at the end of the
network to encode semantic information. However, to ensure that the network
contains only convolutional layers, we use the strategy described in [29] and
[31], in which fully-connected layers are converted to a large set of 1 ˆ 1 ˆ 1
convolutions. Doing this allows the network to retain spatial information and
learn the parameters of these layers as in other convolutional layers. Lastly,
neurons in the last layer (i.e., the classiﬁcation layer) are grouped into m “
C feature maps, where C denotes the number of classes. The output of the
classiﬁcation layer L is then converted into normalized probability values via a
softmax function. The probability score of class c P t1, . . . , Cu is computed as
follows:

pc “

ř

`

˘

yc
exp
L
`
C
c1“1 exp

yc1
L

˘ .

(3)

The 3D FCNN architecture described in this section constitutes our baseline
model for segmentation. In the following two sections, we describe how a deeper
architecture can be achieved with smaller convolution kernels and how multiscale
information can be added by combining features from intermediate convolutional
layers.

2.2. Deeper architecture via small convolution kernels

Numerous studies have shown the beneﬁts of using deeper network archi-
tectures.
In FCNNs, however, having many convolutions layers reduces the
resolution of feature maps at the end of the network, leading to a coarse seg-
mentation. To alleviate this problem, we extend the architecture of Figure 1 by
replacing each convolutional layer by three successive convolutional layers with
the same number of kernels, but smaller kernel sizes: 3ˆ3ˆ3 instead of 7ˆ7ˆ7.
The resulting topology is shown in Figure 2.

By using these smaller kernels, we obtain a deeper architecture while having
fewer parameters in the network. Consequently, the network can learn a more
complex hierarchy of features, with a reduced risk of overﬁtting. This fact is
supported by the ﬁndings reported in [33] for 2D CNNs, and in [31] for 3D
CNNs.

2.3. Combining features across multiple scales

In CNNs, the sequence of layers encodes features representing increasing
levels of abstraction: the ﬁrst convolutional layer typically models simple edge or

7

Figure 2: The proposed improvements to the baseline architecture CNNbase. A deeper
architecture is achieved via smaller convolution kernels (3 ˆ 3 ˆ 3). Also, multiscale
information is used in the segmentation by injecting feature maps of intermediate layers
(convolutional layers 3, 6 and 9) directly in the fully-connected layers, as represented
by the arrows. We refer as CNNsingle the architecture with small kernel but a single
scale, and as CNNmulti the architecture including both small kernels and multiscale
information.

blob detectors, whereas convolutional layers directly before the fully-connected
ones model larger-scale and more complex structures. In various computer vision
problems, like optical ﬂow [34], reasoning across multiple levels of abstraction
(i.e., scales) has proven beneﬁcial. Following this principle, we further improve
our baseline FCNN to include multiscale information in the segmentation.

The multiscale version of our segmentation model, shown in Figure 2, has a
single 3D image as input (highest available resolution) and combines the feature
maps of various intermediate layers (i.e., convolutional layers 3, 6 and 9) in
the fully-connected layers. This strategy [35, 36, 37, 38] has two important
advantages over other multiscale approaches, where the input image is resampled
at multiple scales of resolution before being fed to the network [31]. First,
because it has a single set convolution ﬁlters at each layer, instead of one per
pathway, the features at diﬀerent scales are more likely to be consistent with
each other. Moreover, since features from intermediate layers are injected in
top-most layers, ﬁne-grained information is used directly in the segmentation
process. However, a drawback of this strategy is that it introduces a large
number of parameters in fully-connected layers, which can make learning these
parameters computationally complex.

Due to repeated convolution operations, the feature maps that need to be
combined at the end of the network have diﬀerent sizes: 21 ˆ 21 ˆ 21 in layer
3, 15ˆ15ˆ15 in layer 6, and 9ˆ9ˆ9 in layer 9. Instead of vectorizing these
features maps and appending them to one another, we extract 9ˆ9ˆ9 volumes
around the center of these feature maps, which are then stacked on top of each
other. These volumes, which are compatible in size, encode diﬀerent resolutions

8

and receptive ﬁelds of the input image (i.e., the volume of layer 3 has a smaller
receptive ﬁeld but a higher resolution than the volumes of layers 6 and 9). Note
that this technique leads to less parameters than vectorizing the full feature
maps.

2.4. Pre- and post-processing steps

Data pre-processing steps are often required to ensure the performance of
segmentation methods. Typical pre-processing steps for MRI data include the
removal of non-brain tissues like the skull, as well as bias ﬁeld correction. For
multi-subject or longitudinal studies, additional steps are often necessary to nor-
malize intensities or align volumes across multiple scans. In [17], Shakeri et al.
used registered and normalized MRI volumes to validate their subcortical parcel-
lation method. Such elaborate data pre-processing has several disadvantages.
First, aligning volumes to a template (e.g., MNI space) is a time-consuming
operation, which would remove the computational beneﬁt of using CNNs over
atlas-based methods. Furthermore, training the network using data with a very
speciﬁc and strict pre-processing reduces the network’s ability of generalizing to
unprocessed data, or data pre-processed diﬀerently.

In order to make our method robust to diﬀerent imaging protocols and pa-
rameters, we used a simple pre-processing step that includes volume-wise in-
tensity normalization, bias ﬁeld correction and skull-stripping. The ﬁrst two
transforms, both computationally inexpensive, are used to reduce the sensi-
tivity of the network to contrast and intensity bias. Skull-stripping, although
more time-consuming, can be performed without registration (e.g., see [39]).
This step is used mostly to reduce the size of the input image by discarding
non-interesting areas, and thus unnecessary computations.

Although the segmentations obtained using our network are generally smooth
and close to manual labels, small isolated regions can sometimes appear in the
segmentation. As post-processing step, we remove these small regions by keep-
ing only the largest connected component from each class. Note that standard
regularization approaches like CRFs [40] have also been tested, but did not lead
to signiﬁcant improvements in accuracy.

2.5. Study design and experiment setup

2.5.1. Datasets

available datasets.

The proposed segmentation method was tested on the following two publicly

IBSR. A set of 18 T1-weighted MRI scans from the Internet Brain Segmenta-
tion Repository (IBSR) was employed to obtain quantitative measures of perfor-
mance and compare our method against competing approaches. These images
were acquired at the Massachusetts General Hospital and are freely available at
http://www.cma.mgh.harvard.edu/ibsr/data.html. In addition, the dataset
also contains expert-labelled segmentations of 45 brain structures. Among these,
a subset of 8 important subcortical structures were considered in this work: left

9

and right thalamus, caudate, putamen, and pallidum. These structures were
used in recent studies on brain parcellation (e.g., see [17]). All volumes have a
size of 256ˆ256ˆ128 voxels, with voxel sizes ranging from 0.8ˆ0.8ˆ1.5 mm3 to
1.0ˆ1.0ˆ1.5 mm3. To get unbiased estimates of performance, and following the
validation methodolody of [17], we employed a 6-fold cross validation strategy,
where each fold is composed of 12 training examples (i.e., subjects), 3 validation
examples and 3 test examples.

ABIDE. The Autism Brain Imaging Data Exchange (ABIDE) [41] was used
as a second dataset in our experiments. ABIDE I involved 17 international
sites, sharing previously collected resting state functional magnetic resonance
imaging (R-fMRI), anatomical and phenotypic datasets made available for data
sharing with the broader scientiﬁc community. This eﬀort yielded a huge dataset
containing 1112 subjects, including 539 from individuals with autism spectrum
disorder (ASD) and 573 from typical controls (ages 7-64 years, median 14.7
years across groups). Characteristics for each site are presented in Table 1.

Unlike IBSR, the ABIDE dataset does not contain ground-truth segmenta-
tions of subcortical structures. Instead, we have used automatic segmentations
obtained using the recon-all pipeline1 of the FreeSurfer 5.1 tool [42], which
are freely available at http://fcon_1000.projects.nitrc.org/indi/abide/.
This pipeline involves the following steps: motion correction, intensity normal-
ization, aﬃne registration of volumes to the MNI305 atlas, skull-stripping, non-
linear registration using the Gaussian Classiﬁer Atlas (GCA), and brain parcella-
tion. The outputs of this pipeline used in our study are the skull stripped, inten-
sity normalized brain volumes in the unregistered subject space (i.e., brain.mgz
ﬁles) and the subcortical labelling of these volumes (i.e., aseg.mgz ﬁles). Note
that FreeSurfers registration and segmentation steps were shown to be robust
to age-associated bias [43].

For this dataset, the objectives of our experiment was to measure the impact
of diﬀerent imaging, demographic and clinical factors on the reliability of the
proposed method. Another goal was to verify that our method could obtain
segmentations similar to those of atlas-based approaches (e.g., the segmenta-
tion approach of FreeSurfer ), but in a fraction of the time. To measure the
impact of age (and thus brain size) on our method’s performance, we followed
the methodology of [44] and divided subjects into three non-overlapping groups:
ă13 years, 13 to 18 years, and ą18 years. Furthermore, to account for potential
structural diﬀerences related to autism, we further split each age group into two
sub-groups, containing control and ASD subjects respectively. Lastly, to evalu-
ate the robustness of our method in unseen cohorts, the resulting subject groups
were again split based on whether the subject is from a site used in training or
not. Note that, in the case of subjects from sites used in training, only subjects
from the test set are considered (i.e., no training example is used while measure
the segmentation performance). A summary of group conﬁguration and train-

1http://surfer.nmr.mgh.harvard.edu/fswiki/recon-all

10

San Diego State University˚

1.0ˆ1.0ˆ1.1

22/14

8.7-17.2

Site

California Institute of Technology˚

Carnegie Mellon University˚

Kennedy Krieger Institute˚

Ludwig Maximilians
Munich˚
NYU Langone Medical Center˚

University

Olin, Institute of Living at Hartford
Hospital˚
Oregon Health and Science Univer-
sity

Social Brain Lab BCN NIC UMC
Groningen˚

Stanford University˚

Trinity Centre for Health Sciences

University of California, Los Angeles:
Sample 1˚
University of California, Los Angeles:
Sample 2

University of Leuven: Sample 1˚

University of Leuven: Sample 2˚

Number
images

Voxel size
(mm3)

Control
vs. ASD

Ages
(Years)

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

1.0ˆ1.0ˆ1.0

19/19

13/14

33/22

17.0-56.2

19-40

8.0-12.8

1.0ˆ1.0ˆ1.0

33/24

7-58

184

1.3ˆ1.0ˆ1.3

105/79

6.5-39.1

1.0ˆ1.0ˆ1.0

16/20

10-24

1.0ˆ1.0ˆ1.1

15/13

8.0-15.2

1.0ˆ1.0ˆ1.1

15/15

20-64

0.86ˆ1.5ˆ0.86 20/20

1.0ˆ1.0ˆ1.0

25/24

7.5-12.9

12.0-25.9

1.0ˆ1.0ˆ1.2

33/49

8.4-17.9

1.0ˆ1.0ˆ1.2

14/13

9.8-16.5

0.98ˆ0.98ˆ1.2 15/14

18-32

0.98ˆ0.98ˆ1.2 20/15

-ˆ-ˆ1.2

-ˆ-ˆ1.2

55/55

22/13

12.1-16.9

8.2-19.2

12.8-28.8

1.1ˆ1.1ˆ1.1

27/30

9.3-35.2

University of Michigan: Sample 1

110

University of Michigan: Sample 2˚

University of Pittsburgh School of
Medicine˚
University
Medicine˚
Yale Child Study Center

of Utah

School

of

101

56

1.0ˆ1.0ˆ1.2

43/58

8.8-50.2

1.0ˆ1.0ˆ1.0

28/28

7.0-17.8

Table 1: Scan parameters and characteristics of sites included in the ABIDE dataset.
An asterisk beside the site name indicates that data from this site were used for
training.

ing/testing distribution is presented in Table 2. To facilitate the presentation of
results, each group is identiﬁed by a unique ID, from A to L. For instance, group
A corresponds to control subjects less than 13 years of age, from sites used in
training. Among this group, the data of 42 subjects were used for training our
FCNN, and the data of 93 subjects for measuring its performance.

We evaluated the segmentation of target subcortical brain structures by
training and testing with data from diﬀerent sites or age/diagnosis groups. For
training, we considered 10 control subjects from 15 sites (indicated by an asterisk
in Table 1), giving a total of 150 training examples. The reason for employing
only control subjects is that ASD subjects may present structural abnormalities

38

27

55

57

36

28

36

30

40

49

82

27

29

35

35

57

11

DX group
Age group ă 13

Subjects
train/test

Site used in training

Site NOT used in training

Control

ASD

Control

ASD

13-18 ą 18 ă 13

13-18 ą 18 ă 13 13-18 ą 18 ă 13 13-18 ą 18

42/93 46/87 62/98 0/133 0/113 0/144 0/65 0/53 0/16 0/62 0/48 0/11

Group ID

A

B

C

D

E

F

G

H

I

J

K

L

Table 2: Conﬁguration of subject groups used in the proposed experiments. The
number of training and testing subjects included in each group is detailed in last row.

that are not representative of the population. Including these subjects in the
training set might thus aﬀect the generability of our segmentation model. For
validation, we used a single subject per site, leading to a validation set composed
of 15 examples. Segmentation performance was evaluated on remaining subjects
from all sites.

2.5.2. Implementation details

Selecting the network’s architecture is a complex and problem-speciﬁc task,
which can greatly aﬀect the performance and computational eﬃciency of the
solution. In this study, we investigate three diﬀerent FCNN architectures. The
ﬁrst architecture, called CNNbase, is composed of 3 convolutional layers with 25,
50 and 75 feature maps (i.e., ﬁlters), respectively, and a kernel size of 7ˆ7ˆ 7.
Three fully-connected layers are added after the last convolutional layer to model
the relationship between features and class labels. The CNNbase architecture,
depicted in Figure 1, is employed as a baseline to generate “standard” or “con-
trol” segmentations.
In the second architecture, denoted as CNNsingle, each
convolutional layer is replaced by three successive convolutional with smaller
kernels of size 3ˆ3ˆ 3. As mentioned in Section 2.2, this strategy allows hav-
ing a deeper network with the same number of parameters. Finally, the third
architecture, called CNNmulti, corresponds to the multiscale FCNN of Figure 2,
which was presented in Section 2.3.

All three architectures have three fully-connected layers, composed of 400,
200 and 150 hidden units respectively. These layers are followed by a ﬁnal classi-
ﬁcation layer, which outputs the probability maps for each of the 9 classes: 8 for
each of the subcortical structures (left and right) and one for the background.
The CNNmulti architecture proposed in this paper is thus composed of 13 lay-
ers in total, with the following layout: 9 convolutional layers, 3 fully-connected
layers, and the classiﬁcation layer. Furthermore, the number of kernels in each
convolutional layer (from ﬁrst to last) is as follows: 25, 25, 25, 50, 50, 50, 75,
75 and 75.

The optimization of network parameters is performed with stochastic gra-
dient descent (SGD), using cross-entropy as cost function. However, since our
network employs 3D convolutions, and due to the large sizes of MRI volumes,
dense training cannot be applied to whole volumes. Instead, volumes are split
into B smaller segments, which allows dense inference in our hardware setting.
Let θ be the network parameters (i.e., convolution weights and biases), and de-
note as L the set of ground-truth labels such that Lv
s P L is the label of voxel v

12

in the s-th image segment. Following [31], we deﬁned the cost function as

Jpθ; Lq “ ´

log pLv

s pXvq,

(4)

1
B ¨V

Bÿ

Vÿ

s“1

v“1

where pcpXvq is the output of the classiﬁcation layer for voxel v and class c.
In [31], Kamnitsas et al.
found that increasing the size of input segments in
training leads to a higher performance, but this performance increase stops
beyond segment sizes of 25ˆ25ˆ25. In their network, using this segment size
for training, score maps at the classiﬁcation stage were of size 9ˆ9ˆ9. Since
our architecture is one layer deeper, and to keep the same score map sizes, we
set the segment size in our network to 27ˆ27ˆ27.

Deep CNNs are usually initialized by assigning random normal-distributed
values to kernel and bias weights. As demonstrated in [33], initializing weights
with ﬁxed standard deviations may lead to poor convergence. To overcome
this limitation, we adopted the strategy proposed in [32], and used in [31] for
segmentation, that allows very deep architectures (e.g., 30 convolutional or fully-
connected layers) to converge rapidly. In this strategy, weights in layer l are
initialized based on a zero-mean Gaussian distribution of standard deviation
a
2{nl, where nl denotes the number of connections to units in that layer. For
example, in the ﬁrst convolutional layer of Figure 2, the input is composed of
single-channel (i.e., grey level) image segments and kernels have a size of 3ˆ3ˆ3,
therefore the standard deviation is equal to

2{p1 ˆ 3 ˆ 3 ˆ 3q “ 0.2722.

a

Our 3D FCNNs were initially trained for 50 epochs, each one composed of
20 subepochs. At each subepoch, a total of 500 samples were randomly selected
from the training image segments, and processed in batches of size 5. However,
we observed that the performance of the trained network on the validation set
did not improve after 30 epochs, allowing us to terminate the training process
at this point. As other important meta-parameters, the training momentum
was set to 0.6 and the initial learning rate to 0.001, being reduced by a factor
of 2 after every 3 epochs. Note that instead of an adaptive strategy for learning
rate, we used step decay and monitored the evolution of the cost error during
training. We observed that it followed a decreasing curve, with and exponential
shape and small increasing/decreasing slopes. Therefore, we considered that
decreasing the learning rate at certain epochs was suﬃcient to properly train
the network.

To implement our network, we adapted the 3D FCNN architecture of Kam-
nitsas et al. [31]. Their architecture was developed using Theano, a CPU and
GPU mathematical compiler for implementing deep learning models [45]. The
PC used for training is an Intel(R) Core(TM) i7-6700K 4.0GHz CPU, equipped
with a NVIDIA GeForce GTX 960 GPU with 2 GB of memory. Training our
network took a little over 2 hours per epoch, and around 2 days and a half
for the fully trained CNN. The source code of our implementation is publicly
available on https://github.com/josedolz/LiviaNET.

13

2.5.3. Evaluation

Various comparison metrics exist to evaluate the accuracy of segmentation
methods. Although volume-based metrics, such as Dice similarity coeﬃcient
(DSC) [46], have been broadly used to compare segmentation results, they are
fairly insensitive to the precise contour of segmented regions, which only has
small impact on the overall volume. However, two segmentations with a high
spatial overlap may exhibit clinically relevant diﬀerences in their boundaries. To
measure such diﬀerences, distance-based metrics such as the Modiﬁed Hausdorﬀ
distance (MHD) are typically used.

Dice similarity coeﬃcient. Let Vref and Vauto denote the binary reference
segmentation and the automatic segmentation, respectively, of a given tissue
class for a given subject. The DSC is then deﬁned as

`

˘

DSC

Vref , Vauto

“

2 | Vref X Vauto |
| Vref | ` | Vauto |

(5)

DSC values are comprised in the r0, 1s range, where 1 indicates perfect overlap-
ping and 0 represents no overlapping at all.

Modiﬁed Hausdorﬀ distance. Let Pref and Pauto denote the sets of voxels
within the reference segmentation and the automatic one, respectively. The
MHD can be then deﬁned as
˘

!

Pref , Pauto

“ max

dpPref , Pautoq, dpPauto, Pref q

(6)

`
MHD

)
,

where dpP, P 1q is the maximum distance between a voxel in P and its nearest
voxel in P 1. In this case, smaller values indicate higher proximity between two
point sets, and thus a better segmentation.

3. Results

We ﬁrst test our segmentation method on the IBSR dataset, which has been
used in numerous studies on subcortical parcellation. In Section 3.2, we then
measure the beneﬁts of having a deeper network with smaller kernels and using
multiscale features, as well as evaluate the impact of various acquisition, demo-
graphics, and clinical factors, by applying our CNNbase, CNNsingle and CNNmulti
architectures on the ABIDE dataset. Finally, in Section 3.3, we demonstrate the
cross-dataset generalization of our method by evaluating on the IBSR dataset
the FCNN trained using the ABIDE dataset.

For notation simplicity, we now on denote brain structures by their ﬁrst two
characters, indicating within parenthesis their location, i.e left (L) or right (R)
hemisphere. For example, the caudate in the left brain side will be referred to
as Ca(L).

14

3.1. Evaluation on the IBSR dataset

Figure 3 shows the segmentation accuracy of the proposed CNNmulti ar-
chitecture, in terms of the DSC and MHD, obtained for the target left- and
right-side brain structures. We see that the segmentation of the pallidum, both
left and right, was signiﬁcantly less accurate than other structures (i.e., thala-
mus, caudate and putamen), likely due to the smaller size of this brain structure.
Furthermore, we observe that the segmentation of all four subcortical structures
is slightly more accurate in the right hemisphere, although the diﬀerences are
not statistically signiﬁcant following a Wilcoxon signed-rank test.

In light of the various studies using the IBSR dataset as segmentation bench-
mark, the results obtained by our method are state-of-the-art (Table 5). Specif-
ically, when comparing against the recent work of Shakeri et al. [17], which used
a 2D FCNN and the same validation methodology, our method achieved DSC
improvements ranging from 5% (in the thalamus) to 13% (in the caudate).

To demonstrate that the proposed approach actually learns from training
data, we also measured the performance of a simple majority voting technique,
using the same leave-one-out-cross-validation strategy. In this technique, each
voxel of the volume to segment is mapped to the most frequent class in cor-
responding voxels of training volumes. Applying this technique to all IBSR
subjects gave mean DSC values of 0.83, 0.69, 0.74 and 0.75 for the thalamus,
caudate, putamen and pallidum, respectively.

Figure 3: Segmentation accuracy (mean DSC and MHD) obtained, for each brain
structure, by the CNNmulti architecture on subjects of the IBSR dataset.

3.2. Evaluation on the ABIDE dataset

Table 3 gives the mean DSC and mean MHD obtained by the CNNbase,
CNNsingle and CNNmulti architectures on all test examples of the the ABIDE
dataset. Recall that these accuracy measures were computed using the labels
obtained from FreeSurfer , since ground-truth segmentations were not available.
We ﬁrst observe that having a deeper network, via smaller kernels, increases
the segmentation performance in both metrics.
In a one-sided A one-sided
non-parametric statistical test can handle non-Gaussian data distributions, and
accommodates the following alternative hypothesis: The architecture is better

15

than the baseline. Wilcoxon signed-rank test or t-test, the mean DSC and
MHD of CNNsingle is statistically better (i.e., higher for DSC and lower for
MHD) than CNNbase, with p ă 0.01. Likewise, when features extracted at
intermediate layers are fed into the ﬁrst fully-connected layer, the proposed
CNNmulti network generated more reliable segmentations, both in terms DSC
and MHD. These results are also statistically signiﬁcant, with p ă 0.01, in a
Wilcoxon signed-rank test or t-test.

Mean DSC

Mean MHD

Caudate

Structure CNNbase CNNsingle CNNmulti

Thalamus

Caudate

Putamen

Pallidum

Thalamus

Putamen

Pallidum

0.8987
(0.002)

0.8979
(0.0012)

0.8909
(0.0017)

0.8381
(0.0096)

0.1487
(0.0087)

0.1710
(0.0154)

0.2074
(0.0296)

0.2487
(0.0205)

0.9039
(0.0052)

0.9011
(0.0002)

0.8992
(0.0009)

0.8497
(0.0096)

0.1462
(0.0153)

0.1583
(0.0213)

0.1742
(0.0467)

0.2305
(0.0208)

0.9156
(0.0012)

0.9073
(0.0021)

0.9041
(0.0014)

0.8621
(0.0095)

0.1405
(0.0002)

0.1557
(0.0165)

0.1706
(0.0296)

0.2232
(0.0232)

Table 3: Mean DSC and MHD (standard deviation between brackets), obtained by the
three tested FCNN architectures on the ABIDE dataset. Bold font numbers indicate
the best result among the three architectures.

Figure 4 plots the mean DSC and MHD values obtained by our CNNmulti
architecture for each of the subject groups in Table 2. These values are grouped
by subcortical structure of interest, i.e., thalamus, caudate, putamen and pal-
lidum. For each structure, an additional bar is added, giving the mean DSC and
MHD obtained on subjects of all groups together. Across all subject groups,
the segmentations produced by our 3D FCNN achieved mean DSC values above
0.90 for all structures except the pallidum, which had a mean DSC of 0.85.
Likewise, mean MHD values were below 0.25 mm in all subject groups and for
all four subcortical structures. These results are consistent with those obtained
for the IBSR dataset.

Analyzing the results obtained using data from sites considered in training
(groups A-F), we observe that mean DSC values obtained for control subjects
(groups A-C) are usually higher than for ASD subjects (groups D-E). For in-
stance, putamen segmentation in control subjects less than 13 years old yielded

16

a) Data employed in training

b) Unseen data

Figure 4: Mean DSC and MHD values obtained for subject data used during training,
and for unseen data.

a mean DSC of 0.9127, compared to 0.9055 for ASD subjects in the same age
group. The same trend is seen for distance similarities, for example in the cau-
date, where a mean MHD of 0.1397 was obtained for control subjects, versus
0.2568 for ASD subjects. These results illustrate that physiological diﬀerences
related to autism, especially in young subjects, can have a small impact on
segmentation accuracy.

Looking at the impact of subject age on results, it can be seen that the
segmentation of the thalamus and caudate improves as the subject gets older,
in both control and ASD subjects. The relationship between subject age and
segmentation accuracy in these structures is further illustrated in Figure 5,
which gives the scatter plot of DSC versus age in the left/right thalamus and
caudate, considering all control and ASD subjects together. In each plot, the
Spearman rank correlation coeﬃcient and corresponding p-value are given as
variables r and p. Note that p-values have been corrected using the Bonferroni
procedure, to account for the multiple comparisons (8 structures). We notice
a weak but statistically signiﬁcant correlation, with p ă 0.01, validating our
previous observation.
It is also worth noting a greater variance in accuracy
occurring for younger subjects, most of the low accuracy values observed for

17

ages less than 20 years old. This is consistent with the fact that the brain is
continuously developing until adulthood, and suggests that the physiological
variability of younger subjects may not be completely captured while training
the network.

The same patterns can be observed when segmenting subjects from sites
not used in training (groups G-L). Particularly noticeable is the relationship
between age and accuracy, which can be seen in all structures, and in both
control and ASD subjects. Comparing with results obtained on data from sites
used in training, we ﬁnd no statistically signiﬁcant diﬀerence in accuracy (DSC
or MHD), for any brain structure. This suggests that the proposed method can
generalize to acquisition protocols and imaging parameters not seen in training.
Overall the results of these experiments illustrate that our method is robust to
various clinical, demographics and site-related factors.

Figure 5: Scatter plots of left and right thalamus and caudate segmentation perfor-
mance regarding DSC and subject age, where the Spearman rank correlation coeﬃcient
r and corresponding p-values are given for each plot. From these plots, a weak but
statistically signiﬁcant correlation between performance and subject age is observed.

Figures 6 and 7 give visual examples of segmentations obtained by our 3D

FCNN architecture and standard references contoured by FreeSurfer .

It can be observed that the segmentations generated by our proposed ar-
chitecture are signiﬁcantly smoother than those of FreeSurfer , regardless of the

18

subject group (i.e diagnosis, age, site employed or not in training). We also
notice that our system is better at identifying thin regions in the structures of
interest, for instance, the lower extremities of pallidum (green regions).

Site used in training

FreeSurfer

Our CNN

Figure 6: Visual examples of our 3D FCNN architecture compared with the standard
references contoured by FreeSurfer , for three test subjects from sites used in training.

To better understand the features learned by the network, Figure 8 shows
examples of feature map activations obtained for a given input patch (cyan
box in the ﬁgure). Each column corresponds to a diﬀerent CNN layer, left-side
columns corresponding to shallow layers, and right-side columns to deep layers
in the network. Likewise, images in each row correspond to a randomly selected
activation of the layer’s feature map. Although diﬃcult to analyze, we notice

19

Site NOT used in training

FreeSurfer

Our CNN

Figure 7: Visual examples of our 3D FCNN architecture compared with the references
standard contoured by FreeSurfer for three test subjects from sites not used in training.

that activation values in initial layers mainly indicate the presence of strong
edges or boundaries, whereas those in deeper layers of the network represent
more complex structures. In particular, images in the last two columns (i.e.,
convolutional layers of the network) roughly delineate the right caudate. Note
that 2D images are used here for visualization purposes and that both input
patches and features map activations are actually in 3D.

As previously explained, score maps (i.e., class probabilities, ranging from 0
to 1) are obtained at the end of the network, before the voxels are assigned to the
target labels. To illustrate this output, Figure 9 shows an example of probability

20

Figure 8: Feature map activations in all convolutional layers of the FCNN (right),
obtained for a given patch of the input MRI image (left). Each column corresponds
to a diﬀerent convolutional layer, from shallow to deeper, and each image in a row to
a features map activation randomly selected in the layer.

maps for a given slice of the volume. Red pixels indicate probability values close
to 1, and blue pixels near 0. Each image of the ﬁgure gives the probability map
of a speciﬁc structure of interest, including the background. It can be seen that
generated probability maps are well deﬁned, reﬂecting the actual contours of the
imaged structures (ﬁrst subﬁgure of the set). This suggests that these proba-
bility maps can be used directly for segmentation, without requiring additional,
and potential computationally expensive, spatial regularization. Smoothed ex-
amples of 3D segmentation outputs are displayed in Figure 10. These images,
which were rendered using the Medical Interaction ToolKit (MITK) software
package [47], highlight the spatial consistency of the obtained segmentation. All
automatic contours and probability maps generated by our network are publicly
available at: https://github.com/josedolz/3D-FCNN-BrainStruct.

Using the GPU mentioned in Section 2.5.2, our method takes on average
2-3 minutes to segment the data of a single subject from the ABIDE dataset
(nearly two days for all 947 subjects). For a fair comparison with a CPU-based
FreeSurfer implementation, we evaluated our method’s processing time when
running on the CPU only. A CPU version of our 3D CNN required less than
5 minutes per subject, in all cases. These CPU times are much lower than
the several hours required by FreeSurfer ’s full segmentation pipeline [48, 49].
Note that recent FreeSurfer versions provide GPU support for some steps of
the segmentation pipeline. For instance, in a benchmark test, performing a
linear volumetric registration (i.e., mri em register ) takes 3 minutes on a GPU,
compared to 33 minutes on a CPU2. However, this step is much less expensive
computationally than the deformable registration step (i.e., mri ca register ),

2http://surfer.nmr.mgh.harvard.edu/fswiki/CUDADevelopersGuide

21

MRI image

Background

Th(R)

Ca(R)

Pu(R)

Pa(R)

Th(L)

Ca(L)

Pu(L)

Pa(L)

Figure 9: Probability maps generated by the proposed 3D FCNN for the background
and the eight structures given an input MRI image. Note that input MRI has been
cropped for better resolution.

Figure 10: Diﬀerent views of a smoothed version of contours provided by our automatic
segmentation system. In these images, the thalamus, caudate, putamen and pallidum
are respectively depicted in yellow, cyan, red and green.

which typically takes an order of magnitude longer than linear registration3.

3.3. Cross-dataset evaluation

To further assess the potential of the proposed method on new data, we
used the model trained on the ABIDE dataset for segmenting volumes from the
IBSR dataset. Results of this experiment, presented in Table 4, suggest that
our method is reliable when tested on a diﬀerent dataset, with a mean DSC
ranging from 0.79 (in the pallidum) to 0.87 (in the thalamus). Compared to
both training and testing on the IBSR dataset, these results correspond to an

3http://surfer.nmr.mgh.harvard.edu/fswiki/ReconAllRunTimes

22

average decrease of 0.05 in DSC and an average increase of 0.12 mm in MHD.
A possible reason for this performance drop is the diﬀerence in voxel resolutions
between the two datasets, particularly in terms of thickness. While thickness in
images acquired across the various sites of the ABIDE project is in the range
between 1.0 to 1.2 mm (with only two sites providing images with thickness
outside this range, i.e., 0.86 and 1.3 mm), all the scans in IBSR had a thickness
of 1.5 mm.

Mean DSC

Training Thalamus Caudate Putamen Pallidum
0.91
0.84

IBSR
ABIDE

0.83
0.79

0.90
0.85

0.92
0.87

Mean MHD

IBSR
ABIDE

0.13
0.25

0.21
0.32

0.18
0.34

0.26
0.38

Table 4: Segmentation accuracy (mean DSC and MHD) obtained on the IBSR dataset
by the proposed 3D FCNN model trained with the ABIDE dataset or with the IBSR
dataset.

4. Discussion

We conducted a comprehensive quantitative evaluation of our method using
the publicly available IBSR and ABIDE datasets. The segmentation accuracy
of our method was measured with respect to the ground-truth segmentations of
the IBSR dataset, and compared to recently proposed methods for the task of
brain parcellation. As reported in Table 5, our method obtained state-of-the-art
performance, with mean DSC values ranging from 0.83 to 0.91 and mean MHD
values between 0.13 mm and 0.26 mm (Figure 3). The ABIDE dataset was then
used to demonstrate our method’s reliability for large-scale datasets acquired at
multiple sites, and measure the impact of various factors, including age, diagno-
sis group (i.e., healthy control or ASD). Considering all test subjects together,
our method obtained segmentations consistent with those of FreeSurfer , with
mean DSC between 0.86 and 0.92 and mean MHD ranging from 0.14 mm to
0.22 mm, across the target brain structures. The accuracy of our CNNmulti
architecture was statistically higher than two other tester architectures, which
do not use multiscale features and small kernels (Table 3).

Considering the diagnosis group of subjects, segmentations obtained for both
control and ASD subjects were of high quality, with similar mean DSC and MHD
values (Figure 7). Since ASD subjects are likely to have morphological (e.g.,
volumetric) diﬀerences in brain regions like the putamen [50], hippocampus [51]
or amygdala [52], compared to healthy sujects, this suggests that our method is
robust to such diﬀerences. Analyzing the results according to subject age group,
we noticed a slightly lower segmentation accuracy for younger subjects. This
is consistent the fact that the brain is continuously developing until adulthood,
and that young subjects have a larger variability during their development pro-
cess. However, it has been found that brain development in autism follows an

23

abnormal pattern, with accelerated growth in early life, which results in brain
enlargement during childhood [44]. Therefore, there may be some intermediate
states of brain development in early ages of control and ASD subjects that were
not fully captured by the network during training. blueAnother reason to ex-
plain such diﬀerences is that template-based segmentation may not be ﬂexible
enough to adapt to these pathological diﬀerences. Finally, by achieving a com-
parable performance on subjects from sites used in training and subject from
other sites, we demonstrated that our method is robust to the various imaging
parameters and protocols.

The automated segmentation of brain regions in MRI is a challenging task
due to the structural variability across individuals. To tackle this problem, a
broad range of approaches have been proposed during the last decade (Table
5), many of which are based on atlases. Although atlas-based segmentation has
been used successfully for subcortical brain structure segmentation, a single at-
las is often unsuitable for capturing the full structural variability of subjects in
a given neuroimaging study. Several strategies have been presented to overcome
the limitation of single atlas segmentation, for instance using multiple atlases
alongside label fusion techniques [53]. Nevertheless, one of the main drawbacks
shared by all atlas-based methods is their dependency to the image registration
step, which is both time-consuming and prone to errors. Recent studies have
reported segmentation times of up to several hours per subject when employ-
ing FreeSurfer [48, 49]. In [15], Powell et al. presented an approach based on
artiﬁcial neural networks as an alternative to atlas-based methods. However,
registration was also a key component of their segmentation scheme, thus hav-
ing the same drawbacks as atlas-based techniques. Also using machine learning,
a 2D FCNN was proposed in [17] for the task of subcortical brain parcellation.
Although the registration of subjects volumes was not initially required, the au-
thors tested their CNN on data pre-registered to the Talairach space. As demon-
strated by our experiments, our approach has the advantage of being alignment
independent, a property of great importance when working with multi-subject
or multi-site data.

Although 2D CNNs have led to record-breaking performances in various
computer vision tasks, their usefulness for 3D medical images is more limited.
Numerous strategies have been proposed to mitigate this, for instance, consid-
ering all three orthogonal planes [27], or using single slices with a regularization
scheme (e.g., CRF) to impose volumetric homogeneity [17]. While these tech-
niques have helped improving segmentation results, they lack the ability to
capture the full spatial context of 3D images. By using 3D convolutions, our
approach can better capture spatial context in volumetric data. This is re-
ﬂected by a performance improvement with respect to typical 2D CNN models.
Another noteworthy point is the ability of our method to successfully segment
subjects from sites that were not employed during training. Diﬀerences in scan-
ners or acquisition protocols, for instance, can introduce a signiﬁcant bias on the
appearance of images (e.g., alignment, contrast, etc.), and the heterogeneity of
multi-site data has been a stumbling block for large-scale neuroimaging studies.
As conﬁrmed by our results, incorporating training samples from diﬀerent sites,

24

Work

Method

Structures

DSC

Dataset

Artificial
Neural
Network

Own dataset

Artaechevarria et al. [58]
(2009)

Atlas

Heckemann et al. [54]
(2006)

Han et al. [55]
(2007)

Linguraru et al. [56]
(2007)

Bazin et al. [57]
(2008)

Powell et al. [15]
(2008)

Ciofolo et al. [59]
(2009)

Lotjonen et al. [10]
(2010)

Sabuncu et al. [60]
(2010)

Rousseau et al. [62]
(2011)

Asman et al. [63]
(2014)

Wang et al. [64]
(2014)

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Atlas

Patenaude et al. [61]
(2011)

Bayesian
model

Shakeri et al. [17]
(2016)

2D FCNN
+ CRF

Bao et al. [65]
(2016)

2D CNN

Our CNN

3D FCNN

Own dataset

Own dataset

Own dataset

Own dataset

IBSR

IBSR

IBSR

IBSR

IBSR

IBSR

OASIS

OASIS

IBSR

IBSR

IBSR

0.90
0.90
0.90
0.80

0.88
0.84
0.85
0.76

0.88
0.82
0.86
0.79

0.77
0.78
0.82
-

0.88
0.84
0.85
-

0.88
0.83
0.87
0.81

0.77
0.60
0.66
0.56

0.89
0.85
0.90
0.80

0.91
0.87
0.89
0.84

0.89
0.83
0.88
0.79

0.88
0.87
0.87
0.64

0.89
0.90
0.89
0.84

0.89
0.75
0.88
0.84

0.87
0.78
0.83
0.75

0.90
0.87
0.88
0.80

0.92
0.91
0.90
0.83

0.92
0.92
0.91
0.86

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

Thalamus
Caudate
Putamen
Pallidum

25

Our CNN

3D FCNN

ABIDE

Table 5: Summary of brain subcortical structures segmentation methods. While most
of these methods employ IBSR for evaluation purposes, OASIS public dataset and
proprietary datasets have been also employed.

which cover a wider range of variability, allowed us to alleviate this problem.

For the experiments on the ABIDE dataset, the reference contours used

for training our CNN were obtained with FreeSurfer , which is considered as a
standard approach to subcortical brain labelling. While expert-labelled contours
would have provided a more reliable validation of our approach, it was found that
the contours obtained by our method were consistent with those of FreeSurfer .
Furthermore, a visual inspection of the results revealed that our method’s con-
tours were, in most cases, more regular than those obtained by FreeSurfer .
This suggests our method to be a suitable alternative to FreeSurfer ’s parcella-
tion pipeline. Nevertheless, an evaluation involving trained clinicians would be
necessary to fully validate this assertion.

An interesting ﬁnding that can be observed from the experiments, is the
comparable performance of the proposed 3D FCNN on both IBSR and ABIDE
datasets (See table 5, last two rows). It is important to note that while IBSR
subjects are pre-aligned, ABIDE subjects are not. This suggests that pre-
alignment does not have a signiﬁcant inﬂuence on the performance of the pro-
posed architecture.

Another important fact is that the performance was not aﬀected by dataset
size (IBSR is small whereas ABIDE is very large). This suggests that, in our
case, data augmentation may not be of substantial beneﬁt. This is due to our
use of sub-volumes, which yields a large number of samples for each subject.

Analyzing the results, we observed that the segmentation of several subject
data diﬀered considerably from others. Upon visual inspection, we found that
the corresponding MRI images had a poor quality (e.g., motion artifacts), and
decided not to include them in the evaluation. Figure 11 shows examples of 2D
slices (in axial view) of two subjects with problematic data.

Figure 11: Axial slices from a bad quality scan of two subjects that were excluded
from the evaluation.

Many modiﬁcations to the proposed architecture are possible. For example,
the architecture could have a diﬀerent number of convolutional/fully-connected
layers, or a diﬀerent number of ﬁlters/units in these layers. Several parameters
settings were tested in preliminary experiments to come up with a deﬁnitive ar-
chitecture. Although the chosen parameters were found to perform well on the

26

test data, they might not be optimal for other datasets. Despite this, small vari-
ations in the architecture are unlikely to have a large impact on performance.
In future work, it would be interesting to further investigate the optimization
of these parameters, such that they could be tuned automatically for a speciﬁc
task and target data. In [31], Kamnitsas et al. found that diﬀerent segment sizes
as input to their network led to diﬀerences in performance. In our study, we
used input sizes that worked well for their speciﬁc application, i.e. brain lesion
segmentation. Although our target problem also uses brain images, characteris-
tics of both problems are diﬀerent, and the eﬀect of input sizes on performance
might also diﬀer. We thus intend to investigate the impact of this factor in a
subsequent study.

A notable limitation of our architecture is its small receptive ﬁeld, con-
strained by the signiﬁcant memory requirements of 3D convolutions. As dis-
cussed earlier, some approaches have overcome this limitation by employing ad-
ditional path-ways with lower image resolutions as input. However, this strategy
comes at the cost of losing ﬁne-grained information in the segmentation. In fu-
ture work, we plan to investigate the use of dilated convolutional kernels [66] to
enlarge the receptive ﬁeld without losing resolution or increasing the number of
trainable parameters.

Another important aspect of CNNs is the transferability of knowledge em-
bedded in the pre-trained architectures, i.e transfer learning. The use of pre-
trained CNNs has been already investigated in previous works. Nevertheless,
available pre-trained models mainly come from 2D convolutions and its use is
often tailored to the same application. We believe that pre-trained CNNs can
be successfully used for diﬀerent applications sharing the same nature, even if
their objectives diﬀer. For instance, our 3D FCNN trained on subcortical brain
structures may be employed as pre-trained network to segment cardiac images.

5. Conclusion

We presented a method based on fully-convolutional networks (FCNNs) for
the automatic segmentation of subcortical brain regions. Our approach is the
ﬁrst to use 3D convolutional ﬁlters for this task. Moreover, by exploiting small
convolution kernels, we obtained a deeper network that has fewer parameters
and, thus,
is less prone to overﬁtting. Local and global context were also
modelled by injecting the outputs of intermediate layers in the network’s fully-
connected layers, thereby encouraging consistency between features extracted
at diﬀerent scales, and embedding ﬁne-grained information directly in the seg-
mentation process.

We showed our multiscale FCNN approach to obtain state-of-the-art per-
formance on the well-known IBSR dataset. We then evaluated the impact of
various factors, including acquisition site, age and diagnosis group, using 1112
unregistered subject datasets acquired from 17 diﬀerent sites. This large-scale
evaluation indicated our method to be robust to these factors, achieving out-
standing accuracy for all subjects groups. Additionally, these experiments have

27

highlighted the computational advantages of our approach compared to atlas-
based methods, by obtaining consistent segmentation results in less time. In
summary, we believe this work to be an important step toward the adoption of
automatic segmentation methods in large-scale neuroimaging studies.

Acknowledgments

This work is supported by the National Science and Engineering Research
Council of Canada (NSERC), discovery grant program, and by the ETS Re-
search Chair on Artiﬁcial Intelligence in Medical Imaging.

References

References

1. T. van Erp, D. Hibar, J. Rasmussen, D. Glahn, G. Pearlson, O. Andreassen,
I. Agartz, L. Westlye, U. Haukvik, A. Dale, et al., Subcortical brain vol-
ume abnormalities in 2028 individuals with schizophrenia and 2540 healthy
controls via the enigma consortium, Molecular psychiatry 21 (4) (2016)
547–553.

2. R. Geevarghese, D. E. Lumsden, N. Hulse, M. Samuel, K. Ashkan, Subcor-
tical structure volumes and correlation to clinical variables in parkinson’s
disease, Journal of Neuroimaging 25 (2) (2015) 275–280.

3. S. Goldman, L. M. O’Brien, P. A. Filipek, I. Rapin, M. R. Herbert, Mo-
tor stereotypies and volumetric brain alterations in children with autistic
disorder, Research in autism spectrum disorders 7 (1) (2013) 82–92.

4. X. Llad´o, A. Oliver, M. Cabezas, J. Freixenet, J. C. Vilanova, A. Quiles,
L. Valls, L. Rami´o-Torrent`a, `A. Rovira, Segmentation of multiple sclero-
sis lesions in brain mri: a review of automated approaches, Information
Sciences 186 (1) (2012) 164–185.

5. D. Garc´ıa-Lorenzo, S. Francis, S. Narayanan, D. L. Arnold, D. L. Collins,
Review of automatic segmentation methods of multiple sclerosis white mat-
ter lesions on conventional magnetic resonance imaging, Medical image anal-
ysis 17 (1) (2013) 1–18.

6. P. Koolschijn, N. E. van Haren, G. J. Lensvelt-Mulders, H. Pol, E. Hilleke,
R. S. Kahn, Brain volume abnormalities in major depressive disorder: A
meta-analysis of magnetic resonance imaging studies, Human brain mapping
30 (11) (2009) 3719–3735.

7. M. Langen, H. G. Schnack, H. Nederveen, D. Bos, B. E. Lahuis, M. V.
de Jonge, H. van Engeland, S. Durston, Changes in the developmental tra-
jectories of striatum in autism, Biological psychiatry 66 (4) (2009) 327–333.

28

8. M. Deeley, A. Chen, R. Datteri, J. Noble, A. Cmelak, E. Donnelly, A. Mal-
colm, L. Moretti, J. Jaboin, K. Niermann, et al., Comparison of manual
and automatic segmentation methods for brain structures in the presence
of space-occupying lesions: a multi-expert study, Physics in medicine and
biology 56 (14) (2011) 4557.

9. J. Dolz, L. Massoptier, M. Vermandel, Segmentation algorithms of subcor-
tical brain structures on mri for radiotherapy and radiosurgery: a survey,
IRBM 36 (4) (2015) 200–212.

10. J. M. L¨otj¨onen, R. Wolz, J. R. Koikkalainen, L. Thurfjell, G. Waldemar,
H. Soininen, D. Rueckert, A. D. N. Initiative, et al., Fast and robust multi-
atlas segmentation of brain magnetic resonance images, Neuroimage 49 (3)
(2010) 2352–2365.

11. H. Wang, J. W. Suh, S. R. Das, J. B. Pluta, C. Craige, P. A. Yushke-
vich, Multi-atlas segmentation with joint label fusion, IEEE transactions
on pattern analysis and machine intelligence 35 (3) (2013) 611–623.

12. K. O. Babalola, T. F. Cootes, C. J. Twining, V. Petrovic, C. Taylor, 3d
brain segmentation using active appearance models and local regressors,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2008, pp. 401–408.

13. A. Rao, P. Aljabar, D. Rueckert, Hierarchical statistical shape analysis and
prediction of sub-cortical brain structures, Medical image analysis 12 (1)
(2008) 55–68.

14. J. Yang, J. S. Duncan, 3d image segmentation of deformable objects with
joint shape-intensity prior models using level sets, Medical Image Analysis
8 (3) (2004) 285–294.

15. S. Powell, V. A. Magnotta, H. Johnson, V. K. Jammalamadaka, R. Pierson,
N. C. Andreasen, Registration and machine learning-based automated seg-
mentation of subcortical and cerebellar brain structures, Neuroimage 39 (1)
(2008) 238–247.

16. J. Dolz, A. Laprie, S. Ken, H.-A. Leroy, N. Reyns, L. Massoptier, M. Ver-
mandel, Supervised machine learning-based classiﬁcation scheme to segment
the brainstem on mri in multicenter brain tumor treatment context, Inter-
national journal of computer assisted radiology and surgery 11 (1) (2016)
43–51.

17. M. Shakeri, S. Tsogkas, E. Ferrante, S. Lippe, S. Kadoury, N. Paragios,
I. Kokkinos, Sub-cortical brain structure segmentation using f-cnn’s, arXiv
preprint arXiv:1602.02130.

18. Y. LeCun, L. Bottou, Y. Bengio, P. Haﬀner, Gradient-based learning ap-
plied to document recognition, Proceedings of the IEEE 86 (11) (1998)
2278–2324.

29

19. A. Krizhevsky, I. Sutskever, G. E. Hinton, Imagenet classiﬁcation with deep
convolutional neural networks, in: Advances in neural information process-
ing systems, 2012, pp. 1097–1105.

20. D. Ciresan, A. Giusti, L. M. Gambardella, J. Schmidhuber, Deep neural
networks segment neuronal membranes in electron microscopy images, in:
Advances in neural information processing systems, 2012, pp. 2843–2851.

21. W. Zhang, R. Li, H. Deng, L. Wang, W. Lin, S. Ji, D. Shen, Deep con-
volutional neural networks for multi-modality isointense infant brain image
segmentation, NeuroImage 108 (2015) 214–224.

22. M. Havaei, A. Davy, D. Warde-Farley, A. Biard, A. Courville, Y. Bengio,
C. Pal, P.-M. Jodoin, H. Larochelle, Brain tumor segmentation with deep
neural networks, Medical Image Analysis.

23. S. Pereira, A. Pinto, V. Alves, C. A. Silva, Brain tumor segmentation using
convolutional neural networks in mri images, IEEE transactions on medical
imaging 35 (5) (2016) 1240–1251.

24. N. Lee, A. F. Laine, A. Klein, Towards a deep learning approach to brain
parcellation, in: 2011 IEEE International Symposium on Biomedical Imag-
ing: From Nano to Macro, IEEE, 2011, pp. 321–324.

25. P. Moeskops, M. A. Viergever, A. M. Mendrik, L. S. de Vries, M. J. Benders,
I. Iˇsgum, Automatic segmentation of mr brain images with a convolutional
neural network, IEEE transactions on medical imaging 35 (5) (2016) 1252–
1261.

26. F. Milletari, S.-A. Ahmadi, C. Kroll, A. Plate, V. Rozanski, J. Maiostre,
J. Levin, O. Dietrich, B. Ertl-Wagner, K. B¨otzel, et al., Hough-cnn: Deep
learning for segmentation of deep brain regions in mri and ultrasound, arXiv
preprint arXiv:1601.07014.

27. A. de Brebisson, G. Montana, Deep neural networks for anatomical brain
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition Workshops, 2015, pp. 20–28.

28. C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan,
V. Vanhoucke, A. Rabinovich, Going deeper with convolutions, in: Proceed-
ings of the IEEE Conference on Computer Vision and Pattern Recognition,
2015, pp. 1–9.

29. J. Long, E. Shelhamer, T. Darrell, Fully convolutional networks for semantic
segmentation, in: Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 2015, pp. 3431–3440.

30. T. Brosch, Y. Yoo, L. Y. Tang, D. K. Li, A. Traboulsee, R. Tam, Deep
convolutional encoder networks for multiple sclerosis lesion segmentation,
in: International Conference on Medical Image Computing and Computer-
Assisted Intervention, Springer, 2015, pp. 3–11.

30

31. K. Kamnitsas, C. Ledig, V. F. Newcombe, J. P. Simpson, A. D. Kane,
D. K. Menon, D. Rueckert, B. Glocker, Eﬃcient multi-scale 3d cnn with
fully connected crf for accurate brain lesion segmentation, arXiv preprint
arXiv:1603.05959.

32. K. He, X. Zhang, S. Ren, J. Sun, Delving deep into rectiﬁers: Surpassing
human-level performance on imagenet classiﬁcation, in: Proceedings of the
IEEE International Conference on Computer Vision, 2015, pp. 1026–1034.

33. K. Simonyan, A. Zisserman, Very deep convolutional networks for large-

scale image recognition, arXiv preprint arXiv:1409.1556.

34. T. Brox, A. Bruhn, N. Papenberg, J. Weickert, High accuracy optical ﬂow
estimation based on a theory for warping, in: European conference on com-
puter vision, Springer, 2004, pp. 25–36.

35. C. Farabet, C. Couprie, L. Najman, Y. LeCun, Learning hierarchical fea-
tures for scene labeling, IEEE transactions on pattern analysis and machine
intelligence 35 (8) (2013) 1915–1929.

36. L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, A. L. Yuille, Semantic
image segmentation with deep convolutional nets and fully connected crfs,
arXiv preprint arXiv:1412.7062.

37. L.-C. Chen, J. T. Barron, G. Papandreou, K. Murphy, A. L. Yuille, Semantic
image segmentation with task-speciﬁc edge detection using cnns and a dis-
criminatively trained domain transform, arXiv preprint arXiv:1511.03328.

38. B. Hariharan, P. Arbel´aez, R. Girshick, J. Malik, Hypercolumns for object
segmentation and ﬁne-grained localization, in: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition, 2015, pp. 447–
456.

39. S. M. Smith, Fast robust automated brain extraction, Human brain mapping

17 (3) (2002) 143–155.

40. J. Laﬀerty, A. McCallum, F. Pereira, Conditional random ﬁelds: Probabilis-
tic models for segmenting and labeling sequence data, in: Proceedings of
the eighteenth international conference on machine learning, ICML, Vol. 1,
2001, pp. 282–289.

41. A. Di Martino, C.-G. Yan, Q. Li, E. Denio, F. X. Castellanos, K. Alaerts,
J. S. Anderson, M. Assaf, S. Y. Bookheimer, M. Dapretto, et al., The
autism brain imaging data exchange: towards a large-scale evaluation of the
intrinsic brain architecture in autism, Molecular psychiatry 19 (6) (2014)
659–667.

42. B. Fischl, Freesurfer, Neuroimage 62 (2) (2012) 774–781.

31

43. S. S. Ghosh, S. Kakunoori, J. Augustinack, A. Nieto-Castanon, I. Kovelman,
N. Gaab, J. A. Christodoulou, C. Triantafyllou, J. D. Gabrieli, B. Fischl,
Evaluating the validity of volume-based and surface-based brain image reg-
istration for developmental cognitive neuroscience studies in children 4 to
11 years of age, Neuroimage 53 (1) (2010) 85–93.

44. E. H. Aylward, N. J. Minshew, K. Field, B. Sparks, N. Singh, Eﬀects of age
on brain volume and head circumference in autism, Neurology 59 (2) (2002)
175–183.

45. J. Bergstra, O. Breuleux, F. Bastien, P. Lamblin, R. Pascanu, G. Des-
jardins, J. Turian, D. Warde-Farley, Y. Bengio, Theano: A cpu and gpu
math compiler in python, in: Proc. 9th Python in Science Conf, 2010, pp.
1–7.

46. L. R. Dice, Measures of the amount of ecologic association between species,

Ecology 26 (3) (1945) 297–302.

47. I. Wolf, M. Vetter, I. Wegner, T. B¨ottger, M. Nolden, M. Sch¨obinger,
M. Hastenteufel, T. Kunert, H.-P. Meinzer, The medical imaging interaction
toolkit, Medical image analysis 9 (6) (2005) 594–604.

48. A. R. Khan, L. Wang, M. F. Beg, Freesurfer-initiated fully-automated sub-
cortical brain segmentation in mri using large deformation diﬀeomorphic
metric mapping, Neuroimage 41 (3) (2008) 735–746.

49. Y. Huo, A. J. Plassard, A. Carass, S. M. Resnick, D. L. Pham, J. L. Prince,
B. A. Landman, Consistent cortical reconstruction and multi-atlas brain
segmentation, NeuroImage 138 (2016) 197–210.

50. W. Sato, Y. Kubota, T. Kochiyama, S. Uono, S. Yoshimura, R. Sawada,
M. Sakihama, M. Toichi, Increased putamen volume in adults with autism
spectrum disorder., Frontiers in human neuroscience 8 (2013) 957–957.

51. R. Nicolson, T. J. DeVito, C. N. Vidal, Y. Sui, K. M. Hayashi, D. J. Drost,
P. C. Williamson, N. Rajakumar, A. W. Toga, P. M. Thompson, Detection
and mapping of hippocampal abnormalities in autism, Psychiatry Research:
Neuroimaging 148 (1) (2006) 11–21.

52. C. M. Schumann, J. Hamstra, B. L. Goodlin-Jones, L. J. Lotspeich,
H. Kwon, M. H. Buonocore, C. R. Lammers, A. L. Reiss, D. G. Amaral,
The amygdala is enlarged in children but not adolescents with autism; the
hippocampus is enlarged at all ages, The Journal of Neuroscience 24 (28)
(2004) 6392–6401.

53. A. R. Khan, N. Cherbuin, W. Wen, K. J. Anstey, P. Sachdev, M. F. Beg,
Optimal weights for local multi-atlas fusion using supervised learning and
dynamic information (superdyn): validation on hippocampus segmentation,
NeuroImage 56 (1) (2011) 126–139.

32

54. R. A. Heckemann, J. V. Hajnal, P. Aljabar, D. Rueckert, A. Hammers,
Automatic anatomical brain mri segmentation combining label propagation
and decision fusion, NeuroImage 33 (1) (2006) 115–126.

55. X. Han, B. Fischl, Atlas renormalization for improved brain mr image seg-
mentation across scanner platforms, IEEE transactions on medical imaging
26 (4) (2007) 479–486.

56. M. G. Linguraru, T. Vercauteren, M. Reyes-Aguirre, M. ´A. G. Ballester,
N. Ayache, Segmentation propagation from deformable atlases for brain
mapping and analysis, Brain Research Journal 1 (4) (2007) 1–18.

57. P.-L. Bazin, D. L. Pham, Homeomorphic brain image segmentation with
topological and statistical atlases, Medical image analysis 12 (5) (2008)
616–625.

58. X. Artaechevarria, A. Munoz-Barrutia, C. Ortiz-de Sol´orzano, Combination
strategies in multi-atlas image segmentation: application to brain mr data,
IEEE transactions on medical imaging 28 (8) (2009) 1266–1277.

59. C. Ciofolo, C. Barillot, Atlas-based segmentation of 3d cerebral structures
with competitive level sets and fuzzy control, Medical image analysis 13 (3)
(2009) 456–470.

60. M. R. Sabuncu, B. T. Yeo, K. Van Leemput, B. Fischl, P. Golland, A genera-
tive model for image segmentation based on label fusion, IEEE transactions
on medical imaging 29 (10) (2010) 1714–1729.

61. B. Patenaude, S. M. Smith, D. N. Kennedy, M. Jenkinson, A bayesian model
of shape and appearance for subcortical brain segmentation, Neuroimage
56 (3) (2011) 907–922.

62. F. Rousseau, P. A. Habas, C. Studholme, A supervised patch-based ap-
proach for human brain labeling, IEEE transactions on medical imaging
30 (10) (2011) 1852–1862.

63. A. J. Asman, F. W. Bryan, S. A. Smith, D. S. Reich, B. A. Landman,
Groupwise multi-atlas segmentation of the spinal cords internal structure,
Medical image analysis 18 (3) (2014) 460–471.

64. J. Wang, C. Vachet, A. Rumple, S. Gouttard, C. Ouziel, E. Perrot, G. Du,
X. Huang, G. Gerig, M. A. Styner, Multi-atlas segmentation of subcortical
brain structures via the autoseg software pipeline, Frontiers in neuroinfor-
matics 8 (2014) 7.

65. S. Bao, A. C. Chung, Multi-scale structured cnn with label consistency
for brain mr image segmentation, Computer Methods in Biomechanics and
Biomedical Engineering: Imaging & Visualization (2016) 1–5.

66. F. Yu, V. Koltun, Multi-scale context aggregation by dilated convolutions,

arXiv preprint arXiv:1511.07122.

33

