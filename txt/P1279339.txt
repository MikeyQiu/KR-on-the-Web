9
1
0
2
 
y
a
M
 
2
 
 
]
L
M

.
t
a
t
s
[
 
 
3
v
1
1
8
8
0
.
2
0
7
1
:
v
i
X
r
a

Published as a conference paper at ICLR 2017

CENTRAL MOMENT DISCREPANCY (CMD)
DOMAIN-INVARIANT REPRESENTATION LEARNING

FOR

Werner Zellinger, Edwin Lughofer & Susanne Saminger-Platz∗
Department of Knowledge-Based Mathematical Systems
Johannes Kepler University Linz, Austria
{werner.zellinger, edwin.lughofer, susanne.saminger-platz}@jku.at

Thomas Grubinger & Thomas Natschl¨ager†
Data Analysis Systems
Software Competence Center Hagenberg, Austria
{thomas.grubinger, thomas.natschlaeger}@scch.at

ABSTRACT

The learning of domain-invariant representations in the context of domain adapta-
tion with neural networks is considered. We propose a new regularization method
that minimizes the discrepancy between domain-speciﬁc latent feature represen-
tations directly in the hidden activation space. Although some standard distri-
bution matching approaches exist that can be interpreted as the matching of
weighted sums of moments, e.g. Maximum Mean Discrepancy, an explicit order-
wise matching of higher order moments has not been considered before. We pro-
pose to match the higher order central moments of probability distributions by
means of order-wise moment differences. Our model does not require computa-
tionally expensive distance and kernel matrix computations. We utilize the equiv-
alent representation of probability distributions by moment sequences to deﬁne
a new distance function, called Central Moment Discrepancy (CMD). We prove
that CMD is a metric on the set of probability distributions on a compact inter-
val. We further prove that convergence of probability distributions on compact
intervals w. r. t. the new metric implies convergence in distribution of the respec-
tive random variables. We test our approach on two different benchmark data sets
for object recognition (Ofﬁce) and sentiment analysis of product reviews (Ama-
zon reviews). CMD achieves a new state-of-the-art performance on most domain
adaptation tasks of Ofﬁce and outperforms networks trained with Maximum Mean
Discrepancy, Variational Fair Autoencoders and Domain Adversarial Neural Net-
works on Amazon reviews. In addition, a post-hoc parameter sensitivity analysis
shows that the new approach is stable w. r. t. parameter changes in a certain inter-
val. The source code of the experiments is publicly available1.

1

INTRODUCTION

The collection and preprocessing of large amounts of data for new domains is often time consuming
and expensive. This in turn limits the application of state-of-the-art methods like deep neural net-
work architectures, that require large amounts of data. However, often data from related domains can
be used to improve the prediction model in the new domain. This paper addresses the particularly
important and challenging domain-invariant representation learning task of unsupervised domain
adaptation (Glorot et al., 2011; Li et al., 2014; Pan et al., 2011; Ganin et al., 2016). In unsupervised
domain adaptation, the training data consists of labeled data from the source domain(s) and unla-
beled data from the target domain. In practice, this setting is quite common, as in many applications

∗http://www.ﬂll.jku.at
†http://www.scch.at
1https://github.com/wzell/cmd

1

Published as a conference paper at ICLR 2017

the collection of input data is cheap, but the collection of labels is expensive. Typical examples
include image analysis tasks and sentiment analysis, where labels have to be collected manually.

Recent research shows that domain adaptation approaches work particularly well with (deep) neu-
ral networks, which produce outstanding results on some domain adaptation data sets (Ganin et al.,
2016; Sun & Saenko, 2016; Li et al., 2016; Aljundi et al., 2015; Long et al., 2015; Li et al., 2015;
Zhuang et al., 2015; Louizos et al., 2016). The most successful methods have in common that
they encourage similarity between the latent network representations w. r. t. the different domains.
This similarity is often enforced by minimizing a certain distance between the networks’ domain-
speciﬁc hidden activations. Three outstanding approaches for the choice of the distance function are
the Proxy A-distance (Ben-David et al., 2010), the Kullback-Leibler (KL) divergence Kullback &
Leibler (1951), applied to the mean of the activations (Zhuang et al., 2015), and the Maximum Mean
Discrepancy (Gretton et al., 2006, MMD).

Two of them, the MMD and the KL-divergence approach, can be viewed as the matching of statis-
tical moments. The KL-divergence approach is based on mean (ﬁrst raw moment) matching. Using
the Taylor expansion of the Gaussian kernel, most MMD-based approaches can be viewed as mini-
mizing a certain distance between weighted sums of all raw moments (Li et al., 2015).

The interpretation of the KL-divergence approaches and MMD-based approaches as moment match-
ing procedures motivate us to match the higher order moments of the domain-speciﬁc activation dis-
tributions directly in the hidden activation space. The matching of the higher order moments is per-
formed explicitly for each moment order and each hidden coordinate. Compared to KL-divergence-
based approaches, which only match the ﬁrst moment, our approach also matches higher order mo-
ments. In comparison to MMD-based approaches, our method explicitly matches the moments for
each order, and it does not require any computationally expensive distance- and kernel matrix com-
putations.

The proposed distribution matching method induces a metric between probability distributions. This
is possible since distributions on compact intervals have an equivalent representation by means of
their moment sequences. We utilize central moments due to their translation invariance and natural
geometric interpretation. We call the new metric Central Moment Discrepancy (CMD).

The contributions of this paper are as follows:

• We propose to match the domain-speciﬁc hidden representations by explicitly minimiz-
ing differences of higher order central moments for each moment order. We utilize the
equivalent representation of probability distributions by moment sequences to deﬁne a new
distance function, which we call Central Moment Discrepancy (CMD).

• Probability theoretic analysis is used to prove that CMD is a metric on the set of probability

distributions on a compact interval.

• We additionally prove that convergence of probability distributions on compact intervals
w. r. t. to the new metric implies convergence in distribution of the respective random vari-
ables. This means that minimizing the CMD metric between probability distributions leads
to convergence of the cumulative distribution functions of the random variables.

• In contrast to MMD-based approaches our method does not require computationally ex-

pensive kernel matrix computations.

• We achieve a new state-of-the-art performance on most domain adaptation tasks of Ofﬁce
and outperform networks trained with MMD, variational fair autoencoders and domain
adversarial neural networks on Amazon reviews.

• A parameter sensitivity analysis shows that CMD is insensitive to parameter changes within
a certain interval. Consequently, no additional hyper-parameter search has to be performed.

2 HIDDEN ACTIVATION MATCHING

We consider the unsupervised domain adaptation setting (Glorot et al., 2011; Li et al., 2014; Pan
et al., 2011; Ganin et al., 2016) with an input space X and a label space Y. Two distributions
over X × Y are given: the labeled source domain DS and the unlabeled target domain DT . Two
i.i.d.∼ (DS)n and
corresponding samples are given: the source sample S = (XS, YS) = {(xi, yi)}n

i=1

2

Published as a conference paper at ICLR 2017

Figure 1: Schematic sketch of a three layer neural network trained with backpropagation based on
objective (2). ∇θ refers to the gradient w. r. t. θ.

the target sample T = XT = {xi}m
i=1
setting is to build a classiﬁer f : X → Y with a low target risk RT (f ) =

i.i.d.∼ (DT )m. The goal of the unsupervised domain adaptation
(f (x) (cid:54)= y),

Pr
(x,y)∼DT

while no information about the labels in DT is given.

We focus our studies on neural network classiﬁers fθ : X → Y with parameters θ ∈ Θ, the input
space X = RI with input dimension I, and the label space Y = [0, 1]|C| with the cardinality
|C| of the set of classes C. We further assume a network output fθ(x) ∈ [0, 1]|C| of an example
x ∈ RI to be normalized by the softmax-function σ : R|C| → [0, 1]|C| with σ(z)j =
for
z = {z1, . . . , z|C|}. We focus on bounded activation functions gH : R → [a, b]N for the hidden layer
H with N hidden nodes, e.g. the hyperbolic tangent or the sigmoid function. Unbounded activation
functions, e.g. rectiﬁed linear units or exponential linear units, can be used if the output is clipped
or normalized to be bounded. Using the loss function l : Θ × X × Y → R, e.g. cross-entropy
l(θ, x, y) = − (cid:80)
i∈C yi log(fθ(x)i), and the sample set (X, Y ) ⊂ RI × [0, 1]|C|, we deﬁne the
objective function as

ezj
(cid:80)|C|
k=1 ezk

min
θ∈Θ

E(l(θ, X, Y ))

(1)

where E denotes the empirical expectation, i.e. E(l(θ, X, Y )) =
Let us denote the source hidden activations by AH (θ, XS) = gH (θT
the target hidden activations by AH (θ, XT ) = gH (θT
H with N hidden nodes and parameter θH , and the hidden layer H (cid:48) before H.

1
(x,y)∈(X,Y ) l(θ, x, y).
|(X,Y )|
H AH (cid:48)(θ, XS)) ⊂ [a, b]N and
H AH (cid:48)(θ, XT )) ⊂ [a, b]N for the hidden layer

(cid:80)

One fundamental assumption of most unsupervised domain adaptation networks is that the source
risk RS(f ) is a good indicator for the target risk RT (f ), when the domain-speciﬁc latent space
representations are similar (Ganin et al., 2016). This similarity can be enforced by matching the
distributions of the hidden activations AH (θ, XS) and AH (θ, XT ) of higher layers H. Recent state-
of-the-art approaches deﬁne a domain regularizer d : ([a, b]N )n × ([a, b]N )m → [0, ∞), which
gives a measure for the domain discrepancy in the activation space [a, b]N . The domain regularizer
is added to the objective by means of an additional weighting parameter λ.

min
θ∈Θ

E(l(θ, XS, YS)) + λ · d(AH (θ, XS), AH (θ, XT ))

(2)

Fig. 1 shows a sketch of the described architecture and ﬁg. 2 shows the hidden activations of a simple
neural network optimized by eq. (1) (left) and eq. (2) (right). It can be seen that similar activation
distributions are obtained when being optimized on the basis of the domain regularized objective.

3 RELATED WORK

Recently, several measures d for objective (2) have been proposed. One approach is the Proxy A-
distance, given by ˆdA = 2(1 − 2(cid:15)), where (cid:15) is the generalization error on the problem of discrimi-
nating between source and target samples (Ben-David et al., 2010). Ganin et al. (2016) compute the

3

Published as a conference paper at ICLR 2017

Figure 2: Hidden activation distributions for a simple one-layer classiﬁcation network with sigmoid
activation functions and ﬁve hidden nodes trained with the standard objective (1) (left) and objec-
tive (2) that includes the domain discrepancy minimization (right). The approach of this paper was
used as domain regularizer. Dark gray: activations of the source domain, light gray: activations of
the target domain.

value (cid:15) with a neural network classiﬁer that is simultaneously trained with the original network by
means of a gradient reversal layer. They call their approach domain-adversarial neural networks.
Unfortunately, a new classiﬁer has to be trained in this approach including the need of new parame-
ters, additional computation times and validation procedures.

Another approach is to make use of the MMD (Gretton et al., 2006) as domain regularizer.

(cid:80)

1
|X|·|Y |

MMD(X, Y )2 = E(K(X, X)) − 2E(K(X, Y )) + E(K(Y, Y ))

(3)
where E(K(X, Y )) =
k∈K(X,Y ) k is the empirical expectation of the kernel products k
between all examples in X and Y stored by the kernel matrix K(X, Y ). A suitable choice of the
kernel seems to be the Gaussian kernel e−β(cid:107)x−y(cid:107)2
(Louizos et al., 2016; Li et al., 2015; Tzeng et al.,
2014). This approach has two major drawbacks: (a) the need of tuning an additional kernel parameter
β, and (b) the need of the kernel matrix computation K(X, Y ) (computational complexity O(n2 +
nm+m2)), which becomes inefﬁcient (resource-intensive) in case of large data sets. Concerning (a),
the tuning of β is sophisticated since no target samples are available in the domain adaptation setting.
Suitable tuning procedures are transfer learning speciﬁc cross-validation methods (Zhong et al.,
2010). More general methods that don’t utilize source labels include heuristics that are based on
kernel space properties (Sriperumbudur et al., 2009; Gretton et al., 2012), combinations of multiple
kernels (Li et al., 2015), and kernel choices that maximize the MMD test power (Sutherland et al.,
2016). The drawback (b) of the kernel matrix computation can be handled by approximating the
MMD (Zhao & Meng, 2015), or by using linear time estimators (Gretton et al., 2012). In this work
we focus on the quadratic-time MMD with the Gaussian kernel (Gretton et al., 2012; Tzeng et al.,
2014) and transfer learning speciﬁc cross-validation for parameter tuning (Zhong et al., 2010; Ganin
et al., 2016).

The two approaches MMD and the Proxy A-distance have in common that they do not minimize
the domain discrepancy explicitly in the hidden activation space. In contrast, the authors in Zhuang
et al. (2015) do so by minimizing a modiﬁed version of the Kullback-Leibler divergence of the mean
activations (MKL). That is, for samples X, Y ⊂ RN ,

MKL(X, Y ) =

E(X)i log

+ E(Y )i log

(4)

E(X)i
E(Y )i

E(Y )i
E(X)i

N
(cid:88)

i=1

with E(X)i being the ith coordinate of the empirical expectation E(X) = 1
x∈X x. This ap-
|X|
proach is fast to compute and has an explicit interpretation in the activation space. Our empirical ob-
servations (section Experiments) show that minimizing the distance between only the ﬁrst moment
(mean) of the activation distributions can be improved by also minimizing the distance between
higher order moments.

(cid:80)

As noted in the introduction, our approach is motivated by the fact that the MMD and the KL-
divergence approach can be seen as the matching of statistical moments of the hidden activations
AH (θ, XS) and AH (θ, XT ). In particular, MMD-based approaches that use the Gaussian kernel are
equivalent to minimizing a certain distance between weighted sums of all moments of the hidden
activation distributions (Li et al., 2015).

We propose to minimize differences of higher order central moments of the activations AH (θ, XS)
and AH (θ, XT ). The difference minimization is performed explicitly for each moment order. Our

4

Published as a conference paper at ICLR 2017

approach utilizes the equivalent representation of probability distributions in terms of its moment
series. We further utilize central moments due to their translation invariance and natural geometric
interpretation. Our approach contrasts with other moment-based approaches, as they either match
only the ﬁrst moment (MKL) or they don’t explicitly match the moments for each order (MMD). As
a result, our approach improves over MMD-based approaches in terms of computational complexity
with O (N (n + m)) for CMD and O (cid:0)N (n2 + nm + m2)(cid:1) for MMD. In contrast to MKL-based
approaches more accurate distribution matching characteristics are obtained. In addition, CMD
achieves a new state-of-the-art performance on most domain adaptation tasks of Ofﬁce and out-
performs networks trained with MMD, variational fair autoencoders and domain adversarial neural
networks on Amazon reviews.

4 CENTRAL MOMENT DISCREPANCY (CMD)

In this section we ﬁrst propose a new distance function CMD on probability distributions on
compact intervals. The deﬁnition is extended by two theorems that identify CMD as a metric
and analyze a convergence property. The ﬁnal domain regularizer is then deﬁned as an empirical
estimate of CMD. The proofs of the theorems are given in the appendix.

Deﬁnition 1 (CMD metric). Let X = (X1, . . . , Xn) and Y = (Y1, . . . , Yn) be bounded random
vectors independent and identically distributed from two probability distributions p and q on the
compact interval [a, b]N . The central moment discrepancy metric (CMD) is deﬁned by

CMD(p, q) =

(cid:107)E(X) − E(Y )(cid:107)2 +

1
|b − a|

1

∞
(cid:88)

k=2

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2

(5)

where E(X) is the expectation of X, and

ck(X) =

(cid:18)

E

(cid:16) N
(cid:89)

(Xi − E(Xi))ri (cid:17)(cid:19)

i=1

r1+...+rN =k
r1,...,rn≥0

is the central moment vector of order k.

The ﬁrst order central moments are zero, the second order central moments are related to vari-
ance, and the third and fourth order central moments are related to the skewness and the kurto-
sis of probability distributions. It is easy to see that CMD(p, q) ≥ 0, CMD(p, q) = CMD(q, p),
CMD(p, q) ≤ CMD(p, r) + CMD(r, q) and p = q ⇒ CMD(p, q) = 0. The following theorem
shows the remaining property for CMD to be a metric on the set of probability distributions on a
compact interval.

Theorem 1. Let p and q be two probability distributions on a compact interval and let CMD be
deﬁned as in (5), then

CMD(p, q) = 0 ⇒ p = q

Our approach is to minimize the discrepancy between the domain-speciﬁc hidden activation distri-
butions by minimizing the CMD. Thus, in the optimization procedure, we increasingly expect to see
the domain-speciﬁc cumulative distribution functions approach each other. This characteristic can
be expressed by the concept of convergence in distribution and it is shown in the following theorem.
Theorem 2. Let pn and p be probability distributions on a compact interval and let CMD be deﬁned
as in (5), then

where d−→ denotes convergence in distribution.

CMD(pn, p) → 0 ⇒ pn

d−→ p

We deﬁne the ﬁnal central moment discrepancy regularizer as an empirical estimate of the CMD
metric. Only the central moments that correspond to the marginal distributions are computed. The
number of central moments is limited by a new parameter K and the expectation is sampled by the
empirical expectation.

5

Published as a conference paper at ICLR 2017

Deﬁnition 2 (CMD regularizer). Let X and Y be bounded random samples with respective prob-
ability distributions p and q on the interval [a, b]N . The central moment discrepancy regularizer
CMDK is deﬁned as an empirical estimate of the CMD metric, by

CMDK(X, Y ) =

(cid:107)E(X) − E(Y )(cid:107)2 +

|b − a|k (cid:107)Ck(X) − Ck(Y )(cid:107)2

(6)

1
|b − a|

1

K
(cid:88)

k=2

(cid:80)

where E(X) = 1
x∈X x is the empirical expectation vector computed on the sample X and
|X|
Ck(X) = E((x − E(X))k) is the vector of all kth order sample central moments of the coordinates
of X.

This deﬁnition includes three approximation steps: (a) the computation of only marginal central mo-
ments, (b) the bound on the order of central moment terms via parameter K, and (c) the sampling of
the probability distributions by the replacement of the expected value with the empirical expectation.

Applying approximation (a) and assuming independent marginal distributions, a zero CMD dis-
tance value still implies equal joint distributions (thm. 1) but convergence in distribution (thm. 2)
applies only to the marginals. In the case of dependent marginal distributions, zero CMD dis-
tance implies equal marginals and convergence in CMD implies convergence in distribution of the
marginals. However, the matching properties for the joint distributions are not obtained with depen-
dent marginals and approximation (a). The computational complexity is reduced to be linear w. r. t.
the number of samples.

Concerning (b), proposition 1 shows that the marginal distribution speciﬁc CMD terms have an
upper bound that is strictly decreasing with increasing moment order. This bound is convergent to
zero. That is, higher CMD terms can contribute less to the overall distance value. This observation
is experimentally strengthened in subsection Parameter Sensitivity.
Proposition 1. Let X and Y be bounded random vectors with respective probability distributions p
and q on the compact interval [a, b]N . Then

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

(cid:32)

√

N

1
k + 1

(cid:18) k

(cid:19)k

k + 1

+

1
21+k

(cid:33)

(7)

where ck(X) = E((X − E(X))k) is the vector of all kth order sample central moments of the
marginal distributions of p.

Concerning approximation (c), the joint application of the weak law of large numbers (Billings-
ley, 2008) with the continuous mapping theorem (Billingsley, 2013) proves that this approximation
creates a consistent estimate.

We would like to underline that the training of neural networks with eq. (2) and the CMD regularizer
in eq. (6) can be easily realized by gradient descent algorithms. The gradients of the CMD regularizer
are simple aggregations of derivatives of the standard functions gH , xk and (cid:107).(cid:107)2.

5 EXPERIMENTS

Our experimental evaluations are based on two benchmark datasets for domain adaptation, Amazon
reviews and Ofﬁce, described in subsection Datasets. The experimental setup is discussed in subsec-
tion Experimental Setup and our classiﬁcation accuracy results are discussed in subsection Results.
Subsection Parameter Sensitivity analysis the accuracy sensitivity w. r. t. parameter changes of K
for CMD and β for MMD.

5.1 DATASETS

Amazon reviews: For our ﬁrst experiment we use the Amazon reviews data set with the same pre-
processing as used by Chen et al. (2012); Ganin et al. (2016); Louizos et al. (2016). The data set
contains product reviews of four different product categories: books, DVDs, kitchen appliances and
electronics. Reviews are encoded in 5000 dimensional feature vectors of bag-of-words unigrams and
bigrams with binary labels: 0 if the product is ranked by 1 − 3 stars and 1 if the product is ranked

6

Published as a conference paper at ICLR 2017

by 4 or 5 stars. From the four categories we obtain twelve domain adaptation tasks (each category
serves once as source category and once as target category).

Ofﬁce: The second experiment is based on the computer vision classiﬁcation data set from Saenko
et al. (2010) with images from three distinct domains: amazon (A), webcam (W) and dslr (D).
This data set is a de facto standard for domain adaptation algorithms in computer vision. Amazon,
the largest domain, is a composition of 2817 images and its corresponding 31 classes. Following
previous works we assess the performance of our method across all six possible transfer tasks.

5.2 EXPERIMENTAL SETUP

Amazon Reviews:

For the Amazon reviews experiment, we use the same data splits as previous works for every task.
Thus we have 2000 labeled source examples and 2000 unlabeled target examples for training, and
between 3000 and 6000 examples for testing.

We use a similar architecture as Ganin et al. (2016) with one dense hidden layer with 50 hidden
nodes, sigmoid activation functions and softmax output function. Three neural networks are trained
by means of eq. (2): (a) a base model without domain regularization (λ = 0), (b) with the MMD
as domain regularizer and (c) with CMD as domain regularizer. These models are additionally com-
pared with the state-of-the-art models VFAE (Louizos et al., 2016) and DANN (Ganin et al., 2016).
The models (a),(b) and (c) are trained with similar setup as in Louizos et al. (2016) and Ganin et al.
(2016).

For the CMD regularizer, the λ parameter of eq. (2) is set to 1, i.e. the weighting parameter λ is ne-
glected. The parameter K is heuristically set to ﬁve, as the ﬁrst ﬁve moments capture rich geometric
information about the shape of a distribution and K = 5 is small enough to be computationally
efﬁcient. However, the experiments in subsection Parameter Sensitivity show that similar results are
obtained for K ≥ 3.

For the MMD regularizer we use the Gaussian kernel with parameter β. We performed a hyper-
parameter search for β and λ, which has to be performed in an unsupervised way (no labels in the
target domain). We use a variant of the reverse cross-validation approach proposed by Zhong et al.
(2010), in which we initialize the model weights of the reverse classiﬁer by the weights of the ﬁrst
learned classiﬁer (see Ganin et al. (2016) for details). Thereby, the parameter λ is tuned on 10 values
between 0.1 and 500 on a logarithmic scale. The parameter β is tuned on 10 values between 0.01
and 10 on a logarithmic scale. Without this parameter search, no competitive prediction accuracy
results could be obtained.

Since we have to deal with sparse data, we rely on the Adagrad optimizer (Duchi et al., 2011). For
all evaluations, the default parametrization is used as implemented in Keras (Chollet, 2015). All
evaluations are repeated 10 times based on different shufﬂes of the data, and the mean accuracies
and standard deviations are analyzed.

Ofﬁce: Since the ofﬁce dataset is rather small with only 2817 images in its largest domain, we use the
latent representations of the convolution neural network VGG16 of Simonyan & Zisserman (2014).
In particular we train a classiﬁer with one hidden layer, 256 hidden nodes and sigmoid activation
function on top of the output of the ﬁrst dense layer in the network. We again train one base model
without domain regularization and a CMD regularized version with K = 5 and λ = 1.

We follow the standard training protocol for this data set and use all available source and target
examples during training. Using this ”fully-transductive” protocol, we compare our method with
other state-of-the-art approaches including DLID (Chopra et al., 2013), DDC (Tzeng et al., 2014),
DAN (Long et al., 2015), Deep CORAL (Sun & Saenko, 2016), and DANN (Ganin et al., 2016),
based on ﬁne-tuning of the baseline model AlexNet (Krizhevsky et al., 2012). We further compare
our method to LSSA (Aljundi et al., 2015), CORAL (Sun et al., 2016), and AdaBN (Li et al., 2016),
based on the ﬁne-tuning of InceptionBN (Ioffe & Szegedy, 2015).

As an alternative to Adagrad for non-sparse data, we use the Adadelta optimizer from Zeiler (2012).
Again, the default parametrization from Keras is used. We handle unbalances between source and
target sample by randomly down-sampling (up-sampling) the source sample. In addition, we ensure
a sub-sampled source batch that is balanced w. r. t. the class labels.

7

Published as a conference paper at ICLR 2017

Since all hyper-parameters are set a-priori, no hyper-parameter search has to be performed.

All experiments are repeated 10 times with randomly shufﬂed data sets and random initializations.

5.3 RESULTS

Amazon Reviews: Table 1 shows the classiﬁcation accuracies of four models: The Source Only
model is the non domain regularized neural network trained with objective (1), and serves as a
base model for the domain adaptation improvements. The models MMD and CMD are trained with
the same architecture and objective (2) with d as the domain regularizer MMD and CMD, respec-
tively. VFAE refers to the Variational Fair Autoencoder of Louizos et al. (2016), including a slightly
modiﬁed version of the MMD regularizer for faster computations, and DANN refers to the domain-
adversarial neural networks model of Ganin et al. (2016). The last two columns are taken directly
from these publications.

As one can observe in table 1, our accuracy of the CMD-based model is the highest in 9 out of 12
domain adaptation tasks, whereas on the remaining 3 it is the second best method. However, the
difference in accuracy compared to the best method is smaller than the standard deviation over all
data shufﬂes.

Table 1: Prediction accuracy ± standard deviation on the Amazon reviews dataset. The last two
columns are taken directly from Louizos et al. (2016) and Ganin et al. (2016).

Source→Target
books→dvd
books→electronics
books→kitchen
dvd→books
dvd→electronics
dvd→kitchen
electronics→books
electronics→dvd
electronics→kitchen
kitchen→books
kitchen→dvd
kitchen→electronics
average

Source Only
.787 ± .004
.714 ± .009
.745 ± .006
.746 ± .019
.724 ± .011
.765 ± .012
.711 ± .006
.719 ± .009
.844 ± .005
.699 ± .014
.734 ± .011
.833 ± .004
.752 ± .009

MMD
.796 ± .008
.758 ± .018
.787 ± .019
.780 ± .018
.766 ± .025
.796 ± .019
.733 ± .017
.748 ± .013
.857 ± .007
.740 ± .017
.763 ± .011
.844 ± .007
.781 ± .015

CMD
.805 ± .007
.787 ± .007
.813 ± .008
.795 ± .005
.797 ± .010
.830 ± .012
.744 ± .008
.763 ± .006
.860 ± .004
.756 ± .006
.775 ± .005
.854 ± .003
.798 ± .007

VFAE DANN
.799
.792
.816
.755
.786
.822
.727
.765
.850
.720
.733
.838
.784

.784
.733
.779
.723
.754
.783
.713
.738
.854
.709
.740
.843
.763

Ofﬁce: Table 2 shows the classiﬁcation accuracy of different models trained on the Ofﬁce dataset.
Note that some of the methods (LSSA, CORAL and AdaBN) are evaluated based on the Incep-
tionBN model, which shows higher accuracy than the base model (VGG16) of our method in most
tasks. However, our method outperforms related state-of-the-art methods on all except two tasks, on
which it performs similar. We improve the previous state-of-the-art method AdaBN (Li et al., 2016)
by more than 3.2% in average accuracy.

5.4 PARAMETER SENSITIVITY

The ﬁrst sensitivity experiment aims at providing evidence regarding the accuracy sensitivity of the
CMD regularizer w. r. t. parameter changes of K. That is, the contribution of higher terms in the
CMD regularizer are analyzed. The claim is that the accuracy of CMD-based networks does not
depend strongly on the choice of K in a range around its default value 5.

In ﬁg. 3 on the upper left we analyze the classiﬁcation accuracy of a CMD-based network trained
on all tasks of the Amazon reviews experiment. We perform a grid search for the two regularization
hyper-parameters λ and K. We empirically choose a representative stable region for each parameter,
[0.3, 3] for λ and {1, . . . , 7} for K. Since we want to analyze the sensitivity w. r. t. K, we averaged
over the λ-dimension, resulting in one accuracy value per K for each of the 12 tasks. Each accuracy
is transformed into an accuracy ratio value by dividing it with the accuracy of K = 5. Thus, for
each K and task we get one value representing the ratio between the obtained accuracy (for this K
and task) and the accuracy of K = 5. The results are shown in ﬁg. 3 (upper left). The accuracy

8

Published as a conference paper at ICLR 2017

Table 2: Prediction accuracy ± standard deviation on the Ofﬁce dataset. The ﬁrst 10 rows are taken
directly from the papers of Ganin et al. (2016) and Li et al. (2016). The models DLID –DANN are
based on the AlexNet model, LSSA –AdaBN are based on the InceptionBN model, and our method
(CMD) is based on the VGG16 model.

Method
AlexNet
DLID
DDC
Deep CORAL
DAN
DANN
InceptionBN
LSSA
CORAL
AdaBN
VGG16
CMD

A→W
.616
.519
.618
.664
.685
.730
.703
.677
.709
.742
.676 ± .006
.770 ± .006

D→W
.954
.782
.950
.957
.960
.964
.943
.961
.957
.957
.961 ± .003
.963 ± .004

W→D
.990
.899
.985
.992
.990
.992
1.00
.984
.998
.998
.992 ± .002
.992 ± .002

A→D
.638
-
.644
.668
.670
-
.705
.713
.719
.731
.739 ± .009
.796 ± .006

D→A
.511
-
.521
.528
.540
-
.601
.578
.590
.598
.582 ± .005
.638 ± .007

W→A
.498
-
.522
.515
.531
-
.579
.578
.602
.574
.578 ± .004
.633 ± .006

average
.701
-
.707
.721
.729
-
.755
.749
.763
.767
.755
.799

ratios between K = 5 and K ∈ {3, 4, 6, 7} are lower than 0.5%, which underpins the claim that the
accuracy of CMD-based networks does not depend strongly on the choice of K in a range around
its default value 5. For K = 1 and K = 2 higher ratio values are obtained. In addition, for these
two values many tasks show worse accuracy than obtained by K ∈ {3, 4, 5, 6, 7}. From this we
additionally conclude that higher values of K are preferable to K = 1 and K = 2.

The same experimental procedure is performed with MMD regularization wighted by λ ∈ [5, 45]
and Gaussian kernel parameter β ∈ [0.3, 1.7]. We calculate the ratio values w. r. t. the accuracy
of β = 1.2, since this value of β shows the highest mean accuracy of all tasks. Fig. 3 (upper right)
shows the results. It can be seen that the accuracy of the MMD network is more sensitive to parameter
changes than the CMD regularized version. Note that the problem of ﬁnding the best settings for the
parameter β of the Gaussian kernel is a well known problem (Hsu et al., 2003).

The default number of hidden nodes in all our experiments is 256 because of the high classiﬁcation
accuracy of the networks without domain regularization (Source Only) on the source domains. The
question arises if the accuracy of the CMD is lower for higher numbers of hidden nodes. That
is, if the accuracy ratio between the accuracy, of the CMD regularized networks compared to the
accuracy of the Source Only models, decreases with increasing hidden activation dimension. In order
to answer this question we calculate these ratio values for each task of the Amazon reviews data set
for different number of hidden nodes (128, 256, 384, . . . , 1664). For higher numbers of hidden nodes
our Source Only models don’t converge with the optimization settings under consideration. For the
parameters λ and K we use our default setting λ = 1 and K = 5. Fig. 3 on the lower left shows
the ratio values (vertical axis) for every number of hidden nodes (horizontal axis) and every task
(colored lines). It can be seen that the accuracy improvement of the CMD domain regularizer varies
between 4% and 6%. However, no accuracy ratio decrease can be observed.

Please note that we use a default setting for K and λ. Thus, ﬁg. 3 shows that our default setting
(λ = 1, K = 5) can be used independently of the number of hidden nodes. This is an additional
result.

The same procedure is performed with the MMD weighted by parameter λ = 9 and β = 1.2 as
these values show the highest classiﬁcation accuracy for 256 hidden nodes. Fig. 3 on the lower
right shows that the accuracy improvement using the MMD decreases with increasing number of
hidden nodes for this parameter setting. That is, for accurate performance of the MMD, additional
parameter tuning procedures for λ and β need to be performed. Note that the problem of ﬁnding the
best setting for the parameter β of the Gaussian kernel is a well known problem (Hsu et al., 2003).

6 CONCLUSION AND OUTLOOK

In this paper we proposed the central moment discrepancy (CMD) for domain-invariant representa-
tion learning, a distance function between probability distributions. Similar to other state-of-the-art
approaches (MMD, KL-divergence, Proxy A-distance), the CMD function can be used to minimize
the domain discrepancy of latent feature representations. This is achieved by order-wise differences

9

Published as a conference paper at ICLR 2017

Figure 3: Sensitivity of classiﬁcation accuracy w. r. t. different parameters of CMD (left) and MMD
(right) on the Amazon reviews dataset. The horizontal axes show parameter values and the vertical
axes show accuracy ratio values. Each line represents accuracy ratio values for one speciﬁc task. The
ratio values are computed w. r. t. the default accuracy for CMD (upper left), w. r. t. the best obtainable
accuracy for MMD (upper right) and w. r. t. the non domain regularized network accuracies (lower
left and lower right).

of central moments. By using probability theoretic analysis, we proved that CMD is a metric and that
convergence in CMD implies convergence in distribution for probability distributions on compact
intervals. Our method yields state-of-the-art performance on most tasks of the Ofﬁce benchmark data
set and outperforms Gaussian kernel based MMD, VFAE and DANN on most tasks of the Amazon
reviews benchmark data set. These results are achieved with the default parameter setting of K = 5.
In addition, we experimentally underpinned the claim that the classiﬁcation accuracy is not sensitive
to the particular choice of K for K ≥ 3. Therefore, no computationally expensive hyper-parameter
selection is required.

In our experimental analysis we compared our approach to different other state-of-the-art distribu-
tion matching methods like the Maximum Mean Discrepancy (MMD) based on the Gaussian kernel
using a quadratic time estimate. In the future we want to extend our experimental analysis to other
MMD approaches including other kernels, parameter selection procedures and linear time estima-
tors. In addition, we plan to use the CMD for training generative models and to further investigate
the approximation quality of the proposed empirical estimate.

A THEOREM PROOFS

Theorem 1. Let p and q be two probability distributions on a compact interval and let CMD be
deﬁned as in (5), then

CMD(p, q) = 0 ⇒ p = q

Proof. Let X and Y be two random vectors that have probability distributions p and q, respec-
tively. Let ˆX = X − E(X) and ˆY = Y − E(Y ) be the mean centered random variables. From
CMD(p, q) = 0 it follows that all moments of the bounded random variables ˆX and ˆY are equal.
Therefore, the joint moment generating functions of ˆX and ˆY are equal. Using the property that p

10

Published as a conference paper at ICLR 2017

and q have compact support, we obtain the equality of the joint distribution functions of ˆX and ˆY .
Since E(X) = E(Y ), it follows that X = Y .

Theorem 2. Let pn and p be probability distributions on a compact interval and let CMD be deﬁned
as in (5), then

where d−→ denotes convergence in distribution.

CMD(pn, p) → 0 ⇒ pn

d−→ p

Proof. Let Xn and X be random vectors that have probability distributions pn and p respectively.
Let ˆX = X − E(X) and ˆXn = Xn − E(Xn) be the mean centered random variables. From
CMD(Xn, X) → 0 it follows that the moments of ˆXn converge to the moments of ˆX. Therefore,
the joint moment generating functions of ˆXn converge to the joint moment generating function
of ˆX, which implies convergence in distribution of the mean centered random variables. Using
E(Xn) → E(X) we obtain pn

d−→ p.

Proposition 1. Let X and Y be bounded random vectors with respective probability distributions p
and q on the compact interval [a, b]N . Then

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

(cid:32)

√

N

1
k + 1

(cid:18) k

(cid:19)k

k + 1

+

1
21+k

(cid:33)

(8)

where ck(X) = E((X − E(X))k) is the vector of all kth order sample central moments of the
marginal distributions of p.

Proof. Let X ([a, b]) be the set of all random variables with values in [a, b]. Then it follows that

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 =

ck(X)
ck(Y )
|b − a|k −
|b − a|k
(cid:13)
(cid:13)
ck(X)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
|b − a|k
(cid:13)
(cid:13)2
(cid:32)(cid:18) X − E(X)

+

(cid:13)
(cid:13)
(cid:13)
(cid:13)2
ck(Y )
|b − a|k
(cid:19)k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2

(cid:13)
(cid:13)
(cid:13)
(cid:13)2

|b − a|

(cid:32)(cid:12)
(cid:12)
(cid:12)
(cid:12)

X − E(X)
b − a

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
√

E

E

≤

=

≤

≤ 2

N sup

E

X∈X ([a,b])

(cid:32)(cid:12)
(cid:12)
(cid:12)
(cid:12)

E

+

k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2
(cid:13)
X − E(X)
b − a

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:32)(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

+

E

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:32)(cid:18) Y − E(Y )
|b − a|

(cid:19)k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2

Y − E(Y )
b − a

(cid:12)
(cid:12)
(cid:12)
(cid:12)

k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2

k(cid:33)

The latter term refers to the absolute central moment of order k, for which the smallest upper bound
is known (Egozcue et al., 2012):

1

√
|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

N sup
x∈[0,1]

x(1 − x)k + (1 − x)xk

Egozcue et al. (2012) also give a more explicit bound:

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

(cid:32)

√

N

1
k + 1

(cid:18) k

(cid:19)k

k + 1

+

1
21+k

(cid:33)

ACKNOWLEDGEMENTS

The research reported in this paper has been supported by the Austrian Ministry for Transport, Inno-
vation and Technology, the Federal Ministry of Science, Research and Economy, and the Province
of Upper Austria in the frame of the COMET center SCCH.

We would like to thank Bernhard Moser and Florian Sobieczky for fruitful discussions on metric
spaces.

11

Published as a conference paper at ICLR 2017

REFERENCES

Rahaf Aljundi, R´emi Emonet, Damien Muselet, and Marc Sebban. Landmarks-based kernelized
subspace alignment for unsupervised domain adaptation. In International Conference on Com-
puter Vision and Pattern Recognition, pp. 56–63, 2015.

Shai Ben-David, John Blitzer, Koby Crammer, Alex Kulesza, Fernando Pereira, and Jennifer Wort-
man Vaughan. A theory of learning from different domains. Machine learning, 79(1-2):151–175,
2010.

Patrick Billingsley. Probability and measure. John Wiley & Sons, 2008.

Patrick Billingsley. Convergence of probability measures. John Wiley & Sons, 2013.

Minmin Chen, Zhixiang Xu, Kilian Weinberger, and Fei Sha. Marginalized denoising autoencoders

for domain adaptation. International Conference on Machine Learning, pp. 767–774, 2012.

Franc¸ois Chollet. Keras: Deep learning library for theano and tensorﬂow, 2015.

Sumit Chopra, Suhrid Balakrishnan, and Raghuraman Gopalan. Dlid: Deep learning for domain
International Conference on Machine Learning

adaptation by interpolating between domains.
Workshop on Challenges in Representation Learning, 2013.

John Duchi, Elad Hazan, and Yoram Singer. Adaptive subgradient methods for online learning and

stochastic optimization. Journal of Machine Learning Research, 12(Jul):2121–2159, 2011.

Martin Egozcue, Luis Fuentes Garc´ıa, Wing Keung Wong, and Ricardas Zitikis. The smallest upper
bound for the pth absolute central moment of a class of random variables. The Mathematical
Scientist, 2012.

Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Franc¸ois Lavi-
olette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural networks.
Journal of Machine Learning Research, 17(Jan):1–35, 2016.

Xavier Glorot, Antoine Bordes, and Yoshua Bengio. Domain adaptation for large-scale sentiment
classiﬁcation: A deep learning approach. In International Conference on Machine Learning, pp.
513–520, 2011.

Arthur Gretton, Karsten M Borgwardt, Malte Rasch, Bernhard Sch¨olkopf, and Alex J Smola. A ker-
nel method for the two-sample-problem. In Advances in neural information processing systems,
pp. 513–520, 2006.

Arthur Gretton, Karsten M Borgwardt, Malte J Rasch, Bernhard Sch¨olkopf, and Alexander Smola.

A kernel two-sample test. Journal of Machine Learning Research, 13(Mar):723–773, 2012.

Chih-Wei Hsu, Chih-Chung Chang, Chih-Jen Lin, et al. A practical guide to support vector classiﬁ-

cation. 2003.

Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating deep network training by
In International Conference on Machine Learning, pp. 448–

reducing internal covariate shift.
456, 2015.

Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classiﬁcation with deep convo-
lutional neural networks. In Advances in neural information processing systems, pp. 1097–1105,
2012.

Solomon Kullback and Richard A Leibler. On information and sufﬁciency. Annals of Mathematical

Statistics, 22(1):79–86, 1951.

Yanghao Li, Naiyan Wang, Jianping Shi, Jiaying Liu, and Xiaodi Hou. Revisiting batch normaliza-

tion for practical domain adaptation. arXiv preprint arXiv:1603.04779, 2016.

Yujia Li, Kevin Swersky, and Richard Zemel. Unsupervised domain adaptation by domain invari-
ant projection. In Neural Information Processing Systems Workshop on Transfer and Multitask
Learning, 2014.

12

Published as a conference paper at ICLR 2017

Yujia Li, Kevin Swersky, and Richard Zemel. Generative moment matching networks. In Interna-

tional Conference on Machine Learning, pp. 1718–1727, 2015.

Mingsheng Long, Yue Cao, Jianmin Wang, and Michael Jordan. Learning transferable features with
deep adaptation networks. In International Conference on Machine Learning, pp. 97–105, 2015.

Christos Louizos, Kevin Swersky, Yujia Li, Max Welling, and Richard Zemel. The variational fair

auto encoder. International Conference on Learning Representations, 2016.

Sinno Jialin Pan, Ivor W Tsang, James T Kwok, and Qiang Yang. Domain adaptation via transfer

component analysis. IEEE Transactions on Neural Networks, 22(2):199–210, 2011.

Kate Saenko, Brian Kulis, Mario Fritz, and Trevor Darrell. Adapting visual category models to new

domains. In European Conference on Computer Vision, pp. 213–226. Springer, 2010.

Karen Simonyan and Andrew Zisserman. Very deep convolutional networks for large-scale image

recognition. International Conference on Learning Representations, 2014.

Bharath K Sriperumbudur, Kenji Fukumizu, Arthur Gretton, Gert RG Lanckriet, and Bernhard
Sch¨olkopf. Kernel choice and classiﬁability for rkhs embeddings of probability distributions.
In Advances in neural information processing systems, pp. 1750–1758, 2009.

Baochen Sun and Kate Saenko. Deep coral: Correlation alignment for deep domain adaptation.

arXiv preprint arXiv:1607.01719, 2016.

Baochen Sun, Jiashi Feng, and Kate Saenko. Return of frustratingly easy domain adaptation. In

AAAI Conference on Artiﬁcial Intelligence, 2016.

Dougal J Sutherland, Hsiao-Yu Tung, Heiko Strathmann, Soumyajit De, Aaditya Ramdas, Alex
Smola, and Arthur Gretton. Generative models and model criticism via optimized maximum
mean discrepancy. arXiv preprint arXiv:1611.04488, 2016.

Eric Tzeng, Judy Hoffman, Ning Zhang, Kate Saenko, and Trevor Darrell. Deep domain confusion:

Maximizing for domain invariance. arXiv preprint arXiv:1412.3474, 2014.

Matthew D Zeiler. Adadelta: an adaptive learning rate method. arXiv preprint arXiv:1212.5701,

2012.

Ji Zhao and Deyu Meng. Fastmmd: Ensemble of circular discrepancy for efﬁcient two-sample test.

Neural computation, 27(6):1345–1372, 2015.

Erheng Zhong, Wei Fan, Qiang Yang, Olivier Verscheure, and Jiangtao Ren. Cross validation frame-
work to choose amongst models and datasets for transfer learning. In Joint European Conference
on Machine Learning and Knowledge Discovery in Databases, pp. 547–562. Springer, 2010.

Fuzhen Zhuang, Xiaohu Cheng, Ping Luo, Sinno Jialin Pan, and Qing He. Supervised representation
learning: Transfer learning with deep autoencoders. In International Joint Conference on Artiﬁcial
Intelligence, 2015.

13

9
1
0
2
 
y
a
M
 
2
 
 
]
L
M

.
t
a
t
s
[
 
 
3
v
1
1
8
8
0
.
2
0
7
1
:
v
i
X
r
a

Published as a conference paper at ICLR 2017

CENTRAL MOMENT DISCREPANCY (CMD)
DOMAIN-INVARIANT REPRESENTATION LEARNING

FOR

Werner Zellinger, Edwin Lughofer & Susanne Saminger-Platz∗
Department of Knowledge-Based Mathematical Systems
Johannes Kepler University Linz, Austria
{werner.zellinger, edwin.lughofer, susanne.saminger-platz}@jku.at

Thomas Grubinger & Thomas Natschl¨ager†
Data Analysis Systems
Software Competence Center Hagenberg, Austria
{thomas.grubinger, thomas.natschlaeger}@scch.at

ABSTRACT

The learning of domain-invariant representations in the context of domain adapta-
tion with neural networks is considered. We propose a new regularization method
that minimizes the discrepancy between domain-speciﬁc latent feature represen-
tations directly in the hidden activation space. Although some standard distri-
bution matching approaches exist that can be interpreted as the matching of
weighted sums of moments, e.g. Maximum Mean Discrepancy, an explicit order-
wise matching of higher order moments has not been considered before. We pro-
pose to match the higher order central moments of probability distributions by
means of order-wise moment differences. Our model does not require computa-
tionally expensive distance and kernel matrix computations. We utilize the equiv-
alent representation of probability distributions by moment sequences to deﬁne
a new distance function, called Central Moment Discrepancy (CMD). We prove
that CMD is a metric on the set of probability distributions on a compact inter-
val. We further prove that convergence of probability distributions on compact
intervals w. r. t. the new metric implies convergence in distribution of the respec-
tive random variables. We test our approach on two different benchmark data sets
for object recognition (Ofﬁce) and sentiment analysis of product reviews (Ama-
zon reviews). CMD achieves a new state-of-the-art performance on most domain
adaptation tasks of Ofﬁce and outperforms networks trained with Maximum Mean
Discrepancy, Variational Fair Autoencoders and Domain Adversarial Neural Net-
works on Amazon reviews. In addition, a post-hoc parameter sensitivity analysis
shows that the new approach is stable w. r. t. parameter changes in a certain inter-
val. The source code of the experiments is publicly available1.

1

INTRODUCTION

The collection and preprocessing of large amounts of data for new domains is often time consuming
and expensive. This in turn limits the application of state-of-the-art methods like deep neural net-
work architectures, that require large amounts of data. However, often data from related domains can
be used to improve the prediction model in the new domain. This paper addresses the particularly
important and challenging domain-invariant representation learning task of unsupervised domain
adaptation (Glorot et al., 2011; Li et al., 2014; Pan et al., 2011; Ganin et al., 2016). In unsupervised
domain adaptation, the training data consists of labeled data from the source domain(s) and unla-
beled data from the target domain. In practice, this setting is quite common, as in many applications

∗http://www.ﬂll.jku.at
†http://www.scch.at
1https://github.com/wzell/cmd

1

Published as a conference paper at ICLR 2017

the collection of input data is cheap, but the collection of labels is expensive. Typical examples
include image analysis tasks and sentiment analysis, where labels have to be collected manually.

Recent research shows that domain adaptation approaches work particularly well with (deep) neu-
ral networks, which produce outstanding results on some domain adaptation data sets (Ganin et al.,
2016; Sun & Saenko, 2016; Li et al., 2016; Aljundi et al., 2015; Long et al., 2015; Li et al., 2015;
Zhuang et al., 2015; Louizos et al., 2016). The most successful methods have in common that
they encourage similarity between the latent network representations w. r. t. the different domains.
This similarity is often enforced by minimizing a certain distance between the networks’ domain-
speciﬁc hidden activations. Three outstanding approaches for the choice of the distance function are
the Proxy A-distance (Ben-David et al., 2010), the Kullback-Leibler (KL) divergence Kullback &
Leibler (1951), applied to the mean of the activations (Zhuang et al., 2015), and the Maximum Mean
Discrepancy (Gretton et al., 2006, MMD).

Two of them, the MMD and the KL-divergence approach, can be viewed as the matching of statis-
tical moments. The KL-divergence approach is based on mean (ﬁrst raw moment) matching. Using
the Taylor expansion of the Gaussian kernel, most MMD-based approaches can be viewed as mini-
mizing a certain distance between weighted sums of all raw moments (Li et al., 2015).

The interpretation of the KL-divergence approaches and MMD-based approaches as moment match-
ing procedures motivate us to match the higher order moments of the domain-speciﬁc activation dis-
tributions directly in the hidden activation space. The matching of the higher order moments is per-
formed explicitly for each moment order and each hidden coordinate. Compared to KL-divergence-
based approaches, which only match the ﬁrst moment, our approach also matches higher order mo-
ments. In comparison to MMD-based approaches, our method explicitly matches the moments for
each order, and it does not require any computationally expensive distance- and kernel matrix com-
putations.

The proposed distribution matching method induces a metric between probability distributions. This
is possible since distributions on compact intervals have an equivalent representation by means of
their moment sequences. We utilize central moments due to their translation invariance and natural
geometric interpretation. We call the new metric Central Moment Discrepancy (CMD).

The contributions of this paper are as follows:

• We propose to match the domain-speciﬁc hidden representations by explicitly minimiz-
ing differences of higher order central moments for each moment order. We utilize the
equivalent representation of probability distributions by moment sequences to deﬁne a new
distance function, which we call Central Moment Discrepancy (CMD).

• Probability theoretic analysis is used to prove that CMD is a metric on the set of probability

distributions on a compact interval.

• We additionally prove that convergence of probability distributions on compact intervals
w. r. t. to the new metric implies convergence in distribution of the respective random vari-
ables. This means that minimizing the CMD metric between probability distributions leads
to convergence of the cumulative distribution functions of the random variables.

• In contrast to MMD-based approaches our method does not require computationally ex-

pensive kernel matrix computations.

• We achieve a new state-of-the-art performance on most domain adaptation tasks of Ofﬁce
and outperform networks trained with MMD, variational fair autoencoders and domain
adversarial neural networks on Amazon reviews.

• A parameter sensitivity analysis shows that CMD is insensitive to parameter changes within
a certain interval. Consequently, no additional hyper-parameter search has to be performed.

2 HIDDEN ACTIVATION MATCHING

We consider the unsupervised domain adaptation setting (Glorot et al., 2011; Li et al., 2014; Pan
et al., 2011; Ganin et al., 2016) with an input space X and a label space Y. Two distributions
over X × Y are given: the labeled source domain DS and the unlabeled target domain DT . Two
i.i.d.∼ (DS)n and
corresponding samples are given: the source sample S = (XS, YS) = {(xi, yi)}n

i=1

2

Published as a conference paper at ICLR 2017

Figure 1: Schematic sketch of a three layer neural network trained with backpropagation based on
objective (2). ∇θ refers to the gradient w. r. t. θ.

the target sample T = XT = {xi}m
i=1
setting is to build a classiﬁer f : X → Y with a low target risk RT (f ) =

i.i.d.∼ (DT )m. The goal of the unsupervised domain adaptation
(f (x) (cid:54)= y),

Pr
(x,y)∼DT

while no information about the labels in DT is given.

We focus our studies on neural network classiﬁers fθ : X → Y with parameters θ ∈ Θ, the input
space X = RI with input dimension I, and the label space Y = [0, 1]|C| with the cardinality
|C| of the set of classes C. We further assume a network output fθ(x) ∈ [0, 1]|C| of an example
x ∈ RI to be normalized by the softmax-function σ : R|C| → [0, 1]|C| with σ(z)j =
for
z = {z1, . . . , z|C|}. We focus on bounded activation functions gH : R → [a, b]N for the hidden layer
H with N hidden nodes, e.g. the hyperbolic tangent or the sigmoid function. Unbounded activation
functions, e.g. rectiﬁed linear units or exponential linear units, can be used if the output is clipped
or normalized to be bounded. Using the loss function l : Θ × X × Y → R, e.g. cross-entropy
l(θ, x, y) = − (cid:80)
i∈C yi log(fθ(x)i), and the sample set (X, Y ) ⊂ RI × [0, 1]|C|, we deﬁne the
objective function as

ezj
(cid:80)|C|
k=1 ezk

min
θ∈Θ

E(l(θ, X, Y ))

(1)

where E denotes the empirical expectation, i.e. E(l(θ, X, Y )) =
Let us denote the source hidden activations by AH (θ, XS) = gH (θT
the target hidden activations by AH (θ, XT ) = gH (θT
H with N hidden nodes and parameter θH , and the hidden layer H (cid:48) before H.

1
(x,y)∈(X,Y ) l(θ, x, y).
|(X,Y )|
H AH (cid:48)(θ, XS)) ⊂ [a, b]N and
H AH (cid:48)(θ, XT )) ⊂ [a, b]N for the hidden layer

(cid:80)

One fundamental assumption of most unsupervised domain adaptation networks is that the source
risk RS(f ) is a good indicator for the target risk RT (f ), when the domain-speciﬁc latent space
representations are similar (Ganin et al., 2016). This similarity can be enforced by matching the
distributions of the hidden activations AH (θ, XS) and AH (θ, XT ) of higher layers H. Recent state-
of-the-art approaches deﬁne a domain regularizer d : ([a, b]N )n × ([a, b]N )m → [0, ∞), which
gives a measure for the domain discrepancy in the activation space [a, b]N . The domain regularizer
is added to the objective by means of an additional weighting parameter λ.

min
θ∈Θ

E(l(θ, XS, YS)) + λ · d(AH (θ, XS), AH (θ, XT ))

(2)

Fig. 1 shows a sketch of the described architecture and ﬁg. 2 shows the hidden activations of a simple
neural network optimized by eq. (1) (left) and eq. (2) (right). It can be seen that similar activation
distributions are obtained when being optimized on the basis of the domain regularized objective.

3 RELATED WORK

Recently, several measures d for objective (2) have been proposed. One approach is the Proxy A-
distance, given by ˆdA = 2(1 − 2(cid:15)), where (cid:15) is the generalization error on the problem of discrimi-
nating between source and target samples (Ben-David et al., 2010). Ganin et al. (2016) compute the

3

Published as a conference paper at ICLR 2017

Figure 2: Hidden activation distributions for a simple one-layer classiﬁcation network with sigmoid
activation functions and ﬁve hidden nodes trained with the standard objective (1) (left) and objec-
tive (2) that includes the domain discrepancy minimization (right). The approach of this paper was
used as domain regularizer. Dark gray: activations of the source domain, light gray: activations of
the target domain.

value (cid:15) with a neural network classiﬁer that is simultaneously trained with the original network by
means of a gradient reversal layer. They call their approach domain-adversarial neural networks.
Unfortunately, a new classiﬁer has to be trained in this approach including the need of new parame-
ters, additional computation times and validation procedures.

Another approach is to make use of the MMD (Gretton et al., 2006) as domain regularizer.

(cid:80)

1
|X|·|Y |

MMD(X, Y )2 = E(K(X, X)) − 2E(K(X, Y )) + E(K(Y, Y ))

(3)
where E(K(X, Y )) =
k∈K(X,Y ) k is the empirical expectation of the kernel products k
between all examples in X and Y stored by the kernel matrix K(X, Y ). A suitable choice of the
kernel seems to be the Gaussian kernel e−β(cid:107)x−y(cid:107)2
(Louizos et al., 2016; Li et al., 2015; Tzeng et al.,
2014). This approach has two major drawbacks: (a) the need of tuning an additional kernel parameter
β, and (b) the need of the kernel matrix computation K(X, Y ) (computational complexity O(n2 +
nm+m2)), which becomes inefﬁcient (resource-intensive) in case of large data sets. Concerning (a),
the tuning of β is sophisticated since no target samples are available in the domain adaptation setting.
Suitable tuning procedures are transfer learning speciﬁc cross-validation methods (Zhong et al.,
2010). More general methods that don’t utilize source labels include heuristics that are based on
kernel space properties (Sriperumbudur et al., 2009; Gretton et al., 2012), combinations of multiple
kernels (Li et al., 2015), and kernel choices that maximize the MMD test power (Sutherland et al.,
2016). The drawback (b) of the kernel matrix computation can be handled by approximating the
MMD (Zhao & Meng, 2015), or by using linear time estimators (Gretton et al., 2012). In this work
we focus on the quadratic-time MMD with the Gaussian kernel (Gretton et al., 2012; Tzeng et al.,
2014) and transfer learning speciﬁc cross-validation for parameter tuning (Zhong et al., 2010; Ganin
et al., 2016).

The two approaches MMD and the Proxy A-distance have in common that they do not minimize
the domain discrepancy explicitly in the hidden activation space. In contrast, the authors in Zhuang
et al. (2015) do so by minimizing a modiﬁed version of the Kullback-Leibler divergence of the mean
activations (MKL). That is, for samples X, Y ⊂ RN ,

MKL(X, Y ) =

E(X)i log

+ E(Y )i log

(4)

E(X)i
E(Y )i

E(Y )i
E(X)i

N
(cid:88)

i=1

with E(X)i being the ith coordinate of the empirical expectation E(X) = 1
x∈X x. This ap-
|X|
proach is fast to compute and has an explicit interpretation in the activation space. Our empirical ob-
servations (section Experiments) show that minimizing the distance between only the ﬁrst moment
(mean) of the activation distributions can be improved by also minimizing the distance between
higher order moments.

(cid:80)

As noted in the introduction, our approach is motivated by the fact that the MMD and the KL-
divergence approach can be seen as the matching of statistical moments of the hidden activations
AH (θ, XS) and AH (θ, XT ). In particular, MMD-based approaches that use the Gaussian kernel are
equivalent to minimizing a certain distance between weighted sums of all moments of the hidden
activation distributions (Li et al., 2015).

We propose to minimize differences of higher order central moments of the activations AH (θ, XS)
and AH (θ, XT ). The difference minimization is performed explicitly for each moment order. Our

4

Published as a conference paper at ICLR 2017

approach utilizes the equivalent representation of probability distributions in terms of its moment
series. We further utilize central moments due to their translation invariance and natural geometric
interpretation. Our approach contrasts with other moment-based approaches, as they either match
only the ﬁrst moment (MKL) or they don’t explicitly match the moments for each order (MMD). As
a result, our approach improves over MMD-based approaches in terms of computational complexity
with O (N (n + m)) for CMD and O (cid:0)N (n2 + nm + m2)(cid:1) for MMD. In contrast to MKL-based
approaches more accurate distribution matching characteristics are obtained. In addition, CMD
achieves a new state-of-the-art performance on most domain adaptation tasks of Ofﬁce and out-
performs networks trained with MMD, variational fair autoencoders and domain adversarial neural
networks on Amazon reviews.

4 CENTRAL MOMENT DISCREPANCY (CMD)

In this section we ﬁrst propose a new distance function CMD on probability distributions on
compact intervals. The deﬁnition is extended by two theorems that identify CMD as a metric
and analyze a convergence property. The ﬁnal domain regularizer is then deﬁned as an empirical
estimate of CMD. The proofs of the theorems are given in the appendix.

Deﬁnition 1 (CMD metric). Let X = (X1, . . . , Xn) and Y = (Y1, . . . , Yn) be bounded random
vectors independent and identically distributed from two probability distributions p and q on the
compact interval [a, b]N . The central moment discrepancy metric (CMD) is deﬁned by

CMD(p, q) =

(cid:107)E(X) − E(Y )(cid:107)2 +

1
|b − a|

1

∞
(cid:88)

k=2

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2

(5)

where E(X) is the expectation of X, and

ck(X) =

(cid:18)

E

(cid:16) N
(cid:89)

(Xi − E(Xi))ri (cid:17)(cid:19)

i=1

r1+...+rN =k
r1,...,rn≥0

is the central moment vector of order k.

The ﬁrst order central moments are zero, the second order central moments are related to vari-
ance, and the third and fourth order central moments are related to the skewness and the kurto-
sis of probability distributions. It is easy to see that CMD(p, q) ≥ 0, CMD(p, q) = CMD(q, p),
CMD(p, q) ≤ CMD(p, r) + CMD(r, q) and p = q ⇒ CMD(p, q) = 0. The following theorem
shows the remaining property for CMD to be a metric on the set of probability distributions on a
compact interval.

Theorem 1. Let p and q be two probability distributions on a compact interval and let CMD be
deﬁned as in (5), then

CMD(p, q) = 0 ⇒ p = q

Our approach is to minimize the discrepancy between the domain-speciﬁc hidden activation distri-
butions by minimizing the CMD. Thus, in the optimization procedure, we increasingly expect to see
the domain-speciﬁc cumulative distribution functions approach each other. This characteristic can
be expressed by the concept of convergence in distribution and it is shown in the following theorem.
Theorem 2. Let pn and p be probability distributions on a compact interval and let CMD be deﬁned
as in (5), then

where d−→ denotes convergence in distribution.

CMD(pn, p) → 0 ⇒ pn

d−→ p

We deﬁne the ﬁnal central moment discrepancy regularizer as an empirical estimate of the CMD
metric. Only the central moments that correspond to the marginal distributions are computed. The
number of central moments is limited by a new parameter K and the expectation is sampled by the
empirical expectation.

5

Published as a conference paper at ICLR 2017

Deﬁnition 2 (CMD regularizer). Let X and Y be bounded random samples with respective prob-
ability distributions p and q on the interval [a, b]N . The central moment discrepancy regularizer
CMDK is deﬁned as an empirical estimate of the CMD metric, by

CMDK(X, Y ) =

(cid:107)E(X) − E(Y )(cid:107)2 +

|b − a|k (cid:107)Ck(X) − Ck(Y )(cid:107)2

(6)

1
|b − a|

1

K
(cid:88)

k=2

(cid:80)

where E(X) = 1
x∈X x is the empirical expectation vector computed on the sample X and
|X|
Ck(X) = E((x − E(X))k) is the vector of all kth order sample central moments of the coordinates
of X.

This deﬁnition includes three approximation steps: (a) the computation of only marginal central mo-
ments, (b) the bound on the order of central moment terms via parameter K, and (c) the sampling of
the probability distributions by the replacement of the expected value with the empirical expectation.

Applying approximation (a) and assuming independent marginal distributions, a zero CMD dis-
tance value still implies equal joint distributions (thm. 1) but convergence in distribution (thm. 2)
applies only to the marginals. In the case of dependent marginal distributions, zero CMD dis-
tance implies equal marginals and convergence in CMD implies convergence in distribution of the
marginals. However, the matching properties for the joint distributions are not obtained with depen-
dent marginals and approximation (a). The computational complexity is reduced to be linear w. r. t.
the number of samples.

Concerning (b), proposition 1 shows that the marginal distribution speciﬁc CMD terms have an
upper bound that is strictly decreasing with increasing moment order. This bound is convergent to
zero. That is, higher CMD terms can contribute less to the overall distance value. This observation
is experimentally strengthened in subsection Parameter Sensitivity.
Proposition 1. Let X and Y be bounded random vectors with respective probability distributions p
and q on the compact interval [a, b]N . Then

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

(cid:32)

√

N

1
k + 1

(cid:18) k

(cid:19)k

k + 1

+

1
21+k

(cid:33)

(7)

where ck(X) = E((X − E(X))k) is the vector of all kth order sample central moments of the
marginal distributions of p.

Concerning approximation (c), the joint application of the weak law of large numbers (Billings-
ley, 2008) with the continuous mapping theorem (Billingsley, 2013) proves that this approximation
creates a consistent estimate.

We would like to underline that the training of neural networks with eq. (2) and the CMD regularizer
in eq. (6) can be easily realized by gradient descent algorithms. The gradients of the CMD regularizer
are simple aggregations of derivatives of the standard functions gH , xk and (cid:107).(cid:107)2.

5 EXPERIMENTS

Our experimental evaluations are based on two benchmark datasets for domain adaptation, Amazon
reviews and Ofﬁce, described in subsection Datasets. The experimental setup is discussed in subsec-
tion Experimental Setup and our classiﬁcation accuracy results are discussed in subsection Results.
Subsection Parameter Sensitivity analysis the accuracy sensitivity w. r. t. parameter changes of K
for CMD and β for MMD.

5.1 DATASETS

Amazon reviews: For our ﬁrst experiment we use the Amazon reviews data set with the same pre-
processing as used by Chen et al. (2012); Ganin et al. (2016); Louizos et al. (2016). The data set
contains product reviews of four different product categories: books, DVDs, kitchen appliances and
electronics. Reviews are encoded in 5000 dimensional feature vectors of bag-of-words unigrams and
bigrams with binary labels: 0 if the product is ranked by 1 − 3 stars and 1 if the product is ranked

6

Published as a conference paper at ICLR 2017

by 4 or 5 stars. From the four categories we obtain twelve domain adaptation tasks (each category
serves once as source category and once as target category).

Ofﬁce: The second experiment is based on the computer vision classiﬁcation data set from Saenko
et al. (2010) with images from three distinct domains: amazon (A), webcam (W) and dslr (D).
This data set is a de facto standard for domain adaptation algorithms in computer vision. Amazon,
the largest domain, is a composition of 2817 images and its corresponding 31 classes. Following
previous works we assess the performance of our method across all six possible transfer tasks.

5.2 EXPERIMENTAL SETUP

Amazon Reviews:

For the Amazon reviews experiment, we use the same data splits as previous works for every task.
Thus we have 2000 labeled source examples and 2000 unlabeled target examples for training, and
between 3000 and 6000 examples for testing.

We use a similar architecture as Ganin et al. (2016) with one dense hidden layer with 50 hidden
nodes, sigmoid activation functions and softmax output function. Three neural networks are trained
by means of eq. (2): (a) a base model without domain regularization (λ = 0), (b) with the MMD
as domain regularizer and (c) with CMD as domain regularizer. These models are additionally com-
pared with the state-of-the-art models VFAE (Louizos et al., 2016) and DANN (Ganin et al., 2016).
The models (a),(b) and (c) are trained with similar setup as in Louizos et al. (2016) and Ganin et al.
(2016).

For the CMD regularizer, the λ parameter of eq. (2) is set to 1, i.e. the weighting parameter λ is ne-
glected. The parameter K is heuristically set to ﬁve, as the ﬁrst ﬁve moments capture rich geometric
information about the shape of a distribution and K = 5 is small enough to be computationally
efﬁcient. However, the experiments in subsection Parameter Sensitivity show that similar results are
obtained for K ≥ 3.

For the MMD regularizer we use the Gaussian kernel with parameter β. We performed a hyper-
parameter search for β and λ, which has to be performed in an unsupervised way (no labels in the
target domain). We use a variant of the reverse cross-validation approach proposed by Zhong et al.
(2010), in which we initialize the model weights of the reverse classiﬁer by the weights of the ﬁrst
learned classiﬁer (see Ganin et al. (2016) for details). Thereby, the parameter λ is tuned on 10 values
between 0.1 and 500 on a logarithmic scale. The parameter β is tuned on 10 values between 0.01
and 10 on a logarithmic scale. Without this parameter search, no competitive prediction accuracy
results could be obtained.

Since we have to deal with sparse data, we rely on the Adagrad optimizer (Duchi et al., 2011). For
all evaluations, the default parametrization is used as implemented in Keras (Chollet, 2015). All
evaluations are repeated 10 times based on different shufﬂes of the data, and the mean accuracies
and standard deviations are analyzed.

Ofﬁce: Since the ofﬁce dataset is rather small with only 2817 images in its largest domain, we use the
latent representations of the convolution neural network VGG16 of Simonyan & Zisserman (2014).
In particular we train a classiﬁer with one hidden layer, 256 hidden nodes and sigmoid activation
function on top of the output of the ﬁrst dense layer in the network. We again train one base model
without domain regularization and a CMD regularized version with K = 5 and λ = 1.

We follow the standard training protocol for this data set and use all available source and target
examples during training. Using this ”fully-transductive” protocol, we compare our method with
other state-of-the-art approaches including DLID (Chopra et al., 2013), DDC (Tzeng et al., 2014),
DAN (Long et al., 2015), Deep CORAL (Sun & Saenko, 2016), and DANN (Ganin et al., 2016),
based on ﬁne-tuning of the baseline model AlexNet (Krizhevsky et al., 2012). We further compare
our method to LSSA (Aljundi et al., 2015), CORAL (Sun et al., 2016), and AdaBN (Li et al., 2016),
based on the ﬁne-tuning of InceptionBN (Ioffe & Szegedy, 2015).

As an alternative to Adagrad for non-sparse data, we use the Adadelta optimizer from Zeiler (2012).
Again, the default parametrization from Keras is used. We handle unbalances between source and
target sample by randomly down-sampling (up-sampling) the source sample. In addition, we ensure
a sub-sampled source batch that is balanced w. r. t. the class labels.

7

Published as a conference paper at ICLR 2017

Since all hyper-parameters are set a-priori, no hyper-parameter search has to be performed.

All experiments are repeated 10 times with randomly shufﬂed data sets and random initializations.

5.3 RESULTS

Amazon Reviews: Table 1 shows the classiﬁcation accuracies of four models: The Source Only
model is the non domain regularized neural network trained with objective (1), and serves as a
base model for the domain adaptation improvements. The models MMD and CMD are trained with
the same architecture and objective (2) with d as the domain regularizer MMD and CMD, respec-
tively. VFAE refers to the Variational Fair Autoencoder of Louizos et al. (2016), including a slightly
modiﬁed version of the MMD regularizer for faster computations, and DANN refers to the domain-
adversarial neural networks model of Ganin et al. (2016). The last two columns are taken directly
from these publications.

As one can observe in table 1, our accuracy of the CMD-based model is the highest in 9 out of 12
domain adaptation tasks, whereas on the remaining 3 it is the second best method. However, the
difference in accuracy compared to the best method is smaller than the standard deviation over all
data shufﬂes.

Table 1: Prediction accuracy ± standard deviation on the Amazon reviews dataset. The last two
columns are taken directly from Louizos et al. (2016) and Ganin et al. (2016).

Source→Target
books→dvd
books→electronics
books→kitchen
dvd→books
dvd→electronics
dvd→kitchen
electronics→books
electronics→dvd
electronics→kitchen
kitchen→books
kitchen→dvd
kitchen→electronics
average

Source Only
.787 ± .004
.714 ± .009
.745 ± .006
.746 ± .019
.724 ± .011
.765 ± .012
.711 ± .006
.719 ± .009
.844 ± .005
.699 ± .014
.734 ± .011
.833 ± .004
.752 ± .009

MMD
.796 ± .008
.758 ± .018
.787 ± .019
.780 ± .018
.766 ± .025
.796 ± .019
.733 ± .017
.748 ± .013
.857 ± .007
.740 ± .017
.763 ± .011
.844 ± .007
.781 ± .015

CMD
.805 ± .007
.787 ± .007
.813 ± .008
.795 ± .005
.797 ± .010
.830 ± .012
.744 ± .008
.763 ± .006
.860 ± .004
.756 ± .006
.775 ± .005
.854 ± .003
.798 ± .007

VFAE DANN
.799
.792
.816
.755
.786
.822
.727
.765
.850
.720
.733
.838
.784

.784
.733
.779
.723
.754
.783
.713
.738
.854
.709
.740
.843
.763

Ofﬁce: Table 2 shows the classiﬁcation accuracy of different models trained on the Ofﬁce dataset.
Note that some of the methods (LSSA, CORAL and AdaBN) are evaluated based on the Incep-
tionBN model, which shows higher accuracy than the base model (VGG16) of our method in most
tasks. However, our method outperforms related state-of-the-art methods on all except two tasks, on
which it performs similar. We improve the previous state-of-the-art method AdaBN (Li et al., 2016)
by more than 3.2% in average accuracy.

5.4 PARAMETER SENSITIVITY

The ﬁrst sensitivity experiment aims at providing evidence regarding the accuracy sensitivity of the
CMD regularizer w. r. t. parameter changes of K. That is, the contribution of higher terms in the
CMD regularizer are analyzed. The claim is that the accuracy of CMD-based networks does not
depend strongly on the choice of K in a range around its default value 5.

In ﬁg. 3 on the upper left we analyze the classiﬁcation accuracy of a CMD-based network trained
on all tasks of the Amazon reviews experiment. We perform a grid search for the two regularization
hyper-parameters λ and K. We empirically choose a representative stable region for each parameter,
[0.3, 3] for λ and {1, . . . , 7} for K. Since we want to analyze the sensitivity w. r. t. K, we averaged
over the λ-dimension, resulting in one accuracy value per K for each of the 12 tasks. Each accuracy
is transformed into an accuracy ratio value by dividing it with the accuracy of K = 5. Thus, for
each K and task we get one value representing the ratio between the obtained accuracy (for this K
and task) and the accuracy of K = 5. The results are shown in ﬁg. 3 (upper left). The accuracy

8

Published as a conference paper at ICLR 2017

Table 2: Prediction accuracy ± standard deviation on the Ofﬁce dataset. The ﬁrst 10 rows are taken
directly from the papers of Ganin et al. (2016) and Li et al. (2016). The models DLID –DANN are
based on the AlexNet model, LSSA –AdaBN are based on the InceptionBN model, and our method
(CMD) is based on the VGG16 model.

Method
AlexNet
DLID
DDC
Deep CORAL
DAN
DANN
InceptionBN
LSSA
CORAL
AdaBN
VGG16
CMD

A→W
.616
.519
.618
.664
.685
.730
.703
.677
.709
.742
.676 ± .006
.770 ± .006

D→W
.954
.782
.950
.957
.960
.964
.943
.961
.957
.957
.961 ± .003
.963 ± .004

W→D
.990
.899
.985
.992
.990
.992
1.00
.984
.998
.998
.992 ± .002
.992 ± .002

A→D
.638
-
.644
.668
.670
-
.705
.713
.719
.731
.739 ± .009
.796 ± .006

D→A
.511
-
.521
.528
.540
-
.601
.578
.590
.598
.582 ± .005
.638 ± .007

W→A
.498
-
.522
.515
.531
-
.579
.578
.602
.574
.578 ± .004
.633 ± .006

average
.701
-
.707
.721
.729
-
.755
.749
.763
.767
.755
.799

ratios between K = 5 and K ∈ {3, 4, 6, 7} are lower than 0.5%, which underpins the claim that the
accuracy of CMD-based networks does not depend strongly on the choice of K in a range around
its default value 5. For K = 1 and K = 2 higher ratio values are obtained. In addition, for these
two values many tasks show worse accuracy than obtained by K ∈ {3, 4, 5, 6, 7}. From this we
additionally conclude that higher values of K are preferable to K = 1 and K = 2.

The same experimental procedure is performed with MMD regularization wighted by λ ∈ [5, 45]
and Gaussian kernel parameter β ∈ [0.3, 1.7]. We calculate the ratio values w. r. t. the accuracy
of β = 1.2, since this value of β shows the highest mean accuracy of all tasks. Fig. 3 (upper right)
shows the results. It can be seen that the accuracy of the MMD network is more sensitive to parameter
changes than the CMD regularized version. Note that the problem of ﬁnding the best settings for the
parameter β of the Gaussian kernel is a well known problem (Hsu et al., 2003).

The default number of hidden nodes in all our experiments is 256 because of the high classiﬁcation
accuracy of the networks without domain regularization (Source Only) on the source domains. The
question arises if the accuracy of the CMD is lower for higher numbers of hidden nodes. That
is, if the accuracy ratio between the accuracy, of the CMD regularized networks compared to the
accuracy of the Source Only models, decreases with increasing hidden activation dimension. In order
to answer this question we calculate these ratio values for each task of the Amazon reviews data set
for different number of hidden nodes (128, 256, 384, . . . , 1664). For higher numbers of hidden nodes
our Source Only models don’t converge with the optimization settings under consideration. For the
parameters λ and K we use our default setting λ = 1 and K = 5. Fig. 3 on the lower left shows
the ratio values (vertical axis) for every number of hidden nodes (horizontal axis) and every task
(colored lines). It can be seen that the accuracy improvement of the CMD domain regularizer varies
between 4% and 6%. However, no accuracy ratio decrease can be observed.

Please note that we use a default setting for K and λ. Thus, ﬁg. 3 shows that our default setting
(λ = 1, K = 5) can be used independently of the number of hidden nodes. This is an additional
result.

The same procedure is performed with the MMD weighted by parameter λ = 9 and β = 1.2 as
these values show the highest classiﬁcation accuracy for 256 hidden nodes. Fig. 3 on the lower
right shows that the accuracy improvement using the MMD decreases with increasing number of
hidden nodes for this parameter setting. That is, for accurate performance of the MMD, additional
parameter tuning procedures for λ and β need to be performed. Note that the problem of ﬁnding the
best setting for the parameter β of the Gaussian kernel is a well known problem (Hsu et al., 2003).

6 CONCLUSION AND OUTLOOK

In this paper we proposed the central moment discrepancy (CMD) for domain-invariant representa-
tion learning, a distance function between probability distributions. Similar to other state-of-the-art
approaches (MMD, KL-divergence, Proxy A-distance), the CMD function can be used to minimize
the domain discrepancy of latent feature representations. This is achieved by order-wise differences

9

Published as a conference paper at ICLR 2017

Figure 3: Sensitivity of classiﬁcation accuracy w. r. t. different parameters of CMD (left) and MMD
(right) on the Amazon reviews dataset. The horizontal axes show parameter values and the vertical
axes show accuracy ratio values. Each line represents accuracy ratio values for one speciﬁc task. The
ratio values are computed w. r. t. the default accuracy for CMD (upper left), w. r. t. the best obtainable
accuracy for MMD (upper right) and w. r. t. the non domain regularized network accuracies (lower
left and lower right).

of central moments. By using probability theoretic analysis, we proved that CMD is a metric and that
convergence in CMD implies convergence in distribution for probability distributions on compact
intervals. Our method yields state-of-the-art performance on most tasks of the Ofﬁce benchmark data
set and outperforms Gaussian kernel based MMD, VFAE and DANN on most tasks of the Amazon
reviews benchmark data set. These results are achieved with the default parameter setting of K = 5.
In addition, we experimentally underpinned the claim that the classiﬁcation accuracy is not sensitive
to the particular choice of K for K ≥ 3. Therefore, no computationally expensive hyper-parameter
selection is required.

In our experimental analysis we compared our approach to different other state-of-the-art distribu-
tion matching methods like the Maximum Mean Discrepancy (MMD) based on the Gaussian kernel
using a quadratic time estimate. In the future we want to extend our experimental analysis to other
MMD approaches including other kernels, parameter selection procedures and linear time estima-
tors. In addition, we plan to use the CMD for training generative models and to further investigate
the approximation quality of the proposed empirical estimate.

A THEOREM PROOFS

Theorem 1. Let p and q be two probability distributions on a compact interval and let CMD be
deﬁned as in (5), then

CMD(p, q) = 0 ⇒ p = q

Proof. Let X and Y be two random vectors that have probability distributions p and q, respec-
tively. Let ˆX = X − E(X) and ˆY = Y − E(Y ) be the mean centered random variables. From
CMD(p, q) = 0 it follows that all moments of the bounded random variables ˆX and ˆY are equal.
Therefore, the joint moment generating functions of ˆX and ˆY are equal. Using the property that p

10

Published as a conference paper at ICLR 2017

and q have compact support, we obtain the equality of the joint distribution functions of ˆX and ˆY .
Since E(X) = E(Y ), it follows that X = Y .

Theorem 2. Let pn and p be probability distributions on a compact interval and let CMD be deﬁned
as in (5), then

where d−→ denotes convergence in distribution.

CMD(pn, p) → 0 ⇒ pn

d−→ p

Proof. Let Xn and X be random vectors that have probability distributions pn and p respectively.
Let ˆX = X − E(X) and ˆXn = Xn − E(Xn) be the mean centered random variables. From
CMD(Xn, X) → 0 it follows that the moments of ˆXn converge to the moments of ˆX. Therefore,
the joint moment generating functions of ˆXn converge to the joint moment generating function
of ˆX, which implies convergence in distribution of the mean centered random variables. Using
E(Xn) → E(X) we obtain pn

d−→ p.

Proposition 1. Let X and Y be bounded random vectors with respective probability distributions p
and q on the compact interval [a, b]N . Then

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

(cid:32)

√

N

1
k + 1

(cid:18) k

(cid:19)k

k + 1

+

1
21+k

(cid:33)

(8)

where ck(X) = E((X − E(X))k) is the vector of all kth order sample central moments of the
marginal distributions of p.

Proof. Let X ([a, b]) be the set of all random variables with values in [a, b]. Then it follows that

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 =

ck(X)
ck(Y )
|b − a|k −
|b − a|k
(cid:13)
(cid:13)
ck(X)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
|b − a|k
(cid:13)
(cid:13)2
(cid:32)(cid:18) X − E(X)

+

(cid:13)
(cid:13)
(cid:13)
(cid:13)2
ck(Y )
|b − a|k
(cid:19)k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2

(cid:13)
(cid:13)
(cid:13)
(cid:13)2

|b − a|

(cid:32)(cid:12)
(cid:12)
(cid:12)
(cid:12)

X − E(X)
b − a

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
√

E

E

≤

=

≤

≤ 2

N sup

E

X∈X ([a,b])

(cid:32)(cid:12)
(cid:12)
(cid:12)
(cid:12)

E

+

k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2
(cid:13)
X − E(X)
b − a

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:32)(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

+

E

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:32)(cid:18) Y − E(Y )
|b − a|

(cid:19)k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2

Y − E(Y )
b − a

(cid:12)
(cid:12)
(cid:12)
(cid:12)

k(cid:33)(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)2

k(cid:33)

The latter term refers to the absolute central moment of order k, for which the smallest upper bound
is known (Egozcue et al., 2012):

1

√
|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

N sup
x∈[0,1]

x(1 − x)k + (1 − x)xk

Egozcue et al. (2012) also give a more explicit bound:

1

|b − a|k (cid:107)ck(X) − ck(Y )(cid:107)2 ≤ 2

(cid:32)

√

N

1
k + 1

(cid:18) k

(cid:19)k

k + 1

+

1
21+k

(cid:33)

ACKNOWLEDGEMENTS

The research reported in this paper has been supported by the Austrian Ministry for Transport, Inno-
vation and Technology, the Federal Ministry of Science, Research and Economy, and the Province
of Upper Austria in the frame of the COMET center SCCH.

We would like to thank Bernhard Moser and Florian Sobieczky for fruitful discussions on metric
spaces.

11

Published as a conference paper at ICLR 2017

REFERENCES

Rahaf Aljundi, R´emi Emonet, Damien Muselet, and Marc Sebban. Landmarks-based kernelized
subspace alignment for unsupervised domain adaptation. In International Conference on Com-
puter Vision and Pattern Recognition, pp. 56–63, 2015.

Shai Ben-David, John Blitzer, Koby Crammer, Alex Kulesza, Fernando Pereira, and Jennifer Wort-
man Vaughan. A theory of learning from different domains. Machine learning, 79(1-2):151–175,
2010.

Patrick Billingsley. Probability and measure. John Wiley & Sons, 2008.

Patrick Billingsley. Convergence of probability measures. John Wiley & Sons, 2013.

Minmin Chen, Zhixiang Xu, Kilian Weinberger, and Fei Sha. Marginalized denoising autoencoders

for domain adaptation. International Conference on Machine Learning, pp. 767–774, 2012.

Franc¸ois Chollet. Keras: Deep learning library for theano and tensorﬂow, 2015.

Sumit Chopra, Suhrid Balakrishnan, and Raghuraman Gopalan. Dlid: Deep learning for domain
International Conference on Machine Learning

adaptation by interpolating between domains.
Workshop on Challenges in Representation Learning, 2013.

John Duchi, Elad Hazan, and Yoram Singer. Adaptive subgradient methods for online learning and

stochastic optimization. Journal of Machine Learning Research, 12(Jul):2121–2159, 2011.

Martin Egozcue, Luis Fuentes Garc´ıa, Wing Keung Wong, and Ricardas Zitikis. The smallest upper
bound for the pth absolute central moment of a class of random variables. The Mathematical
Scientist, 2012.

Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan, Pascal Germain, Hugo Larochelle, Franc¸ois Lavi-
olette, Mario Marchand, and Victor Lempitsky. Domain-adversarial training of neural networks.
Journal of Machine Learning Research, 17(Jan):1–35, 2016.

Xavier Glorot, Antoine Bordes, and Yoshua Bengio. Domain adaptation for large-scale sentiment
classiﬁcation: A deep learning approach. In International Conference on Machine Learning, pp.
513–520, 2011.

Arthur Gretton, Karsten M Borgwardt, Malte Rasch, Bernhard Sch¨olkopf, and Alex J Smola. A ker-
nel method for the two-sample-problem. In Advances in neural information processing systems,
pp. 513–520, 2006.

Arthur Gretton, Karsten M Borgwardt, Malte J Rasch, Bernhard Sch¨olkopf, and Alexander Smola.

A kernel two-sample test. Journal of Machine Learning Research, 13(Mar):723–773, 2012.

Chih-Wei Hsu, Chih-Chung Chang, Chih-Jen Lin, et al. A practical guide to support vector classiﬁ-

cation. 2003.

Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating deep network training by
In International Conference on Machine Learning, pp. 448–

reducing internal covariate shift.
456, 2015.

Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton. Imagenet classiﬁcation with deep convo-
lutional neural networks. In Advances in neural information processing systems, pp. 1097–1105,
2012.

Solomon Kullback and Richard A Leibler. On information and sufﬁciency. Annals of Mathematical

Statistics, 22(1):79–86, 1951.

Yanghao Li, Naiyan Wang, Jianping Shi, Jiaying Liu, and Xiaodi Hou. Revisiting batch normaliza-

tion for practical domain adaptation. arXiv preprint arXiv:1603.04779, 2016.

Yujia Li, Kevin Swersky, and Richard Zemel. Unsupervised domain adaptation by domain invari-
ant projection. In Neural Information Processing Systems Workshop on Transfer and Multitask
Learning, 2014.

12

Published as a conference paper at ICLR 2017

Yujia Li, Kevin Swersky, and Richard Zemel. Generative moment matching networks. In Interna-

tional Conference on Machine Learning, pp. 1718–1727, 2015.

Mingsheng Long, Yue Cao, Jianmin Wang, and Michael Jordan. Learning transferable features with
deep adaptation networks. In International Conference on Machine Learning, pp. 97–105, 2015.

Christos Louizos, Kevin Swersky, Yujia Li, Max Welling, and Richard Zemel. The variational fair

auto encoder. International Conference on Learning Representations, 2016.

Sinno Jialin Pan, Ivor W Tsang, James T Kwok, and Qiang Yang. Domain adaptation via transfer

component analysis. IEEE Transactions on Neural Networks, 22(2):199–210, 2011.

Kate Saenko, Brian Kulis, Mario Fritz, and Trevor Darrell. Adapting visual category models to new

domains. In European Conference on Computer Vision, pp. 213–226. Springer, 2010.

Karen Simonyan and Andrew Zisserman. Very deep convolutional networks for large-scale image

recognition. International Conference on Learning Representations, 2014.

Bharath K Sriperumbudur, Kenji Fukumizu, Arthur Gretton, Gert RG Lanckriet, and Bernhard
Sch¨olkopf. Kernel choice and classiﬁability for rkhs embeddings of probability distributions.
In Advances in neural information processing systems, pp. 1750–1758, 2009.

Baochen Sun and Kate Saenko. Deep coral: Correlation alignment for deep domain adaptation.

arXiv preprint arXiv:1607.01719, 2016.

Baochen Sun, Jiashi Feng, and Kate Saenko. Return of frustratingly easy domain adaptation. In

AAAI Conference on Artiﬁcial Intelligence, 2016.

Dougal J Sutherland, Hsiao-Yu Tung, Heiko Strathmann, Soumyajit De, Aaditya Ramdas, Alex
Smola, and Arthur Gretton. Generative models and model criticism via optimized maximum
mean discrepancy. arXiv preprint arXiv:1611.04488, 2016.

Eric Tzeng, Judy Hoffman, Ning Zhang, Kate Saenko, and Trevor Darrell. Deep domain confusion:

Maximizing for domain invariance. arXiv preprint arXiv:1412.3474, 2014.

Matthew D Zeiler. Adadelta: an adaptive learning rate method. arXiv preprint arXiv:1212.5701,

2012.

Ji Zhao and Deyu Meng. Fastmmd: Ensemble of circular discrepancy for efﬁcient two-sample test.

Neural computation, 27(6):1345–1372, 2015.

Erheng Zhong, Wei Fan, Qiang Yang, Olivier Verscheure, and Jiangtao Ren. Cross validation frame-
work to choose amongst models and datasets for transfer learning. In Joint European Conference
on Machine Learning and Knowledge Discovery in Databases, pp. 547–562. Springer, 2010.

Fuzhen Zhuang, Xiaohu Cheng, Ping Luo, Sinno Jialin Pan, and Qing He. Supervised representation
learning: Transfer learning with deep autoencoders. In International Joint Conference on Artiﬁcial
Intelligence, 2015.

13

