6
1
0
2
 
y
a
M
 
1
 
 
]
L
M

.
t
a
t
s
[
 
 
1
v
6
1
3
0
0
.
5
0
6
1
:
v
i
X
r
a

Directional Statistics in Machine Learning: a Brief Review∗

Suvrit Sra
Massachusetts Institute of Technology, Cambridge, MA 02139

suvrit@mit.edu

Abstract

The modern data analyst must cope with data encoded in various forms, vectors, matrices, strings,
graphs, or more. Consequently, statistical and machine learning models tailored to different data
encodings are important. We focus on data encoded as normalized vectors, so that their “direction”
is more important than their magnitude. Speciﬁcally, we consider high-dimensional vectors that lie
either on the surface of the unit hypersphere or on the real projective plane. For such data, we
brieﬂy review common mathematical models prevalent in machine learning, while also outlining
some technical aspects, software, applications, and open mathematical challenges.

1

Introduction

Data are often represented as vectors in a Euclidean space Rp, but frequently, data possess more struc-
ture and treating them as Euclidean vectors may be inappropriate. A simple example of this instance
is when data are normalized to have unit norm, and thereby put on the surface of the unit hypersphere
Sp−1. Such data are better viewed as objects on a manifold, and when building mathematical models
for such data it is often advantageous to exploit the geometry of the manifold (here Sp−1).

For example, in classical information retrieval it has been convincingly demonstrated that cosine
similarity is a more effective measure of similarity for analyzing and clustering text documents than
just Euclidean distances. There is substantial empirical evidence that normalizing the data vectors
helps to remove the biases induced by the length of a document and provide superior results [36, 37].
On a related note, the spherical k-means (spkmeans) algorithm [16] that runs k-means with cosine
similarity for clustering unit norm vectors, has been found to work well for text clustering and a
variety of other data. Another widely used similarity measure is Pearson correlation: given x, y ∈ Rd
∑i(yi− ¯y)2 , where ¯x = 1
∑i yi. Mapping x (cid:55)→ ˜x
this deﬁned as ρ(x, y) :=
xi− ¯x
∑i(xi− ¯x)2 (similarly deﬁne ˜y), we obtain the inner-product ρ(x, y) = (cid:104) ˜x, ˜y(cid:105). Moreover,
with ˜xi =
(cid:107) ˜x(cid:107) = (cid:107) ˜y(cid:107) = 1. Thus, the Pearson correlation is exactly the cosine similarity between ˜x and ˜y. More
broadly, domains where similarity measures such as cosine, Jaccard or Dice [33] are more effective than
measures derived from Mahalanobis type distances, possess intrinsic “directional” characteristics, and
are hence better modeled as directional data [26].

∑i xi and ¯y = 1
d

∑i(xi− ¯x)(yi− ¯y)

∑i(xi− ¯x)2×

√

√

√

d

This chapter recaps basic statistical models for directional data, which herein refers to unit norm
vectors for which “direction” is more important than “magnitude.” In particular, we recall some basic
distributions on the unit hypersphere, and then discuss two of the most commonly used ones: the
von Mises-Fisher and Watson distributions. For these distributions, we describe maximum likelihood
estimation as well as mixture modeling via the Expectation Maximization (EM) algorithm. In addition,
we include a brief pointer to recent literature on applications of directional statistics within machine
learning and related areas.

We warn the advanced reader that no new theory is developed in this chapter, and our aim herein
is to merely provide an easy introduction. The material of this chapter is based on the author’s the-
sis [38], and the three papers [5, 39, 40], and the reader is referred to these works for a more detailed
development and additional experiments.

∗Invited chapter submitted to: “Modern Statistical Methods for Directional Data” (eds. C. Ley and T. Verdebout)

1

2 Basic Directional Distributions

2.1 Uniform distribution
The probability element of the uniform distribution on Sp−1 equals cpdSp−1. The normalization con-
stant cp ensures that (cid:82)

Sp−1 cpdSp−1 = 1, from which it follows that

where Γ(s) := (cid:82) ∞

0 ts−1e−tdt is the well-known Gamma function.

cp = Γ(p/2)/2π p/2,

2.2 The von Mises-Fisher distribution

The vMF distribution is one of the simplest distributions for directional data and it has properties
analogous to those of the multivariate Gaussian on Rp. For instance, the maximum entropy density on
Sp−1 subject to the constraint that E[x] is ﬁxed, is a vMF density (see e.g., [32, pp. 172–174] and [27]).

A unit norm vector x has the von Mises-Fisher (vMF) distribution if its density is

pvmf(x; µ, κ) := cp(κ)eκµT x,
where (cid:107)µ(cid:107) = 1 and κ ≥ 0. Integrating using polar coordinates, it can be shown [38, App. B.4.2] that
the normalizing constant is given by

cp(κ) =

κ p/2−1
(2π)p/2 Ip/2−1(κ)

,

1
where Is(κ) denotes the modiﬁed Bessel function of the ﬁrst kind [1].

The vMF density pvmf = cp(κ)eκµT x is parameterized by the mean direction µ, and the concentration
parameter κ, so-called because it characterizes how strongly the unit vectors drawn according to pvmf
are concentrated about the mean direction µ. Larger values of κ imply stronger concentration about
the mean direction. In particular when κ = 0, pvmf reduces to the uniform density on Sp−1, and as
κ → ∞, pvmf tends to a point density.

2.3 Watson distribution

The uniform and the vMF distributions are deﬁned over directions. However, sometimes the observa-
tions are axes of direction, i.e., the vectors ±x ∈ Sp−1 are equivalent. This constraint is also denoted
by x ∈ Pp−1, where Pp−1 is the projective hyperplane of dimension p−1. The multivariate Watson
distribution [28] models such data; it is parametrized by a mean-direction µ ∈ Pp−1, and a concentration
parameter κ ∈ R, with probability density

The normalization constant dp(κ) is given by

pwat(x; µ, κ) := dp(κ)eκ(µT x)2

,

x ∈ Pp−1.

where M is the conﬂuent hypergeometric function [18, formula 6.1(1)]

dp(κ) =

Γ(p/2)
2 , p
2π p/2 M( 1

,

2 , κ)

M(a, c, κ) = ∑
j≥0

aj
cj

κj
j!

,

a, c, κ ∈ R,

2

1

Note that sometimes in directional statistics literature, the integration measure is normalized by the uniform measure, so

that instead of cp(κ), one uses cp(κ)2π p/2/Γ(p/2).

(2.1)

(2.2)

(2.3)

and a0 = 1, aj = a(a + 1) · · · (a + j − 1), j ≥ 1, denotes the rising-factorial.

Observe that for κ > 0, the density concentrates around µ as κ increases, whereas for κ < 0, it

concentrates around the great circle orthogonal to µ.

2.4 Other distributions
We brieﬂy summarize a few other interesting directional distributions, and refer the reader to [28] for
a more thorough development.

Bingham distribution. Some axial data do not exhibit the rotational symmetry of Watson distribu-
tions. Such data could be potentially modeled using Bingham distributions, where the density at a
point x is Bp(x; K) := cp(K)exT Kx, where the normalizing constant ep can be shown to be cp(K) =
, where M(·, ·, K) denotes the conﬂuent hypergeometric function of matrix argument [31].

Γ(p/2)
2π p/2 M( 1
2 ,

p
2 ,K)

Note that since xT(K + δIp)x = xTKx + δ, the Bingham density is identiﬁable only up to a constant
diagonal shift. Thus, one can assume Tr(K) = 0, or that the smallest eigenvalue of K is zero [28].
Intuitively, one can see that the eigenvalues of K determine the axes around which the data clusters,
e.g., greatest clustering will be around the axis corresponding to the leading eigenvector of K.

Bingham-Mardia distribution. Certain problems require rotationally symmetric distributions that
have a ‘modal ridge’ rather than just a mode at a single point. To model data with such characteristics
[28] suggest a density of the form

where as usual cp(κ) denotes the normalization constant.

p(x; µ, κ, ν) = cp(κ)eκ(µT x−ν)2

,

Fisher-Watson distributions This distribution is a simpler version of the more general Fisher-Bingham
distribution [28]. The density is

p(x; µ, µ0, κ, κ0) = cp(κ0, κ, µT

0 µ)eκ0µT

0 x+κ(µT x)2

.

Fisher-Bingham. This is a more general directional distribution; its density is

p(x; µ, κ, A) = cp(κ, A)eκµT x+xT Ax.

(2.4)

(2.5)

(2.6)

There does not seem to exist an easy integral representation of the normalizing constant, and in an
actual application one needs to resort to some sort of approximation for it (such as a saddle-point
approximation). Kent distributions arise by putting an additional constraint Aµ = 0 in (2.6).

3 Related work and applications

The classical references on directional statistics are [26, 27, 46]; a more recent, updated reference is [28].
Additionally, for readers interested in statistics on manifolds, a good starting point is [11]. To our
knowledge, the ﬁrst work focusing on high-dimensional application of directional statistics was [5],
where the key application was clustering of text and gene expression data using mixtures of vMFs.
There exist a vast number of other applications and settings where hyperspherical or manifold data
arise. Summarizing all of these is clearly beyond the scope of this chapter. We mention below a
smattering of some works that are directly related to this chapter.

We note a work on feature extraction based on correlation in [19]. Classical data mining applications
such as topic modeling for normalized data are studied in [4, 34]. A semi-parametric setting using

3

Dirichlet process mixtures for spherical data is [41]. Several directional data clustering settings include:
depth images using Watson mixtures [20]; a k-means++ [3] style procedure for mixture of vMFs [29];
clustering on orthogonal manifolds [10]; mixtures of Gaussian and vMFs [23]. Directional data has
also been used in several biomedical (imaging) applications, for example [30], fMRI [24], white matter
supervoxel segmentation [9], and brain imaging [35].
In signal processing there are applications to
spatial fading using vMF mixtures [25] and speaker modeling [44]. Finally, beyond vMF and Watson,
it is worthwhile to consider the Angular Gaussian distribution [45], which has been applied to model
natural images for instance in [22].

4 Modeling directional data: maximum-likelihood estimation

In this section we brieﬂy recap data models involving vMF and Watson distributions. In particular, we
describe maximum-likelihood estimation for both distributions. As is well-known by now, for these
distributions estimating the mean µ is simpler than estimating the concentration parameter κ.

4.1 Maximum-Likelihood estimation for vMF

Let X = {x1, . . . , xn} be a set of points drawn from pvmf(x; µ, κ). We wish to estimate µ and κ by
solving the m.l.e. optimization problem

max (cid:96)(X ; µ, κ) := log cp(κ) + ∑n

i=1 κµT xi,

s.t. (cid:107)µ(cid:107) = 1, κ ≥ 0.

Writing

(cid:107) ∑i xi(cid:107)

n = ¯r, a brief calculation shows that the optimal solution satisﬁes
n¯r ∑

κ = A−1

p (¯r),

µ = 1

i=1 xi,

where the nonlinear map Ap is deﬁned as

Ap(κ) =

−c(cid:48)
p(κ)
cp(κ)

=

Ip/2(κ)
Ip/2−1(κ)

= ¯r.

The challenge is to solve (4.3) for κ. For small values of p (e.g., p = 2, 3) the simple estimates provided
in [28] sufﬁce. But for machine learning problems, where p is typically very large, these estimates
do not sufﬁce. In [5], the authors provided efﬁcient numerical estimates for κ that were obtained by
truncating the continued fraction representation of Ap(κ) and solving the resulting equation. These
estimates were then corrected to yield the approximation

(4.1)

(4.2)

(4.3)

(4.4)

which turns out to be remarkably accurate in practice.

Subsequently, [43] showed simple bounds for κ by exploiting inequalities about the Bessel ratio
Ap(κ)—this ratio possesses several nice properties, and is very amenable to analytic treatment [2]. The
work of [43] lends theoretical support to the empirically determined approximation (4.4), by essentially
showing this approximation lies in the “correct” range. Tanabe et al. [43] also presented a ﬁxed-point
iteration based algorithm to compute an approximate solution κ.

The critical difference between this approximation and the next two is that it does not involve any
Bessel functions (or their ratio). That is, not a single evaluation of Ap(κ) is needed—an advantage that
can be signiﬁcant in high-dimensions where it can be computationally expensive to compute Ap(κ).
Naturally, one can try to compute log Is(κ) (s = p/2) to avoid overﬂows (or underﬂows as the case
may be), though doing so introduces yet another approximation. Therefore, when running time and
simplicity are of the essence, approximation (4.4) is preferable.

ˆκ =

¯r(p − ¯r2)
1 − ¯r2

,

4

Approximation (4.4) can be made more exact by performing a few iterations of Newton’s method.
To save runtime, [39] recommends only two-iterations of Newton’s method, which amounts to com-
puting κ0 using (4.4), followed by

κs+1 = κs −

Ap(κs) − ¯R
1 − Ap(κs)2 − (p−1)

κs

Ap(κs)

,

s = 0, 1.

Approximation (4.5) was shown in [39] to be competitive in running time with the method of [43], and
was seen to be overall more accurate. Approximating κ remains a topic of research interest, as can be
seen from the recent works [12, 21].

4.2 Maximum-Likelihood estimation for Watson

Let X = {x1, . . . , xn} be i.i.d. samples drawn from pwat(x; µ, κ). We wish to estimate µ and κ by
maximizing the log-likelihood

(cid:96)(X ; µ, κ) = n(cid:0)κµ(cid:62)Sµ − ln M(1/2, p/2, κ) + γ(cid:1),

subject to µTµ = 1, where S = 1
is the sample scatter matrix, and γ is a constant. Considering
n
the ﬁrst-order optimality conditions of (4.6) leads to the following parameter estimates [28, Sec. 10.3.2]

i=1 xix(cid:62)
i

∑n

ˆµ = ±s1

if

ˆκ > 0,

ˆµ = ±sp

if

ˆκ < 0,

where s1, s2, . . . , sp are (normalized) eigenvectors of the scatter matrix S corresponding to the eigenval-
ues λ1 ≥ λ2 ≥ · · · ≥ λp.

2
To estimate the concentration parameter ˆκ we must solve:

g( 1

2 , p

2 ; ˆκ) :=

2 , p
∂
∂κ M( 1
2 , ˆκ)
2 , p
M( 1
2 , ˆκ)

= ˆµ(cid:62)S ˆµ := r

(0 ≤ r ≤ 1),

(4.8)

Notice that (4.7) and (4.8) are coupled—so we simply solve both g(1/2, p/2; ˆκ) = λ1 and g(1/2, p/2; ˆκ) =
λp, and pick the solution that yields a higher log-likelihood.

The hard part is to solve (4.8). One could use a root-ﬁnding method (e.g. Newton-Raphson), but
similar to the vMF case, an out-of-the-box root-ﬁnding approach can be unduly slow or numerically
hard as data dimensionality increases. The authors of [40] consider the following more general equa-
tion:

and derive for it high-quality closed form numerical approximations. These approximations improve
upon two previous approaches, that of [7] and [38]. Bijral et al. [7] followed the continued-fraction
approach of [5] to obtain the heuristic approximation

Other heuristic approximations were presented by the author in [38].

The following theorem of [40] provides rigorously justiﬁed approximations, most of which are

typically more accurate than previous heuristics.

2

We need λ1 > λ2 to ensure a unique m.l.e. for positive κ, and λp−1 > λp, for negative κ

g(a, c; κ) :=

M(cid:48)(a, c; κ)
M(a, c; κ)

= r

c > a > 0,

0 ≤ r ≤ 1,

BBG(r) :=

cr − a
r(1 − r)

+

r
2c(1 − r)

.

5

(4.5)

(4.6)

(4.7)

(4.9)

(4.10)

Theorem 4.1 ( [40]). Let the solution to g(a, c; κ) = r be denoted by κ(r). Consider the following three bounds:

(lower bound)

(bound)

(upper bound)

L(r) =

rc − a
r(1 − r)

B(r) =

U(r) =

rc − a
2r(1 − r)
rc − a
(cid:16)
r(1 − r)

(cid:18)

1 +

(cid:32)

(cid:19)

,

1 − r
c − a
(cid:115)

1 +

1 +

1 +

(cid:17)

.

r
a

4(c + 1)r(1 − r)
a(c − a)

(cid:33)

,

Let c > a > 0, and κ(r) be the solution (4.9). Then, we have

1. for a/c < r < 1,

2. for 0 < r < a/c,

L(r) < κ(r) < B(r) < U(r),

L(r) < B(r) < κ(r) < U(r).

3. and if r = a/c, then κ(r) = L(a/c) = B(a/c) = U(a/c) = 0.

All three bounds (L, B, and U) are also asymptotically precise at r = 0 and r = 1.

5 Mixture models

Many times a single vMF or Watson distribution is insufﬁcient to model data. In these cases, a richer
model (e.g., for clustering, or as a generative model, etc.) such as a mixture model may be more useful.
We summarize in this section mixtures of vMF (movMF) and mixtures of Watson (moW) distributions.
The former was originally applied to high-dimensional text and gene expression data in [5], and since
then it has been used in a large number of applications (see also Section 3). The latter has been applied
to genetic data [40], as well as in other data mining applications [7].

Let p(x; µ, κ) denote either a vMF density or a Watson density. We consider mixture models of K
different vMF densities or K different Watson densities. Thus, a given unit norm observation vector x
has the mixture density

f (cid:0)x; {µj}K

j=1, {κj}K

j=1

(cid:1) := ∑K

j=1 πj p(x; µj, κj).

(5.1)

Suppose we observe the set X = {x1, . . . , xn ∈ Pp−1} of i.i.d. samples drawn from (5.1). Our aim
(cid:13)
(cid:13) = 1, and κj ≥ 0 for an

j=1, where ∑j πj = 1, πj ≥ 0,

(cid:13)
(cid:13)µj

is to infer the mixture parameters (πj, µj, κj)K
movMF and κj ∈ R for a moW.

5.1 EM algorithm

A standard, practical approach to estimating the mixture parameters is via the Expectation Maximiza-
tion (EM) algorithm [14] applied to maximize the mixture log-likelihood for X . Speciﬁcally, we seek to
maximize

(cid:96)(X ; {πj, µj, κj}K

j=1 πj p(x; µk, κj)
To apply EM, ﬁrst we use Jensen’s inequality to compute the lower bound
ij βij ln (cid:0)πj p(xi|µj, κj)/βij

(cid:96)(X ; {πj, µj, κj}K

j=1) ≥ ∑

i=1 ln

j=1) := ∑n

(cid:1) .

(cid:16)∑K

(cid:17)

.

Then, the E-Step sets βij to the posterior probability (for xi given component j):

(4.11)

(4.12)

(4.13)

(4.14)

(4.15)

(5.2)

(5.3)

(5.4)

βij :=

πj p(xi|µj, κj)
∑l πl p(xi|µl, κl)

.

6

With this choice of βij, the M-Step maximizes (5.3), which is essentially just a maximum-likelihood
problem, to obtain parameter updates. In particular, we obtain
M-Step for movMF:

(5.5)

(5.6)

(5.7)
(5.8)

(5.9)

M-Step for moW:

µj =

rj
(cid:13)
(cid:13)rj

,

(cid:13)
(cid:13)

rj = ∑n

κj = A−1

p (¯rj),

¯rj =

i=1 βijxi,
(cid:13)
(cid:13)
(cid:13)rj
(cid:13)
i=1 βij

∑n

.

if

µj = sj
µj = sj
κj > 0,
p
1
κj = g−1(1/2, p/2, rj), where

if
rj = µ(cid:62)

κj < 0,
j Sjµj

Sj =

1
i=1 βij

∑n

∑n

i=1 βijxixT
i .

where sj

1 denotes the top eigenvector corresponding to eigenvalue λi(Sj) of the weighted-scatter matrix

For both movMF and moW, the component probabilities are as usual πj = 1
Iterating be-
n
tween (5.4) and the M-Steps we obtain an EM algorithm. Pseudo-code for such a procedure is shown
below as Algorithm 1.

∑i βij.

Hard Assignments. To speed up EM, we can replace can E-Step (5.4) by the standard hard-assignment
rule:

(cid:40)

1,

βij =

0, otherwise.

if j = argmaxj(cid:48) ln πl + ln p(xi|µl, κl),

The corresponding M-Step also simpliﬁes considerably. Such hard-assignments maximize a lower-
bound on the incomplete log-likelihood and yield partitional-clustering algorithms.

Initialization. For movMF, typically an initialization using spherical kmeans (spkmeans) [16] can be
used. The next section presents arguments that explain why this initialization is natural for movMF.
Similarly, for moW, an initialization based on diametrical kmeans [15] can be used, though sometimes
even an spkmeans initialization sufﬁces [40].

5.2 Limiting versions

It is well-known that the famous k-means algorithm may be obtained as a limiting case of the EM
algorithm applied to a mixture of Gaussians. Analogously, the spherical kmeans algorithm of [16] that
clusters unit norm vectors and ﬁnds unit norm means (hence ‘spherical’) can be viewed as the limiting
case of a movMF. Indeed, assume that the priors of all mixture components are equal. Furthermore,
assume that all the mixture components have equal concentration parameters κ and let κ → ∞. Under
these assumptions, the E-Step (5.9) reduces to assigning a point xi to the cluster nearest to it, which
In other
here is given by the cluster with whose centroid the given point has largest dot product.
i µj because βik → 1 and βij → 0 for j (cid:54)= k in (5.9).
words, a point xi is assigned to cluster k = argmaxj xT
In a similar manner, the diametrical clustering algorithm of [15] also may be viewed as a limit-
ing case of EM applied to a moW. Recall that the diametrical clustering algorithm groups together
correlated and anti-correlated unit norm data vectors into the same cluster, i.e., it treats diametrically
opposite points equivalently. Remarkably, it turns out that the diametrical clustering algorithm of [15]
can be obtained as follows: Let κj → ∞, so that for each i, the corresponding posterior probabili-
ties βij → {0, 1}; the particular βij that tends to 1 is the one for which (µ(cid:62)
j xi)2 is maximized in the

7

Input: x = {x1, . . . , xn : where each (cid:107)xi(cid:107) = 1}, K
Output: Parameter estimates πj, µj, and κj, for 1 ≤ j ≤ K
Initialize πj, µj, κj for 1 ≤ j ≤ K
while not converged do

{Perform the E-step of EM}
foreach i and j do

Compute βij using (5.4) (or via (5.9))

end
{Perform the M-Step of EM}
for j = 1 to K do
πj ← 1
n
For movMF: compute µj and κj using (5.5) and (5.6)
For moW: compute µj and κj using (5.7) and (5.8)

i=1 βij

∑n

end

end

Algorithm 1: EM Algorithm for movMF and moW

E-Step; subsequently the M-Step (5.7), (5.8) also simpliﬁes, and yields the same updates as made by
the diametrical clustering algorithm.

Alternatively, we can obtain diametrical clustering from the hard-assignment heuristic of EM ap-
plied to a moW where all mixture components have the same (positive) concentration parameter κ.
Then, in the E-Step (5.9), we can ignore κ altogether, which reduces Alg. 1 to the diametrical clustering
procedure.

5.3 Application: clustering using movMF
Mixtures of vMFs have been successfully used in text clustering; see [6] for a detailed overview. We
recall below results of a two main experiments below: (i) simulated data; and (ii) Slashdot news articles.
The key characteristic of text data is its high dimensionality. And for modeling clusters of such data
using a movMF, the approximate computation of the concentration parameter κ as discussed in Sec. 4.1
is of great importance: without this approximation, the computation breaks down due to ﬂoating point
difﬁculties.

For (i), we simulate a mixture of 4 vMFs in with p = 1000 each, and draw a sample of 5000 data
points. The clusters are chosen to be roughly of the same size and their relative mixing proportions
are (0.25, 0.24, 0.25, 0.26), with concentration parameters (to one digiit) (651.0, 267.8, 267.8, 612.9), and
random units vectors as means. This is the same data as the big-mix data in [6]. We generated the
samples using the vmfsamp code (available from the author upon request).

For (ii), we recall a part of the results of [6] on news articles from the Slashdot website. These
articles are tagged and cleaned to retain 1000 articles that more clearly belong to a primary category
/ cluster. We report results on ‘Slash-7’ and ‘Slash-6’; the ﬁrst contains 6714 articles in 7 primary
categories: business, education, entertainment, games, music, science, and internet; while the second
contains 5182 articles in 6 categories: biotech, Microsoft, privacy, Google, security, and space.

Performance evaluation. There are several ways to evaluate performance of a clustering method. For
the simulated data, we know the true parameters from which the dataset was simulated, hence we
can compare the error in estimated parameter values. For the Slashdot data, we have knowledge of
“ground truth” labels, so we can use the normalized mutual information (NMI) [42] (a measure that was
also previously used to assess movMF based clustering [5, 6]) as an external measure of cluster quality.
Suppose the predicted cluster labels are ˆY and the true labels are Y, then the NMI between Y and ˆY is

8

deﬁned as

NMI(Y, ˆY) :=

(cid:113)

I(Y, ˆY)

,

H(Y)H( ˆY)

(5.10)

where I(·, ·) denotes the usual mutual information and H denotes the entropy [13]. When the predicted
labels agree perfectly with the true labels, then NMI equals 1; thus higher values of NMI are better.

Results on ‘bigsim’. The results of the ﬁrst experiment are drawn from [5], and are reported in
Table 1. From the results it is clear that on this particular simulated data, EM manages to recover the
true parameters to quite a high degree of accuracy. Part of this reason is due to the high values of the
concentration parameter: as κ increases, the probability mass concentrates, which makes it easier to
separate the clusters using EM. To compute the values in the table, we ran EM with soft-assignments
and then after convergence used assignment (5.9).

min µT ˆµ max

0.994

|κ− ˆκ|
κ
0.006

max

|π− ˆπ|
π
0.002

Table 1: Accuracy of parameter estimation via EM for movMF on the ‘bigsim’ data. We report the worst
values (the averages were better) seen across 20 different runs. For the estimated mean, we report the
worst inner product with the true mean; for the concentration and mixture priors we report worst case
relative errors.

Results on Slashdot. These results are drawn from [6]. The results here are reported merely as
an illustration, and we refer the reader to [6] for more extensive results. We report performance of
our implementation of Alg. 1 (EM for movMF) against Latent Dirichlet Allocation (LDA) [8] and a
Exponential-family Dirichlet compound multinomial model (EDCM) [17].

Table 2 reports results of comparing Alg. 1 specialized for movMFs against LDA and EDCM. As
can be seen from the results, the vMF mixture leads to much higher quality clustering than the other
two competing approaches. We did not test an optimized implementation (and used our own Matlab
implementation), but note anecdotally that the EM procedure was 3–5 times faster than the others.

Dataset moVMF LDA ECDM
Slash-7
Slash-6

0.31
0.46

0.22
0.36

0.39
0.65

Table 2: Comparison of NMI values of moVMF versus LDA and ECDM (derived from [6]).

5.4 Application: clustering using moW
Figure 1 shows a toy example of axial data. Here, the original data has two clusters (leftmost panel
of Fig. 1).
If we cluster this data into two clusters using Euclidean kmeans, we obtain the plot in
the middle panel; clustering into 4 groups using Euclidean kmeans yields the rightmost panel. As is
clear from the ﬁgure, Euclidean kmeans cannot discover the desired structure, if the true clusters are
on axial data. The diametrical clustering algorithm of [15] discovers the two clusters (leftmost panel),
which also shows the mean vectors ±µ for each cluster. Recall that as mentioned above, the diametrical
clustering method is obtained as the limiting case of EM on moW.

9

Figure 1: The left panel shows axially symmetric data that has two clusters (centroids are indicated
by ’+’ and ’x’). The middle and right panel shows clustering yielded by (Euclidean) K-means (note
that the centroids fail to lie on the circle in this case) with K = 2 and K = 4, respectively. Diametrical
clustering recovers the true clusters in the left panel.

6 Conclusion

We summarized a few distributions from directional statistics that are useful for modeling normalized
data. We focused in particular on the von Mises-Fisher distribution (the “Gaussian” of the hypersphere)
and the Watson distribution (for axially symmetric data). For both of these distributions, we recapped
maximum likelihood parameter estimation as well as mixture modeling using the EM algorithm. For
extensive numerical results on clustering using mixtures of vMFs, we refer the reader to the original
paper [5]; similarly, for mixtures of Watsons please see [40]. The latter paper also describes asymptotic
estimates of the concentration parameter in detail.

Now directional distributions are widely used in machine learning (Sec. 3 provides some point-
ers to related work), and we hope the brief summary provided in this chapter helps promote wider
understanding about these. In particular, we hope to see more exploration of directional models in
the following important subareas: Bayesian models, Hidden Markov Models using directional models,
and deep generative models.

References

[1] M. Abramowitz and I. A. Stegun. Handbook of Mathematical Functions, With Formulas, Graphs, and

Mathematical Tables. Dover, New York, June 1974.

[2] D. E. Amos. Computation of modiﬁed Bessel functions and their ratios. Mathematics of Computa-

tion, 28(125):235–251, 1974.

[3] D. Arthur and S. Vassilvitskii. k-means++: The advantages of careful seeding.

In Proceedings
of the eighteenth annual ACM-SIAM symposium on Discrete algorithms, pages 1027–1035. Society for
Industrial and Applied Mathematics, 2007.

[4] A. Banerjee and S. Basu. Topic models over text streams: A study of batch and online unsupervised

learning. In SDM, volume 7, pages 437–442. SIAM, 2007.

[5] A. Banerjee, I. S. Dhillon, J. Ghosh, and S. Sra. Clustering on the Unit Hypersphere using von

Mises-Fisher Distributions. JMLR, 6:1345–1382, Sep 2005.

[6] A. Banerjee, I. S. Dhillon, J. Ghosh, and S. Sra. Text Clustering with Mixture of von Mises-Fisher
Distributions. In A. N. Srivastava and M. Sahami, editors, Text Mining: Theory, Applications, and
Visualization. CRC Press, 2009.

10

[7] A. Bijral, M. Breitenbach, and G. Z. Grudic. Mixture of Watson Distributions: A Generative Model
for Hyperspherical Embeddings. In Artiﬁcial Intelligence and Statistics (AISTATS 2007), J. Machine
Learning Research - Proceedings Track 2, pages 35–42, 2007.

[8] D. M. Blei, A. Y. Ng, and M. I. Jordan. Latent dirichlet allocation. the Journal of machine Learning

research, 3:993–1022, 2003.

[9] R. P. Cabeen and D. H. Laidlaw. White matter supervoxel segmentation by axial dp-means clus-
tering. In Medical Computer Vision. Large Data in Medical Imaging, pages 95–104. Springer, 2014.

[10] H. Cetingul and R. Vidal. Intrinsic mean shift for clustering on stiefel and grassmann manifolds.
In Computer Vision and Pattern Recognition, 2009. CVPR 2009. IEEE Conference on, pages 1896–1902.
IEEE, 2009.

[11] Y. Chikuse. Statistics on special manifolds, volume 174. Springer Science & Business Media, 2012.

[12] D. Christie. Efﬁcient von Mises-Fisher concentration parameter estimation using Taylor series.

Journal of Statistical Computation and Simulation, 85(16):1–7, 2015.

[13] T. Cover and J. Thomas. Elements of Information Theory. John Wiley & Sons, New York, USA, 1991.

[14] A. Dempster, N. Laird, and D. Rubin. Maximum Likelihood from Incomplete Data Via the EM

Algorithm. Journal of the Royal Statistical Society, 39, 1977.

[15] I. S. Dhillon, E. M. Marcotte, and U. Roshan. Diametrical clustering for identifying anti-correlated

gene clusters. Bioinformatics, 19(13):1612–1619, 2003.

[16] I. S. Dhillon and D. S. Modha. Concept decompositions for large sparse text data using clustering.

Machine Learning, 42(1):143–175, January 2001.

[17] C. Elkan. Clustering documents with an exponential-family approximation of the dirichlet com-
pound multinomial distribution. In Proceedings of the 23rd international conference on Machine learn-
ing, pages 289–296. ACM, 2006.

[18] A. Erd´elyi, W. Magnus, F. Oberhettinger, and F. G. Tricomi. Higher transcendental functions, vol-

ume 1. McGraw Hill, 1953.

[19] Y. Fu, S. Yan, and T. S. Huang. Correlation metric for generalized feature extraction. Pattern

Analysis and Machine Intelligence, IEEE Transactions on, 30(12):2229–2235, 2008.

[20] M. A. Hasnat, O. Alata, and A. Tr´emeau. Unsupervised clustering of depth images using watson
mixture model. In Pattern Recognition (ICPR), 2014 22nd International Conference on, pages 214–219.
IEEE, 2014.

[21] K. Hornik and B. Gr ¨un. On maximum likelihood estimation of the concentration parameter of

von mises–ﬁsher distributions. Computational statistics, 29(5):945–957, 2014.

[22] R. Hosseini. Natural Image Modelling using Mixture Models with compression as an application. PhD

thesis, Berlin, Technische Universtit¨at Berlin, Diss., 2012, 2012.

[23] P. Kasarapu and L. Allison. Minimum message length estimation of mixtures of multivariate

Gaussian and von Mises-Fisher distributions. Machine Learning, pages 1–46, 2015.

[24] D. Lashkari, E. Vul, N. Kanwisher, and P. Golland. Discovering structure in the space of fmri

selectivity proﬁles. Neuroimage, 50(3):1085–1098, 2010.

[25] K. Mammasis, R. W. Stewart, and J. S. Thompson. Spatial fading correlation model using mixtures
of von mises ﬁsher distributions. Wireless Communications, IEEE Transactions on, 8(4):2046–2055,
2009.

11

[26] K. V. Mardia. Statistical Distributions in Scientiﬁc Work, volume 3, chapter Characteristics of direc-

tional distributions, pages 365–385. Reidel, Dordrecht, 1975.

[27] K. V. Mardia. Statistics of directional data.

J. Royal Statistical Society. Series B (Methodological),

37(3):349–393, 1975.

[28] K. V. Mardia and P. Jupp. Directional Statistics. John Wiley and Sons Ltd., second edition, 2000.
[29] M. Mash’al and R. Hosseini. K-means++ for Mixtures of von Mises-Fisher Distributions.
Information and Knowledge Technology (IKT), 2015 7th Conference on, pages 1–6. IEEE, 2015.

In

[30] T. McGraw, B. C. Vemuri, B. Yezierski, and T. Mareci. Von mises-ﬁsher mixture model of the
In Biomedical Imaging: Nano to Macro, 2006. 3rd IEEE International Symposium on,

diffusion odf.
pages 65–68. IEEE, 2006.

[31] R. J. Muirhead. Aspects of multivariate statistical theory. John Wiley, 1982.
[32] C. R. Rao. Linear Statistical Inference and its Applications. Wiley, New York, 2nd edition, 1973.
[33] E. Rasmussen. Clustering algorithms. In W. Frakes and R. Baeza-Yates, editors, Information Re-

trieval: Data Structures and Algorithms, pages 419–442. Prentice Hall, New Jersey, 1992.

[34] J. Reisinger, A. Waters, B. Silverthorn, and R. J. Mooney. Spherical topic models. In Proceedings of

the 27th International Conference on Machine Learning (ICML-10), pages 903–910, 2010.

[35] S. Ryali, T. Chen, K. Supekar, and V. Menon. A parcellation scheme based on von mises-ﬁsher
distributions and markov random ﬁelds for segmenting brain regions using resting-state fmri.
NeuroImage, 65:83–96, 2013.

[36] G. Salton. Automatic text processing: the transformation, analysis, and retrieval of information by com-

puter. Addison-Wesley (Reading MA), 1989.

[37] G. Salton and M. J. McGill. Introduction to Modern Retrieval. McGraw-Hill Book Company, 1983.
[38] S. Sra. Matrix Nearness Problems in Data Mining. PhD thesis, Univ. of Texas at Austin, 2007.
[39] S. Sra. A short note on parameter approximation for von Mises-Fisher distributions: and a fast

implementation of Is(x). Computational Statistics, Apr. 2009. Accepted.

[40] S. Sra and D. Karp. The multivariate Watson distribution: Maximum-likelihood estimation and

other aspects. Journal of Multivariate Analysis (JMVA), 114:256–269, 2013.

[41] J. Straub, J. Chang, O. Freifeld, and J. W. Fisher III. A dirichlet process mixture model for spherical
data. In Proceedings of the Eighteenth International Conference on Artiﬁcial Intelligence and Statistics,
pages 930–938, 2015.

[42] A. Strehl and J. Ghosh. Cluster Ensembles - A Knowledge Reuse Framework for Combining

Multiple Partitions. Journal of Machine Learning Research, 3:583–617, 2002.

[43] A. Tanabe, K. Fukumizu, S. Oba, T. Takenouchi, and S. Ishii. Parameter estimation for von Mises-

Fisher distributions. Computational Statistics, 22(1):145–157, 2007.

[44] H. Tang, S. M. Chu, and T. S. Huang. Generative model-based speaker clustering via mixture of
von mises-ﬁsher distributions. In Acoustics, Speech and Signal Processing, 2009. ICASSP 2009. IEEE
International Conference on, pages 4101–4104. IEEE, 2009.

[45] D. E. Tyler.

Statistical analysis for the angular central gaussian distribution on the sphere.

Biometrika, 74(3):579–589, 1987.

[46] G. S. Watson. The statistics of orientation data. The Journal of Geology, pages 786–797, 1966.

12

