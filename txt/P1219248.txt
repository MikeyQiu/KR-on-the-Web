6
1
0
2
 
c
e
D
 
2
1
 
 
]

V
C
.
s
c
[
 
 
1
v
8
2
6
3
0
.
2
1
6
1
:
v
i
X
r
a

VIBIKNet: Visual Bidirectional Kernelized
Network for Visual Question Answering

Marc Bola˜nos1,2, ´Alvaro Peris3, Francisco Casacuberta3, Petia Radeva1,2

1 Universitat de Barcelona, Barcelona, Spain,
marc.bolanos@ub.edu, petia.ivanova@ub.edu
2 Computer Vision Center, Bellaterra, Spain,
3 PRHLT Research Center, Universitat Polit`ecnica de Val`encia, Val`encia, Spain,
lvapeab@prhlt.upv.es, fcn@prhlt.upv.es

Abstract. In this paper, we address the problem of visual question
answering by proposing a novel model, called VIBIKNet. Our model
is based on integrating Kernelized Convolutional Neural Networks and
Long-Short Term Memory units to generate an answer given a question
about an image. We prove that VIBIKNet is an optimal trade-oﬀ be-
tween accuracy and computational load, in terms of memory and time
consumption. We validate our method on the VQA challenge dataset
and compare it to the top performing methods in order to illustrate its
performance and speed.

Keywords: Visual Question Answering, Convolutional Neural Networks,
Long Short-Term Memory Networks

1

Introduction

Deep learning has proven to be applicable to several problems and data modal-
ities (e.g. object detection, speech recognition, machine translation, etc.). Fur-
thermore, it has been able to set new records, beating the state of the art in
several artiﬁcial intelligence areas. Now, new machine learning problems may be
tackled, taking proﬁt from the capabilities of deep learning methods for combin-
ing multiple data modalities and be end-to-end trainable, thus, having potential
to enable new research and application areas. Some multimodal problems are
image captioning [18], video captioning [12] or multimodal machine translation
and crosslingual image captioning [15]. In this work, we address the challenging
Visual Question Answering (VQA) [1] problem.

From the visual modality perspective, a clear proposal for processing im-
ages are Convolutional Neural Networks (CNNs) [17]. CNNs are a powerful tool,
not only for image classiﬁcation, but also for feature extraction. Nevertheless,
they are not fully scale and rotation invariant, unless they have been speciﬁcally
trained with enough varied examples [3]. Furthermore, this invariance problem
gets more acute in scene images, which are composed of multiple elements at

II

possibly diﬀerent rotations and scales. In order to tackle this problem, Liu pro-
posed in [9] a Kernelized approach for learning a rich representation for images
composed of multiple objects in any possible rotation and scale.

From the textual modality perspective, Recurrent Neural Networks (RNNs)
have shown to be eﬀective sequence modelers. The use of gated units, such as
Long Short-Term Memory (LSTM) [6], allows to properly process long sequences.
In the last years, LSTM networks have been used in a wide variety of tasks, such
as machine translation [16] or image and video captioning [18,12].

After the appearance of the VQA dataset [1] and the organization of the
VQA Challenge, several models appeared addressing this problem. Some notable
examples are the ones by Kim et al. [7], where image and question was separately
described by a CNN and by a RNN, and then a Multimodal Residual Network
(MRN) was used for combining both modalities. Fukui et al. [4] used a CNN for
describing the image and a two-layered LSTM for the question; followed by a
Multimodal Compact Bilinear Pooling (MCB) for fusion. Nam et al. [10], after
describing the input image and question, applied a powerful Dual Attention
Network (DAN) for fusing both modalities.

In this work, we propose a model for open-ended VQA which uses the most
powerful state-of-the-art methods for image and text characterization. More pre-
cisely, we use a Kernelized CNN (KCNN) for image characterization, which takes
proﬁt from detecting and characterizing all objects in the image for generating a
combined feature descriptor. For question modeling, we apply pre-trained word
embeddings from Glove [11], taking advantage from the transfer learning capa-
bilities of neural networks; and a Bidirectional LSTM (BLSTM), able to learn
rich question information by taking into account temporal relationships both
in past-to-future and future-to-past manner. Next, we fuse both modalities and
ﬁnish by applying a classiﬁcation model for obtaining the resulting answer.

This paper is organized as follows: in Section 2, we present the proposed
method, VIBIKNet. In Section 3, we describe the dataset and the evaluation
metrics used. We evaluate our model and compare it with the state of the art.
Finally, in Section 4, we give some concluding remarks and some directions of
future work.

2 VIBIKNet

In this section, we describe our VQA system, named Visual Bidirectional Ker-
nelized Network (VIBIKNet), whose general scheme can be seen in Fig. 1. We
also make public the complete source code4 for reproducing the results obtained.
The VQA problem consists in computing a function f which, having as input

an image X and a related question Q, produces a textual answer A:

f (X, Q) = A

(1)

where Q and A are two variable-sized sequences of words, which can be formal-
ized as Q = q1, q2, ..., qN and A = a1, a2, ..., aM , respectively.

4 https://github.com/MarcBS/VIBIKNet

III

We formulate the problem under a probabilistic framework. Given the clear
multimodality of it, ﬁrst, we propose to extract independent representations for
image and question. For obtaining a rich representation of the image, we apply a
KCNN [9] (Section 2.1). We process the question with a BLSTM network (Sec-
tion 2.2), which considers the full question context. Next, we need to combine
modalities into a single representation. To this purpose we propose using a sim-
ple, yet eﬀective, element-wise summation (see Section 2.3) after embedding the
visual information into the textual one. Finally, we predict the output answer,
which can be estimated with a simple classiﬁer for the dataset at hand.

Fig. 1: General scheme of the proposed VIBIKNet model.

2.1 KCNN for image representation

A key factor that makes humans able to understand what happens on a picture
is the ability to distinguish each of the present elements in it, regarding any
possible scale or orientation, together with the relationships and actions that
are taking place between them. When we talk about elements we refer to any
object, person or animal appearing in the images.

Following this idea, the so-called Kernelized Deep Convolutional Neural Net-
work method [9] has the ability to capture all these aspects. In Fig. 2 we show
the general pipeline of steps for extracting KCNN features from images.

More formally, given two images, X and Y , and a set of variable-sized regions
for each of them X = {x1, x2, ..., xn}, and Y = {y1, y2, ..., ym}, we can deﬁne
their similarity given by a kernel K as:

K(X, Y ) = <

ψ(xi),

ψ(yj) > = < Ψ (X), Ψ (Y ) >

(2)

(cid:88)

xi∈X

(cid:88)

yj ∈Y

where the similarity between two regions is computed by their inner product,
ψ denotes a linear/non-linear transformation and Ψ denotes the ﬁnal vectorial
image representation composed by the set of initial regions.

Going back to the general scheme applied, initially, an object detector is used
for extracting object candidate bounding boxes from each image, xi. After that,
and in order to provide robustness to the point of view, a set of rotations are
applied separately to each of the extracted image regions before extracting their

IV

Fig. 2: Steps for the extraction of Kernelized CNN features.

image features through a CNN, ψ in Eq. (2). Next, a PCA transformation is ap-
plied to the vectors from all image regions. In order to aggregate all vectors from
a single image, we learn a Fisher kernel [13] which, similarly to a Bag-of-Words
approach [14], jointly models the features distribution by learning a Gaussian
Mixture Model (GMM), namely Ψ in Eq. (2). In order to have manageable vec-
tor sizes, an additional PCA is applied to the resulting aggregated vectors. This
produces an l-size representation of the image, which is ﬁnally normalized in
order to obtain the ﬁnal representation of the image (Φ(X)).

2.2 Bidirectional LSTM for question representation

As stated above, a question Q = q1, q2, ..., qN is a variable-sized sequence of
words. We use a powerful sequence modeler such a RNN for characterizing Q:
each word is inputted to the system following a 1-hot codiﬁcation. Next, we
project each word to a continuous space by means of a learnable word embedding
matrix. In order to eﬀectively train our word embedding model, we start from
pre-trained word vectors provided by Glove [11] and we ﬁne-tune them with the
questions corpus. Words not included in Glove are randomly initialized.

The sequence of word embeddings is then inputted to a bidirectional RNN.
Bidirectional RNNs are made up of two independent recurrent layers, each of
them analyzing the input sequence in one direction. Hence, the forward layer
processes the sequence from the left to the right while the backward layer process
it from the right to the left. In our case, each recurrent layer is an LSTM layer.
LSTM networks allow to deal with the vanishing gradient problem. These
layers maintain two internal states, namely the hidden state (h) and the mem-
ory state (c). The amount of information that ﬂows through the network is
modulated by the input (i), output (o) and forget (f ) gates. Refer to [5] for a
more in-depth review of the LSTM networks.

For obtaining a representation of the complete question, we concatenate the

last hidden state from the forward and backward layers:

(3)
N ∈ Rm are the last forward and backward hidden states,
where hf
of size m. [· , ·] denotes vectorial concatenation and Q is the ﬁnal representation

N ∈ Rm and hb

Q = [hf

N , hb
N ]

V

(4)

(5)

(6)

of Q. Since each LSTM layer processes the complete input sequence in one
direction, Q contains both left-to-right and right-to-left dependencies.

2.3 Multimodal fusion and prediction

Multimodal fusion. Our problem involves information from two diﬀerent sources.
Hence, we must combine both image and text, given that image X is represented
by a KCNN as a feature vector Φ(X) of size l, and that question Q is represented
as Q, of size 2m.

In order to properly combine both modalities, we ﬁrst linearly project the
image representation to the same space as the question representation, by means
of a visual embedding matrix:

X = WmΦ(X)

M = X ⊕ Q

where Wm is a 2m × l matrix, jointly estimated with the rest of the model.

Then, a fusion operation is applied on both modalities, X and Q:

where ⊕ is the fusion operator and M is the joint, multimodal representation of
the image and question.

Prediction. Given the nature of the task at hand, a typical answer has few
words. More precisely, in the VQA dataset (Section 3.1), the 89.3% of the answers
are single-worded; and the 99.0% of the answers have three or less words [1].

Therefore, we treat our problem as a classiﬁcation task over the K most
repeated answers. The obtained fusion of vision and text (M) is inputted to
a fully-connected layer with the set of answers as output. Applying a softmax
activation, we deﬁne a probability over the possible answers. At test time, we
choose the answer ˆa with the highest probability:

ˆa = arg max

p(a|Q, X)

a∈K

3 Experiments and results

In this section we set up the experimentation and evaluation procedure. More-
over, we study and discuss the obtained results in the VQA Challenge5.

3.1 Dataset and evaluation

We evaluate our model on the VQA dataset [1], on the real open-ended task. The
dataset consists of approximately 200,000 images from the MSCOCO dataset [2].
Each image has three questions associated and each question has ten answers,
which were provided by human annotators. We used the default splits for the

5 The VQA Challenge leaderboard is available at http://visualqa.org/roe.html

VI

task: Train (80,000 images) for training, Test-Dev (40,000 images) for validating
the model and Test-Standard (80,000 images) for testing it. An additional parti-
tion, Test-Challenge, was used for evaluating the model at the VQA Challenge.
We followed the VQA evaluation protocol [1], which computes an accuracy

between the system output (ˆa) and the answers provided by the humans:

Acc(ˆa) = min

(cid:110) # humans that said ˆa
3

(cid:111)

, 1

(7)

3.2 Experimental setup

We set the model hyperparameters according to empirical results. For extracting
the KCNN features, we used: EdgeBoxes [19] for proposing 100 object regions,
a set of 8 diﬀerent object rotations of R = {0, 45, 90, 135, 180, 225, 270, 315}
degrees, the last FC layer of GoogLeNet [17] (1024-dimensional) for extracting
features on each object, applied a PCA of dimensions 128 before, and l = 1024
after the GMM, respectively, and learned 128 gaussians during GMM training.
Since we used Glove vectors, the word embedding size was ﬁxed to 300.
The BLSTM network had m = 250 units in each layer, which accounts for a
total 500 units. The visual embedding had a size of 2m = 500. We applied a
classiﬁcation over the 2,000 most frequent answers, which covered a 86.8% of
the whole dataset. As fusion operator (⊕ in Eq. (5)) we tested element-wise
summation and element-wise concatenation. Following [4], we also tested MCB
pooling as ⊕.

We used the Adam [8] optimizer with an initial learning rate of 10−3. As
regularization strategy, we only applied dropout before the classiﬁcation layer.

3.3 Experimental results

Table 1 shows the accuracies of variations of our model (top) and of other works
(bottom) for the Test-Dev and Test-Standard splits. Results are separated ac-
cording to the type of answer, namely yes/no (Y/N), numerical (Num.) and
other (Other) answers. We also report the overall accuracy of the task (All).

It can be seen that both summation and concatenation fusion strategies per-
formed similarly. In terms of performance, MCB was also similar to them. Nev-
ertheless, MCB was much more resource-demanding: while the average time per
epoch of summation was 320s, MCB required approximately 5,800s. Moreover,
adding a fully-connected layer after text characterization and before fusion did
not help, meaning that the visual embedding mechanism suﬃces for providing a
robust visual-text embedding. Regarding image characterization, if we compare
the results using ResNet-152 vs GoogLeNet-KCNN, we can see that even using a
less powerful CNN architecture, the adoption of the KCNN representation pro-
vided better results than simply using the ResNet output. Finally, it is worth
noting that we used a single model for prediction. The use of network ensembles
typically oﬀer a performance boost [4]. In Fig. 3 we can see some qualitative
examples of our methodology.

Table 1. Proposed models compared to the state of the art. G stands for GoogLeNet, R
for ResNet-152, K for KCNN, L for LSTM, BL for BLSTM, FC for fully-connected layer
on text before fusing, sum for fusion by summation, cat for fusion by concatenation,
+val for training using train+val, and VIBIKNet is ”G-K BL sum”. Some results are
unavailable (–).

VII

Test-Dev [%]

Test-Standard [%]

Y/N Num. Other All Y/N Num. Other All
–
G-K L sum
79.0
–
G-K BL FC sum 78.6
–
79.0
G-K BL FC cat
–
77.8
R BL sum
–
79.0
G-K BL cat
79.2
G-K BL MCB
–
54.9
79.1
VIBIKNet
55.8
–
VIBIKNet +val
61.8
–
MRN [7]
64.2
83.0
DAN [10]
82.3
MCB [4]
–
83.3
–
Human [1]

38.2
33.6
33.6
30.6
33.4
33.2
38.3
–
–
39.1
37.2
–

52.9
52.1
53.0
52.3
53.0
52.5
53.1
–
–
64.3
65.4
–

–
–
–
–
–
–
78.3
78.9
82.4
82.8
–
95.8

33.7
36.9
38.3
38.6
38.5
37.5
33.5
–
–
53.9
57.4
–

–
–
–
–
–
–
38.9
36.3
38.2
38.1
–
83.4

–
–
–
–
–
–
39.0
40.3
49.4
54.0
–
72.7

Fig. 3: Examples of the predictions provided by VIBIKNet; in green correctly
predicted and in red wrongly predicted answers.

4 Conclusions and Future Work

We proposed a method for VQA which oﬀers a trade-oﬀ between the accuracy
and the computational cost of the model. We have proven that kernelized meth-
ods for image representation based on CNNs are very powerful for the problem
at hand. Additionally, we have shown that using simple fusion methods like sum-
mation or concatenation can produce similar results to more elaborate methods
at the same time that provide a very eﬃcient computation. Nevertheless, we are
aware that performing the multimodal fusion at deeper levels may be beneﬁcial.
As future directions, we aim to delve into better fusion strategies but keeping
a low computational cost. We extracted KCNN features based on local represen-
tations (objects appearance), but using them together with end-to-end trainable
attention mechanisms may lead to higher performances [4].

Acknowledgments. This work was partially funded by TIN2015-66951-C2-
1-R, SGR 1219, CERCA Programme / Generalitat de Catalunya, CoMUN-

VIII

HaT - TIN2015-70924-C2-1-R (MINECO/FEDER), PrometeoII/2014/030 and
R-MIPRCV. P. Radeva is partially supported by ICREA Academia2014. We
acknowledge NVIDIA Corporation for the donation of a GPU used in this work.
References

1. S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra, C. Lawrence Zitnick, and
D. Parikh. VQA: Visual question answering. In ICCV, pages 2425–2433, 2015.
2. X. Chen, H. Fang, T.-Y. Lin, R. Vedantam, S. Gupta, P. Doll´ar, and C. L.
Zitnick. Microsoft COCO captions: Data collection and evaluation server.
arXiv:1504.00325, 2015.

3. G. Cheng, P. Zhou, and J. Han. Rifd-cnn: Rotation-invariant and ﬁsher discrimina-
tive convolutional neural networks for object detection. In CVPR, pages 2884–2893,
2016.

4. A. Fukui, D. H. Park, D. Yang, A. Rohrbach, T. Darrell, and M. Rohrbach. Multi-
modal compact bilinear pooling for visual question answering and visual grounding.
arXiv:1606.01847, 2016.

5. F. A. Gers, J. Schmidhuber, and F. Cummins. Learning to forget: Continual

prediction with LSTM. Neural computation, 12(10):2451–2471, 2000.

6. S. Hochreiter and J. Schmidhuber. Long short-term memory. Neural computation,

9(8):1735–1780, 1997.

7. J.-H. Kim, S.-W. Lee, D.-H. Kwak, M.-O. Heo, J. Kim, J.-W. Ha, and B.-T. Zhang.

Multimodal residual learning for visual qa. arXiv:1606.01455, 2016.

8. D. P. Kingma and J. Ba. Adam: A method for stochastic optimization.

9. Z. Liu. Kernelized deep convolutional neural network for describing complex im-

arXiv:1412.6980, 2014.

ages. arXiv:1509.04581, 2015.

10. H. Nam, J.-W. Ha, and J. Kim. Dual attention networks for multimodal reasoning

and matching. arXiv:1611.00471, 2016.

11. J. Pennington, R. Socher, and C. D. Manning. Glove: Global vectors for word

representation. In EMNLP, pages 1532–1543, 2014.

12. ´A. Peris, M. Bola˜nos, P. Radeva, and F. Casacuberta. Video description using
bidirectional recurrent neural networks. In ICANN, volume 2, pages 3–11, 2016.

13. F. Perronnin, J. S´anchez, and T. Mensink. Improving the ﬁsher kernel for large-

scale image classiﬁcation. In ECCV, pages 143–156. Springer, 2010.

14. J. Sivic and A. Zisserman. Eﬃcient visual search of videos cast as text retrieval.

PAMI, 31(4):591–606, 2009.

15. L. Specia, S. Frank, K. Sima’an, and D. Elliott. A shared task on multimodal
machine translation and crosslingual image description. In Proceedings of the First
Conference on Machine Translation, pages 543–553. ACL, 2016.

16. I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to sequence learning with neural

networks. In NIPS, volume 27, pages 3104–3112. 2014.

17. C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan, V. Van-
houcke, and A. Rabinovich. Going deeper with convolutions. In CVPR, pages 1–9,
2015.

18. K. Xu, J. Ba, R. Kiros, A. Courville, R. Salakhutdinov, R. Zemel, and Y. Ben-
gio. Show, attend and tell: Neural image caption generation with visual attention.
arXiv:1502.03044, 2015.

19. C. L. Zitnick and P. Doll´ar. Edge boxes: Locating object proposals from edges. In

ECCV, 2014.

6
1
0
2
 
c
e
D
 
2
1
 
 
]

V
C
.
s
c
[
 
 
1
v
8
2
6
3
0
.
2
1
6
1
:
v
i
X
r
a

VIBIKNet: Visual Bidirectional Kernelized
Network for Visual Question Answering

Marc Bola˜nos1,2, ´Alvaro Peris3, Francisco Casacuberta3, Petia Radeva1,2

1 Universitat de Barcelona, Barcelona, Spain,
marc.bolanos@ub.edu, petia.ivanova@ub.edu
2 Computer Vision Center, Bellaterra, Spain,
3 PRHLT Research Center, Universitat Polit`ecnica de Val`encia, Val`encia, Spain,
lvapeab@prhlt.upv.es, fcn@prhlt.upv.es

Abstract. In this paper, we address the problem of visual question
answering by proposing a novel model, called VIBIKNet. Our model
is based on integrating Kernelized Convolutional Neural Networks and
Long-Short Term Memory units to generate an answer given a question
about an image. We prove that VIBIKNet is an optimal trade-oﬀ be-
tween accuracy and computational load, in terms of memory and time
consumption. We validate our method on the VQA challenge dataset
and compare it to the top performing methods in order to illustrate its
performance and speed.

Keywords: Visual Question Answering, Convolutional Neural Networks,
Long Short-Term Memory Networks

1

Introduction

Deep learning has proven to be applicable to several problems and data modal-
ities (e.g. object detection, speech recognition, machine translation, etc.). Fur-
thermore, it has been able to set new records, beating the state of the art in
several artiﬁcial intelligence areas. Now, new machine learning problems may be
tackled, taking proﬁt from the capabilities of deep learning methods for combin-
ing multiple data modalities and be end-to-end trainable, thus, having potential
to enable new research and application areas. Some multimodal problems are
image captioning [18], video captioning [12] or multimodal machine translation
and crosslingual image captioning [15]. In this work, we address the challenging
Visual Question Answering (VQA) [1] problem.

From the visual modality perspective, a clear proposal for processing im-
ages are Convolutional Neural Networks (CNNs) [17]. CNNs are a powerful tool,
not only for image classiﬁcation, but also for feature extraction. Nevertheless,
they are not fully scale and rotation invariant, unless they have been speciﬁcally
trained with enough varied examples [3]. Furthermore, this invariance problem
gets more acute in scene images, which are composed of multiple elements at

II

possibly diﬀerent rotations and scales. In order to tackle this problem, Liu pro-
posed in [9] a Kernelized approach for learning a rich representation for images
composed of multiple objects in any possible rotation and scale.

From the textual modality perspective, Recurrent Neural Networks (RNNs)
have shown to be eﬀective sequence modelers. The use of gated units, such as
Long Short-Term Memory (LSTM) [6], allows to properly process long sequences.
In the last years, LSTM networks have been used in a wide variety of tasks, such
as machine translation [16] or image and video captioning [18,12].

After the appearance of the VQA dataset [1] and the organization of the
VQA Challenge, several models appeared addressing this problem. Some notable
examples are the ones by Kim et al. [7], where image and question was separately
described by a CNN and by a RNN, and then a Multimodal Residual Network
(MRN) was used for combining both modalities. Fukui et al. [4] used a CNN for
describing the image and a two-layered LSTM for the question; followed by a
Multimodal Compact Bilinear Pooling (MCB) for fusion. Nam et al. [10], after
describing the input image and question, applied a powerful Dual Attention
Network (DAN) for fusing both modalities.

In this work, we propose a model for open-ended VQA which uses the most
powerful state-of-the-art methods for image and text characterization. More pre-
cisely, we use a Kernelized CNN (KCNN) for image characterization, which takes
proﬁt from detecting and characterizing all objects in the image for generating a
combined feature descriptor. For question modeling, we apply pre-trained word
embeddings from Glove [11], taking advantage from the transfer learning capa-
bilities of neural networks; and a Bidirectional LSTM (BLSTM), able to learn
rich question information by taking into account temporal relationships both
in past-to-future and future-to-past manner. Next, we fuse both modalities and
ﬁnish by applying a classiﬁcation model for obtaining the resulting answer.

This paper is organized as follows: in Section 2, we present the proposed
method, VIBIKNet. In Section 3, we describe the dataset and the evaluation
metrics used. We evaluate our model and compare it with the state of the art.
Finally, in Section 4, we give some concluding remarks and some directions of
future work.

2 VIBIKNet

In this section, we describe our VQA system, named Visual Bidirectional Ker-
nelized Network (VIBIKNet), whose general scheme can be seen in Fig. 1. We
also make public the complete source code4 for reproducing the results obtained.
The VQA problem consists in computing a function f which, having as input

an image X and a related question Q, produces a textual answer A:

f (X, Q) = A

(1)

where Q and A are two variable-sized sequences of words, which can be formal-
ized as Q = q1, q2, ..., qN and A = a1, a2, ..., aM , respectively.

4 https://github.com/MarcBS/VIBIKNet

III

We formulate the problem under a probabilistic framework. Given the clear
multimodality of it, ﬁrst, we propose to extract independent representations for
image and question. For obtaining a rich representation of the image, we apply a
KCNN [9] (Section 2.1). We process the question with a BLSTM network (Sec-
tion 2.2), which considers the full question context. Next, we need to combine
modalities into a single representation. To this purpose we propose using a sim-
ple, yet eﬀective, element-wise summation (see Section 2.3) after embedding the
visual information into the textual one. Finally, we predict the output answer,
which can be estimated with a simple classiﬁer for the dataset at hand.

Fig. 1: General scheme of the proposed VIBIKNet model.

2.1 KCNN for image representation

A key factor that makes humans able to understand what happens on a picture
is the ability to distinguish each of the present elements in it, regarding any
possible scale or orientation, together with the relationships and actions that
are taking place between them. When we talk about elements we refer to any
object, person or animal appearing in the images.

Following this idea, the so-called Kernelized Deep Convolutional Neural Net-
work method [9] has the ability to capture all these aspects. In Fig. 2 we show
the general pipeline of steps for extracting KCNN features from images.

More formally, given two images, X and Y , and a set of variable-sized regions
for each of them X = {x1, x2, ..., xn}, and Y = {y1, y2, ..., ym}, we can deﬁne
their similarity given by a kernel K as:

K(X, Y ) = <

ψ(xi),

ψ(yj) > = < Ψ (X), Ψ (Y ) >

(2)

(cid:88)

xi∈X

(cid:88)

yj ∈Y

where the similarity between two regions is computed by their inner product,
ψ denotes a linear/non-linear transformation and Ψ denotes the ﬁnal vectorial
image representation composed by the set of initial regions.

Going back to the general scheme applied, initially, an object detector is used
for extracting object candidate bounding boxes from each image, xi. After that,
and in order to provide robustness to the point of view, a set of rotations are
applied separately to each of the extracted image regions before extracting their

IV

Fig. 2: Steps for the extraction of Kernelized CNN features.

image features through a CNN, ψ in Eq. (2). Next, a PCA transformation is ap-
plied to the vectors from all image regions. In order to aggregate all vectors from
a single image, we learn a Fisher kernel [13] which, similarly to a Bag-of-Words
approach [14], jointly models the features distribution by learning a Gaussian
Mixture Model (GMM), namely Ψ in Eq. (2). In order to have manageable vec-
tor sizes, an additional PCA is applied to the resulting aggregated vectors. This
produces an l-size representation of the image, which is ﬁnally normalized in
order to obtain the ﬁnal representation of the image (Φ(X)).

2.2 Bidirectional LSTM for question representation

As stated above, a question Q = q1, q2, ..., qN is a variable-sized sequence of
words. We use a powerful sequence modeler such a RNN for characterizing Q:
each word is inputted to the system following a 1-hot codiﬁcation. Next, we
project each word to a continuous space by means of a learnable word embedding
matrix. In order to eﬀectively train our word embedding model, we start from
pre-trained word vectors provided by Glove [11] and we ﬁne-tune them with the
questions corpus. Words not included in Glove are randomly initialized.

The sequence of word embeddings is then inputted to a bidirectional RNN.
Bidirectional RNNs are made up of two independent recurrent layers, each of
them analyzing the input sequence in one direction. Hence, the forward layer
processes the sequence from the left to the right while the backward layer process
it from the right to the left. In our case, each recurrent layer is an LSTM layer.
LSTM networks allow to deal with the vanishing gradient problem. These
layers maintain two internal states, namely the hidden state (h) and the mem-
ory state (c). The amount of information that ﬂows through the network is
modulated by the input (i), output (o) and forget (f ) gates. Refer to [5] for a
more in-depth review of the LSTM networks.

For obtaining a representation of the complete question, we concatenate the

last hidden state from the forward and backward layers:

(3)
N ∈ Rm are the last forward and backward hidden states,
where hf
of size m. [· , ·] denotes vectorial concatenation and Q is the ﬁnal representation

N ∈ Rm and hb

Q = [hf

N , hb
N ]

V

(4)

(5)

(6)

of Q. Since each LSTM layer processes the complete input sequence in one
direction, Q contains both left-to-right and right-to-left dependencies.

2.3 Multimodal fusion and prediction

Multimodal fusion. Our problem involves information from two diﬀerent sources.
Hence, we must combine both image and text, given that image X is represented
by a KCNN as a feature vector Φ(X) of size l, and that question Q is represented
as Q, of size 2m.

In order to properly combine both modalities, we ﬁrst linearly project the
image representation to the same space as the question representation, by means
of a visual embedding matrix:

X = WmΦ(X)

M = X ⊕ Q

where Wm is a 2m × l matrix, jointly estimated with the rest of the model.

Then, a fusion operation is applied on both modalities, X and Q:

where ⊕ is the fusion operator and M is the joint, multimodal representation of
the image and question.

Prediction. Given the nature of the task at hand, a typical answer has few
words. More precisely, in the VQA dataset (Section 3.1), the 89.3% of the answers
are single-worded; and the 99.0% of the answers have three or less words [1].

Therefore, we treat our problem as a classiﬁcation task over the K most
repeated answers. The obtained fusion of vision and text (M) is inputted to
a fully-connected layer with the set of answers as output. Applying a softmax
activation, we deﬁne a probability over the possible answers. At test time, we
choose the answer ˆa with the highest probability:

ˆa = arg max

p(a|Q, X)

a∈K

3 Experiments and results

In this section we set up the experimentation and evaluation procedure. More-
over, we study and discuss the obtained results in the VQA Challenge5.

3.1 Dataset and evaluation

We evaluate our model on the VQA dataset [1], on the real open-ended task. The
dataset consists of approximately 200,000 images from the MSCOCO dataset [2].
Each image has three questions associated and each question has ten answers,
which were provided by human annotators. We used the default splits for the

5 The VQA Challenge leaderboard is available at http://visualqa.org/roe.html

VI

task: Train (80,000 images) for training, Test-Dev (40,000 images) for validating
the model and Test-Standard (80,000 images) for testing it. An additional parti-
tion, Test-Challenge, was used for evaluating the model at the VQA Challenge.
We followed the VQA evaluation protocol [1], which computes an accuracy

between the system output (ˆa) and the answers provided by the humans:

Acc(ˆa) = min

(cid:110) # humans that said ˆa
3

(cid:111)

, 1

(7)

3.2 Experimental setup

We set the model hyperparameters according to empirical results. For extracting
the KCNN features, we used: EdgeBoxes [19] for proposing 100 object regions,
a set of 8 diﬀerent object rotations of R = {0, 45, 90, 135, 180, 225, 270, 315}
degrees, the last FC layer of GoogLeNet [17] (1024-dimensional) for extracting
features on each object, applied a PCA of dimensions 128 before, and l = 1024
after the GMM, respectively, and learned 128 gaussians during GMM training.
Since we used Glove vectors, the word embedding size was ﬁxed to 300.
The BLSTM network had m = 250 units in each layer, which accounts for a
total 500 units. The visual embedding had a size of 2m = 500. We applied a
classiﬁcation over the 2,000 most frequent answers, which covered a 86.8% of
the whole dataset. As fusion operator (⊕ in Eq. (5)) we tested element-wise
summation and element-wise concatenation. Following [4], we also tested MCB
pooling as ⊕.

We used the Adam [8] optimizer with an initial learning rate of 10−3. As
regularization strategy, we only applied dropout before the classiﬁcation layer.

3.3 Experimental results

Table 1 shows the accuracies of variations of our model (top) and of other works
(bottom) for the Test-Dev and Test-Standard splits. Results are separated ac-
cording to the type of answer, namely yes/no (Y/N), numerical (Num.) and
other (Other) answers. We also report the overall accuracy of the task (All).

It can be seen that both summation and concatenation fusion strategies per-
formed similarly. In terms of performance, MCB was also similar to them. Nev-
ertheless, MCB was much more resource-demanding: while the average time per
epoch of summation was 320s, MCB required approximately 5,800s. Moreover,
adding a fully-connected layer after text characterization and before fusion did
not help, meaning that the visual embedding mechanism suﬃces for providing a
robust visual-text embedding. Regarding image characterization, if we compare
the results using ResNet-152 vs GoogLeNet-KCNN, we can see that even using a
less powerful CNN architecture, the adoption of the KCNN representation pro-
vided better results than simply using the ResNet output. Finally, it is worth
noting that we used a single model for prediction. The use of network ensembles
typically oﬀer a performance boost [4]. In Fig. 3 we can see some qualitative
examples of our methodology.

Table 1. Proposed models compared to the state of the art. G stands for GoogLeNet, R
for ResNet-152, K for KCNN, L for LSTM, BL for BLSTM, FC for fully-connected layer
on text before fusing, sum for fusion by summation, cat for fusion by concatenation,
+val for training using train+val, and VIBIKNet is ”G-K BL sum”. Some results are
unavailable (–).

VII

Test-Dev [%]

Test-Standard [%]

Y/N Num. Other All Y/N Num. Other All
–
G-K L sum
79.0
–
G-K BL FC sum 78.6
–
79.0
G-K BL FC cat
–
77.8
R BL sum
–
79.0
G-K BL cat
79.2
G-K BL MCB
–
54.9
79.1
VIBIKNet
55.8
–
VIBIKNet +val
61.8
–
MRN [7]
64.2
83.0
DAN [10]
82.3
MCB [4]
–
83.3
–
Human [1]

38.2
33.6
33.6
30.6
33.4
33.2
38.3
–
–
39.1
37.2
–

52.9
52.1
53.0
52.3
53.0
52.5
53.1
–
–
64.3
65.4
–

–
–
–
–
–
–
78.3
78.9
82.4
82.8
–
95.8

33.7
36.9
38.3
38.6
38.5
37.5
33.5
–
–
53.9
57.4
–

–
–
–
–
–
–
39.0
40.3
49.4
54.0
–
72.7

–
–
–
–
–
–
38.9
36.3
38.2
38.1
–
83.4

Fig. 3: Examples of the predictions provided by VIBIKNet; in green correctly
predicted and in red wrongly predicted answers.

4 Conclusions and Future Work

We proposed a method for VQA which oﬀers a trade-oﬀ between the accuracy
and the computational cost of the model. We have proven that kernelized meth-
ods for image representation based on CNNs are very powerful for the problem
at hand. Additionally, we have shown that using simple fusion methods like sum-
mation or concatenation can produce similar results to more elaborate methods
at the same time that provide a very eﬃcient computation. Nevertheless, we are
aware that performing the multimodal fusion at deeper levels may be beneﬁcial.
As future directions, we aim to delve into better fusion strategies but keeping
a low computational cost. We extracted KCNN features based on local represen-
tations (objects appearance), but using them together with end-to-end trainable
attention mechanisms may lead to higher performances [4].

Acknowledgments. This work was partially funded by TIN2015-66951-C2-
1-R, SGR 1219, CERCA Programme / Generalitat de Catalunya, CoMUN-

VIII

HaT - TIN2015-70924-C2-1-R (MINECO/FEDER), PrometeoII/2014/030 and
R-MIPRCV. P. Radeva is partially supported by ICREA Academia2014. We
acknowledge NVIDIA Corporation for the donation of a GPU used in this work.
References

1. S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra, C. Lawrence Zitnick, and
D. Parikh. VQA: Visual question answering. In ICCV, pages 2425–2433, 2015.
2. X. Chen, H. Fang, T.-Y. Lin, R. Vedantam, S. Gupta, P. Doll´ar, and C. L.
Zitnick. Microsoft COCO captions: Data collection and evaluation server.
arXiv:1504.00325, 2015.

3. G. Cheng, P. Zhou, and J. Han. Rifd-cnn: Rotation-invariant and ﬁsher discrimina-
tive convolutional neural networks for object detection. In CVPR, pages 2884–2893,
2016.

4. A. Fukui, D. H. Park, D. Yang, A. Rohrbach, T. Darrell, and M. Rohrbach. Multi-
modal compact bilinear pooling for visual question answering and visual grounding.
arXiv:1606.01847, 2016.

5. F. A. Gers, J. Schmidhuber, and F. Cummins. Learning to forget: Continual

prediction with LSTM. Neural computation, 12(10):2451–2471, 2000.

6. S. Hochreiter and J. Schmidhuber. Long short-term memory. Neural computation,

9(8):1735–1780, 1997.

7. J.-H. Kim, S.-W. Lee, D.-H. Kwak, M.-O. Heo, J. Kim, J.-W. Ha, and B.-T. Zhang.

Multimodal residual learning for visual qa. arXiv:1606.01455, 2016.

8. D. P. Kingma and J. Ba. Adam: A method for stochastic optimization.

9. Z. Liu. Kernelized deep convolutional neural network for describing complex im-

arXiv:1412.6980, 2014.

ages. arXiv:1509.04581, 2015.

10. H. Nam, J.-W. Ha, and J. Kim. Dual attention networks for multimodal reasoning

and matching. arXiv:1611.00471, 2016.

11. J. Pennington, R. Socher, and C. D. Manning. Glove: Global vectors for word

representation. In EMNLP, pages 1532–1543, 2014.

12. ´A. Peris, M. Bola˜nos, P. Radeva, and F. Casacuberta. Video description using
bidirectional recurrent neural networks. In ICANN, volume 2, pages 3–11, 2016.

13. F. Perronnin, J. S´anchez, and T. Mensink. Improving the ﬁsher kernel for large-

scale image classiﬁcation. In ECCV, pages 143–156. Springer, 2010.

14. J. Sivic and A. Zisserman. Eﬃcient visual search of videos cast as text retrieval.

PAMI, 31(4):591–606, 2009.

15. L. Specia, S. Frank, K. Sima’an, and D. Elliott. A shared task on multimodal
machine translation and crosslingual image description. In Proceedings of the First
Conference on Machine Translation, pages 543–553. ACL, 2016.

16. I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to sequence learning with neural

networks. In NIPS, volume 27, pages 3104–3112. 2014.

17. C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan, V. Van-
houcke, and A. Rabinovich. Going deeper with convolutions. In CVPR, pages 1–9,
2015.

18. K. Xu, J. Ba, R. Kiros, A. Courville, R. Salakhutdinov, R. Zemel, and Y. Ben-
gio. Show, attend and tell: Neural image caption generation with visual attention.
arXiv:1502.03044, 2015.

19. C. L. Zitnick and P. Doll´ar. Edge boxes: Locating object proposals from edges. In

ECCV, 2014.

