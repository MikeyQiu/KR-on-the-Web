8
1
0
2
 
y
a
M
 
1
 
 
]
L
M

.
t
a
t
s
[
 
 
1
v
4
8
1
0
0
.
5
0
8
1
:
v
i
X
r
a

Compact Factorization of Matrices Using Generalized Round-Rank

Pouya Pezeshkpour
University of California
Irvine, CA
pezeshkp@uci.edu

Carlos Guestrin
University of Washington
Seattle, WA
guestrin@cs.uw.edu

Sameer Singh
University of California
Irvine, CA
sameer@uci.edu

Abstract

Matrix factorization is a well-studied task in machine learning for compactly representing large, noisy data. In
our approach, instead of using the traditional concept of matrix rank, we deﬁne a new notion of link-rank based on a
non-linear link function used within factorization. In particular, by applying the round function on a factorization to
obtain ordinal-valued matrices, we introduce generalized round-rank (GRR). We show that not only are there many
full-rank matrices that are low GRR, but further, that these matrices cannot be approximated well by low-rank linear
factorization. We provide uniqueness conditions of this formulation and provide gradient descent-based algorithms.
Finally, we present experiments on real-world datasets to demonstrate that the GRR-based factorization is signiﬁcantly
more accurate than linear factorization, while converging faster and using lower rank representations.

1 Introduction

Matrix factorization is a popular machine learning technique, with applications in variety of domains, such as recommen-
dation systems [Lawrence and Urtasun, 2009, Salakhutdinov and Mnih, 2008b], natural language processing [Riedel
et al., 2013], and computer vision [Huang, 2003]. Due to this widespread use of these models, there has been con-
siderable theoretical analysis of the various properties of low-rank approximations of real-valued matrices, including
approximation rank [Alon et al., 2013, Davenport et al., 2014] and sample complexity [Balcan et al., 2017].

Rather than assume real-valued data, a number of studies (particularly ones on practical applications) focus on
more speciﬁc data types, such as binary data [Nickel and Tresp, 2013], integer data [Lin et al., 2009], and ordinal
data [Koren and Sill, 2011, Udell et al., 2014]. For such matrices, existing approaches have used different link functions,
applied in an element-wise manner to the low-rank representation [Neumann et al., 2016], i.e. the output ˆY is ψ(UT V)
instead of the conventional UT V. These link functions have been justiﬁed from a probabilistic point of view [Collins
et al., 2001, Salakhutdinov and Mnih, 2008a], and have provided considerable success in empirical settings. However,
theoretical results for linear factorization do not apply here, and thus the expressive power of the factorization models
with non-linear link functions is not clear, and neither is the relation of the rank of a matrix to the link function used.
In this paper, we ﬁrst deﬁne a generalized notion of rank based on the link function ψ, as the rank of a latent
matrix before the link function is applied. We focus on a link function that applies to factorization of integer-valued
matrices: the generalized round function (GRF), and deﬁne the corresponding generalized round-rank (GRR). After
providing background on GRR, we show that there are many low-GRR matrices that are full rank1. Moreover, we also
study the approximation limitations of linear rank, by showing, for example, that low GRR matrices often cannot be
approximated by low-rank linear matrices. We deﬁne uniqueness for GRR-based matrix completion, and derive its
necessary and sufﬁcient conditions. These properties demonstrate that many full linear-rank matrices can be factorized
using low-rank matrices if an appropriate link function is used.

We also present an empirical evaluation of factorization with different link functions for matrix reconstruction and
completion. We show that using link functions is efﬁcient compared to linear rank, in that gradient-based optimization
approach learns more accurate reconstructions using a lower rank representation and fewer training samples. We also
perform experiments on matrix completion on two recommendation datasets, and demonstrate that appropriate link
function outperform linear factorization, thus can play a crucial role in accurate matrix completion.

1We will refer to rank of a matrix as its linear rank, and refer to the introduced generalized rank as link-rank.

1

2 Link Functions and Generalized Matrix Rank

Here we introduce our notation for matrix factorization, and use it to introduce link functions and generalized link-rank.
We will focus on the round function and round-rank, introduce their generalized versions, and present their properties.

Rank Based Factorization: Matrix factorization, broadly deﬁned, is a decomposition of a matrix as a multiplication
of two matrices. Accordingly, rank of a matrix Y ∈ Rn×m deﬁned as the smallest natural number r such that:
Y = UVT , or,Yij = (cid:80)
k UikVjk, where U ∈ Rn×r and V ∈ Rn×r. We use r(Y) to indicate the rank of a matrix
Y.
Link Functions and Link-Rank: Since the matrix Y may be from a domain Vn×m different from real matrices, link
functions can be used to deﬁne an alternate factorization:

Y = ψτ (X), X = UVT ,
where Y ∈ Vn×m, ψ : R → V (applied element-wise), X ∈ Rn×m, U ∈ Rn×r, V ∈ Rn×r, and τ represent
parameters of the link function, if any. Examples of link functions that we will study in this paper include the round
function for binary matrices, and its generalization to ordinal-valued matrices. Link functions were introduced for
matrix factorization by Singh and Gordon [2008], consequently Udell et al. [2014] presented their generalization to loss
functions and regularization for abstract data types.

(1)

Deﬁnition 2.1. Given a matrix Y and a link function ψτ parameterized by τ , the link-rank rψ of Y is deﬁned as the
minimal rank of a real-matrix X such that, Y = ψτ (X),

rψ(Y) = min

{r(X); Y = ψτ (X)}

X∈Rn×m,τ

(2)

Note that with ψ ≡ I, i.e. ψ(x) = x, rψ(Y) = r(Y).

Sign and Round Rank: If we consider the sign function as the link function, where sign(x) = {0 if x < 0, 1 o.w.}
(applied element-wise to the entries of the matrix), the link-rank deﬁned above corresponds to the well-known sign-rank
for binary matrices [Neumann, 2015]:

sign-rank(Y) = min

{r(X); Y = sign(X)} .

X∈Rn×m

A variation of the sign function that uses a threshold τ , Roundτ (x) = {0 if x < τ, 1 o.w.} when used as a link function
results in the round-rank for binary matrices, i.e.

round-rankτ (Y) = min

{r(X); Y = Roundτ (X)} ,

X∈Rn×m

as shown in Neumann [2015]. Thus, our notion of link-rank not only uniﬁes existing deﬁnitions of rank, but can be
used for novel ones, as we will do next.
Generalized Round-Rank (GRR): Many matrix factorization applications use ordinal values, i.e V = {0, 1, . . . , N }.
For these, we deﬁne generalized round function (GRF):

GRFτ1,...,τN (x) =

(3)


0

1
...

N − 1
N

x ≤ τ1
τ1 < x ≤ τ2

τN −1 < x ≤ τN

o.w.

where its parameters τ ≡ {τ1, ..., τN } are thresholds (sorted in ascending order). Accordingly, we deﬁne generalized
round-rank (GRR) for any ordinal matrix Y as:

GRRτ (Y) = min

{r(X); Y = GRFτ (X)} .

X∈Rn×m

Here, we are primarily interested in exploring the utility of GRR and, in particular, compare the representation
capabilities of low-GRR matrices to low-linear rank matrices. To this end, we present the following interesting property
of GRR.

2

Theorem 2.1. For a given matrix Y ∈ {0, . . . , N }n×m, let’s assume τ ∗ is the set of optimal thresholds, i.e.
GRRτ (cid:63) (Y ) = argminτ GRRτ (Y ), then for any other τ (cid:48):

GRRτ (cid:48)(Y) ≤ N × GRRτ (cid:63) (Y) + 1

(4)

Proof. We provide a sketch of proof here, and include the details in the appendix. We can show that the GRR can
change at most by 1 if we add a constant to all the thresholds and does not change at all if all the thresholds are
multiplied by a constant. Further, we show that there exist (cid:15)i for every i ∈ {1, ..., N − 1} such that shifting τi by (cid:15)i
does not change the GRR. These properties provide a bound to the change in GRR between any two sets of thresholds.

This theorem shows that even though using a ﬁxed set of thresholds is not optimal, the rank is still bounded in terms
of N , and does not depend on the size of the matrix (n or m). Other complementary lemmas are provided in appendix.

Remark 2.1. The upper bound in the theorem 2.1 matches the upper bound found in Neumann et al. [2016] for the
case where N = 1, GRRτ (cid:48)(Y) ≤ GRRτ ∗ (Y) + 1.

3 Comparing Generalized Round Rank to Linear Rank

Matrix factorization (MF) based on linear rank has been widely used in lots of machine learning problems like matrix
completion, matrix recovery and recommendation systems. The primary advantage of matrix factorization is its ability
to model data in a compact form. Being able to represent the same data accurately in an even more compact form,
specially when we are dealing with high rank matrices, is thus quite important. Here, we study speciﬁc aspects of exact
and approximate matrix reconstruction with GRR. In particular, we introduce matrices with high linear rank but low
GRR, and demonstrate the inability of linear factorization in approximating many low-GRR matrices.

3.1 Exact Low-Rank Reconstruction

To compare linear and GRR matrix factorization, here we identify families of matrices that have high (or full) linear
rank but low (or constant) GRR. Such matrices demonstrate the primary beneﬁt of GRR over linear rank: factorizing
matrices using GRR can be signiﬁcantly beneﬁcial.

As provided in Neumann [2015] for round-rank (a special case of GRR), GRRτ (Y) ≤ r(Y) for any matrix
Y ∈ Vn×m. More importantly, there are many structures that lower bound the linear rank of a matrix. For example,
if we deﬁne the upper triangle number nU for matrix Y ∈ Vn×n as the size of the biggest square block which is in
the form of an upper triangle matrix, then r(Y) ≥ nU . If we deﬁne the identity number nI similarly, then r(Y) ≥ nI ,
and similarly for matrices with a band diagonal submatrix. None of these lower bounds that are based on identity,
upper-triangle, and band-diagonal structures apply to GRR. In particular, as shown in Neumann [2015], identity
matrices (of any size) have a constant round-rank of 2, upper triangle matrices have round-rank of 1, and band diagonal
matrices have round-rank of 2 (which also holds for GRR). Moreover, we provide another lower bound for linear rank
of a matrix, which is again not applicable to GRR.

Theorem 3.1. If a matrix Y ∈ Rn×m contains k rows, k ≤ n, k ≤ m, such that R = {YR1, ..., YRk }, two columns
C = {j0, j1}, and:

1. rows in R are distinct from each other, i.e, ∀i, i(cid:48) ∈ R, ∃j, Yij (cid:54)= Yi(cid:48)j,
2. columns in C are distinct from each other, i.e, ∃i, Yij0 (cid:54)= Yij1, and
3. matrix spanning R and C are non-zero constants, w.l.o.g. ∀i ∈ R, Yij0 = Yij1 = 1,

then r(Y) ≥ k. (See appendix for the proof)

So far, we provide examples of high linear-rank structures that do not impose any constraints on GRR. We now
provide the following lemma that, in conjunction with above results, indicates that lower bounds on the linear rank can
be really high for matrices if they contain low-GRR structures (like identity and upper-triangle), while the lower bound
on GRR is low.

Lemma 3.1. For any matrix A, if there exists a submatrix A(cid:48) in a way that r(A(cid:48)) = R and GRRτ (A(cid:48)) = r, then
GRRτ (A) ≥ r and r(A) ≥ R.

3

Proof. If we consider the linear rank as the number of independent row (column) of the matrix, consequently having a
rank of R for submatrix A(cid:48) means there exist at least R independent rows in matrix A. Using this argument we can
simply prove above inequalities.

3.2 Approximate Low-Rank Reconstruction

Apart from examples of high linear-rank matrices that have low GRR, we can further show that many of these matrices
cannot even be approximated by a linear factorization. In other words, we show that there exist many matrices for
which not only their linear rank is high, but further, that the linear rank approximations are poor as well, while their low
GRR reconstruction is perfect. In order to measure whether a matrix can be approximated well, we describe the notion
of approximate rank (introduced by Alon et al. [2013], we rephrase it here in our notation).

Deﬁnition 3.1. Given (cid:15), approximate rank of a matrix X is:
(cid:15)-rank(X) = min{r(X(cid:48)) : X(cid:48) ∈ Rn×m, ||X − X(cid:48)||2

F ≤ (cid:15)}

We extend this deﬁnition to introduce the generalized form of approximate rank as follows:

Deﬁnition 3.2. Given (cid:15) and a link function ψ (e.g. GRF), the generalized approximate rank of a matrix Y is deﬁned
as:

(cid:15)-rankψ(Y) = min{rψ(Y(cid:48)) : Y(cid:48) ∈ Vn×m, ||Y − Y(cid:48)||2

F ≤ (cid:15)}.

For an arbitrary matrix, we can evaluate how well a linear factorization can approximate it using SVD, i.e.:

Theorem 3.2. For a matrix X = UΣVT , where diag(Σ) are the singular values, and U and V are orthogonal
matrices, then (cid:80)n
i=k+1 |Σii|2 = minY,r(Y)=k ||X − Y||2
F .

Proof. This was ﬁrst introduced in Eckart and Young [1936], and recently presented again in Udell et al. [2014]. We
omit the detailed proof, but the primary intuition is that the PCA decomposition minimizes the Frobenius norm, and
Y = U(cid:48)V(cid:48), with U(cid:48) = UΣ 1

2 and V(cid:48) = Σ 1

2 VT .

For an arbitrary binary matrix Y, recall that Roundτ =0(Y) is equal to sign-rank(Y). Using above theorem, we
want to show that there are binary matrices that cannot be approximated by low linear-rank matrices (for non-trivial (cid:15)),
but can be approximated well by low round-rank matrices. Clearly, these results extend to ordinal matrices and their
GRR approximations, the generalized form of binary case.

Let us consider Y, the identity binary matrix of size n, for which the singular values of Y are all 1s. By using
Theorem 3.2, any linear factorization Y(cid:48) of rank k will have ||Y − Y(cid:48)||2
F ≥ (n − k). As a result, the identity matrix
cannot be approximated by any rank-k linear factorization for (cid:15) < n − k. On the other hand, such a matrix can be
reconstructed exactly with a rank 2 factorization if using the round-link function, since round-rank(Y) = 2. In Figure 1,
we illustrate a number of other such matrices, i.e. they can be exactly represented by a factorization with GRR of 2, but
cannot be approximated by any compact linear factorization.

4 Matrix Completion with Generalized Round-Rank Factorization

So far, we show that there are many matrices that cannot be represented compactly using conventional matrix factoriza-
tion (linear), either approximately or exactly, whereas they can be reconstructed using compact matrices when using GRF
as the link function. In this section, we study properties of completion of ordinal-valued matrices based on GRF (and
the notion of rank from GRR). In particular, given a number of noise-free observations Ω from Y ∈ {0, . . . , N }n×m
and its GRR(Y) = r, r (cid:28) min(n, m), the goal here is to identify U ∈ Rn×r, V ∈ Rm×r such that GRF(UVT )
completes the unobserved entries of Y accurately.

4.1 Theoretical Results for Uniqueness

Uniqueness in matrix completion is deﬁned as the minimum number of entries required to recover the matrix Y
with high probability, assuming that sampling of the set of observed entries is based on an speciﬁc distribution. To
obtain uniqueness in GRR based factorization, we ﬁrst need to introduce the interval matrix ¯X. Based on deﬁnition of
generalized round function (GRF) and a set of ﬁxed thresholds, we deﬁne matrix ¯X to be a matrix with interval entries
calculated based on entries of matrix Y and thresholds (τ1, ...τN ). As an example, if an entry Yij is k ∈ {0, ..., N }, ¯Xij

4

Figure 1: Comparison of the optimal linear factorization approximation as the rank k is varied for a number of matrices
(of size n × n), demonstrating that linear factorization is unable to approximate these matrices with low-rank. All of
these matrices have a constant generalized round-rank (≤ 2).

would be equal to the interval [τk, τk+1]. When entries of Y are equal to 0 or N , w.l.o.g. we assume the corresponding
entries in matrix ¯X are bounded. Thus, each one of matrix ¯X’s entries must be one of the N + 1 possible intervals
based on GRF’s thresholds.

Deﬁnition 4.1. A target matrix Y ∈ {0, . . . , N }n×m with 1) observed set of entries Ω = {(i, j), Yijis observed},
2) set of known thresholds (τ1, ...τN ), and 3) GRRτ1,...,τN (Y) = r, is called uniquely recoverable, if we can recover its
unique interval matrix ¯X with high probability.

Similar to ¯X, we introduce X (cid:63) to be a set of all matrices that satisfy following two conditions: 1) For the observed
entries Ω of Y, Yij = GRFτ1,...,τN (X(cid:63)
ij), and 2) linear rank of X (cid:63) is r. If we consider a matrix X ∈ X (cid:63) then for an
arbitrary entry Xij we must have Xij ∈ ¯Xij, where ¯Xij is an interval containing Xij. Given a matrix X ∈ X (cid:63), the
uniqueness conditions ensure that we would be able to recover ¯X, using which we can uniquely recover matrix Y.

In the next theorems, we ﬁrst ﬁnd the necessary condition on the entries of matrix X for satisfying uniqueness of
matrix Y. Then, we derive the sufﬁcient condition accordingly. In our calculations, we assume the thresholds to be
ﬁxed and our target matrix Y be noiseless, and further, there is at least one observed entry in every column and row of
matrix Y.

Theorem 4.1. (Necessary Condition) For a target matrix Y ∈ Vn×m with few observed entries and given GRR(Y) = r,
we consider set of {Yi1j, ..., Yirj} to be the r observed entries in an arbitrary column j of Y . Given any matrix
X ∈ X (cid:63), X = U × VT , and taking an unobserved entry Yij, we deﬁne aikj as: Ui = (cid:80)r
k=1 aikjUik , where Ud
(d ∈ {1, ..., n}) is the dth row of matrix U and ik represents the index of observed entries in jth column. Then, the
necessary condition of uniqueness of Y is:

r
(cid:88)

k=1

|aikj| ≤ (cid:15)

(cid:19)

(cid:18) Tmin
Tmax

(5)

Where r = GRR(Y), Tmin and Tmax are the length of smallest and largest intervals and (cid:15) is a small constant.

Proof. We only provide a sketch of proof here, and include the details in the appendix. To achieve uniqueness we need
to ﬁnd a condition in which for any column of X, by changing respective row of V, while the value of observed entries
stay in the respected intervals, the value of unobserved ones wouldn’t change dramatically which result in moving to

5

other intervals. To do so, we will calculate the maximum of the possible change for an arbitrary unobserved entry of
column j in matrix Y. To calculate this maximum for any unobserved entry Yij, we consider the row Ui as a linear
combination of linearly independent rows of U (which are in respect to observed entries of Y in column j). Then, by
ﬁnding the maximum possible change for observed entries in column j, based on their respective intervals, we ﬁnd
mentioned boundary for achieving the uniqueness.

The same condition is necessary for matrix V as well. The necessary condition must be satisﬁed for all columns of
matrix X. Moreover, if the necessary condition is not satisﬁed, we cannot ﬁnd a unique matrix X, and hence a unique
completion, i.e. Y = GRFτ1,...,τN (X) where X ∈ X (cid:63).

Theorem 4.2. (Sufﬁcient Condition) Using above necessary condition, for any unobserved entry Yij of matrix Y
we deﬁne ¯(cid:15) as minimum distance of Xij with its respected interval’s boundaries. Then, we will have the following
inequality as sufﬁcient condition of uniqueness:

¯(cid:15) ≥ max

aikj(cid:15)

sign(aik j )
ik

,

aikj(cid:15)

−sign(aik j )
ik

(cid:32) r

(cid:88)

k=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

r
(cid:88)

k=1

(cid:12)
(cid:33)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(6)

where r and aikj are deﬁned as before, (cid:15)+
negative of the distance of Xikj to its lower bound.

ikj is deﬁned as the distance of Xikj to its upper bound, and (cid:15)−

ikj is deﬁned as

Above sufﬁcient condition is a direct result of necessary condition proof. Although not tight, it guarantees the

existence of unique ¯X, and thus the complete matrix Y.

4.2 Gradient-Based Algorithm for GRR Factorization

Although previous studies have used many different paradigms for matrix factorization, such as alternating minimization
[Hardt, 2014, Jain et al., 2013] and adaptive sampling [Krishnamurthy and Singh, 2013], stochastic gradient descent-
based (SGD) approaches have gained widespread adoption, in part due to their ﬂexibility, scalability, and theoretical
properties [De Sa et al., 2014]. For linear matrix factorization, a loss function that minimizes the squared error is used,
i.e. Llinear = (cid:80)(Yij − UiVj)2, where the summation is over the observed entries. In order to prevent over-ﬁtting, L2
regularization is often incorporated.

Round: We extend this framework to support GRR-based factorization by deﬁning an alternate loss function. In
particular, with each observed entry Yij and the current estimate of τ , we compute the b↓
ij as the lower and
upper bounds for Xij with respect to the GRF. Given these, we use the following loss, LRound = (cid:80)(b↓
ij − UiVj)+ +
(UiVj − b↑
ij)+, where (.)+ = max(., 0). Considering the regularization term as well, we apply stochastic gradient
descent as before, computing gradients using a differentiable form of max with respect to U, V, and τ .

ij and b↑

Multi-Sigmoid: Although the above loss captures the goal of the GRR-based factorization accurately, it contains both
discontinuities and ﬂat regions, and thus is difﬁcult to optimize. Instead, we also propose to use a smoother and noise
tolerant approximation of the GRF function. The sigmoid function, σ(x) = 1
1+e−x , for example, is often used to
approximate the sign function. When used as a link function in factorization, we can further show that it approximates
the sign-rank well.

Theorem 4.3. For any (cid:15) > 0 and matrix Y, sign-rank(Y) = (cid:15)-rankσ(Y). (See appendix for the proof)

We can similarly approximate GRF using a sum of sigmoid functions that we call Multi-sigmoid deﬁned as
(x) = (cid:80)N
d=1 σ(x − τd), for which the above properties also hold. The resulting loss function that minimizes the

ψmσ
τ
squared error is Lmulti-sigmoid = (cid:80)(Yij − ψmσ

τ

(UiVj))2.

In our experiments, we evaluate both of our proposed loss functions, and compare their relative performance.
We study variations in which the thresholds τ are either pre-ﬁxed or updated (using ∂
∂τ L) during training. All the
parameters of the optimization, such as learning rate and early stopping, and the hyper-parameters of our approaches,
such as regularization, are tuned on validation data.

6

(a) Random matrix, k=2

(b) Upper Triangle matrix, k=1

(c) Band Diagonal matrix, k=2

Figure 2: Matrix Recovery: Synthetic matrices that are reconstructed using their k-dimensional factorization with
different representations. We plot RMSE of the reconstruction vs the number of training iterations, demonstrating the
efﬁciency of GRR-based methods, especially without ﬁxed thresholds.

5 Experiments

In this section we evaluate the capabilities of our proposed GRR factorization relative to linear factorization ﬁrst through
variety of simulations, followed by considering smallnetﬂix and MovieLens 100K2 datasets. Unless otherwise noted, all
of evaluations are based on Root Mean Square Error (RMSE).

Matrix Recovery We ﬁrst consider the problem of recovering a fully known matrix Y from its factorization, thus all
entries are considered observed. We create three matrices in order to evaluate our approaches for recovery: (a) Random
10 × 10 matrix with N = 5 that has GRR ≤ 2 (create by randomly generating τ , U, and V), (b) Binary upper triangle
matrix with size 10 (GRR of 1), and (c) Band-diagonal matrix of size 10 and bandwidth 3, which has the linear rank of
8 and GRR of 2. Figure 2 presents the RMSE comparison of these three matrices as training progresses. For the upper
triangle and the band diagonal, we ﬁx threshold to τ = 0.5. The results show that Round works far better than others by
converging to zero. Moreover, linear approach is outperformed by the Multi-sigmoid without ﬁxed thresholds in all,
demonstrating it cannot recover even simple matrices.

Matrix Completion Instead of fully-observed matrices, we now evaluate completion of the matrix when only a few
of the entries are observed. We consider 50 × 50 upper-triangle and band-diagonal (bandwidth 10) matrices, and
sample entries from them, to illustrate how well our approaches can complete them. Results on held-out 20% entries
are given in Tables 1 and 2. In addition, we build a random matrix with size 50 and GRR 2, and present the results
for this matrix in Table 3. As we can see, linear factorization in all three cases is outperformed by our proposed
approaches. In band-diagonal, because of over-ﬁtting of the Round approach, Multi-sigmoid performs a little better,
and for upper-triangle, we achieve the best result for Round method by ﬁxing τ = 0.5.

In this section we use the smallnetﬂix movie ratings data for 95526 users and 3561
Matrix Completion on Real Data
movies, where the training dataset contains 3, 298, 163 ratings and validation contains 545, 177 ratings, while each one
of ratings is an integer in {1, 2, 3, 4, 5}. We also evaluate on a second movie recommendation dataset, Movielens 100k,
with 100, 000 ratings from 1000 users on 1700 movies, with the same range as smallnetﬂix. For this recommendation
systems, in addition to RMSE, we also consider the notion of accuracy that is more appropriate for the task, calculated
as the fraction of predicted ratings that are within ±0.5 of the real ratings. As shown in Figure 3, for smallnetﬂix,
linear factorization is better than Round approach from RMSE perspective, probably because linear is more robust to
noise. On the other hand, Multi-sigmoid achieves better RMSE than linear method. Furthermore, both Round and
Multi-sigmoid outperform the linear factorization in accuracy. Movielens results for the percentage metric shows similar
behavior as smallnetﬂix, demonstrating that GRR-based factorization can provide beneﬁts to real-world applications.
Furthermore, a comparison of our models with existing approaches on Movielens dataset is provided in Table 4. We
choose the RMSE result for smallest k presented in those works. As we can see, our Multi-sigmoid method appear very

2The codes available at: https://github.com/pouyapez/GRR-Matrix-Factorization

7

Table 1: Matrix completion for Upper Triangular Matrices (k = 1)

Proportion of Observations

10% 20% 30% 40% 50% 60% 70% 80%

Linear

Multi-Sigmoid
Multi-Sigmoid, τ = 0.5
Round
Round, τ = 0.5

0.50

0.51
0.58
0.46
0.38

0.50

0.30
0.37
0.34
0.26

0.50

0.25
0.36
0.27
0.23

0.50

0.25
0.36
0.25
0.19

0.50

0.26
0.35
0.26
0.15

0.50

0.25
0.35
0.21
0.13

0.50

0.23
0.34
0.20
0.15

0.50

0.23
0.34
0.16
0.13

Table 2: Matrix completion for Band Diagonal Matrices (k = 2)

Proportion of Observations

10% 20% 30% 40% 50% 60% 70% 80%

Linear

Multi-Sigmoid
Multi-Sigmoid, τ = 0.5
Round
Round, τ = 0.5

0.49

0.39
0.48
0.71
0.61

0.46

0.26
0.49
0.41
0.57

0.46

0.23
0.33
0.35
0.39

0.46

0.23
0.31
0.29
0.52

0.46

0.22
0.30
0.29
0.58

0.46

0.21
0.29
0.27
0.30

0.46

0.20
0.29
0.23
0.29

0.46

0.20
0.29
0.22
0.34

competitive in comparison with other methods, while our Round approach result suffer from existence of noise in the
dataset as before.

6 Related Work

There is a rich literature on matrix factorization and its applications. To date, a number of link functions have been
used, along with different losses for each, however here we are ﬁrst to focus on expressive capabilities of these link
functions, in particular of the ordinal-valued matrices [Singh and Gordon, 2008, Koren and Sill, 2011, Paquet et al.,
2012, Udell et al., 2014]. Nickel and Tresp [2013] addressed tensor factorization problem and showed improved
performance when using a sigmoid link function. Mareˇcek et al. [2017] introduced the concept of matrix factorization
based on interval uncertainty, which results in a similar objective as our algorithm. However, not only is our proposed
algorithm going beyond by updating the thresholds and supporting sigmoid-based smoothing, but we present results on
the representation capabilities of the round-link function.

A number of methods have approached matrix factorization from a probabilistic view, primarily describing
solutions when faced with different forms of noise, resulting, interestingly, in link functions as well. Collins et al.
[2001] introduced a generalization of PCA method to loss function for non real-valued data, such as binary-valued.
Salakhutdinov and Mnih [2008a] focused on Bayesian treatment of probabilistic matrix factorization, identifying the
appropriate priors to encode various link functions. On the other hand, Lawrence and Urtasun [2009] have analyzed
non-linear matrix factorization based on Gaussian process and used SGD to optimize their model. However, these
approaches do not explicitly investigate the representation capabilities, in particular, the signiﬁcant difference in rank
when link functions are taken into account.

Table 3: Matrix completion with different number of samples for Random low-GRR Matrices

Proportion of Observations

10% 20% 30% 40% 50% 60% 70% 80%

Linear

Multi-Sigmoid
Multi-Sigmoid (Fixed τ )
Round
Round (Fixed τ )

1.73

1.92
1.96
1.49
2.44

1.06

0.53
1.54
0.92
1.50

0.97

0.48
1.37
0.60
1.50

0.90

0.42
1.32
0.48
1.43

0.85

0.39
1.29
0.48
1.36

0.85

0.38
1.28
0.39
1.39

0.87

0.36
1.25
0.30
1.44

0.83

0.35
1.23
0.28
1.34

8

(a) Percentage, smallnetﬁx

(b) RMSE, smallnetﬂix

(c) Percentage, movielens

Figure 3: Performance on recommendation datasets, as k in increased

Table 4: RMSE on Movielens-100k for a variety of models with different low-rank approximation (k).

Models
APG [Kwok, 2015]
AIS-Impute [Kwok, 2015]
CWOCFI [Lu et al., 2013]
our Round
our Linear
UCMF [Zhang et al., 2014]
our Multi-sigmoid
SVDPlusPlus [Gantner et al., 2011]
SIAFactorModel [Gantner et al., 2011]
GG [Lakshminarayanan et al., 2011]

Low-rank approximation RMSE
1.037
1.037
1.01
1.007
0.995
0.948
0.928
0.911
0.908
0.907

k=70
k=70
k=10
k=10
k=10
-
k=10
k=10
k=10
k=30

Sign-rank and its properties have been studied by Nickel et al. [2014], Bouchard et al. [2015], Davenport et al.
[2014], and more recently, Neumann [2015] provides in-depth analysis of round-rank. Although these have some
similarity to GRR, sign-rank and round-rank are limited to binary matrices, while GRR is more suitable for most
practical applications, and further, we present extension of their results in this paper that apply to round-rank as well.
Since we can view matrix factorization as a simple neural-network, research in understanding the complexity of neural
networks [Huang, 2003], in particular with rectiﬁer units [Pan and Srikumar, 2016], is relevant, however the results
differ signiﬁcantly in the aspects of representation we focus on.

7 Conclusions and Future Work

In this paper, we demonstrated the expressive power of using link functions for matrix factorization, speciﬁcally the
generalized round-rank (GRR) for ordinal-value matrices. We show that not only are there full-rank matrices that are
low GRR, but further, that these matrices cannot even be approximated by low linear factorization. Furthermore, we
provide uniqueness conditions of this formulation, and provide gradient descent-based algorithms to perform such a
factorization. We present evaluation on synthetic and real-world datasets that demonstrate that GRR-based factorization
works signiﬁcantly better than linear factorization: converging faster while requiring fewer observations. In future
work, we will investigate theoretical properties of our optimization algorithm, in particular explore convex relaxations
to obtain convergence and analyze sample complexity. We are interested in the connection of link-rank with different
probabilistic interpretations, in particular, robustness to noise. Finally, we are also interested in practical applications of
these ideas to different link functions and domains.

9

References

Noga Alon, Troy Lee, Adi Shraibman, and Santosh Vempala. The approximate rank of a matrix and its algorithmic

applications: Approximate rank. In Symposium on Theory of Computing (STOC), pages 675–684, 2013.

Maria-Florina Balcan, Yingyu Liang, David P Woodruff, and Hongyang Zhang. Optimal sample complexity for matrix

completion and related problems via (cid:96)2-regularization. arXiv preprint arXiv:1704.08683, 2017.

Guillaume Bouchard, Sameer Singh, and Theo Trouillon. On approximate reasoning capabilities of low-rank vector
spaces. In AAAI Spring Syposium on Knowledge Representation and Reasoning (KRR): Integrating Symbolic and
Neural Approaches, 2015.

Michael Collins, Sanjoy Dasgupta, and Robert E Schapire. A generalization of principal components analysis to the

exponential family. In Neural Information Processing Systems (NIPS), pages 617–624, 2001.

Mark A Davenport, Yaniv Plan, Ewout van den Berg, and Mary Wootters. 1-bit matrix completion. Information and

Inference, 3(3):189–223, 2014.

Christopher De Sa, Kunle Olukotun, and Christopher Ré. Global convergence of stochastic gradient descent for some

non-convex matrix problems. arXiv preprint arXiv:1411.1134, 2014.

Carl Eckart and Gale Young. The approximation of one matrix by another of lower rank. Psychometrika, 1(3):211–218,

1936.

Zeno Gantner, Steffen Rendle, Christoph Freudenthaler, and Lars Schmidt-Thieme. Mymedialite: a free recommender
system library. In Proceedings of the ﬁfth ACM conference on Recommender systems, pages 305–308. ACM, 2011.

Moritz Hardt. Understanding alternating minimization for matrix completion. In Foundations of Computer Science

(FOCS), 2014 IEEE 55th Annual Symposium on, pages 651–660. IEEE, 2014.

Guang-Bin Huang. Learning capability and storage capacity of two-hidden-layer feedforward networks.

IEEE

Transactions on Neural Networks, 14(2):274–281, 2003.

Prateek Jain, Praneeth Netrapalli, and Sujay Sanghavi. Low-rank matrix completion using alternating minimization. In

Proceedings of the forty-ﬁfth annual ACM symposium on Theory of computing, pages 665–674. ACM, 2013.

Yehuda Koren and Joe Sill. Ordrec: an ordinal model for predicting personalized item rating distributions.

In

Proceedings of the ﬁfth ACM conference on Recommender systems, pages 117–124. ACM, 2011.

Akshay Krishnamurthy and Aarti Singh. Low-rank matrix and tensor completion via adaptive sampling. In Advances in

Neural Information Processing Systems, pages 836–844, 2013.

Quanming Yao James T Kwok. Accelerated inexact soft-impute for fast large-scale matrix completion. 2015.

Balaji Lakshminarayanan, Guillaume Bouchard, and Cedric Archambeau. Robust bayesian matrix factorisation. In
Proceedings of the Fourteenth International Conference on Artiﬁcial Intelligence and Statistics, pages 425–433,
2011.

Neil D Lawrence and Raquel Urtasun. Non-linear matrix factorization with gaussian processes. In International

Conference on Machine Learning (ICML), pages 601–608. ACM, 2009.

Matthew M Lin, Bo Dong, and Moody T Chu. Integer matrix factorization and its application. preprint, 2009.

Jing Lu, Steven Hoi, and Jialei Wang. Second order online collaborative ﬁltering. In Asian Conference on Machine

Learning, pages 325–340, 2013.

Jakub Mareˇcek, Peter Richtárik, and Martin Takáˇc. Matrix completion under interval uncertainty. European Journal of

Operational Research, 256(1):35–43, 2017.

Stefan Neumann. On Some Problems of Rounding Rank. PhD thesis, Universität des Saarlandes Saarbrücken, 2015.

10

Stefan Neumann, Rainer Gemulla, and Pauli Miettinen. What you will gain by rounding: Theory and algorithms for

rounding rank. In International Conference on Data Mining (ICDM), 2016.

Maximilian Nickel and Volker Tresp. Logistic tensor factorization for multi-relational data. In ICML Workshop -

Structured Learning: Inferring Graphs from Structured and Unstructured Inputs (SLG), 2013.

Maximilian Nickel, Xueyan Jiang, and Volker Tresp. Reducing the rank in relational factorization models by including

observable patterns. In Neural Information Processing Systems (NIPS), pages 1179–1187, 2014.

Xingyuan Pan and Vivek Srikumar. Expressiveness of rectiﬁer networks. In International Conference on Machine

Learning, pages 2427–2435, 2016.

Computing, 22(4):945–957, 2012.

Ulrich Paquet, Blaise Thomson, and Ole Winther. A hierarchical model for ordinal matrix factorization. Statistics and

Sebastian Riedel, Limin Yao, Andrew McCallum, and Benjamin M Marlin. Relation extraction with matrix factorization
and universal schemas. In North American Chapter of the Association for Computational Linguistics - Human
Language Technologies (NAACL HLT), pages 74–84, 2013.

Ruslan Salakhutdinov and Andriy Mnih. Bayesian probabilistic matrix factorization using Markov chain Monte Carlo.

In International Conference on Machine Learning (ICML), volume 25, 2008a.

Ruslan Salakhutdinov and Andriy Mnih. Probabilistic matrix factorization.

In Advances in Neural Information

Processing Systems (NIPS), volume 20, 2008b.

Ajit P Singh and Geoffrey J Gordon. A uniﬁed view of matrix factorization models. In Machine Learning and

Knowledge Discovery in Databases, pages 358–373. Springer, 2008.

Madeleine Udell, Corinne Horn, Reza Zadeh, and Stephen Boyd. Generalized low rank models. arXiv preprint

arXiv:1410.0342 (Working manuscript), 2014.

Chu-Xu Zhang, Zi-Ke Zhang, Lu Yu, Chuang Liu, Hao Liu, and Xiao-Yong Yan. Information ﬁltering via collaborative

user clustering modeling. Physica A: Statistical Mechanics and its Applications, 396:195–203, 2014.

11

Appendices

Lemma 2.1. For matrices A, B ∈ {0, ..., N }n×m:

GRRτ1,...τN (A) ≤ min(n, m)
GRRτ1,...τN (A) = GRRτ1,...τN (AT )

GRRτ1,...τN (A + B) ≤ GRRτ1,...τN (A) + GRRτ1,...τN (B)

Where + is in the real numbers and A + B ∈ {0, ..., N }n×m.

Proof. According to deﬁnition of GRR and the fact that if A = GRF(C) then r(C) ≤ min(n, m) we can conclude the
ﬁrst inequality. Furthermore, Since we know for any matrix C, r(C) = r(C T ) and use the fact that if A = GRF(C)
then AT = GRF(C t) we can show the second inequality as well. And the third inequality is the direct result of
following famous inequality:

Lemma 2.2. the following decomposition holds for Generalized Round function:

Proof. Base on deﬁnition of Round Function

Roundτi(A) , counts the number of thresholds which are smaller than

A, and this number is clearly equal to GRFτ1,...,τN (A).

Lemma 2.3. For any arbitrary subset of thresholds T = {τi1, ..., τir }:

GRRτ1,...τN (A) ≥ GRRT ( ¯A)

Where ¯A attained by the following transformation in matrix A:

r(A + b) ≤ r(A) + r(B)

GRFτ1,...,τN (A) =

Roundτi (A)

N
(cid:88)

i=1

N
(cid:80)
i=1

¯A = [bij]n×m





0,
1,
...
r − 1,

bij =

if aij ∈ {0, .., i1 − 1}
if aij ∈ {i1, .., i2 − 1}

if aij ∈ {ir, .., N − 1}

B = {B|GRFτ1,...,τN (B) = A}
¯B = { ¯B|GRFT ( ¯B) = A}

Proof. We deﬁne B and ¯B as follows:

In result for any B ∈ B, it is clear that B ∈ ¯B

Lemma 2.4. Following inequality holds for GRR:

Proof. Similar to previous Lemma, if we deﬁne B and ¯B as follows:

GRRτ1,...,τN (A) ≤ GRRτ1,...,τN ,τN +1(A)

Then it is clear that for any ¯B ∈ ¯B, we have ¯B ∈ B

B = {B|GRFτ1,...,τN (B) = A}
¯B = { ¯B|GRFτ1,..,.τN ,τN +1( ¯B) = A}

12

(7)

(8)

(9)

(10)

(11)

(12)

(13)

(14)

(15)

(16)

(17)

(18)

(19)

Lemma 2.5. Lets deﬁne the function F : RN → N as follows:

Where A is a ﬁx matrix in {0, ..., N }n×m. Then we have the following inequality:

F (τ1, ..., τN ) = GRRτ1,...,τN (A)

F ((τ1 + τ (cid:48)

1)/2, ..., τN ) ≤ F (τ1, ..., τN ) + F (τ (cid:48)

1, ..., τN )

Proof. We deﬁne B, B(cid:48) and ¯B as follows:

B = {B|GRFτ1,...,τN (B) = A}
B(cid:48) = {B(cid:48)|GRFτ (cid:48)
1,...,τN (B(cid:48)) = A}
¯B = { ¯B|GRF(τ1+τ (cid:48)

1)/2,...,τN ( ¯B) = A}

Accordingly, for any B ∈ B and B(cid:48) ∈ B(cid:48) we know B+B(cid:48)
r(B + B(cid:48)) ≤ r(B) + r(B(cid:48)) we can clearly prove the inequality.

2

∈ ¯B. Furthermore, since r( B+B(cid:48)

) = r(B + B(cid:48)) and

2

Lemma 2.6. We have the following inequality:

F (τ1 + τ (cid:48)

1, ..., τN + τ (cid:48)

N ) ≤ F (τ1, ..., τN ) + F (τ (cid:48)

1, ..., τ (cid:48)

N )

Proof. Similar to previous Lemma, if we deﬁne B, B(cid:48) and ¯B as follows:

B = {B|GRFτ1,...,τN (B) = A}
B(cid:48) = {B(cid:48)|GRFτ (cid:48)
(B(cid:48)) = A}
¯B = { ¯B|GRFτ1+τ (cid:48)

1,...,τ (cid:48)
N

1,...,τN +τ (cid:48)
N

( ¯B) = A}

For any B ∈ B and B(cid:48) ∈ B(cid:48) we know B + B(cid:48) ∈ ¯B. And since r(B + B(cid:48)) ≤ r(B) + r(B(cid:48)) we can clearly prove the
inequality.

Theorem 2.1. For a given matrix Y ∈ {0, . . . , N }n×m, let’s assume τ ∗ is the set of optimal thresholds, i.e.
GRRτ (cid:63) (Y ) = argminτ GRRτ (Y ), then for any other τ (cid:48):

GRRτ (cid:48)(Y) ≤ N × GRRτ (cid:63) (Y) + 1

Proof. To prove above inequality we ﬁrst need two following lemmas:

Lemma 2.7. We have the following inequality for GRR:

GRRτ1+c,...,τN +c(Y) ≤ GRRτ1,...,τN (Y) + 1

Where c is a real number.

Proof. We deﬁne B and B(cid:48) as follows:

B = {B|GRFτ1,..,.τN (B) = Y}
B(cid:48) = {B(cid:48)|GRFτ1+c,...,τN +c(B(cid:48)) = Y}

For an arbitrary B ∈ B let’s assume we have matrix U and V in a way that, B = U × VT . If we add a column to the
end of U and a row to the and of V and call them U(cid:48) and V(cid:48) as follows:




U (cid:48) =




U


c
...

 ,
c

V (cid:48) =




V


1
...


1

It is clear that B(cid:48) = U(cid:48) × V(cid:48)T ∈ B(cid:48). Furthermore, by using the fact that r(B(cid:48)) ≤ r(B) + 1 we can complete the
proof.

13

(20)

(21)

(22)

(23)

(24)

(25)

(26)

(27)

(28)

(29)

(30)

(31)

(32)

(33)

Lemma 2.8. For arbitrary k ∈ R, the following equality holds:

Proof. Similar to previous Lemma, if we deﬁne B and B(cid:48) as follows:

GRRkτ1,...,kτN (Y) = GRRτ1,...τN (Y)

B = {B|GRFτ1,...τN (B) = A}
B(cid:48) = {B(cid:48)|GRFkτ1,...,kτN (B(cid:48)) = A}

For any B ∈ B it is clear that k × B ∈ B(cid:48). On the other hand, for any B(cid:48) ∈ B(cid:48) we know that B(cid:48)/k ∈ B.In result, by
considering the fact that r(kB) = r(B), we can complete the proof .

base on These lemmas and the fact that for any i ∈ {1, ..., N − 1}, there exist an (cid:15)i which will satisﬁes the following

equality:

GRRτ1,...,τi−(cid:15)i,...,τN (Y) = GRRτ1,...τN (Y)

We can show that there exists a set of (cid:15)i (i ∈ {1, ..., N − 1}), that transform (τ1, ...τN ) in to (τ (cid:48)
linear combinations. In another word, it means we have k0, ..., kN −1 in a way that:

1, ..., τ (cid:48)

N ) with a set of

Where T (cid:48) = (τ (cid:48)
as follows:

1, ...τ (cid:48)

N ), T0 = (τ1, ...τN ) and Ti = (τ1, ..., τi − (cid:15)i, ..., τN ) in vector format. Therefore, if we deﬁne Bi

And considering the fact that:

T (cid:48) = k0T0 + ... + kN −1TN −1

Bi = {Bi|GRFTi(Bi) = A}

r(k0B + ... + kN −1BN −1) ≤

r(kjBj)

N −1
(cid:88)

j=0

N −1
(cid:88)

j=0

=

r(Bj)

(34)

(35)

(36)

(37)

(38)

(39)

(40)

(41)

Finally, with Lemma 2.7 equation 37 we can complete the theorem.

Lemma 3.1. For any matrix A, if there exists a submatrix A(cid:48) in a way that r(A(cid:48)) = R and GRRτ (A(cid:48)) = r, then
GRRτ (A) ≥ r and r(A) ≥ R .

Proof. If we consider the linear rank as the number of independent row (column) of the matrix, consequently having a
rank of r for submatrix A(cid:48) means there exist at least r independent rows in matrix a A. Using this argument we can
simply prove above inequalities.

Theorem 3.1. If a matrix Y ∈ Rn×m contains k rows, k ≤ n, k ≤ m, such that R = {YR1, ..., YRk }, two columns
C = {j0, j1}, and:

1. rows in R are distinct from each other, i.e, ∀i, i(cid:48) ∈ R, ∃j, Yij (cid:54)= Yi(cid:48)j,

2. columns in C are distinct from each other, i.e, ∃i, Yij0 (cid:54)= Yij1, and

3. matrix spanning R and C are non-zero constants, w.l.o.g. ∀i ∈ R, Yij0 = Yij1 = 1,

then r(Y) ≥ k.

14

Proof. Let us assume r(Y) < k, i.e. ∃k(cid:48) < k, U ∈ Rk(cid:48)×n, V ∈ Rk(cid:48)×m such that Y = UT × V. Since the rows R and
the columns in C are distinct, their factorizations in U and V have to also be distinct, i.e. ∀i, i(cid:48) ∈ R, i (cid:54)= i(cid:48), Ui (cid:54)= Ui(cid:48)
and Vj0 (cid:54)= Vj1. Furthermore, ∀i, i(cid:48) ∈ R, i (cid:54)= i(cid:48), (cid:54) ∃a, Ui = aUi(cid:48) and (cid:54) ∃a, Vj0 = aVj1 for a (cid:54)= 0, it is clear that
Ui · Vj0 = Ui · Vj1 = 1 (and similarly for i, i(cid:48) ∈ R).

Now consider a row i ∈ R. Since ∀j ∈ C, Yij = 1, then Ui · Vj = 1. As a result, Vj are distinct vectors that
lie in the hyperplane spanned by Ui · Vj = 1. In other words, the hyperplane Ui · Vj = 1 deﬁnes a k(cid:48)-dimensional
hyperplane tangent to the unit hyper-sphere.

Going over all the rows in R, we obtain constraints that Vj are distinct vectors that lie in the intersection of the
hyperplanes spanned by Ui · Vj = 1 for all i ∈ R. Since all Uis are distinct, there are k distinct k(cid:48)-dimensional
hyperplanes, all tangent to the unit sphere, that intersect at more than one point (since Vjs are distinct).

Since k hyper-planes tangent to unit sphere can intersect at at most one point in k(cid:48) < k dimensional space, Vj

cannot be distinct vectors. Hence, our original assumption k(cid:48) < k is wrong, therefore, r(Y) ≥ k.

Theorem 4.1. (Necessary Condition) For a target matrix Y ∈ Vn×m with few observed entries and given GRR(Y) = r,
we consider set of {Yi1j, ..., Yirj} to be the r observed entries in an arbitrary column j of Y . Given any matrix
X ∈ X (cid:63), X = U × VT , and taking an unobserved entry Yij, we deﬁne aikj as: Ui = (cid:80)r
k=1 aikjUik , where Ud
(d ∈ {1, ..., n}) is the dth row of matrix U and ik represents the index of observed entries in jth column. Then, the
necessary condition of uniqueness of Y is:

r
(cid:88)

k=1

|aikj| ≤ (cid:15)

(cid:19)

(cid:18) Tmin
Tmax

Where r = GRR(Y), Tmin and Tmax are the length of smallest and largest intervals and (cid:15) is a small constant.

Proof. To better understand the concept of uniqueness in GRR benchmark, let’s ﬁrst look at the uniqueness in ﬁxed
value matrix factorization (traditional deﬁnition(MF)).

In ﬁxed value matrix factorization, it is proved that to achieve uniqueness, we need at least r = r(X) observation in
each column(other than the independent columns). Therefore, if we decompose X as X = UVT , and plan to changed
only unobserved entries of Y in column j (in opposed to uniqueness), we need to change the jth row of matrix V. To
do so, let’s assume we change the jth row to:

[Vj1 + c1, ..., Vjr + cr]

(43)

Now since we know r(U ) = r and assume the respective rows of U to observed entries of column j in matrix X are
independent (this is a required assumption for uniqueness), we can show that only possible value for c1, ..., cr which
does not change the observed entries of X is 0, which conﬁrm the uniqueness.

The biggest difference between MF based on GRR and traditional MF is the fact that the observed entries of matrix
X are not ﬁxed in GRR version, and can change through the respective interval. In result, to achieve uniqueness we
need to ﬁnd a condition which for any column of X, by changing respective row of V, while the value of observed
entries stay in the respected intervals, the value of unobserved ones wouldn’t change dramatically which result in
moving to other intervals. To do so, we will calculate the maximum of the possible change for an arbitrary unobserved
entry of column j in matrix Y.

Let’s call the r observed entries of column’s j of matrix Y, Yi1j, ..., Yirj. Similar to MF case, we assume that the
respective rows of U to these entries are independent. In result, if we represent the change in entries of jth rows of V
by ci, we should have:

Where Uik is the ikth row of U, and (cid:15)ikj is the possible change for Xikj, based on the observed interval. Therefore:

(cid:15)ikj ∈ (τikj ↓ −Xikj, τikj ↑ −Xikj) = ((cid:15)−

ikj, (cid:15)+

ikj)

(42)

(44)

(45)






Ui1
...
Uir










 ×





 =




c1
...
cr






(cid:15)i1j
...
(cid:15)irj

15

(46)

(47)

(48)

(49)

(50)

(51)

(52)

(53)

Now let’s assume we want to ﬁnd the maximum possible change for Xsj considering that Ysj is and unobserved entry.
Since Uik ’s are independent, there exist a1, ..ar which:

Therefore, we can show the change in entry Xsj as:

In result, for the maximum possible change we have:

Us =

aikjUik

A =

aikj(cid:15)ikj

r
(cid:88)

k=1

r
(cid:88)

k=1

Where sign(.) is the sign function. On the other hand we know:

max|A| = max(

aikj(cid:15)

sign(aik j )
ikj

, |

aikj(cid:15)

−sign(aik j )
ikj

|)

r
(cid:88)

k=1

r
(cid:88)

k=1

aikj(cid:15)

sign(aik j )
ikj

+ |

aikj(cid:15)

−sign(aik j )
ikj

| =

|aikj|Tikj

r
(cid:88)

k=1

r
(cid:88)

k=1

r
(cid:88)

k=1

⇒ max|A| (cid:62) 1
2

r
(cid:88)

k=1

|aikj|Tikj

Where Tikj is the length of the interval entry of ¯Xikj. Clearly, to achieve the uniqueness we need max|A| ≤ Tsj. But,
since the entry Xsj is unobserved we don’t know the value of Tsj. In result, for sake of uniqueness in the worst case we
need:

r
(cid:88)

k=1

|aikj|Tmax ≤ (cid:15)Tmin

⇒

|aikj| ≤ (cid:15)

r
(cid:88)

k=1

Tmin
Tmax

Where Tmin and Tmax are the smallest and the biggest interval, and (cid:15) is a small real constant.

Theorem 4.2. (Sufﬁcient Condition) Using above necessary condition, for any unobserved entry Yij of matrix Y
we deﬁne ¯(cid:15) as minimum distance of Xij with its respected interval’s boundaries. Than, we will have the following
inequality as sufﬁcient condition of uniqueness:

¯(cid:15) ≥ max(

aikj(cid:15)

sign(aik j )
ik

,

aikj(cid:15)

−sign(aik j )
ik

)

r
(cid:88)

k=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

r
(cid:88)

k=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Where r and aikj are deﬁned as before, (cid:15)+
is deﬁned as negative of the distance of Xikj with its respected lower bound.

ikj is deﬁned as the distance of Xikj with its respected upper bound and (cid:15)−
ikj

Proof. Sufﬁcient condition is the direct result of Necessary Conditions proof. By combining (48) with the deﬁnition of
uniqueness we can achieve the Sufﬁcient Condition.

Theorem 4.3. For any (cid:15) > 0 and matrix Y, sign-rank(Y) = (cid:15)-rankσ(Y).

Proof. Let B(cid:15)
σ(k) = {B ∈ {0, 1}n×m; (cid:15)-rankσ(B) = k}, i.e. the set of binary matrices whose (cid:15)-rankσ is equal to k,
and B+(k) = {B ∈ {0, 1}n×m; sign-rank(B) = k}. We prove the theorem by showing both directions. B+ ⊆ Bσ:
Any U, V that works for + should work with σ if multiplied by a very large number, i.e. take a sufﬁciently large η, and
Uσ = ηU+, Vσ = ηV+. Then, Xσ = η2X+ and if we set θσ = η2θ+, then (Xσ − θσ) = η2(X+ − θ+), therefore
will have the same sign, and Yσ = σ(Xσ) will be arbitrarily close to 0 and 1 in Y+. Bσ ⊆ B+: Any U, V that works
for σ will directly work with +.

16

Remark 4.1. To extend Theorem 4.3 to multi-ordinal cases, we need to show that for any arbitrary set of thresholds in
GRR, there exists another set of thresholds for multi-sigmoid function which will satisfy the condition in theorem 4.3
for multi-ordinal matrices. The procedure of proof is similar to binary cases. The only difference is the fact that after
multiplying our matrices into a big enough constant, we need to choose multi-sigmoid’s thresholds in a way that will
guarantee the multi-sigmoid(X) is close enough of to GRF(X)(which is equal to Y).

17

8
1
0
2
 
y
a
M
 
1
 
 
]
L
M

.
t
a
t
s
[
 
 
1
v
4
8
1
0
0
.
5
0
8
1
:
v
i
X
r
a

Compact Factorization of Matrices Using Generalized Round-Rank

Pouya Pezeshkpour
University of California
Irvine, CA
pezeshkp@uci.edu

Carlos Guestrin
University of Washington
Seattle, WA
guestrin@cs.uw.edu

Sameer Singh
University of California
Irvine, CA
sameer@uci.edu

Abstract

Matrix factorization is a well-studied task in machine learning for compactly representing large, noisy data. In
our approach, instead of using the traditional concept of matrix rank, we deﬁne a new notion of link-rank based on a
non-linear link function used within factorization. In particular, by applying the round function on a factorization to
obtain ordinal-valued matrices, we introduce generalized round-rank (GRR). We show that not only are there many
full-rank matrices that are low GRR, but further, that these matrices cannot be approximated well by low-rank linear
factorization. We provide uniqueness conditions of this formulation and provide gradient descent-based algorithms.
Finally, we present experiments on real-world datasets to demonstrate that the GRR-based factorization is signiﬁcantly
more accurate than linear factorization, while converging faster and using lower rank representations.

1 Introduction

Matrix factorization is a popular machine learning technique, with applications in variety of domains, such as recommen-
dation systems [Lawrence and Urtasun, 2009, Salakhutdinov and Mnih, 2008b], natural language processing [Riedel
et al., 2013], and computer vision [Huang, 2003]. Due to this widespread use of these models, there has been con-
siderable theoretical analysis of the various properties of low-rank approximations of real-valued matrices, including
approximation rank [Alon et al., 2013, Davenport et al., 2014] and sample complexity [Balcan et al., 2017].

Rather than assume real-valued data, a number of studies (particularly ones on practical applications) focus on
more speciﬁc data types, such as binary data [Nickel and Tresp, 2013], integer data [Lin et al., 2009], and ordinal
data [Koren and Sill, 2011, Udell et al., 2014]. For such matrices, existing approaches have used different link functions,
applied in an element-wise manner to the low-rank representation [Neumann et al., 2016], i.e. the output ˆY is ψ(UT V)
instead of the conventional UT V. These link functions have been justiﬁed from a probabilistic point of view [Collins
et al., 2001, Salakhutdinov and Mnih, 2008a], and have provided considerable success in empirical settings. However,
theoretical results for linear factorization do not apply here, and thus the expressive power of the factorization models
with non-linear link functions is not clear, and neither is the relation of the rank of a matrix to the link function used.
In this paper, we ﬁrst deﬁne a generalized notion of rank based on the link function ψ, as the rank of a latent
matrix before the link function is applied. We focus on a link function that applies to factorization of integer-valued
matrices: the generalized round function (GRF), and deﬁne the corresponding generalized round-rank (GRR). After
providing background on GRR, we show that there are many low-GRR matrices that are full rank1. Moreover, we also
study the approximation limitations of linear rank, by showing, for example, that low GRR matrices often cannot be
approximated by low-rank linear matrices. We deﬁne uniqueness for GRR-based matrix completion, and derive its
necessary and sufﬁcient conditions. These properties demonstrate that many full linear-rank matrices can be factorized
using low-rank matrices if an appropriate link function is used.

We also present an empirical evaluation of factorization with different link functions for matrix reconstruction and
completion. We show that using link functions is efﬁcient compared to linear rank, in that gradient-based optimization
approach learns more accurate reconstructions using a lower rank representation and fewer training samples. We also
perform experiments on matrix completion on two recommendation datasets, and demonstrate that appropriate link
function outperform linear factorization, thus can play a crucial role in accurate matrix completion.

1We will refer to rank of a matrix as its linear rank, and refer to the introduced generalized rank as link-rank.

1

2 Link Functions and Generalized Matrix Rank

Here we introduce our notation for matrix factorization, and use it to introduce link functions and generalized link-rank.
We will focus on the round function and round-rank, introduce their generalized versions, and present their properties.

Rank Based Factorization: Matrix factorization, broadly deﬁned, is a decomposition of a matrix as a multiplication
of two matrices. Accordingly, rank of a matrix Y ∈ Rn×m deﬁned as the smallest natural number r such that:
Y = UVT , or,Yij = (cid:80)
k UikVjk, where U ∈ Rn×r and V ∈ Rn×r. We use r(Y) to indicate the rank of a matrix
Y.
Link Functions and Link-Rank: Since the matrix Y may be from a domain Vn×m different from real matrices, link
functions can be used to deﬁne an alternate factorization:

Y = ψτ (X), X = UVT ,
where Y ∈ Vn×m, ψ : R → V (applied element-wise), X ∈ Rn×m, U ∈ Rn×r, V ∈ Rn×r, and τ represent
parameters of the link function, if any. Examples of link functions that we will study in this paper include the round
function for binary matrices, and its generalization to ordinal-valued matrices. Link functions were introduced for
matrix factorization by Singh and Gordon [2008], consequently Udell et al. [2014] presented their generalization to loss
functions and regularization for abstract data types.

(1)

Deﬁnition 2.1. Given a matrix Y and a link function ψτ parameterized by τ , the link-rank rψ of Y is deﬁned as the
minimal rank of a real-matrix X such that, Y = ψτ (X),

rψ(Y) = min

{r(X); Y = ψτ (X)}

X∈Rn×m,τ

(2)

Note that with ψ ≡ I, i.e. ψ(x) = x, rψ(Y) = r(Y).

Sign and Round Rank: If we consider the sign function as the link function, where sign(x) = {0 if x < 0, 1 o.w.}
(applied element-wise to the entries of the matrix), the link-rank deﬁned above corresponds to the well-known sign-rank
for binary matrices [Neumann, 2015]:

sign-rank(Y) = min

{r(X); Y = sign(X)} .

X∈Rn×m

A variation of the sign function that uses a threshold τ , Roundτ (x) = {0 if x < τ, 1 o.w.} when used as a link function
results in the round-rank for binary matrices, i.e.

round-rankτ (Y) = min

{r(X); Y = Roundτ (X)} ,

X∈Rn×m

as shown in Neumann [2015]. Thus, our notion of link-rank not only uniﬁes existing deﬁnitions of rank, but can be
used for novel ones, as we will do next.
Generalized Round-Rank (GRR): Many matrix factorization applications use ordinal values, i.e V = {0, 1, . . . , N }.
For these, we deﬁne generalized round function (GRF):

GRFτ1,...,τN (x) =

(3)


0

1
...

N − 1
N

x ≤ τ1
τ1 < x ≤ τ2

τN −1 < x ≤ τN

o.w.

where its parameters τ ≡ {τ1, ..., τN } are thresholds (sorted in ascending order). Accordingly, we deﬁne generalized
round-rank (GRR) for any ordinal matrix Y as:

GRRτ (Y) = min

{r(X); Y = GRFτ (X)} .

X∈Rn×m

Here, we are primarily interested in exploring the utility of GRR and, in particular, compare the representation
capabilities of low-GRR matrices to low-linear rank matrices. To this end, we present the following interesting property
of GRR.

2

Theorem 2.1. For a given matrix Y ∈ {0, . . . , N }n×m, let’s assume τ ∗ is the set of optimal thresholds, i.e.
GRRτ (cid:63) (Y ) = argminτ GRRτ (Y ), then for any other τ (cid:48):

GRRτ (cid:48)(Y) ≤ N × GRRτ (cid:63) (Y) + 1

(4)

Proof. We provide a sketch of proof here, and include the details in the appendix. We can show that the GRR can
change at most by 1 if we add a constant to all the thresholds and does not change at all if all the thresholds are
multiplied by a constant. Further, we show that there exist (cid:15)i for every i ∈ {1, ..., N − 1} such that shifting τi by (cid:15)i
does not change the GRR. These properties provide a bound to the change in GRR between any two sets of thresholds.

This theorem shows that even though using a ﬁxed set of thresholds is not optimal, the rank is still bounded in terms
of N , and does not depend on the size of the matrix (n or m). Other complementary lemmas are provided in appendix.

Remark 2.1. The upper bound in the theorem 2.1 matches the upper bound found in Neumann et al. [2016] for the
case where N = 1, GRRτ (cid:48)(Y) ≤ GRRτ ∗ (Y) + 1.

3 Comparing Generalized Round Rank to Linear Rank

Matrix factorization (MF) based on linear rank has been widely used in lots of machine learning problems like matrix
completion, matrix recovery and recommendation systems. The primary advantage of matrix factorization is its ability
to model data in a compact form. Being able to represent the same data accurately in an even more compact form,
specially when we are dealing with high rank matrices, is thus quite important. Here, we study speciﬁc aspects of exact
and approximate matrix reconstruction with GRR. In particular, we introduce matrices with high linear rank but low
GRR, and demonstrate the inability of linear factorization in approximating many low-GRR matrices.

3.1 Exact Low-Rank Reconstruction

To compare linear and GRR matrix factorization, here we identify families of matrices that have high (or full) linear
rank but low (or constant) GRR. Such matrices demonstrate the primary beneﬁt of GRR over linear rank: factorizing
matrices using GRR can be signiﬁcantly beneﬁcial.

As provided in Neumann [2015] for round-rank (a special case of GRR), GRRτ (Y) ≤ r(Y) for any matrix
Y ∈ Vn×m. More importantly, there are many structures that lower bound the linear rank of a matrix. For example,
if we deﬁne the upper triangle number nU for matrix Y ∈ Vn×n as the size of the biggest square block which is in
the form of an upper triangle matrix, then r(Y) ≥ nU . If we deﬁne the identity number nI similarly, then r(Y) ≥ nI ,
and similarly for matrices with a band diagonal submatrix. None of these lower bounds that are based on identity,
upper-triangle, and band-diagonal structures apply to GRR. In particular, as shown in Neumann [2015], identity
matrices (of any size) have a constant round-rank of 2, upper triangle matrices have round-rank of 1, and band diagonal
matrices have round-rank of 2 (which also holds for GRR). Moreover, we provide another lower bound for linear rank
of a matrix, which is again not applicable to GRR.

Theorem 3.1. If a matrix Y ∈ Rn×m contains k rows, k ≤ n, k ≤ m, such that R = {YR1, ..., YRk }, two columns
C = {j0, j1}, and:

1. rows in R are distinct from each other, i.e, ∀i, i(cid:48) ∈ R, ∃j, Yij (cid:54)= Yi(cid:48)j,
2. columns in C are distinct from each other, i.e, ∃i, Yij0 (cid:54)= Yij1, and
3. matrix spanning R and C are non-zero constants, w.l.o.g. ∀i ∈ R, Yij0 = Yij1 = 1,

then r(Y) ≥ k. (See appendix for the proof)

So far, we provide examples of high linear-rank structures that do not impose any constraints on GRR. We now
provide the following lemma that, in conjunction with above results, indicates that lower bounds on the linear rank can
be really high for matrices if they contain low-GRR structures (like identity and upper-triangle), while the lower bound
on GRR is low.

Lemma 3.1. For any matrix A, if there exists a submatrix A(cid:48) in a way that r(A(cid:48)) = R and GRRτ (A(cid:48)) = r, then
GRRτ (A) ≥ r and r(A) ≥ R.

3

Proof. If we consider the linear rank as the number of independent row (column) of the matrix, consequently having a
rank of R for submatrix A(cid:48) means there exist at least R independent rows in matrix A. Using this argument we can
simply prove above inequalities.

3.2 Approximate Low-Rank Reconstruction

Apart from examples of high linear-rank matrices that have low GRR, we can further show that many of these matrices
cannot even be approximated by a linear factorization. In other words, we show that there exist many matrices for
which not only their linear rank is high, but further, that the linear rank approximations are poor as well, while their low
GRR reconstruction is perfect. In order to measure whether a matrix can be approximated well, we describe the notion
of approximate rank (introduced by Alon et al. [2013], we rephrase it here in our notation).

Deﬁnition 3.1. Given (cid:15), approximate rank of a matrix X is:
(cid:15)-rank(X) = min{r(X(cid:48)) : X(cid:48) ∈ Rn×m, ||X − X(cid:48)||2

F ≤ (cid:15)}

We extend this deﬁnition to introduce the generalized form of approximate rank as follows:

Deﬁnition 3.2. Given (cid:15) and a link function ψ (e.g. GRF), the generalized approximate rank of a matrix Y is deﬁned
as:

(cid:15)-rankψ(Y) = min{rψ(Y(cid:48)) : Y(cid:48) ∈ Vn×m, ||Y − Y(cid:48)||2

F ≤ (cid:15)}.

For an arbitrary matrix, we can evaluate how well a linear factorization can approximate it using SVD, i.e.:

Theorem 3.2. For a matrix X = UΣVT , where diag(Σ) are the singular values, and U and V are orthogonal
matrices, then (cid:80)n
i=k+1 |Σii|2 = minY,r(Y)=k ||X − Y||2
F .

Proof. This was ﬁrst introduced in Eckart and Young [1936], and recently presented again in Udell et al. [2014]. We
omit the detailed proof, but the primary intuition is that the PCA decomposition minimizes the Frobenius norm, and
Y = U(cid:48)V(cid:48), with U(cid:48) = UΣ 1

2 and V(cid:48) = Σ 1

2 VT .

For an arbitrary binary matrix Y, recall that Roundτ =0(Y) is equal to sign-rank(Y). Using above theorem, we
want to show that there are binary matrices that cannot be approximated by low linear-rank matrices (for non-trivial (cid:15)),
but can be approximated well by low round-rank matrices. Clearly, these results extend to ordinal matrices and their
GRR approximations, the generalized form of binary case.

Let us consider Y, the identity binary matrix of size n, for which the singular values of Y are all 1s. By using
Theorem 3.2, any linear factorization Y(cid:48) of rank k will have ||Y − Y(cid:48)||2
F ≥ (n − k). As a result, the identity matrix
cannot be approximated by any rank-k linear factorization for (cid:15) < n − k. On the other hand, such a matrix can be
reconstructed exactly with a rank 2 factorization if using the round-link function, since round-rank(Y) = 2. In Figure 1,
we illustrate a number of other such matrices, i.e. they can be exactly represented by a factorization with GRR of 2, but
cannot be approximated by any compact linear factorization.

4 Matrix Completion with Generalized Round-Rank Factorization

So far, we show that there are many matrices that cannot be represented compactly using conventional matrix factoriza-
tion (linear), either approximately or exactly, whereas they can be reconstructed using compact matrices when using GRF
as the link function. In this section, we study properties of completion of ordinal-valued matrices based on GRF (and
the notion of rank from GRR). In particular, given a number of noise-free observations Ω from Y ∈ {0, . . . , N }n×m
and its GRR(Y) = r, r (cid:28) min(n, m), the goal here is to identify U ∈ Rn×r, V ∈ Rm×r such that GRF(UVT )
completes the unobserved entries of Y accurately.

4.1 Theoretical Results for Uniqueness

Uniqueness in matrix completion is deﬁned as the minimum number of entries required to recover the matrix Y
with high probability, assuming that sampling of the set of observed entries is based on an speciﬁc distribution. To
obtain uniqueness in GRR based factorization, we ﬁrst need to introduce the interval matrix ¯X. Based on deﬁnition of
generalized round function (GRF) and a set of ﬁxed thresholds, we deﬁne matrix ¯X to be a matrix with interval entries
calculated based on entries of matrix Y and thresholds (τ1, ...τN ). As an example, if an entry Yij is k ∈ {0, ..., N }, ¯Xij

4

Figure 1: Comparison of the optimal linear factorization approximation as the rank k is varied for a number of matrices
(of size n × n), demonstrating that linear factorization is unable to approximate these matrices with low-rank. All of
these matrices have a constant generalized round-rank (≤ 2).

would be equal to the interval [τk, τk+1]. When entries of Y are equal to 0 or N , w.l.o.g. we assume the corresponding
entries in matrix ¯X are bounded. Thus, each one of matrix ¯X’s entries must be one of the N + 1 possible intervals
based on GRF’s thresholds.

Deﬁnition 4.1. A target matrix Y ∈ {0, . . . , N }n×m with 1) observed set of entries Ω = {(i, j), Yijis observed},
2) set of known thresholds (τ1, ...τN ), and 3) GRRτ1,...,τN (Y) = r, is called uniquely recoverable, if we can recover its
unique interval matrix ¯X with high probability.

Similar to ¯X, we introduce X (cid:63) to be a set of all matrices that satisfy following two conditions: 1) For the observed
entries Ω of Y, Yij = GRFτ1,...,τN (X(cid:63)
ij), and 2) linear rank of X (cid:63) is r. If we consider a matrix X ∈ X (cid:63) then for an
arbitrary entry Xij we must have Xij ∈ ¯Xij, where ¯Xij is an interval containing Xij. Given a matrix X ∈ X (cid:63), the
uniqueness conditions ensure that we would be able to recover ¯X, using which we can uniquely recover matrix Y.

In the next theorems, we ﬁrst ﬁnd the necessary condition on the entries of matrix X for satisfying uniqueness of
matrix Y. Then, we derive the sufﬁcient condition accordingly. In our calculations, we assume the thresholds to be
ﬁxed and our target matrix Y be noiseless, and further, there is at least one observed entry in every column and row of
matrix Y.

Theorem 4.1. (Necessary Condition) For a target matrix Y ∈ Vn×m with few observed entries and given GRR(Y) = r,
we consider set of {Yi1j, ..., Yirj} to be the r observed entries in an arbitrary column j of Y . Given any matrix
X ∈ X (cid:63), X = U × VT , and taking an unobserved entry Yij, we deﬁne aikj as: Ui = (cid:80)r
k=1 aikjUik , where Ud
(d ∈ {1, ..., n}) is the dth row of matrix U and ik represents the index of observed entries in jth column. Then, the
necessary condition of uniqueness of Y is:

r
(cid:88)

k=1

|aikj| ≤ (cid:15)

(cid:19)

(cid:18) Tmin
Tmax

(5)

Where r = GRR(Y), Tmin and Tmax are the length of smallest and largest intervals and (cid:15) is a small constant.

Proof. We only provide a sketch of proof here, and include the details in the appendix. To achieve uniqueness we need
to ﬁnd a condition in which for any column of X, by changing respective row of V, while the value of observed entries
stay in the respected intervals, the value of unobserved ones wouldn’t change dramatically which result in moving to

5

other intervals. To do so, we will calculate the maximum of the possible change for an arbitrary unobserved entry of
column j in matrix Y. To calculate this maximum for any unobserved entry Yij, we consider the row Ui as a linear
combination of linearly independent rows of U (which are in respect to observed entries of Y in column j). Then, by
ﬁnding the maximum possible change for observed entries in column j, based on their respective intervals, we ﬁnd
mentioned boundary for achieving the uniqueness.

The same condition is necessary for matrix V as well. The necessary condition must be satisﬁed for all columns of
matrix X. Moreover, if the necessary condition is not satisﬁed, we cannot ﬁnd a unique matrix X, and hence a unique
completion, i.e. Y = GRFτ1,...,τN (X) where X ∈ X (cid:63).

Theorem 4.2. (Sufﬁcient Condition) Using above necessary condition, for any unobserved entry Yij of matrix Y
we deﬁne ¯(cid:15) as minimum distance of Xij with its respected interval’s boundaries. Then, we will have the following
inequality as sufﬁcient condition of uniqueness:

¯(cid:15) ≥ max

aikj(cid:15)

sign(aik j )
ik

,

aikj(cid:15)

−sign(aik j )
ik

(cid:32) r

(cid:88)

k=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

r
(cid:88)

k=1

(cid:12)
(cid:33)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(6)

where r and aikj are deﬁned as before, (cid:15)+
negative of the distance of Xikj to its lower bound.

ikj is deﬁned as the distance of Xikj to its upper bound, and (cid:15)−

ikj is deﬁned as

Above sufﬁcient condition is a direct result of necessary condition proof. Although not tight, it guarantees the

existence of unique ¯X, and thus the complete matrix Y.

4.2 Gradient-Based Algorithm for GRR Factorization

Although previous studies have used many different paradigms for matrix factorization, such as alternating minimization
[Hardt, 2014, Jain et al., 2013] and adaptive sampling [Krishnamurthy and Singh, 2013], stochastic gradient descent-
based (SGD) approaches have gained widespread adoption, in part due to their ﬂexibility, scalability, and theoretical
properties [De Sa et al., 2014]. For linear matrix factorization, a loss function that minimizes the squared error is used,
i.e. Llinear = (cid:80)(Yij − UiVj)2, where the summation is over the observed entries. In order to prevent over-ﬁtting, L2
regularization is often incorporated.

Round: We extend this framework to support GRR-based factorization by deﬁning an alternate loss function. In
particular, with each observed entry Yij and the current estimate of τ , we compute the b↓
ij as the lower and
upper bounds for Xij with respect to the GRF. Given these, we use the following loss, LRound = (cid:80)(b↓
ij − UiVj)+ +
(UiVj − b↑
ij)+, where (.)+ = max(., 0). Considering the regularization term as well, we apply stochastic gradient
descent as before, computing gradients using a differentiable form of max with respect to U, V, and τ .

ij and b↑

Multi-Sigmoid: Although the above loss captures the goal of the GRR-based factorization accurately, it contains both
discontinuities and ﬂat regions, and thus is difﬁcult to optimize. Instead, we also propose to use a smoother and noise
tolerant approximation of the GRF function. The sigmoid function, σ(x) = 1
1+e−x , for example, is often used to
approximate the sign function. When used as a link function in factorization, we can further show that it approximates
the sign-rank well.

Theorem 4.3. For any (cid:15) > 0 and matrix Y, sign-rank(Y) = (cid:15)-rankσ(Y). (See appendix for the proof)

We can similarly approximate GRF using a sum of sigmoid functions that we call Multi-sigmoid deﬁned as
(x) = (cid:80)N
d=1 σ(x − τd), for which the above properties also hold. The resulting loss function that minimizes the

ψmσ
τ
squared error is Lmulti-sigmoid = (cid:80)(Yij − ψmσ

τ

(UiVj))2.

In our experiments, we evaluate both of our proposed loss functions, and compare their relative performance.
We study variations in which the thresholds τ are either pre-ﬁxed or updated (using ∂
∂τ L) during training. All the
parameters of the optimization, such as learning rate and early stopping, and the hyper-parameters of our approaches,
such as regularization, are tuned on validation data.

6

(a) Random matrix, k=2

(b) Upper Triangle matrix, k=1

(c) Band Diagonal matrix, k=2

Figure 2: Matrix Recovery: Synthetic matrices that are reconstructed using their k-dimensional factorization with
different representations. We plot RMSE of the reconstruction vs the number of training iterations, demonstrating the
efﬁciency of GRR-based methods, especially without ﬁxed thresholds.

5 Experiments

In this section we evaluate the capabilities of our proposed GRR factorization relative to linear factorization ﬁrst through
variety of simulations, followed by considering smallnetﬂix and MovieLens 100K2 datasets. Unless otherwise noted, all
of evaluations are based on Root Mean Square Error (RMSE).

Matrix Recovery We ﬁrst consider the problem of recovering a fully known matrix Y from its factorization, thus all
entries are considered observed. We create three matrices in order to evaluate our approaches for recovery: (a) Random
10 × 10 matrix with N = 5 that has GRR ≤ 2 (create by randomly generating τ , U, and V), (b) Binary upper triangle
matrix with size 10 (GRR of 1), and (c) Band-diagonal matrix of size 10 and bandwidth 3, which has the linear rank of
8 and GRR of 2. Figure 2 presents the RMSE comparison of these three matrices as training progresses. For the upper
triangle and the band diagonal, we ﬁx threshold to τ = 0.5. The results show that Round works far better than others by
converging to zero. Moreover, linear approach is outperformed by the Multi-sigmoid without ﬁxed thresholds in all,
demonstrating it cannot recover even simple matrices.

Matrix Completion Instead of fully-observed matrices, we now evaluate completion of the matrix when only a few
of the entries are observed. We consider 50 × 50 upper-triangle and band-diagonal (bandwidth 10) matrices, and
sample entries from them, to illustrate how well our approaches can complete them. Results on held-out 20% entries
are given in Tables 1 and 2. In addition, we build a random matrix with size 50 and GRR 2, and present the results
for this matrix in Table 3. As we can see, linear factorization in all three cases is outperformed by our proposed
approaches. In band-diagonal, because of over-ﬁtting of the Round approach, Multi-sigmoid performs a little better,
and for upper-triangle, we achieve the best result for Round method by ﬁxing τ = 0.5.

In this section we use the smallnetﬂix movie ratings data for 95526 users and 3561
Matrix Completion on Real Data
movies, where the training dataset contains 3, 298, 163 ratings and validation contains 545, 177 ratings, while each one
of ratings is an integer in {1, 2, 3, 4, 5}. We also evaluate on a second movie recommendation dataset, Movielens 100k,
with 100, 000 ratings from 1000 users on 1700 movies, with the same range as smallnetﬂix. For this recommendation
systems, in addition to RMSE, we also consider the notion of accuracy that is more appropriate for the task, calculated
as the fraction of predicted ratings that are within ±0.5 of the real ratings. As shown in Figure 3, for smallnetﬂix,
linear factorization is better than Round approach from RMSE perspective, probably because linear is more robust to
noise. On the other hand, Multi-sigmoid achieves better RMSE than linear method. Furthermore, both Round and
Multi-sigmoid outperform the linear factorization in accuracy. Movielens results for the percentage metric shows similar
behavior as smallnetﬂix, demonstrating that GRR-based factorization can provide beneﬁts to real-world applications.
Furthermore, a comparison of our models with existing approaches on Movielens dataset is provided in Table 4. We
choose the RMSE result for smallest k presented in those works. As we can see, our Multi-sigmoid method appear very

2The codes available at: https://github.com/pouyapez/GRR-Matrix-Factorization

7

Table 1: Matrix completion for Upper Triangular Matrices (k = 1)

Proportion of Observations

10% 20% 30% 40% 50% 60% 70% 80%

Linear

Multi-Sigmoid
Multi-Sigmoid, τ = 0.5
Round
Round, τ = 0.5

0.50

0.51
0.58
0.46
0.38

0.50

0.30
0.37
0.34
0.26

0.50

0.25
0.36
0.27
0.23

0.50

0.25
0.36
0.25
0.19

0.50

0.26
0.35
0.26
0.15

0.50

0.25
0.35
0.21
0.13

0.50

0.23
0.34
0.20
0.15

0.50

0.23
0.34
0.16
0.13

Table 2: Matrix completion for Band Diagonal Matrices (k = 2)

Proportion of Observations

10% 20% 30% 40% 50% 60% 70% 80%

Linear

Multi-Sigmoid
Multi-Sigmoid, τ = 0.5
Round
Round, τ = 0.5

0.49

0.39
0.48
0.71
0.61

0.46

0.26
0.49
0.41
0.57

0.46

0.23
0.33
0.35
0.39

0.46

0.23
0.31
0.29
0.52

0.46

0.22
0.30
0.29
0.58

0.46

0.21
0.29
0.27
0.30

0.46

0.20
0.29
0.23
0.29

0.46

0.20
0.29
0.22
0.34

competitive in comparison with other methods, while our Round approach result suffer from existence of noise in the
dataset as before.

6 Related Work

There is a rich literature on matrix factorization and its applications. To date, a number of link functions have been
used, along with different losses for each, however here we are ﬁrst to focus on expressive capabilities of these link
functions, in particular of the ordinal-valued matrices [Singh and Gordon, 2008, Koren and Sill, 2011, Paquet et al.,
2012, Udell et al., 2014]. Nickel and Tresp [2013] addressed tensor factorization problem and showed improved
performance when using a sigmoid link function. Mareˇcek et al. [2017] introduced the concept of matrix factorization
based on interval uncertainty, which results in a similar objective as our algorithm. However, not only is our proposed
algorithm going beyond by updating the thresholds and supporting sigmoid-based smoothing, but we present results on
the representation capabilities of the round-link function.

A number of methods have approached matrix factorization from a probabilistic view, primarily describing
solutions when faced with different forms of noise, resulting, interestingly, in link functions as well. Collins et al.
[2001] introduced a generalization of PCA method to loss function for non real-valued data, such as binary-valued.
Salakhutdinov and Mnih [2008a] focused on Bayesian treatment of probabilistic matrix factorization, identifying the
appropriate priors to encode various link functions. On the other hand, Lawrence and Urtasun [2009] have analyzed
non-linear matrix factorization based on Gaussian process and used SGD to optimize their model. However, these
approaches do not explicitly investigate the representation capabilities, in particular, the signiﬁcant difference in rank
when link functions are taken into account.

Table 3: Matrix completion with different number of samples for Random low-GRR Matrices

Proportion of Observations

10% 20% 30% 40% 50% 60% 70% 80%

Linear

Multi-Sigmoid
Multi-Sigmoid (Fixed τ )
Round
Round (Fixed τ )

1.73

1.92
1.96
1.49
2.44

1.06

0.53
1.54
0.92
1.50

0.97

0.48
1.37
0.60
1.50

0.90

0.42
1.32
0.48
1.43

0.85

0.39
1.29
0.48
1.36

0.85

0.38
1.28
0.39
1.39

0.87

0.36
1.25
0.30
1.44

0.83

0.35
1.23
0.28
1.34

8

(a) Percentage, smallnetﬁx

(b) RMSE, smallnetﬂix

(c) Percentage, movielens

Figure 3: Performance on recommendation datasets, as k in increased

Table 4: RMSE on Movielens-100k for a variety of models with different low-rank approximation (k).

Models
APG [Kwok, 2015]
AIS-Impute [Kwok, 2015]
CWOCFI [Lu et al., 2013]
our Round
our Linear
UCMF [Zhang et al., 2014]
our Multi-sigmoid
SVDPlusPlus [Gantner et al., 2011]
SIAFactorModel [Gantner et al., 2011]
GG [Lakshminarayanan et al., 2011]

Low-rank approximation RMSE
1.037
1.037
1.01
1.007
0.995
0.948
0.928
0.911
0.908
0.907

k=70
k=70
k=10
k=10
k=10
-
k=10
k=10
k=10
k=30

Sign-rank and its properties have been studied by Nickel et al. [2014], Bouchard et al. [2015], Davenport et al.
[2014], and more recently, Neumann [2015] provides in-depth analysis of round-rank. Although these have some
similarity to GRR, sign-rank and round-rank are limited to binary matrices, while GRR is more suitable for most
practical applications, and further, we present extension of their results in this paper that apply to round-rank as well.
Since we can view matrix factorization as a simple neural-network, research in understanding the complexity of neural
networks [Huang, 2003], in particular with rectiﬁer units [Pan and Srikumar, 2016], is relevant, however the results
differ signiﬁcantly in the aspects of representation we focus on.

7 Conclusions and Future Work

In this paper, we demonstrated the expressive power of using link functions for matrix factorization, speciﬁcally the
generalized round-rank (GRR) for ordinal-value matrices. We show that not only are there full-rank matrices that are
low GRR, but further, that these matrices cannot even be approximated by low linear factorization. Furthermore, we
provide uniqueness conditions of this formulation, and provide gradient descent-based algorithms to perform such a
factorization. We present evaluation on synthetic and real-world datasets that demonstrate that GRR-based factorization
works signiﬁcantly better than linear factorization: converging faster while requiring fewer observations. In future
work, we will investigate theoretical properties of our optimization algorithm, in particular explore convex relaxations
to obtain convergence and analyze sample complexity. We are interested in the connection of link-rank with different
probabilistic interpretations, in particular, robustness to noise. Finally, we are also interested in practical applications of
these ideas to different link functions and domains.

9

References

Noga Alon, Troy Lee, Adi Shraibman, and Santosh Vempala. The approximate rank of a matrix and its algorithmic

applications: Approximate rank. In Symposium on Theory of Computing (STOC), pages 675–684, 2013.

Maria-Florina Balcan, Yingyu Liang, David P Woodruff, and Hongyang Zhang. Optimal sample complexity for matrix

completion and related problems via (cid:96)2-regularization. arXiv preprint arXiv:1704.08683, 2017.

Guillaume Bouchard, Sameer Singh, and Theo Trouillon. On approximate reasoning capabilities of low-rank vector
spaces. In AAAI Spring Syposium on Knowledge Representation and Reasoning (KRR): Integrating Symbolic and
Neural Approaches, 2015.

Michael Collins, Sanjoy Dasgupta, and Robert E Schapire. A generalization of principal components analysis to the

exponential family. In Neural Information Processing Systems (NIPS), pages 617–624, 2001.

Mark A Davenport, Yaniv Plan, Ewout van den Berg, and Mary Wootters. 1-bit matrix completion. Information and

Inference, 3(3):189–223, 2014.

Christopher De Sa, Kunle Olukotun, and Christopher Ré. Global convergence of stochastic gradient descent for some

non-convex matrix problems. arXiv preprint arXiv:1411.1134, 2014.

Carl Eckart and Gale Young. The approximation of one matrix by another of lower rank. Psychometrika, 1(3):211–218,

1936.

Zeno Gantner, Steffen Rendle, Christoph Freudenthaler, and Lars Schmidt-Thieme. Mymedialite: a free recommender
system library. In Proceedings of the ﬁfth ACM conference on Recommender systems, pages 305–308. ACM, 2011.

Moritz Hardt. Understanding alternating minimization for matrix completion. In Foundations of Computer Science

(FOCS), 2014 IEEE 55th Annual Symposium on, pages 651–660. IEEE, 2014.

Guang-Bin Huang. Learning capability and storage capacity of two-hidden-layer feedforward networks.

IEEE

Transactions on Neural Networks, 14(2):274–281, 2003.

Prateek Jain, Praneeth Netrapalli, and Sujay Sanghavi. Low-rank matrix completion using alternating minimization. In

Proceedings of the forty-ﬁfth annual ACM symposium on Theory of computing, pages 665–674. ACM, 2013.

Yehuda Koren and Joe Sill. Ordrec: an ordinal model for predicting personalized item rating distributions.

In

Proceedings of the ﬁfth ACM conference on Recommender systems, pages 117–124. ACM, 2011.

Akshay Krishnamurthy and Aarti Singh. Low-rank matrix and tensor completion via adaptive sampling. In Advances in

Neural Information Processing Systems, pages 836–844, 2013.

Quanming Yao James T Kwok. Accelerated inexact soft-impute for fast large-scale matrix completion. 2015.

Balaji Lakshminarayanan, Guillaume Bouchard, and Cedric Archambeau. Robust bayesian matrix factorisation. In
Proceedings of the Fourteenth International Conference on Artiﬁcial Intelligence and Statistics, pages 425–433,
2011.

Neil D Lawrence and Raquel Urtasun. Non-linear matrix factorization with gaussian processes. In International

Conference on Machine Learning (ICML), pages 601–608. ACM, 2009.

Matthew M Lin, Bo Dong, and Moody T Chu. Integer matrix factorization and its application. preprint, 2009.

Jing Lu, Steven Hoi, and Jialei Wang. Second order online collaborative ﬁltering. In Asian Conference on Machine

Learning, pages 325–340, 2013.

Jakub Mareˇcek, Peter Richtárik, and Martin Takáˇc. Matrix completion under interval uncertainty. European Journal of

Operational Research, 256(1):35–43, 2017.

Stefan Neumann. On Some Problems of Rounding Rank. PhD thesis, Universität des Saarlandes Saarbrücken, 2015.

10

Stefan Neumann, Rainer Gemulla, and Pauli Miettinen. What you will gain by rounding: Theory and algorithms for

rounding rank. In International Conference on Data Mining (ICDM), 2016.

Maximilian Nickel and Volker Tresp. Logistic tensor factorization for multi-relational data. In ICML Workshop -

Structured Learning: Inferring Graphs from Structured and Unstructured Inputs (SLG), 2013.

Maximilian Nickel, Xueyan Jiang, and Volker Tresp. Reducing the rank in relational factorization models by including

observable patterns. In Neural Information Processing Systems (NIPS), pages 1179–1187, 2014.

Xingyuan Pan and Vivek Srikumar. Expressiveness of rectiﬁer networks. In International Conference on Machine

Learning, pages 2427–2435, 2016.

Computing, 22(4):945–957, 2012.

Ulrich Paquet, Blaise Thomson, and Ole Winther. A hierarchical model for ordinal matrix factorization. Statistics and

Sebastian Riedel, Limin Yao, Andrew McCallum, and Benjamin M Marlin. Relation extraction with matrix factorization
and universal schemas. In North American Chapter of the Association for Computational Linguistics - Human
Language Technologies (NAACL HLT), pages 74–84, 2013.

Ruslan Salakhutdinov and Andriy Mnih. Bayesian probabilistic matrix factorization using Markov chain Monte Carlo.

In International Conference on Machine Learning (ICML), volume 25, 2008a.

Ruslan Salakhutdinov and Andriy Mnih. Probabilistic matrix factorization.

In Advances in Neural Information

Processing Systems (NIPS), volume 20, 2008b.

Ajit P Singh and Geoffrey J Gordon. A uniﬁed view of matrix factorization models. In Machine Learning and

Knowledge Discovery in Databases, pages 358–373. Springer, 2008.

Madeleine Udell, Corinne Horn, Reza Zadeh, and Stephen Boyd. Generalized low rank models. arXiv preprint

arXiv:1410.0342 (Working manuscript), 2014.

Chu-Xu Zhang, Zi-Ke Zhang, Lu Yu, Chuang Liu, Hao Liu, and Xiao-Yong Yan. Information ﬁltering via collaborative

user clustering modeling. Physica A: Statistical Mechanics and its Applications, 396:195–203, 2014.

11

Appendices

Lemma 2.1. For matrices A, B ∈ {0, ..., N }n×m:

GRRτ1,...τN (A) ≤ min(n, m)
GRRτ1,...τN (A) = GRRτ1,...τN (AT )

GRRτ1,...τN (A + B) ≤ GRRτ1,...τN (A) + GRRτ1,...τN (B)

Where + is in the real numbers and A + B ∈ {0, ..., N }n×m.

Proof. According to deﬁnition of GRR and the fact that if A = GRF(C) then r(C) ≤ min(n, m) we can conclude the
ﬁrst inequality. Furthermore, Since we know for any matrix C, r(C) = r(C T ) and use the fact that if A = GRF(C)
then AT = GRF(C t) we can show the second inequality as well. And the third inequality is the direct result of
following famous inequality:

Lemma 2.2. the following decomposition holds for Generalized Round function:

Proof. Base on deﬁnition of Round Function

Roundτi(A) , counts the number of thresholds which are smaller than

A, and this number is clearly equal to GRFτ1,...,τN (A).

Lemma 2.3. For any arbitrary subset of thresholds T = {τi1, ..., τir }:

GRRτ1,...τN (A) ≥ GRRT ( ¯A)

Where ¯A attained by the following transformation in matrix A:

r(A + b) ≤ r(A) + r(B)

GRFτ1,...,τN (A) =

Roundτi (A)

N
(cid:88)

i=1

N
(cid:80)
i=1

¯A = [bij]n×m





0,
1,
...
r − 1,

bij =

if aij ∈ {0, .., i1 − 1}
if aij ∈ {i1, .., i2 − 1}

if aij ∈ {ir, .., N − 1}

B = {B|GRFτ1,...,τN (B) = A}
¯B = { ¯B|GRFT ( ¯B) = A}

Proof. We deﬁne B and ¯B as follows:

In result for any B ∈ B, it is clear that B ∈ ¯B

Lemma 2.4. Following inequality holds for GRR:

Proof. Similar to previous Lemma, if we deﬁne B and ¯B as follows:

GRRτ1,...,τN (A) ≤ GRRτ1,...,τN ,τN +1(A)

Then it is clear that for any ¯B ∈ ¯B, we have ¯B ∈ B

B = {B|GRFτ1,...,τN (B) = A}
¯B = { ¯B|GRFτ1,..,.τN ,τN +1( ¯B) = A}

12

(7)

(8)

(9)

(10)

(11)

(12)

(13)

(14)

(15)

(16)

(17)

(18)

(19)

Lemma 2.5. Lets deﬁne the function F : RN → N as follows:

Where A is a ﬁx matrix in {0, ..., N }n×m. Then we have the following inequality:

F (τ1, ..., τN ) = GRRτ1,...,τN (A)

F ((τ1 + τ (cid:48)

1)/2, ..., τN ) ≤ F (τ1, ..., τN ) + F (τ (cid:48)

1, ..., τN )

Proof. We deﬁne B, B(cid:48) and ¯B as follows:

B = {B|GRFτ1,...,τN (B) = A}
B(cid:48) = {B(cid:48)|GRFτ (cid:48)
1,...,τN (B(cid:48)) = A}
¯B = { ¯B|GRF(τ1+τ (cid:48)

1)/2,...,τN ( ¯B) = A}

Accordingly, for any B ∈ B and B(cid:48) ∈ B(cid:48) we know B+B(cid:48)
r(B + B(cid:48)) ≤ r(B) + r(B(cid:48)) we can clearly prove the inequality.

2

∈ ¯B. Furthermore, since r( B+B(cid:48)

) = r(B + B(cid:48)) and

2

Lemma 2.6. We have the following inequality:

F (τ1 + τ (cid:48)

1, ..., τN + τ (cid:48)

N ) ≤ F (τ1, ..., τN ) + F (τ (cid:48)

1, ..., τ (cid:48)

N )

Proof. Similar to previous Lemma, if we deﬁne B, B(cid:48) and ¯B as follows:

B = {B|GRFτ1,...,τN (B) = A}
B(cid:48) = {B(cid:48)|GRFτ (cid:48)
(B(cid:48)) = A}
¯B = { ¯B|GRFτ1+τ (cid:48)

1,...,τ (cid:48)
N

1,...,τN +τ (cid:48)
N

( ¯B) = A}

For any B ∈ B and B(cid:48) ∈ B(cid:48) we know B + B(cid:48) ∈ ¯B. And since r(B + B(cid:48)) ≤ r(B) + r(B(cid:48)) we can clearly prove the
inequality.

Theorem 2.1. For a given matrix Y ∈ {0, . . . , N }n×m, let’s assume τ ∗ is the set of optimal thresholds, i.e.
GRRτ (cid:63) (Y ) = argminτ GRRτ (Y ), then for any other τ (cid:48):

GRRτ (cid:48)(Y) ≤ N × GRRτ (cid:63) (Y) + 1

Proof. To prove above inequality we ﬁrst need two following lemmas:

Lemma 2.7. We have the following inequality for GRR:

GRRτ1+c,...,τN +c(Y) ≤ GRRτ1,...,τN (Y) + 1

Where c is a real number.

Proof. We deﬁne B and B(cid:48) as follows:

B = {B|GRFτ1,..,.τN (B) = Y}
B(cid:48) = {B(cid:48)|GRFτ1+c,...,τN +c(B(cid:48)) = Y}

For an arbitrary B ∈ B let’s assume we have matrix U and V in a way that, B = U × VT . If we add a column to the
end of U and a row to the and of V and call them U(cid:48) and V(cid:48) as follows:




U (cid:48) =




U


c
...

 ,
c

V (cid:48) =




V


1
...


1

It is clear that B(cid:48) = U(cid:48) × V(cid:48)T ∈ B(cid:48). Furthermore, by using the fact that r(B(cid:48)) ≤ r(B) + 1 we can complete the
proof.

13

(20)

(21)

(22)

(23)

(24)

(25)

(26)

(27)

(28)

(29)

(30)

(31)

(32)

(33)

Lemma 2.8. For arbitrary k ∈ R, the following equality holds:

Proof. Similar to previous Lemma, if we deﬁne B and B(cid:48) as follows:

GRRkτ1,...,kτN (Y) = GRRτ1,...τN (Y)

B = {B|GRFτ1,...τN (B) = A}
B(cid:48) = {B(cid:48)|GRFkτ1,...,kτN (B(cid:48)) = A}

For any B ∈ B it is clear that k × B ∈ B(cid:48). On the other hand, for any B(cid:48) ∈ B(cid:48) we know that B(cid:48)/k ∈ B.In result, by
considering the fact that r(kB) = r(B), we can complete the proof .

base on These lemmas and the fact that for any i ∈ {1, ..., N − 1}, there exist an (cid:15)i which will satisﬁes the following

equality:

GRRτ1,...,τi−(cid:15)i,...,τN (Y) = GRRτ1,...τN (Y)

We can show that there exists a set of (cid:15)i (i ∈ {1, ..., N − 1}), that transform (τ1, ...τN ) in to (τ (cid:48)
linear combinations. In another word, it means we have k0, ..., kN −1 in a way that:

1, ..., τ (cid:48)

N ) with a set of

Where T (cid:48) = (τ (cid:48)
as follows:

1, ...τ (cid:48)

N ), T0 = (τ1, ...τN ) and Ti = (τ1, ..., τi − (cid:15)i, ..., τN ) in vector format. Therefore, if we deﬁne Bi

And considering the fact that:

T (cid:48) = k0T0 + ... + kN −1TN −1

Bi = {Bi|GRFTi(Bi) = A}

r(k0B + ... + kN −1BN −1) ≤

r(kjBj)

N −1
(cid:88)

j=0

N −1
(cid:88)

j=0

=

r(Bj)

(34)

(35)

(36)

(37)

(38)

(39)

(40)

(41)

Finally, with Lemma 2.7 equation 37 we can complete the theorem.

Lemma 3.1. For any matrix A, if there exists a submatrix A(cid:48) in a way that r(A(cid:48)) = R and GRRτ (A(cid:48)) = r, then
GRRτ (A) ≥ r and r(A) ≥ R .

Proof. If we consider the linear rank as the number of independent row (column) of the matrix, consequently having a
rank of r for submatrix A(cid:48) means there exist at least r independent rows in matrix a A. Using this argument we can
simply prove above inequalities.

Theorem 3.1. If a matrix Y ∈ Rn×m contains k rows, k ≤ n, k ≤ m, such that R = {YR1, ..., YRk }, two columns
C = {j0, j1}, and:

1. rows in R are distinct from each other, i.e, ∀i, i(cid:48) ∈ R, ∃j, Yij (cid:54)= Yi(cid:48)j,

2. columns in C are distinct from each other, i.e, ∃i, Yij0 (cid:54)= Yij1, and

3. matrix spanning R and C are non-zero constants, w.l.o.g. ∀i ∈ R, Yij0 = Yij1 = 1,

then r(Y) ≥ k.

14

Proof. Let us assume r(Y) < k, i.e. ∃k(cid:48) < k, U ∈ Rk(cid:48)×n, V ∈ Rk(cid:48)×m such that Y = UT × V. Since the rows R and
the columns in C are distinct, their factorizations in U and V have to also be distinct, i.e. ∀i, i(cid:48) ∈ R, i (cid:54)= i(cid:48), Ui (cid:54)= Ui(cid:48)
and Vj0 (cid:54)= Vj1. Furthermore, ∀i, i(cid:48) ∈ R, i (cid:54)= i(cid:48), (cid:54) ∃a, Ui = aUi(cid:48) and (cid:54) ∃a, Vj0 = aVj1 for a (cid:54)= 0, it is clear that
Ui · Vj0 = Ui · Vj1 = 1 (and similarly for i, i(cid:48) ∈ R).

Now consider a row i ∈ R. Since ∀j ∈ C, Yij = 1, then Ui · Vj = 1. As a result, Vj are distinct vectors that
lie in the hyperplane spanned by Ui · Vj = 1. In other words, the hyperplane Ui · Vj = 1 deﬁnes a k(cid:48)-dimensional
hyperplane tangent to the unit hyper-sphere.

Going over all the rows in R, we obtain constraints that Vj are distinct vectors that lie in the intersection of the
hyperplanes spanned by Ui · Vj = 1 for all i ∈ R. Since all Uis are distinct, there are k distinct k(cid:48)-dimensional
hyperplanes, all tangent to the unit sphere, that intersect at more than one point (since Vjs are distinct).

Since k hyper-planes tangent to unit sphere can intersect at at most one point in k(cid:48) < k dimensional space, Vj

cannot be distinct vectors. Hence, our original assumption k(cid:48) < k is wrong, therefore, r(Y) ≥ k.

Theorem 4.1. (Necessary Condition) For a target matrix Y ∈ Vn×m with few observed entries and given GRR(Y) = r,
we consider set of {Yi1j, ..., Yirj} to be the r observed entries in an arbitrary column j of Y . Given any matrix
X ∈ X (cid:63), X = U × VT , and taking an unobserved entry Yij, we deﬁne aikj as: Ui = (cid:80)r
k=1 aikjUik , where Ud
(d ∈ {1, ..., n}) is the dth row of matrix U and ik represents the index of observed entries in jth column. Then, the
necessary condition of uniqueness of Y is:

r
(cid:88)

k=1

|aikj| ≤ (cid:15)

(cid:19)

(cid:18) Tmin
Tmax

Where r = GRR(Y), Tmin and Tmax are the length of smallest and largest intervals and (cid:15) is a small constant.

Proof. To better understand the concept of uniqueness in GRR benchmark, let’s ﬁrst look at the uniqueness in ﬁxed
value matrix factorization (traditional deﬁnition(MF)).

In ﬁxed value matrix factorization, it is proved that to achieve uniqueness, we need at least r = r(X) observation in
each column(other than the independent columns). Therefore, if we decompose X as X = UVT , and plan to changed
only unobserved entries of Y in column j (in opposed to uniqueness), we need to change the jth row of matrix V. To
do so, let’s assume we change the jth row to:

[Vj1 + c1, ..., Vjr + cr]

(43)

Now since we know r(U ) = r and assume the respective rows of U to observed entries of column j in matrix X are
independent (this is a required assumption for uniqueness), we can show that only possible value for c1, ..., cr which
does not change the observed entries of X is 0, which conﬁrm the uniqueness.

The biggest difference between MF based on GRR and traditional MF is the fact that the observed entries of matrix
X are not ﬁxed in GRR version, and can change through the respective interval. In result, to achieve uniqueness we
need to ﬁnd a condition which for any column of X, by changing respective row of V, while the value of observed
entries stay in the respected intervals, the value of unobserved ones wouldn’t change dramatically which result in
moving to other intervals. To do so, we will calculate the maximum of the possible change for an arbitrary unobserved
entry of column j in matrix Y.

Let’s call the r observed entries of column’s j of matrix Y, Yi1j, ..., Yirj. Similar to MF case, we assume that the
respective rows of U to these entries are independent. In result, if we represent the change in entries of jth rows of V
by ci, we should have:

Where Uik is the ikth row of U, and (cid:15)ikj is the possible change for Xikj, based on the observed interval. Therefore:

(cid:15)ikj ∈ (τikj ↓ −Xikj, τikj ↑ −Xikj) = ((cid:15)−

ikj, (cid:15)+

ikj)

(42)

(44)

(45)






Ui1
...
Uir










 ×





 =




c1
...
cr






(cid:15)i1j
...
(cid:15)irj

15

(46)

(47)

(48)

(49)

(50)

(51)

(52)

(53)

Now let’s assume we want to ﬁnd the maximum possible change for Xsj considering that Ysj is and unobserved entry.
Since Uik ’s are independent, there exist a1, ..ar which:

Therefore, we can show the change in entry Xsj as:

In result, for the maximum possible change we have:

Us =

aikjUik

A =

aikj(cid:15)ikj

r
(cid:88)

k=1

r
(cid:88)

k=1

Where sign(.) is the sign function. On the other hand we know:

max|A| = max(

aikj(cid:15)

sign(aik j )
ikj

, |

aikj(cid:15)

−sign(aik j )
ikj

|)

r
(cid:88)

k=1

r
(cid:88)

k=1

aikj(cid:15)

sign(aik j )
ikj

+ |

aikj(cid:15)

−sign(aik j )
ikj

| =

|aikj|Tikj

r
(cid:88)

k=1

r
(cid:88)

k=1

r
(cid:88)

k=1

⇒ max|A| (cid:62) 1
2

r
(cid:88)

k=1

|aikj|Tikj

Where Tikj is the length of the interval entry of ¯Xikj. Clearly, to achieve the uniqueness we need max|A| ≤ Tsj. But,
since the entry Xsj is unobserved we don’t know the value of Tsj. In result, for sake of uniqueness in the worst case we
need:

r
(cid:88)

k=1

|aikj|Tmax ≤ (cid:15)Tmin

⇒

|aikj| ≤ (cid:15)

r
(cid:88)

k=1

Tmin
Tmax

Where Tmin and Tmax are the smallest and the biggest interval, and (cid:15) is a small real constant.

Theorem 4.2. (Sufﬁcient Condition) Using above necessary condition, for any unobserved entry Yij of matrix Y
we deﬁne ¯(cid:15) as minimum distance of Xij with its respected interval’s boundaries. Than, we will have the following
inequality as sufﬁcient condition of uniqueness:

¯(cid:15) ≥ max(

aikj(cid:15)

sign(aik j )
ik

,

aikj(cid:15)

−sign(aik j )
ik

)

r
(cid:88)

k=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

r
(cid:88)

k=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

Where r and aikj are deﬁned as before, (cid:15)+
is deﬁned as negative of the distance of Xikj with its respected lower bound.

ikj is deﬁned as the distance of Xikj with its respected upper bound and (cid:15)−
ikj

Proof. Sufﬁcient condition is the direct result of Necessary Conditions proof. By combining (48) with the deﬁnition of
uniqueness we can achieve the Sufﬁcient Condition.

Theorem 4.3. For any (cid:15) > 0 and matrix Y, sign-rank(Y) = (cid:15)-rankσ(Y).

Proof. Let B(cid:15)
σ(k) = {B ∈ {0, 1}n×m; (cid:15)-rankσ(B) = k}, i.e. the set of binary matrices whose (cid:15)-rankσ is equal to k,
and B+(k) = {B ∈ {0, 1}n×m; sign-rank(B) = k}. We prove the theorem by showing both directions. B+ ⊆ Bσ:
Any U, V that works for + should work with σ if multiplied by a very large number, i.e. take a sufﬁciently large η, and
Uσ = ηU+, Vσ = ηV+. Then, Xσ = η2X+ and if we set θσ = η2θ+, then (Xσ − θσ) = η2(X+ − θ+), therefore
will have the same sign, and Yσ = σ(Xσ) will be arbitrarily close to 0 and 1 in Y+. Bσ ⊆ B+: Any U, V that works
for σ will directly work with +.

16

Remark 4.1. To extend Theorem 4.3 to multi-ordinal cases, we need to show that for any arbitrary set of thresholds in
GRR, there exists another set of thresholds for multi-sigmoid function which will satisfy the condition in theorem 4.3
for multi-ordinal matrices. The procedure of proof is similar to binary cases. The only difference is the fact that after
multiplying our matrices into a big enough constant, we need to choose multi-sigmoid’s thresholds in a way that will
guarantee the multi-sigmoid(X) is close enough of to GRF(X)(which is equal to Y).

17

