7
1
0
2
 
g
u
A
 
1
3

 
 
]
L
M

.
t
a
t
s
[
 
 
3
v
7
2
2
8
0
.
8
0
7
1
:
v
i
X
r
a

ChemGAN challenge for drug discovery: can AI reproduce natural chemical
diversity?

Mostapha Benhenda∗

Abstract

Generating molecules with desired chemical properties is im-
portant for drug discovery. The use of generative neural net-
works is promising for this task. However, from visual inspec-
tion, it often appears that generated samples lack diversity. In
this paper, we quantify this internal chemical diversity, and
we raise the following challenge: can a nontrivial AI model
reproduce natural chemical diversity for desired molecules?
To illustrate this question, we consider two generative mod-
els: a Reinforcement Learning model and the recently intro-
duced ORGAN. Both fail at this challenge. We hope this chal-
lenge will stimulate research in this direction.

Introduction
Drug discovery is like ﬁnding a needle in a haysack.
The chemical space of potential drugs contains more than
1060 molecules. Moreover, testing a drug in a medical
setting is time-consuming and expensive. Getting a drug
to market can take up to 10 years and cost $2.6 bil-
lion (DiMasi, Grabowski, and Hansen 2016). In this con-
text, computer-based methods are increasingly employed to
accelerate drug discovery and reduce development costs.

In particular, there is a growing interest in AI-based gener-
ative models. Their goal is to generate new lead compounds
in silico, such that their medical and chemical properties
are predicted in advance. Examples of this approach include
Variational Auto-Encoders (G´omez-Bombarelli et al. 2016),
(Kadurin et al. 2017a;
Adversarial
Networks
Neural
Kadurin et al. 2017b),
(Jaques et al. 2017;
and
Reinforcement
Segler et al. 2017;
even-
tually
Sequential Genera-
in
(Guimaraes et al. 2017;
tive
Benjamin et al. 2017).

Olivecrona et al. 2017),

Recurrent
Learning

combination with

Auto-Encoders

Adversarial

Networks

However, research in this ﬁeld often remains at the ex-
ploratory stage: generated samples are sometimes evaluated
only visually, or with respect to metrics that are not the most
relevant for the actual drug discovery process.

Rigorous evaluation would be particularly welcome re-
garding the internal chemical diversity of the gener-

*Startcrowd, Online Artiﬁcial
mostaphabenhenda@gmail.com Discuss
per on the chat:

Intelligence Lab. Email:
also the pa-

https://gitter.im/Startcrowd/drugdiscovery

ated samples. Generating a chemically diverse stream of
molecules is important, because drug candidates can fail in
many unexpected ways, later in the drug discovery pipeline.
Based on visual inspection, (Jaques et al. 2017, p. 8) re-
ports that their Reinforcement Learning (RL) generative
model tends to produce simplistic molecules. On the other
hand, (Guimaraes et al. 2017, p.6, p.8) argues that their
Objective-Reinforced Generative Adversarial Network (OR-
GAN) generates less repetitive and less simplistic samples
than RL. However, their argument is also based on visual in-
spection and therefore, it remains subjective: our own visual
inspection of the ORGAN-generated samples (available on
the ORGAN Github:

https://github.com/gablg1/ORGAN/tree
/master/results/mol_results) rather suggests
that ORGAN produces molecules as repetitive and as sim-
plistic as RL.

In this paper, we introduce a metric that quantiﬁes the in-
ternal chemical diversity of the model output. We also sub-
mit a challenge:

Challenge: Is it possible to build a non-trivial generative
model, with (part of) its output satisfying a non-trivial chem-
ical property, such that the internal chemical diversity of this
output is at least equal to the diversity found in nature for the
same kind of molecules?

To illustrate this challenge, we compare RL and ORGAN
generative models, with respect to the following chemical
properties:

1. Being active against the dopamine receptor D2. The
dopamine D2 receptor is the main receptor for all antipsy-
chotic drugs (schizophrenia, bipolar disorder...).

2. Druglikeness as deﬁned in (Guimaraes et al. 2017). We
are interested in this property because we can use
experimental results in (Guimaraes et al. 2017) to fa-
cilitate discussion. However,
the notion of druglike-
ness in (Guimaraes et al. 2017) is different from the no-
tion of Quantitative Estimation of Druglikeness (QED)
(Bickerton et al. 2012), which is an index measuring dif-
ferent physico-chemical properties facilitating oral drug
action.

Here, druglikeness is the arithmetic mean of the solubil-
ity (normalized logP), novelty (which equals 1 if the out-
put is outside of the training set, 0.3 if the output is a
valid SMILES in the training set, and 0 if the output is
not a valid SMILES), synthesizability (normalized syn-
thetic accessibility score (Ertl and Schuffenhauer 2009))
and conciseness (a measure of the difference of the length
between the generated SMILES and its canonical repre-
sentation).
We mention that recently, (Benjamin et al. 2017) consid-
ers an ORGAN with the QED deﬁnition of druglikeness.
However, we also performed our own experiments with
the QED property, and they did not affect our conclusions.

The metric of internal chemical diversity
Let a and b be two molecules, and ma and mb be their Mor-
gan ﬁngerprints (Rogers and Hahn 2010). Their number of
common ﬁngerprints is |ma ∩ mb| and their total number of
ﬁngerprints is |ma ∪ mb|.

The Tanimoto-similarity Ts between a and b is deﬁned

by:

tance.

Ts(a, b) =

|ma ∩ mb|
|ma ∪ mb|

Their Tanimoto-distance is:

Td(a, b) = 1 − Ts(a, b)
We use rdkit implementation (Landrum 2017) of this dis-

Internal diversity
We deﬁne the internal diversity I of a set of molecules A
of size |A| to be the average of the Tanimoto-distance Td
of molecules of A with respect to each other. Formally, we
have:

I(A) =

1
|A|2 X

(x,y)∈A×A

Td(x, y)

(1)

For a sufﬁciently large set A, any sufﬁciently large subset
A′ ⊂ A, sampled with uniform probability, has the same
internal diversity as A. This property follows from the law
of large numbers. We can thus deﬁne the internal diversity of
a generative model, by computing the internal diversity of a
sufﬁciently large generated sample. This allows to formalize
our challenge:

Challenge (restatement): Let N be the molecules ob-
served in nature. Is there a non-trivial generative model G
and a non-trivial chemical property P such that:

I(G ∩ P ) ≥ I(N ∩ P ) ?

(2)

Internal chemical diversity is always smaller than 1 (be-
cause the Tanimoto-distance is smaller than 1), and it is usu-
ally much smaller. That’s why we prefer this deﬁnition to
the Tanimoto-variance of a set of molecules A, which is:

V (A) =

1
|A|2 X

(x,y)∈A×A

Td(x, y)2

(3)

External diversity
A related notion is external diversity. Let A1 and A2 two
sets of molecules. The relative diversity E of A1, A2 is de-
ﬁned by:

E(A1, A2) =

1

|A1| × |A2| X

(x,y)∈A1×A2

Td(x, y)

(4)

The external diversity of a generative model is deﬁned as
the relative diversity between the training set and a sufﬁ-
ciently large generated sample.

External diversity essentially corresponds to the notion of

diversity deﬁned in (Guimaraes et al. 2017, p.5).1

A measure of the Tanimoto similarity between gen-
erated and natural molecules
is also considered in
(Segler et al. 2017, ﬁgures 7 and 12) (and their ﬁgure 11
considers the Levenshtein distance between them).

The main insight of our paper is to compare internal di-
versities of generated and natural molecules respectively, in-
stead of considering the relative diversity between generated
and natural molecules (and also, we measure this internal di-
versity with respect to the subset of molecules satisfying the
property of interest).

We think measuring internal diversity is a good way
to quantitatively capture the visually observed fact that
generated molecules can be repetitive and simplistic
(Guimaraes et al. 2017; Jaques et al. 2017).

Generative Models

Reinforcement Learning
As in the case of RL considered in (Guimaraes et al. 2017),
the generator Gθ is a LSTM Recurrent Neural Network
(Hochreiter and Schmidhuber 1997) parameterized by θ. Gθ
generates SMILES (Simpliﬁed Molecular-Input Line-Entry
System) sequences of length T (eventually padded with ” ”
characters), denoted by:

Y1:T = (y1, ..., yT )
Let R(Y1:T ) be the reward function.

• For the case of dopamine D2 activity, we take:

R(Y1:T ) = Pactive(Y1:T )
where Pactive(Y1:T ) is the probability for Y1:T to be D2-
active. This probability is given by the predictive model
made in (Olivecrona et al. 2017)2, and available online at

1The

only

difference

of
(Guimaraes et al. 2017, p.5), only a random subset of molecules
of the training set is considered. For faster computations, we also
consider a random subset of the training set (of 3000 samples).

deﬁnition

that

the

in

is

2This reward function is slightly different than the function in

(Olivecrona et al. 2017), which is: −1 + 2 × P

active.

https://github.com/MarcusOlivecrona/
REINVENT/releases

• For the case of druglikeness, we take:

R(Y1:T ) = L(Y1:T )

where L(Y1:T ) is the druglikeness of Y1:T .
The generator Gθ is viewed as a Reinforcement Learn-
ing agent: its state st is the currently produced sequence of
characters Y1:t, and its action a is the next character yt+1,
which is selected in the alphabet Y. The agent policy is:
Gθ(yt+1|Y1:t). It corresponds to the probability to choose
yt+1 given previous characters Y1:t.

Let Q(s, a) be the action-value function. It is the expected
reward at state s for taking action a and for following the
policy Gθ, in order to complete the rest of the sequence. We
maximize its expected long-term reward:

J(θ) = E[R(Y1:T )|s0, θ] = X
y1∈Y

Gθ(y1|s0)Q(s0, y1)

For any full sequence Y1:T , we have:

Q(s = Y1:T −1, a = yT ) = R(Y1:T )
For t < T , in order to calculate the expected reward Q
for Y1:t, we perform a N -time Monte Carlo search with the
rollout policy Gθ, represented as:

MC(Gθ(Y1:t, N )) = {Y 1
1:t = Y1:t and Y n

1:T , ..., Y N

1:T }

t+1:T is randomly sampled via

where Y n
the policy Gθ.

For t < T , Q is given by:

Q(s = Y1:t−1, a = yt) =

1
N

N

X
n=1

R(Y n

1:T )

Objective-Reinforced Generative Adversarial
Network (ORGAN)
To obtain an ORGAN, (Guimaraes et al. 2017) brings a
Character-Aware Neural Language Model (Kim et al. 2016)
Dφ parameterized by φ. Basically, Dφ is a Convolutional
Neural Network (CNN) whose output is given to a LSTM.
Dφ is fed with both training data and data generated by Gθ.
It plays the role of a discriminator, to distinguish between
the two: for a SMILES Y1:T , the output Dφ(Y1:T ) is the
probability that Y1:T belongs to the training data.

For the case of dopamine D2-activity, the reward function

becomes:

R(Y1:T ) = λDφ(Y1:T ) + (1 − λ)Pactive(Y1:T )

and for the case of druglikeness:

R(Y1:T ) = λDφ(Y1:T ) + (1 − λ)L(Y1:T )
where λ ∈ [0, 1] is a hyper-parameter. For λ = 0,
we get back the RL case, and for λ = 1, we obtain

a Sequential Generative Adversarial Network (SeqGAN)
(Yu et al. 2017).

The networks Gθ and Dφ are trained adversarially
(Schmidhuber 1992; Goodfellow et al. 2014), such that the
loss function for Dφ to minimize is given by:

min
φ

Y ∼train[log Dφ(Y )] + EY ∼gen[log(1 − Dφ(Y ))]
E
(5)

Experiments
As in (Guimaraes et al. 2017), we pre-train the models 240
epochs with Maximum Likelihood Estimation (MLE), on a
random subset of 15k molecules from the ZINC database
of 35 million commercially-available compounds for virtual
screening, used in drug discovery (Sterling and Irwin 2015).
Then we further train the models with RL and ORGAN re-
spectively, for 30 and 60 epochs more.

Dopamine D2 activity
In table 1, we show the proportion of valid SMILES output
(Prop. Valid SMILES), the average probability of activity
on dopamine D2 (Avg. Pa), the average internal diversity
(Avg. int. div.), the proportion of molecules with probability
of activity greater than 0.8 (Prop. Pa > 0.8), and most im-
portantly, the average internal diversity among samples with
probability of activity greater than 0.8. That’s the most im-
portant column, because it is related with our open problem.
The averages are computed over the set of valid SMILES,
whereas the proportions are computed over all the generated
SMILES (both valid and invalid).

We compute those quantities for a D2-active set of
8324 molecules from ExCAPE-DB (Sun et al. 2017) (which
is essentially the training set of the SVM classiﬁer in
(Olivecrona et al. 2017)) (DRD2), for the output of the Re-
inforcement Learning model after 30 epochs (RL 30) and
60 epochs (RL 60), and for the output of ORGAN with
λ = 0.04 after 30 epochs and 60 epochs (ORGAN-0.04
30, ORGAN-0.04 60) and for λ = 0.5 after 60 epochs
(ORGAN-0.5 60). All those outputs have 32k samples.

[TABLE 1 HERE]

The most interesting case is RL after 30 epochs. In this
case, we can see that increasing the probability of D2 activ-
ity is contradictory with keeping diversity. After 30 epochs,
internal diversity is still pretty good overall, even higher than
the DRD2 diversity baseline.

However, when we only keep the molecules of interest,
with Pa > 0.8, internal diversity dramatically drops to van-
ishingly small levels.

For ORGAN-0.04, results are mostly analogous to RL.
We note that at 30 epochs, diversity for Pa > 0.8 is 2 orders
of magnitude better than RL 30. However, it still remains
one order of magnitude lower than the DRD2 baseline, and
at 60 epochs, diversity has dropped to levels similar with RL.
For ORGAN-0.5, learning the D2 property still did not
start after 60 epochs. The situation is analogous to the Se-
qGAN case (λ = 1) described in (Guimaraes et al. 2017):

DRD2
RL 30
RL 60
ORGAN-0.04 30
ORGAN-0.04 60
ORGAN-0.5 60

Prop. Valid
SMILES
0.996636
0.379844
0.536
0.425375
0.604406
0.264687

Avg. Pa
0.911519
0.160777
0.389979
0.097810
0.342687
0.006502

Avg. int. div.

0.089478
0.112864
0.014994
0.242544
0.028563
0.324884

Prop. Pa > 0.8
0.876367
0.018906
0.078438
0.013531
0.100969
0.000187

Avg. int. div.
for Pa > 0.8
0.081972
8.65864e − 05
0.000775
0.005826
0.000170
0.0

Table 1: Experimental results for probability of D2 activity Pa

high diversity, but no learning of the objective. In partic-
ular, that’s why the internal diversity for Pa > 0.8 is in-
detectable: there are only 6 samples satisfying the desired
property, among 32k.

The intermediate cases between λ = 0.04 and λ = 0.5
are analogous to either of them. It is hard to situate the tip-
ping point, between the cases where training is just slow, and
where training will never take off.

Here are 10 samples for ORGAN with λ = 0.04 after 30

epochs, selected such that Pa > 0.8 (most diverse case):

CCOCCNC[C@H]1CCCN1CCc1ccsc1
CCCOC[C@H]1Cc2ccccc21
CC[C@H]1CCNCOc2ccccc21
CC[C@H]1CCN(CCc2ccccc2)c1
CCCO[C@@H]1CCN(C)Cc2ccccc21
CCC[C@@H]1CCC[NH+]1CC[C@H]1CCCn1
CC[C@@H]1CCN(CCc2ccccc2)c1
CC[C@H]1CCN(Cc2ccccc2)c1
CCOC1CCN(CCCNCCCc2ccccc2)c1
CCCN1CCO[C@H]1C[C@@H]1CCOc2ccccc21

Druglikeness
In table 2, we show the proportion of valid SMILES out-
put (prop. Valid SMILES), average druglikeness (Avg. L),
the average internal diversity (Avg. int. div.), the propor-
tion of molecules with druglikeness greater than 0.8 (Prop.
L > 0.8), and most importantly, the average internal di-
versity among samples with druglikeness greater than 0.8.
Again, that’s the most important column, because it is re-
lated with our challenge.

Again, the total averages are computed over the set of
valid SMILES, whereas the proportions are computed over
all the generated SMILES (both valid and invalid).

We compute those quantities for the training set ZINC
of 15k molecules (ZINC), which serves as a baseline, for
the output of the Reinforcement Learning model after 200
epochs (RL 200) and for the output of ORGAN with λ = 0.8
after 200 epochs (ORGAN 200). Those outputs have 6400
samples.

[TABLE 2 HERE]

Results show that ORGAN indeed improves over RL,
since it is able to raise internal diversity to detectable levels.
However, ORGAN diversity still remains 2 orders of mag-
nitudes lower than ZINC diversity when L > 0.8. ORGAN
diversity also remains 3 orders of magnitude lower than the

total diversity of ZINC, which corresponds to the level of
internal diversity to which most eyes are used to. We con-
clude that both RL and ORGAN for λ = 0.8 fail to generate
diverse molecules for this property.

Here are 10 SMILES samples from ORGAN for λ = 0.8

and 200 epochs:

Cc1ccccc1CCSc1ccccc1C
COCCc1ccccc1CCCCCCSC
CCCCCCn1cccc1CCCSC
COCc1ccccc1CCCc1ccccc1CC
CCCC(=O)CCCc1ccccc1CCCc1ccccc1C
COCCNC(=O)CCc1ccccc1
CCOC(=O)CCCCc1ccccc1CCN(C)CCCCc1ccccc1C
COCCCC(=O)CC(C)CCCCc1ccccc1C
CCCC(=O)CSCCC(=O)CCCCC(=O)OC
CCC(=O)COCCCCCCC(=O)CCCSC

Conclusion and future work
We conclude that both RL and ORGAN fail to match natural
chemical diversity for desired molecules, although ORGAN
is slightly better than RL. For future work, ORGAN training
can be improved by considering 2 distinct problems:

• The perfect discriminator problem in adversarial training
• The imbalance between different objectives in Reinforce-

ment Learning

The perfect discriminator problem
In ORGAN training, the discriminator Dφ quickly becomes
perfect: it perfectly distinguishes between training data and
generated data. In general, this situation is not very good for
adversarial learning (Arjovsky and Bottou 2017). Here, the
discriminator still teaches something to the generator. On
average, according to the discriminator, the probability for
a generated sample to belong to the training set still remains
far from 0, although always smaller than 0.5. This probabil-
ity is transmitted to the generator through the reward func-
tion.

However, not being able to ’fool’ the discriminator, even
in the SeqGAN case of λ = 1 (without any other objective),
shows generator weakness: it shows inability to reproduce a
plain druglike dataset like ZINC. Training a SeqGAN prop-
erly should be a ﬁrst step towards improving ORGAN.

To achieve this, it might be possible to take a larger gen-
erator, to replace the discriminator loss in equation (5) with
another function (like CramerGAN (Bellemare et al. 2017)),

ZINC
RL 200
ORGAN-0.8 200

Prop. Valid
SMILES
1
0.975625
0.943906

Avg. L

Avg. int. div.

Prop. L > 0.8

0.661094
0.917358
0.906885

0.331222
0
0.000151

0.020133
0.974844
0.940625

Avg. int. div.
for L > 0.8
0.025986
0
0.000150

Table 2: Experimental results for Druglikeness L

and to use one-sided label smoothing (Salimans et al. 2016,
p.4).

The discriminator might also overﬁt training data. Tak-
ing a larger training set could help, we took 15k sam-
ples here (less than 1MB), and this is small compared
with training sets in Natural Language Processing. On the
other hand, datasets in drug discovery rarely exceed 10k
molecules, and therefore, it could also be interesting to
look in the direction of low-data predictive neural networks
(Altae-Tran et al. 2017).

Once adversarial training is stabilized, it might be inter-
esting to replace all classiﬁers in the reward function with
discriminators adversarially trained on different datasets.
Various desired properties might be instilled into generated
molecules with multiple discriminators. This might better
transmit the chemical diversity present in the various train-
ing sets.

Imbalance in multi-objective RL
The main issue is the imbalance between the various objec-
tives in the reward function, a problem occurring also in RL.
Multi-objective reinforcement learning is a broad topic (for
a survey, see (Roijers et al. 2013)).

A problem here is that with a weighted sum, the agent al-
ways focuses on the easiest objective, and ignores harder
ones. Moreover, the relative difﬁculty between objectives
evolves over time. For example, the average probability of
D2 activity initially grows exponentially, and so this growth
is small when this probability is near 0.

Using time-varying adaptive weights might help. More-
over, those weights might not necessarily be linear: For ex-
ample, the reward function can be of the form (xλ + yλ)1/λ,
which converges towards min(x, y) as λ → −∞. Using an
objective function of the form min(x, y) focuses the gener-
ator on the hard objective (but in our experiments, due to the
perfect discriminator problem, it did not work).

Morever, in the reward function, a penalty can be in-
troduced for newly generated molecules that are too simi-
lar with the generated molecules already having the desired
properties.

In any case, the (varying) relative weights between dif-
ferent objectives must be determined automatically, and not
through guesswork. In a drug discovery setting, a molecule
must simultaneously satisfy a large number of objectives.
For example, for an antipsychotic drug, it is not enough to
be active against D2. The molecule must also pass toxicity
and druglikeness tests. Moreover, to avoid side-effects, the
molecule must not be active with D3, D4, serotonin, or his-
tamine. That’s a lot of objectives to include in the reward
function.

Finally, there is also further work to improve the deﬁni-
tion of internal diversity, in order to exclude trivial solutions
(for example, a generative model reproducing the training
set can also have high internal diversity). This will facilitate
the attribution of ﬁnancial prizes.

Acknowledgement
Computations were performed with 2 GPUs Nvidia Tesla
M60, available from Microsoft Azure Free Trial.

References
[Altae-Tran et al. 2017] Altae-Tran, H.; Ramsundar, B.;
Pappu, A. S.; and Pande, V. 2017. Low data drug discovery
with one-shot learning. ACS central science 3(4):283–293.
[Arjovsky and Bottou 2017] Arjovsky, M., and Bottou, L.
2017. Towards principled methods for training generative
adversarial networks. arXiv preprint arXiv:1701.04862.
[Bellemare et al. 2017] Bellemare, M. G.; Danihelka,

I.;
Dabney, W.; Mohamed, S.; Lakshminarayanan, B.; Hoyer,
The cramer distance as a
S.; and Munos, R.
arXiv preprint
solution to biased wasserstein gradients.
arXiv:1705.10743.

2017.

[Benjamin et al. 2017] Benjamin,
L., G. G.; and Alan, A.-G.
over molecular
distributions
reinforced generative adversarial network for
design
https://doi.org/10.26434/chemrxiv.5309668.v3.

O.;
Optimizing
objective-
inverse-
ChemRxiv Preprint

S.-L.;
2017.

chemistry

(organic).

Carlos,

space.

an

[Bickerton et al. 2012] Bickerton, G. R.; Paolini, G. V.;
Besnard, J.; Muresan, S.; and Hopkins, A. L. 2012. Quan-
tifying the chemical beauty of drugs. Nature chemistry
4(2):90–98.

[DiMasi, Grabowski, and Hansen 2016] DiMasi,

J. A.;
Grabowski, H. G.; and Hansen, R. W. 2016. Innovation in
the pharmaceutical industry: new estimates of r&d costs.
Journal of health economics 47:20–33.

[Ertl and Schuffenhauer 2009] Ertl, P., and Schuffenhauer,
A. 2009. Estimation of synthetic accessibility score of drug-
like molecules based on molecular complexity and fragment
contributions. Journal of cheminformatics 1(1):8.
[G´omez-Bombarelli et al. 2016] G´omez-Bombarelli,

R.;
J. M.; Aguilera-
Duvenaud, D.; Hern´andez-Lobato,
Iparraguirre, J.; Hirzel, T. D.; Adams, R. P.; and Aspuru-
Guzik, A.
2016. Automatic chemical design using a
data-driven continuous representation of molecules. arXiv
preprint arXiv:1610.02415.

[Goodfellow et al. 2014] Goodfellow, I.; Pouget-Abadie, J.;
Mirza, M.; Xu, B.; Warde-Farley, D.; Ozair, S.; Courville,

[Sun et al. 2017] Sun, J.; Jeliazkova, N.; Chupakin, V.;
Golib-Dzib, J.-F.; Engkvist, O.; Carlsson, L.; Wegner, J.;
2017.
Ceulemans, H.; Georgiev, I.; Jeliazkov, V.; et al.
Excape-db: an integrated large scale dataset facilitating big
data analysis in chemogenomics. Journal of Cheminformat-
ics 9(1):17.

[Yu et al. 2017] Yu, L.; Zhang, W.; Wang, J.; and Yu, Y.
2017. Seqgan: sequence generative adversarial nets with
policy gradient. In AAAI-17: Thirty-First AAAI Conference
on Artiﬁcial Intelligence, volume 31. Association for the
Advancement of Artiﬁcial Intelligence.

A.; and Bengio, Y. 2014. Generative adversarial nets. In
Advances in neural information processing systems, 2672–
2680.

[Guimaraes et al. 2017] Guimaraes, G.

Sanchez-
Lengeling, B.; Farias, P. L. C.; and Aspuru-Guzik, A.
2017. Objective-reinforced generative adversarial networks
arXiv preprint
(organ) for sequence generation models.
arXiv:1705.10843.

L.;

[Hochreiter and Schmidhuber 1997] Hochreiter,

and
Schmidhuber, J. 1997. Long short-term memory. Neural
computation 9(8):1735–1780.

S.,

[Jaques et al. 2017] Jaques, N.; Gu, S.; Bahdanau, D.;
Hern´andez-Lobato, J. M.; Turner, R. E.; and Eck, D. 2017.
Sequence tutor: Conservative ﬁne-tuning of sequence gen-
eration models with kl-control. In International Conference
on Machine Learning, 1645–1654.

[Kadurin et al. 2017a] Kadurin, A.; Aliper, A.; Kazennov,
A.; Mamoshina, P.; Vanhaelen, Q.; Khrabrov, K.; and Zha-
voronkov, A. 2017a. The cornucopia of meaningful leads:
Applying deep adversarial autoencoders for new molecule
development in oncology. Oncotarget 8(7):10883.

A.;

Nikolenko,

[Kadurin et al. 2017b] Kadurin,

S.;
Khrabrov, K.; Aliper, A.; and Zhavoronkov, A. 2017b. dru-
gan: an advanced generative adversarial autoencoder model
for de-novo generation of new molecules with desired
molecular properties in silico. Molecular Pharmaceutics.
[Kim et al. 2016] Kim, Y.; Jernite, Y.; Sontag, D.; and Rush,
A. M. 2016. Character-aware neural language models. In
AAAI, 2741–2749.

[Landrum 2017] Landrum, G. 2017. Rdkit: Open-source

cheminformatics. http://www.rdkit.org.

[Olivecrona et al. 2017] Olivecrona, M.; Blaschke, T.; En-
gkvist, O.; and Chen, H. 2017. Molecular de novo de-
sign through deep reinforcement learning. arXiv preprint
arXiv:1704.07555.

[Rogers and Hahn 2010] Rogers, D., and Hahn, M. 2010.
Extended-connectivity ﬁngerprints. Journal of chemical in-
formation and modeling 50(5):742–754.

[Roijers et al. 2013] Roijers, D. M.; Vamplew, P.; Whiteson,
S.; and Dazeley, R. 2013. A survey of multi-objective se-
quential decision-making. Journal of Artiﬁcial Intelligence
Research 48:67–113.

[Salimans et al. 2016] Salimans,

I.;
Zaremba, W.; Cheung, V.; Radford, A.; and Chen, X.
2016. Improved techniques for training gans. In Advances
in Neural Information Processing Systems, 2234–2242.

Goodfellow,

T.;

[Schmidhuber 1992] Schmidhuber, J. 1992. Learning facto-
rial codes by predictability minimization. Neural computa-
tion 4(6):863–879.

[Segler et al. 2017] Segler, M. H.; Kogej, T.; Tyrchan, C.;
and Waller, M. P. 2017. Generating focussed molecule li-
braries for drug discovery with recurrent neural networks.
arXiv preprint arXiv:1701.01329.

[Sterling and Irwin 2015] Sterling, T., and Irwin, J. J. 2015.
Zinc 15–ligand discovery for everyone. J. Chem. Inf. Model
55(11):2324–2337.

