Structured Attention Guided Convolutional Neural Fields
for Monocular Depth Estimation

Dan Xu1, Wei Wang1, Hao Tang1, Hong Liu2∗, Nicu Sebe1, Elisa Ricci1,3∗
1Multimedia and Human Understanding Group, University of Trento,
2Key Laboratory of Machine Perception, Shenzhen Graduate School, Peking University,
3 Technologies of Vision Group, Fondazione Bruno Kessler

{dan.xu, wei.wang, hao.tang, niculae.sebe, e.ricci}@unitn.it

hongliu@pku.edu.cn

8
1
0
2
 
r
a

M
 
9
2
 
 
]

V
C
.
s
c
[
 
 
1
v
9
2
0
1
1
.
3
0
8
1
:
v
i
X
r
a

Abstract

Recent works have shown the beneﬁt of integrating Con-
ditional Random Fields (CRFs) models into deep architec-
tures for improving pixel-level prediction tasks. Following
this line of research, in this paper we introduce a novel ap-
proach for monocular depth estimation. Similarly to previ-
ous works, our method employs a continuous CRF to fuse
multi-scale information derived from different layers of a
front-end Convolutional Neural Network (CNN). Differently
from past works, our approach beneﬁts from a structured at-
tention model which automatically regulates the amount of
information transferred between corresponding features at
different scales. Importantly, the proposed attention model
is seamlessly integrated into the CRF, allowing end-to-end
training of the entire architecture. Our extensive experi-
mental evaluation demonstrates the effectiveness of the pro-
posed method which is competitive with previous methods
on the KITTI benchmark and outperforms the state of the
art on the NYU Depth V2 dataset.

1. Introduction

The problem of recovering depth information from im-
ages has been widely studied in computer vision. Tradi-
tional approaches operate by considering multiple observa-
tions of the scene of interest, e.g. derived from two or more
cameras or corresponding to different lighting conditions.
More recently, the research community has attempted to
relax the multi-view assumption by addressing the task of
monocular depth estimation as a supervised learning prob-
lem. Speciﬁcally, given a large training set of pairs of im-
ages and associated depth maps, depth prediction is casted
as a pixel-level regression problem, i.e. a model is learned to
directly predict the depth value corresponding to each pixel
of an RGB image.

In the last few years several approaches have been
proposed for addressing this task and remarkable perfor-

∗corresponding author.

Figure 1. Monocular depth prediction from different CRF-based
models: Xu et al. [36] (c) and ours (d). (a) and (b) are the input
RGB image and the corresponding ground truth depth map.

mance has been achieved thanks to deep learning models
[5, 6, 22, 36, 18]. Recently, various Convolutional Neural
Network (CNN) architectures have been proposed, tackling
different sub-problems such as how to jointly estimate depth
maps and semantic labels [35], how to build models robust
to noise or how to combine multi-scale features [10]. Focus-
ing on the latter issue, recent works have shown that CRFs
can be integrated into deep architectures [22, 31] and can
be exploited to optimally fuse the multi-scale information
derived from inner layers of a CNN [36].

Inspired by these works, in this paper we also propose
to exploit the ﬂexibility of graphical models for multi-scale
monocular depth estimation. However, we signiﬁcantly de-
part from previous methods and we argue that more accu-
rate estimates can be obtained operating not only at the pre-
diction level but exploiting directly the internal CNN fea-
ture representations. To this aim, we design a novel CRF
model which automatically learns robust multi-scale fea-
tures by integrating an attention mechanism. Our attention
model allows to automatically regulate how much informa-
tion should ﬂow between related features at different scales.

1

Attention models have been successfully adopted in
computer vision and they have shown to be especially use-
ful for improving the performance of CNNs in pixel-level
prediction tasks, such as semantic segmentation [4, 13]. In
this work we demonstrate that attention models are also ex-
tremely beneﬁcial in the context of monocular depth pre-
diction. We also show that the attention variables can be
jointly estimated with multi-scale feature representations
during CRF inference and that, by employing a structured
attention model [17] (i.e. by imposing similarity constraints
between attention variables for related pixels and scales),
we can further boost performance. Through extensive ex-
perimental evaluation we demonstrate that our method pro-
duces more accurate depth maps than traditional approaches
based on CRFs [22, 31] and multi-scale CRFs [36] (Fig.1).
Moreover, by performing experiments on the publicly avail-
able NYU Depth V2 [30] and on the KITTI [8] datasets, we
show that our approach outperforms most state of the art
methods.
Contributions.
In summary, we make the following con-
tributions:
(i) We propose a novel deep learning model
for calculating depth maps from still images which seam-
lessly integrates a front-end CNN and a multi-scale CRF.
Importantly, our model can be trained end-to-end. Differ-
ently from previous works [36, 22, 31] our framework does
not consider as input only prediction maps but operates di-
rectly at feature-level. Furthermore, by adopting appropri-
ate unary and pairwise potentials, our framework allows a
much faster inference.
(ii) Our approach beneﬁts from a
novel attention mechanism which allows to robustly fuse
features derived from multiple scales as well as to integrate
structured information. (iii) Our method demonstrates state-
of-the-art performance on the NYU Depth V2 [30] dataset
and is among the top performers on the more challenging
outdoor scenes of the KITTI benchmark [8]. The code is
made publicly available1.

2. Related work

Monocular Depth Estimation. The problem of monocu-
lar depth estimation has attracted considerable attention in
last decade. While earlier approaches are mostly based on
hand-crafted features [12, 16, 19, 28], more recent works
adopt deep architectures [5, 22, 31, 26, 20, 36, 9]. In [6] a
model based on two CNNs is proposed: a ﬁrst network is
used for estimating depth at a coarse scale, while the sec-
ond one is adopted to reﬁne predictions. In [20] a resid-
ual network integrating a novel reverse Huber loss is pre-
sented.
In [2] a deep residual network is also employed
but the problem of depth estimation from still images is
translated from a regression to a classiﬁcation task. Recent
works have also shown the beneﬁt of adopting multi-task

1https://github.com/danxuhk/StructuredAttentionDepthEstimation

learning strategies, e.g. for jointly predicting depth and per-
forming semantic segmentation, ego-motion estimation or
surface normal computation [5, 38, 31]. Some recent papers
have proposed unsupervised or weakly supervised methods
for reconstructing depth maps [9, 18]. Other works have ex-
ploited the ﬂexibility of graphical models within deep learn-
ing architectures for estimating depth maps. For instance, in
[31] a Hierarchical CRF is adopted to reﬁne depth predic-
tions obtained by a CNN. In [22] a continuous CRF is pro-
posed for generating depth maps from CNN features com-
puted on superpixels. The most similar work to ours is [36],
where a CRF is adopted to combine multi-scale information
derived from multiple inner layer of a CNN. Our approach
develops from a similar intuition but further integrates an
attention model which signiﬁcantly improves the accuracy
of the estimates. To our knowledge this is the ﬁrst paper ex-
ploiting attention mechanisms in the context of monocular
depth estimation.

Fusing Multi-scale Information in CNNs. Many recent
works have shown the beneﬁt of combining multi-scale in-
formation for pixel-level prediction tasks such as semantic
segmentation [3], depth estimation [36] or contour detec-
tion [32]. For instance, dilated convolutions are employed
in [3]. Multi-stream architectures with inputs at different
resolutions are considered in [1], while [25] proposed skip-
connections to fuse feature maps derived from different lay-
ers. In [32] deep supervision is exploited for fusing infor-
mation from multiple inner layers. CRFs have been con-
sidered for integrating multi-scale information in [36]. In
[4, 33] an attention model is employed for combining multi-
scale features in the context of semantic segmentation and
object contour detection. The approach we present in this
paper is radically different, as we employ a structured at-
tention model which is jointly learned within a CRF-CNN
framework.

3. Estimating Depth Maps with Structured At-
tention Guided Conditional Neural Fields

In this section we describe our approach for estimating
depth maps from still images. We ﬁrst provide an overview
of our method and then introduce the proposed CRF model
with structured attention. We conclude this section provid-
ing some details about our implementation.

3.1. Problem Formulation and Overview

As stated in the introduction, the problem of predicting
a depth map from a single RGB image can be treated as
a supervised learning problem. Denoting as I the space
of RGB images and as D the domain of real-valued depth
maps, given a training set T = {(Ii, Di)}M
i=1, Ii ∈ I and
Di ∈ D, we are interested in learning a non-linear mapping
Φ : I → D.

Figure 2. Illustration of the proposed network for monocular depth estimation. The blue blocks indicate the front-end CNN, which in our
implementation is made by an encoder and associated decoder (Section 3.3). The gray box contains a schematic representation of the
proposed Structured Attention guided CRF model. Inside, the green boxes indicate the estimated attention maps, while the light blue ones
represent the features jointly inferred with our CRF. The arrows indicates the dependencies among the estimated variables used in our
message passing algorithm (Section 3.2.3). The dashed arrows indicate the updates involving the attention model.

In analogy with previous works [22, 36], we propose to
learn the mapping Φ by building a deep architecture which
is composed by two main building blocks: a front-end CNN
and a CRF model. The main purpose of the proposed CRF
model is to combine multi-scale information derived from
the inner layers of the front-end CNN. Differently from pre-
vious research [22, 36], our CRF model does not simply act
in order to reﬁne the ﬁnal prediction map of the CNN nei-
ther requires as input multiple score maps of the same size.
In this paper we argue that better estimates can be obtained
with a more ﬂexible model which accepts as inputs a set
of S multi-scale feature maps X = {Xs}S
s=1 derived di-
rectly from the front-end intermediate layers. To facilitate
the modeling, all the multi-scale feature maps are resized to
the same resolution via upsampling or downsampling oper-
s ∈ RN , indicates a set of
ations. Here Xs = {xi
i=1, xi
feature vectors.

s}N

s}N

The main idea behind the design of the proposed multi-
scale CRF model is to estimate the depth map D associated
to an RGB image I by exploiting the features at the last
layer XS and a set of auxiliary feature representations de-
rived from the intermediate scales s = 1, . . . , S − 1. To do
that, we propose to learn a set of latent feature maps Ys =
{yi
i=1, s = 1, . . . , S and to model the dependencies be-
tween the representations learned at the last layer and those
corresponding to each intermediate scales by introducing an
appropriate attention model A = {As}S−1
s=1 , parameterized
by binary variables As = {ai
s ∈ {0, 1}. Intuitively,
the attention variable ai
s regulates the information which is
allowed to ﬂow between each intermediate scale s and the
ﬁnal scale S for pixel i. In other words, by learning the at-
tention maps we automatically discover which information
derived from inner CNN representations is relevant for ﬁnal
depth estimation. Furthermore, in order to obtain accurate
attention maps As we propose to learn a structured attention
model, i.e. we impose structural constraints on the estimated

i=1, ai

s}N

variables ai
s enforcing those corresponding to neighboring
pixels to be related. Importantly, the proposed CRF jointly
infers the hidden features and the attention maps.

Figure 2 schematically depicts the proposed framework
and our CRF model. The idea of modeling the relationships
between the learned representations at the ﬁner scale and
the features corresponding to each intermediate layer is in-
spired by the recent DenseNet architecture [14]. As demon-
strated in our experiments (Section 4), this strategy leads to
improved performance with respect to a cascade model as
proposed in [36].

3.2. Structured Attention Guided Multi-Scale CRF

3.2.1 Proposed Model

s, i.e. :
S
(cid:88)

(cid:88)

s=1

i

Given the observed multi-scale feature maps X, we jointly
estimate the latent multi-scale representations Y and the
attention variables A by designing a Conditional Random
Field model with the following associated energy function:

E(Y, A) = Φ(Y, X) + Ξ(Y, A) + Ψ(A)

(1)

The ﬁrst term in (1) is the sum of unary potentials relating
the latent features representations yi
s with the associated ob-
servations xi

S
(cid:88)

(cid:88)

s=1

i

1
2

Φ(Y, X) =

φ(yi

s, xi

s) = −

(cid:107)yi

s − xi

s(cid:107)2

(2)
As in previous works [22, 36] we consider Gaussian func-
tions, such as to enforce the estimated latent features to be
close to their corresponding observations. The second term
is deﬁned as:

Ξ(Y, A) =

ξ(ai

s, yi

s, yj
S)

(3)

(cid:88)

(cid:88)

s(cid:54)=S

i,j

It models the relationship between the latent features at the
last scale with those of each intermediate scale. This term
also involves the attention variables ai
s which regulate the

S

syi

ξ(ai

sKs

s, yj

i,jyj

S) = ai

S) = ai

ﬂow of information between related scales. We deﬁne:
sξy(yi

s, yj
s, yi
(4)
i,j ∈ RCs×CS and Cs, CS refer to the number of
where Ks
channels of features scale s and S, respectively. Finally, the
third term in (1) aims to enforce some structural constraints
among attention variables. For instance, it is reasonable to
assume that the estimated attention maps for related pixels
and scales should be similar. To keep the computational
cost limited, we only consider dependencies among atten-
tion variables at the same scale and we deﬁne:
i,jai
βs

Ψ(A) =

s, aj

ψ(ai

s) =

saj
s

(cid:88)

(cid:88)

(cid:88)

(cid:88)

(5)

s(cid:54)=S

i,j

s(cid:54)=S

i,j

where βs
i,j are coefﬁcients to be learned. To model depen-
dencies between pairs of attention variables we consider a
bilinear function, in analogy with previous works [17].

3.2.2 Deriving Mean-Field Updates

Following previous works [37, 36] we resort on mean-ﬁeld
approximation. We derive mean-ﬁeld inference equations
for both latent features and attention variables. By denoting
as Eq the expectation with respect to the distribution q, we
get:

q(yi

s) ∝ exp

Eq(ai

s){ai
s}

E

S ){ξy(yi

s, yj

q(yj

(cid:17)
S)}

,

(cid:16)

s) +

φ(yi

s, xi
(cid:88)

(cid:16)

φ(yi

j
S, xi

S) +

q(yi

S) ∝ exp
(cid:88)
(cid:88)

E

s){aj

s}E

s){ξy(yi

S, yj

s)}

q(yj

q(aj

(cid:17)

,

s(cid:54)=S

j

(cid:16)

q(ai

s) ∝ exp

ai
s

Eq(yi
s)

(cid:110) (cid:88)

E

j

q(yj

S )

(cid:110)

ξy(yi

s, yj
S)

(cid:111) (cid:111)

(6)

(7)

(8)

(cid:88)

(cid:88)

+

s

j

E

s){ψ(ai

s, aj

s)}

q(aj

(cid:17)

,

s = Eq(ai

By considering the potentials deﬁned in (2), (3) and (5)
and denoting as ¯ai
s){ai
s}, the
following mean-ﬁelds updates can be derived for the latent
feature representations:
s = xi
¯yi

s = Eq(yi

s} and ¯yi

s + ¯ai
s

s){yi

i,j ¯yj

Ks

(cid:88)

(9)

S

S = xi
¯yi

S +

sKs
¯aj

i,j ¯yj
s

(10)

j
(cid:88)

(cid:88)

s(cid:54)=S

j

s are binary variables, ¯ai

Since ai
Therefore, the updates for ¯ai
(8) and the deﬁnitions of potential functions (3) and (5):

s=1) .
q(ai
s can be derived considering

s=1)
s=0)+q(ai

s =

q(ai



¯ai
s = σ

−

sKs
¯yi

i,j ¯yj

S −

i,j ¯aj
βs
s



(11)



(cid:88)

j

(cid:88)

(cid:88)

s

j

where σ() denotes the sigmoid function. Eqn. (11) shows

that, in analogy with previous methods employing an atten-
tion model [4, 13], in our framework we also compute the
attention variables by applying a sigmoid function to the
features derived by our CNN model. In addition, as we also
consider dependencies among different ai
s as in structured
models [17], our updates also involve related attention vari-
ables.

To infer the latent multi-scale representations Y and the
attention variables A, we implement the mean-ﬁeld updates
as a neural network (see Section 3.2.3). In this way we are
able to simultaneously learn the parameters of the CRFs and
those of the front-end CNN. When the inference is com-
plete, the ﬁnal depth map is obtained considering the ﬁnal
estimate associated to the last scale ¯yS (see Section 3.3).

3.2.3

Implementation with Neural Networks

To enable end-to-end optimization of the whole network,
we implement the proposed multi-scale model in neural net-
works. The target is to perform mean-ﬁeld updates for both
the attention variables and the multi-scale feature maps ac-
cording to the derivation described in Section 3.2.2.

To perform mean-ﬁeld updates of the attention model A
we follow (11).
In practice, the update of each attention
map as can be implemented in several steps as follows: (i)
perform the message passing from the two associated fea-
ture maps ¯ys and ¯yS (¯ys and ¯yS are initialized with cor-
responding feature observations xs and xS, respectively).
The message passing is performed via convolutional opera-
tions as ˆas ← ys (cid:12) (Ks ⊗ ¯yS), where Ks is a convolutional
kernel corresponding to the s-th scale and the symbols ⊗
and (cid:12) denote the convolutional and the element-wise prod-
uct operation, respectively; (ii) perform the message pass-
ing on the attention map with ˜as ← βs ⊗ ¯as, where βs is
a convolutional kernel; (iii) perform the normalization with
sigmoid function¯as ← σ(−(ˆas ⊕ ˜as)), where ⊕ denotes
element-wise addition operation.

When the attention maps are updated, we use them as
guidance to update the last scale feature map yS. The
mean-ﬁeld updates of yS can be carried out according to
(10) as follows: (i) perform the message passing from the
s-th scale to the S-th scale by ˆys ← Ks ⊗ ¯ys; (ii) multi-
ply for the attention model and add the unary term xS by
¯yS ← xS ⊕ (cid:80)
s(¯as (cid:12) ˆys). The computation of mean-ﬁeld
updates for the latent features corresponding to intermedi-
ate scales can be performed similarly, according to (9). In
our implementation to reduce the computational overhead,
we do not perform the mean-ﬁeld updates for the interme-
diate scales. The attention maps and the last scale feature
map are iteratively updated.

We would like to remark that, as a consequence of the
deﬁnition of the potential functions in (2), (3) and (5), the
computations of the mean-ﬁeld updates in our approach are
much more efﬁcient than in [36] where Gaussian functions

Table 1. NYU Depth V2 dataset: comparison with state of the art. In bold we indicate the best method adopting on the original set, while
in italics we indicate the best method using the extended set.

Method

Extra Training Data ?

Error (lower is better)
rms
log10
rel

Accuracy (higher is better)
δ < 1.252

δ < 1.253

δ < 1.25

Saxena et al. [29]
Karsch et al. [16]
Liu et al. [24]
Ladicky et al. [19]
Zhuo et al. [39]
Wang et al. [31]
Liu et al. [23]
Roi and Todorovic [26]
Xu et al. [36]
Ours

Eigen et al. [6]
Eigen and Fergus [5]
Laina et al. [20]
Li et al. [21]
Xu et al. [36]

No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)

Yes (120K)
Yes (120K)
Yes (12K)
Yes (24K)
Yes (12K)

0.349
0.35
0.335
-
0.305
0.220
0.213
0.187
0.139
0.125

0.215
0.158
0.129
0.139
0.121

-
0.131
0.127
-
0.122
0.094
0.087
0.078
0.063
0.057

-
-
0.056
0.058
0.052

1.214
1.20
1.06
-
1.04
0.745
0.759
0.744
0.609
0.593

0.907
0.641
0.583
0.505
0.586

0.447
-
-
0.542
0.525
0.605
0.650
-
0.793
0.806

0.611
0.769
0.801
0.820
0.811

0.745
-
-
0.829
0.838
0.890
0.906
-
0.948
0.952

0.887
0.950
0.950
0.960
0.954

0.897
-
-
0.941
0.962
0.970
0.976
-
0.984
0.986

0.971
0.988
0.986
0.989
0.987

are considered for pairwise potentials.
Indeed, Gaussian
convolutions involve a much higher computational over-
head both in the forward and in the backward pass. We
further discuss this aspect in Section 4.
3.3. Network Structure and Optimization
Network Structure and Implementation. The overall
framework for monocular depth estimation is made by a
CNN architecture and the proposed CRF model (Fig. 2).
The CNN architecture is made of two main components,
i.e. a fully convolutional encoder and a fully convolutional
decoder. The encoder naturally supports any network struc-
ture. In this work we speciﬁcally employ ResNet-50 [11].
In our implementation the proposed CRF is adopted to re-
ﬁne the last scale feature map derived from the semantic
layer res5c, which receives message from the other scale
feature maps derived from res3c and res4f. res3c, res4f
and res5c are the last layers of different convolutional
blocks.
In each convolutional block, every layer outputs
a feature map with the same number of channels. Before
message passing, all the feature maps are ﬁrst upsampled
using a deconvolutional operation to the same size, i.e. 1/4
resolution of the original input image, and the number of
channels is set to 256 for all of them. The kernel size for
both Ks and βs is set to 3 with stride 1 and padding 1 to
have a local receptive ﬁeld and to speed up the calculation.
The proposed multi-scale CRF module outputs a reﬁned
feature map.To obtain the ﬁnal prediction we upsample the
feature map to the original resolution as the input image
using deconvolutional operations. Each time we upsample
the feature map by a factor of 2, at the same time reducing
by half the number of feature channels.

End-to-end optimization. As stated above, the proposed
model can be trained end-to-end, i.e. the parameters of the
front-end encoder Θe, those associated to the structured at-

tention guided CRF Θc, and those of the decoder Θd can be
jointly optimized. Given the training data set T , following
previous works [36], we use a square loss function for the
optimization, i.e. :

M
(cid:88)

LF ((I, D; Θe, Θc, Θd) =

(cid:107)F (Il

i; Θe, Θc, Θd)−Dl

i(cid:107)2
2

i=1
The whole network is jointly optimized via back-

propagation with standard stochastic gradient descent.

4. Experiments

We demonstrate the effectiveness of the proposed ap-
proach performing experiments on two publicly available
datasets:
the NYU Depth V2 [30] and the KITTI [8]
datasets. The following subsections describe our experi-
mental setup and the results of our evaluation.

4.1. Experimental Setup

Datasets. The NYU Depth V2 dataset [30] has 120K pairs
of RGB and depth maps gathered with a Microsoft Kinect.
The image resolution is 640 × 480 pixels. The dataset is
split into a training (249 scenes) and a test set (215 scenes).
Following previous works [22, 39, 36] in our experiments
we consider a subset of 1449 RGB-D pairs, of which 795
are used for training and the rest for testing. The data aug-
mentation is performed on the ﬂy by cropping the images to
320 × 240 pixels, randomly ﬂipping and scaling them with
a ratio ρ ∈ {1, 1.2, 1.5}.

The KITTI dataset [8], originally built for testing com-
puter vision algorithms in several tasks in the context of
autonomous driving, contains depth images captured with
a LiDAR sensor mounted on a driving vehicle. In our ex-
periments we follow the experimental protocol proposed by
Eigen et al.
[6] and consider 22,600 images correspond-
ing to 32 scenes as training data and 697 images asoociated

Figure 3. Examples of predicted depth maps on the NYU V2 test dataset: original RGB images (top row), predicted depth maps (center)
and ground truth (bottom row).

Table 2. KITTI dataset: comparison with state of the art. In bold we indicate the best performances in the monocular setting, while in
italics those corresponding to the stereo setting.

Method

Setting

range

stereo?

Error (lower is better)
rms
sq rel
rel

Accuracy (higher is better)
δ < 1.252

δ < 1.253

δ < 1.25

Saxena et al. [29]
Eigen et al. [6]
Liu et al. [23]
Zhou et al. [38]
Kuznietsov et al. [18] (only supervised)
Ours

Garg et al. [7]
Garg et al. [7] L12 + Aug 8x
Godard et al. [9]
Kuznietsov et al. [18]

0-80m
0-80m
0-80m
0-80m
0-80m
0-80m

0-80m
1-50m
0-80m
0-80m

No
No
No
No
No
No

Yes
Yes
Yes
Yes

0.280
0.190
0.217
0.208
-
0.122

0.177
0.169
0.148
-

-
-
0.092
1.768
-
0.897

1.169
1.080
1.344
-

8.734
7.156
7.046
6.858
4.815
4.677

5.285
5.104
5.927
4.621

0.601
0.692
0.656
0.678
0.845
0.818

0.727
0.740
0.803
0.852

0.820
0.899
0.881
0.885
0.957
0.954

0.896
0.904
0.922
0.960

0.926
0.967
0.958
0.957
0.987
0.985

0.962
0.958
0.963
0.986

to other 29 scenes as test data. The RGB image resolution
is reduced by half with respect to the original 1224 × 368
pixels. The ground-truth depth maps are generated by re-
projecting the 3D points collected from velodyne laser into
the left monocular camera as detailed in [7].
Implementation Details. The proposed approach is im-
plemented using the Caffe framework [15] and runs on a
single Nvidia Titan X GPU with 12 GB memory. While
the proposed framework is general, following recent works
[36, 20], we adopt the ResNet50 [11] as the front-end net-
work architecture. As stated above in the implementation,
we consider three-level feature maps derived from differ-
ent semantic convolutional layers (i.e. res3c, res4f and

res5c). These feature maps are fused with the proposed
CRF model for the ﬁnal prediction of the depth map. During
training, the front-end network is initialized with ImageNet
pretrained parameters. Differently from [36] which requires
a pretraining phase of the front-end CNN, we jointly opti-
mize the whole network. The initial learning rate is set to
10e − 9, and is decreased 10 times every 40 epochs. In total
60 epochs are used for training. The mini-batch size is set
to 16. The weight decay and the momentum are 0.0005 and
0.99, respectively.

Evaluation Metrics. In analogy with previous works [5,
6, 31, 36], to quantitatively assess the performance of our
method we consider several evaluation metrics. Specif-

Our results clearly show that the proposed approach
outperforms all supervised learning methods adopting the
original dataset in [6].
Importantly, the performance im-
provements over previous works based on CRFs models
[31, 22, 36] are signiﬁcant. In particular, we believe that the
increase in accuracy with respect to [36] conﬁrms our initial
intuition that operating directly at feature-level and integrat-
ing an attention model into a CRF leads to more accurate
depth estimates. Finally, we would like to point out that
our approach also outperforms most methods considering
an extended training set. Furthermore, the performance gap
between our framework and the deep model in [36] trained
on 95K samples is very narrow. We also provide some ex-
amples of depth maps estimated with the proposed method
in Fig. 3. Comparing our prediction with ground truth it
is clear that our approach is quite accurate even at objects
boundaries (notice, for instance, the accuracy in recovering
ﬁne-grained details in case of objects like chairs and tables).
Finally, we compare the proposed approach with previ-
ous methods considering the computational cost in the test
phase. Figure 4 depicts the mean relative error vs the run-
ning time (i.e. time to classify one image) for some of the
baseline methods (numbers are taken from the original pa-
pers). Our approach guarantees the best trade-off between
accuracy and time (notice that the deep model in Laina et
al. [20] is trained on an extended dataset). It is interesting
to compare our method with [36]: the proposed framework
not only outperforms [36] in terms of accuracy when both
models are trained on the original set [6]) but, by adopt-
ing different potential functions in the CRF, results into a
much faster inference. Another interesting comparison is
with [31] and [22], as these works are also based on CRFs.
Our model signiﬁcantly outperforms [22] and [31] both in
terms of accuracy and of running time (see Fig.4 and Table
1): due to visualization issues we do not show [31] in Fig.4
as the original paper report a time of 40 seconds to recover
the depth map for a single image.

[27], Eigen et al.

KITTI Dataset. A comparison with state of the art meth-
ods is also conducted on the KITTI dataset and the associ-
ated results are shown in Table 2. As baselines we consider
the work by Saxena et al.
[6], Liu et
al. [22], Zhou et al. [38], Garg et al. [7], Godard et al. [9]
and Kuznietsov et al. [18]. Importantly, the ﬁrst four meth-
ods only employ monocular images to predict depth infor-
mation, while in [7], [9] and [18] a stereo setting is consid-
ered in training and therefore these methods are not directly
comparable with our approach. As shown in the table, our
approach outperforms all previous methods considering a
supervised setting with the exception of the recent method
in [18]. With respect to [18] we obtain a lower error, while
the accuracy is slightly inferior. For sake of completeness
we also report the performance of previous methods consid-
ering a stereo setting. Among these methods, Kuznietsov

Figure 4. NYU V2 dataset. Comparison with previous methods:
running time vs. rel error.

(cid:80)Q

i=1
(cid:80)Q

| ¯di−di|
di

ically if Q is the total number of pixels of the test set
and ¯di and di denote the estimated and the ground-truth
depth for pixel i, we compute: (i) the mean relative er-
; (ii) the root mean squared er-
ror (rel):
i=1( ¯di − di)2; (iii) the mean log10 error
ror (rms):
i=1 (cid:107) log10( ¯di) − log10(di)(cid:107) and (iv) the ac-
(log10): 1
Q
curacy with threshold t, i.e. the percentage of ¯di such that
δ = max( di
¯di

) < t, where t ∈ [1.25, 1.252, 1.253].

1
Q
(cid:113) 1
Q
(cid:80)Q

In order to compare our results with previous methods on
the KITTI dataset we crop our images using the evaluation
crop applied by Eigen et al. [6].

, ¯di
di

4.2. Experimental Results

To demonstrate the effectiveness of the proposed frame-
work we ﬁrst conduct a comparison with state of the art
methods both on the NYU Depth V2 dataset and on the
KITTI benchmark. We also conduct an in-depth analysis
of our method, evaluating both accuracy and computational
efﬁciency.

[16], Ladicky et al.

NYU Depth V2 Dataset. Table 1 shows the results of the
comparison with state of the art methods on the NYU Depth
V2 dataset. As baselines we consider both approaches
based on hand-crafted features (Saxena et al. [29], Karsch
et al.
[19]) and deep learning ar-
chitectures. Concerning the latter category, we compare
with methods which exploit multiscale information (Eigen
et al.
[6], Eigen and Fergus [5], Li et al. [21]), with ap-
proaches which consider graphical models (Liu et al. [24],
Liu et al. [22], Zhuo et al. [39], Wang et al. [31], Xu et
al. [36]) and neural regression forests ([26]), and with meth-
ods which explore the utilization of the reverse Huber loss
function (Laina et al. [20]). The numerical results associ-
ated to previous methods are taken directly from the origi-
nal papers. For a fair comparison in the table we also report
information about the adopted training set, as it represents
an important factor for CNN performance. In particular, we
separate methods which adopt the original training set in [6]
and those which consider an extended dataset for learning
their deep models.

RGB Image

GT Depth Map

Eigen et al. [6]

Zhou et al. [38]

Garg et al. [7]

Ours

Figure 5. Examples of depth prediction results on the KITTI dataset: qualitative comparison with previous methods. The sparse ground-
truth depth maps are interpolated for better visualization.

Table 3. Quantitative analysis of the main components of our method on the KITTI dataset.

Method

0.168 1.072 5.101
Front-end CNN (w/o multiple deep supervision)
0.152 0.973 4.902
Front-end CNN (w/ multiple deep supervision)
0.143 0.949 4.825
Multi-scale feature fusion with naive concatenation
0.134 0.895 4.733
Multi-scale feature fusion with CRFs (w/o attention model)
Multi-scale feature fusion with CRFs (w/ attention model)
0.127 0.869 4.636
Multi-scale feature fusion with CRFs (w/ structured attention model) 0.122 0.897 4.677

Error
(lower is better)
log10
rel

rms

Accuracy
(higher is better)
δ < 1.25 δ < 1.252 δ < 1.253
0.932
0.741
0.931
0.782
0.939
0.795
0.942
0.803
0.950
0.811
0.954
0.818

0.981
0.974
0.978
0.980
0.982
0.985

et al. [18] achieve the best performance by exploiting both
ground truth supervision and stereo information. Following
the same idea, we believe that an interesting future research
direction will be to integrate stereo cues into our framework.
A qualitative comparison with some state of the art methods
is also shown in Fig. 5.

Ablation Study. To further demonstrate the effectiveness
of the proposed method we conduct an ablation study on
the KITTI dataset. Table 3 shows the results of our analy-
sis. In the table, “multiple deep supervision” refers to train-
ing the front-end CNN with the approach in [32]; “w/ at-
tention model” refers to considering attention variables ai
s
in the optimization but discarding the structured potential;
“w/ structured attention model” indicates the using of the
structured attention model. In line with ﬁndings from pre-
vious works [31, 36, 22], embedding a CRFs model into
a deep architecture provides a signiﬁcant improvement in
terms of performance. Furthermore, adopting a CRFs is an
extremely effective strategy for combining multi-scale fea-
tures, as it is evident when comparing our results with CRF
and those corresponding to naive feature concatenation. Fi-
nally and more importantly, by introducing the proposed
CRF model with an attention mechanism and, in particular,

with a structured attention one, we can signiﬁcantly boost
performance.

5. Conclusions

We presented a novel approach for monocular depth esti-
mation. The main contribution of this work is a CRF model
which optimally combines multi-scale information derived
from the inner layers of a CNN by learning a set of latent
features representations and the associated attention model.
We demonstrated that by combining multi-scale informa-
tion at feature-level and by adopting a structured attention
mechanism, our approach signiﬁcantly outperforms previ-
ous depth estimation methods based on CRF-CNN mod-
els [37, 22, 36]. Importantly, our framework can be used
in combination with several CNN architectures and can be
trained end-to-end. Extensive evaluation shows that our
method outperforms most baselines. Future research could
perform cross-domain detection tasks [34] based on the pre-
diction of the scene depth.

Acknowledgements

This work is partially supported by National Natural Sci-
ence Foundation of China (NSFC, No.U1613209). The au-
thors would like to thank NVIDIA for GPU donation.

References

[1] P. Buyssens, A. Elmoataz, and O. L´ezoray. Multiscale con-
volutional neural networks for vision–based classiﬁcation of
cells. In ACCV, 2012. 2

[2] Y. Cao, Z. Wu, and C. Shen. Estimating depth from monoc-
ular images as classiﬁcation using deep fully convolutional
residual networks. TCSVT, PP(99):1–1, 2017. 2

[3] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
volutional nets and fully connected crfs. ICLR, 2015. 2
[4] L.-C. Chen, Y. Yang, J. Wang, W. Xu, and A. L. Yuille. At-
tention to scale: Scale-aware semantic image segmentation.
CVPR, 2016. 2, 4

[5] D. Eigen and R. Fergus. Predicting depth, surface normals
and semantic labels with a common multi-scale convolu-
tional architecture. In ICCV, 2015. 1, 2, 5, 7

[6] D. Eigen, C. Puhrsch, and R. Fergus. Depth map prediction
In
from a single image using a multi-scale deep network.
NIPS, 2014. 1, 2, 5, 6, 7, 8

[7] R. Garg, G. Carneiro, and I. Reid. Unsupervised cnn for
single view depth estimation: Geometry to the rescue.
In
ECCV, 2016. 6, 7, 8

[8] A. Geiger, P. Lenz, C. Stiller, and R. Urtasun. Vision meets

robotics: The kitti dataset. IJRR, 2013. 2, 5

[9] C. Godard, O. Mac Aodha, and G. J. Brostow. Unsuper-
vised monocular depth estimation with left-right consistency.
CVPR, 2017. 2, 6, 7

[10] B. Hariharan, P. Arbel´aez, R. Girshick, and J. Malik. Hyper-
columns for object segmentation and ﬁne-grained localiza-
tion. In CVPR, 2015. 1

[12] D. Hoiem, A. A. Efros, and M. Hebert. Automatic photo
pop-up. ACM transactions on graphics (TOG), 24(3):577–
584, 2005. 2

[13] S. Hong, J. Oh, H. Lee, and B. Han. Learning transferrable
knowledge for semantic segmentation with deep convolu-
tional neural network. In CVPR, 2016. 2, 4

[14] G. Huang, Z. Liu, K. Q. Weinberger, and L. van der Maaten.
Densely connected convolutional networks. CVPR, 2017. 3
[15] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long, R. Gir-
shick, S. Guadarrama, and T. Darrell. Caffe: Convolu-
tional architecture for fast feature embedding. arXiv preprint
arXiv:1408.5093, 2014. 6

[16] K. Karsch, C. Liu, and S. B. Kang. Depth transfer: Depth ex-
traction from video using non-parametric sampling. TPAMI,
36(11):2144–2158, 2014. 2, 5, 7

[17] Y. Kim, C. Denton, L. Hoang, and A. M. Rush. Structured

attention networks. ICLR, 2017. 2, 4

[18] Y. Kuznietsov, J. St¨uckler, and B. Leibe. Semi-supervised
deep learning for monocular depth map prediction. CVPR,
2017. 1, 2, 6, 7, 8

[19] L. Ladicky, J. Shi, and M. Pollefeys. Pulling things out of

perspective. In CVPR, 2014. 2, 5, 7

[20] I. Laina, C. Rupprecht, V. Belagiannis, F. Tombari, and
N. Navab. Deeper depth prediction with fully convolutional

residual networks. arXiv preprint arXiv:1606.00373, 2016.
2, 5, 6, 7

[21] B. Li, Y. Dai, and M. He. Monocular depth estimation with
hierarchical fusion of dilated cnns and soft-weighted-sum in-
ference. arXiv preprint arXiv:1708.02287, 2017. 5, 7
[22] F. Liu, C. Shen, and G. Lin. Deep convolutional neural ﬁelds
for depth estimation from a single image. In CVPR, 2015. 1,
2, 3, 5, 7, 8

[23] F. Liu, C. Shen, G. Lin, and I. Reid. Learning depth from sin-
gle monocular images using deep convolutional neural ﬁelds.
TPAMI, 38(10):2024–2039, 2016. 5, 6

[24] M. Liu, M. Salzmann, and X. He. Discrete-continuous depth
estimation from a single image. In CVPR, 2014. 5, 7
[25] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In CVPR, 2015. 2
[26] A. Roy and S. Todorovic. Monocular depth estimation using

neural regression forest. In CVPR, 2016. 2, 5, 7

[27] A. Saxena, S. H. Chung, and A. Y. Ng. Learning depth from

single monocular images. In NIPS, 2005. 7

[28] A. Saxena, S. H. Chung, and A. Y. Ng. 3-d depth recon-
struction from a single still image. IJCV, 76(1):53–69, 2008.
2

[29] A. Saxena, M. Sun, and A. Y. Ng. Make3d: Learning 3d
scene structure from a single still image. TPAMI, 31(5):824–
840, 2009. 5, 6, 7

[30] N. Silberman, D. Hoiem, P. Kohli, and R. Fergus.

segmentation and support inference from rgbd images.
ECCV, 2012. 2, 5

Indoor
In

[31] P. Wang, X. Shen, Z. Lin, S. Cohen, B. Price, and A. Yuille.
Towards uniﬁed depth and semantic prediction from a single
image. In CVPR, 2015. 1, 2, 5, 7, 8

[33] D. Xu, W. Ouyang, X. Alameda-Pineda, E. Ricci, X. Wang,
and N. Sebe. Learning deep structured multi-scale features
In NIPS,
using attention-gated crfs for contour prediction.
2017. 2

[34] D. Xu, W. Ouyang, E. Ricci, X. Wang, and N. Sebe. Learn-
ing cross-modal deep representations for robust pedestrian
detection. In CVPR, 2017. 8

[35] D. Xu, W. Ouyang, X. Wang, and N. Sebe. Pad-net: Multi-
tasks guided prediciton-and-distillation network for simulta-
neous depth estimation and scene parsing. In CVPR, 2018.
1

[36] D. Xu, E. Ricci, W. Ouyang, X. Wang, and N. Sebe. Multi-
scale continuous crfs as sequential deep networks for monoc-
ular depth estimation. CVPR, 2017. 1, 2, 3, 4, 5, 6, 7, 8
[37] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. H. Torr. Conditional ran-
dom ﬁelds as recurrent neural networks. In ICCV, 2015. 4,
8

[38] T. Zhou, M. Brown, N. Snavely, and D. G. Lowe. Unsuper-
vised learning of depth and ego-motion from video. CVPR,
2017. 2, 6, 7, 8

[39] W. Zhuo, M. Salzmann, X. He, and M. Liu. Indoor scene
structure analysis for single image depth estimation.
In
CVPR, 2015. 5, 7

[11] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning

[32] S. Xie and Z. Tu. Holistically-nested edge detection.

In

for image recognition. In CVPR, 2016. 5, 6

ICCV, 2015. 2, 8

Structured Attention Guided Convolutional Neural Fields
for Monocular Depth Estimation

Dan Xu1, Wei Wang1, Hao Tang1, Hong Liu2∗, Nicu Sebe1, Elisa Ricci1,3∗
1Multimedia and Human Understanding Group, University of Trento,
2Key Laboratory of Machine Perception, Shenzhen Graduate School, Peking University,
3 Technologies of Vision Group, Fondazione Bruno Kessler

{dan.xu, wei.wang, hao.tang, niculae.sebe, e.ricci}@unitn.it

hongliu@pku.edu.cn

8
1
0
2
 
r
a

M
 
9
2
 
 
]

V
C
.
s
c
[
 
 
1
v
9
2
0
1
1
.
3
0
8
1
:
v
i
X
r
a

Abstract

Recent works have shown the beneﬁt of integrating Con-
ditional Random Fields (CRFs) models into deep architec-
tures for improving pixel-level prediction tasks. Following
this line of research, in this paper we introduce a novel ap-
proach for monocular depth estimation. Similarly to previ-
ous works, our method employs a continuous CRF to fuse
multi-scale information derived from different layers of a
front-end Convolutional Neural Network (CNN). Differently
from past works, our approach beneﬁts from a structured at-
tention model which automatically regulates the amount of
information transferred between corresponding features at
different scales. Importantly, the proposed attention model
is seamlessly integrated into the CRF, allowing end-to-end
training of the entire architecture. Our extensive experi-
mental evaluation demonstrates the effectiveness of the pro-
posed method which is competitive with previous methods
on the KITTI benchmark and outperforms the state of the
art on the NYU Depth V2 dataset.

1. Introduction

The problem of recovering depth information from im-
ages has been widely studied in computer vision. Tradi-
tional approaches operate by considering multiple observa-
tions of the scene of interest, e.g. derived from two or more
cameras or corresponding to different lighting conditions.
More recently, the research community has attempted to
relax the multi-view assumption by addressing the task of
monocular depth estimation as a supervised learning prob-
lem. Speciﬁcally, given a large training set of pairs of im-
ages and associated depth maps, depth prediction is casted
as a pixel-level regression problem, i.e. a model is learned to
directly predict the depth value corresponding to each pixel
of an RGB image.

In the last few years several approaches have been
proposed for addressing this task and remarkable perfor-

∗corresponding author.

Figure 1. Monocular depth prediction from different CRF-based
models: Xu et al. [36] (c) and ours (d). (a) and (b) are the input
RGB image and the corresponding ground truth depth map.

mance has been achieved thanks to deep learning models
[5, 6, 22, 36, 18]. Recently, various Convolutional Neural
Network (CNN) architectures have been proposed, tackling
different sub-problems such as how to jointly estimate depth
maps and semantic labels [35], how to build models robust
to noise or how to combine multi-scale features [10]. Focus-
ing on the latter issue, recent works have shown that CRFs
can be integrated into deep architectures [22, 31] and can
be exploited to optimally fuse the multi-scale information
derived from inner layers of a CNN [36].

Inspired by these works, in this paper we also propose
to exploit the ﬂexibility of graphical models for multi-scale
monocular depth estimation. However, we signiﬁcantly de-
part from previous methods and we argue that more accu-
rate estimates can be obtained operating not only at the pre-
diction level but exploiting directly the internal CNN fea-
ture representations. To this aim, we design a novel CRF
model which automatically learns robust multi-scale fea-
tures by integrating an attention mechanism. Our attention
model allows to automatically regulate how much informa-
tion should ﬂow between related features at different scales.

1

Attention models have been successfully adopted in
computer vision and they have shown to be especially use-
ful for improving the performance of CNNs in pixel-level
prediction tasks, such as semantic segmentation [4, 13]. In
this work we demonstrate that attention models are also ex-
tremely beneﬁcial in the context of monocular depth pre-
diction. We also show that the attention variables can be
jointly estimated with multi-scale feature representations
during CRF inference and that, by employing a structured
attention model [17] (i.e. by imposing similarity constraints
between attention variables for related pixels and scales),
we can further boost performance. Through extensive ex-
perimental evaluation we demonstrate that our method pro-
duces more accurate depth maps than traditional approaches
based on CRFs [22, 31] and multi-scale CRFs [36] (Fig.1).
Moreover, by performing experiments on the publicly avail-
able NYU Depth V2 [30] and on the KITTI [8] datasets, we
show that our approach outperforms most state of the art
methods.
Contributions.
In summary, we make the following con-
tributions:
(i) We propose a novel deep learning model
for calculating depth maps from still images which seam-
lessly integrates a front-end CNN and a multi-scale CRF.
Importantly, our model can be trained end-to-end. Differ-
ently from previous works [36, 22, 31] our framework does
not consider as input only prediction maps but operates di-
rectly at feature-level. Furthermore, by adopting appropri-
ate unary and pairwise potentials, our framework allows a
much faster inference.
(ii) Our approach beneﬁts from a
novel attention mechanism which allows to robustly fuse
features derived from multiple scales as well as to integrate
structured information. (iii) Our method demonstrates state-
of-the-art performance on the NYU Depth V2 [30] dataset
and is among the top performers on the more challenging
outdoor scenes of the KITTI benchmark [8]. The code is
made publicly available1.

2. Related work

Monocular Depth Estimation. The problem of monocu-
lar depth estimation has attracted considerable attention in
last decade. While earlier approaches are mostly based on
hand-crafted features [12, 16, 19, 28], more recent works
adopt deep architectures [5, 22, 31, 26, 20, 36, 9]. In [6] a
model based on two CNNs is proposed: a ﬁrst network is
used for estimating depth at a coarse scale, while the sec-
ond one is adopted to reﬁne predictions. In [20] a resid-
ual network integrating a novel reverse Huber loss is pre-
sented.
In [2] a deep residual network is also employed
but the problem of depth estimation from still images is
translated from a regression to a classiﬁcation task. Recent
works have also shown the beneﬁt of adopting multi-task

1https://github.com/danxuhk/StructuredAttentionDepthEstimation

learning strategies, e.g. for jointly predicting depth and per-
forming semantic segmentation, ego-motion estimation or
surface normal computation [5, 38, 31]. Some recent papers
have proposed unsupervised or weakly supervised methods
for reconstructing depth maps [9, 18]. Other works have ex-
ploited the ﬂexibility of graphical models within deep learn-
ing architectures for estimating depth maps. For instance, in
[31] a Hierarchical CRF is adopted to reﬁne depth predic-
tions obtained by a CNN. In [22] a continuous CRF is pro-
posed for generating depth maps from CNN features com-
puted on superpixels. The most similar work to ours is [36],
where a CRF is adopted to combine multi-scale information
derived from multiple inner layer of a CNN. Our approach
develops from a similar intuition but further integrates an
attention model which signiﬁcantly improves the accuracy
of the estimates. To our knowledge this is the ﬁrst paper ex-
ploiting attention mechanisms in the context of monocular
depth estimation.

Fusing Multi-scale Information in CNNs. Many recent
works have shown the beneﬁt of combining multi-scale in-
formation for pixel-level prediction tasks such as semantic
segmentation [3], depth estimation [36] or contour detec-
tion [32]. For instance, dilated convolutions are employed
in [3]. Multi-stream architectures with inputs at different
resolutions are considered in [1], while [25] proposed skip-
connections to fuse feature maps derived from different lay-
ers. In [32] deep supervision is exploited for fusing infor-
mation from multiple inner layers. CRFs have been con-
sidered for integrating multi-scale information in [36]. In
[4, 33] an attention model is employed for combining multi-
scale features in the context of semantic segmentation and
object contour detection. The approach we present in this
paper is radically different, as we employ a structured at-
tention model which is jointly learned within a CRF-CNN
framework.

3. Estimating Depth Maps with Structured At-
tention Guided Conditional Neural Fields

In this section we describe our approach for estimating
depth maps from still images. We ﬁrst provide an overview
of our method and then introduce the proposed CRF model
with structured attention. We conclude this section provid-
ing some details about our implementation.

3.1. Problem Formulation and Overview

As stated in the introduction, the problem of predicting
a depth map from a single RGB image can be treated as
a supervised learning problem. Denoting as I the space
of RGB images and as D the domain of real-valued depth
maps, given a training set T = {(Ii, Di)}M
i=1, Ii ∈ I and
Di ∈ D, we are interested in learning a non-linear mapping
Φ : I → D.

Figure 2. Illustration of the proposed network for monocular depth estimation. The blue blocks indicate the front-end CNN, which in our
implementation is made by an encoder and associated decoder (Section 3.3). The gray box contains a schematic representation of the
proposed Structured Attention guided CRF model. Inside, the green boxes indicate the estimated attention maps, while the light blue ones
represent the features jointly inferred with our CRF. The arrows indicates the dependencies among the estimated variables used in our
message passing algorithm (Section 3.2.3). The dashed arrows indicate the updates involving the attention model.

In analogy with previous works [22, 36], we propose to
learn the mapping Φ by building a deep architecture which
is composed by two main building blocks: a front-end CNN
and a CRF model. The main purpose of the proposed CRF
model is to combine multi-scale information derived from
the inner layers of the front-end CNN. Differently from pre-
vious research [22, 36], our CRF model does not simply act
in order to reﬁne the ﬁnal prediction map of the CNN nei-
ther requires as input multiple score maps of the same size.
In this paper we argue that better estimates can be obtained
with a more ﬂexible model which accepts as inputs a set
of S multi-scale feature maps X = {Xs}S
s=1 derived di-
rectly from the front-end intermediate layers. To facilitate
the modeling, all the multi-scale feature maps are resized to
the same resolution via upsampling or downsampling oper-
s ∈ RN , indicates a set of
ations. Here Xs = {xi
i=1, xi
feature vectors.

s}N

s}N

The main idea behind the design of the proposed multi-
scale CRF model is to estimate the depth map D associated
to an RGB image I by exploiting the features at the last
layer XS and a set of auxiliary feature representations de-
rived from the intermediate scales s = 1, . . . , S − 1. To do
that, we propose to learn a set of latent feature maps Ys =
{yi
i=1, s = 1, . . . , S and to model the dependencies be-
tween the representations learned at the last layer and those
corresponding to each intermediate scales by introducing an
appropriate attention model A = {As}S−1
s=1 , parameterized
by binary variables As = {ai
s ∈ {0, 1}. Intuitively,
the attention variable ai
s regulates the information which is
allowed to ﬂow between each intermediate scale s and the
ﬁnal scale S for pixel i. In other words, by learning the at-
tention maps we automatically discover which information
derived from inner CNN representations is relevant for ﬁnal
depth estimation. Furthermore, in order to obtain accurate
attention maps As we propose to learn a structured attention
model, i.e. we impose structural constraints on the estimated

i=1, ai

s}N

variables ai
s enforcing those corresponding to neighboring
pixels to be related. Importantly, the proposed CRF jointly
infers the hidden features and the attention maps.

Figure 2 schematically depicts the proposed framework
and our CRF model. The idea of modeling the relationships
between the learned representations at the ﬁner scale and
the features corresponding to each intermediate layer is in-
spired by the recent DenseNet architecture [14]. As demon-
strated in our experiments (Section 4), this strategy leads to
improved performance with respect to a cascade model as
proposed in [36].

3.2. Structured Attention Guided Multi-Scale CRF

3.2.1 Proposed Model

s, i.e. :
S
(cid:88)

(cid:88)

s=1

i

Given the observed multi-scale feature maps X, we jointly
estimate the latent multi-scale representations Y and the
attention variables A by designing a Conditional Random
Field model with the following associated energy function:

E(Y, A) = Φ(Y, X) + Ξ(Y, A) + Ψ(A)

(1)

The ﬁrst term in (1) is the sum of unary potentials relating
the latent features representations yi
s with the associated ob-
servations xi

S
(cid:88)

(cid:88)

s=1

i

1
2

Φ(Y, X) =

φ(yi

s, xi

s) = −

(cid:107)yi

s − xi

s(cid:107)2

(2)
As in previous works [22, 36] we consider Gaussian func-
tions, such as to enforce the estimated latent features to be
close to their corresponding observations. The second term
is deﬁned as:

Ξ(Y, A) =

ξ(ai

s, yi

s, yj
S)

(3)

(cid:88)

(cid:88)

s(cid:54)=S

i,j

It models the relationship between the latent features at the
last scale with those of each intermediate scale. This term
also involves the attention variables ai
s which regulate the

S

syi

ξ(ai

sKs

s, yj

i,jyj

S) = ai

S) = ai

ﬂow of information between related scales. We deﬁne:
sξy(yi

s, yj
s, yi
(4)
i,j ∈ RCs×CS and Cs, CS refer to the number of
where Ks
channels of features scale s and S, respectively. Finally, the
third term in (1) aims to enforce some structural constraints
among attention variables. For instance, it is reasonable to
assume that the estimated attention maps for related pixels
and scales should be similar. To keep the computational
cost limited, we only consider dependencies among atten-
tion variables at the same scale and we deﬁne:
i,jai
βs

Ψ(A) =

s, aj

ψ(ai

s) =

saj
s

(cid:88)

(cid:88)

(cid:88)

(cid:88)

(5)

s(cid:54)=S

i,j

s(cid:54)=S

i,j

where βs
i,j are coefﬁcients to be learned. To model depen-
dencies between pairs of attention variables we consider a
bilinear function, in analogy with previous works [17].

3.2.2 Deriving Mean-Field Updates

Following previous works [37, 36] we resort on mean-ﬁeld
approximation. We derive mean-ﬁeld inference equations
for both latent features and attention variables. By denoting
as Eq the expectation with respect to the distribution q, we
get:

q(yi

s) ∝ exp

Eq(ai

s){ai
s}

E

S ){ξy(yi

s, yj

q(yj

(cid:17)
S)}

,

(cid:16)

s) +

φ(yi

s, xi
(cid:88)

(cid:16)

φ(yi

j
S, xi

S) +

q(yi

S) ∝ exp
(cid:88)
(cid:88)

E

s){aj

s}E

s){ξy(yi

S, yj

s)}

q(yj

q(aj

(cid:17)

,

s(cid:54)=S

j

(cid:16)

q(ai

s) ∝ exp

ai
s

Eq(yi
s)

(cid:110) (cid:88)

E

j

q(yj

S )

(cid:110)

ξy(yi

s, yj
S)

(cid:111) (cid:111)

(6)

(7)

(8)

(cid:88)

(cid:88)

+

s

j

E

s){ψ(ai

s, aj

s)}

q(aj

(cid:17)

,

s = Eq(ai

By considering the potentials deﬁned in (2), (3) and (5)
and denoting as ¯ai
s){ai
s}, the
following mean-ﬁelds updates can be derived for the latent
feature representations:
s = xi
¯yi

s = Eq(yi

s} and ¯yi

s + ¯ai
s

s){yi

i,j ¯yj

Ks

(cid:88)

(9)

S

S = xi
¯yi

S +

sKs
¯aj

i,j ¯yj
s

(10)

j
(cid:88)

(cid:88)

s(cid:54)=S

j

s are binary variables, ¯ai

Since ai
Therefore, the updates for ¯ai
(8) and the deﬁnitions of potential functions (3) and (5):

s=1) .
q(ai
s can be derived considering

s=1)
s=0)+q(ai

s =

q(ai



¯ai
s = σ

−

sKs
¯yi

i,j ¯yj

S −

i,j ¯aj
βs
s



(11)



(cid:88)

j

(cid:88)

(cid:88)

s

j

where σ() denotes the sigmoid function. Eqn. (11) shows

that, in analogy with previous methods employing an atten-
tion model [4, 13], in our framework we also compute the
attention variables by applying a sigmoid function to the
features derived by our CNN model. In addition, as we also
consider dependencies among different ai
s as in structured
models [17], our updates also involve related attention vari-
ables.

To infer the latent multi-scale representations Y and the
attention variables A, we implement the mean-ﬁeld updates
as a neural network (see Section 3.2.3). In this way we are
able to simultaneously learn the parameters of the CRFs and
those of the front-end CNN. When the inference is com-
plete, the ﬁnal depth map is obtained considering the ﬁnal
estimate associated to the last scale ¯yS (see Section 3.3).

3.2.3

Implementation with Neural Networks

To enable end-to-end optimization of the whole network,
we implement the proposed multi-scale model in neural net-
works. The target is to perform mean-ﬁeld updates for both
the attention variables and the multi-scale feature maps ac-
cording to the derivation described in Section 3.2.2.

To perform mean-ﬁeld updates of the attention model A
we follow (11).
In practice, the update of each attention
map as can be implemented in several steps as follows: (i)
perform the message passing from the two associated fea-
ture maps ¯ys and ¯yS (¯ys and ¯yS are initialized with cor-
responding feature observations xs and xS, respectively).
The message passing is performed via convolutional opera-
tions as ˆas ← ys (cid:12) (Ks ⊗ ¯yS), where Ks is a convolutional
kernel corresponding to the s-th scale and the symbols ⊗
and (cid:12) denote the convolutional and the element-wise prod-
uct operation, respectively; (ii) perform the message pass-
ing on the attention map with ˜as ← βs ⊗ ¯as, where βs is
a convolutional kernel; (iii) perform the normalization with
sigmoid function¯as ← σ(−(ˆas ⊕ ˜as)), where ⊕ denotes
element-wise addition operation.

When the attention maps are updated, we use them as
guidance to update the last scale feature map yS. The
mean-ﬁeld updates of yS can be carried out according to
(10) as follows: (i) perform the message passing from the
s-th scale to the S-th scale by ˆys ← Ks ⊗ ¯ys; (ii) multi-
ply for the attention model and add the unary term xS by
¯yS ← xS ⊕ (cid:80)
s(¯as (cid:12) ˆys). The computation of mean-ﬁeld
updates for the latent features corresponding to intermedi-
ate scales can be performed similarly, according to (9). In
our implementation to reduce the computational overhead,
we do not perform the mean-ﬁeld updates for the interme-
diate scales. The attention maps and the last scale feature
map are iteratively updated.

We would like to remark that, as a consequence of the
deﬁnition of the potential functions in (2), (3) and (5), the
computations of the mean-ﬁeld updates in our approach are
much more efﬁcient than in [36] where Gaussian functions

Table 1. NYU Depth V2 dataset: comparison with state of the art. In bold we indicate the best method adopting on the original set, while
in italics we indicate the best method using the extended set.

Method

Extra Training Data ?

Error (lower is better)
rms
log10
rel

Accuracy (higher is better)
δ < 1.252

δ < 1.253

δ < 1.25

Saxena et al. [29]
Karsch et al. [16]
Liu et al. [24]
Ladicky et al. [19]
Zhuo et al. [39]
Wang et al. [31]
Liu et al. [23]
Roi and Todorovic [26]
Xu et al. [36]
Ours

Eigen et al. [6]
Eigen and Fergus [5]
Laina et al. [20]
Li et al. [21]
Xu et al. [36]

No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)
No (795)

Yes (120K)
Yes (120K)
Yes (12K)
Yes (24K)
Yes (12K)

0.349
0.35
0.335
-
0.305
0.220
0.213
0.187
0.139
0.125

0.215
0.158
0.129
0.139
0.121

-
0.131
0.127
-
0.122
0.094
0.087
0.078
0.063
0.057

-
-
0.056
0.058
0.052

1.214
1.20
1.06
-
1.04
0.745
0.759
0.744
0.609
0.593

0.907
0.641
0.583
0.505
0.586

0.447
-
-
0.542
0.525
0.605
0.650
-
0.793
0.806

0.611
0.769
0.801
0.820
0.811

0.745
-
-
0.829
0.838
0.890
0.906
-
0.948
0.952

0.887
0.950
0.950
0.960
0.954

0.897
-
-
0.941
0.962
0.970
0.976
-
0.984
0.986

0.971
0.988
0.986
0.989
0.987

are considered for pairwise potentials.
Indeed, Gaussian
convolutions involve a much higher computational over-
head both in the forward and in the backward pass. We
further discuss this aspect in Section 4.
3.3. Network Structure and Optimization
Network Structure and Implementation. The overall
framework for monocular depth estimation is made by a
CNN architecture and the proposed CRF model (Fig. 2).
The CNN architecture is made of two main components,
i.e. a fully convolutional encoder and a fully convolutional
decoder. The encoder naturally supports any network struc-
ture. In this work we speciﬁcally employ ResNet-50 [11].
In our implementation the proposed CRF is adopted to re-
ﬁne the last scale feature map derived from the semantic
layer res5c, which receives message from the other scale
feature maps derived from res3c and res4f. res3c, res4f
and res5c are the last layers of different convolutional
blocks.
In each convolutional block, every layer outputs
a feature map with the same number of channels. Before
message passing, all the feature maps are ﬁrst upsampled
using a deconvolutional operation to the same size, i.e. 1/4
resolution of the original input image, and the number of
channels is set to 256 for all of them. The kernel size for
both Ks and βs is set to 3 with stride 1 and padding 1 to
have a local receptive ﬁeld and to speed up the calculation.
The proposed multi-scale CRF module outputs a reﬁned
feature map.To obtain the ﬁnal prediction we upsample the
feature map to the original resolution as the input image
using deconvolutional operations. Each time we upsample
the feature map by a factor of 2, at the same time reducing
by half the number of feature channels.

End-to-end optimization. As stated above, the proposed
model can be trained end-to-end, i.e. the parameters of the
front-end encoder Θe, those associated to the structured at-

tention guided CRF Θc, and those of the decoder Θd can be
jointly optimized. Given the training data set T , following
previous works [36], we use a square loss function for the
optimization, i.e. :

M
(cid:88)

LF ((I, D; Θe, Θc, Θd) =

(cid:107)F (Il

i; Θe, Θc, Θd)−Dl

i(cid:107)2
2

i=1
The whole network is jointly optimized via back-

propagation with standard stochastic gradient descent.

4. Experiments

We demonstrate the effectiveness of the proposed ap-
proach performing experiments on two publicly available
datasets:
the NYU Depth V2 [30] and the KITTI [8]
datasets. The following subsections describe our experi-
mental setup and the results of our evaluation.

4.1. Experimental Setup

Datasets. The NYU Depth V2 dataset [30] has 120K pairs
of RGB and depth maps gathered with a Microsoft Kinect.
The image resolution is 640 × 480 pixels. The dataset is
split into a training (249 scenes) and a test set (215 scenes).
Following previous works [22, 39, 36] in our experiments
we consider a subset of 1449 RGB-D pairs, of which 795
are used for training and the rest for testing. The data aug-
mentation is performed on the ﬂy by cropping the images to
320 × 240 pixels, randomly ﬂipping and scaling them with
a ratio ρ ∈ {1, 1.2, 1.5}.

The KITTI dataset [8], originally built for testing com-
puter vision algorithms in several tasks in the context of
autonomous driving, contains depth images captured with
a LiDAR sensor mounted on a driving vehicle. In our ex-
periments we follow the experimental protocol proposed by
Eigen et al.
[6] and consider 22,600 images correspond-
ing to 32 scenes as training data and 697 images asoociated

Figure 3. Examples of predicted depth maps on the NYU V2 test dataset: original RGB images (top row), predicted depth maps (center)
and ground truth (bottom row).

Table 2. KITTI dataset: comparison with state of the art. In bold we indicate the best performances in the monocular setting, while in
italics those corresponding to the stereo setting.

Method

Setting

range

stereo?

Error (lower is better)
rms
sq rel
rel

Accuracy (higher is better)
δ < 1.252

δ < 1.253

δ < 1.25

Saxena et al. [29]
Eigen et al. [6]
Liu et al. [23]
Zhou et al. [38]
Kuznietsov et al. [18] (only supervised)
Ours

Garg et al. [7]
Garg et al. [7] L12 + Aug 8x
Godard et al. [9]
Kuznietsov et al. [18]

0-80m
0-80m
0-80m
0-80m
0-80m
0-80m

0-80m
1-50m
0-80m
0-80m

No
No
No
No
No
No

Yes
Yes
Yes
Yes

0.280
0.190
0.217
0.208
-
0.122

0.177
0.169
0.148
-

-
-
0.092
1.768
-
0.897

1.169
1.080
1.344
-

8.734
7.156
7.046
6.858
4.815
4.677

5.285
5.104
5.927
4.621

0.601
0.692
0.656
0.678
0.845
0.818

0.727
0.740
0.803
0.852

0.820
0.899
0.881
0.885
0.957
0.954

0.896
0.904
0.922
0.960

0.926
0.967
0.958
0.957
0.987
0.985

0.962
0.958
0.963
0.986

to other 29 scenes as test data. The RGB image resolution
is reduced by half with respect to the original 1224 × 368
pixels. The ground-truth depth maps are generated by re-
projecting the 3D points collected from velodyne laser into
the left monocular camera as detailed in [7].
Implementation Details. The proposed approach is im-
plemented using the Caffe framework [15] and runs on a
single Nvidia Titan X GPU with 12 GB memory. While
the proposed framework is general, following recent works
[36, 20], we adopt the ResNet50 [11] as the front-end net-
work architecture. As stated above in the implementation,
we consider three-level feature maps derived from differ-
ent semantic convolutional layers (i.e. res3c, res4f and

res5c). These feature maps are fused with the proposed
CRF model for the ﬁnal prediction of the depth map. During
training, the front-end network is initialized with ImageNet
pretrained parameters. Differently from [36] which requires
a pretraining phase of the front-end CNN, we jointly opti-
mize the whole network. The initial learning rate is set to
10e − 9, and is decreased 10 times every 40 epochs. In total
60 epochs are used for training. The mini-batch size is set
to 16. The weight decay and the momentum are 0.0005 and
0.99, respectively.

Evaluation Metrics. In analogy with previous works [5,
6, 31, 36], to quantitatively assess the performance of our
method we consider several evaluation metrics. Specif-

Our results clearly show that the proposed approach
outperforms all supervised learning methods adopting the
original dataset in [6].
Importantly, the performance im-
provements over previous works based on CRFs models
[31, 22, 36] are signiﬁcant. In particular, we believe that the
increase in accuracy with respect to [36] conﬁrms our initial
intuition that operating directly at feature-level and integrat-
ing an attention model into a CRF leads to more accurate
depth estimates. Finally, we would like to point out that
our approach also outperforms most methods considering
an extended training set. Furthermore, the performance gap
between our framework and the deep model in [36] trained
on 95K samples is very narrow. We also provide some ex-
amples of depth maps estimated with the proposed method
in Fig. 3. Comparing our prediction with ground truth it
is clear that our approach is quite accurate even at objects
boundaries (notice, for instance, the accuracy in recovering
ﬁne-grained details in case of objects like chairs and tables).
Finally, we compare the proposed approach with previ-
ous methods considering the computational cost in the test
phase. Figure 4 depicts the mean relative error vs the run-
ning time (i.e. time to classify one image) for some of the
baseline methods (numbers are taken from the original pa-
pers). Our approach guarantees the best trade-off between
accuracy and time (notice that the deep model in Laina et
al. [20] is trained on an extended dataset). It is interesting
to compare our method with [36]: the proposed framework
not only outperforms [36] in terms of accuracy when both
models are trained on the original set [6]) but, by adopt-
ing different potential functions in the CRF, results into a
much faster inference. Another interesting comparison is
with [31] and [22], as these works are also based on CRFs.
Our model signiﬁcantly outperforms [22] and [31] both in
terms of accuracy and of running time (see Fig.4 and Table
1): due to visualization issues we do not show [31] in Fig.4
as the original paper report a time of 40 seconds to recover
the depth map for a single image.

[27], Eigen et al.

KITTI Dataset. A comparison with state of the art meth-
ods is also conducted on the KITTI dataset and the associ-
ated results are shown in Table 2. As baselines we consider
the work by Saxena et al.
[6], Liu et
al. [22], Zhou et al. [38], Garg et al. [7], Godard et al. [9]
and Kuznietsov et al. [18]. Importantly, the ﬁrst four meth-
ods only employ monocular images to predict depth infor-
mation, while in [7], [9] and [18] a stereo setting is consid-
ered in training and therefore these methods are not directly
comparable with our approach. As shown in the table, our
approach outperforms all previous methods considering a
supervised setting with the exception of the recent method
in [18]. With respect to [18] we obtain a lower error, while
the accuracy is slightly inferior. For sake of completeness
we also report the performance of previous methods consid-
ering a stereo setting. Among these methods, Kuznietsov

Figure 4. NYU V2 dataset. Comparison with previous methods:
running time vs. rel error.

(cid:80)Q

i=1
(cid:80)Q

| ¯di−di|
di

ically if Q is the total number of pixels of the test set
and ¯di and di denote the estimated and the ground-truth
depth for pixel i, we compute: (i) the mean relative er-
; (ii) the root mean squared er-
ror (rel):
i=1( ¯di − di)2; (iii) the mean log10 error
ror (rms):
i=1 (cid:107) log10( ¯di) − log10(di)(cid:107) and (iv) the ac-
(log10): 1
Q
curacy with threshold t, i.e. the percentage of ¯di such that
δ = max( di
¯di

) < t, where t ∈ [1.25, 1.252, 1.253].

1
Q
(cid:113) 1
Q
(cid:80)Q

In order to compare our results with previous methods on
the KITTI dataset we crop our images using the evaluation
crop applied by Eigen et al. [6].

, ¯di
di

4.2. Experimental Results

To demonstrate the effectiveness of the proposed frame-
work we ﬁrst conduct a comparison with state of the art
methods both on the NYU Depth V2 dataset and on the
KITTI benchmark. We also conduct an in-depth analysis
of our method, evaluating both accuracy and computational
efﬁciency.

[16], Ladicky et al.

NYU Depth V2 Dataset. Table 1 shows the results of the
comparison with state of the art methods on the NYU Depth
V2 dataset. As baselines we consider both approaches
based on hand-crafted features (Saxena et al. [29], Karsch
et al.
[19]) and deep learning ar-
chitectures. Concerning the latter category, we compare
with methods which exploit multiscale information (Eigen
et al.
[6], Eigen and Fergus [5], Li et al. [21]), with ap-
proaches which consider graphical models (Liu et al. [24],
Liu et al. [22], Zhuo et al. [39], Wang et al. [31], Xu et
al. [36]) and neural regression forests ([26]), and with meth-
ods which explore the utilization of the reverse Huber loss
function (Laina et al. [20]). The numerical results associ-
ated to previous methods are taken directly from the origi-
nal papers. For a fair comparison in the table we also report
information about the adopted training set, as it represents
an important factor for CNN performance. In particular, we
separate methods which adopt the original training set in [6]
and those which consider an extended dataset for learning
their deep models.

RGB Image

GT Depth Map

Eigen et al. [6]

Zhou et al. [38]

Garg et al. [7]

Ours

Figure 5. Examples of depth prediction results on the KITTI dataset: qualitative comparison with previous methods. The sparse ground-
truth depth maps are interpolated for better visualization.

Table 3. Quantitative analysis of the main components of our method on the KITTI dataset.

Method

0.168 1.072 5.101
Front-end CNN (w/o multiple deep supervision)
0.152 0.973 4.902
Front-end CNN (w/ multiple deep supervision)
0.143 0.949 4.825
Multi-scale feature fusion with naive concatenation
0.134 0.895 4.733
Multi-scale feature fusion with CRFs (w/o attention model)
Multi-scale feature fusion with CRFs (w/ attention model)
0.127 0.869 4.636
Multi-scale feature fusion with CRFs (w/ structured attention model) 0.122 0.897 4.677

Error
(lower is better)
log10
rel

rms

Accuracy
(higher is better)
δ < 1.25 δ < 1.252 δ < 1.253
0.932
0.741
0.931
0.782
0.939
0.795
0.942
0.803
0.950
0.811
0.954
0.818

0.981
0.974
0.978
0.980
0.982
0.985

et al. [18] achieve the best performance by exploiting both
ground truth supervision and stereo information. Following
the same idea, we believe that an interesting future research
direction will be to integrate stereo cues into our framework.
A qualitative comparison with some state of the art methods
is also shown in Fig. 5.

Ablation Study. To further demonstrate the effectiveness
of the proposed method we conduct an ablation study on
the KITTI dataset. Table 3 shows the results of our analy-
sis. In the table, “multiple deep supervision” refers to train-
ing the front-end CNN with the approach in [32]; “w/ at-
tention model” refers to considering attention variables ai
s
in the optimization but discarding the structured potential;
“w/ structured attention model” indicates the using of the
structured attention model. In line with ﬁndings from pre-
vious works [31, 36, 22], embedding a CRFs model into
a deep architecture provides a signiﬁcant improvement in
terms of performance. Furthermore, adopting a CRFs is an
extremely effective strategy for combining multi-scale fea-
tures, as it is evident when comparing our results with CRF
and those corresponding to naive feature concatenation. Fi-
nally and more importantly, by introducing the proposed
CRF model with an attention mechanism and, in particular,

with a structured attention one, we can signiﬁcantly boost
performance.

5. Conclusions

We presented a novel approach for monocular depth esti-
mation. The main contribution of this work is a CRF model
which optimally combines multi-scale information derived
from the inner layers of a CNN by learning a set of latent
features representations and the associated attention model.
We demonstrated that by combining multi-scale informa-
tion at feature-level and by adopting a structured attention
mechanism, our approach signiﬁcantly outperforms previ-
ous depth estimation methods based on CRF-CNN mod-
els [37, 22, 36]. Importantly, our framework can be used
in combination with several CNN architectures and can be
trained end-to-end. Extensive evaluation shows that our
method outperforms most baselines. Future research could
perform cross-domain detection tasks [34] based on the pre-
diction of the scene depth.

Acknowledgements

This work is partially supported by National Natural Sci-
ence Foundation of China (NSFC, No.U1613209). The au-
thors would like to thank NVIDIA for GPU donation.

References

[1] P. Buyssens, A. Elmoataz, and O. L´ezoray. Multiscale con-
volutional neural networks for vision–based classiﬁcation of
cells. In ACCV, 2012. 2

[2] Y. Cao, Z. Wu, and C. Shen. Estimating depth from monoc-
ular images as classiﬁcation using deep fully convolutional
residual networks. TCSVT, PP(99):1–1, 2017. 2

[3] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
volutional nets and fully connected crfs. ICLR, 2015. 2
[4] L.-C. Chen, Y. Yang, J. Wang, W. Xu, and A. L. Yuille. At-
tention to scale: Scale-aware semantic image segmentation.
CVPR, 2016. 2, 4

[5] D. Eigen and R. Fergus. Predicting depth, surface normals
and semantic labels with a common multi-scale convolu-
tional architecture. In ICCV, 2015. 1, 2, 5, 7

[6] D. Eigen, C. Puhrsch, and R. Fergus. Depth map prediction
In
from a single image using a multi-scale deep network.
NIPS, 2014. 1, 2, 5, 6, 7, 8

[7] R. Garg, G. Carneiro, and I. Reid. Unsupervised cnn for
single view depth estimation: Geometry to the rescue.
In
ECCV, 2016. 6, 7, 8

[8] A. Geiger, P. Lenz, C. Stiller, and R. Urtasun. Vision meets

robotics: The kitti dataset. IJRR, 2013. 2, 5

[9] C. Godard, O. Mac Aodha, and G. J. Brostow. Unsuper-
vised monocular depth estimation with left-right consistency.
CVPR, 2017. 2, 6, 7

[10] B. Hariharan, P. Arbel´aez, R. Girshick, and J. Malik. Hyper-
columns for object segmentation and ﬁne-grained localiza-
tion. In CVPR, 2015. 1

[12] D. Hoiem, A. A. Efros, and M. Hebert. Automatic photo
pop-up. ACM transactions on graphics (TOG), 24(3):577–
584, 2005. 2

[13] S. Hong, J. Oh, H. Lee, and B. Han. Learning transferrable
knowledge for semantic segmentation with deep convolu-
tional neural network. In CVPR, 2016. 2, 4

[14] G. Huang, Z. Liu, K. Q. Weinberger, and L. van der Maaten.
Densely connected convolutional networks. CVPR, 2017. 3
[15] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long, R. Gir-
shick, S. Guadarrama, and T. Darrell. Caffe: Convolu-
tional architecture for fast feature embedding. arXiv preprint
arXiv:1408.5093, 2014. 6

[16] K. Karsch, C. Liu, and S. B. Kang. Depth transfer: Depth ex-
traction from video using non-parametric sampling. TPAMI,
36(11):2144–2158, 2014. 2, 5, 7

[17] Y. Kim, C. Denton, L. Hoang, and A. M. Rush. Structured

attention networks. ICLR, 2017. 2, 4

[18] Y. Kuznietsov, J. St¨uckler, and B. Leibe. Semi-supervised
deep learning for monocular depth map prediction. CVPR,
2017. 1, 2, 6, 7, 8

[19] L. Ladicky, J. Shi, and M. Pollefeys. Pulling things out of

perspective. In CVPR, 2014. 2, 5, 7

[20] I. Laina, C. Rupprecht, V. Belagiannis, F. Tombari, and
N. Navab. Deeper depth prediction with fully convolutional

residual networks. arXiv preprint arXiv:1606.00373, 2016.
2, 5, 6, 7

[21] B. Li, Y. Dai, and M. He. Monocular depth estimation with
hierarchical fusion of dilated cnns and soft-weighted-sum in-
ference. arXiv preprint arXiv:1708.02287, 2017. 5, 7
[22] F. Liu, C. Shen, and G. Lin. Deep convolutional neural ﬁelds
for depth estimation from a single image. In CVPR, 2015. 1,
2, 3, 5, 7, 8

[23] F. Liu, C. Shen, G. Lin, and I. Reid. Learning depth from sin-
gle monocular images using deep convolutional neural ﬁelds.
TPAMI, 38(10):2024–2039, 2016. 5, 6

[24] M. Liu, M. Salzmann, and X. He. Discrete-continuous depth
estimation from a single image. In CVPR, 2014. 5, 7
[25] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In CVPR, 2015. 2
[26] A. Roy and S. Todorovic. Monocular depth estimation using

neural regression forest. In CVPR, 2016. 2, 5, 7

[27] A. Saxena, S. H. Chung, and A. Y. Ng. Learning depth from

single monocular images. In NIPS, 2005. 7

[28] A. Saxena, S. H. Chung, and A. Y. Ng. 3-d depth recon-
struction from a single still image. IJCV, 76(1):53–69, 2008.
2

[29] A. Saxena, M. Sun, and A. Y. Ng. Make3d: Learning 3d
scene structure from a single still image. TPAMI, 31(5):824–
840, 2009. 5, 6, 7

[30] N. Silberman, D. Hoiem, P. Kohli, and R. Fergus.

segmentation and support inference from rgbd images.
ECCV, 2012. 2, 5

Indoor
In

[31] P. Wang, X. Shen, Z. Lin, S. Cohen, B. Price, and A. Yuille.
Towards uniﬁed depth and semantic prediction from a single
image. In CVPR, 2015. 1, 2, 5, 7, 8

[33] D. Xu, W. Ouyang, X. Alameda-Pineda, E. Ricci, X. Wang,
and N. Sebe. Learning deep structured multi-scale features
In NIPS,
using attention-gated crfs for contour prediction.
2017. 2

[34] D. Xu, W. Ouyang, E. Ricci, X. Wang, and N. Sebe. Learn-
ing cross-modal deep representations for robust pedestrian
detection. In CVPR, 2017. 8

[35] D. Xu, W. Ouyang, X. Wang, and N. Sebe. Pad-net: Multi-
tasks guided prediciton-and-distillation network for simulta-
neous depth estimation and scene parsing. In CVPR, 2018.
1

[36] D. Xu, E. Ricci, W. Ouyang, X. Wang, and N. Sebe. Multi-
scale continuous crfs as sequential deep networks for monoc-
ular depth estimation. CVPR, 2017. 1, 2, 3, 4, 5, 6, 7, 8
[37] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. H. Torr. Conditional ran-
dom ﬁelds as recurrent neural networks. In ICCV, 2015. 4,
8

[38] T. Zhou, M. Brown, N. Snavely, and D. G. Lowe. Unsuper-
vised learning of depth and ego-motion from video. CVPR,
2017. 2, 6, 7, 8

[39] W. Zhuo, M. Salzmann, X. He, and M. Liu. Indoor scene
structure analysis for single image depth estimation.
In
CVPR, 2015. 5, 7

[11] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning

[32] S. Xie and Z. Tu. Holistically-nested edge detection.

In

for image recognition. In CVPR, 2016. 5, 6

ICCV, 2015. 2, 8

