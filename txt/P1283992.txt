FacePoseNet: Making a Case for Landmark-Free Face Alignment

Feng-Ju Chang1, Anh Tuan Tran1, Tal Hassner2,3, Iacopo Masi1, Ram Nevatia1, Gerard Medioni1
1 Institute for Robotics and Intelligent Systems, USC, CA, USA
2 Information Sciences Institute, USC, CA, USA
3 The Open University of Israel, Israel
{fengjuch,anhttran,iacopoma,nevatia,medioni}@usc.edu, hassner@isi.edu

7
1
0
2
 
g
u
A
 
1
3
 
 
]

V
C
.
s
c
[
 
 
2
v
7
1
5
7
0
.
8
0
7
1
:
v
i
X
r
a

Abstract

We show how a simple convolutional neural network
(CNN) can be trained to accurately and robustly regress 6
degrees of freedom (6DoF) 3D head pose, directly from im-
age intensities. We further explain how this FacePoseNet
(FPN) can be used to align faces in 2D and 3D as an alter-
native to explicit facial landmark detection for these tasks.
We claim that in many cases the standard means of measur-
ing landmark detector accuracy can be misleading when
comparing different face alignments. Instead, we compare
our FPN with existing methods by evaluating how they
affect face recognition accuracy on the IJB-A and IJB-B
benchmarks: using the same recognition pipeline, but vary-
ing the face alignment method. Our results show that (a)
better landmark detection accuracy measured on the 300W
benchmark does not necessarily imply better face recog-
nition accuracy.
(b) Our FPN provides superior 2D and
3D face alignment on both benchmarks. Finally, (c), FPN
aligns faces at a small fraction of the computational cost
of comparably accurate landmark detectors. For many pur-
poses, FPN is thus a far faster and far more accurate face
alignment method than using facial landmark detectors.

1. Introduction

Facial landmark detection is rarely, if ever, an application
in its own right. Instead, it is typically a means to an end:
It is one component out of many in pipelines designed for
other face understanding and processing tasks, often pro-
viding effective means for aligning face photos and mak-
ing them easier to process. Most facial landmark detectors,
however, are developed without measuring their impact on
these applications but rather using standard facial land-
mark detection benchmarks such as the popular AFW [52],
LFPW [5], HELEN [26], and IBUG [40]. These bench-
marks contain face images with manually labeled ground
truth landmarks. Better detection accuracy on these bench-
marks equals better prediction of these manual positions.

Figure 1. The problem with manually labeled ground truth fa-
cial landmarks. Images and annotations from the AFW [52] (left
two columns) and iBug [40] benchmarks. One of each pair shows
manually labeled ground truth landmarks; the other, a high-error
prediction of our FPN, which does not account for facial expres-
sion or 3D shape. Which is which?1 Clearly, detection accuracy,
as measured by standard benchmarks, does not necessarily reﬂect
the quality of the landmark detection.

This raises an important question: Does better approxima-
tion of such human labeled landmarks imply better face
alignment and consequently better face understanding?

Why would higher accuracy on landmark detection
benchmarks not imply better alignment? The many land-
mark detection benchmarks used by the community to mea-
sure detection accuracy typically offer 5, 49 or 68 land-
marks painstakingly labeled on hundreds or thousands of
unconstrained face images, reﬂecting wide viewpoint, res-
olution and noise variations. On low resolution images,
however, even expert human operators can ﬁnd it hard to
accurately pinpoint landmark positions. More importantly,
many landmark locations are not well deﬁned even in high

1

Imagesone,three,andﬁvearegroundtruth.

1

resolution (e.g., points along the jawline or behind occlu-
sions). Thus, improved landmark detection accuracy may
actually reﬂect better estimation of uncertain human labels
rather than better face alignment (Fig. 1).

An additional concern relates to how landmarks are used
for face alignment. Face alignment often implies using a
global 2D or 3D transformation to warp faces to ideal, ref-
erence frames: Detected landmarks are matched with their
corresponding landmarks in the reference coordinates and a
2D or 3D transformation is then computed by robust estima-
tion methods. To our knowledge, the effects landmark de-
tection noise, changing expressions or face shapes have on
these estimated transformations were never fully explored.
Responding to these concerns, we offer several contribu-
tions. (1) We propose comparing landmark detection meth-
ods by evaluating bottom line face recognition accuracy on
faces aligned with these methods.
(2) As an alternative
to existing facial landmark detectors, we further present a
robust and accurate, landmark-free method for face align-
ment: our deep FacePoseNet (FPN). We show it to excel at
global, 3D face alignment even under the most challenging
viewing conditions. Finally, (3), we test our FPN exten-
sively and report that better landmark detection accuracy
on the widely used 300W benchmark [39] does not imply
better alignment and recognition on the highly challeng-
ing IJB-A [22] and IJB-B benchmarks [43]. In particular,
recognition results on images aligned with our FPN surpass
those on images aligned with state-of-the-art detectors.

Some applications require landmark estimation. Our
FPN provides a more accurate and far faster face alignment
technique in the many cases where global alignment, rather
than speciﬁc landmark positions, is needed. To support our
claims, we make our code publicly available 1.

2. Related work

Applications of facial landmark detectors. Facial land-
mark detection is big business, as reﬂected by the numerous
citation to relevant papers, the many facial landmark detec-
tion benchmarks [5, 23, 26, 39, 52], and popular interna-
tional events dedicated to this problem. With all this effort,
a rigorous survey of the many applications of facial land-
marks is outside the scope of this paper. In lieu of such a
survey, and to get some idea of why this problem attracts so
much attention, we offer the following cursory study.

We consider two of the most widely cited face land-
mark detector papers of the last decade, the tree based ap-
proach [52] and supervised descent method [47]. At the
time of writing, based on Google Scholar, the latter accumu-
lated nearly a thousand citations and the former well over a
thousand. We found 23 application names appearing fre-
quently (more than ten times) in the titles of the papers that

1https://github.com/fengju514/Face-Pose-Net

cite these two and counted the number of times these appli-
cations were mentioned. The relative frequencies of these
applications are reported in Fig. 2.

Of course, this simple survey is by no means accurate:
the same term is counted twice if the paper using it in its
title cites both [52] and [47] and many paper titles do not
clearly state the application they describe (e.g., [14] de-
scribes a method for face alignment in 3D but does not men-
tion “alignment” in the title). Nevertheless, with around two
thousand papers included in this survey, the result is quite
clear: Alignment, face recognition and pose estimation –
also considered alignment – are overwhelmingly more pop-
ular than any other application. This, of course, excluding
other landmark detection papers.
What does it mean to align a face? The term alignment
almost always appears in the titles of papers which present
facial landmark detection methods [1, 7, 37] (and most oth-
ers) implying that the two terms are used interchangeabil-
ity. This reﬂects an interpretation of alignment as forming
correspondences between particular spatial locations in one
face image and another. A different interpretation of align-
ment, and the one used here, refers not only to establish-
ing these correspondences but also to warping the two face
images, thus making them easier to compare and match.
Face warping with estimated 2D (in-plane) or 3D transfor-
mations is well known to have a profound impact on the
performance of face recognition systems [16, 18].

Although sometimes alignments involve non-parametric
or part-based warps [14, 15], often, global 2D or 3D (para-
metric) transformation are all that is required for this pur-
pose. Such aligned faces are then further processed in
systems for face recognition [8, 11, 51], emotion recogni-
tion [19, 29], age and gender estimation [12, 13, 28], and
more. In fact, it was recently claimed that a global align-
ment is both more robust and far faster to warp than non-
parametric transformations [31, 33]. This paper focuses on
such global transformations, showing how they can be esti-
mated quickly and accurately using a deep neural network.

Deep pose estimation. This work describes a deep net-
work trained to estimate the 6DoF of 3D faces viewed in
single images. Deep learning is increasingly used for sim-
ilar purposes, though typically focusing on general object
classes [4, 35, 41]. Some recently addressed faces in par-
ticular, though their methods are designed to estimate 2D
landmarks along with 3D face shapes [20, 25, 50]. Unlike
our proposed pose estimation, they regress poses by using
iterative methods which involve computationally costly face
rendering. We regress 6DoF directly from image intensities
without such rendering steps.

In all these cases, absence of training data was cited as
a major obstacle for training effective models. In response,
some turned to larger 3D object data sets [46, 45] or us-
ing synthetically generated examples [38]. We propose a

A second potential problem lies in the error measure it-
self: Normalizing detection errors by inter-ocular distances
biases against images of faces appearing at non-frontal
views. When faces are near proﬁle, perspective projection
of the 3D face onto the image plane shrinks the distances
between the eyes thereby naturally inﬂating the errors com-
puted for such images.

Landmark detection speed. Some facial landmark detec-
tion methods emphasize impressive speeds [21, 37]. Mea-
sured on standard landmark detection benchmarks, how-
ever, these methods do not necessarily claim state-of-the-art
accuracy, falling behind more sophisticated, yet far slower
detectors [49]. Moreover, aside from [50], no existing
landmark detector is designed to take advantage of GPU
hardware, a standard feature in commodity computer sys-
tems and most, including [50], apply iterative optimizations
which may be hard to convert to parallel processing.

Effects of facial expression and shape on alignment. It
was recently shown that 3D alignment and warping of faces
to frontal viewpoints (i.e. frontalization) is effective regard-
less of the precise 3D face shape used for this purpose [16].
Facial expressions and 3D shapes in particular, appear to
have little impact on the warped result as evident by the im-
proved face recognition accuracy reported by that method.
Moreover, it was recently demonstrated that by using such
a generic 3D face shape, rendering faces from new view-
points can be accelerated to the same speed as simple 2D
image warping [31].

Interestingly, they and many others used facial land-
mark detectors to compute parametric transformations –
projection matrix [16] or 2D afﬁne or similarity trans-
forms [12, 18] – by applying robust estimators to corre-
sponding detected facial landmarks [14, 27]. Variations in
landmark locations due to expressions and face shapes es-
sentially contribute noise to this estimation process. The
effects these variations have on the quality of the alignment
were, as far as we know, never truly studied.

4. Deep, direct head pose regression

Rather than align faces using landmark detection, we re-
fer to alignment as a global, 6DoF 3D face pose, and pro-
pose to infer it directly from image intensities, using a sim-
ple deep network architecture. We next describe the net-
work and the novel method used to train it.

4.1. Head pose representation

We deﬁne face alignment as the 3D head pose h, ex-
pressed using 6DoF: three for rotations, r = (rx, ry, rz)T ,
and three for translations, t = (tx, ty, tz)T :

h = (rx, ry, rz, tx, ty, tz)T

(2)

Figure 2. Applications of facial landmarks. Illustrating the fre-
quency of various task and application names in paper titles citing
two of the most popular landmark detectors [52] and [47].

far simpler alternative and show it to result in robust and
accurate face alignment.

3. A critique of facial landmark detection

Before using an existing state-of-the-art facial landmark
detector in a face processing system, the following points
should be considered.

Landmark detection accuracy measures. Facial land-
mark detection accuracy is typically measured by consider-
ing the distances between estimated landmarks and ground
truth (reference) landmarks, normalized by the reference
inter-ocular distance of the face [10]:

e(L, ˆL) =

1
m(cid:107)ˆpl − ˆpr(cid:107)2

m
(cid:88)

i=1

(cid:107)pi − ˆpi(cid:107)2,

(1)

Here, L = {pi} is the set of m 2D facial landmark coordi-
nates, ˆL = { ˆpi} their ground truth locations, and ˆpl, ˆpr the
reference left and right eye outer corner positions. These
errors are then translated to a number of standard quanti-
ties, including the mean error rate (MER), the percentage
of landmarks detected under certain error thresholds (e.g.,
below 5% or 10% error rates) or the area under the accumu-
lative error curve (AUC).

There are two key problems with this method of eval-
uating landmark errors. First, the ground truth compared
against is manually speciﬁed, often by mechanical turk
workers. These manual annotations can be noisy, they are
ill-deﬁned when images are low resolution, the landmarks
are occluded (in case of large out-of-plane head rotations,
facial hair and other obstructions), or located in featureless
facial regions (e.g., along the jawline). Accurate facial land-
mark detection, as measured on these benchmarks, thus im-
plies better matching human labels but not necessarily bet-
ter detection. These problems are demonstrated in Fig. 1.

Figure 3. Augmenting appearances of images from the VGG face dataset [34]. After detecting the face bounding box and landmarks we
augment its appearance by applying a number of simple planar transformations, including translation, scaling, rotation, and ﬂipping. The
same transformations are applied to the landmarks, thereby producing example landmarks for images which may be too challenging for
existing landmark detectors to process.

where (rx, ry, rz) are represented as Euler angles (pitch,
yaw, and roll). Given m 2D facial landmark coordinates
on an input image, p2×m, and their corresponding, refer-
ence 3D coordinates, P3×m – selected on a ﬁxed, generic
3D face model – we can obtain a 3D to 2D projection of the
3D landmarks onto the 2D image by solving the following
equation for the standard pinhole model:

[p, 1]T = A[R, t][P, 1]T ,

(3)

where A and R are the camera matrix and rotation matrix
respectively and 1 is a constant vector of 1. We then ex-
tract a rotation vector r = (rx, ry, rz)T from R using the
Rodrigues rotation formula:

R = cos θI+(1−cos θ)rrT +sin θ





0
rz
−ry

−rz
0
rx



 ,

ry
−rx
0

where we deﬁne θ = ||r||2.
Obtaining enough training examples. Although our net-
work architecture is not very deep compared to deep net-
works used today for other tasks, training it still requires
large quantities of labeled training data. We found the num-
bers of facial landmark annotated faces in standard data sets
to be too small for this purpose. A key problem is therefore
obtaining a large enough training set.

We produce our training set by synthesizing 6D, ground
truth pose labels by running an existing facial landmark de-
tector [3] on a large image set: the 2.6 million images in
the VGG face dataset [34]. The detected landmarks were
then used to compute the 6DoF labels for the images in this
set. A potential danger in using an existing method to pro-
duce our training labels, is that our CNN will not improve
beyond the accuracy of its training labels. As we show in
Sec. 5, this is not necessarily the case.

To further improve the robustness of our CNN, we ap-
ply a number of face augmentation techniques to the im-
ages in the VGG face set, substantially enriching the appear-
ance variations it provides. Fig. 3 illustrates this augmen-
tation process. Speciﬁcally, following face detection [48]

Table 1. Summary of augmentation transformation parameters
used to train our FPN. Where U(a, b) samples from a uniform dis-
tribution ranging from a to b and N (µ, σ2) samples from a normal
distribution with mean µ and variance σ2. width and height are
the face detection bounding box dimensions.

Transformation
Horizontal translation
Vertical translation
Scaling
Rotation (degrees)

Range
U(−0.1, 0.1) × width
U(−0.1, 0.1) × height
U(0.75, 1.25)
30 × N (0, 1)

and landmark detection [3], we transform detected bound-
ing boxes and their detected facial landmarks using a num-
ber of simple in-plane transformations. The parameters for
these transformations are selected randomly from ﬁxed dis-
tributions (Table. 1). The transformed faces are then used
for training, along with their horizontally mirrored versions,
to provide yaw rotation invariance. Ground truth labels are,
of course, computed using the transformed landmarks.

Some example augmented faces are provided in Fig. 4.
Note that augmented images would often be too challenging
for existing landmark detectors, due to extreme rotations
or scaling. This, of course, does not affect the accuracy
of the ground truth labels which were obtained from the
original images. It does, however, force our CNN to learn
to estimate poses even on such challenging images.

FPN training. For our FPN we use an AlexNet architec-
ture [24] with its initialized weights provided by [32]. The
only difference is that here the output regresses 6D ﬂoat-
ing point values rather than predicts one-hot encoded, multi
class labels. Note that during training each dimension of the
head pose labels is normalized by the corresponding mean
and standard deviation of the training set, compensating for
the large value differences among dimensions. The same
normalization parameters are used at test time.

2D and 3D face alignment with FPN. Given a test im-
age, it is processed by applying the same face detector [48],

Figure 4. Example augmented training images. Example images from the VGG face data set [34] following data augmentation. Each
triplet shows the original detected bounding box (left) and its augmented versions (mirrored across the vertical axis). Both ﬂipped versions
were used for training FPN. Note that in some cases, detecting landmarks would be highly challenging on the augmented face, due to severe
rotations and scalings not normally handled by existing methods. Our FPN is trained with the original landmark positions, transformed to
the augmented image coordinate frame.

cropping the face and scaling it to the dimension of the net-
work’s input layer. The 6D network output is then converted
to a projection matrix. Speciﬁcally, the projection matrix is
produced by the camera matrix A, rotation matrix R, and
the translation vector t in Eq. (3). With this projection ma-
trix we can render new views of the face, aligning it across
3D views as was recently proposed by others [33, 31].

For 2D alignment, we compute the 2D similarity trans-
form to warp the 2D projected landmarks to pre-deﬁned
landmark locations. With frontal images (absolute yaw an-
gle ≤ 30◦), we use the eye centers, the nose tip, and the
mouth corners for alignment. With proﬁle images (absolute
yaw angle > 30◦), however, only the visible eye center and
the nose tip are used.

5. Results

We provide comparisons of our FPN with the follow-
ing widely used, state-of-the-art, facial landmark detection
methods: Dlib [21], CLNF [2], OpenFace [3], DCLM [49],
RCPR [6], and 3DDFA [50] evaluating them for their effects
on face recognition vs. their landmark detection accuracy.

5.1. Effect of alignment on recognition

Sec. 3 discusses the various potential problems of com-
paring face alignment methods by measuring their landmark
detection accuracy. As an alternative, we propose compar-
ing methods for face alignment and landmark detection by
evaluating their effect on the bottom line accuracy of a face
processing pipeline. Since face recognition is arguably one
of the most popular applications for face alignment, we use
recognition accuracy as a performance measure. To our
knowledge, this is the ﬁrst time alignment methods are com-
pared based on their effect on recognition accuracy.

Speciﬁcally, we use two of the most recent benchmarks
for face recognition: IARPA Janus Benchmark A [22] and
B [43] (IJB-A and IJB-B). Importantly, these benchmarks

Table 2. Veriﬁcation and identiﬁcation on IJB-A and IJB-B, com-
paring landmark detection based face alignment methods. Three
baseline IJB-A results are also provided as reference at the top of
the table. ∗ Numbers estimated from the ROC and CMC in [43].

Method ↓
Eval. →

TAR@FAR

Identiﬁcation Rate (%)

.01% 0.1% 1.0% Rank-1 Rank-5 Rank-10 Rank-20

Crosswhite et al. [9]
Ranjan et al. [36]
Masi et al. [31]
RCPR [6]
Dlib [21]
CLNF [2]
OpenFace [3]
DCLM [49]
3DDFA [50]
Our FPN

GOTs [43]∗
VGG face [43]∗
RCPR [6]
Dlib [21]
CLNF [2]
OpenFace [3]
DCLM [49]
3DDFA [50]
Our FPN

–
94.3
75.0
75.4
80.4
75.1
68.9
73.8
82.8
85.2

IJB-A [22]
93.9
97.0
88.8
83.5
86.8
82.9
80.6
83.7
89.0
90.1
IJB-B [43]

33.0
72.0
83.8
88.2
85.2
71.6
81.0
89.1
91.6

60.0
86.0
93.3
94.8
93.4
87.0
92.0
95.6
96.5

92.8
97.3
92.5
86.6
89.2
86.3
84.3
86.3
90.3
91.4

42.0
78.0
83.6
88.0
84.5
74.3
81.8
89.0
91.1

–
90.9
56.4
64.9
70.5
68.9
58.7
64.5
74.8
77.5

16.0
55.0
71.2
78.1
74.1
54.8
67.6
78.5
83.2

–
–
96.6
90.9
91.9
90.5
89.8
90.7
92.8
93.0

57.0
86.0
90.9
93.2
90.9
84.1
89.7
94.1
95.3

98.6
98.8
97.4
92.2
93.0
91.9
91.4
92.2
93.5
93.8

62.0
89.0
93.2
94.9
93.0
87.8
92.0
95.5
96.5

–
–
98.0
93.7
94.2
93.3
93.2
93.7
94.4
94.8

68.0
92.0
95.0
96.3
94.8
90.9
94.1
96.9
97.5

were designed with the speciﬁc intention of elevating the
difﬁculty of face recognition. This heightened challenge is
reﬂected by, among other factors, an unprecedented amount
of extreme out of plane rotated faces including many ap-
pearing in near-proﬁle views [33]. As a consequence, these
two benchmarks not only push the limits of face recogni-
tion systems, but also the alignment methods used by these
systems, possibly more so than the faces in standard facial
landmark detection benchmarks.

Face recognition pipeline. We employ a system similar
to the one recently proposed by [31, 33], building on their
publicly available ResFace101 model and related code. We

(a) ROC IJB-A

(b) CMC IJB-A

Figure 5. Veriﬁcation and identiﬁcation results on IJB-A and IJB-B. ROC and CMC curves accompanying the results reported in Table 2.

(c) ROC IJB-B

(d) CMC IJB-B

chose this system, as it explicitly aligns faces to multiple
viewpoints, including rendering novel views. These steps
are highly dependent on the quality of alignment and so its
recognition accuracy should reﬂect alignment accuracy. In
practice, we used their 2D (similarity transform) and 3D
(new view rendering) code directly, changing how the trans-
formations are computed: our tests compare different land-
mark detectors used to recover the 6DoF head pose required
by their warping and rendering method, with the 6DoF re-
gressed using our FPN.

Their system uses a single Convolutional Neural Net-
work (CNN), a ResNet-101 architecture [17], trained on
both real face images and synthetic, rendered views. We
ﬁne tune the ResFace101 CNN using L2-constrained Soft-
max Loss [36] instead of the original softmax used by Masi
et al. for their publicly released model. This ﬁne tuning is
performed using the MS-Celeb face set [30] as an example
set. Aside from this change, we use the same recognition
pipeline from [31] and we refer to that paper for details.

Bounding box detection. We emphasize that an identical
pipeline was used with the different alignment methods; dif-
ferent results vary only in the method used to estimate fa-
cial pose. The only other difference between recognition
pipelines was in the facial bounding box detector.

Facial landmark detectors are sensitive to the face detec-
tor they are used with. We therefore report results obtained
when running landmark detectors with the best bounding

boxes we were able to determine. Speciﬁcally, FPN was
applied to the bounding boxes returned by the detector of
Yang and Nevatia [48], following expansion of its dimen-
sions by 25%. Most detectors performed best when applied
using the same face detector, without the 25% increase. Fi-
nally, 3DDFA [50] was tested with the same face detector
followed by the face box expansion code provided by its
authors.

Face veriﬁcation and identiﬁcation results. Face veriﬁ-
cation and identiﬁcation results on both IJB-A and IJB-B
are provided in Table 2. We report multiple recognition
metrics for both veriﬁcation and identiﬁcation: For veri-
ﬁcation, these measure the recall (True Acceptance Rate)
at three cut-off points of the False Alarm Rate (TAR-
{1%,0.1%,0.01%}). For identiﬁcation we provide recogni-
tion rates at four ranks from the CMC (Cumulative Match-
ing Characteristic). The overall performances in terms of
ROC and CMC curves are shown in Fig. 5. The table
also provides, as reference, three state-of-the-art IJB-A re-
sults [9, 31, 36] and baseline results from [43] for IJB-B
(to our knowledge, we are the ﬁrst to report veriﬁcation and
identiﬁcation accuracies on IJB-B).

Faces aligned with our FPN offer higher recognition
rates, even compared to the most recent, state-of-the-art fa-
In addition, our
cial landmark detection method of [49].
veriﬁcation scores on IJB-A outperform the scores reported
for the system used here as the basis for our recognition sys-

Method
RCPR [6]
Dlib [21]
CLNF [2]
OpenFace [3]
DCLM [49]
3DDFA [50]
Our FPN

≤ 5% ≤ 10% ≤ 20% ≥ 40% MER Sec./im.
44.44 % 66.96 % 77.39 % 9.55 % 0.1386
60.03 % 82.65 % 90.94 % 2.83 % 0.0795
20.86 % 65.11 % 87.62 % 2.63 % 0.1106
54.39 % 86.74 % 95.42 % 1.27 % 0.0702
64.91 % 91.91 % 96.00 % 1.17 % 0.0611
N/A
1.75 % 65.40 % 93.86 % 0.97 % 0.1043

0.19
0.009
0.38
0.31
15.83
0.6
0.005

N/A

N/A

N/A

N/A

(a) Quantitative results

(b) Acumulative error curves

Figure 6. 68 point detection accuracies on 300W. (a) The percent of images with 68 landmark detection errors lower than 5%, 10%, and
20% inter-ocular distances, or greater than 40%, mean error rates (MER) and runtimes. Our FPN was tested using a GPU. On the CPU,
FPN runtime was 0.07 seconds. 3DDFA used the AFW collection for training. Code provided for 3DDFA [50] did not allow testing on
the GPU; in their paper, they claim GPU runtime to be 0.076 seconds. As AFW was included in our 300W test set, landmark detection
accuracy results for 3DDFA were excluded from this table. (b) Accumulative error curves.

tem [31]. These superior results are likely due to the better
alignment of the faces provided by our FPN.

5.2. Landmark detection accuracy

From 6DoF pose to facial landmarks. Given a 6DoF
head pose estimate, facial landmarks can then be estimated
and compared with existing landmark detection methods for
their accuracy on standard benchmarks. To obtain landmark
predictions, 3D reference coordinates of facial landmarks
are selected off line once on the same generic, 3D face
model used in [31]. Given a pose estimate, we convert it to
a projection matrix and project these 3D landmarks down to
the input image.

Recently, a similar process was proposed for accurate
landmark detection across large poses [50]. In their work,
an iterative method was used to simultaneously estimate a
3D face shape, including facial expression, and project its
landmarks down to the input image. Unlike them, our tests
use a single generic 3D face model, unmodiﬁed. By not iter-
ating over the face shape, our method is simpler and faster,
but of course, our predicted landmarks will not reﬂect dif-
ferent 3D shapes and facial expressions. We next evaluate
the effect this has on landmark detection accuracy.

Detection accuracy on the 300W benchmark. We evalu-
ate performance on the 300W data set [39], the most chal-
lenging benchmark of its kind [44], using 68 landmarks. We
note that we did not use the standard training sets used with
the 300W benchmark (e.g., the HELEN [26] and LFPW [5]
training sets with their manual annotations).
Instead we
trained FPN with the estimated landmarks, as explained in
Sec. 4.1. As a test set, we used the standard union con-
sisting of the LFPW test set (224 images), the HELEN test
set (330), AFW [52] (337), and IBUG [40] (135). These

1026 images, collectively, form the 300W test set. Note
that unlike others, we did not use AFW to train our method,
allowing us to use it for testing.

Fig. 6 (a) reports ﬁve measures of accuracy for the var-
ious methods tested: The percent of images with 68 land-
mark detection errors lower than 5%, 10%, and 20% inter-
ocular distances, and the mean error rate (MER), averaging
Eq. (1) over the images tested. Fig. 6 (b) additionally pro-
vides accumulative error curves for these methods.

Not surprisingly, without accounting for face shapes and
expressions, our predicted landmarks are not as accurate as
those predicted by methods which are inﬂuenced by these
factors. Some qualitative detection examples are provided
in Fig. 7 including a few errors larger than 10%. These
show that mistakes can often be attributed to FPN not mod-
eling facial expressions and shape. One way to improve
this would be to use a single-view 3D face shape estimation
method [15, 42] to better approximate landmark positions,
though we have not tested this here.

Detection runtime. In one tested measure FPN far outper-
forms its alternatives: The last column of Fig. 6 (a) reports
the mean, per-image runtime for landmark detection. Our
FPN is an order of magnitude faster than nearly all other
face alignment methods. Dlib [21] was slightly slower than
our FPN, but is far less accurate in the face recognition tests
(Table 2).

All methods were tested using an NVIDIA, GeForce
GTX TITAN X, 12GB RAM, and an Intel(R) Xeon(R) CPU
E5-2640 v3 @ 2.60GHz, 132GB RAM. The only exception
was 3DDFA [50], which required a Windows system and
was tested using an Intel(R) Core(TM) i7-4820K CPU @
3.70GHz (8 CPUs), 16GB RAM, running 8 Pro 64-bit.

Figure 7. Qualitative landmark detection examples. Landmarks detected in 300W [39] images by projecting an unmodiﬁed 3D face shape,
pose aligned using our FPN (red) vs. ground truth (green). The images marked by the red-margin are those which had large FPN errors
(> 10% inter-ocular distance). These appear perceptually reasonable, despite these errors. The mistakes in the red-framed example on the
third row was clearly a result of our FPN not representing expressions.

5.3. Discussion

Landmarks predicted using FPN in Sec. 5.2 were less
accurate than those estimated by other methods. How does
that agree with the better face recognition results obtained
with images aligned using FPN? As we mentioned in Sec. 3
better accuracy on a face landmark detection benchmark
reﬂects many things which are not necessarily important
when aligning faces for recognition. These include, in par-
ticular face shapes and expressions, the latter can actually
cause misalignments when computing face pose and warp-
ing the face accordingly. FPN, on the other hand, ignores
these factors, instead providing a 6DoF pose estimates at
breakneck speeds, directly from image intensities.

An important observation is that despite being trained
with labels generated by OpenFace [3], recognition results
on faces aligned with FPN are better than those aligned with
OpenFace. This can be explained in a number of ways:
First, FPN was trained on appearance variations introduced
by augmentation, which OpenFace was not necessarily de-
signed to handle. Second, poses estimated by FPN were
less corrupted by expressions and facial shapes, making the
warped images better aligned. Third, as was recently ar-
gued by others [42], CNNs are remarkably adapt at training

with label noise such as any errors in the poses predicted
by OpenFace for the ground truth labels. Finally, CNNs are
highly capable of domain shifts to new data, such as the ex-
tremely challenging views of the faces in IJB-A and IJB-B.

6. Conclusions

For many practical purposes, face alignment requires
only global, parametric 2D or 3D transformations. This is
often the case in state-of-the-art face recognition pipelines
and a wide variety of other face understanding tasks.
In
such circumstances, accurate facial landmark detection is
superﬂuous and its potential for introducing errors when-
ever facial expressions and shapes are not explicitly consid-
ered was never fully explored. In this paper we present an
alternative method for aligning faces: using a simple CNN,
uniquely trained to regress 6DoF face pose, directly from
image intensities. We show that by using a GPU, this leads
to staggering alignment speeds. Moreover, by comparing
alignment methods by considering bottom line performance
of a face recognition system, rather than landmark detec-
tion accuracy, we show that this simple method outperforms
state-of-the-art alignment techniques in the face recognition
accuracy it provides.

Acknowledgments

This research is based upon work supported in part by
the Ofﬁce of the Director of National Intelligence (ODNI),
Intelligence Advanced Research Projects Activity (IARPA),
via IARPA 2014-14071600011. The views and conclusions
contained herein are those of the authors and should not
be interpreted as necessarily representing the ofﬁcial poli-
cies or endorsements, either expressed or implied, of ODNI,
IARPA, or the U.S. Government. The U.S. Government is
authorized to reproduce and distribute reprints for Govern-
mental purpose notwithstanding any copyright annotation
thereon.

References

[1] A. Asthana, S. Zafeiriou, S. Cheng, and M. Pantic. Incre-
mental face alignment in the wild. In Proc. Conf. Comput.
Vision Pattern Recognition. IEEE, 2014. 2

[2] T. Baltrusaitis, P. Robinson, and L.-P. Morency. Constrained
local neural ﬁelds for robust facial landmark detection in the
In Proc. Conf. Comput. Vision Pattern Recognition
wild.
Workshops, pages 354–361. IEEE, 2013. 5, 7

[3] T. Baltruˇsaitis, P. Robinson, and L.-P. Morency. Openface:
an open source facial behavior analysis toolkit. In Applica-
tions of Computer Vision (WACV), 2016 IEEE Winter Con-
ference on, pages 1–10, 2016. 4, 5, 7, 8

[4] A. Bansal, B. Russell, and A. Gupta. Marr revisited:
In Proc.
2D-3D alignment via surface normal prediction.
Conf. Comput. Vision Pattern Recognition, pages 5965–
5974, 2016. 2

[5] P. N. Belhumeur, D. W. Jacobs, D. J. Kriegman, and N. Ku-
mar. Localizing parts of faces using a consensus of exem-
plars. Trans. Pattern Anal. Mach. Intell., 35(12):2930–2940,
2013. 1, 2, 7

[6] X. P. Burgos-Artizzu, P. Perona, and P. Doll´ar. Robust face
In Proc. Int. Conf.

landmark estimation under occlusion.
Comput. Vision, pages 1513–1520. IEEE, 2013. 5, 7

[7] X. Cao, Y. Wei, F. Wen, and J. Sun. Face alignment by ex-
plicit shape regression. Int. J. Comput. Vision, 107(2):177–
190, 2014. 2

[8] B.-C. Chen, C.-S. Chen, and W. H. Hsu. Cross-age reference
coding for age-invariant face recognition and retrieval.
In
European Conf. Comput. Vision, pages 768–783. Springer,
2014. 2

[9] N. Crosswhite, J. Byrne, C. Stauffer, O. Parkhi, Q. Cao, and
A. Zisserman. Template adaptation for face veriﬁcation and
identiﬁcation. In Int. Conf. on Automatic Face and Gesture
Recognition, pages 1–8. IEEE, 2017. 5, 6

[10] M. Dantone, J. Gall, G. Fanelli, and L. Van Gool. Real-time
facial feature detection using conditional regression forests.
In Proc. Conf. Comput. Vision Pattern Recognition, pages
2578–2585. IEEE, 2012. 3

[12] E. Eidinger, R. Enbar, and T. Hassner. Age and gender esti-
mation of unﬁltered faces. Trans. on Inform. Forensics and
Security, 9(12), 2014. 2, 3

[13] F. Gurpinar, H. Kaya, H. Dibeklioglu, and A. Salah. Ker-
nel elm and cnn based facial age estimation. In Proc. Conf.
Comput. Vision Pattern Recognition Workshops, pages 80–
86, 2016. 2
[14] T. Hassner.
Proc.
IEEE, 2013.
hassner/projects/poses. 2, 3

In
pages 3607–3614.
Available: www.openu.ac.il/home/

Viewing real-world faces in 3D.

Int. Conf. Comput. Vision,

[15] T. Hassner and R. Basri. Single view depth estimation from
examples. arXiv preprint arXiv:1304.3915, 2013. 2, 7
[16] T. Hassner, S. Harel, E. Paz, and R. Enbar. Effective face
frontalization in unconstrained images. In Proc. Conf. Com-
put. Vision Pattern Recognition, 2015. 2, 3

[17] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning
for image recognition. In Proc. Conf. Comput. Vision Pattern
Recognition, June 2016. 6

[18] G. B. Huang, V. Jain, and E. Learned-Miller. Unsupervised
joint alignment of complex images. In Proc. Int. Conf. Com-
put. Vision, pages 1–8. IEEE, 2007. 2, 3

[19] X. Huang, Q. He, X. Hong, G. Zhao, and M. Pietikainen.
Improved spatiotemporal local monogenic binary pattern for
emotion recognition in the wild. In Int. Conf. on Multimodal
Interaction, pages 514–520. ACM, 2014. 2

[20] A. Jourabloo and X. Liu. Large-pose face alignment via cnn-
based dense 3D model ﬁtting. In Proc. Conf. Comput. Vision
Pattern Recognition, 2016. 2

[21] D. E. King. Dlib-ml: A machine learning toolkit. J. Mach.
Learning Research, 10(Jul):1755–1758, 2009. 3, 5, 7
[22] B. F. Klare, B. Klein, E. Taborsky, A. Blanton, J. Cheney,
K. Allen, P. Grother, A. Mah, M. Burge, and A. K. Jain.
Pushing the frontiers of unconstrained face detection and
In Proc. Conf.
recognition: IARPA Janus Benchmark-A.
Comput. Vision Pattern Recognition, 2015. 2, 5

[23] M. K¨ostinger, P. Wohlhart, P. M. Roth, and H. Bischof. An-
notated facial landmarks in the wild: A large-scale, real-
world database for facial landmark localization. In Proc. Int.
Conf. Comput. Vision Workshops. IEEE, 2011. 2
[24] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

classiﬁcation with deep convolutional neural networks.
Neural Inform. Process. Syst., 2012. 4

Imagenet
In

[25] A. Kumar, A. Alavi, and R. Chellappa. KEPLER: keypoint
and pose estimation of unconstrained faces by learning ef-
ﬁcient H-CNN regressors. In Automatic Face and Gesture
Recognition, pages 258–265, May 2017. 2

[26] V. Le, J. Brandt, Z. Lin, L. Bourdev, and T. Huang. Inter-
active facial feature localization. European Conf. Comput.
Vision, pages 679–692, 2012. 1, 2, 7

[27] V. Lepetit, F. Moreno-Noguer, and P. Fua. Epnp: An accurate
o (n) solution to the pnp problem. International journal of
computer vision, 81(2):155, 2009. 3

[11] C. Ding, J. Choi, D. Tao, and L. S. Davis. Multi-directional
multi-level dual-cross patterns for robust face recognition.
Trans. Pattern Anal. Mach. Intell., 38(3):518–531, 2016. 2

[28] G. Levi and T. Hassner. Age and gender classiﬁcation us-
ing convolutional neural networks. In Proc. Conf. Comput.
Vision Pattern Recognition Workshops, June 2015. 2

[45] Y. Xiang, W. Kim, W. Chen, J. Ji, C. Choy, H. Su, R. Mot-
taghi, L. Guibas, and S. Savarese. Objectnet3D: A large scale
database for 3D object recognition. In European Conf. Com-
put. Vision, pages 160–176. Springer, 2016. 2

[46] Y. Xiang, R. Mottaghi, and S. Savarese. Beyond pascal: A
In Winter
benchmark for 3D object detection in the wild.
Conf. on App. of Comput. Vision, pages 75–82. IEEE, 2014.
2

[47] X. Xiong and F. De la Torre. Supervised descent method and
In Proc. Conf. Comput.

its applications to face alignment.
Vision Pattern Recognition. IEEE, 2013. 2, 3

[48] Z. Yang and R. Nevatia. A multi-scale cascade fully con-
volutional network face detector. In ICPR, pages 633–638,
2016. 4, 6

[49] A. Zadeh, T. Baltruˇsaitis, and L.-P. Morency. Deep con-
strained local models for facial landmark detection. arXiv
preprint arXiv:1611.08657, 2016. 3, 5, 6, 7

[50] X. Zhu, Z. Lei, X. Liu, H. Shi, and S. Li. Face alignment
across large poses: A 3D solution. In Proc. Conf. Comput.
Vision Pattern Recognition, Las Vegas, NV, June 2016. 2, 3,
5, 6, 7

[51] X. Zhu, Z. Lei, J. Yan, D. Yi, and S. Z. Li. High-ﬁdelity
pose and expression normalization for face recognition in the
In Proc. Conf. Comput. Vision Pattern Recognition,
wild.
pages 787–796, 2015. 2

[52] X. Zhu and D. Ramanan. Face detection, pose estimation,
and landmark localization in the wild. In Proc. Conf. Com-
put. Vision Pattern Recognition, pages 2879–2886. IEEE,
2012. 1, 2, 3, 7

[29] G. Levi and T. Hassner. Emotion recognition in the wild
via convolutional neural networks and mapped binary pat-
terns. In Int. Conf. on Multimodal Interaction, pages 503–
510. ACM, 2015. 2

[30] Z. Liu, P. Luo, X. Wang, and X. Tang. Deep learning face
In Proc. Int. Conf. Comput. Vision,

attributes in the wild.
2015. 6

[31] I. Masi, T. Hassner, A. T. Tran, and G. Medioni. Rapid syn-
thesis of massive face sets for improved face recognition. In
Int. Conf. on Automatic Face and Gesture Recognition, pages
604–611. IEEE, 2017. 2, 3, 5, 6, 7

[32] I. Masi, S. Rawls, G. Medioni, and P. Natarajan. Pose-aware
face recognition in the wild. In Proc. Conf. Comput. Vision
Pattern Recognition, pages 4838–4846, 2016. 4

[33] I. Masi, A. Tran, T. Hassner, J. T. Leksut, and G. Medioni.
Do We Really Need to Collect Millions of Faces for Effec-
tive Face Recognition? In European Conf. Comput. Vision,
2016. Available www.openu.ac.il/home/hassner/
projects/augmented_faces. 2, 5

[34] O. M. Parkhi, A. Vedaldi, and A. Zisserman. Deep face
recognition. In Proc. British Mach. Vision Conf., 2015. 4,
5

[35] P. Poirson, P. Ammirato, C.-Y. Fu, W. Liu, J. Kosecka, and
A. C. Berg. Fast single shot detection and pose estimation.
In Int. Conf. on 3D Vision, pages 676–684. IEEE, 2016. 2

[36] R. Ranjan, C. D. Castillo, and R. Chellappa. L2-constrained
arXiv

softmax loss for discriminative face veriﬁcation.
preprint arXiv:1703.09507, 2017. 5, 6

[37] S. Ren, X. Cao, Y. Wei, and J. Sun. Face alignment at 3000
fps via regressing local binary features. In Proc. Conf. Com-
put. Vision Pattern Recognition. IEEE, 2014. 2, 3

[38] E. Richardson, M. Sela, R. Or-El, and R. Kimmel. Learn-
ing detailed face reconstruction from a single image. arXiv
preprint arXiv:1611.05053, 2016. 2

[39] C. Sagonas, E. Antonakos, G. Tzimiropoulos, S. Zafeiriou,
and M. Pantic. 300 faces in-the-wild challenge: Database
and results. Image and Vision Computing, 2015. 2, 7, 8
[40] C. Sagonas, G. Tzimiropoulos, S. Zafeiriou, and M. Pantic.
300 faces in-the-wild challenge: The ﬁrst facial landmark
localization challenge. In Proc. Conf. Comput. Vision Pattern
Recognition Workshops, 2013. 1, 7

[41] H. Su, C. R. Qi, Y. Li, and L. J. Guibas. Render for CNN:
Viewpoint estimation in images using CNNs trained with
rendered 3D model views. In Proc. Int. Conf. Comput. Vi-
sion, pages 2686–2694, 2015. 2

[42] A. Tran, T. Hassner, I. Masi, and G. Medioni. Regressing
robust and discriminative 3D morphable models with a very
deep neural network. In Proc. Conf. Comput. Vision Pattern
Recognition, 2017. 7, 8

[43] C. Whitelam, E. Taborsky, A. Blanton, B. Maze, J. Adams,
T. Miller, N. Kalka, A. K. Jain, J. A. Duncan, K. Allen, et al.
Iarpa janus benchmark-b face dataset. In Proc. Conf. Com-
put. Vision Pattern Recognition Workshops, 2017. 2, 5, 6
[44] Y. Wu, T. Hassner, K. Kim, G. Medioni, and P. Natarajan.
Facial landmark detection with tweaked convolutional neural
networks. arXiv preprint arXiv:1511.04031, 2015. 7

FacePoseNet: Making a Case for Landmark-Free Face Alignment

Feng-Ju Chang1, Anh Tuan Tran1, Tal Hassner2,3, Iacopo Masi1, Ram Nevatia1, Gerard Medioni1
1 Institute for Robotics and Intelligent Systems, USC, CA, USA
2 Information Sciences Institute, USC, CA, USA
3 The Open University of Israel, Israel
{fengjuch,anhttran,iacopoma,nevatia,medioni}@usc.edu, hassner@isi.edu

7
1
0
2
 
g
u
A
 
1
3
 
 
]

V
C
.
s
c
[
 
 
2
v
7
1
5
7
0
.
8
0
7
1
:
v
i
X
r
a

Abstract

We show how a simple convolutional neural network
(CNN) can be trained to accurately and robustly regress 6
degrees of freedom (6DoF) 3D head pose, directly from im-
age intensities. We further explain how this FacePoseNet
(FPN) can be used to align faces in 2D and 3D as an alter-
native to explicit facial landmark detection for these tasks.
We claim that in many cases the standard means of measur-
ing landmark detector accuracy can be misleading when
comparing different face alignments. Instead, we compare
our FPN with existing methods by evaluating how they
affect face recognition accuracy on the IJB-A and IJB-B
benchmarks: using the same recognition pipeline, but vary-
ing the face alignment method. Our results show that (a)
better landmark detection accuracy measured on the 300W
benchmark does not necessarily imply better face recog-
nition accuracy.
(b) Our FPN provides superior 2D and
3D face alignment on both benchmarks. Finally, (c), FPN
aligns faces at a small fraction of the computational cost
of comparably accurate landmark detectors. For many pur-
poses, FPN is thus a far faster and far more accurate face
alignment method than using facial landmark detectors.

1. Introduction

Facial landmark detection is rarely, if ever, an application
in its own right. Instead, it is typically a means to an end:
It is one component out of many in pipelines designed for
other face understanding and processing tasks, often pro-
viding effective means for aligning face photos and mak-
ing them easier to process. Most facial landmark detectors,
however, are developed without measuring their impact on
these applications but rather using standard facial land-
mark detection benchmarks such as the popular AFW [52],
LFPW [5], HELEN [26], and IBUG [40]. These bench-
marks contain face images with manually labeled ground
truth landmarks. Better detection accuracy on these bench-
marks equals better prediction of these manual positions.

Figure 1. The problem with manually labeled ground truth fa-
cial landmarks. Images and annotations from the AFW [52] (left
two columns) and iBug [40] benchmarks. One of each pair shows
manually labeled ground truth landmarks; the other, a high-error
prediction of our FPN, which does not account for facial expres-
sion or 3D shape. Which is which?1 Clearly, detection accuracy,
as measured by standard benchmarks, does not necessarily reﬂect
the quality of the landmark detection.

This raises an important question: Does better approxima-
tion of such human labeled landmarks imply better face
alignment and consequently better face understanding?

Why would higher accuracy on landmark detection
benchmarks not imply better alignment? The many land-
mark detection benchmarks used by the community to mea-
sure detection accuracy typically offer 5, 49 or 68 land-
marks painstakingly labeled on hundreds or thousands of
unconstrained face images, reﬂecting wide viewpoint, res-
olution and noise variations. On low resolution images,
however, even expert human operators can ﬁnd it hard to
accurately pinpoint landmark positions. More importantly,
many landmark locations are not well deﬁned even in high

1

Imagesone,three,andﬁvearegroundtruth.

1

resolution (e.g., points along the jawline or behind occlu-
sions). Thus, improved landmark detection accuracy may
actually reﬂect better estimation of uncertain human labels
rather than better face alignment (Fig. 1).

An additional concern relates to how landmarks are used
for face alignment. Face alignment often implies using a
global 2D or 3D transformation to warp faces to ideal, ref-
erence frames: Detected landmarks are matched with their
corresponding landmarks in the reference coordinates and a
2D or 3D transformation is then computed by robust estima-
tion methods. To our knowledge, the effects landmark de-
tection noise, changing expressions or face shapes have on
these estimated transformations were never fully explored.
Responding to these concerns, we offer several contribu-
tions. (1) We propose comparing landmark detection meth-
ods by evaluating bottom line face recognition accuracy on
faces aligned with these methods.
(2) As an alternative
to existing facial landmark detectors, we further present a
robust and accurate, landmark-free method for face align-
ment: our deep FacePoseNet (FPN). We show it to excel at
global, 3D face alignment even under the most challenging
viewing conditions. Finally, (3), we test our FPN exten-
sively and report that better landmark detection accuracy
on the widely used 300W benchmark [39] does not imply
better alignment and recognition on the highly challeng-
ing IJB-A [22] and IJB-B benchmarks [43]. In particular,
recognition results on images aligned with our FPN surpass
those on images aligned with state-of-the-art detectors.

Some applications require landmark estimation. Our
FPN provides a more accurate and far faster face alignment
technique in the many cases where global alignment, rather
than speciﬁc landmark positions, is needed. To support our
claims, we make our code publicly available 1.

2. Related work

Applications of facial landmark detectors. Facial land-
mark detection is big business, as reﬂected by the numerous
citation to relevant papers, the many facial landmark detec-
tion benchmarks [5, 23, 26, 39, 52], and popular interna-
tional events dedicated to this problem. With all this effort,
a rigorous survey of the many applications of facial land-
marks is outside the scope of this paper. In lieu of such a
survey, and to get some idea of why this problem attracts so
much attention, we offer the following cursory study.

We consider two of the most widely cited face land-
mark detector papers of the last decade, the tree based ap-
proach [52] and supervised descent method [47]. At the
time of writing, based on Google Scholar, the latter accumu-
lated nearly a thousand citations and the former well over a
thousand. We found 23 application names appearing fre-
quently (more than ten times) in the titles of the papers that

1https://github.com/fengju514/Face-Pose-Net

cite these two and counted the number of times these appli-
cations were mentioned. The relative frequencies of these
applications are reported in Fig. 2.

Of course, this simple survey is by no means accurate:
the same term is counted twice if the paper using it in its
title cites both [52] and [47] and many paper titles do not
clearly state the application they describe (e.g., [14] de-
scribes a method for face alignment in 3D but does not men-
tion “alignment” in the title). Nevertheless, with around two
thousand papers included in this survey, the result is quite
clear: Alignment, face recognition and pose estimation –
also considered alignment – are overwhelmingly more pop-
ular than any other application. This, of course, excluding
other landmark detection papers.
What does it mean to align a face? The term alignment
almost always appears in the titles of papers which present
facial landmark detection methods [1, 7, 37] (and most oth-
ers) implying that the two terms are used interchangeabil-
ity. This reﬂects an interpretation of alignment as forming
correspondences between particular spatial locations in one
face image and another. A different interpretation of align-
ment, and the one used here, refers not only to establish-
ing these correspondences but also to warping the two face
images, thus making them easier to compare and match.
Face warping with estimated 2D (in-plane) or 3D transfor-
mations is well known to have a profound impact on the
performance of face recognition systems [16, 18].

Although sometimes alignments involve non-parametric
or part-based warps [14, 15], often, global 2D or 3D (para-
metric) transformation are all that is required for this pur-
pose. Such aligned faces are then further processed in
systems for face recognition [8, 11, 51], emotion recogni-
tion [19, 29], age and gender estimation [12, 13, 28], and
more. In fact, it was recently claimed that a global align-
ment is both more robust and far faster to warp than non-
parametric transformations [31, 33]. This paper focuses on
such global transformations, showing how they can be esti-
mated quickly and accurately using a deep neural network.

Deep pose estimation. This work describes a deep net-
work trained to estimate the 6DoF of 3D faces viewed in
single images. Deep learning is increasingly used for sim-
ilar purposes, though typically focusing on general object
classes [4, 35, 41]. Some recently addressed faces in par-
ticular, though their methods are designed to estimate 2D
landmarks along with 3D face shapes [20, 25, 50]. Unlike
our proposed pose estimation, they regress poses by using
iterative methods which involve computationally costly face
rendering. We regress 6DoF directly from image intensities
without such rendering steps.

In all these cases, absence of training data was cited as
a major obstacle for training effective models. In response,
some turned to larger 3D object data sets [46, 45] or us-
ing synthetically generated examples [38]. We propose a

A second potential problem lies in the error measure it-
self: Normalizing detection errors by inter-ocular distances
biases against images of faces appearing at non-frontal
views. When faces are near proﬁle, perspective projection
of the 3D face onto the image plane shrinks the distances
between the eyes thereby naturally inﬂating the errors com-
puted for such images.

Landmark detection speed. Some facial landmark detec-
tion methods emphasize impressive speeds [21, 37]. Mea-
sured on standard landmark detection benchmarks, how-
ever, these methods do not necessarily claim state-of-the-art
accuracy, falling behind more sophisticated, yet far slower
detectors [49]. Moreover, aside from [50], no existing
landmark detector is designed to take advantage of GPU
hardware, a standard feature in commodity computer sys-
tems and most, including [50], apply iterative optimizations
which may be hard to convert to parallel processing.

Effects of facial expression and shape on alignment. It
was recently shown that 3D alignment and warping of faces
to frontal viewpoints (i.e. frontalization) is effective regard-
less of the precise 3D face shape used for this purpose [16].
Facial expressions and 3D shapes in particular, appear to
have little impact on the warped result as evident by the im-
proved face recognition accuracy reported by that method.
Moreover, it was recently demonstrated that by using such
a generic 3D face shape, rendering faces from new view-
points can be accelerated to the same speed as simple 2D
image warping [31].

Interestingly, they and many others used facial land-
mark detectors to compute parametric transformations –
projection matrix [16] or 2D afﬁne or similarity trans-
forms [12, 18] – by applying robust estimators to corre-
sponding detected facial landmarks [14, 27]. Variations in
landmark locations due to expressions and face shapes es-
sentially contribute noise to this estimation process. The
effects these variations have on the quality of the alignment
were, as far as we know, never truly studied.

4. Deep, direct head pose regression

Rather than align faces using landmark detection, we re-
fer to alignment as a global, 6DoF 3D face pose, and pro-
pose to infer it directly from image intensities, using a sim-
ple deep network architecture. We next describe the net-
work and the novel method used to train it.

4.1. Head pose representation

We deﬁne face alignment as the 3D head pose h, ex-
pressed using 6DoF: three for rotations, r = (rx, ry, rz)T ,
and three for translations, t = (tx, ty, tz)T :

h = (rx, ry, rz, tx, ty, tz)T

(2)

Figure 2. Applications of facial landmarks. Illustrating the fre-
quency of various task and application names in paper titles citing
two of the most popular landmark detectors [52] and [47].

far simpler alternative and show it to result in robust and
accurate face alignment.

3. A critique of facial landmark detection

Before using an existing state-of-the-art facial landmark
detector in a face processing system, the following points
should be considered.

Landmark detection accuracy measures. Facial land-
mark detection accuracy is typically measured by consider-
ing the distances between estimated landmarks and ground
truth (reference) landmarks, normalized by the reference
inter-ocular distance of the face [10]:

e(L, ˆL) =

1
m(cid:107)ˆpl − ˆpr(cid:107)2

m
(cid:88)

i=1

(cid:107)pi − ˆpi(cid:107)2,

(1)

Here, L = {pi} is the set of m 2D facial landmark coordi-
nates, ˆL = { ˆpi} their ground truth locations, and ˆpl, ˆpr the
reference left and right eye outer corner positions. These
errors are then translated to a number of standard quanti-
ties, including the mean error rate (MER), the percentage
of landmarks detected under certain error thresholds (e.g.,
below 5% or 10% error rates) or the area under the accumu-
lative error curve (AUC).

There are two key problems with this method of eval-
uating landmark errors. First, the ground truth compared
against is manually speciﬁed, often by mechanical turk
workers. These manual annotations can be noisy, they are
ill-deﬁned when images are low resolution, the landmarks
are occluded (in case of large out-of-plane head rotations,
facial hair and other obstructions), or located in featureless
facial regions (e.g., along the jawline). Accurate facial land-
mark detection, as measured on these benchmarks, thus im-
plies better matching human labels but not necessarily bet-
ter detection. These problems are demonstrated in Fig. 1.

Figure 3. Augmenting appearances of images from the VGG face dataset [34]. After detecting the face bounding box and landmarks we
augment its appearance by applying a number of simple planar transformations, including translation, scaling, rotation, and ﬂipping. The
same transformations are applied to the landmarks, thereby producing example landmarks for images which may be too challenging for
existing landmark detectors to process.

where (rx, ry, rz) are represented as Euler angles (pitch,
yaw, and roll). Given m 2D facial landmark coordinates
on an input image, p2×m, and their corresponding, refer-
ence 3D coordinates, P3×m – selected on a ﬁxed, generic
3D face model – we can obtain a 3D to 2D projection of the
3D landmarks onto the 2D image by solving the following
equation for the standard pinhole model:

[p, 1]T = A[R, t][P, 1]T ,

(3)

where A and R are the camera matrix and rotation matrix
respectively and 1 is a constant vector of 1. We then ex-
tract a rotation vector r = (rx, ry, rz)T from R using the
Rodrigues rotation formula:

R = cos θI+(1−cos θ)rrT +sin θ





0
rz
−ry

−rz
0
rx



 ,

ry
−rx
0

where we deﬁne θ = ||r||2.
Obtaining enough training examples. Although our net-
work architecture is not very deep compared to deep net-
works used today for other tasks, training it still requires
large quantities of labeled training data. We found the num-
bers of facial landmark annotated faces in standard data sets
to be too small for this purpose. A key problem is therefore
obtaining a large enough training set.

We produce our training set by synthesizing 6D, ground
truth pose labels by running an existing facial landmark de-
tector [3] on a large image set: the 2.6 million images in
the VGG face dataset [34]. The detected landmarks were
then used to compute the 6DoF labels for the images in this
set. A potential danger in using an existing method to pro-
duce our training labels, is that our CNN will not improve
beyond the accuracy of its training labels. As we show in
Sec. 5, this is not necessarily the case.

To further improve the robustness of our CNN, we ap-
ply a number of face augmentation techniques to the im-
ages in the VGG face set, substantially enriching the appear-
ance variations it provides. Fig. 3 illustrates this augmen-
tation process. Speciﬁcally, following face detection [48]

Table 1. Summary of augmentation transformation parameters
used to train our FPN. Where U(a, b) samples from a uniform dis-
tribution ranging from a to b and N (µ, σ2) samples from a normal
distribution with mean µ and variance σ2. width and height are
the face detection bounding box dimensions.

Transformation
Horizontal translation
Vertical translation
Scaling
Rotation (degrees)

Range
U(−0.1, 0.1) × width
U(−0.1, 0.1) × height
U(0.75, 1.25)
30 × N (0, 1)

and landmark detection [3], we transform detected bound-
ing boxes and their detected facial landmarks using a num-
ber of simple in-plane transformations. The parameters for
these transformations are selected randomly from ﬁxed dis-
tributions (Table. 1). The transformed faces are then used
for training, along with their horizontally mirrored versions,
to provide yaw rotation invariance. Ground truth labels are,
of course, computed using the transformed landmarks.

Some example augmented faces are provided in Fig. 4.
Note that augmented images would often be too challenging
for existing landmark detectors, due to extreme rotations
or scaling. This, of course, does not affect the accuracy
of the ground truth labels which were obtained from the
original images. It does, however, force our CNN to learn
to estimate poses even on such challenging images.

FPN training. For our FPN we use an AlexNet architec-
ture [24] with its initialized weights provided by [32]. The
only difference is that here the output regresses 6D ﬂoat-
ing point values rather than predicts one-hot encoded, multi
class labels. Note that during training each dimension of the
head pose labels is normalized by the corresponding mean
and standard deviation of the training set, compensating for
the large value differences among dimensions. The same
normalization parameters are used at test time.

2D and 3D face alignment with FPN. Given a test im-
age, it is processed by applying the same face detector [48],

Figure 4. Example augmented training images. Example images from the VGG face data set [34] following data augmentation. Each
triplet shows the original detected bounding box (left) and its augmented versions (mirrored across the vertical axis). Both ﬂipped versions
were used for training FPN. Note that in some cases, detecting landmarks would be highly challenging on the augmented face, due to severe
rotations and scalings not normally handled by existing methods. Our FPN is trained with the original landmark positions, transformed to
the augmented image coordinate frame.

cropping the face and scaling it to the dimension of the net-
work’s input layer. The 6D network output is then converted
to a projection matrix. Speciﬁcally, the projection matrix is
produced by the camera matrix A, rotation matrix R, and
the translation vector t in Eq. (3). With this projection ma-
trix we can render new views of the face, aligning it across
3D views as was recently proposed by others [33, 31].

For 2D alignment, we compute the 2D similarity trans-
form to warp the 2D projected landmarks to pre-deﬁned
landmark locations. With frontal images (absolute yaw an-
gle ≤ 30◦), we use the eye centers, the nose tip, and the
mouth corners for alignment. With proﬁle images (absolute
yaw angle > 30◦), however, only the visible eye center and
the nose tip are used.

5. Results

We provide comparisons of our FPN with the follow-
ing widely used, state-of-the-art, facial landmark detection
methods: Dlib [21], CLNF [2], OpenFace [3], DCLM [49],
RCPR [6], and 3DDFA [50] evaluating them for their effects
on face recognition vs. their landmark detection accuracy.

5.1. Effect of alignment on recognition

Sec. 3 discusses the various potential problems of com-
paring face alignment methods by measuring their landmark
detection accuracy. As an alternative, we propose compar-
ing methods for face alignment and landmark detection by
evaluating their effect on the bottom line accuracy of a face
processing pipeline. Since face recognition is arguably one
of the most popular applications for face alignment, we use
recognition accuracy as a performance measure. To our
knowledge, this is the ﬁrst time alignment methods are com-
pared based on their effect on recognition accuracy.

Speciﬁcally, we use two of the most recent benchmarks
for face recognition: IARPA Janus Benchmark A [22] and
B [43] (IJB-A and IJB-B). Importantly, these benchmarks

Table 2. Veriﬁcation and identiﬁcation on IJB-A and IJB-B, com-
paring landmark detection based face alignment methods. Three
baseline IJB-A results are also provided as reference at the top of
the table. ∗ Numbers estimated from the ROC and CMC in [43].

Method ↓
Eval. →

TAR@FAR

Identiﬁcation Rate (%)

.01% 0.1% 1.0% Rank-1 Rank-5 Rank-10 Rank-20

Crosswhite et al. [9]
Ranjan et al. [36]
Masi et al. [31]
RCPR [6]
Dlib [21]
CLNF [2]
OpenFace [3]
DCLM [49]
3DDFA [50]
Our FPN

GOTs [43]∗
VGG face [43]∗
RCPR [6]
Dlib [21]
CLNF [2]
OpenFace [3]
DCLM [49]
3DDFA [50]
Our FPN

–
94.3
75.0
75.4
80.4
75.1
68.9
73.8
82.8
85.2

IJB-A [22]
93.9
97.0
88.8
83.5
86.8
82.9
80.6
83.7
89.0
90.1
IJB-B [43]

33.0
72.0
83.8
88.2
85.2
71.6
81.0
89.1
91.6

60.0
86.0
93.3
94.8
93.4
87.0
92.0
95.6
96.5

92.8
97.3
92.5
86.6
89.2
86.3
84.3
86.3
90.3
91.4

42.0
78.0
83.6
88.0
84.5
74.3
81.8
89.0
91.1

–
90.9
56.4
64.9
70.5
68.9
58.7
64.5
74.8
77.5

16.0
55.0
71.2
78.1
74.1
54.8
67.6
78.5
83.2

–
–
96.6
90.9
91.9
90.5
89.8
90.7
92.8
93.0

57.0
86.0
90.9
93.2
90.9
84.1
89.7
94.1
95.3

98.6
98.8
97.4
92.2
93.0
91.9
91.4
92.2
93.5
93.8

62.0
89.0
93.2
94.9
93.0
87.8
92.0
95.5
96.5

–
–
98.0
93.7
94.2
93.3
93.2
93.7
94.4
94.8

68.0
92.0
95.0
96.3
94.8
90.9
94.1
96.9
97.5

were designed with the speciﬁc intention of elevating the
difﬁculty of face recognition. This heightened challenge is
reﬂected by, among other factors, an unprecedented amount
of extreme out of plane rotated faces including many ap-
pearing in near-proﬁle views [33]. As a consequence, these
two benchmarks not only push the limits of face recogni-
tion systems, but also the alignment methods used by these
systems, possibly more so than the faces in standard facial
landmark detection benchmarks.

Face recognition pipeline. We employ a system similar
to the one recently proposed by [31, 33], building on their
publicly available ResFace101 model and related code. We

(a) ROC IJB-A

(b) CMC IJB-A

Figure 5. Veriﬁcation and identiﬁcation results on IJB-A and IJB-B. ROC and CMC curves accompanying the results reported in Table 2.

(c) ROC IJB-B

(d) CMC IJB-B

chose this system, as it explicitly aligns faces to multiple
viewpoints, including rendering novel views. These steps
are highly dependent on the quality of alignment and so its
recognition accuracy should reﬂect alignment accuracy. In
practice, we used their 2D (similarity transform) and 3D
(new view rendering) code directly, changing how the trans-
formations are computed: our tests compare different land-
mark detectors used to recover the 6DoF head pose required
by their warping and rendering method, with the 6DoF re-
gressed using our FPN.

Their system uses a single Convolutional Neural Net-
work (CNN), a ResNet-101 architecture [17], trained on
both real face images and synthetic, rendered views. We
ﬁne tune the ResFace101 CNN using L2-constrained Soft-
max Loss [36] instead of the original softmax used by Masi
et al. for their publicly released model. This ﬁne tuning is
performed using the MS-Celeb face set [30] as an example
set. Aside from this change, we use the same recognition
pipeline from [31] and we refer to that paper for details.

Bounding box detection. We emphasize that an identical
pipeline was used with the different alignment methods; dif-
ferent results vary only in the method used to estimate fa-
cial pose. The only other difference between recognition
pipelines was in the facial bounding box detector.

Facial landmark detectors are sensitive to the face detec-
tor they are used with. We therefore report results obtained
when running landmark detectors with the best bounding

boxes we were able to determine. Speciﬁcally, FPN was
applied to the bounding boxes returned by the detector of
Yang and Nevatia [48], following expansion of its dimen-
sions by 25%. Most detectors performed best when applied
using the same face detector, without the 25% increase. Fi-
nally, 3DDFA [50] was tested with the same face detector
followed by the face box expansion code provided by its
authors.

Face veriﬁcation and identiﬁcation results. Face veriﬁ-
cation and identiﬁcation results on both IJB-A and IJB-B
are provided in Table 2. We report multiple recognition
metrics for both veriﬁcation and identiﬁcation: For veri-
ﬁcation, these measure the recall (True Acceptance Rate)
at three cut-off points of the False Alarm Rate (TAR-
{1%,0.1%,0.01%}). For identiﬁcation we provide recogni-
tion rates at four ranks from the CMC (Cumulative Match-
ing Characteristic). The overall performances in terms of
ROC and CMC curves are shown in Fig. 5. The table
also provides, as reference, three state-of-the-art IJB-A re-
sults [9, 31, 36] and baseline results from [43] for IJB-B
(to our knowledge, we are the ﬁrst to report veriﬁcation and
identiﬁcation accuracies on IJB-B).

Faces aligned with our FPN offer higher recognition
rates, even compared to the most recent, state-of-the-art fa-
In addition, our
cial landmark detection method of [49].
veriﬁcation scores on IJB-A outperform the scores reported
for the system used here as the basis for our recognition sys-

Method
RCPR [6]
Dlib [21]
CLNF [2]
OpenFace [3]
DCLM [49]
3DDFA [50]
Our FPN

≤ 5% ≤ 10% ≤ 20% ≥ 40% MER Sec./im.
44.44 % 66.96 % 77.39 % 9.55 % 0.1386
60.03 % 82.65 % 90.94 % 2.83 % 0.0795
20.86 % 65.11 % 87.62 % 2.63 % 0.1106
54.39 % 86.74 % 95.42 % 1.27 % 0.0702
64.91 % 91.91 % 96.00 % 1.17 % 0.0611
N/A
1.75 % 65.40 % 93.86 % 0.97 % 0.1043

0.19
0.009
0.38
0.31
15.83
0.6
0.005

N/A

N/A

N/A

N/A

(a) Quantitative results

(b) Acumulative error curves

Figure 6. 68 point detection accuracies on 300W. (a) The percent of images with 68 landmark detection errors lower than 5%, 10%, and
20% inter-ocular distances, or greater than 40%, mean error rates (MER) and runtimes. Our FPN was tested using a GPU. On the CPU,
FPN runtime was 0.07 seconds. 3DDFA used the AFW collection for training. Code provided for 3DDFA [50] did not allow testing on
the GPU; in their paper, they claim GPU runtime to be 0.076 seconds. As AFW was included in our 300W test set, landmark detection
accuracy results for 3DDFA were excluded from this table. (b) Accumulative error curves.

tem [31]. These superior results are likely due to the better
alignment of the faces provided by our FPN.

5.2. Landmark detection accuracy

From 6DoF pose to facial landmarks. Given a 6DoF
head pose estimate, facial landmarks can then be estimated
and compared with existing landmark detection methods for
their accuracy on standard benchmarks. To obtain landmark
predictions, 3D reference coordinates of facial landmarks
are selected off line once on the same generic, 3D face
model used in [31]. Given a pose estimate, we convert it to
a projection matrix and project these 3D landmarks down to
the input image.

Recently, a similar process was proposed for accurate
landmark detection across large poses [50]. In their work,
an iterative method was used to simultaneously estimate a
3D face shape, including facial expression, and project its
landmarks down to the input image. Unlike them, our tests
use a single generic 3D face model, unmodiﬁed. By not iter-
ating over the face shape, our method is simpler and faster,
but of course, our predicted landmarks will not reﬂect dif-
ferent 3D shapes and facial expressions. We next evaluate
the effect this has on landmark detection accuracy.

Detection accuracy on the 300W benchmark. We evalu-
ate performance on the 300W data set [39], the most chal-
lenging benchmark of its kind [44], using 68 landmarks. We
note that we did not use the standard training sets used with
the 300W benchmark (e.g., the HELEN [26] and LFPW [5]
training sets with their manual annotations).
Instead we
trained FPN with the estimated landmarks, as explained in
Sec. 4.1. As a test set, we used the standard union con-
sisting of the LFPW test set (224 images), the HELEN test
set (330), AFW [52] (337), and IBUG [40] (135). These

1026 images, collectively, form the 300W test set. Note
that unlike others, we did not use AFW to train our method,
allowing us to use it for testing.

Fig. 6 (a) reports ﬁve measures of accuracy for the var-
ious methods tested: The percent of images with 68 land-
mark detection errors lower than 5%, 10%, and 20% inter-
ocular distances, and the mean error rate (MER), averaging
Eq. (1) over the images tested. Fig. 6 (b) additionally pro-
vides accumulative error curves for these methods.

Not surprisingly, without accounting for face shapes and
expressions, our predicted landmarks are not as accurate as
those predicted by methods which are inﬂuenced by these
factors. Some qualitative detection examples are provided
in Fig. 7 including a few errors larger than 10%. These
show that mistakes can often be attributed to FPN not mod-
eling facial expressions and shape. One way to improve
this would be to use a single-view 3D face shape estimation
method [15, 42] to better approximate landmark positions,
though we have not tested this here.

Detection runtime. In one tested measure FPN far outper-
forms its alternatives: The last column of Fig. 6 (a) reports
the mean, per-image runtime for landmark detection. Our
FPN is an order of magnitude faster than nearly all other
face alignment methods. Dlib [21] was slightly slower than
our FPN, but is far less accurate in the face recognition tests
(Table 2).

All methods were tested using an NVIDIA, GeForce
GTX TITAN X, 12GB RAM, and an Intel(R) Xeon(R) CPU
E5-2640 v3 @ 2.60GHz, 132GB RAM. The only exception
was 3DDFA [50], which required a Windows system and
was tested using an Intel(R) Core(TM) i7-4820K CPU @
3.70GHz (8 CPUs), 16GB RAM, running 8 Pro 64-bit.

Figure 7. Qualitative landmark detection examples. Landmarks detected in 300W [39] images by projecting an unmodiﬁed 3D face shape,
pose aligned using our FPN (red) vs. ground truth (green). The images marked by the red-margin are those which had large FPN errors
(> 10% inter-ocular distance). These appear perceptually reasonable, despite these errors. The mistakes in the red-framed example on the
third row was clearly a result of our FPN not representing expressions.

5.3. Discussion

Landmarks predicted using FPN in Sec. 5.2 were less
accurate than those estimated by other methods. How does
that agree with the better face recognition results obtained
with images aligned using FPN? As we mentioned in Sec. 3
better accuracy on a face landmark detection benchmark
reﬂects many things which are not necessarily important
when aligning faces for recognition. These include, in par-
ticular face shapes and expressions, the latter can actually
cause misalignments when computing face pose and warp-
ing the face accordingly. FPN, on the other hand, ignores
these factors, instead providing a 6DoF pose estimates at
breakneck speeds, directly from image intensities.

An important observation is that despite being trained
with labels generated by OpenFace [3], recognition results
on faces aligned with FPN are better than those aligned with
OpenFace. This can be explained in a number of ways:
First, FPN was trained on appearance variations introduced
by augmentation, which OpenFace was not necessarily de-
signed to handle. Second, poses estimated by FPN were
less corrupted by expressions and facial shapes, making the
warped images better aligned. Third, as was recently ar-
gued by others [42], CNNs are remarkably adapt at training

with label noise such as any errors in the poses predicted
by OpenFace for the ground truth labels. Finally, CNNs are
highly capable of domain shifts to new data, such as the ex-
tremely challenging views of the faces in IJB-A and IJB-B.

6. Conclusions

For many practical purposes, face alignment requires
only global, parametric 2D or 3D transformations. This is
often the case in state-of-the-art face recognition pipelines
and a wide variety of other face understanding tasks.
In
such circumstances, accurate facial landmark detection is
superﬂuous and its potential for introducing errors when-
ever facial expressions and shapes are not explicitly consid-
ered was never fully explored. In this paper we present an
alternative method for aligning faces: using a simple CNN,
uniquely trained to regress 6DoF face pose, directly from
image intensities. We show that by using a GPU, this leads
to staggering alignment speeds. Moreover, by comparing
alignment methods by considering bottom line performance
of a face recognition system, rather than landmark detec-
tion accuracy, we show that this simple method outperforms
state-of-the-art alignment techniques in the face recognition
accuracy it provides.

Acknowledgments

This research is based upon work supported in part by
the Ofﬁce of the Director of National Intelligence (ODNI),
Intelligence Advanced Research Projects Activity (IARPA),
via IARPA 2014-14071600011. The views and conclusions
contained herein are those of the authors and should not
be interpreted as necessarily representing the ofﬁcial poli-
cies or endorsements, either expressed or implied, of ODNI,
IARPA, or the U.S. Government. The U.S. Government is
authorized to reproduce and distribute reprints for Govern-
mental purpose notwithstanding any copyright annotation
thereon.

References

[1] A. Asthana, S. Zafeiriou, S. Cheng, and M. Pantic. Incre-
mental face alignment in the wild. In Proc. Conf. Comput.
Vision Pattern Recognition. IEEE, 2014. 2

[2] T. Baltrusaitis, P. Robinson, and L.-P. Morency. Constrained
local neural ﬁelds for robust facial landmark detection in the
In Proc. Conf. Comput. Vision Pattern Recognition
wild.
Workshops, pages 354–361. IEEE, 2013. 5, 7

[3] T. Baltruˇsaitis, P. Robinson, and L.-P. Morency. Openface:
an open source facial behavior analysis toolkit. In Applica-
tions of Computer Vision (WACV), 2016 IEEE Winter Con-
ference on, pages 1–10, 2016. 4, 5, 7, 8

[4] A. Bansal, B. Russell, and A. Gupta. Marr revisited:
In Proc.
2D-3D alignment via surface normal prediction.
Conf. Comput. Vision Pattern Recognition, pages 5965–
5974, 2016. 2

[5] P. N. Belhumeur, D. W. Jacobs, D. J. Kriegman, and N. Ku-
mar. Localizing parts of faces using a consensus of exem-
plars. Trans. Pattern Anal. Mach. Intell., 35(12):2930–2940,
2013. 1, 2, 7

[6] X. P. Burgos-Artizzu, P. Perona, and P. Doll´ar. Robust face
In Proc. Int. Conf.

landmark estimation under occlusion.
Comput. Vision, pages 1513–1520. IEEE, 2013. 5, 7

[7] X. Cao, Y. Wei, F. Wen, and J. Sun. Face alignment by ex-
plicit shape regression. Int. J. Comput. Vision, 107(2):177–
190, 2014. 2

[8] B.-C. Chen, C.-S. Chen, and W. H. Hsu. Cross-age reference
coding for age-invariant face recognition and retrieval.
In
European Conf. Comput. Vision, pages 768–783. Springer,
2014. 2

[9] N. Crosswhite, J. Byrne, C. Stauffer, O. Parkhi, Q. Cao, and
A. Zisserman. Template adaptation for face veriﬁcation and
identiﬁcation. In Int. Conf. on Automatic Face and Gesture
Recognition, pages 1–8. IEEE, 2017. 5, 6

[10] M. Dantone, J. Gall, G. Fanelli, and L. Van Gool. Real-time
facial feature detection using conditional regression forests.
In Proc. Conf. Comput. Vision Pattern Recognition, pages
2578–2585. IEEE, 2012. 3

[12] E. Eidinger, R. Enbar, and T. Hassner. Age and gender esti-
mation of unﬁltered faces. Trans. on Inform. Forensics and
Security, 9(12), 2014. 2, 3

[13] F. Gurpinar, H. Kaya, H. Dibeklioglu, and A. Salah. Ker-
nel elm and cnn based facial age estimation. In Proc. Conf.
Comput. Vision Pattern Recognition Workshops, pages 80–
86, 2016. 2
[14] T. Hassner.
Proc.
IEEE, 2013.
hassner/projects/poses. 2, 3

In
pages 3607–3614.
Available: www.openu.ac.il/home/

Viewing real-world faces in 3D.

Int. Conf. Comput. Vision,

[15] T. Hassner and R. Basri. Single view depth estimation from
examples. arXiv preprint arXiv:1304.3915, 2013. 2, 7
[16] T. Hassner, S. Harel, E. Paz, and R. Enbar. Effective face
frontalization in unconstrained images. In Proc. Conf. Com-
put. Vision Pattern Recognition, 2015. 2, 3

[17] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning
for image recognition. In Proc. Conf. Comput. Vision Pattern
Recognition, June 2016. 6

[18] G. B. Huang, V. Jain, and E. Learned-Miller. Unsupervised
joint alignment of complex images. In Proc. Int. Conf. Com-
put. Vision, pages 1–8. IEEE, 2007. 2, 3

[19] X. Huang, Q. He, X. Hong, G. Zhao, and M. Pietikainen.
Improved spatiotemporal local monogenic binary pattern for
emotion recognition in the wild. In Int. Conf. on Multimodal
Interaction, pages 514–520. ACM, 2014. 2

[20] A. Jourabloo and X. Liu. Large-pose face alignment via cnn-
based dense 3D model ﬁtting. In Proc. Conf. Comput. Vision
Pattern Recognition, 2016. 2

[21] D. E. King. Dlib-ml: A machine learning toolkit. J. Mach.
Learning Research, 10(Jul):1755–1758, 2009. 3, 5, 7
[22] B. F. Klare, B. Klein, E. Taborsky, A. Blanton, J. Cheney,
K. Allen, P. Grother, A. Mah, M. Burge, and A. K. Jain.
Pushing the frontiers of unconstrained face detection and
In Proc. Conf.
recognition: IARPA Janus Benchmark-A.
Comput. Vision Pattern Recognition, 2015. 2, 5

[23] M. K¨ostinger, P. Wohlhart, P. M. Roth, and H. Bischof. An-
notated facial landmarks in the wild: A large-scale, real-
world database for facial landmark localization. In Proc. Int.
Conf. Comput. Vision Workshops. IEEE, 2011. 2
[24] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

classiﬁcation with deep convolutional neural networks.
Neural Inform. Process. Syst., 2012. 4

Imagenet
In

[25] A. Kumar, A. Alavi, and R. Chellappa. KEPLER: keypoint
and pose estimation of unconstrained faces by learning ef-
ﬁcient H-CNN regressors. In Automatic Face and Gesture
Recognition, pages 258–265, May 2017. 2

[26] V. Le, J. Brandt, Z. Lin, L. Bourdev, and T. Huang. Inter-
active facial feature localization. European Conf. Comput.
Vision, pages 679–692, 2012. 1, 2, 7

[27] V. Lepetit, F. Moreno-Noguer, and P. Fua. Epnp: An accurate
o (n) solution to the pnp problem. International journal of
computer vision, 81(2):155, 2009. 3

[11] C. Ding, J. Choi, D. Tao, and L. S. Davis. Multi-directional
multi-level dual-cross patterns for robust face recognition.
Trans. Pattern Anal. Mach. Intell., 38(3):518–531, 2016. 2

[28] G. Levi and T. Hassner. Age and gender classiﬁcation us-
ing convolutional neural networks. In Proc. Conf. Comput.
Vision Pattern Recognition Workshops, June 2015. 2

[45] Y. Xiang, W. Kim, W. Chen, J. Ji, C. Choy, H. Su, R. Mot-
taghi, L. Guibas, and S. Savarese. Objectnet3D: A large scale
database for 3D object recognition. In European Conf. Com-
put. Vision, pages 160–176. Springer, 2016. 2

[46] Y. Xiang, R. Mottaghi, and S. Savarese. Beyond pascal: A
In Winter
benchmark for 3D object detection in the wild.
Conf. on App. of Comput. Vision, pages 75–82. IEEE, 2014.
2

[47] X. Xiong and F. De la Torre. Supervised descent method and
In Proc. Conf. Comput.

its applications to face alignment.
Vision Pattern Recognition. IEEE, 2013. 2, 3

[48] Z. Yang and R. Nevatia. A multi-scale cascade fully con-
volutional network face detector. In ICPR, pages 633–638,
2016. 4, 6

[49] A. Zadeh, T. Baltruˇsaitis, and L.-P. Morency. Deep con-
strained local models for facial landmark detection. arXiv
preprint arXiv:1611.08657, 2016. 3, 5, 6, 7

[50] X. Zhu, Z. Lei, X. Liu, H. Shi, and S. Li. Face alignment
across large poses: A 3D solution. In Proc. Conf. Comput.
Vision Pattern Recognition, Las Vegas, NV, June 2016. 2, 3,
5, 6, 7

[51] X. Zhu, Z. Lei, J. Yan, D. Yi, and S. Z. Li. High-ﬁdelity
pose and expression normalization for face recognition in the
In Proc. Conf. Comput. Vision Pattern Recognition,
wild.
pages 787–796, 2015. 2

[52] X. Zhu and D. Ramanan. Face detection, pose estimation,
and landmark localization in the wild. In Proc. Conf. Com-
put. Vision Pattern Recognition, pages 2879–2886. IEEE,
2012. 1, 2, 3, 7

[29] G. Levi and T. Hassner. Emotion recognition in the wild
via convolutional neural networks and mapped binary pat-
terns. In Int. Conf. on Multimodal Interaction, pages 503–
510. ACM, 2015. 2

[30] Z. Liu, P. Luo, X. Wang, and X. Tang. Deep learning face
In Proc. Int. Conf. Comput. Vision,

attributes in the wild.
2015. 6

[31] I. Masi, T. Hassner, A. T. Tran, and G. Medioni. Rapid syn-
thesis of massive face sets for improved face recognition. In
Int. Conf. on Automatic Face and Gesture Recognition, pages
604–611. IEEE, 2017. 2, 3, 5, 6, 7

[32] I. Masi, S. Rawls, G. Medioni, and P. Natarajan. Pose-aware
face recognition in the wild. In Proc. Conf. Comput. Vision
Pattern Recognition, pages 4838–4846, 2016. 4

[33] I. Masi, A. Tran, T. Hassner, J. T. Leksut, and G. Medioni.
Do We Really Need to Collect Millions of Faces for Effec-
tive Face Recognition? In European Conf. Comput. Vision,
2016. Available www.openu.ac.il/home/hassner/
projects/augmented_faces. 2, 5

[34] O. M. Parkhi, A. Vedaldi, and A. Zisserman. Deep face
recognition. In Proc. British Mach. Vision Conf., 2015. 4,
5

[35] P. Poirson, P. Ammirato, C.-Y. Fu, W. Liu, J. Kosecka, and
A. C. Berg. Fast single shot detection and pose estimation.
In Int. Conf. on 3D Vision, pages 676–684. IEEE, 2016. 2

[36] R. Ranjan, C. D. Castillo, and R. Chellappa. L2-constrained
arXiv

softmax loss for discriminative face veriﬁcation.
preprint arXiv:1703.09507, 2017. 5, 6

[37] S. Ren, X. Cao, Y. Wei, and J. Sun. Face alignment at 3000
fps via regressing local binary features. In Proc. Conf. Com-
put. Vision Pattern Recognition. IEEE, 2014. 2, 3

[38] E. Richardson, M. Sela, R. Or-El, and R. Kimmel. Learn-
ing detailed face reconstruction from a single image. arXiv
preprint arXiv:1611.05053, 2016. 2

[39] C. Sagonas, E. Antonakos, G. Tzimiropoulos, S. Zafeiriou,
and M. Pantic. 300 faces in-the-wild challenge: Database
and results. Image and Vision Computing, 2015. 2, 7, 8
[40] C. Sagonas, G. Tzimiropoulos, S. Zafeiriou, and M. Pantic.
300 faces in-the-wild challenge: The ﬁrst facial landmark
localization challenge. In Proc. Conf. Comput. Vision Pattern
Recognition Workshops, 2013. 1, 7

[41] H. Su, C. R. Qi, Y. Li, and L. J. Guibas. Render for CNN:
Viewpoint estimation in images using CNNs trained with
rendered 3D model views. In Proc. Int. Conf. Comput. Vi-
sion, pages 2686–2694, 2015. 2

[42] A. Tran, T. Hassner, I. Masi, and G. Medioni. Regressing
robust and discriminative 3D morphable models with a very
deep neural network. In Proc. Conf. Comput. Vision Pattern
Recognition, 2017. 7, 8

[43] C. Whitelam, E. Taborsky, A. Blanton, B. Maze, J. Adams,
T. Miller, N. Kalka, A. K. Jain, J. A. Duncan, K. Allen, et al.
Iarpa janus benchmark-b face dataset. In Proc. Conf. Com-
put. Vision Pattern Recognition Workshops, 2017. 2, 5, 6
[44] Y. Wu, T. Hassner, K. Kim, G. Medioni, and P. Natarajan.
Facial landmark detection with tweaked convolutional neural
networks. arXiv preprint arXiv:1511.04031, 2015. 7

