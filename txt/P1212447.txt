A Multi-Hypothesis Approach to Color Constancy

Daniel Hernandez-Juarez1, Sarah Parisot1,2, Benjamin Busam1,3, Aleˇs Leonardis1
Gregory Slabaugh1 Steven McDonagh1
dhernandez0@gmail.com,

{sarah.parisot, benjamin.busam, ales.leonardis, gregory.slabaugh, steven.mcdonagh} @huawei.com

1Huawei Noah’s Ark Lab

2Mila, Montr´eal

3Technical University of Munich

0
2
0
2
 
r
a

M
 
2
 
 
]

V
C
.
s
c
[
 
 
2
v
6
9
8
2
1
.
2
0
0
2
:
v
i
X
r
a

Abstract

Contemporary approaches frame the color constancy
problem as learning camera speciﬁc illuminant mappings.
While high accuracy can be achieved on camera speciﬁc
data, these models depend on camera spectral sensitiv-
ity and typically exhibit poor generalisation to new de-
vices. Additionally, regression methods produce point es-
timates that do not explicitly account for potential ambi-
guities among plausible illuminant solutions, due to the
ill-posed nature of the problem. We propose a Bayesian
framework that naturally handles color constancy ambi-
guity via a multi-hypothesis strategy. Firstly, we select a
set of candidate scene illuminants in a data-driven fashion
and apply them to a target image to generate of set of cor-
rected images. Secondly, we estimate, for each corrected
image, the likelihood of the light source being achromatic
using a camera-agnostic CNN. Finally, our method explic-
itly learns a ﬁnal illumination estimate from the generated
posterior probability distribution. Our likelihood estimator
learns to answer a camera-agnostic question and thus en-
ables effective multi-camera training by disentangling illu-
minant estimation from the supervised learning task. We ex-
tensively evaluate our proposed approach and additionally
set a benchmark for novel sensor generalisation without re-
training. Our method provides state-of-the-art accuracy on
multiple public datasets (up to 11% median angular error
improvement) while maintaining real-time execution.

1. Introduction

Color constancy is an essential part of digital image pro-
cessing pipelines. When treated as a computational process,
this involves estimation of scene light source color, present
at capture time, and correcting an image such that its ap-
pearance matches that of the scene captured under an achro-
matic light source. The algorithmic process of recovering
the illuminant of a scene is commonly known as computa-

Figure 1. Our multi-hypothesis strategy allows us to leverage
multi-camera datasets. Example image taken from the NUS
dataset [14]. Single camera training: (a) state of the art method
FFCC [7] and (b) our method obtains similar angular-error. Train-
ing with all 8 dataset cameras: aggregate all images to (c) deﬁne
FFCC histogram center and (d) use an illuminant candidate set per
camera. [ r
g ] color space plots show training set illuminant dis-
tributions. Each camera is encoded with a different color in (d)
to highlight camera-speciﬁc illuminants. Our model leverages the
extra data to achieve lower angular error. Images are rendered in
sRGB color space.

g , b

tional Color Constancy (CC) or Automatic White Balance
(AWB). Accurate estimation is essential for visual aesthet-
ics [24], as well as downstream high-level computer vision
tasks [2, 4, 13, 17] that typically require color-unbiased and
device-independent images.

Under the prevalent assumption that the scene is illumi-
nated by a single or dominant light source, the observed
pixels of an image are typically modelled using the physi-
cal model of Lambertian image formation captured under a
trichromatic photosensor:

1

(cid:90)

Ω

ρk(X) =

E(λ)S(λ, X)Ck(λ)dλ k ∈ {R, G, B}.

(1)
where ρk(X) is the intensity of color channel k at pixel
location X, λ the wavelength of light such that E(λ) rep-
resents the spectrum of the illuminant, S(λ, X) the surface
reﬂectance at pixel location X and Ck(λ) camera sensitiv-
ity function for channel k, considered over the spectrum of
wavelengths Ω.

The goal of computational CC then becomes estimation

of the global illumination color ρE

k where:

ρE
k =

(cid:90)

Ω

E(λ)Ck(λ)dλ

k ∈ {R, G, B}.

(2)

Finding ρE
k in Eq. (2) results in a ill-posed problem due to
the existence of inﬁnitely many combinations of illuminant
and surface reﬂectance that result in identical observations
at each pixel X.

A natural and popular solution for learning-based color
constancy is to frame the problem as a regression task
[1, 28, 25, 10, 48, 34, 9]. However, typical regression meth-
ods provide a point estimate and do not offer any informa-
tion regarding possible alternative solutions. Solution am-
biguity is present in many vision domains [45, 36] and is
particularly problematic in the cases where multi-modal so-
lutions exist [35]. Speciﬁcally for color constancy we note
that, due to the ill-posed nature of the problem, multiple
illuminant solutions are often possible with varying prob-
ability. Data-driven approaches that learn to directly esti-
mate the illuminant result in learning tasks that are inher-
ently camera-speciﬁc due to the camera sensitivity function
c.f . Eq. (2). This observation will often manifest as a sen-
sor domain gap; models trained on a single device typically
exhibit poor generalisation to novel cameras.

In this work, we propose to address the ambiguous na-
ture of the color constancy problem through multiple hy-
pothesis estimation. Using a Bayesian formulation, we
discretise the illuminant space and estimate the likelihood
that each considered illuminant accurately corrects the ob-
served image. We evaluate how plausible an image is af-
ter illuminant correction, and gather a discrete set of plau-
sible solutions in the illuminant space. This strategy can
be interpreted as framing color constancy as a classiﬁca-
tion problem, similar to recent promising work in this direc-
tion [6, 7, 38]. Discretisation strategies have also been suc-
cessfully employed in other computer vision domains, such
as 3D pose estimation [35] and object detection [42, 43],
resulting in e.g. state of the art accuracy improvement.

In more detail, we propose to decompose the AWB task
into three sub-problems: a) selection of a set of candidate

2

illuminants b) learning to estimate the likelihood that an im-
age, corrected by a candidate, is illuminated achromatically,
and c) combining candidate illuminants, using the estimated
posterior probability distribution, to produce a ﬁnal output.
We correct an image with all candidates independently
and evaluate the likelihood of each solution with a shallow
CNN. Our network learns to estimate the likelihood of white
balance correctness for a given image. In contrast to prior
work, we disentangle camera-speciﬁc illuminant estimation
from the learning task thus allowing to train a single, device
agnostic, AWB model that can effectively leverage multi-
device data. We avoid distribution shift and resulting do-
main gap problems [1, 41, 22], associated with camera spe-
ciﬁc training, and propose a well-founded strategy to lever-
age multiple data. Principled combination of datasets is of
high value for learning based color constancy given the typi-
cally small nature of individual color constancy datasets (on
the order of only hundreds of images). See Figure 1.
Our contributions can be summarised as:

1. We decompose the AWB problem into a novel multi-

hypothesis three stage pipeline.

2. We introduce a multi-camera learning strategy that
allows to leverage multi-device datasets and improve
accuracy over single-camera training.

3. We provide a training-free model adaptation strategy

for new cameras.

4. We report improved state-of-the-art performance on
two popular public datasets (NUS [14], Cube+ [5]) and
competitive results on Gehler-Shi [47, 23].

2. Related work

Classical color constancy methods utilise low-level
statistics to realise various instances of the gray-world as-
sumption: the average reﬂectance in a scene under a neu-
tral light source is achromatic. Gray-World [12] and its
extensions [18, 50] are based on these assumptions that tie
scene reﬂectance statistics (e.g. mean, max reﬂectance) to
the achromaticity of scene color.

Related assumptions deﬁne perfect reﬂectance [32, 20]
and result in White-Patch methods. Statistical methods
are fast and typically contain few free parameters, however
their performance is highly dependent on strong scene con-
tent assumptions and these methods falter in cases where
these assumptions fail to hold.

An early Bayesian framework [19] used Bayes’ rule to
compute the posterior distribution for the illuminants and
scene surfaces. They model the prior of the illuminant
and the surface reﬂectance as a truncated multivariate nor-
mal distribution on the weights of a linear model. Other
Bayesian works [44, 23], discretise the illuminant space and

Figure 2. Method overview: we ﬁrst generate a list of n candidate illuminants (cid:96)i (candidate illuminants are shown left of the respective
corrected images) using K-means clustering [33]. We correct the input image with each of the n candidates independently and then
estimate the likelihood oi of each corrected image with our network. We combine illuminant candidates using the posterior probability
distribution to generate an illuminant estimation (cid:96)∗. The error is back-propagated through the network using angular error loss L. The [ r
g ,
b
g ] plot in the upper-right illustrates the posterior probability distribution (triangles encoded from blue to red) of the candidates (cid:96)i, the ﬁnal
prediction vector (cid:96)∗ (blue circle) and the ground-truth illuminant (cid:96)GT (green circle). Images are rendered in sRGB color space.

model the surface reﬂectance priors by learning real world
histogram frequencies; in [44] the prior is modelled as a
uniform distribution over a subset of illuminants while [23]
uses the empirical distribution of the training illuminants.
Our work uses the Bayesian formulation proposed in previ-
ous works [44, 19, 23]. We estimate the likelihood proba-
bility distribution with a CNN which also explicitly learns
to model the prior distribution for each illuminant.

Fully supervised methods.

Early learning-based
works [21, 53, 52] comprise combinational and direct ap-
proaches, typically relying on hand-crafted image features
which limited their overall performance. Recent fully su-
pervised convolutional color constancy work offers state-of-
the-art estimation accuracy. Both local patch-based [9, 48,
10] and full image input [6, 34, 7, 25, 28] have been consid-
ered, investigating different model architectures [9, 10, 48]
and the use of semantic information [28, 34, 7].

Some methods frame color constancy as a classiﬁca-
tion problem, e.g. CCC [6] and the follow-up reﬁnement
FFCC [7], by using a color space that identiﬁes image re-
illumination with a histogram shift. Thus, they elegantly
and efﬁciently evaluate different illuminant candidates. Our
method also discretises the illuminant space but we explic-
itly select the candidate illuminants, allowing for multi-
camera training while FFCC [7] is constrained to use all
histogram bins as candidates and single-camera training.

The method of [38] uses K-means [33] to cluster illu-
minants of the dataset and then applies a CNN to frame the
problem as a classiﬁcation task; network input is a single
(pre-white balanced) image and output results in K class
probabilities, representing the prospect of each illuminant
(each class) explaining the correct image illumination. Our
method ﬁrst chooses candidate illuminants similarly, how-
ever, the key difference is that our model learns to infer
whether an image is well white balanced or not. We ask this
question K times by correcting the image, independently,
with each illuminant candidate. This affords an indepen-
dent estimation of the likelihood for each illuminant and
thus enables multi-device training to improve results.

Multi-device training The method of [1] introduces a
two CNN approach; the ﬁrst network learns a ‘sensor inde-
pendent’ linear transformation (3×3 matrix), the RGB im-
age is transformed to this ‘canonical’ color space and then,
a second network provides the predicted illuminant. The
method is trained on multiple datasets except the test cam-
era and obtains competitive results.

The work of [37] affords fast adaptation to previously
unseen cameras, and robustness to changes in capture de-
vice by leveraging annotated samples across different cam-
eras and datasets in a meta-learning framework.

A recent approach [8], makes an assumption that sRGB
images collected from the web are well white balanced,

3

therefore, they apply a simple de-gamma correction to ap-
proximate an inverse tone mapping and then ﬁnd achro-
matic pixels with a CNN to predict the illuminant. These
web images were captured with unknown cameras, were
processed by different ISP pipelines and might have been
modiﬁed with image editing software. Despite additional
assumptions, the method achieves promising results, how-
ever, not comparable with the supervised state-of-the-art.

In contrast we propose an alternative technique to enable
multi-camera training and mitigate well understood sensor
domain-gaps. We can train a single CNN using images
captured by different cameras through the use of camera-
dependent illuminant candidates. This property, of account-
ing for camera-dependent illuminants, affords fast model
adaption; accurate inference is achievable for images cap-
tured by cameras not seen during training, if camera illumi-
nant candidates are available (removing the need for model
re-training or ﬁne-tuning). We provide further methodolog-
ical detail of these contributions and evidence towards their
efﬁcacy in Sections 3 and 4 respectively.

3. Method

Let y = (yr, yg, yb) be a pixel from an input image
Y in linear RGB space. We model the global illumina-
tion, Eq. (2), with the standard linear model [51] such
that each pixel y is the product of the surface reﬂectance
r = (rr, rg, rb) and a global illuminant (cid:96) = ((cid:96)r, (cid:96)g, (cid:96)b)
shared by all pixels such that:

yk = rk · (cid:96)k

k ∈ {R, G, B}.

(3)

Given Y = (y1, . . . , ym), comprising m pixels, and R =
(r1, . . . , rm), our goal is to estimate (cid:96) and produce R =
diag((cid:96))−1Y .

In order to estimate the correct illuminant to adjust the
input image Y , we propose to frame the CC problem with
a probabilistic generative model with unknown surface re-
ﬂectances and illuminant. We consider a set (cid:96)i ∈ R3, i ∈
{1, . . . , n} of candidate illuminants, each of which are ap-
plied to Y to generate a set of n tentatively corrected im-
ages diag((cid:96)i)−1Y . Using the set of corrected images as
inputs, we then train a CNN to identify the most probable
illuminants such that the ﬁnal estimated illuminant is a lin-
ear combination of the candidates. In this section, we ﬁrst
introduce our general Bayesian framework, followed by our
proposed implementation of the main building blocks of the
model. An overview of the method can be seen in Figure 2.

3.1. Bayesian approach to color constancy

Following the Bayesian formulation previously consid-
ered [44, 19, 23], we assume that the color of the light
Formally
and the surface reﬂectance are independent.

(4)

(5)

i.e. knowledge of the surface re-
P((cid:96), R)= P((cid:96)) P(R),
ﬂectance provides us with no additional information about
the illuminant, P( (cid:96) | R)= P((cid:96)). Based on this assumption
we decompose these factors and model them separately.

Using Bayes’ rule, we deﬁne the posterior distribution of

(cid:96) illuminants given the input image Y as:

P( (cid:96) | Y ) =

P( Y | (cid:96) ) P((cid:96))
P(Y )

.

We model the likelihood of an observed image Y for a

given illuminant (cid:96):

(cid:90)

r

P( Y | (cid:96) ) =

P( Y | (cid:96), R = r) P(R = r) dr

= P(R = diag((cid:96))−1Y )

where R are the surface reﬂectances and diag((cid:96))−1Y is the
image as corrected with illuminant (cid:96). The term P( Y |
(cid:96), R = r) is only non-zero for R = diag((cid:96))−1Y . The
likelihood rates whether a corrected image looks realistic.

We choose to instantiate the model of our likelihood us-
ing a shallow CNN. The network should learn to output a
high likelihood if the reﬂectances look realistic. We model
the prior probability P((cid:96)) for each candidate illuminant in-
dependently as learnable parameters in an end-to-end ap-
proach; this effectively acts as a regularisation, favouring
more likely real-world illuminants. We note that, in prac-
tice, the function modelling the prior also depends on fac-
tors such as the environment (indoor / outdoor), the time
of day, ISO etc. However, the size of currently available
datasets prevent us from modelling more complex proxies.
In order to estimate the illuminant (cid:96)∗, we optimise the
quadratic cost (minimum MSE Bayesian estimator), min-
imised by the mean of the posterior distribution:

(cid:96)∗ =

(cid:96) · P( (cid:96) | Y ) d(cid:96)

(6)

(cid:90)

(cid:96)

This is done in the following three steps (c.f . Figure 2):

1. Candidate selection (Section 3.2): Choose a set of n
illuminant candidates to generate n corrected thumb-
nail (64×64) images.

2. Likelihood estimation (Section 3.3): Evaluate these n
images independently with a CNN, a network designed
to estimate the likelihood that an image is well white
balanced P(Y | (cid:96)).

3. Illuminant determination (Section 3.4): Compute
the posterior probability of each candidate illuminant
and determine a ﬁnal illuminant estimation (cid:96)∗.

This formulation allows estimation of a posterior prob-
ability distribution, allowing us to reason about a set of

4

probable illuminants rather than produce a single illumi-
nant point estimate (c.f . regression approaches). Regression
typically does not provide feedback on a possible set of al-
ternative solutions which has shown to be of high value in
alternative vision problems [35].

The second beneﬁt that our decomposition affords is a
principled multi-camera training process. A single, de-
vice agnostic CNN estimates illuminant likelihoods and
performs independent selection of candidate illuminants for
each camera. By leveraging image information across mul-
tiple datasets we increase model robustness. Additionally,
the amalgamation of small available CC datasets provides a
step towards harnessing the power of large capacity models
for this problem domain c.f . contemporary models.

3.2. Candidate selection

The goal of candidate selection is to discretise the illu-
minant space of a speciﬁc camera in order to obtain a set of
representative illuminants (spanning the illuminant space).
Given a collection of ground truth illuminants, measured
from images containing calibration objects (i.e. a labelled
training set), we compute candidates using K-means clus-
tering [33] on the linear RGB space.

By forming n clusters of our measured illuminants, we
deﬁne the set of candidates (cid:96)i ∈ R3, i ∈ {1, . . . , n} as
the cluster centers. K-means illuminant clustering is pre-
viously shown to be effective for color constancy [38] how-
ever we additionally evaluate alternative candidate selec-
tion strategies (detailed in the supplementary material); our
experimental investigation conﬁrms a simple K-means ap-
proach provides strong target task performance. Further, the
effect of K is empirically evaluated in Section 4.4.

Image Y, captured by a given camera, is then used to
produce a set of images, corrected using the illuminant can-
didate set for the camera, on which we evaluate the accuracy
of each candidate.

3.3. Likelihood estimation

We model the likelihood estimation step using a neural
network which, for a given illuminant (cid:96) and image Y , takes
the tentatively corrected image diag((cid:96))−1Y as input, and
learns to predict the likelihood P (Y |(cid:96)) that the image has
been well white balanced i.e. has an appearance of being
captured under an achromatic light source.

The success of low capacity histogram based meth-
ods [6, 7] and the inference-training tradeoff for small
datasets motivate a compact network design. We propose
a small CNN with one spatial convolution and subsequent
layers constituting 1×1 convolutions with spatial pooling.
Lastly, three fully connected layers gradually reduce the
dimensionality to one (see supplementary material for ar-
chitecture details). Our network output is then a single
value that represents the log-likelihood that the image is

well white balanced:

log(P( Y | (cid:96) )) = f W (diag((cid:96))−1Y ).

(7)

Function f W is our trained CNN parametrised by model
weights W . Eq. (7) estimates the log-likelihood of each
candidate illuminant separately.
It is important to note
that we only train a single CNN which is used to estimate
the likelihood for each candidate illuminant independently.
However, in practice, certain candidate illuminants will be
more common than others. To account for this, follow-
ing [7], we compute an afﬁne transformation of our log-
likelihood log(P( Y | (cid:96) )) by introducing learnable, illumi-
nant speciﬁc, gain G(cid:96) and bias B(cid:96) parameters. Gain Gl af-
fords ampliﬁcation of illuminant likelihoods. The bias term
B(cid:96) learns to prefer some illuminants i.e. a prior distribution
in a Bayesian sense: B(cid:96) = log(P((cid:96))). The log-posterior
probability can then be formulated as:

log(P( (cid:96) | Y )) = G(cid:96) · log(P( Y | (cid:96) )) + B(cid:96).

(8)

We highlight that learned afﬁne transformation parame-
ters are training camera-dependent and provide further dis-
cussion on camera agnostic considerations in Section 3.5.

3.4. Illuminant determination

We require a differentiable method in order to train our
model end-to-end, and therefore the use of a simple Maxi-
mum a Posteriori (MAP) inference strategy is not possible.
Therefore to estimate the illuminant (cid:96)∗, we use the mini-
mum mean square error Bayesian estimator, which is min-
imised by the posterior mean of (cid:96) (c.f . Eq. (6)):

(cid:96)∗ =

n
(cid:88)

i=1

(cid:96)i · softmax(log(P((cid:96)i | Y )))

=

1
(cid:80) elog(P((cid:96)i|Y ))

n
(cid:88)

i=1

(cid:96)i · elog(P((cid:96)i|Y )).

(9)

The resulting vector (cid:96)∗ is l2-normalised. We leverage
our K-means centroid representation of the linear RGB
space and use linear interpolation within the convex hull
of feasible illuminants to determine the estimated scene il-
luminant (cid:96)∗. For Eq. (9), we take inspiration from [29, 38],
who have successfully explored similar strategies in CC and
stereo regression, e.g. [29] introduced an analogous soft-
argmin to estimate disparity values from a set of candidates.
We apply a similar strategy for illuminant estimation and
use the soft-argmax which provides a linear combination of
all candidates weighted by their probabilities.

We train our network end-to-end with the commonly
used angular error loss function, where (cid:96)∗ and (cid:96)GT are the
prediction and ground truth illuminant, respectively:

5

Lerror = arccos(

(10)

(cid:96)GT · (cid:96)∗
(cid:107)(cid:96)GT (cid:107)(cid:107)(cid:96)∗(cid:107)

)

bration objects are masked, black level subtracted and over-
saturated pixels are clipped at 95% threshold. We resize the
image to 64×64 and normalise.

3.5. Multi-device training

4.2. Datasets

As discussed in previous work [1, 41, 22], CC models
typically fail to train successfully using multiple camera
data due to distribution shifts between camera sensors, mak-
ing them intrinsically device-dependent and limiting model
capacity. A device-independent model is highly appealing
due to the small number of images commonly available in
camera-speciﬁc public color constancy datasets. The cost
and time associated with collecting and labelling new large
data for speciﬁc novel devices is expensive and prohibitive.
Our CNN learns to produce the likelihood that an in-
put image is well white balanced. We claim that framing
part of the CC problem in this fashion results in a device-
independent learning task. We evaluate the beneﬁt of this
hypothesis experimentally in Section 4.

To train with multiple cameras we use camera-speciﬁc
candidates, yet learn only a single model. Speciﬁcally, we
train with a different camera for each batch, use camera-
speciﬁc candidates yet update a single set of CNN parame-
ters during model training. In order to ensure that our CNN
is device-independent, we ﬁx previously learnable parame-
ters that depend on sensor speciﬁc illuminants, i.e. B(cid:96) = 0
and G(cid:96) = 1. The absence of these parameters, learned
in a camera-dependent fashion, intuitively restricts model
ﬂexibility however we observe this drawback to be com-
pensated by the resulting ability to train using amalgamated
multi-camera datasets i.e. more data. This strategy allows
our CNN to be camera-agnostic and affords the option to
reﬁne existing CNN quality when data from novel cameras
becomes available. We however clarify that our overarch-
ing strategy for white balancing maintains use of camera-
speciﬁc candidate illuminants.

4. Results

4.1. Training details

We train our models for 120 epochs and use K-
mean [33] with K=120 candidates. Our batch size is
32, we use the Adam optimiser [30] with initial learning
rate 5×10−3, divided by two after 10, 50 and 80 epochs.
Dropout [27] of 50% is applied after average pooling. We
take the log transform of the input before the ﬁrst convolu-
tion. Efﬁcient inference is feasible by concatenating each
candidate corrected image into the batch dimension. We
use PyTorch 1.0 [39] and an Nvidia Tesla V100 for our ex-
periments. The ﬁrst layer is the only spatial convolution, it
is adapted from [49] and pretrained on ImageNet [16]. We
ﬁx the weights of this ﬁrst layer to avoid over-ﬁtting. The
total amount of weights is 22.8K. For all experiments cali-

We experiment using three public datasets. The Gehler-
Shi dataset [47, 23] contains 568 images of indoor and out-
door scenes. Images were captured using Canon 1D and
Canon 5D cameras. We highlight our awareness of the ex-
istence of multiple sets of non-identical ground-truth labels
for this dataset (see [26] for further detail). Our Gehler-
Shi evaluation is conducted using the SFU ground-truth
labels [47] (consistent with the label naming convention
in [26]). The NUS dataset [14] originally consists of 8
subsets of ∼210 images per camera providing a total of
1736 images. The Cube+ dataset [5] contains 1707 images
captured with Canon 550D camera, consisting of predomi-
nantly outdoor imagery.

For the NUS [14] and Gehler-Shi [47, 23] datasets we
perform three-fold cross validation (CV) using the splits
provided in previous work [7, 6]. The Cube+ [5] dataset
does not provide splits for CV so we use all images for
learning and evaluate using a related set of test images, pro-
vided for the recent Cube+ ISPA 2019 challenge [31]. We
compare with the results from the challenge leader-board.

For the NUS dataset [14], we additionally explore train-
ing multi-camera models and thus create a new set of CV
folds to facilitate this. We are careful to highlight that the
NUS dataset consists of eight image subsets, pertaining to
eight capture devices. Each of our new folds captures a
distinct set of scene content (i.e. sets of up to eight simi-
lar images for each captured scene). This avoids testing on
similar scene content seen during training. We deﬁne our
multi-camera CV such that multi-camera fold i is the con-
catenation of images, pertaining to common scenes, cap-
tured from all eight cameras. The folds that we deﬁne are
made available in our supplementary material.

4.3. Evaluation metrics

We use the standard angular error metric for quantitative
evaluation (c.f . Eq. (10)). We report standard CC statistics
to summarise results over the investigated datasets: Mean,
Median, Trimean, Best 25%, Worst 25%. We further re-
port method inference time in the supplementary material.
Other works’ results were taken from corresponding pa-
pers, resulting in missing statistics for some methods. The
NUS [14] dataset is composed of 8 cameras, we report the
geometric mean of each statistic for each method across all
cameras as standard in the literature [7, 6, 28].

4.4. Quantitative evaluation

Accuracy experiments. We report competitive results on
the dataset of Gehler-Shi [47, 23] (c.f . Table 1). This dataset

6

Best 25% Worst 25%

Method
Gray-world [12]
White-Patch [11]
Bayesian [23]
Quasi-unsupervised [8]
Aﬁﬁ et al. 2019 [1]
Meta-AWB [37]
Cheng et al. 2015 [15]
CM 2019 [25]
Oh et al. [38]
CCC [6]
DS-Net [48]
FC4 [28] (SqueezeNet)
FC4 [28] (AlexNet)
FFCC [7] (model P)
Ours
Ours (pretrained)

Mean Med.
6.28
6.36
5.86
7.55
3.46
4.82
1.98
2.91
1.93
2.77
1.84
2.57
1.65
2.42
1.61
2.48
1.47
2.16
1.22
1.95
1.12
1.90
1.18
1.65
1.11
1.77
0.86
1.61
1.43
2.35
1.32
2.10

Tri.
6.28
6.35
3.88
-
-
1.94
1.75
1.80
1.61
1.38
1.33
1.27
1.29
1.02
1.63
1.53

2.33
1.45
1.26
-
0.55
0.47
0.38
0.47
0.37
0.35
0.31
0.38
0.34
0.23
0.40
0.36

10.58
16.12
10.49
-
6.53
6.11
5.87
5.97
5.12
4.76
4.84
3.78
4.29
4.27
5.80
5.10

Table 1. Angular error statistics for Gehler-Shi dataset [47, 23].

can be considered very challenging as the number of images
per camera is imbalanced: There are 86 Canon 1D and 482
Canon 5D images. Our method is not able to outperform
the state-of-the-art likely due to the imbalanced nature and
small size of Canon 1D. Pretraining on a combination of
NUS [14] and Cube+ [5] provides moderate accuracy im-
provement despite the fact that the Gehler-Shi dataset has
a signiﬁcantly different illuminant distribution compared to
those seen during pre-training. We provide additional ex-
periments, exploring the effect of varying K, for K-means
candidate selection in the supplementary material.

Results for NUS [14] are provided in Table 2. Our
method obtains competitive accuracy and the previously
observed trend, pre-training using additional datasets (here
Gehler-Shi [47, 23] and Cube+ [5]), again improves results.
In Table 3, we report results for our multi-device setting
on the NUS [14] dataset. For this experiment we introduce
a new set of training folds to ensure that scenes are well
separated and refer to Sections 3.5 for multi-device training
and 4.2 for related training folds detail. We draw multi-
device comparison with FFCC [7], by choosing to center
the FFCC histogram with the training set (of amalgamated
camera datasets). Note that results are not directly com-
parable with Table 2 due to our redeﬁnition of CV folds.
Our method is more accurate than the state-of-the-art when
training considers all available cameras at the same time.
Note that multi-device training improves the median angu-
lar error of each individual camera dataset (we provide re-
sults in the supplementary material). Overall performance
is improved by ∼11% in terms of median accuracy.

We also outperform the state-of-the-art on the recent
Cube challenge [31] as shown in Table 4. Pretraining to-
gether on Gehler-Shi [47, 23] and NUS [14] improves our
Mean and Worst 95% statistics.

In summary, we observe strong generalisation when
using multiple camera training (e.g. NUS [14] results
c.f . Tables 2 and 3). These experiments illustrate the

7

Best 25% Worst 25%

Method
White-patch [11]
Gray-world [12]
Bayesian [23]
Oh et al. [38]
Quasi-unsupervised [8]
CM 2019 [25]
FC4 [28] (SqueezeNet)
FC4 [28] (AlexNet)
Aﬁﬁ et al. 2019 [1]
CCC [6]
Cheng et al. 2015 [15]
DS-Net [48]
Meta-AWB [37]
FFCC [7] (model Q)
FFCC [7] (model M)
Ours
Ours (pretrained)

Mean Med.
7.44
9.91
3.46
4.59
2.36
3.50
2.09
2.36
1.91
1.97
1.59
2.25
1.57
2.23
1.53
2.12
1.50
2.05
1.48
2.38
1.48
2.18
1.46
2.21
1.89
1.34
1.39
2.06
1.31
1.99
1.61
2.39
1.55
2.35
Table 2. Angular error statistics for NUS [14].

Tri.
8.78
3.81
2.57
-
-
1.74
1.72
1.67
-
1.69
1.64
1.68
1.44
1.53
1.43
1.74
1.73

1.44
1.16
0.78
-
-
0.50
0.47
0.48
0.52
0.45
0.46
0.48
0.45
0.39
0.35
0.50
0.46

21.27
9.85
8.02
4.16
-
5.13
5.15
4.78
4.48
5.85
5.03
6.08
4.28
4.80
4.75
5.67
5.62

Mean Med.

Tri.

Best 25% Worst 25%

2.37
2.35

1.50
1.48

1.69
1.67

0.46
0.47

5.76
5.71

Method
One model per device
FFCC [7] (model Q)
Ours (pretrained)
Multi-device training
FFCC [7] (model Q)
Ours (pretrained)

2.59
2.22

1.77
1.33
Table 3. Angular error statistics for NUS [14] using multi-device
cross-validation folds (see Section 4.2). FFCC model Q is consid-
ered for fair comparison (thumbnail resolution input).

1.94
1.53

0.52
0.44

6.14
5.49

Best 25% Worst 25%

Method
Gray-world [12]
1st-order Gray-Edge [50]
V Vuk et al. [31]
Y Qian et al. [31]
K Chen et al. [31]
Y Qian et al. [40]
Aﬁﬁ et al. 2019 [1]
FFCC [7] (model J)
A Savchik et al. [46]
WB-sRGB [3, 1]
Ours
Ours (pretrained)

Mean Med.
3.50
4.44
2.30
3.51
1.96
6.00
1.32
2.21
1.27
1.84
1.26
2.27
1.23
2.10
1.23
2.10
1.20
2.05
1.83
1.15
1.06
1.99
1.16
1.95
Table 4. Angular error for Cube challenge [31].

Tri.
-
-
2.25
1.41
1.32
1.35
-
1.34
1.30
-
1.14
1.25

0.77
0.56
0.99
0.43
0.39
0.39
0.47
0.47
0.40
0.35
0.35
0.39

9.64
8.53
18.81
5.65
4.41
6.02
5.38
5.38
5.24
4.60
5.35
4.99

large beneﬁt achievable with multi-camera training when
illuminant distributions of the cameras are broadly consis-
tent. Gehler-Shi [47, 23] has a very disparate illuminant
distribution with respect to alternative datasets and we are
likely unable to exploit the full advantage of multi-camera
training. We note the FFCC [7] state of the art method
is extremely shallow and therefore optimised for small
datasets. In contrast, when our model is trained on large
and relevant datasets we are able to achieve superior results.

Run time. Regarding run-time; we measure inference
speed at ∼10 milliseconds, implemented in unoptimised
PyTorch (see supplementary material for further detail).

4.5. Training on novel sensors

5. Conclusion

To explore camera agnostic elements of our model, we
train on a combination of the full NUS [14] and Gehler-
Shi [47, 23] datasets. As described in Section 3.5, the only
remaining device dependent component involves perform-
ing illuminant candidate selection per device. Once the
model is trained, we select candidates from Cube+ [5] and
test on the Cube challenge dataset [31]. We highlight that
neither Cube+ nor Cube challenge imagery is seen during
model training. For meaningful evaluation, we compare
against both classical and recent learning-based [1] camera-
agnostic methods. Results are shown in Table 5. We obtain
results that are comparable to Table 4 without seeing any
imagery from our target camera, outperforming both base-
lines and [1]. We clarify that our method performs candi-
date selection using Cube+ [5] to adapt the candidate set
to the novel device while [1] does not see any information
from the new camera.

We provide additional experimental results for differing
values of K (K-means candidate selection) in the supple-
mentary material. We observe stability for K >= 25. The
low number of candidates required is likely linked to the
two Cube datasets having reasonably compact distributions.

4.6. Qualitative evaluation

We provide visual results for the Gehler-Shi [47, 23]
dataset in Figure 3. We sort inference results by increasing
angular error and sample 5 images uniformly. For each row,
we show (a) the input image (b) our estimated illuminant
color and resulting white-balanced image (c) the ground
truth illuminant color and resulting white-balanced image.
Images are ﬁrst white-balanced, then, we apply an estimated
CCM (Color Correction Matrix), and ﬁnally, sRGB gamma
correction. We mask out the Macbeth Color Checker cali-
bration object during both training and evaluation.

Our most challenging example (c.f . last row of Figure 3)
is a multi-illuminant scene (indoor and outdoor lights), we
observe our method performs accurate correction for ob-
jects illuminated by the outdoor light, yet the ground truth
is only measured for the indoor illuminant, hence the high
angular error. This highlights the limitation linked to our
single global illuminant assumption, common to the major-
ity of CC algorithms. We show additional qualitative results
in the supplementary material.

Best 25% Worst 25%

Method
Mean Med.
Gray-world [12]
3.50
4.44
1st-order Gray-Edge [50]
2.30
3.51
Aﬁﬁ et al. 2019 [1]
1.72
2.89
1.31
2.07
Ours
Table 5. Angular error for the Cube challenge [31] trained solely
on the dataset of NUS [14] and Gehler-Shi [47, 23]. For our
method, candidate selection is performed on Cube+ [5] dataset.

Tri.
-
-
-
1.43

0.77
0.56
0.71
0.41

9.64
8.53
7.06
5.12

We propose a novel multi-hypothesis color constancy
model capable of effectively learning from image samples
that were captured by multiple cameras. We frame the prob-
lem under a Bayesian formulation and obtain data-driven
likelihood estimates by learning to classify achromatic im-
agery. We highlight the challenging nature of multi-device
learning due to camera color space differences, spectral sen-
sitivity and physical sensor effects. We validate the beneﬁts
of our proposed solution for multi-device learning and pro-
vide state-of-the-art results on two popular color constancy
datasets while maintaining real-time inference constraints.
We additionally provide evidence supporting our claims that
framing the learning question as a classiﬁcation task c.f . re-
gression can lead to strong performance without requiring
model re-training or ﬁne-tuning.

(a) Input image

(b) Our prediction

(c) Ground Truth

Error: 0.03°

Error: 0.65°

Error: 1.33°

Error: 2.82°

Error: 14.62°
Figure 3. Example results taken from the Gehler-Shi [47, 23]
dataset. Input, our result and ground truth per row. Images to vi-
sualise are chosen by sorting all test images using increasing error
and evenly sampling images according to that ordering. Images
are rendered in sRGB color space.

8

References

[1] Mahmoud Aﬁﬁ and Michael Brown. Sensor-Independent Il-
lumination Estimation for DNN Models. In Proceedings of
the British Machine Vision Conference 2019, BMVC 2019,
Cardiff University, Cardiff, UK, September 9-12, 2019, 2019.
[2] Mahmoud Aﬁﬁ and Michael S. Brown. What else can fool
deep learning? addressing color constancy errors on deep
In 2019 IEEE International
neural network performance.
Conference on Computer Vision, ICCV 2019, Seoul, Korea,
October 29-November 1, 2019, 2019.

[3] Mahmoud Aﬁﬁ, Brian L. Price, Scott Cohen, and Michael S.
Brown. When color constancy goes wrong: Correcting
In IEEE Conference
improperly white-balanced images.
on Computer Vision and Pattern Recognition, CVPR 2019,
Long Beach, CA, USA, June 16-20, 2019, pages 1535–1544,
2019.

[4] Alexander Andreopoulos and John K. Tsotsos. On sensor
bias in experimental methods for comparing interest-point,
saliency, and recognition algorithms. IEEE Transactions on
Pattern Analysis and Machine Intelligence, 34(1):110–126,
2012.

[5] Nikola Banic and Sven Loncaric. Unsupervised learning for
In Proceedings of the 13th International
color constancy.
Joint Conference on Computer Vision, Imaging and Com-
puter Graphics Theory and Applications (VISIGRAPP 2018)
- Volume 4: VISAPP, Funchal, Madeira, Portugal, January
27-29, 2018, pages 181–188, 2018.

[6] Jonathan T. Barron. Convolutional color constancy. In 2015
IEEE International Conference on Computer Vision, ICCV
2015, Santiago, Chile, December 7-13, 2015, pages 379–
387, 2015.

[7] Jonathan T. Barron and Yun-Ta Tsai. Fast fourier color con-
stancy. In 2017 IEEE Conference on Computer Vision and
Pattern Recognition, CVPR 2017, Honolulu, HI, USA, July
21-26, 2017, pages 6950–6958, 2017.

[8] Simone Bianco and Claudio Cusano. Quasi-unsupervised
In IEEE Conference on Computer Vision
color constancy.
and Pattern Recognition, CVPR 2019, Long Beach, CA,
USA, June 16-20, 2019, pages 12212–12221, 2019.

[9] Simone Bianco, Claudio Cusano, and Raimondo Schettini.
Color constancy using cnns. In 2015 IEEE Conference on
Computer Vision and Pattern Recognition Workshops, CVPR
Workshops 2015, Boston, MA, USA, June 7-12, 2015, pages
81–89, 2015.

[10] Simone Bianco, Claudio Cusano, and Raimondo Schettini.
Single and multiple illuminant estimation using convolu-
IEEE Transactions on Image Pro-
tional neural networks.
cessing, 26(9):4347–4362, 2017.

[11] David H Brainard and Brian A Wandell. Analysis of the
retinex theory of color vision. JOSA A, 3(10):1651–1661,
1986.

[12] Gershon Buchsbaum. A spatial processor model for ob-
Journal of the Franklin institute,

ject colour perception.
310(1):1–26, 1980.

[13] Alexandra Carlson, Katherine A. Skinner, and Matthew
Modeling camera effects to im-

Johnson-Roberson.

prove deep vision for real and synthetic data.
abs/1803.07721, 2018.

CoRR,

[14] Dongliang Cheng, Dilip K Prasad, and Michael S Brown. Il-
luminant estimation for color constancy: why spatial-domain
methods work and the role of the color distribution. JOSA A,
31(5):1049–1058, 2014.

[15] Dongliang Cheng, Brian L. Price, Scott Cohen, and
Michael S. Brown. Effective learning-based illuminant esti-
mation using simple features. In IEEE Conference on Com-
puter Vision and Pattern Recognition, CVPR 2015, Boston,
MA, USA, June 7-12, 2015, pages 1000–1008, 2015.
[16] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li,
and Fei-Fei Li. Imagenet: A large-scale hierarchical image
In 2009 IEEE Computer Society Conference on
database.
Computer Vision and Pattern Recognition (CVPR 2009), 20-
25 June 2009, Miami, Florida, USA, pages 248–255, 2009.
[17] Steven Diamond, Vincent Sitzmann, Stephen P. Boyd, Gor-
don Wetzstein, and Felix Heide. Dirty pixels: Optimizing
image classiﬁcation architectures for raw sensor data. CoRR,
abs/1701.06487, 2017.

[18] Graham D. Finlayson and Elisabetta Trezzi. Shades of gray
and colour constancy. In The Twelfth Color Imaging Confer-
ence: Color Science and Engineering Systems, Technologies,
Applications, CIC 2004, Scottsdale, Arizona, USA, Novem-
ber 9-12, 2004, pages 37–41, 2004.

[19] William T. Freeman and David H. Brainard. Bayesian de-
cision theory, the maximum local mass estimate, and color
constancy. In Procedings of the Fifth International Confer-
ence on Computer Vision (ICCV 95), Massachusetts Institute
of Technology, Cambridge, Massachusetts, USA, June 20-23,
1995, pages 210–217, 1995.

[20] Brian V. Funt and Lilong Shi. The rehabilitation of maxrgb.
In 18th Color and Imaging Conference, CIC 2010, San An-
tonio, Texas, USA, November 8-12, 2010, pages 256–259,
2010.

[21] Brian V. Funt and Weihua Xiong. Estimating illumination
In The Twelfth
chromaticity via support vector regression.
Color Imaging Conference: Color Science and Engineering
Systems, Technologies, Applications, CIC 2004, Scottsdale,
Arizona, USA, November 9-12, 2004, pages 47–52, 2004.

[22] Shao-Bing Gao, Ming Zhang, Chao-Yi Li, and Yong-Jie Li.
Improving color constancy by discounting the variation of
camera spectral sensitivity. JOSA A, 34(8):1448–1462, 2017.
[23] Peter V. Gehler, Carsten Rother, Andrew Blake, Thomas P.
Minka, and Toby Sharp. Bayesian color constancy revisited.
In 2008 IEEE Computer Society Conference on Computer
Vision and Pattern Recognition (CVPR 2008), 24-26 June
2008, Anchorage, Alaska, USA, 2008.

[24] Arjan Gijsenij, Theo Gevers, and Marcel P Lucassen. Per-
ceptual analysis of distance measures for color constancy al-
gorithms. JOSA A, 26(10):2243–2256, 2009.

[25] Han Gong. Convolutional mean: A simple convolutional
neural network for illuminant estimation. In Proceedings of
the British Machine Vision Conference 2019, BMVC 2019,
Cardiff University, Cardiff, UK, September 9-12, 2019, 2019.
[26] Ghalia Hemrit, Graham D Finlayson, Arjan Gijsenij, Peter
Gehler, Simone Bianco, Brian Funt, Mark Drew, and Lilong

9

Shi. Rehabilitating the colorchecker dataset for illuminant
estimation. In Color and Imaging Conference, volume 2018,
pages 350–353. Society for Imaging Science and Technol-
ogy, 2018.

[27] Geoffrey E. Hinton, Nitish Srivastava, Alex Krizhevsky, Ilya
Improving neural
Sutskever, and Ruslan Salakhutdinov.
networks by preventing co-adaptation of feature detectors.
CoRR, abs/1207.0580, 2012.

[28] Yuanming Hu, Baoyuan Wang, and Stephen Lin. Fcˆ4: Fully
convolutional color constancy with conﬁdence-weighted
pooling. In 2017 IEEE Conference on Computer Vision and
Pattern Recognition, CVPR 2017, Honolulu, HI, USA, July
21-26, 2017, pages 330–339, 2017.

[29] Alex Kendall, Hayk Martirosyan, Saumitro Dasgupta, and
Peter Henry. End-to-end learning of geometry and context
for deep stereo regression. In IEEE International Conference
on Computer Vision, ICCV 2017, Venice, Italy, October 22-
29, 2017, pages 66–75, 2017.

[30] Diederik P. Kingma and Jimmy Ba. Adam: A method for
stochastic optimization. In 3rd International Conference on
Learning Representations, ICLR 2015, San Diego, CA, USA,
May 7-9, 2015, Conference Track Proceedings, 2015.

[31] Karlo Koscevic and Nikola Banic.
tion Estimation Challenge.
org/illumination-estimation-challenge.
Accessed November 14, 2019.

ISPA 2019 Illumina-
https://www.isispa.

[32] Edwin H Land and John J McCann. Lightness and retinex

theory. Josa, 61(1):1–11, 1971.

[33] Stuart P. Lloyd. Least squares quantization in PCM. IEEE
Transactions on Information Theory, 28(2):129–136, 1982.
[34] Zhongyu Lou, Theo Gevers, Ninghang Hu, and Marcel P.
Lucassen. Color constancy by deep learning. In Proceed-
ings of the British Machine Vision Conference 2015, BMVC
2015, Swansea, UK, September 7-10, 2015, pages 76.1–
76.12, 2015.

[35] Siddharth Mahendran, Haider Ali, and Ren´e Vidal. A mixed
classiﬁcation-regression framework for 3d pose estimation
In British Machine Vision Conference
from 2d images.
2018, BMVC 2018, Northumbria University, Newcastle, UK,
September 3-6, 2018, page 72, 2018.

[36] Fabian Manhardt, Diego Arroyo, Christian Rupprecht, Ben-
jamin Busam, Tolga Birdal, Nassir Navab, and Federico
Tombari. Explaining the ambiguity of object detection and
6d pose from visual data. 2019 IEEE International Confer-
ence on Computer Vision, ICCV 2019, Seoul, Korea, October
29-November 1, 2019, 2019.

[37] Steven McDonagh, Sarah Parisot, Zhenguo Li, and Gre-
gory G. Slabaugh. Meta-learning for few-shot camera-
adaptive color constancy. CoRR, abs/1811.11788, 2018.
[38] Seoung Wug Oh and Seon Joo Kim. Approaching the
computational color constancy as a classiﬁcation problem
through deep learning. Pattern Recognition, 61:405–416,
2017.

[39] Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer,
James Bradbury, Gregory Chanan, Trevor Killeen, Zeming
Lin, Natalia Gimelshein, Luca Antiga, Alban Desmaison,
Andreas K¨opf, Edward Yang, Zachary DeVito, Martin Rai-
son, Alykhan Tejani, Sasank Chilamkurthy, Benoit Steiner,

Lu Fang, Junjie Bai, and Soumith Chintala. Pytorch: An
imperative style, high-performance deep learning library. In
Advances in Neural Information Processing Systems 32: An-
nual Conference on Neural Information Processing Systems
2019, NeurIPS 2019, 8-14 December 2019, Vancouver, BC,
Canada, pages 8024–8035, 2019.

[40] Yanlin Qian, Ke Chen, and Huanglin Yu. Fast fourier color
constancy and grayness index for ISPA illumination estima-
tion challenge. In 11th International Symposium on Image
and Signal Processing and Analysis, ISPA 2019, Dubrovnik,
Croatia, September 23-25, 2019, pages 352–354, 2019.
[41] Nguyen Ho Man Rang, Dilip K. Prasad, and Michael S.
Brown. Raw-to-raw: Mapping between image sensor color
In 2014 IEEE Conference on Computer Vision
responses.
and Pattern Recognition, CVPR 2014, Columbus, OH, USA,
June 23-28, 2014, pages 3398–3405, 2014.

[42] Joseph Redmon, Santosh Kumar Divvala, Ross B. Girshick,
and Ali Farhadi. You only look once: Uniﬁed, real-time ob-
ject detection. In 2016 IEEE Conference on Computer Vision
and Pattern Recognition, CVPR 2016, Las Vegas, NV, USA,
June 27-30, 2016, pages 779–788, 2016.

[43] Shaoqing Ren, Kaiming He, Ross B. Girshick, and Jian Sun.
Faster R-CNN: towards real-time object detection with re-
gion proposal networks. IEEE Transactions on Pattern Anal-
ysis and Machine Intelligence, 39(6):1137–1149, 2017.
[44] Charles R. Rosenberg, Thomas P. Minka, and Alok Lad-
sariya. Bayesian color constancy with non-gaussian mod-
In Advances in Neural Information Processing Sys-
els.
tems 16 [Neural Information Processing Systems, NIPS
2003, December 8-13, 2003, Vancouver and Whistler, British
Columbia, Canada], pages 1595–1602, 2003.

[45] Christian Rupprecht, Iro Laina, Robert S. DiPietro, and Max-
imilian Baust. Learning in an uncertain world: Representing
In IEEE Interna-
ambiguity through multiple hypotheses.
tional Conference on Computer Vision, ICCV 2017, Venice,
Italy, October 22-29, 2017, pages 3611–3620, 2017.
[46] A. Savchik, Egor I. Ershov, and Simon M. Karpenko. Color
In 11th International Symposium on Image and
cerberus.
Signal Processing and Analysis, ISPA 2019, Dubrovnik,
Croatia, September 23-25, 2019, pages 355–359, 2019.
[47] Lilong Shi and Brian Funt. Re-processed version of the
https://www2.cs.
Accessed

gehler color constancy dataset.
sfu.ca/˜colour/data/shi_gehler/.
November 14, 2019.

[48] Wu Shi, Chen Change Loy, and Xiaoou Tang. Deep spe-
cialized network for illuminant estimation. In Computer Vi-
sion - ECCV 2016 - 14th European Conference, Amsterdam,
The Netherlands, October 11-14, 2016, Proceedings, Part
IV, pages 371–387, 2016.

[49] Karen Simonyan and Andrew Zisserman. Very deep con-
volutional networks for large-scale image recognition.
In
3rd International Conference on Learning Representations,
ICLR 2015, San Diego, CA, USA, May 7-9, 2015, Confer-
ence Track Proceedings, 2015.

[50] Joost van de Weijer, Theo Gevers, and Arjan Gijsenij. Edge-
IEEE Transactions on Image Pro-

based color constancy.
cessing, 16(9):2207–2214, 2007.

10

[51] Johannes Von Kries. Inﬂuence of adaptation on the effects
produced by luminous stimuli. handbuch der Physiologie
des Menschen, 3:109–282, 1905.

[52] Ning Wang, De Xu, and Bing Li. Edge-based color con-
stancy via support vector regression. IEICE Transactions on
Information and Systems, 92-D(11):2279–2282, 2009.
[53] Weihua Xiong and Brian Funt. Estimating illumination chro-
maticity via support vector regression. Journal of Imaging
Science and Technology, 50(4):341–348, 2006.

11

A Multi-Hypothesis Approach to Color Con-
stancy: supplementary material

We provide additional material to supplement our main
paper.
In Appendix A, we present our shallow CNN ar-
chitecture. Two experimental studies on the number of il-
luminant candidates are provided in Appendix B. In Ap-
pendix C, we report details on NUS [14] per-camera me-
dian angular error to provide evidence for our claim that
we consistently improve accuracy for each camera, using
multi-camera training (see main paper Section 4.4). In Ap-
pendix D, we show additional results from our exploration
of candidate selection strategy. Appendix E provides run-
time measurements and in Appendix F we observe failure
cases and discuss limitations of our method. Finally, Ap-
pendix G provides additional visual results comparing our
method with FFCC [7].

A. Architecture details

In Table 6, we present our CNN architecture. We pro-
pose a shallow CNN, one spatial 3×3 convolution and two
subsequent layers constituting 1×1 convolutions with a ﬁ-
nal global spatial pooling. Lastly, three fully connected lay-
ers gradually reduce the dimensionality to one.

Layer
Conv.
Conv.
Conv.
Avg. Pool.
FC
FC
FC

Kernel
3×3
1×1
1×1
64×64
-
-
-

Input
64×64×3
64×64×64
64×64×64
64×64×128
128
64
32

Output
64×64×64
64×64×64
64×64×128
128
64
32
1

Table 6. CNN architecture details. Fully connected layers and con-
volutions are followed by a ReLU activation except the last layer.

B. Number of illuminant candidates

In Table 7 we present a study varying the number of can-
didate illuminants produced by K-means. We ﬁnd experi-
mentally that accuracy improves with the number of cluster
centres until a plateau is reached, suggesting that we need
∼100 candidate illuminants to achieve competitive angular
error for the Gehler-Shi dataset [47, 23].

Additionally, we provide analogous results for differ-
ent values of K for K-means candidate selection for the
training-free model (see main paper Section 4.5), in Table 8.
We observe stability for K >= 25. The low number of can-
didates required is likely linked to the two Cube datasets
having reasonably compact illuminant distributions.

12

Best 25% Worst 25%

# candidates Mean Med.
2.06
5
1.50
25
1.47
50
1.38
100
1.32
120
1.33
150
1.39
200

2.79
2.24
2.25
2.15
2.10
2.16
2.16

# candidates Mean Med.
1.71
5
1.43
25
1.46
50
1.31
100
1.31
120
1.32
150
1.33
200

2.53
2.28
2.28
2.12
2.07
2.16
2.12

Tri.
2.20
1.64
1.66
1.55
1.53
1.53
1.59

Tri.
1.81
1.59
1.61
1.45
1.43
1.49
1.47

0.67
0.38
0.37
0.40
0.36
0.39
0.37

0.51
0.45
0.46
0.40
0.41
0.40
0.40

Table 7. Error for differing number of candidates for K-means
candidate selection. Angular error for Gehler-Shi dataset [47, 23].

Best 25% Worst 25%

6.23
7.34
5.51
5.16
5.10
5.25
5.20

6.06
5.63
5.52
5.31
5.12
5.34
5.27

Table 8. Angular error for the Cube challenge [31] trained only
on NUS [14] and Gehler-Shi [47, 23]. For our method, candidate
selection is performed on Cube+ [5] with varying K for K-means
candidate selection.

Ours (one model per device) Ours (multi-device training)

Camera
Canon EOS-1Ds Mark III
1.59
Canon EOS 600D
1.49
Fujiﬁlm X-M1
1.34
Nikon D5200
1.69
Olympus E-PL6
1.30
Panasonic Lumix DMC-GX1
1.43
Samgsung NX2000
1.54
Sony SLT-A57
1.50
Table 9. Median angular error of our method for each individual
camera of NUS [14].

1.49
1.23
1.33
1.50
1.13
1.21
1.42
1.41

C. NUS per-camera median angular error

We provide evidence supporting our paper claim that
training the proposed model with images from multiple
cameras outperforms individual, per-camera, model train-
ing (see Section 4.4, of the main paper).

We reiterate that folds are divided such that scene content
is consistent within a fold, across all cameras. This ensures
to avoid testing on familiar scene content, as observed by a
different camera during training. Towards reproducibility,
and fair comparison, our suppplementary material provides
the cross validation (CV) splits, used in the main paper, for
multi-device training. CV splits were generated manually
by ensuring that all images of the same scene (across differ-
ent cameras) belong to the same fold.

In Table 9 we report median angular-error for test im-
ages of the NUS [14] dataset. Multi-device training can be
seen to consistently improve the median angular error for
all NUS cameras at test time.

D. Candidate selection methods

We report additional

illuminant candidate selection

strategies explored during our investigation.
Uniform-sampling: we consider the global extrema of our
measured illuminant samples (max. and min. in each color
space dimension) and sample n points uniformly using an
g , b
[ r
g ] color space. These samples constitute our illuminant
candidates.
K-means clustering: cluster centroids deﬁne candidates,
as detailed in the main paper, Section 3.2 and other recent
color constancy work [38]. We use RGB color space for
clustering, and experimentally veriﬁed that both [ r
g ] and
RGB color spaces provided similar accuracy.
Mixture Model (GMM): we ﬁt a GMM to our measured
illuminant samples in [ r
g ] color space, and then draw n
samples from the GMM to deﬁne illuminant candidates.

g , b

g , b

We use 121 candidates (11×11 grid) for uniform candi-
date selection. For GMM candidate selection, we ﬁt 10 two-
dimensional Gaussian distributions and sample 120 candi-
dates.

In Table 10 we report inference performance on the Cube
challenge [31] data set using the described candidate selec-
tion strategies. We observe that simple uniform-sampling
candidate selection performs reasonably well. The strategy
provides an extremely simple implementation yet, by deﬁ-
nition, will also sample some portion of very unlikely can-
didates. We note, however, that if the interpolation between
candidates span the illuminant space, our method can learn
to interpolate these candidates appropriately, accounting for
this. The GMM approach also results in slightly weaker ac-
curacy performance c.f . K-means, motivating our choice
of sampling strategy in the experimental work for the main
paper.

E. Inference run-time

We report inference run-time results for the Gehler-Shi
dataset [47, 23] in Table 11. We note that our real-time in-
ference speed is obtained using a Nvidia Tesla V100 card
and unoptimised implementation (PyTorch 1.0 [39]). We
highlight that our algorithm is highly parallelizable, each
illuminant candidate likelihood can be computed indepen-
dently, however, we obtain the run-time with single-thread
implementation. Our input image resolution is 64×64 and
timing results are recorded using K-means candidate selec-
tion with K=120. The timing performance of other meth-

Method
Uniform
GMM
K-means

Mean Med.
1.20
2.11
1.10
2.27
1.06
1.99

Tri.
1.30
1.25
1.14

Best 25% Worst 25%

0.41
0.41
0.35

5.45
6.31
5.35

Table 10. Angular error for Cube challenge [31] of our method
using different candidate selection methods.

ods are obtained from their respective citations. We ac-
knowledge that timing comparisons are non-rigorous; re-
ported run-times are measured using differing hardware. To
provide additional fair comparison; Table 12 reports run-
times for both our method and the ofﬁcial1 FFCC [7] imple-
mentation run on Matlab R2019b, under common hardware
(Intel Core i9-9900X (3.50GHz)).

Method
CCC [6]
Cheng et al. 2015 [15]
FC4 [28]
FFCC [7] (model Q)
CM 2019 [25]
Ours
Table 11. Inference time for images of Gehler-Shi dataset [47, 23].
Run-time is provided in milliseconds (ms).

Hardware
2012 HP Z420 workstation (CPU)
Intel Xeon 3.5GHz (CPU)
Nvidia GTX TITAN X Maxwell (GPU)
Intel Xeon CPU E5-2680 (CPU)
Nvidia Tesla K40m (GPU)
Nvidia Tesla V100 (GPU)

Run-time (ms)
520
250
25
1.1
1
7.3

Method
FFCC [7] (model Q)
Ours

Run-time (ms)
1.2
128

Table 12. Inference time for images of Gehler-Shi dataset [47, 23].
Run-time is provided in milliseconds (ms). Run-time measured
using a Intel Core i9-9900X (3.50GHz) CPU.

F. Failure cases

In Figures F.1 to F.3 we provide observed limitations and
failure cases. Our method learns to interpolate between can-
didate illuminants, that are observed during training, but not
to extrapolate to new illuminants. In Figure F.1c, the ground
truth illuminant (green ﬁlled circle) is clearly out of distri-
bution, with no similar candidate illuminants observed dur-
ing training. The resulting inference accuracy in Figure F.1a
suffers as a result.

Further, our single global illuminant assumption can be
seen to be violated in Figure F.2. The predicted illuminant
attempts to balance the outer boundary portions of the wall
painting as achromatic, clearly illuminated from above (out
of shot). The measured ground truth illuminant captures the
desk lamp illumination, resulting in high angular error for
this image due to the global assumption.

Finally, in Figure F.3, we observe an example scene with
extreme ambiguities. Our method appears to infer that the
stone building in the scene background is achromatic, pro-
ducing a highly plausible image. Yet the measured ground-
truth illuminant illustrates the true building color to be of
mild beige-yellow.

G. Additional qualitative results

In Figure G.1, we provide additional qualitative results
in the form of test images from the NUS [14] dataset (Sony

1https://github.com/google/ffcc

13

(a)
Our
error = 20.12°)

prediction

(angular-

(b) Ground Truth

Our

(angular-

prediction

(a)
error = 6.14°)
Figure F.2. This scene can be observed to be illuminated by more
than one light source, breaking the single global illuminant as-
sumption. Images are rendered in sRGB color space.

(b) Ground Truth

(c) r

g , b

g plot of candidates

Figure F.1. This challenging scene is illuminated by a measured il-
lumination color not seen during training. In Figure F.1c the green
circular point corresponds to the ground-truth illuminant and can
be observed to be outwith the illuminant candidate distribution.
Images are rendered in sRGB color space.

Our

(angular-

prediction

(b) Ground Truth

(a)
error = 6.05°)
Figure F.3. An ambiguous scene with multiple plausible solutions,
highlighting the ill-posed nature of the color constancy problem.
Our method infers a plausible, yet incorrect, solution; that the
color of the stone building is white. Images are rendered in sRGB
color space.

camera). For each test sample we show the input image
and a white-balanced image, corrected using the ground-
truth illumination in addition to the output of our model
(“multi-device training + pretraining”), and that of FFCC
(model Q) [7]. Each row consists of: (a) the input image (b)
FFCC [7] (c) our prediction (d) ground truth.

In similar fashion to [6], we adopt the strategy of sort-
ing test images by the combined mean angular-error of the
two evaluated methods. We present images of increasing
average difﬁculty, sampled with a uniform spacing.
Im-
ages are corrected by inferred illuminants, applying an esti-

mated CCM (Color Correction Matrix), and standard sRGB
gamma correction. The Macbeth Color Checker is used to
generate the ground-truth and is present in the images, how-
ever the relevant regions are masked during both training
and inference. It can be observed in Figure G.1 in almost
all sampled cases, we see consistently improved results with
our approach.

We provide further extremely challenging examples
in Figure G.2. We explicitly select the ﬁve largest combined
mean angular-error images. We observe that our method
shows consistently strong performance and also highlight

14

that these samples constitute cases of both ambiguous and
multi-illuminant scenes, breaking the fundamental global il-
luminant assumption (made by both methods).

15

(a) Input image

(b) FFCC (error: 0.08°)

(c) Ours (error: 0.07°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 1.66°)

(c) Ours (error: 0.18°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 1.66°)

(c) Ours (error: 1.41°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 2.68°)

(c) Ours (error: 2.50°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 11.93°)

(c) Ours (error: 20.12°)

(d) Ground Truth

Figure G.1. Visual comparisons of FFCC [7] and our method. We sort test results of the Sony dataset (NUS [14]) by the combined (sum
total) mean angular error of the two evaluated methods and then uniformly sample images to select test images. Images are rendered in
sRGB color space.

16

(a) Input image

(b) FFCC (error: 11.87°)

(c) Ours (error: 13.17°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 16.66°)

(c) Ours (error: 7.24°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 12.27°)

(c) Ours (error: 10.23°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 9.36°)

(c) Ours (error: 11.21°)

(d) Ground Truth

(a) Input image

(b) FFCC (error: 10.37°)

(c) Ours (error: 7.49°)

(d) Ground Truth

Figure G.2. Visual comparison of FFCC [7] and our method with Sony dataset (NUS [14]). We select the ﬁve largest combined mean
angular error to explore method behaviour for images that are commonly challenging. Images are rendered in sRGB color space.

17

