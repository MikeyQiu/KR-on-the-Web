MERLiN: Mixture Effect Recovery in Linear Networks

Sebastian Weichwald, Moritz Grosse-Wentrup, Arthur Gretton

1

6
1
0
2
 
p
e
S
 
7
2
 
 
]
E
M

.
t
a
t
s
[
 
 
3
v
5
5
2
1
0
.
2
1
5
1
:
v
i
X
r
a

Abstract—Causal

the identiﬁcation of
inference concerns
cause-effect relationships between variables, e. g. establishing
whether a stimulus affects activity in a certain brain region. The
observed variables themselves often do not constitute meaningful
causal variables, however, and linear combinations need to be
considered. In electroencephalographic studies, for example, one
is not interested in establishing cause-effect relationships between
electrode signals (the observed variables), but rather between
cortical signals (the causal variables) which can be recovered as
linear combinations of electrode signals.

We introduce MERLiN (Mixture Effect Recovery in Linear
Networks), a family of causal
inference algorithms that im-
plement a novel means of constructing causal variables from
non-causal variables. We demonstrate through application to
EEG data how the basic MERLiN algorithm can be extended
for application to different
(neuroimaging) data modalities.
Given an observed linear mixture, the algorithms can recover
a causal variable that is a linear effect of another given vari-
able. That is, MERLiN allows us to recover a cortical signal
that is affected by activity in a certain brain region, while
not being a direct effect of the stimulus. The Python/Matlab
implementation for all presented algorithms is available on
https://github.com/sweichwald/MERLiN.

Index Terms—causal inference, causal variable construction,

linear mixtures

I. INTRODUCTION

Causal inference requires causal variables. Observed vari-
ables do not
themselves always constitute the causal re-
lata that admit meaningful causal statements, however, and
transformations of the variables might be required to isolate
causal signals. Images, for example, consist of microscopic
variables (pixel colour values) while the identiﬁcation of
meaningful cause-effect relationships requires the construction
of macroscopic causal variables (e. g. whether the image shows
a magic wand) [1]. That is, it is implausible that a descrip-
tion of effects of changing the colour value of one single
pixel, the microscopic variable, leads to characterisation of a
meaningful cause-effect relationship; however, the existence
the macroscopic variable, may lead to
of a magic wand,
meaningful statements of the form “manipulating the image
such that
it shows a magic wand affects the chances of
little Maggie favouring this image”. A similar problem often
occurs whenever only a linear mixture of causal variables
can be observed. In electroencephalography (EEG) studies, for

Sebastian Weichwald is with the Empirical Inference Department, Max
Planck Institute for Intelligent Systems, T¨ubingen, Germany, and has been
with the Centre for Computational Statistics and Machine Learning, University
College London, London, United Kingdom, e-mail: sweichwald@tue.mpg.de.
Inference Department,
Max Planck Institute for Intelligent Systems, T¨ubingen, Germany, e-mail:
moritzgw@tuebingen.mpg.de.

Moritz Grosse-Wentrup is with the Empirical

Arthur Gretton is with the Gatsby Computational Neuroscience
Unit, Sainsbury Wellcome Centre, London, United Kingdom, e-mail:
arthur.gretton@gmail.com.

example, measurements at electrodes placed on the scalp are
considered to be instantaneously and linearly superimposed
electromagnetic activity of sources in the brain [2]. Again,
statements about the microscopic variables are meaningless,
e. g. “manipulating the electrode’s signal affects the subject’s
attentional state”; however, macroscopic variables such as the
activity in the parietal cortex, extracted as a linear combination
of electrode signals, admit meaningful causal statements such
as “manipulating the activity in the parietal cortex affects the
subject’s attentional state”. Standard causal inference methods
require that all underlying causal variables, i. e., the sources
in the brain, are ﬁrst constructed –or rather recovered– from
the observed mixture, i. e., the electrode signals.

There exist a plethora of methods to construct macroscopic
variables both from images and linear mixtures. However,
prevailing methods to learn visual features [3], [4], [5] ignore
the causal aspect, and are fundamentally different from the re-
cent and (to our knowledge) only work that demonstrates how
visual causal features can be learned by a sequence of inter-
ventional experiments [1]. Likewise, methods to (re-)construct
variables from linear mixtures commonly ignore the causal
aspect and often rest on implausible assumptions. For instance,
independent component analysis (ICA), commonly employed
in the analysis of EEG data, rests on the assumption of
mutually independent sources [6], [7], [8]. One may argue
that muscular or ocular artefacts are independent of the
cortical sources and can be extracted via ICA [9], [10]. It
seems implausible, though, that cortical sources are mutually
independent. In fact, if they were mutually independent there
would be no cause-effect relationships between them. Thus,
methods ignoring the causal aspect are unsuited to construct
meaningful causal variables.

Mixture Effect Recovery in Linear Networks (MERLiN)
aims to construct a causal variable from a linear mixture
without requiring multiple interventional experiments. The
fundamental idea is to directly search for statistical in- and
dependences that imply, under assumptions discussed below, a
certain cause-effect relationship. In essence, given iid samples
of a univariate randomised variable S, a univariate causal
effect C1 of S, and a multivariate variable F , MERLiN
searches for a linear combination w such that w(cid:62)F is a
causal effect of C1, i. e., S → C1 → w(cid:62)F . This implements
the novel
the
resulting statistical properties guarantee meaningful cause-
effect relationships.

idea to construct causal variables such that

As an illustration, consider the directed acyclic graph (DAG)
S → C1 → C2 C3 shown in Figure 1, where the gap
indicates that C3 is disconnected from all other variables. In
this notation edges denote cause-effect relationships starting
at the cause and pointing towards the effect. S denotes a
randomised variable. We assume that only a linear mixture

This is the author’s version of an article that is published in IEEE Journal of Selected Topics in Signal Processing, 10(7), 1254–1266, 2016, doi: 10.1109/JSTSP.2016.2601144.
Copyright (c) 2016 IEEE. Personal use is permitted. For any other purposes, permission must be obtained from the IEEE by emailing pubs-permissions@ieee.org.

2

F1

F2

F3

observed linear mixture

II. PRELIMINARIES

A. Causal Bayesian Networks

linear mixing

In general causal inference requires three steps.

S

C1

C2

C3

causal variables

Problem illustration where S → C1 → C2 C3 is the underlying
Fig. 1.
causal graph and F1, F2, F3 are observed variables that are a linear mixture
of C1, C2, C3.

F = A[C1, C2, C3](cid:62) (A is an unknown mixing matrix) of
the causal variables C1, C2, C3 can be observed, and that v
such that C1 = v(cid:62)F is known. MERLiN’s goal is to recover
from the observed linear mixture F = [F1, F2, F3](cid:62) a causal
variable that is an effect of C1, i. e., to ﬁnd w such that w(cid:62)F
is an effect of C1, where w(cid:62)F = C2 is a valid solution.

We introduce the basic MERLiNΣ−1 algorithm that can
recover the sought-after causal variable when the cause-
effect relationships are linear with additive Gaussian noise
(cf. Section III). We also demonstrate how the algorithm can
be extended for application to different (neuroimaging) data
modalities by (a) including data speciﬁc preprocessing steps
into the optimisation procedure, and (b) incorporating a priori
domain knowledge (cf. Section V). Here, both concepts are
demonstrated through application to EEG data when cause-
effect relationships within individual frequency bands are of
interest.

Thus, we present

Σ−1 , and MERLiNbp+

three related algorithms MERLiN−1
Σ ,
MERLiNbp
Σ−1 that are based on optimisa-
tion of precision matrix entries (indicated by the subscript
Σ−1). The MERLiNbp
Σ−1 and MERLiNbp+
Σ−1 algorithms include
preprocessing steps that allow application to timeseries data,
identifying a linear combination of timeseries signals such
that the resulting log-bandpower (indicated by the superscript
bp) reveals the sough-after cause-effect relationship. A further
extension (indicated by the superscript bp+) takes domain
knowledge about time-lags into account.

[11],

neuroimaging

stimulus-based
Σ−1 and MERLiNbp+

the
studies
For
MERLiNbp
Σ−1 algorithms can establish a
cause-effect relationship between brain state features that are
observed only as part of a linear mixture. As such, MERLiN
is able to provide insights into brain networks beyond those
readily obtained from encoding and decoding models trained
on pre-deﬁned variables [12]. Furthermore, it employs the
framework of Causal Bayesian Networks (CBNs) that has
recently been fruitful in the neuroimaging community [13],
[14], [15], [16], [12], [17] — the important advantage over
it yields
methods based on information ﬂow being that
testable predictions on the impact of interventions [18], [19].

MERLiN shows good performance both on synthetic and
EEG data recorded during neurofeedback experiments. The
Python/Matlab implementation for all presented algorithms is
available on https://github.com/sweichwald/MERLiN.

1) construction of (causal) variables
2) inference of cause-effect relationships among the vari-

ables deﬁned in 1)

3) estimation of the functional form and strength of the

causal links established in 2)

In this manuscript we focus on and merge the ﬁrst two steps.
More speciﬁcally, a causal variable is implicitly constructed
by optimising for properties that at the same time establish
a speciﬁc cause-effect relationship for this variable. Here
we brieﬂy introduce the main aspects of Causal Bayesian
Networks (CBNs) that deﬁne causation in terms of effects of
interventions and allow inference of cause-effect relationships
(step 2) from conditional independences in the observed dis-
tribution. For an exhaustive treatment see [20], [21].

Deﬁnition 1 (Structural Equation Model). We deﬁne a struc-
tural equation model (SEM) S as a set of structural equations
Xi = fi(PAi, Ni), i ∈ N1:s (cid:44) {n ∈ N : 1 ≤ n ≤ s} where
the so-called noise variables are independently distributed
according to PN1,...,Ns = PN1 · · · PNs. For i ∈ N1:s the set
PAi ⊆ {X1, ..., Xs} \ Xi contains the so-called parents of
Xi and fi describes how Xi relates to the random variables
in PAi and Ni. This induces the unique joint distribution
denoted by PS (cid:44) PX1,...,Xs.1

Replacing at least one of the functions fi, i ∈ N1:s by a
constant ♠ yields a new SEM. We say Xi has been intervened
on, which is denoted by do(Xi = ♠), leads to the SEM
S| do(Xi = ♠), and induces the interventional distribution
PS| do(Xi=♠) (cid:44) PX1,...,Xs| do(Xi=♠).
Deﬁnition 2 (Cause and Effect). Xi is a cause of Xj (i, j ∈
N1:s, i (cid:54)= j) wrt. a SEM S iff there exists ♥ ∈ R such that
PXj | do(Xi=♥) (cid:54)= PXj .2 Xj is an effect of Xi iff Xi is a cause
of Xj. Often the considered SEM S is omitted if it is clear
from the context.

For each SEM S there is a corresponding graph GS (V, E)
with V (cid:44) {X1, ..., Xs} and E (cid:44) {(Xi, Xj) : Xi ∈
PAj, Xj ∈ V } that has the random variables as nodes and
directed edges pointing from parents to children. We employ
the common assumption that this graph is acyclic, i. e., GS
will always be a directed acyclic graph (DAG).

It

is insightful

to consider the following implication of
Deﬁnition 2: If in GS there is no directed path from Xi to
Xj, Xi is not a cause of Xj (wrt. S). The following example
shows that without further assumptions the converse is not true
in general, i. e., existence of a path does not generally imply a
cause-effect relationship. This nuisance will be accounted for
by the faithfulness assumption (cf. Deﬁnition 6 below). We
provide supportive graphical depictions in Figure 2.

1Note that the distribution PS has a density if PN1,...,Ns has a density

and the functions fi, i ∈ N1:s are differentiable.

2PXj | do(Xi=♥) and PXj denote the marginal distributions of Xj corre-

sponding to PS| do(Xi=♥) and PS respectively.

X1 = N1
X2 = −X1 + N2
X3 = X1 + X2 + N3

X1 = ♥
X2 = −X1 + N2
X3 = X1 + X2 + N3

X1

X3

X1

X3

X2

X2

(a) SEM S and graph GS .

(b) SEM S| do(X1 = ♥) and
graph GS| do(X1=♥).

X1 = N1
X2 = ♥
X3 = X1 + X2 + N3

X1 = N1
X2 = −X1 + N2
X3 = ♥

X1

X3

X1

X3

X2

X2

(c) SEM S| do(X2 = ♥) and
graph GS| do(X2=♥).

(d) SEM S| do(X3 = ♥) and
graph GS| do(X3=♥).

Fig. 2. SEMs and graphs accompanying example 3.

Example 3. Consider a SEM S with structural equations
and graph GS shown in Figure 2a and noise variables
(N1, N2, N3) ∼ N (0, 1)3. In GS there is a directed path
from X1 to X3 while
(in fact even a directed edge)
PX3| do(X1=♥) = PX3 = PN2+N3 = N (0, 2) for all ♥ ∈ R,
i. e., intervening on X2 does not alter the distribution of X1.
That is, X1 is not a cause of X3 wrt. S despite the existence
of the edge X1 → X3 (cf. Figure 2b).

Observe that PX3| do(X2=♥) = N (♥, 2) (cid:54)= N (0, 2) = PX3
for ♥ (cid:54)= 0, i. e., X2 is, as one may intuitively expect, a cause
of X3 wrt. S (cf. Figure 2c). Likewise, X3 indeed turns out
not to be a cause of X1 or X2 as can be seen from Figure 2d.

So far a DAG GS simply depicts all parent-child relation-
ships deﬁned by the SEM S. Missing directed paths indicate
missing cause-effect relationships. In order to specify the link
between statistical independence (denoted by ⊥⊥) wrt. the joint
distribution PS and properties of the DAG GS (representing a
SEM S) we need the following deﬁnitions.

Deﬁnition 4 (d-separation). For a ﬁxed graph G disjoint sets
of nodes A and B are d-separated by a third disjoint set C
(denoted by A ⊥d-sep B|C) iff all pairs of nodes a ∈ A and
b ∈ B are d-separated by C. A pair of nodes a (cid:54)= b is d-
separated by C iff every path between a and b is blocked by
C. A path between nodes a and b is blocked by C iff there is
an intermediate node z on the path such that (i) z ∈ C and z is
tail-to-tail (← z →) or head-to-tail (→ z →), or (ii) z is head-
to-head (→ z ←) and neither z nor any of its descendants is
in C.
Deﬁnition 5 (Markov property). A distribution PX1,...,Xs
satisﬁes the global Markov property wrt a graph G if

A ⊥d-sep B|C

=⇒ A ⊥⊥ B|C.

It satisﬁes the local Markov property wrt G if each node
is conditionally independent of its non-descendants given

3

its parents. Both properties are equivalent if PX1,...,Xs has
a density3 (cf. [22, Theorem 3.27]);
in this case we say
PX1,...,Xs is Markov wrt G.
Deﬁnition 6 (Faithfulness). PS generated by a SEM S is said
to be faithful wrt. GS , if

A ⊥d-sep B|C ⇐= A ⊥⊥ B|C.
Conveniently the distribution PS generated by a SEM S is
Markov wrt. GS (cf. [21, Theorem 1.4.1] for a proof). Hence,
if we assume faithfulness4 conditional independences and d-
separation properties become equivalent

A ⊥d-sep B|C ⇐⇒ A ⊥⊥ B|C

Summing up, we have deﬁned interventional causation in
terms of SEMs and have seen how a SEM gives rise to a
DAG. This DAG has two convenient features. Firstly, the DAG
yields a visualisation that allows to easily grasp missing cause-
effect relationships that correspond to missing directed paths.
Secondly, assuming faithfulness d-separation properties of this
DAG are equivalent to conditional independence properties
of the joint distribution. Thus, conditional
independences
translate into causal statements, e. g. ‘a variable becomes
independent of all its non-effects given its immediate causes’
or ‘cause and effect are marginally dependent’. Furthermore,
the causal graph GS can be identiﬁed from conditional in-
dependences observed in PS — at least up to a so-called
Markov equivalence class, the set of graphs that entail the
same conditional independences [23].

B. Optimisation on the Stiefel manifold

The proposed algorithms require optimisation of objective
functions over the unit-sphere Od−1 (cid:44) {x ∈ Rd : ||x|| = 1}.
For generality we view the sphere as a special case of the
Stiefel manifold Vd×p (cid:44) {M ∈ Rd×p : M (cid:62)M = Ip×p}
(p ≤ d) for p = 1. Implementing the respective objective
functions in Theano [24], [25], we use the Python toolbox
Pymanopt [26] to perform optimisation directly on the respec-
tive Stiefel manifold using a steepest descent algorithm with
standard back-tracking line-search.5 This approach is exact and
efﬁcient, relying on automated differentiation and respecting
the manifold geometry.

III. THE BASIC MERLIN ALGORITHM
We consider a situation in which only a linear combination
of observed variables constitutes a meaningful causal variable.
These scenarios naturally arise if only samples of a linear mix-
ture F1, ..., Fd(cid:48) of the underlying causal variables C1, ..., Cd
are accessible (cf. Figure 1). Standard causal inference meth-
ods cannot infer cause-effect relationships among the causal

3For simplicity we assume that distributions have a density wrt. some

product measure throughout this text.

4Intuitively, this is saying that conditional independences are due to the

causal structure and not accidents of parameter values [20, p. 9].

5For the experiments presented in this manuscript we set both the minimum
step size and gradient norm to 10−10 (arbitrary choice) and the maximum
number of steps to 500 (generous choice based on preliminary test runs that
met the former stopping criteria in much earlier iterations). Our toolbox allows
to adjust both parameters.

4

S

C1

C2

C5
...

Cd

C3

h1

C4

Fig. 3. Example of a causal graph underlying the described problem scenario
(cf. Section III-A). h1 is a hidden variable.

variables C1, ..., Cd without ﬁrst undoing the unknown linear
mixing (also known as blind source separation). MERLiN aims
to establish a cause-effect relationship among causal variables
in a linear network while reconstructing a causal variable at the
same time. In other words, a causal variable is reconstructed
by optimising for the statistical properties that imply a certain
kind of cause-effect relationship.

In this section we ﬁrst provide the formal problem de-
scription. We then derive sufﬁcient conditions for the kind
of cause-effect relationship MERLiN aims to establish, and
discuss assumptions on the linear mixing. Finally, the basic
precision matrix based MERLiN algorithm is introduced,
which optimises for these sufﬁcient statistical properties in
order to recover a linear causal effect from an observed linear
mixture.

A. Formal problem description

The terminology introduced in Section II-A allows to pre-

cisely state the problem as follows.

1) Assumptions: Let S and C1, ..., Cd denote (ﬁnitely
many) real-valued random variables. We assume existence of
a SEM S, potentially with unobserved variables h1, ..., hl, that
induces PS = PS,C1,...,Cd,h1,...,hl. We refer to the correspond-
ing graph GS as the true causal graph and call its nodes causal
variables. We further assume that

• S affects C2 indirectly via C1,6
• PS is faithful wrt. GS ,
• there are no edges in GS pointing into S.

In an experimental setting the last condition is ensured by
randomising S.7 Figure 3 depicts an example of how GS might
look.

2) Given data:
• m iid8 samples S = [s1, ..., sm](cid:62) of S and F =
[fi,j]i=1:m,j=1:d(cid:48) of F where F (cid:44) [F1, ..., Fd(cid:48)](cid:62) = AC
is the observed linear mixture of the causal variables
C (cid:44) [C1, ..., Cd](cid:62) and A ∈ Rd(cid:48)×d denotes the unknown
mixing matrix

• the linear combination v ∈ Rd(cid:48)

that extracts the causal

variable C1 = v(cid:62)F is assumed known

That is, we have samples of S, F , and C1 but not of C2, ..., Cd
where F is an unknown linear mixture of C1, ..., Cd.

6By saying a variable X causes Z indirectly via Y we imply (a) existence
of a directed path X (cid:57)(cid:57)(cid:75) Y (cid:57)(cid:57)(cid:75) Z, and (b) that there is no directed path
X (cid:57)(cid:57)(cid:75) Z without Y on it (this also excludes the edge X → Z).

7Randomisation corresponds to an intervention: the structural equation of S
is replaced by S = N1 where N1 is an independent randomisation variable,
e. g. assigning placebo or treatment according to an independent Bernoulli
variable.

8independent and identically distributed

3) Desired output: Find w ∈ Rd(cid:48)

such that aCi = w(cid:62)F
where Ci is an effect of C1 (i ∈ N2:d, a ∈ R \ {0}). In other
words, the aim is to recover a causal variable –up to scaling–
that is an effect of C1. For example, recovery of the causal
variable C2 is a valid solution. The factor a reﬂects the scale
indeterminacy that results from the linear mixing, i. e., since
A is unknown the scale of the causal variables cannot be
determined unless further assumptions are employed or a priori
knowledge is available.

B. MERLiN’s strategy

We are given that there exists at least one causal variable
C2 that is indirectly affected by S via C1. However, we only
have access to samples of the linear mixture F and samples
of S. Note the following properties of C2:

• Since PS is faithful wrt. GS it follows that C2 (cid:54)⊥⊥ C1 (and

C2 (cid:54)⊥⊥ S).

• Since PS is Markov wrt. GS it follows that C2 ⊥⊥ S|C1.
We can derive the following sufﬁcient conditions for a causal
variable to be indirectly affected by S via C1.
Claim 7. Given the assumptions in Section III-A1 and a causal
variable Y . If Y (cid:54)⊥⊥ C1 and Y ⊥⊥ S|C1, then S indirectly
affects Y via C1. In particular, a directed path from C1 to Y ,
denoted by C1 (cid:57)(cid:57)(cid:75) Y , exists.

Proof: From Y (cid:54)⊥⊥ C1 and PS being Markov wrt. GS it
follows that Y and C1 are not d-separated in GS by the empty
set. In GS there must be at least one path C1 (cid:57)(cid:57)(cid:75) Y , C1 (cid:76)(cid:57)(cid:57) Y
or C1 (cid:76)(cid:57)(cid:57) X (cid:57)(cid:57)(cid:75) Y for some node X. By assumption C1
is affected by S, i. e., we have S (cid:57)(cid:57)(cid:75) C1 in GS . Hence, in
GS there must be at least one path S (cid:57)(cid:57)(cid:75) C1 (cid:57)(cid:57)(cid:75) Y , S (cid:57)(cid:57)(cid:75)
C1 (cid:76)(cid:57)(cid:57) Y or S (cid:57)(cid:57)(cid:75) C1 (cid:76)(cid:57)(cid:57) X (cid:57)(cid:57)(cid:75) Y for some node X. Under
the assumption of faithfulness, the latter two cases contradict
Y ⊥⊥ S|C1. Hence, in GS at least one path S (cid:57)(cid:57)(cid:75) C1 (cid:57)(cid:57)(cid:75) Y
exists.

From Y ⊥⊥ S|C1 and PS being faithful wrt. GS it follows
that Y and S are d-separated in GS by C1. That is, given C1
every path between S and Y is blocked. In particular, in GS
there is no edge S → Y and no path S (cid:57)(cid:57)(cid:75) Y without C1 on
it. Hence, Y is indeed indirectly affected by S via C1.

This leads to our general idea on how to ﬁnd a linear
combination that recovers a causal effect of C1. If MERLiN
ﬁnds w ∈ Rd(cid:48)
such that the following two statistical properties
hold true

(a) w(cid:62)F (cid:54)⊥⊥ C1, and
(b) w(cid:62)F ⊥⊥ S|C1

then we have identiﬁed a candidate causal effect of C1, i. e.,
we have identiﬁed a variable such that S → C1 → w(cid:62)F . Note
that conditioning on S cannot unblock a path that was blocked
before since there are no edges pointing into S; conversely the
conditional dependence w(cid:62)F (cid:54)⊥⊥ C1|S implies the marginal
dependence w(cid:62)F (cid:54)⊥⊥ C1. Hence, MERLiN can also optimise
for the following alternative statistical properties

(a’) w(cid:62)F (cid:54)⊥⊥ C1|S, and
(b) w(cid:62)F ⊥⊥ S|C1

to recover a candidate causal effect of C1. This reformulation
is useful since it allows optimisation of two analogous condi-
tional (in)dependence properties instead of marginal and con-
ditional (in)dependence. Ideally and under mixing assumptions
discussed below, optimising w wrt. these statistical properties
will indeed recover a causal variable, i. e., w(cid:62)F = aCi
(i ∈ N2:d, a ∈ R \ {0}), that is an effect of C1. Note that this
approach even works in the presence of hidden confounders.

C. Mixing assumptions

MERLiN’s strategy presented in the previous section is to
optimise a linear combination of the observed linear mixture
such that
two statistical properties are fulﬁlled. However,
without imposing further assumptions on the linear mixing
it may be impossible to recover the desired causal variable by
this procedure. Here we discuss problems that can occur for
arbitrary mixing and specify our mixing assumptions, namely
that A is an orthogonal d × d matrix.

In the ﬁrst place, there may not exist a solution to MER-
LiN’s problem if A has rank less than d.9 Hence, assume that
A has rank d and, for simplicity, that A is a square d × d
matrix. This guarantees existence of a solution: if the mixing
matrix A is invertible a solution to the problem is to recover
C2 via w = A−1

2,1:d.

However, if we only assume A to be invertible MERLiN
may not be able to recover (a multiple of) a causal variable
Ci
from the sought-after statistical properties alone. The
following example demonstrates the problem that arises from
the fact that C1 itself is part of the observed linear mixture.

Example 8. Assume S → C1 → C2 C3 is the true but
unknown causal graph, where the gap indicates that C3 is
disconnected from all other variables. Assume all variables
are non-degenerate and that the unknown mixing matrix A is
invertible. Then, any variable recovered as linear combination
from the observed linear mixture F = AC = A[C1, C2, C3](cid:62)
can be written as
(cid:16)
1,1:d + bA−1
for some a, b, c ∈ R.

F = aC1 + bC2 + cC3 (cid:44) Ya,b,c

2,1:d + cA−1

aA−1

3,1:d

(cid:17)

MERLiN aims to recover the causal variable C2 (up to
scaling) by optimising a, b, c such that the statistical properties

• Ya,b,c (cid:54)⊥⊥ C1 (or equivalently Ya,b,c (cid:54)⊥⊥ C1|S), and
• Ya,b,c ⊥⊥ S|C1

hold true (cf. Section III-B). Indeed bC2 = Y0,b,0 (b (cid:54)= 0)
fulﬁls these statistical properties and is the desired output.
However, all Ya,0,c (a, c (cid:54)= 0) likewise fulﬁl the statistical
properties while not being (a multiple of) a causal variable.

This example demonstrates that without imposing further
constraints on the linear mixing MERLiN may recover C1
(ensuring the dependence on S) with independent variables
added on top (ensuring conditional independence of S given

9Note that A being at least rank d is not a necessary condition, i. e.,
an effect of C1 may be recoverable even in cases where A has rank less
than d. As an example consider the case where C2 is an effect of C1 and
A = [Id×2, 0d×(d−2)]. However, the focus is a sufﬁcient condition for the
existence of a solution.

5

C1), e. g. Y1,0,1 = C1 + C3 in above example. Although the
sought-after statistical properties hold true for this variable,
this is clearly not a desirable output and does not recover a
causal variable.

One way to mitigate this situation is to restrict search to the
orthogonal complement v⊥ of v. This way, the signal of C1 in
the linear mixture F is attenuated. In particular, if the mixing
matrix A is orthogonal restricting search to v⊥ amounts to
complete removal of C1’s signal from F . We therefore assume
that A is an orthogonal d × d matrix and restrict the search to
v⊥. It is then no longer possible to add arbitrary multiples
of C1 onto independent variables to introduce the sought-
after dependence, i. e., the recovery of non-causal variables
like C1 + C3 in above example is prevented.

Note that while adding independent variables onto effects
is still possible (e. g. consider Y0,1,1 = C2 + C3 in above
example), it will be counter-acted by setting up the objective
function accordingly — roughly speaking, as we ‘maximise
dependence’, then these independent variables will be sup-
pressed, since they act as noise and reduce dependence.

D. MERLiNΣ−1: precision matrix magic

The basic MERLiN algorithm aims to recover a linear
causal effect from an observed linear mixture. In particular,
we assume that the cause-effect relationships S → C1 → C2
between the underlying causal variables S, C1 and C2 are
linear with additive Gaussian noise. In such a linear network,
zero entries in the precision matrix imply missing edges in the
graph [22]. Hence, if Y is a linear effect of C1 the precision
matrix of the three variables S, C1 and Y is of the form

Σ−1 (cid:44) Σ−1

S,C1,Y =


(cid:63)
(cid:63)

0

(cid:63)
(cid:63)
(cid:63)


0
(cid:63)

(cid:63)

where stars indicate non-zero entries. This implies the partial
correlations ρY,C1|S = (cid:63) and ρY,S|C1 = 0 which, in the Gaus-
sian case, amounts to the desired conditional (in-)dependences
(a’) Y (cid:54)⊥⊥ C1|S and (b) Y ⊥⊥ S|C1 (cf. Section III-B) [27].

Exploiting this link, the precision matrix based MERLiNΣ−1
algorithm (cf. Algorithm 1) implements the general idea pre-
sented in Section III-B by maximising the objective function10

f (w) =

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:44) (cid:98)Σ−1

where (cid:98)Σ−1
S,C1,w(cid:62)F (here we assumed d ≤ m and
w
invertibility). Optimisation is performed over the unit-sphere
Od−2 after projecting F onto the orthogonal complement v⊥.

IV. SIMULATION EXPERIMENTS

A. Description of synthetic data

Dd×m
T

(a, b) denotes the synthetic dataset that is generated
by Algorithm 2. It consists of samples of an orthogonal linear
mixture of underlying causal variables that follow the causal
graph shown in Figure 3. The parameters a and b determine

10For numerical reasons one might want to use the approximation
| · | for small 0 < (cid:15) ∈ R to ensure that f is differentiable everywhere.

· + (cid:15) ≈

√

6

Algorithm 1 MERLiNΣ−1
Input: S ∈ Rm×1, F ∈ Rd×m, v ∈ Rd×1
Procedure:

• set C := F (cid:62)v and F := P (v)F ∈ R(d−1)×m
• deﬁne the objective function for w ∈ Od−2 as
(cid:12)
(cid:12)
(cid:12)
(cid:12)

f (w) =

(cid:98)Σ−1
w

(cid:98)Σ−1
w

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

2,3

1,3

(cid:16)

(cid:17)

(cid:16)

(cid:17)

where the empirical precision matrix is

Algorithm 2 Generating the synthetic dataset Dd×m
Input: d, m ∈ N, a, b ∈ R, T ∈ {G, B}
Procedure:

T

(a, b).

• generate a random orthogonala d × d matrix A by
Gram-Schmidt orthonormalising a matrix with entries
independently drawn from a standard normal distribution

1,1:d = (cid:0)A(cid:62)(cid:1)
• set v(cid:62) := (cid:0)A−1(cid:1)
2,1:d = (cid:0)A(cid:62)(cid:1)
G0 := (cid:0)A−1(cid:1)
• set w(cid:62)
• generate independent mean parameters µ1, ..., µd, µh1

2,1:d

1,1:d

(cid:98)Σ−1

w =

(cid:18) 1

m − 1

(cid:2)S, C, F (cid:62)w(cid:3)(cid:62)

Hm

(cid:2)S, C, F (cid:62)w(cid:3)

(cid:19)−1

from N (0, 1)

• generate m independent samples according to the follow-

• optimise f as described in Section II-B to obtain the

ing SEM

vector w∗ ∈ Od−2

Output: w = P (v)(cid:62)w∗ ∈ Od−1

Deﬁnitions:

• P (v) is the (d − 1) × d orthonormal matrix that accom-
plishes projection onto the orthogonal complement v⊥

• Hm = Im×m − 1

m 1m×m is the m × m centering matrix

S =
N0
C1 =µ1+ N1 + S + bh1
C2 =µ2+aN2 + C1
C3 =µ3+ N3 + S
C4 =µ4+ N4 + bh1
Ck =µk+ Nk

(k ∈ N5:d)

the statistical properties of the generated dataset as follows.
The parameter b adjusts the severity of hidden confounding
between C1 and C4. Note also that the link between S and
C2 is weaker for higher values of b, i. e., corr(S, C2)2 =
1/(2+b2+a2). The link between C1 and C2 becomes noisier
for higher values of a, i. e., corr(C1, C2)2 = (2+b2)/(2+b2+a2).
Furthermore, the value of the objective function for recovering
C2 is lower for higher values of a since –in the inﬁnite sample
limit– we have

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

Σ−1

S,C1,C2

(cid:17)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

2,3

Σ−1

S,C1,C2

(cid:17)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

=

1
a2

1,3

Hence, these datasets allow to analyse the behaviour of the
algorithm for cause-effect relationships of different strengths
and its robustness against hidden confounding.

B. Assessing MERLiN’s performance

We introduce two performance measures to assess MER-
LiN’s performance on synthetic data with known ground truth
wG0. Since a solution can only be identiﬁed up to scaling, we
only need to consider the (d − 1)-sphere Od−1 = {x ∈ Rd :
||x|| = 1}. The closer a vector w ∈ Od−1 or its negation −w
is to the ground truth wG0 ∈ Od−1 the better. This leads to
the performance measure of angular distance

andiwG0 (w) (cid:44) min ((cid:94)(w, wG0), (cid:94)(−w, wG0)) ∈ [0, π/2]

Another approach is to assess the quality of the recovered
w by the probability of obtaining a vector that is closer to
wG0 if chosen uniformly at random on the (d − 1)-sphere. We
deﬁne the probability of a better vector as

pobvwG0(w) (cid:44) P [|wr · wG0| > |w · wG0|]
where wr ∼ Unif(Od−1) and d is the dimension of the
input vector. This quantity is obtained by dividing the area

where (N1, ..., Nd) ∼ N (0, 1)d, h1 ∼ N (µh1, 1), and
N0 ∼ Unif({−1, +1}) if T = B or S ∼ N (0, 1) if
T = G

• arrange the m samples s1, ..., sm of S in a column vector

S

• arrange each sample of (C1, ..., Cd) in a column vector
and (pre-)multiply by A to obtain the corresponding
sample of (F1, ..., Fd)

• arrange the m samples of (F1, ..., Fd) as columns of a

d × m matrix F

Output: S, F , v, wG0

aSince we can ignore scaling, it is not a problem that we in
fact generate an orthonormal matrix.

of the smallest hyperspherical cap centred at wG0 that con-
tains w or −w by half the area of the (d − 1)-sphere.
The former equals the area of the hyperspherical cap of
height h = 1 − |w · wG0|, the latter equals the area of the
hyperspherical cap of height r = 1. Exploiting the concise
formulas for the area of a hyperspherical cap with radius r
presented in [28] we obtain

pobvwG0 (w) = Ih(2−h)

(cid:19)

(cid:18) d − 1
2

,

1
2

where h = 1−|w ·wG0| and Ix(a, b) is the regularized incom-
plete beta function. It is interesting to note that Ix((d−1)/2, 1/2)
is the cumulative distribution function of a Beta((d−1)/2, 1/2)
distribution such that |wr · wG0|2 ∼ Beta(1/2, (d−1)/2).

For simplicity we drop the ground truth vector wG0 from
the notation and simply assume that the corresponding ground
truth vector is always the point of reference. Both performance
measures are related inasmuch as pobv(w) = 0 iff andi(w) =
0 and pobv(w) = 1 iff andi(w) = π/2. However, they capture
somewhat complementary information: andi(w) assesses how

7

The boxplots summarise the results of 100 experiments running
Fig. 4.
MERLiNΣ−1 on datasets Dd×m
(a, b) for T = G (cf. Section IV-A). The
performance measure pobvwG0
(w) is shown on the y-axes and described
in Section IV-B (low values are good). The box for d = 100, m = 50 is
missing since MERLiNΣ−1 can only be applied if d ≤ m.

T

The boxplots summarise the results of 100 experiments running
Fig. 5.
MERLiNΣ−1 on datasets Dd×m
(a, b) for T = G (cf. Section IV-A). The
performance measure andiwG0 (w) is shown on the y-axes and described
in Section IV-B (low values are good). The box for d = 100, m = 50 is
missing since MERLiNΣ−1 can only be applied if d ≤ m.

T

close the vector is in absolute terms, while pobv(w) accounts
for the increased problem complexity in higher dimensions.

C. Experimental results

We applied the precision matrix based MERLiNΣ−1 algo-
rithm (cf. Algorithm 1) to the synthetic datasets Dd×m
(a, b)
described in Section IV-A. The results of 100 runs11 for dif-
ferent conﬁgurations of d, m, a, b are summarised as boxplots
in Figures 4 and 5. Recall that lower values of pobvwG0 (w)
and andiwG0 (w) indicate that w is closer to the ground truth
wG0. We observe the following:

T

• The results for Gaussian (T = G) or binary (T = B; not

shown here) variable S are indistinguishable.

• Performance is insensitive to the severity of hidden
confounding, which can be seen by comparing the plots
row-wise for the different values of b. This behaviour is
expected since C4 (cid:54)⊥⊥ S|C1.

• Performance decreases with increasing noise level, i. e.,
with increasing values of a. Note that C2 is a sum of C1
and noise aN2 with variance 2 + b2 and a2 respectively.
• The problem becomes harder in higher dimensions, re-
sulting in worse performance. However, the results for
pobvwG0 (w) indicate that even if the solution is not
that close to wG0 in an absolute sense (andiwG0(w))
the solution is good in a probabilistic sense.

• More samples increase performance. Especially if the
noise level a and the dimension d are not both high at the
same time, MERLiN still achieves good performance on
m = 300 samples (cf. the results for a = 0.1, d = 100
or a = 1, d = 5).

11For each run we create a new dataset. This is the case for all ex-
periments on synthetic data. The performance measures andiwG0 (w) and
(w) are always considered wrt. the corresponding wG0 of each
pobvwG0
dataset instance.

V. HOW TO EXTEND MERLIN

In this section we demonstrate how the basic MERLiN
algorithm can be extended to enable application to different
data modalities by (a) including data speciﬁc preprocessing
steps into the optimisation procedure (cf. Section V-A), and
(b) incorporating a priori domain knowledge (cf. Section V-B).
In particular, we demonstrate this for neuroimaging data,
since stimulus-based experiments pose a prototype application
scenario for MERLiN for the following reasons.

1) In stimulus-based experiments the stimulus S is ran-
domised, meeting the assumption in Section III-A1 [11].
2) Recent work in the neuroimaging community focusses
on functional networks,
i. e., a (linear) combination
of activity spread across the brain that is functionally
(read causally) relevant [29]. Additionally, the recorded
activity is often assumed to be a linear combination of
underlying cortical variables, as for example in EEG [2].
3) Simple univariate methods sufﬁce to identify an effect

C1 of S [12, Interpretation rule S1].

The proposed method can readily be applied and com-
plement the standard analysis procedures employed in such
experiments. More precisely, MERLiN can recover meaningful
cortical networks (read causal variables) that are causally
affected by C1, thereby establishing a cause-effect relationship
between two functional brain state features.

A. MERLiNbp

Σ−1: adaptation to EEG data

Analyses of EEG data commonly focus on trial-averaged
log-bandpower in a particular frequency band. Accordingly,
we aim at identifying a linear combination of electrode signals
such that the trial-averaged log-bandpower of the recovered
signal is indirectly affected by the stimulus via another pre-
deﬁned cortical signal. We demonstrate how to do so by
extending the basic MERLiN algorithm to include the log-
bandpower computation into the optimisation procedure.

8

More precisely, we consider EEG trial-data of the form
(cid:101)F ∈ Rd×m×n where d denotes the number of electrodes, m
the number of trials, and n the length of the time series (cid:101)Fi,j,1:n
for each electrode i ∈ N1:d and each sample j ∈ N1:m.12
The aim is to identify a linear combination w ∈ Rd×1 such
that the log-bandpower of the resulting one-dimensional trial
signals w(cid:62) (cid:101)F1:d,j,1:n is a causal effect of the log-bandpower of
the one-dimensional trial signals v(cid:62) (cid:101)F1:d,j,1:n. However, since
the two operations of computing the log-bandpower (after
windowing) and taking a linear combination do not commute,
we cannot compute the trial-averaged log-bandpower for each
channel ﬁrst and then apply the standard precision matrix
based MERLiNΣ−1 algorithm. Instead, MERLiNbp
Σ−1 has been
adapted to the analysis of EEG data by switching in the log-
bandpower computation.

To simplify the optimisation loop we exploit the fact that
applying a Hanning window13 and the FFT to each channel’s
signal commutes with taking a linear combination of the
windowed and Fourier transformed time series. Note that av-
eraging of the log-moduli (log(| · |)) of the Fourier coefﬁcients
does not commute with taking a linear combination. Hence,
windowing and computing the FFT is done in a separate
preprocessing step (cf. Algorithm 3), while the trial-averaged
bandpower is computed within the optimisation loop after
taking the linear combination. Implementation details for the
bandpower and precision matrix based MERLiNbp
Σ−1 algorithm
are described in Algorithm 4. To ease implementation we treat
the complex numbers as two-dimensional vector space over the
reals.

B. MERLiNbp+

Σ−1: incorporating a priori knowledge
Here we demonstrate how to incorporate a priori do-
main knowledge by modifying the objective function of the
MERLiNbp
Σ−1 algorithm. Utilising a priori knowledge about
volume conduction in EEG recordings results in the reﬁned
MERLiNbp+

Σ−1 algorithm.

A cortical source projects into more than one EEG elec-
trode. In general, these volume conduction artefacts might lead
to wrong conclusions about interactions between sources [30].
Imaginary coherency, as introduced in [31], may help to
differentiate volume conduction artefacts from interactions
between cortical sources. To brieﬂy recap the rationale, we
employ the common assumption that the signals measured at
the EEG electrodes have no time-lag to the cortical signals
[32]. The coherency at a certain frequency of two time series
X and Y with Fourier coefﬁcients x(j), y(j), j ∈ N1:n is
deﬁned as

cohX,Y (j) =

E [x(j)y∗(j)]
(cid:112)E [x(j)x∗(j)] E [y(j)y∗(j)]

where ∗ denotes complex conjugation. Next consider the
coherency of X and Y + X

cohX,Y +X =

√

E[x(j)y∗(j)]+E[x(j)x∗(j)]
E[x(j)x∗(j)]E[(y(j)+x(j))(y∗(j)+x∗(j))]

12Note that the MERLiNΣ−1 algorithm takes data of the form F ∈ Rd×m

as input and cannot readily be applied to timeseries data (cid:101)F ∈ Rd×m×n.

13We apply a Hanning window in order to keep the feature computation in

line with [17].

Algorithm 3 Preprocessing for bp algorithm.
Input: S ∈ Rm×1, (cid:101)F ∈ Rd×m×n, v ∈ Rd×1, the sampling
frequency fs, and the desired frequency range deﬁned by ω1
and ω2
Procedure:

• set a := (cid:98) ω1n
fs
• for i from 1 to d, for j from 1 to m

(cid:99), b := (cid:98) ω2n
fs

(cid:99), and n(cid:48) := b − a + 1

– center, apply Hanning window and compute FFT,
treat (cid:101)Fi,j,1:n as a column vector and set

i. e.,
(cid:101)Fi,j,1:n := T W Hn (cid:101)Fi,j,1:n

• extract relevant Fourier coefﬁcients corresponding to v,

i. e., set

V Im := Im

v(cid:62) (cid:101)F1:d,j,a:b

V Re := Re

v(cid:62) (cid:101)F1:d,j,a:b

(cid:16)

(cid:16)

(cid:17)

(cid:17)

j=1:m

j=1:m

∈ Rm×n(cid:48)

∈ Rm×n(cid:48)

• remove direction v from (cid:101)F , i. e., for j from 1 to m set

F Im

1:(d−1),j,1:n(cid:48) := Im

P (v) (cid:101)F1:d,j,a:b

F Re

1:(d−1),j,1:n(cid:48) := Re

P (v) (cid:101)F1:d,j,a:b

(cid:16)

(cid:16)

(cid:17)

(cid:17)

∈ R(d−1)×n(cid:48)

∈ R(d−1)×n(cid:48)

such that F Im, F Re ∈ R(d−1)×m×n(cid:48)

Output: V Im, V Re ∈ Rm×n(cid:48)

and F Im, F Re ∈ R(d−1)×m×n(cid:48)

Deﬁnitions:

• P (v) is the (d − 1) × d orthonormal matrix that accom-
plishes projection onto the orthogonal complement v⊥

• Hn = In×n − 1
(cid:104) 1
• W =
2

(cid:16)

1 − cos 2πk
n−1

(cid:17)(cid:105)

window matrix
• T = (cid:2)exp (cid:0)−ı2πk l

(cid:1)(cid:3)

n

n 1n×n is the n × n centering matrix

is the n × n Hanning

k,l=1:n

k,l=1:n is the n × n FFT matrix

Algorithm 4 MERLiNbp
Refer to Algorithm 5 and instead use the objective function

Σ−1

f (w) =

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

and observe that E [x(j), x∗(j)]
is real. This shows that
non-zero imaginary coherency icohX,Y (j) (cid:44) Im(cohX,Y (j))
cannot be due to volume conduction and indicates time-
lagged interaction between sources since it
implies that
Im(E [x(j)y∗(j)]) (cid:54)= 0.14

This a priori knowledge is incorporated in MERLiNbp+

Σ−1 by

adapting the objective function to be

f (w) =

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

n(cid:48)
(cid:88)

j=1

(cid:12)
(cid:12)
(cid:12)
icoh(j)
(cid:12)
(cid:12)
(cid:12)

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

·

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

where (cid:98)Σ−1
w denotes the empirical precision matrix of the log-
bandpower features after taking the linear combination w

14Here we exploit the assumption of instantaneous mixing mentioned above.

Algorithm 5 MERLiNbp+
Σ−1
Input: S ∈ Rm×1, (cid:101)F ∈ Rd×m×n, v ∈ Rd×1, the sampling
frequency fs, and the desired frequency range deﬁned by ω1
and ω2
Procedure:

• obtain V Im, V Re ∈ Rm×n(cid:48)

and F Im, F Re ∈ Rd(cid:48)×m×n(cid:48)

via Algorithm 3 where d(cid:48) = d − 1
i,j )2
+(V Re
(cid:80)n(cid:48)
n

j=1 log∗

• set C :=

(V Im

(cid:32) (cid:113)

1
n(cid:48)

(cid:32)

i,j )2

(cid:33)(cid:33)

∈ Rm×1

i=1:m

(average log-bandpower per trial)

• deﬁne the objective function for w ∈ Od−2 as

f (w) =

icoh(j)

·

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

n(cid:48)
(cid:88)

j=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

where the empirical precision matrix is

(cid:98)Σ−1

w =

(cid:18) 1

m − 1

[S, C, Dw](cid:62) Hm [S, C, Dw]

(cid:19)−1

,

the average log-bandpower per trial depending on w is


 1
n(cid:48)

Dw =

(cid:80)n(cid:48)

j=1 log∗





(cid:114)(cid:16)

w(cid:62)F Im

1:d(cid:48) ,i,j

+

w(cid:62)F Re

1:d(cid:48),i,j

(cid:17)2

(cid:16)

n





(cid:17)2





∈ Rm×1,

i=1:m

and the imaginary coherency icoh(j) for each frequency
j ∈ N1:n(cid:48) equals
(cid:104)V Im

i,j ·w(cid:62)F Re
i,j )2(cid:69)

i=1:m

1:d(cid:48) ,i,j −V Re
(cid:28)(cid:16)

1:d(cid:48) ,i,j(cid:105)i=1:m
i,j ·w(cid:62)F Im
(cid:17)2

(cid:16)

w(cid:62)F Im

1:d(cid:48) ,i,j

+

w(cid:62)F Re

1:d(cid:48),i,j

(cid:17)2(cid:29)

(cid:115)

(cid:68)(V Im

i,j )2

+(V Re

i=1:m

• optimise f as described in Section II-B to obtain the

vector w∗ ∈ Od−2

Output: w = P (v)(cid:62)w∗ ∈ Od−1

Deﬁnitions:

• P (v) is the (d − 1) × d orthonormal matrix that accom-
plishes projection onto the orthogonal complement v⊥

• Hm = Im×m − 1
m 1m×m is the m × m centering matrix
• log∗ is the extended log function with log∗(x) =

log(x), x > 0 and log∗(0) = 0

• the notation(cid:104)·(cid:105)i=1:m denotes the empirical mean, i. e.,

(cid:104)ai(cid:105)i=1:m = 1
m

(cid:80)m

i=1 ai

and icoh(j) denotes the imaginary coherency between the
signals corresponding to v and w estimated as average over
all trials (cf. Algorithm 5 for details). While there are several
ways of setting up the objective function we have chosen
this multiplicative set-up as it quite naturally captures the
following idea: whenever we ﬁnd the resulting bandpower to
be dependent on C1 we also want to ensure that this is not just
an artefact due to volume conduction. Note that this extension
may also help disentangle true cortical sources, i. e., the causal
variables, by avoiding a mixture of distinct sources affected
by C1 that have different time-lags and hence result in lower
imaginary coherency.

9

VI. EXPERIMENTS ON EMPIRICAL EEG DATA

We ran simulation experiments with the MERLiNbp

A. Sanity check of the included log-bandpower computation
Σ−1 algo-
rithm analogous to those presented in Section IV. For this
we used datasets T Dd×m×n
(a, b) that are generated from
Dd×m
(a, b) with ﬁxed mixing matrix A = Id×d as follows.
T
While S, v, wG0 remain unchanged the d × m matrix F is
replaced by a d × m × n tensor (cid:101)F that consists of dm chunks
of randomly chosen real EEG signals of length n. Each signal
(cid:101)Fi,j,1:n is modiﬁed such that the log-bandpower in the desired
frequency band equals Fi,j.

T

The log-bandpower computation was incorporated into the

algorithm in such a way that the optima for MERLiNbp
Σ−1
on T Dd×m×n
(a, b) coincide with those for MERLiNΣ−1 on
T
the corresponding dataset Dd×m×n
(a, b); however, the shape
of the objective functions is different. Accordingly and as
expected, sanity checks of MERLiNbp
(a, b)
show trends for varying parameters T, d, m, a, b similar to
those discussed in Section IV-C.

Σ−1 on T Dd×m×n

T

T

B. Description of empirical data

We next evaluate MERLiN with EEG data recorded during
a neurofeedback experiment [33].15 Subjects in this study
were instructed in pseudo-randomised order to up- or down-
regulate the amplitude of γ-oscillations (55–85 Hz) in the right
superior parietal cortex (SPC). For the feedback the activity
in the SPC was extracted by a linearly-constrained-minimum
variance (LCMV) beamformer [34] that was trained on 5 min
resting-state EEG data.

Each recording session (3 subjects a 2 sessions referred to
as S1R1, S1R2, S2R1, ...) consists of 60 trials of 60 seconds
each. The stimulus variable S is either +1 or −1 depending
on whether the subject was instructed to up- or down-regulate
γ-power in the SPC. Electromagnetic artefacts were attenu-
ated as described in [33, Section 2.4.1] and the EEG data
downsampled to 250 Hz. We are also given the spatial ﬁlter
v ∈ R121×1 for each session, i. e., the beamformer that was
used to extract the feedback signal. Thus, the data of one
session can be arranged as S ∈ {−1, +1}60×1, v ∈ R121×1
and (cid:101)F ∈ R121×60×15000 where (cid:101)F contains the timeseries (of
length 15000) for each channel and trial.

C. Assessing MERLiN’s performance

MERLiN’s performance on these data is assessed by com-
paring against results from an earlier exhaustive search ap-
proach. The hypothesis in [17] is that γ-oscillations in the
SPC modulate γ-oscillations in the medial prefrontal cortex
(MPFC) and was derived from previous transcranial magnetic
stimulation studies [35]. In order to test this hypothesis, the
signal of K (cid:44) 15028 dipoles across the cortical surface
was extracted using a LCMV beamformer and a three-shell
spherical head model [36]. The SCI algorithm was used to
assess for every dipole whether its γ-log-bandpower is a

15Data was recorded at 121 active electrodes placed according to the
extended 10–20 system at a sampling frequency of 500 Hz and converted
to common average reference.

10

TABLE I
ABSOLUTE (PARTIAL) CORRELATIONS BETWEEN γ-BANDPOWER IN THE
SPC (C1), THE γ-BANDPOWER OF THE SIGNAL w(cid:62)F IDENTIFIED BY THE

MERLINbp+

Σ−1 ALGORITHM (C2), AND THE INSTRUCTION TO UP- OR

DOWN-REGULATE THE γ-BANDPOWER IN THE SPC (S).

Session
S1R1
S1R2
S2R1
S2R2
S3R1
S3R2

|ρS,C1 |
0.88
0.81
0.34
0.44
0.93
0.88

|ρC1,C2|
0.36
0.64
0.92
0.55
0.90
0.95

|ρS,C2|
0.38
0.51
0.40
0.17
0.83
0.93

(cid:12)
(cid:12)

(cid:12)
(cid:12)ρS,C2|C1
0.16
0.01
0.23
0.09
0.02
0.67

Fig. 6. Figure adapted from [17]. The neurofeedback target area in the right
SPC is indicated by a pink circle. The SCI value denotes the percentage of
dipoles within a radius of 7 mm that were found to be modulated by the SPC.
From these results, the authors inferred the primary targets of the right SPC
to be the MPFC and additionally the right aMFG.

causal effect of the γ-log-bandpower in the SPC. This analysis
conﬁrmed the MPFC as a causal effect of the SPC (cf.
Figure 6).

To allow comparison against these results we derive a vector
g ∈ RK×1 that represents the involvement of each cortical
dipole in the signal identiﬁed by MERLiNbp+
Σ−1 as the linear
combination w of electrode signals. A scalp topography is
readily obtained via a ∝ Σw where the ith entry of Σw is the
covariance between the ith EEG channel and the source that is
recovered by w [37, Equation (7)]. Here Σ denotes the subject-
speciﬁc covariance matrix in the γ-frequency band. A dipole
involvement vector g is obtained from a via dynamic statis-
tical parametric mapping (dSPM; with the identity as noise
covariance matrix) [38]. The resulting vectors are expected to
be in line with previous ﬁndings and the hypothesis that the
MPFC is affected by the SPC.

D. Experimental results

We applied MERLiNbp+

Σ−1 several times, i. e., with different
random initialisations, to the data of each of the 6 sessions.16
We found that the γ-activation maps a obtained for each
spatial ﬁlter w were (a) rather smooth and similar to what is
typically assumed to be neurophysiologically plausible [39],
and (b) consistent across different initialisations within ses-
sions. The group average and individual dipole involvement
vectors are shown in Figure 7, and Table I shows the resulting
absolute (partial) correlations between γ-bandpower in the
SPC (C1), the γ-bandpower of the signal w(cid:62)F identiﬁed by
the MERLiNbp+
Σ−1 algorithm (C2), and the instruction to up- or
down-regulate the γ-bandpower in the SPC (S).

Our results are in line with the previous ﬁndings (cf.
Figure 6) inasmuch as they support the hypothesis that the

16Since there are only 60 samples per session we decided to select a subset
of 33 EEG channels distributed across the scalp (again according to the 10–20
system) after performing the preprocessing according to Algorithm 3. Hence,
each run of the algorithm yields a spatial ﬁlter w ∈ R33×1 and a dipole
involvement vector g ∈ RK×1.

MPFC is a causal effect of the SPC, i. e., S → C1 → C2. We
observe the following:

• For ﬁve out of six sessions and on group average the
MPFC shows up as being causally affected by the SPC.
• Comparing the marginal correlation ρS,C2 to the partial
correlation ρS,C2|C1 suggests that indeed C1 screens off
S and C2, which is incompatible with the causal graph
C1 ← S → C2. Recall that C2 (cid:54)⊥⊥ C1 and C2 ⊥⊥ S|C1
are sufﬁcient to uniquely infer S → C1 → C2 (cf.
Section III-B).

• Unlike the results in [17], the anterior middle frontal

gyrus does not show up in Figure 7.

• The parietal/posterior cingulate cortex shows up for ses-
sions S1R1 –here in addition to the MPFC– and for
session S3S2.

Note that we used MERLiN to recover only one causal
variable and hence, that the results are not expected to exactly
resemble the exhaustive search results in [17]. If the true
underlying graph is as depicted in Figure 8, then MERLiN
may recover any combination aC2 + bC3 as causal effect of
C1. This may explain both why the anterior middle frontal
gyrus does not show up in our analysis –MERLiN recovering
only one effect, namely C2 but not C3– and the lack of intra-
subject consistency –slight inter-session differences may lead
to recovery of different combinations of effects of C1. Also
note that if the assumption of orthogonal mixing is violated
the SPC signal can only be attenuated but not removed (cf.
Section III-C). This may explain the outlier result for session
S3R2: The high correlation between C1 and C2 indicates that
essentially the SPC signal was recovered, i. e., C1 ≈ C2.

VII. DISCUSSION

A. Summary of contributions

We have proposed a novel idea on how to construct causal
variables from observed non-causal variables by explicitly
optimising for the statistical properties that imply a certain
cause-effect relationship. This tackles the important problem
of causal variable construction, an issue in causal inference
that often goes unaddressed and is circumvented by presup-
posing pre-deﬁned meaningful variables among which cause-
effect relationships are to be inferred. The resulting MERLiN
algorithm can recover (or construct) a causal variable from

Group average

Left hemisphere

Right hemisphere

w
e
i
v

l
a
r
e
t
a
L

w
e
i
v

l
a
i
d
e
M

S1R1

S1R2

S2R1

S2R2

S3R1

S3R2

Fig. 7. Spatial pattern of the effect of the SPC as identiﬁed by MERLiNbp+
Σ−1 .
Group average (ﬁrst row) and for individual sessions (bottom rows). Each
subplot consists of a lateral (top) and medial (bottom) view of the left (left)
and right (right) hemisphere. (All colorscales from “blue” to “red” range from
0 to the largest value to be plotted.)

an observed linear mixture that is linearly affected by another
given variable. MERLiN can moreover be extended to enable
application to different data modalities by (a) including data
speciﬁc computation routines into the optimisation procedure,
and (b) incorporating further constraints derived from a priori
domain knowledge. We chose to demonstrate this through
application to EEG data, since stimulus-based neuroimaging
studies are a natural application scenario for MERLiN (cf.

11

S

C1

C2

C3

Fig. 8. Example causal graph. C2 and C3 are two distinct effects of C1.

Section V). Results on empirical EEG data indicate that
MERLiN can infer meaningful brain state features (read causal
variables) and establish a cause-effect relationship between
two cortical signals.

B. Applications in neuroimaging

As discussed in Section V interesting application scenarios
for MERLiN naturally arise in stimulus-based neuroimaging
studies. MERLiN’s fundamental idea is that the construction of
causal variables should explicitly take into account statistical
properties that correspond to causal structure. This supersedes
source separation procedures that often rest on implausible
assumptions and are not tailored towards subsequent causal
analyses (e. g. ICA in the context of EEG data). Besides
MERLiN’s conceptual vantage it is computationally efﬁcient
and enables us to bypass both source localisation (e. g. beam-
forming, dSPM) and an exhaustive search over 15028 dipoles.
While we have chosen EEG as an example use case for
extended MERLiN algorithms,
the extension presented in
this manuscript is hoped to serve as a demonstration that
will help researchers to adapt
the MERLiN algorithm to
other neuroimaging modalities. Future research may focus
on extending MERLiN to enable application to functional
magnetic resonance imaging data. This will, due to the high
dimensionality compared to the number of samples, again
require a modiﬁcation of the objective function regularising
the complexity of the linear combination w to avoid perfect
recovery of the stimulus variable.

C. Limitations and future research

MERLiN tries to identify w(cid:62)F = C2 in S → C1 → C2 and
rests on the assumption that there is no direct effect S → C2.
This assumption narrows down the class of causal variables
MERLiN can recover, e. g. if the true causal graph is as shown
in Figure 9a then MERLiN cannot recover C2. However, we
argue that this is not a strong limitation. First, in stimulus-
based neuroimaging experiments the assumption is likely to
be fulﬁlled if C1 is chosen to be a brain state feature that
reﬂects upstream processing of sensory input, e. g. the sec-
ondary visual cortex V2 may be assumed to be only indirectly
affected by visual stimuli via the primary visual cortex V1.
Second, the MERLiN algorithm is robust in the sense that
the statistical properties that it optimises for are sufﬁcient to
infer the cause-effect relationships S → C1 → w(cid:62)F . In
other words, we are on the safe side as long as we refrain
from drawing a conclusion if the statistical properties are not
met for the identiﬁed variable. Future research may focus on

S

C2

S

C2

S

X

D

12

C1

(a)

C1

h

(b)

Fig. 9. Example causal graphs where h denotes a hidden confounder.

how to recover C2 in scenarios like in Figure 9a. This is
complicated since the graphs in Figure 9a and Figure 9b are
Markov equivalent, i. e., they entail the same conditional (in-
)dependences. Hence, the cause-effect relationship C1 → C2
cannot be reliably inferred from conditional (in-)dependences
alone.

MERLiN may be applied in the d > m (high dimension
and small sample) setting if an additional regularisation term
penalizes the complexity of the linear combination w. This
leads to the following more general form of the objective
function

f (w) = (1 − λ)

− complexity(w)

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

− λ

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

where the additional parameter λ ∈ [0, 1] may enable to
improve performance by weighing dependence/conditional in-
dependence depending on the problem structure at hand.

Another limitation is that the MERLiN algorithm presented
in this manuscript only works for linear networks, i. e., it
fails for non-linear cause-effect relationships. This may not be
a strong limitation for neuroimaging applications given that
there is empirical evidence that the relations found in EEG
and functional magnetic resonance imaging are predominantly
linear [40], [41]. Nevertheless, future research will focus on
extending MERLiN to non-linear cause-effect relationships,
with preliminary results already available [42].

Future research may also investigate possibilities to assess
the statistical signiﬁcance and uncertainty associated with the
linear combination identiﬁed by MERLiN. The former may be
accomplished by a permutation scheme that involves running
the optimisation for each permutation. However, it cannot be
accomplished by standard signiﬁcance tests for (conditional)
dependence, since an optimisation procedure is employed
in obtaining the variables being tested, and this procedure
must be corrected for when determining the threshold for
signiﬁcance. The latter may be accomplished by bootstrap
techniques.

D. Disentangling multiple effects

MERLiN cannot unambiguously recover multiple effects
separately (e. g. A, B or C in Figure 10) as opposed to any
linear combination of those effects that all satisfy the sought-
after statistical properties (e. g. aA + bB + cC in Figure 10).
However, incorporating a priori knowledge as demonstrated
in Section V-B can mitigate this. When analysing EEG data,
for instance, one could a priori exclude spatial ﬁlters that are
neurophysiologically implausible and run optimisation over
the complement set instead of the whole unit-sphere.

A

B

C

Fig. 10.
(X → A → B) and direct (X → B) effects of X on B cancel.

Example causal graph for which it is supposed that the indirect

E. Faithfulness

While the faithfulness assumption remains untestable we are
unlikely to encounter violations in practice, e. g. we can show
that faithfulness holds almost surely if the causal relationships
are linear [43]. Multivariate causal inference methods may
be robust against certain violations of faithfulness, and hence
offer an alternative to such arguments. MERLiN, for example,
is able to identify cause-effect relationships in unfaithful
scenarios that cannot be revealed by classical univariate ap-
proaches. Consider the graph shown in Figure 10 and suppose
that the indirect (X → A → B) and direct (X → B) effects of
X on B cancel, i. e., X ⊥⊥ B wrt. the resulting and unfaithful
joint distribution. In this example, univariate methods cannot
infer the existence of the edge X → B, while MERLiN can
in principle determine that B is part of the revealed linear
combination and as such directly affected by X. The link to
faithfulness prompts further research on multivariate methods
and variants of the faithfulness assumption. Furthermore, it
stresses the importance of causal variable construction.

REFERENCES

[1] K. Chalupka, P. Perona, and F. Eberhardt, “Visual causal feature learn-
ing,” in Proceedings of the 31th Conference on Uncertainty in Artiﬁcial
Intelligence, 2015.

[2] P. Nunez and R. Srinivasan, Electric Fields of the Brain: The Neuro-

physics of EEG. Oxford University Press, 2006.

[3] D. Lowe, “Object recognition from local scale-invariant features,” in
Computer Vision, 1999. The Proceedings of the Seventh IEEE Interna-
tional Conference on, vol. 2, pp. 1150–1157, 1999.

[4] N. Dalal and B. Triggs, “Histograms of oriented gradients for human
detection,” in Computer Vision and Pattern Recognition, 2005. CVPR
2005. IEEE Computer Society Conference on, vol. 1, pp. 886–893, 2005.
[5] H. Bay, A. Ess, T. Tuytelaars, and L. V. Gool, “Speeded-up robust
features (SURF),” Computer Vision and Image Understanding, vol. 110,
no. 3, pp. 346–359, 2008.

[6] A. Hyv¨arinen and E. Oja, “Independent component analysis: algorithms
and applications,” Neural Networks, vol. 13, no. 4, pp. 411–430, 2000.
[7] S. Makeig, M. Westerﬁeld, T.-P. Jung, S. Enghoff, J. Townsend,
E. Courchesne, and T. J. Sejnowski, “Dynamic brain sources of visual
evoked responses,” Science, vol. 295, no. 5555, pp. 690–694, 2002.
[8] A. Hyv¨arinen, J. Karhunen, and E. Oja, Independent Component Anal-
ysis. Adaptive and Cognitive Dynamic Systems: Signal Processing,
Learning, Communications and Control, Wiley, 2004.

[9] J. Iriarte, E. Urrestarazu, M. Valencia, M. Alegre, A. Malanda, C. Viteri,
and J. Artieda, “Independent component analysis as a tool to eliminate
artifacts in EEG: A quantitative study,” Journal of clinical neurophysi-
ology, vol. 20, no. 4, pp. 249–257, 2003.

[10] A. Delorme, T. Sejnowski, and S. Makeig, “Enhanced detection of
artifacts in EEG data using higher-order statistics and independent
component analysis,” NeuroImage, vol. 34, no. 4, pp. 1443–1449, 2007.
[11] S. Weichwald, B. Sch¨olkopf, T. Ball, and M. Grosse-Wentrup, “Causal
and anti-causal learning in pattern recognition for neuroimaging,” in
Pattern Recognition in Neuroimaging, 2014 International Workshop on,
pp. 1–4, June 2014.

¨Ozdenizci, B. Sch¨olkopf, T. Ball, and
[12] S. Weichwald, T. Meyer, O.
M. Grosse-Wentrup, “Causal
interpretation rules for encoding and
decoding models in neuroimaging,” NeuroImage, vol. 110, pp. 48–59,
2015.

[13] J. D. Ramsey, S. J. Hanson, C. Hanson, Y. O. Halchenko, R. A.
Poldrack, and C. Glymour, “Six problems for causal inference from
fMRI,” NeuroImage, vol. 49, no. 2, pp. 1545–1558, 2010.

[14] M. Grosse-Wentrup, B. Sch¨olkopf, and J. Hill, “Causal inﬂuence of
gamma oscillations on the sensorimotor rhythm,” NeuroImage, vol. 56,
no. 2, pp. 837–842, 2011.

[15] J. D. Ramsey, S. J. Hanson, and C. Glymour, “Multi-subject search
correctly identiﬁes causal connections and most causal directions in the
DCM models of the smith et al. simulation study,” NeuroImage, vol. 58,
no. 3, pp. 838–848, 2011.

[16] J. A. Mumford and J. D. Ramsey, “Bayesian networks for fMRI: A

primer,” NeuroImage, vol. 86, pp. 573–582, 2014.

[17] M. Grosse-Wentrup, D. Janzing, M. Siegel, and B. Sch¨olkopf, “Identiﬁ-
cation of causal relations in neuroimaging data with latent confounders:
An instrumental variable approach,” NeuroImage, vol. 125, pp. 825–833,
2016.

[18] M. Eichler and V. Didelez, “On Granger causality and the effect of
interventions in time series,” Lifetime Data Analysis, vol. 16, no. 1,
pp. 3–32, 2010.

[19] J. T. Lizier and M. Prokopenko, “Differentiating information transfer
and causal effect,” The European Physical Journal B, vol. 73, no. 4,
pp. 605–615, 2010.

[20] P. Spirtes, C. Glymour, and R. Scheines, Causation, Prediction, and

[21] J. Pearl, Causality: Models, Reasoning and Inference. Cambridge

Search. MIT press, 2nd ed., 2000.

University Press, 2nd ed., 2009.

[22] S. L. Lauritzen, Graphical Models. Oxford University Press, 1996.
[23] T. Verma and J. Pearl, “Equivalence and synthesis of causal models,”
the 6th Conference on Uncertainty in Artiﬁcial

in Proceedings of
Intelligence, (Amsterdam, NL), pp. 255–268, Elsevier Science, 1990.

[24] J. Bergstra, O. Breuleux, F. Bastien, P. Lamblin, R. Pascanu, G. Des-
jardins, J. Turian, D. Warde-Farley, and Y. Bengio, “Theano: A CPU
and GPU math expression compiler,” in Proceedings of the Python for
Scientiﬁc Computing Conference (SciPy), June 2010. Oral Presentation.
[25] F. Bastien, P. Lamblin, R. Pascanu, J. Bergstra, I. J. Goodfellow,
A. Bergeron, N. Bouchard, and Y. Bengio, “Theano: New features
and speed improvements.” Deep Learning and Unsupervised Feature
Learning NIPS 2012 Workshop, 2012.

[26] J. Townsend, N. Koep, and S. Weichwald, “Pymanopt: A Python
Toolbox for Manifold Optimization using Automatic Differentiation,”
arXiv preprint arXiv:1603.03236, 2016.

[27] K. Baba, R. Shibata, and M. Sibuya, “Partial correlation and conditional
correlation as measures of conditional independence,” Australian & New
Zealand Journal of Statistics, vol. 46, no. 4, pp. 657–664, 2004.
[28] S. Li, “Concise formulas for the area and volume of a hyperspherical
cap,” Asian Journal of Mathematics and Statistics, vol. 4, no. 1, pp. 66–
70, 2011.

[29] M. P. van den Heuvel and H. E. H. Pol, “Exploring the brain network:
A review on resting-state fMRI functional connectivity,” European
Neuropsychopharmacology, vol. 20, no. 8, pp. 519 – 534, 2010.

13

[30] P. L. Nunez, R. Srinivasan, A. F. Westdorp, R. S. Wijesinghe, D. M.
Tucker, R. B. Silberstein, and P. J. Cadusch, “EEG coherency: I:
statistics, reference electrode, volume conduction, laplacians, cortical
imaging, and interpretation at multiple scales,” Electroencephalography
and Clinical Neurophysiology, vol. 103, no. 5, pp. 499–515, 1997.
[31] G. Nolte, O. Bai, L. Wheaton, Z. Mari, S. Vorbach, and M. Hallett,
“Identifying true brain interaction from EEG data using the imaginary
part of coherency,” Clinical Neurophysiology, vol. 115, no. 10, pp. 2292–
2307, 2004.

[32] J. Stinstra and M. Peters, “The volume conductor may act as a temporal
ﬁlter on the ECG and EEG,” Medical and Biological Engineering and
Computing, vol. 36, no. 6, pp. 711–716, 1998.

[33] M. Grosse-Wentrup and B. Sch¨olkopf, “A brain–computer interface
based on self-regulation of gamma-oscillations in the superior parietal
cortex,” Journal of neural engineering, vol. 11, no. 5, p. 056015, 2014.
[34] B. D. Van Veen, W. Van Drongelen, M. Yuchtman, and A. Suzuki, “Lo-
calization of brain electrical activity via linearly constrained minimum
variance spatial ﬁltering,” Biomedical Engineering, IEEE Transactions
on, vol. 44, no. 9, pp. 867–880, 1997.

[35] A. C. Chen, D. J. Oathes, C. Chang, T. Bradley, Z.-W. Zhou, L. M.
Williams, G. H. Glover, K. Deisseroth, and A. Etkin, “Causal
in-
teractions between fronto-parietal central executive and default-mode
networks in humans,” Proceedings of the National Academy of Sciences,
vol. 110, no. 49, pp. 19944–19949, 2013.

[36] J. C. Mosher, R. M. Leahy, and P. S. Lewis, “EEG and MEG: Forward
solutions for inverse methods,” Biomedical Engineering, IEEE Transac-
tions on, vol. 46, no. 3, pp. 245–259, 1999.

[37] S. Haufe, F. Meinecke, K. G¨orgen, S. D¨ahne, J.-D. Haynes, B. Blankertz,
and F. Bießmann, “On the interpretation of weight vectors of linear
models in multivariate neuroimaging,” NeuroImage, vol. 87, pp. 96–110,
2014.

[38] A. M. Dale, A. K. Liu, B. R. Fischl, R. L. Buckner, J. W. Belliveau,
J. D. Lewine, and E. Halgren, “Dynamic statistical parametric mapping:
Combining fMRI and MEG for high-resolution imaging of cortical
activity,” Neuron, vol. 26, no. 1, pp. 55–67, 2000.

[39] A. Delorme, J. Palmer, J. Onton, R. Oostenveld, and S. Makeig,
“Independent EEG sources are dipolar,” PLoS ONE, vol. 7, p. e30135,
02 2012.

[40] K.-R. M¨uller, C. W. Anderson, and G. E. Birch, “Linear and nonlinear
methods for brain-computer interfaces,” Neural Systems and Rehabili-
tation Engineering, IEEE Transactions on, vol. 11, no. 2, pp. 165–169,
2003.

[41] T. Naselaris, K. N. Kay, S. Nishimoto, and J. L. Gallant, “Encoding and
decoding in fmri,” Neuroimage, vol. 56, no. 2, pp. 400–410, 2011.
[42] S. Weichwald, A. Gretton, B. Sch¨olkopf, and M. Grosse-Wentrup,
“Recovery of non-linear cause-effect relationships from linearly mixed
neuroimaging data,” arXiv preprint arXiv:1605.00391, 2016. to appear
in Pattern Recognition in Neuroimaging, 2016 International Workshop
on.

[43] C. Meek, “Strong completeness and faithfulness in bayesian networks,”
the 11th Conference on Uncertainty in Artiﬁcial

in Proceedings of
Intelligence, pp. 411–418, 1995.

MERLiN: Mixture Effect Recovery in Linear Networks

Sebastian Weichwald, Moritz Grosse-Wentrup, Arthur Gretton

1

6
1
0
2
 
p
e
S
 
7
2
 
 
]
E
M

.
t
a
t
s
[
 
 
3
v
5
5
2
1
0
.
2
1
5
1
:
v
i
X
r
a

Abstract—Causal

the identiﬁcation of
inference concerns
cause-effect relationships between variables, e. g. establishing
whether a stimulus affects activity in a certain brain region. The
observed variables themselves often do not constitute meaningful
causal variables, however, and linear combinations need to be
considered. In electroencephalographic studies, for example, one
is not interested in establishing cause-effect relationships between
electrode signals (the observed variables), but rather between
cortical signals (the causal variables) which can be recovered as
linear combinations of electrode signals.

We introduce MERLiN (Mixture Effect Recovery in Linear
Networks), a family of causal
inference algorithms that im-
plement a novel means of constructing causal variables from
non-causal variables. We demonstrate through application to
EEG data how the basic MERLiN algorithm can be extended
for application to different
(neuroimaging) data modalities.
Given an observed linear mixture, the algorithms can recover
a causal variable that is a linear effect of another given vari-
able. That is, MERLiN allows us to recover a cortical signal
that is affected by activity in a certain brain region, while
not being a direct effect of the stimulus. The Python/Matlab
implementation for all presented algorithms is available on
https://github.com/sweichwald/MERLiN.

Index Terms—causal inference, causal variable construction,

linear mixtures

I. INTRODUCTION

Causal inference requires causal variables. Observed vari-
ables do not
themselves always constitute the causal re-
lata that admit meaningful causal statements, however, and
transformations of the variables might be required to isolate
causal signals. Images, for example, consist of microscopic
variables (pixel colour values) while the identiﬁcation of
meaningful cause-effect relationships requires the construction
of macroscopic causal variables (e. g. whether the image shows
a magic wand) [1]. That is, it is implausible that a descrip-
tion of effects of changing the colour value of one single
pixel, the microscopic variable, leads to characterisation of a
meaningful cause-effect relationship; however, the existence
the macroscopic variable, may lead to
of a magic wand,
meaningful statements of the form “manipulating the image
such that
it shows a magic wand affects the chances of
little Maggie favouring this image”. A similar problem often
occurs whenever only a linear mixture of causal variables
can be observed. In electroencephalography (EEG) studies, for

Sebastian Weichwald is with the Empirical Inference Department, Max
Planck Institute for Intelligent Systems, T¨ubingen, Germany, and has been
with the Centre for Computational Statistics and Machine Learning, University
College London, London, United Kingdom, e-mail: sweichwald@tue.mpg.de.
Inference Department,
Max Planck Institute for Intelligent Systems, T¨ubingen, Germany, e-mail:
moritzgw@tuebingen.mpg.de.

Moritz Grosse-Wentrup is with the Empirical

Arthur Gretton is with the Gatsby Computational Neuroscience
Unit, Sainsbury Wellcome Centre, London, United Kingdom, e-mail:
arthur.gretton@gmail.com.

example, measurements at electrodes placed on the scalp are
considered to be instantaneously and linearly superimposed
electromagnetic activity of sources in the brain [2]. Again,
statements about the microscopic variables are meaningless,
e. g. “manipulating the electrode’s signal affects the subject’s
attentional state”; however, macroscopic variables such as the
activity in the parietal cortex, extracted as a linear combination
of electrode signals, admit meaningful causal statements such
as “manipulating the activity in the parietal cortex affects the
subject’s attentional state”. Standard causal inference methods
require that all underlying causal variables, i. e., the sources
in the brain, are ﬁrst constructed –or rather recovered– from
the observed mixture, i. e., the electrode signals.

There exist a plethora of methods to construct macroscopic
variables both from images and linear mixtures. However,
prevailing methods to learn visual features [3], [4], [5] ignore
the causal aspect, and are fundamentally different from the re-
cent and (to our knowledge) only work that demonstrates how
visual causal features can be learned by a sequence of inter-
ventional experiments [1]. Likewise, methods to (re-)construct
variables from linear mixtures commonly ignore the causal
aspect and often rest on implausible assumptions. For instance,
independent component analysis (ICA), commonly employed
in the analysis of EEG data, rests on the assumption of
mutually independent sources [6], [7], [8]. One may argue
that muscular or ocular artefacts are independent of the
cortical sources and can be extracted via ICA [9], [10]. It
seems implausible, though, that cortical sources are mutually
independent. In fact, if they were mutually independent there
would be no cause-effect relationships between them. Thus,
methods ignoring the causal aspect are unsuited to construct
meaningful causal variables.

Mixture Effect Recovery in Linear Networks (MERLiN)
aims to construct a causal variable from a linear mixture
without requiring multiple interventional experiments. The
fundamental idea is to directly search for statistical in- and
dependences that imply, under assumptions discussed below, a
certain cause-effect relationship. In essence, given iid samples
of a univariate randomised variable S, a univariate causal
effect C1 of S, and a multivariate variable F , MERLiN
searches for a linear combination w such that w(cid:62)F is a
causal effect of C1, i. e., S → C1 → w(cid:62)F . This implements
the novel
the
resulting statistical properties guarantee meaningful cause-
effect relationships.

idea to construct causal variables such that

As an illustration, consider the directed acyclic graph (DAG)
S → C1 → C2 C3 shown in Figure 1, where the gap
indicates that C3 is disconnected from all other variables. In
this notation edges denote cause-effect relationships starting
at the cause and pointing towards the effect. S denotes a
randomised variable. We assume that only a linear mixture

This is the author’s version of an article that is published in IEEE Journal of Selected Topics in Signal Processing, 10(7), 1254–1266, 2016, doi: 10.1109/JSTSP.2016.2601144.
Copyright (c) 2016 IEEE. Personal use is permitted. For any other purposes, permission must be obtained from the IEEE by emailing pubs-permissions@ieee.org.

2

F1

F2

F3

observed linear mixture

II. PRELIMINARIES

A. Causal Bayesian Networks

linear mixing

In general causal inference requires three steps.

S

C1

C2

C3

causal variables

Problem illustration where S → C1 → C2 C3 is the underlying
Fig. 1.
causal graph and F1, F2, F3 are observed variables that are a linear mixture
of C1, C2, C3.

F = A[C1, C2, C3](cid:62) (A is an unknown mixing matrix) of
the causal variables C1, C2, C3 can be observed, and that v
such that C1 = v(cid:62)F is known. MERLiN’s goal is to recover
from the observed linear mixture F = [F1, F2, F3](cid:62) a causal
variable that is an effect of C1, i. e., to ﬁnd w such that w(cid:62)F
is an effect of C1, where w(cid:62)F = C2 is a valid solution.

We introduce the basic MERLiNΣ−1 algorithm that can
recover the sought-after causal variable when the cause-
effect relationships are linear with additive Gaussian noise
(cf. Section III). We also demonstrate how the algorithm can
be extended for application to different (neuroimaging) data
modalities by (a) including data speciﬁc preprocessing steps
into the optimisation procedure, and (b) incorporating a priori
domain knowledge (cf. Section V). Here, both concepts are
demonstrated through application to EEG data when cause-
effect relationships within individual frequency bands are of
interest.

Thus, we present

Σ−1 , and MERLiNbp+

three related algorithms MERLiN−1
Σ ,
MERLiNbp
Σ−1 that are based on optimisa-
tion of precision matrix entries (indicated by the subscript
Σ−1). The MERLiNbp
Σ−1 and MERLiNbp+
Σ−1 algorithms include
preprocessing steps that allow application to timeseries data,
identifying a linear combination of timeseries signals such
that the resulting log-bandpower (indicated by the superscript
bp) reveals the sough-after cause-effect relationship. A further
extension (indicated by the superscript bp+) takes domain
knowledge about time-lags into account.

[11],

neuroimaging

stimulus-based
Σ−1 and MERLiNbp+

the
studies
For
MERLiNbp
Σ−1 algorithms can establish a
cause-effect relationship between brain state features that are
observed only as part of a linear mixture. As such, MERLiN
is able to provide insights into brain networks beyond those
readily obtained from encoding and decoding models trained
on pre-deﬁned variables [12]. Furthermore, it employs the
framework of Causal Bayesian Networks (CBNs) that has
recently been fruitful in the neuroimaging community [13],
[14], [15], [16], [12], [17] — the important advantage over
it yields
methods based on information ﬂow being that
testable predictions on the impact of interventions [18], [19].

MERLiN shows good performance both on synthetic and
EEG data recorded during neurofeedback experiments. The
Python/Matlab implementation for all presented algorithms is
available on https://github.com/sweichwald/MERLiN.

1) construction of (causal) variables
2) inference of cause-effect relationships among the vari-

ables deﬁned in 1)

3) estimation of the functional form and strength of the

causal links established in 2)

In this manuscript we focus on and merge the ﬁrst two steps.
More speciﬁcally, a causal variable is implicitly constructed
by optimising for properties that at the same time establish
a speciﬁc cause-effect relationship for this variable. Here
we brieﬂy introduce the main aspects of Causal Bayesian
Networks (CBNs) that deﬁne causation in terms of effects of
interventions and allow inference of cause-effect relationships
(step 2) from conditional independences in the observed dis-
tribution. For an exhaustive treatment see [20], [21].

Deﬁnition 1 (Structural Equation Model). We deﬁne a struc-
tural equation model (SEM) S as a set of structural equations
Xi = fi(PAi, Ni), i ∈ N1:s (cid:44) {n ∈ N : 1 ≤ n ≤ s} where
the so-called noise variables are independently distributed
according to PN1,...,Ns = PN1 · · · PNs. For i ∈ N1:s the set
PAi ⊆ {X1, ..., Xs} \ Xi contains the so-called parents of
Xi and fi describes how Xi relates to the random variables
in PAi and Ni. This induces the unique joint distribution
denoted by PS (cid:44) PX1,...,Xs.1

Replacing at least one of the functions fi, i ∈ N1:s by a
constant ♠ yields a new SEM. We say Xi has been intervened
on, which is denoted by do(Xi = ♠), leads to the SEM
S| do(Xi = ♠), and induces the interventional distribution
PS| do(Xi=♠) (cid:44) PX1,...,Xs| do(Xi=♠).
Deﬁnition 2 (Cause and Effect). Xi is a cause of Xj (i, j ∈
N1:s, i (cid:54)= j) wrt. a SEM S iff there exists ♥ ∈ R such that
PXj | do(Xi=♥) (cid:54)= PXj .2 Xj is an effect of Xi iff Xi is a cause
of Xj. Often the considered SEM S is omitted if it is clear
from the context.

For each SEM S there is a corresponding graph GS (V, E)
with V (cid:44) {X1, ..., Xs} and E (cid:44) {(Xi, Xj) : Xi ∈
PAj, Xj ∈ V } that has the random variables as nodes and
directed edges pointing from parents to children. We employ
the common assumption that this graph is acyclic, i. e., GS
will always be a directed acyclic graph (DAG).

It

is insightful

to consider the following implication of
Deﬁnition 2: If in GS there is no directed path from Xi to
Xj, Xi is not a cause of Xj (wrt. S). The following example
shows that without further assumptions the converse is not true
in general, i. e., existence of a path does not generally imply a
cause-effect relationship. This nuisance will be accounted for
by the faithfulness assumption (cf. Deﬁnition 6 below). We
provide supportive graphical depictions in Figure 2.

1Note that the distribution PS has a density if PN1,...,Ns has a density

and the functions fi, i ∈ N1:s are differentiable.

2PXj | do(Xi=♥) and PXj denote the marginal distributions of Xj corre-

sponding to PS| do(Xi=♥) and PS respectively.

X1 = N1
X2 = −X1 + N2
X3 = X1 + X2 + N3

X1 = ♥
X2 = −X1 + N2
X3 = X1 + X2 + N3

X1

X3

X1

X3

X2

X2

(a) SEM S and graph GS .

(b) SEM S| do(X1 = ♥) and
graph GS| do(X1=♥).

X1 = N1
X2 = ♥
X3 = X1 + X2 + N3

X1 = N1
X2 = −X1 + N2
X3 = ♥

X1

X3

X1

X3

X2

X2

(c) SEM S| do(X2 = ♥) and
graph GS| do(X2=♥).

(d) SEM S| do(X3 = ♥) and
graph GS| do(X3=♥).

Fig. 2. SEMs and graphs accompanying example 3.

Example 3. Consider a SEM S with structural equations
and graph GS shown in Figure 2a and noise variables
(N1, N2, N3) ∼ N (0, 1)3. In GS there is a directed path
from X1 to X3 while
(in fact even a directed edge)
PX3| do(X1=♥) = PX3 = PN2+N3 = N (0, 2) for all ♥ ∈ R,
i. e., intervening on X2 does not alter the distribution of X1.
That is, X1 is not a cause of X3 wrt. S despite the existence
of the edge X1 → X3 (cf. Figure 2b).

Observe that PX3| do(X2=♥) = N (♥, 2) (cid:54)= N (0, 2) = PX3
for ♥ (cid:54)= 0, i. e., X2 is, as one may intuitively expect, a cause
of X3 wrt. S (cf. Figure 2c). Likewise, X3 indeed turns out
not to be a cause of X1 or X2 as can be seen from Figure 2d.

So far a DAG GS simply depicts all parent-child relation-
ships deﬁned by the SEM S. Missing directed paths indicate
missing cause-effect relationships. In order to specify the link
between statistical independence (denoted by ⊥⊥) wrt. the joint
distribution PS and properties of the DAG GS (representing a
SEM S) we need the following deﬁnitions.

Deﬁnition 4 (d-separation). For a ﬁxed graph G disjoint sets
of nodes A and B are d-separated by a third disjoint set C
(denoted by A ⊥d-sep B|C) iff all pairs of nodes a ∈ A and
b ∈ B are d-separated by C. A pair of nodes a (cid:54)= b is d-
separated by C iff every path between a and b is blocked by
C. A path between nodes a and b is blocked by C iff there is
an intermediate node z on the path such that (i) z ∈ C and z is
tail-to-tail (← z →) or head-to-tail (→ z →), or (ii) z is head-
to-head (→ z ←) and neither z nor any of its descendants is
in C.
Deﬁnition 5 (Markov property). A distribution PX1,...,Xs
satisﬁes the global Markov property wrt a graph G if

A ⊥d-sep B|C

=⇒ A ⊥⊥ B|C.

It satisﬁes the local Markov property wrt G if each node
is conditionally independent of its non-descendants given

3

its parents. Both properties are equivalent if PX1,...,Xs has
a density3 (cf. [22, Theorem 3.27]);
in this case we say
PX1,...,Xs is Markov wrt G.
Deﬁnition 6 (Faithfulness). PS generated by a SEM S is said
to be faithful wrt. GS , if

A ⊥d-sep B|C ⇐= A ⊥⊥ B|C.
Conveniently the distribution PS generated by a SEM S is
Markov wrt. GS (cf. [21, Theorem 1.4.1] for a proof). Hence,
if we assume faithfulness4 conditional independences and d-
separation properties become equivalent

A ⊥d-sep B|C ⇐⇒ A ⊥⊥ B|C

Summing up, we have deﬁned interventional causation in
terms of SEMs and have seen how a SEM gives rise to a
DAG. This DAG has two convenient features. Firstly, the DAG
yields a visualisation that allows to easily grasp missing cause-
effect relationships that correspond to missing directed paths.
Secondly, assuming faithfulness d-separation properties of this
DAG are equivalent to conditional independence properties
of the joint distribution. Thus, conditional
independences
translate into causal statements, e. g. ‘a variable becomes
independent of all its non-effects given its immediate causes’
or ‘cause and effect are marginally dependent’. Furthermore,
the causal graph GS can be identiﬁed from conditional in-
dependences observed in PS — at least up to a so-called
Markov equivalence class, the set of graphs that entail the
same conditional independences [23].

B. Optimisation on the Stiefel manifold

The proposed algorithms require optimisation of objective
functions over the unit-sphere Od−1 (cid:44) {x ∈ Rd : ||x|| = 1}.
For generality we view the sphere as a special case of the
Stiefel manifold Vd×p (cid:44) {M ∈ Rd×p : M (cid:62)M = Ip×p}
(p ≤ d) for p = 1. Implementing the respective objective
functions in Theano [24], [25], we use the Python toolbox
Pymanopt [26] to perform optimisation directly on the respec-
tive Stiefel manifold using a steepest descent algorithm with
standard back-tracking line-search.5 This approach is exact and
efﬁcient, relying on automated differentiation and respecting
the manifold geometry.

III. THE BASIC MERLIN ALGORITHM
We consider a situation in which only a linear combination
of observed variables constitutes a meaningful causal variable.
These scenarios naturally arise if only samples of a linear mix-
ture F1, ..., Fd(cid:48) of the underlying causal variables C1, ..., Cd
are accessible (cf. Figure 1). Standard causal inference meth-
ods cannot infer cause-effect relationships among the causal

3For simplicity we assume that distributions have a density wrt. some

product measure throughout this text.

4Intuitively, this is saying that conditional independences are due to the

causal structure and not accidents of parameter values [20, p. 9].

5For the experiments presented in this manuscript we set both the minimum
step size and gradient norm to 10−10 (arbitrary choice) and the maximum
number of steps to 500 (generous choice based on preliminary test runs that
met the former stopping criteria in much earlier iterations). Our toolbox allows
to adjust both parameters.

4

S

C1

C2

C5
...

Cd

C3

h1

C4

Fig. 3. Example of a causal graph underlying the described problem scenario
(cf. Section III-A). h1 is a hidden variable.

variables C1, ..., Cd without ﬁrst undoing the unknown linear
mixing (also known as blind source separation). MERLiN aims
to establish a cause-effect relationship among causal variables
in a linear network while reconstructing a causal variable at the
same time. In other words, a causal variable is reconstructed
by optimising for the statistical properties that imply a certain
kind of cause-effect relationship.

In this section we ﬁrst provide the formal problem de-
scription. We then derive sufﬁcient conditions for the kind
of cause-effect relationship MERLiN aims to establish, and
discuss assumptions on the linear mixing. Finally, the basic
precision matrix based MERLiN algorithm is introduced,
which optimises for these sufﬁcient statistical properties in
order to recover a linear causal effect from an observed linear
mixture.

A. Formal problem description

The terminology introduced in Section II-A allows to pre-

cisely state the problem as follows.

1) Assumptions: Let S and C1, ..., Cd denote (ﬁnitely
many) real-valued random variables. We assume existence of
a SEM S, potentially with unobserved variables h1, ..., hl, that
induces PS = PS,C1,...,Cd,h1,...,hl. We refer to the correspond-
ing graph GS as the true causal graph and call its nodes causal
variables. We further assume that

• S affects C2 indirectly via C1,6
• PS is faithful wrt. GS ,
• there are no edges in GS pointing into S.

In an experimental setting the last condition is ensured by
randomising S.7 Figure 3 depicts an example of how GS might
look.

2) Given data:
• m iid8 samples S = [s1, ..., sm](cid:62) of S and F =
[fi,j]i=1:m,j=1:d(cid:48) of F where F (cid:44) [F1, ..., Fd(cid:48)](cid:62) = AC
is the observed linear mixture of the causal variables
C (cid:44) [C1, ..., Cd](cid:62) and A ∈ Rd(cid:48)×d denotes the unknown
mixing matrix

• the linear combination v ∈ Rd(cid:48)

that extracts the causal

variable C1 = v(cid:62)F is assumed known

That is, we have samples of S, F , and C1 but not of C2, ..., Cd
where F is an unknown linear mixture of C1, ..., Cd.

6By saying a variable X causes Z indirectly via Y we imply (a) existence
of a directed path X (cid:57)(cid:57)(cid:75) Y (cid:57)(cid:57)(cid:75) Z, and (b) that there is no directed path
X (cid:57)(cid:57)(cid:75) Z without Y on it (this also excludes the edge X → Z).

7Randomisation corresponds to an intervention: the structural equation of S
is replaced by S = N1 where N1 is an independent randomisation variable,
e. g. assigning placebo or treatment according to an independent Bernoulli
variable.

8independent and identically distributed

3) Desired output: Find w ∈ Rd(cid:48)

such that aCi = w(cid:62)F
where Ci is an effect of C1 (i ∈ N2:d, a ∈ R \ {0}). In other
words, the aim is to recover a causal variable –up to scaling–
that is an effect of C1. For example, recovery of the causal
variable C2 is a valid solution. The factor a reﬂects the scale
indeterminacy that results from the linear mixing, i. e., since
A is unknown the scale of the causal variables cannot be
determined unless further assumptions are employed or a priori
knowledge is available.

B. MERLiN’s strategy

We are given that there exists at least one causal variable
C2 that is indirectly affected by S via C1. However, we only
have access to samples of the linear mixture F and samples
of S. Note the following properties of C2:

• Since PS is faithful wrt. GS it follows that C2 (cid:54)⊥⊥ C1 (and

C2 (cid:54)⊥⊥ S).

• Since PS is Markov wrt. GS it follows that C2 ⊥⊥ S|C1.
We can derive the following sufﬁcient conditions for a causal
variable to be indirectly affected by S via C1.
Claim 7. Given the assumptions in Section III-A1 and a causal
variable Y . If Y (cid:54)⊥⊥ C1 and Y ⊥⊥ S|C1, then S indirectly
affects Y via C1. In particular, a directed path from C1 to Y ,
denoted by C1 (cid:57)(cid:57)(cid:75) Y , exists.

Proof: From Y (cid:54)⊥⊥ C1 and PS being Markov wrt. GS it
follows that Y and C1 are not d-separated in GS by the empty
set. In GS there must be at least one path C1 (cid:57)(cid:57)(cid:75) Y , C1 (cid:76)(cid:57)(cid:57) Y
or C1 (cid:76)(cid:57)(cid:57) X (cid:57)(cid:57)(cid:75) Y for some node X. By assumption C1
is affected by S, i. e., we have S (cid:57)(cid:57)(cid:75) C1 in GS . Hence, in
GS there must be at least one path S (cid:57)(cid:57)(cid:75) C1 (cid:57)(cid:57)(cid:75) Y , S (cid:57)(cid:57)(cid:75)
C1 (cid:76)(cid:57)(cid:57) Y or S (cid:57)(cid:57)(cid:75) C1 (cid:76)(cid:57)(cid:57) X (cid:57)(cid:57)(cid:75) Y for some node X. Under
the assumption of faithfulness, the latter two cases contradict
Y ⊥⊥ S|C1. Hence, in GS at least one path S (cid:57)(cid:57)(cid:75) C1 (cid:57)(cid:57)(cid:75) Y
exists.

From Y ⊥⊥ S|C1 and PS being faithful wrt. GS it follows
that Y and S are d-separated in GS by C1. That is, given C1
every path between S and Y is blocked. In particular, in GS
there is no edge S → Y and no path S (cid:57)(cid:57)(cid:75) Y without C1 on
it. Hence, Y is indeed indirectly affected by S via C1.

This leads to our general idea on how to ﬁnd a linear
combination that recovers a causal effect of C1. If MERLiN
ﬁnds w ∈ Rd(cid:48)
such that the following two statistical properties
hold true

(a) w(cid:62)F (cid:54)⊥⊥ C1, and
(b) w(cid:62)F ⊥⊥ S|C1

then we have identiﬁed a candidate causal effect of C1, i. e.,
we have identiﬁed a variable such that S → C1 → w(cid:62)F . Note
that conditioning on S cannot unblock a path that was blocked
before since there are no edges pointing into S; conversely the
conditional dependence w(cid:62)F (cid:54)⊥⊥ C1|S implies the marginal
dependence w(cid:62)F (cid:54)⊥⊥ C1. Hence, MERLiN can also optimise
for the following alternative statistical properties

(a’) w(cid:62)F (cid:54)⊥⊥ C1|S, and
(b) w(cid:62)F ⊥⊥ S|C1

to recover a candidate causal effect of C1. This reformulation
is useful since it allows optimisation of two analogous condi-
tional (in)dependence properties instead of marginal and con-
ditional (in)dependence. Ideally and under mixing assumptions
discussed below, optimising w wrt. these statistical properties
will indeed recover a causal variable, i. e., w(cid:62)F = aCi
(i ∈ N2:d, a ∈ R \ {0}), that is an effect of C1. Note that this
approach even works in the presence of hidden confounders.

C. Mixing assumptions

MERLiN’s strategy presented in the previous section is to
optimise a linear combination of the observed linear mixture
such that
two statistical properties are fulﬁlled. However,
without imposing further assumptions on the linear mixing
it may be impossible to recover the desired causal variable by
this procedure. Here we discuss problems that can occur for
arbitrary mixing and specify our mixing assumptions, namely
that A is an orthogonal d × d matrix.

In the ﬁrst place, there may not exist a solution to MER-
LiN’s problem if A has rank less than d.9 Hence, assume that
A has rank d and, for simplicity, that A is a square d × d
matrix. This guarantees existence of a solution: if the mixing
matrix A is invertible a solution to the problem is to recover
C2 via w = A−1

2,1:d.

However, if we only assume A to be invertible MERLiN
may not be able to recover (a multiple of) a causal variable
Ci
from the sought-after statistical properties alone. The
following example demonstrates the problem that arises from
the fact that C1 itself is part of the observed linear mixture.

Example 8. Assume S → C1 → C2 C3 is the true but
unknown causal graph, where the gap indicates that C3 is
disconnected from all other variables. Assume all variables
are non-degenerate and that the unknown mixing matrix A is
invertible. Then, any variable recovered as linear combination
from the observed linear mixture F = AC = A[C1, C2, C3](cid:62)
can be written as
(cid:16)
1,1:d + bA−1
for some a, b, c ∈ R.

F = aC1 + bC2 + cC3 (cid:44) Ya,b,c

2,1:d + cA−1

aA−1

3,1:d

(cid:17)

MERLiN aims to recover the causal variable C2 (up to
scaling) by optimising a, b, c such that the statistical properties

• Ya,b,c (cid:54)⊥⊥ C1 (or equivalently Ya,b,c (cid:54)⊥⊥ C1|S), and
• Ya,b,c ⊥⊥ S|C1

hold true (cf. Section III-B). Indeed bC2 = Y0,b,0 (b (cid:54)= 0)
fulﬁls these statistical properties and is the desired output.
However, all Ya,0,c (a, c (cid:54)= 0) likewise fulﬁl the statistical
properties while not being (a multiple of) a causal variable.

This example demonstrates that without imposing further
constraints on the linear mixing MERLiN may recover C1
(ensuring the dependence on S) with independent variables
added on top (ensuring conditional independence of S given

9Note that A being at least rank d is not a necessary condition, i. e.,
an effect of C1 may be recoverable even in cases where A has rank less
than d. As an example consider the case where C2 is an effect of C1 and
A = [Id×2, 0d×(d−2)]. However, the focus is a sufﬁcient condition for the
existence of a solution.

5

C1), e. g. Y1,0,1 = C1 + C3 in above example. Although the
sought-after statistical properties hold true for this variable,
this is clearly not a desirable output and does not recover a
causal variable.

One way to mitigate this situation is to restrict search to the
orthogonal complement v⊥ of v. This way, the signal of C1 in
the linear mixture F is attenuated. In particular, if the mixing
matrix A is orthogonal restricting search to v⊥ amounts to
complete removal of C1’s signal from F . We therefore assume
that A is an orthogonal d × d matrix and restrict the search to
v⊥. It is then no longer possible to add arbitrary multiples
of C1 onto independent variables to introduce the sought-
after dependence, i. e., the recovery of non-causal variables
like C1 + C3 in above example is prevented.

Note that while adding independent variables onto effects
is still possible (e. g. consider Y0,1,1 = C2 + C3 in above
example), it will be counter-acted by setting up the objective
function accordingly — roughly speaking, as we ‘maximise
dependence’, then these independent variables will be sup-
pressed, since they act as noise and reduce dependence.

D. MERLiNΣ−1: precision matrix magic

The basic MERLiN algorithm aims to recover a linear
causal effect from an observed linear mixture. In particular,
we assume that the cause-effect relationships S → C1 → C2
between the underlying causal variables S, C1 and C2 are
linear with additive Gaussian noise. In such a linear network,
zero entries in the precision matrix imply missing edges in the
graph [22]. Hence, if Y is a linear effect of C1 the precision
matrix of the three variables S, C1 and Y is of the form

Σ−1 (cid:44) Σ−1

S,C1,Y =


(cid:63)
(cid:63)

0

(cid:63)
(cid:63)
(cid:63)


0
(cid:63)

(cid:63)

where stars indicate non-zero entries. This implies the partial
correlations ρY,C1|S = (cid:63) and ρY,S|C1 = 0 which, in the Gaus-
sian case, amounts to the desired conditional (in-)dependences
(a’) Y (cid:54)⊥⊥ C1|S and (b) Y ⊥⊥ S|C1 (cf. Section III-B) [27].

Exploiting this link, the precision matrix based MERLiNΣ−1
algorithm (cf. Algorithm 1) implements the general idea pre-
sented in Section III-B by maximising the objective function10

f (w) =

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:44) (cid:98)Σ−1

where (cid:98)Σ−1
S,C1,w(cid:62)F (here we assumed d ≤ m and
w
invertibility). Optimisation is performed over the unit-sphere
Od−2 after projecting F onto the orthogonal complement v⊥.

IV. SIMULATION EXPERIMENTS

A. Description of synthetic data

Dd×m
T

(a, b) denotes the synthetic dataset that is generated
by Algorithm 2. It consists of samples of an orthogonal linear
mixture of underlying causal variables that follow the causal
graph shown in Figure 3. The parameters a and b determine

10For numerical reasons one might want to use the approximation
| · | for small 0 < (cid:15) ∈ R to ensure that f is differentiable everywhere.

· + (cid:15) ≈

√

6

Algorithm 1 MERLiNΣ−1
Input: S ∈ Rm×1, F ∈ Rd×m, v ∈ Rd×1
Procedure:

• set C := F (cid:62)v and F := P (v)F ∈ R(d−1)×m
• deﬁne the objective function for w ∈ Od−2 as
(cid:12)
(cid:12)
(cid:12)
(cid:12)

f (w) =

(cid:98)Σ−1
w

(cid:98)Σ−1
w

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

2,3

1,3

(cid:17)

(cid:16)

(cid:17)

(cid:16)

where the empirical precision matrix is

Algorithm 2 Generating the synthetic dataset Dd×m
Input: d, m ∈ N, a, b ∈ R, T ∈ {G, B}
Procedure:

T

(a, b).

• generate a random orthogonala d × d matrix A by
Gram-Schmidt orthonormalising a matrix with entries
independently drawn from a standard normal distribution

1,1:d = (cid:0)A(cid:62)(cid:1)
• set v(cid:62) := (cid:0)A−1(cid:1)
2,1:d = (cid:0)A(cid:62)(cid:1)
G0 := (cid:0)A−1(cid:1)
• set w(cid:62)
• generate independent mean parameters µ1, ..., µd, µh1

2,1:d

1,1:d

(cid:98)Σ−1

w =

(cid:18) 1

m − 1

(cid:2)S, C, F (cid:62)w(cid:3)(cid:62)

Hm

(cid:2)S, C, F (cid:62)w(cid:3)

(cid:19)−1

from N (0, 1)

• generate m independent samples according to the follow-

• optimise f as described in Section II-B to obtain the

ing SEM

vector w∗ ∈ Od−2

Output: w = P (v)(cid:62)w∗ ∈ Od−1

Deﬁnitions:

• P (v) is the (d − 1) × d orthonormal matrix that accom-
plishes projection onto the orthogonal complement v⊥

• Hm = Im×m − 1

m 1m×m is the m × m centering matrix

S =
N0
C1 =µ1+ N1 + S + bh1
C2 =µ2+aN2 + C1
C3 =µ3+ N3 + S
C4 =µ4+ N4 + bh1
Ck =µk+ Nk

(k ∈ N5:d)

the statistical properties of the generated dataset as follows.
The parameter b adjusts the severity of hidden confounding
between C1 and C4. Note also that the link between S and
C2 is weaker for higher values of b, i. e., corr(S, C2)2 =
1/(2+b2+a2). The link between C1 and C2 becomes noisier
for higher values of a, i. e., corr(C1, C2)2 = (2+b2)/(2+b2+a2).
Furthermore, the value of the objective function for recovering
C2 is lower for higher values of a since –in the inﬁnite sample
limit– we have

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

Σ−1

S,C1,C2

(cid:17)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

2,3

Σ−1

S,C1,C2

(cid:17)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

=

1
a2

1,3

Hence, these datasets allow to analyse the behaviour of the
algorithm for cause-effect relationships of different strengths
and its robustness against hidden confounding.

B. Assessing MERLiN’s performance

We introduce two performance measures to assess MER-
LiN’s performance on synthetic data with known ground truth
wG0. Since a solution can only be identiﬁed up to scaling, we
only need to consider the (d − 1)-sphere Od−1 = {x ∈ Rd :
||x|| = 1}. The closer a vector w ∈ Od−1 or its negation −w
is to the ground truth wG0 ∈ Od−1 the better. This leads to
the performance measure of angular distance

andiwG0 (w) (cid:44) min ((cid:94)(w, wG0), (cid:94)(−w, wG0)) ∈ [0, π/2]

Another approach is to assess the quality of the recovered
w by the probability of obtaining a vector that is closer to
wG0 if chosen uniformly at random on the (d − 1)-sphere. We
deﬁne the probability of a better vector as

pobvwG0(w) (cid:44) P [|wr · wG0| > |w · wG0|]
where wr ∼ Unif(Od−1) and d is the dimension of the
input vector. This quantity is obtained by dividing the area

where (N1, ..., Nd) ∼ N (0, 1)d, h1 ∼ N (µh1, 1), and
N0 ∼ Unif({−1, +1}) if T = B or S ∼ N (0, 1) if
T = G

• arrange the m samples s1, ..., sm of S in a column vector

S

• arrange each sample of (C1, ..., Cd) in a column vector
and (pre-)multiply by A to obtain the corresponding
sample of (F1, ..., Fd)

• arrange the m samples of (F1, ..., Fd) as columns of a

d × m matrix F

Output: S, F , v, wG0

aSince we can ignore scaling, it is not a problem that we in
fact generate an orthonormal matrix.

of the smallest hyperspherical cap centred at wG0 that con-
tains w or −w by half the area of the (d − 1)-sphere.
The former equals the area of the hyperspherical cap of
height h = 1 − |w · wG0|, the latter equals the area of the
hyperspherical cap of height r = 1. Exploiting the concise
formulas for the area of a hyperspherical cap with radius r
presented in [28] we obtain

pobvwG0 (w) = Ih(2−h)

(cid:19)

(cid:18) d − 1
2

,

1
2

where h = 1−|w ·wG0| and Ix(a, b) is the regularized incom-
plete beta function. It is interesting to note that Ix((d−1)/2, 1/2)
is the cumulative distribution function of a Beta((d−1)/2, 1/2)
distribution such that |wr · wG0|2 ∼ Beta(1/2, (d−1)/2).

For simplicity we drop the ground truth vector wG0 from
the notation and simply assume that the corresponding ground
truth vector is always the point of reference. Both performance
measures are related inasmuch as pobv(w) = 0 iff andi(w) =
0 and pobv(w) = 1 iff andi(w) = π/2. However, they capture
somewhat complementary information: andi(w) assesses how

7

The boxplots summarise the results of 100 experiments running
Fig. 4.
MERLiNΣ−1 on datasets Dd×m
(a, b) for T = G (cf. Section IV-A). The
performance measure pobvwG0
(w) is shown on the y-axes and described
in Section IV-B (low values are good). The box for d = 100, m = 50 is
missing since MERLiNΣ−1 can only be applied if d ≤ m.

T

The boxplots summarise the results of 100 experiments running
Fig. 5.
MERLiNΣ−1 on datasets Dd×m
(a, b) for T = G (cf. Section IV-A). The
performance measure andiwG0 (w) is shown on the y-axes and described
in Section IV-B (low values are good). The box for d = 100, m = 50 is
missing since MERLiNΣ−1 can only be applied if d ≤ m.

T

close the vector is in absolute terms, while pobv(w) accounts
for the increased problem complexity in higher dimensions.

C. Experimental results

We applied the precision matrix based MERLiNΣ−1 algo-
rithm (cf. Algorithm 1) to the synthetic datasets Dd×m
(a, b)
described in Section IV-A. The results of 100 runs11 for dif-
ferent conﬁgurations of d, m, a, b are summarised as boxplots
in Figures 4 and 5. Recall that lower values of pobvwG0 (w)
and andiwG0 (w) indicate that w is closer to the ground truth
wG0. We observe the following:

T

• The results for Gaussian (T = G) or binary (T = B; not

shown here) variable S are indistinguishable.

• Performance is insensitive to the severity of hidden
confounding, which can be seen by comparing the plots
row-wise for the different values of b. This behaviour is
expected since C4 (cid:54)⊥⊥ S|C1.

• Performance decreases with increasing noise level, i. e.,
with increasing values of a. Note that C2 is a sum of C1
and noise aN2 with variance 2 + b2 and a2 respectively.
• The problem becomes harder in higher dimensions, re-
sulting in worse performance. However, the results for
pobvwG0 (w) indicate that even if the solution is not
that close to wG0 in an absolute sense (andiwG0(w))
the solution is good in a probabilistic sense.

• More samples increase performance. Especially if the
noise level a and the dimension d are not both high at the
same time, MERLiN still achieves good performance on
m = 300 samples (cf. the results for a = 0.1, d = 100
or a = 1, d = 5).

11For each run we create a new dataset. This is the case for all ex-
periments on synthetic data. The performance measures andiwG0 (w) and
(w) are always considered wrt. the corresponding wG0 of each
pobvwG0
dataset instance.

V. HOW TO EXTEND MERLIN

In this section we demonstrate how the basic MERLiN
algorithm can be extended to enable application to different
data modalities by (a) including data speciﬁc preprocessing
steps into the optimisation procedure (cf. Section V-A), and
(b) incorporating a priori domain knowledge (cf. Section V-B).
In particular, we demonstrate this for neuroimaging data,
since stimulus-based experiments pose a prototype application
scenario for MERLiN for the following reasons.

1) In stimulus-based experiments the stimulus S is ran-
domised, meeting the assumption in Section III-A1 [11].
2) Recent work in the neuroimaging community focusses
on functional networks,
i. e., a (linear) combination
of activity spread across the brain that is functionally
(read causally) relevant [29]. Additionally, the recorded
activity is often assumed to be a linear combination of
underlying cortical variables, as for example in EEG [2].
3) Simple univariate methods sufﬁce to identify an effect

C1 of S [12, Interpretation rule S1].

The proposed method can readily be applied and com-
plement the standard analysis procedures employed in such
experiments. More precisely, MERLiN can recover meaningful
cortical networks (read causal variables) that are causally
affected by C1, thereby establishing a cause-effect relationship
between two functional brain state features.

A. MERLiNbp

Σ−1: adaptation to EEG data

Analyses of EEG data commonly focus on trial-averaged
log-bandpower in a particular frequency band. Accordingly,
we aim at identifying a linear combination of electrode signals
such that the trial-averaged log-bandpower of the recovered
signal is indirectly affected by the stimulus via another pre-
deﬁned cortical signal. We demonstrate how to do so by
extending the basic MERLiN algorithm to include the log-
bandpower computation into the optimisation procedure.

8

More precisely, we consider EEG trial-data of the form
(cid:101)F ∈ Rd×m×n where d denotes the number of electrodes, m
the number of trials, and n the length of the time series (cid:101)Fi,j,1:n
for each electrode i ∈ N1:d and each sample j ∈ N1:m.12
The aim is to identify a linear combination w ∈ Rd×1 such
that the log-bandpower of the resulting one-dimensional trial
signals w(cid:62) (cid:101)F1:d,j,1:n is a causal effect of the log-bandpower of
the one-dimensional trial signals v(cid:62) (cid:101)F1:d,j,1:n. However, since
the two operations of computing the log-bandpower (after
windowing) and taking a linear combination do not commute,
we cannot compute the trial-averaged log-bandpower for each
channel ﬁrst and then apply the standard precision matrix
based MERLiNΣ−1 algorithm. Instead, MERLiNbp
Σ−1 has been
adapted to the analysis of EEG data by switching in the log-
bandpower computation.

To simplify the optimisation loop we exploit the fact that
applying a Hanning window13 and the FFT to each channel’s
signal commutes with taking a linear combination of the
windowed and Fourier transformed time series. Note that av-
eraging of the log-moduli (log(| · |)) of the Fourier coefﬁcients
does not commute with taking a linear combination. Hence,
windowing and computing the FFT is done in a separate
preprocessing step (cf. Algorithm 3), while the trial-averaged
bandpower is computed within the optimisation loop after
taking the linear combination. Implementation details for the
bandpower and precision matrix based MERLiNbp
Σ−1 algorithm
are described in Algorithm 4. To ease implementation we treat
the complex numbers as two-dimensional vector space over the
reals.

B. MERLiNbp+

Σ−1: incorporating a priori knowledge
Here we demonstrate how to incorporate a priori do-
main knowledge by modifying the objective function of the
MERLiNbp
Σ−1 algorithm. Utilising a priori knowledge about
volume conduction in EEG recordings results in the reﬁned
MERLiNbp+

Σ−1 algorithm.

A cortical source projects into more than one EEG elec-
trode. In general, these volume conduction artefacts might lead
to wrong conclusions about interactions between sources [30].
Imaginary coherency, as introduced in [31], may help to
differentiate volume conduction artefacts from interactions
between cortical sources. To brieﬂy recap the rationale, we
employ the common assumption that the signals measured at
the EEG electrodes have no time-lag to the cortical signals
[32]. The coherency at a certain frequency of two time series
X and Y with Fourier coefﬁcients x(j), y(j), j ∈ N1:n is
deﬁned as

cohX,Y (j) =

E [x(j)y∗(j)]
(cid:112)E [x(j)x∗(j)] E [y(j)y∗(j)]

where ∗ denotes complex conjugation. Next consider the
coherency of X and Y + X

cohX,Y +X =

√

E[x(j)y∗(j)]+E[x(j)x∗(j)]
E[x(j)x∗(j)]E[(y(j)+x(j))(y∗(j)+x∗(j))]

12Note that the MERLiNΣ−1 algorithm takes data of the form F ∈ Rd×m

as input and cannot readily be applied to timeseries data (cid:101)F ∈ Rd×m×n.

13We apply a Hanning window in order to keep the feature computation in

line with [17].

Algorithm 3 Preprocessing for bp algorithm.
Input: S ∈ Rm×1, (cid:101)F ∈ Rd×m×n, v ∈ Rd×1, the sampling
frequency fs, and the desired frequency range deﬁned by ω1
and ω2
Procedure:

• set a := (cid:98) ω1n
fs
• for i from 1 to d, for j from 1 to m

(cid:99), b := (cid:98) ω2n
fs

(cid:99), and n(cid:48) := b − a + 1

– center, apply Hanning window and compute FFT,
treat (cid:101)Fi,j,1:n as a column vector and set

i. e.,
(cid:101)Fi,j,1:n := T W Hn (cid:101)Fi,j,1:n

• extract relevant Fourier coefﬁcients corresponding to v,

i. e., set

V Im := Im

v(cid:62) (cid:101)F1:d,j,a:b

V Re := Re

v(cid:62) (cid:101)F1:d,j,a:b

(cid:16)

(cid:16)

(cid:17)

(cid:17)

j=1:m

j=1:m

∈ Rm×n(cid:48)

∈ Rm×n(cid:48)

• remove direction v from (cid:101)F , i. e., for j from 1 to m set

F Im

1:(d−1),j,1:n(cid:48) := Im

P (v) (cid:101)F1:d,j,a:b

F Re

1:(d−1),j,1:n(cid:48) := Re

P (v) (cid:101)F1:d,j,a:b

(cid:16)

(cid:16)

(cid:17)

(cid:17)

∈ R(d−1)×n(cid:48)

∈ R(d−1)×n(cid:48)

such that F Im, F Re ∈ R(d−1)×m×n(cid:48)

Output: V Im, V Re ∈ Rm×n(cid:48)

and F Im, F Re ∈ R(d−1)×m×n(cid:48)

Deﬁnitions:

• P (v) is the (d − 1) × d orthonormal matrix that accom-
plishes projection onto the orthogonal complement v⊥

• Hn = In×n − 1
(cid:104) 1
• W =
2

(cid:16)

1 − cos 2πk
n−1

(cid:17)(cid:105)

window matrix
• T = (cid:2)exp (cid:0)−ı2πk l

(cid:1)(cid:3)

n

n 1n×n is the n × n centering matrix

is the n × n Hanning

k,l=1:n

k,l=1:n is the n × n FFT matrix

Algorithm 4 MERLiNbp
Refer to Algorithm 5 and instead use the objective function

Σ−1

f (w) =

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

and observe that E [x(j), x∗(j)]
is real. This shows that
non-zero imaginary coherency icohX,Y (j) (cid:44) Im(cohX,Y (j))
cannot be due to volume conduction and indicates time-
lagged interaction between sources since it
implies that
Im(E [x(j)y∗(j)]) (cid:54)= 0.14

This a priori knowledge is incorporated in MERLiNbp+

Σ−1 by

adapting the objective function to be

f (w) =

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

n(cid:48)
(cid:88)

j=1

(cid:12)
(cid:12)
(cid:12)
icoh(j)
(cid:12)
(cid:12)
(cid:12)

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

·

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

where (cid:98)Σ−1
w denotes the empirical precision matrix of the log-
bandpower features after taking the linear combination w

14Here we exploit the assumption of instantaneous mixing mentioned above.

Algorithm 5 MERLiNbp+
Σ−1
Input: S ∈ Rm×1, (cid:101)F ∈ Rd×m×n, v ∈ Rd×1, the sampling
frequency fs, and the desired frequency range deﬁned by ω1
and ω2
Procedure:

• obtain V Im, V Re ∈ Rm×n(cid:48)

and F Im, F Re ∈ Rd(cid:48)×m×n(cid:48)

via Algorithm 3 where d(cid:48) = d − 1
i,j )2
+(V Re
(cid:80)n(cid:48)
n

j=1 log∗

• set C :=

(V Im

(cid:32) (cid:113)

1
n(cid:48)

(cid:32)

i,j )2

(cid:33)(cid:33)

∈ Rm×1

i=1:m

(average log-bandpower per trial)

• deﬁne the objective function for w ∈ Od−2 as

f (w) =

icoh(j)

·

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

n(cid:48)
(cid:88)

j=1

(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

−

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

where the empirical precision matrix is

(cid:98)Σ−1

w =

(cid:18) 1

m − 1

[S, C, Dw](cid:62) Hm [S, C, Dw]

(cid:19)−1

,

the average log-bandpower per trial depending on w is


 1
n(cid:48)

Dw =

(cid:80)n(cid:48)

j=1 log∗





(cid:114)(cid:16)

w(cid:62)F Im

1:d(cid:48) ,i,j

+

w(cid:62)F Re

1:d(cid:48),i,j

(cid:17)2

(cid:16)

n





(cid:17)2





∈ Rm×1,

i=1:m

and the imaginary coherency icoh(j) for each frequency
j ∈ N1:n(cid:48) equals
(cid:104)V Im

i,j ·w(cid:62)F Re
i,j )2(cid:69)

i=1:m

1:d(cid:48) ,i,j −V Re
(cid:28)(cid:16)

1:d(cid:48) ,i,j(cid:105)i=1:m
i,j ·w(cid:62)F Im
(cid:17)2

(cid:16)

w(cid:62)F Im

1:d(cid:48) ,i,j

+

w(cid:62)F Re

1:d(cid:48),i,j

(cid:17)2(cid:29)

(cid:115)

(cid:68)(V Im

i,j )2

+(V Re

i=1:m

• optimise f as described in Section II-B to obtain the

vector w∗ ∈ Od−2

Output: w = P (v)(cid:62)w∗ ∈ Od−1

Deﬁnitions:

• P (v) is the (d − 1) × d orthonormal matrix that accom-
plishes projection onto the orthogonal complement v⊥

• Hm = Im×m − 1
m 1m×m is the m × m centering matrix
• log∗ is the extended log function with log∗(x) =

log(x), x > 0 and log∗(0) = 0

• the notation(cid:104)·(cid:105)i=1:m denotes the empirical mean, i. e.,

(cid:104)ai(cid:105)i=1:m = 1
m

(cid:80)m

i=1 ai

and icoh(j) denotes the imaginary coherency between the
signals corresponding to v and w estimated as average over
all trials (cf. Algorithm 5 for details). While there are several
ways of setting up the objective function we have chosen
this multiplicative set-up as it quite naturally captures the
following idea: whenever we ﬁnd the resulting bandpower to
be dependent on C1 we also want to ensure that this is not just
an artefact due to volume conduction. Note that this extension
may also help disentangle true cortical sources, i. e., the causal
variables, by avoiding a mixture of distinct sources affected
by C1 that have different time-lags and hence result in lower
imaginary coherency.

9

VI. EXPERIMENTS ON EMPIRICAL EEG DATA

We ran simulation experiments with the MERLiNbp

A. Sanity check of the included log-bandpower computation
Σ−1 algo-
rithm analogous to those presented in Section IV. For this
we used datasets T Dd×m×n
(a, b) that are generated from
Dd×m
(a, b) with ﬁxed mixing matrix A = Id×d as follows.
T
While S, v, wG0 remain unchanged the d × m matrix F is
replaced by a d × m × n tensor (cid:101)F that consists of dm chunks
of randomly chosen real EEG signals of length n. Each signal
(cid:101)Fi,j,1:n is modiﬁed such that the log-bandpower in the desired
frequency band equals Fi,j.

T

The log-bandpower computation was incorporated into the

algorithm in such a way that the optima for MERLiNbp
Σ−1
on T Dd×m×n
(a, b) coincide with those for MERLiNΣ−1 on
T
the corresponding dataset Dd×m×n
(a, b); however, the shape
of the objective functions is different. Accordingly and as
expected, sanity checks of MERLiNbp
(a, b)
show trends for varying parameters T, d, m, a, b similar to
those discussed in Section IV-C.

Σ−1 on T Dd×m×n

T

T

B. Description of empirical data

We next evaluate MERLiN with EEG data recorded during
a neurofeedback experiment [33].15 Subjects in this study
were instructed in pseudo-randomised order to up- or down-
regulate the amplitude of γ-oscillations (55–85 Hz) in the right
superior parietal cortex (SPC). For the feedback the activity
in the SPC was extracted by a linearly-constrained-minimum
variance (LCMV) beamformer [34] that was trained on 5 min
resting-state EEG data.

Each recording session (3 subjects a 2 sessions referred to
as S1R1, S1R2, S2R1, ...) consists of 60 trials of 60 seconds
each. The stimulus variable S is either +1 or −1 depending
on whether the subject was instructed to up- or down-regulate
γ-power in the SPC. Electromagnetic artefacts were attenu-
ated as described in [33, Section 2.4.1] and the EEG data
downsampled to 250 Hz. We are also given the spatial ﬁlter
v ∈ R121×1 for each session, i. e., the beamformer that was
used to extract the feedback signal. Thus, the data of one
session can be arranged as S ∈ {−1, +1}60×1, v ∈ R121×1
and (cid:101)F ∈ R121×60×15000 where (cid:101)F contains the timeseries (of
length 15000) for each channel and trial.

C. Assessing MERLiN’s performance

MERLiN’s performance on these data is assessed by com-
paring against results from an earlier exhaustive search ap-
proach. The hypothesis in [17] is that γ-oscillations in the
SPC modulate γ-oscillations in the medial prefrontal cortex
(MPFC) and was derived from previous transcranial magnetic
stimulation studies [35]. In order to test this hypothesis, the
signal of K (cid:44) 15028 dipoles across the cortical surface
was extracted using a LCMV beamformer and a three-shell
spherical head model [36]. The SCI algorithm was used to
assess for every dipole whether its γ-log-bandpower is a

15Data was recorded at 121 active electrodes placed according to the
extended 10–20 system at a sampling frequency of 500 Hz and converted
to common average reference.

10

TABLE I
ABSOLUTE (PARTIAL) CORRELATIONS BETWEEN γ-BANDPOWER IN THE
SPC (C1), THE γ-BANDPOWER OF THE SIGNAL w(cid:62)F IDENTIFIED BY THE

MERLINbp+

Σ−1 ALGORITHM (C2), AND THE INSTRUCTION TO UP- OR

DOWN-REGULATE THE γ-BANDPOWER IN THE SPC (S).

Session
S1R1
S1R2
S2R1
S2R2
S3R1
S3R2

|ρS,C1 |
0.88
0.81
0.34
0.44
0.93
0.88

|ρC1,C2|
0.36
0.64
0.92
0.55
0.90
0.95

|ρS,C2|
0.38
0.51
0.40
0.17
0.83
0.93

(cid:12)
(cid:12)

(cid:12)
(cid:12)ρS,C2|C1
0.16
0.01
0.23
0.09
0.02
0.67

Fig. 6. Figure adapted from [17]. The neurofeedback target area in the right
SPC is indicated by a pink circle. The SCI value denotes the percentage of
dipoles within a radius of 7 mm that were found to be modulated by the SPC.
From these results, the authors inferred the primary targets of the right SPC
to be the MPFC and additionally the right aMFG.

causal effect of the γ-log-bandpower in the SPC. This analysis
conﬁrmed the MPFC as a causal effect of the SPC (cf.
Figure 6).

To allow comparison against these results we derive a vector
g ∈ RK×1 that represents the involvement of each cortical
dipole in the signal identiﬁed by MERLiNbp+
Σ−1 as the linear
combination w of electrode signals. A scalp topography is
readily obtained via a ∝ Σw where the ith entry of Σw is the
covariance between the ith EEG channel and the source that is
recovered by w [37, Equation (7)]. Here Σ denotes the subject-
speciﬁc covariance matrix in the γ-frequency band. A dipole
involvement vector g is obtained from a via dynamic statis-
tical parametric mapping (dSPM; with the identity as noise
covariance matrix) [38]. The resulting vectors are expected to
be in line with previous ﬁndings and the hypothesis that the
MPFC is affected by the SPC.

D. Experimental results

We applied MERLiNbp+

Σ−1 several times, i. e., with different
random initialisations, to the data of each of the 6 sessions.16
We found that the γ-activation maps a obtained for each
spatial ﬁlter w were (a) rather smooth and similar to what is
typically assumed to be neurophysiologically plausible [39],
and (b) consistent across different initialisations within ses-
sions. The group average and individual dipole involvement
vectors are shown in Figure 7, and Table I shows the resulting
absolute (partial) correlations between γ-bandpower in the
SPC (C1), the γ-bandpower of the signal w(cid:62)F identiﬁed by
the MERLiNbp+
Σ−1 algorithm (C2), and the instruction to up- or
down-regulate the γ-bandpower in the SPC (S).

Our results are in line with the previous ﬁndings (cf.
Figure 6) inasmuch as they support the hypothesis that the

16Since there are only 60 samples per session we decided to select a subset
of 33 EEG channels distributed across the scalp (again according to the 10–20
system) after performing the preprocessing according to Algorithm 3. Hence,
each run of the algorithm yields a spatial ﬁlter w ∈ R33×1 and a dipole
involvement vector g ∈ RK×1.

MPFC is a causal effect of the SPC, i. e., S → C1 → C2. We
observe the following:

• For ﬁve out of six sessions and on group average the
MPFC shows up as being causally affected by the SPC.
• Comparing the marginal correlation ρS,C2 to the partial
correlation ρS,C2|C1 suggests that indeed C1 screens off
S and C2, which is incompatible with the causal graph
C1 ← S → C2. Recall that C2 (cid:54)⊥⊥ C1 and C2 ⊥⊥ S|C1
are sufﬁcient to uniquely infer S → C1 → C2 (cf.
Section III-B).

• Unlike the results in [17], the anterior middle frontal

gyrus does not show up in Figure 7.

• The parietal/posterior cingulate cortex shows up for ses-
sions S1R1 –here in addition to the MPFC– and for
session S3S2.

Note that we used MERLiN to recover only one causal
variable and hence, that the results are not expected to exactly
resemble the exhaustive search results in [17]. If the true
underlying graph is as depicted in Figure 8, then MERLiN
may recover any combination aC2 + bC3 as causal effect of
C1. This may explain both why the anterior middle frontal
gyrus does not show up in our analysis –MERLiN recovering
only one effect, namely C2 but not C3– and the lack of intra-
subject consistency –slight inter-session differences may lead
to recovery of different combinations of effects of C1. Also
note that if the assumption of orthogonal mixing is violated
the SPC signal can only be attenuated but not removed (cf.
Section III-C). This may explain the outlier result for session
S3R2: The high correlation between C1 and C2 indicates that
essentially the SPC signal was recovered, i. e., C1 ≈ C2.

VII. DISCUSSION

A. Summary of contributions

We have proposed a novel idea on how to construct causal
variables from observed non-causal variables by explicitly
optimising for the statistical properties that imply a certain
cause-effect relationship. This tackles the important problem
of causal variable construction, an issue in causal inference
that often goes unaddressed and is circumvented by presup-
posing pre-deﬁned meaningful variables among which cause-
effect relationships are to be inferred. The resulting MERLiN
algorithm can recover (or construct) a causal variable from

Group average

Left hemisphere

Right hemisphere

w
e
i
v

l
a
r
e
t
a
L

w
e
i
v

l
a
i
d
e
M

S1R1

S1R2

S2R1

S2R2

S3R1

S3R2

Fig. 7. Spatial pattern of the effect of the SPC as identiﬁed by MERLiNbp+
Σ−1 .
Group average (ﬁrst row) and for individual sessions (bottom rows). Each
subplot consists of a lateral (top) and medial (bottom) view of the left (left)
and right (right) hemisphere. (All colorscales from “blue” to “red” range from
0 to the largest value to be plotted.)

an observed linear mixture that is linearly affected by another
given variable. MERLiN can moreover be extended to enable
application to different data modalities by (a) including data
speciﬁc computation routines into the optimisation procedure,
and (b) incorporating further constraints derived from a priori
domain knowledge. We chose to demonstrate this through
application to EEG data, since stimulus-based neuroimaging
studies are a natural application scenario for MERLiN (cf.

11

S

C1

C2

C3

Fig. 8. Example causal graph. C2 and C3 are two distinct effects of C1.

Section V). Results on empirical EEG data indicate that
MERLiN can infer meaningful brain state features (read causal
variables) and establish a cause-effect relationship between
two cortical signals.

B. Applications in neuroimaging

As discussed in Section V interesting application scenarios
for MERLiN naturally arise in stimulus-based neuroimaging
studies. MERLiN’s fundamental idea is that the construction of
causal variables should explicitly take into account statistical
properties that correspond to causal structure. This supersedes
source separation procedures that often rest on implausible
assumptions and are not tailored towards subsequent causal
analyses (e. g. ICA in the context of EEG data). Besides
MERLiN’s conceptual vantage it is computationally efﬁcient
and enables us to bypass both source localisation (e. g. beam-
forming, dSPM) and an exhaustive search over 15028 dipoles.
While we have chosen EEG as an example use case for
extended MERLiN algorithms,
the extension presented in
this manuscript is hoped to serve as a demonstration that
will help researchers to adapt
the MERLiN algorithm to
other neuroimaging modalities. Future research may focus
on extending MERLiN to enable application to functional
magnetic resonance imaging data. This will, due to the high
dimensionality compared to the number of samples, again
require a modiﬁcation of the objective function regularising
the complexity of the linear combination w to avoid perfect
recovery of the stimulus variable.

C. Limitations and future research

MERLiN tries to identify w(cid:62)F = C2 in S → C1 → C2 and
rests on the assumption that there is no direct effect S → C2.
This assumption narrows down the class of causal variables
MERLiN can recover, e. g. if the true causal graph is as shown
in Figure 9a then MERLiN cannot recover C2. However, we
argue that this is not a strong limitation. First, in stimulus-
based neuroimaging experiments the assumption is likely to
be fulﬁlled if C1 is chosen to be a brain state feature that
reﬂects upstream processing of sensory input, e. g. the sec-
ondary visual cortex V2 may be assumed to be only indirectly
affected by visual stimuli via the primary visual cortex V1.
Second, the MERLiN algorithm is robust in the sense that
the statistical properties that it optimises for are sufﬁcient to
infer the cause-effect relationships S → C1 → w(cid:62)F . In
other words, we are on the safe side as long as we refrain
from drawing a conclusion if the statistical properties are not
met for the identiﬁed variable. Future research may focus on

S

C2

S

C2

S

X

D

12

C1

(a)

C1

h

(b)

Fig. 9. Example causal graphs where h denotes a hidden confounder.

how to recover C2 in scenarios like in Figure 9a. This is
complicated since the graphs in Figure 9a and Figure 9b are
Markov equivalent, i. e., they entail the same conditional (in-
)dependences. Hence, the cause-effect relationship C1 → C2
cannot be reliably inferred from conditional (in-)dependences
alone.

MERLiN may be applied in the d > m (high dimension
and small sample) setting if an additional regularisation term
penalizes the complexity of the linear combination w. This
leads to the following more general form of the objective
function

f (w) = (1 − λ)

− complexity(w)

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

2,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

− λ

(cid:16)

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:17)

(cid:98)Σ−1
w

1,3

(cid:12)
(cid:12)
(cid:12)
(cid:12)

where the additional parameter λ ∈ [0, 1] may enable to
improve performance by weighing dependence/conditional in-
dependence depending on the problem structure at hand.

Another limitation is that the MERLiN algorithm presented
in this manuscript only works for linear networks, i. e., it
fails for non-linear cause-effect relationships. This may not be
a strong limitation for neuroimaging applications given that
there is empirical evidence that the relations found in EEG
and functional magnetic resonance imaging are predominantly
linear [40], [41]. Nevertheless, future research will focus on
extending MERLiN to non-linear cause-effect relationships,
with preliminary results already available [42].

Future research may also investigate possibilities to assess
the statistical signiﬁcance and uncertainty associated with the
linear combination identiﬁed by MERLiN. The former may be
accomplished by a permutation scheme that involves running
the optimisation for each permutation. However, it cannot be
accomplished by standard signiﬁcance tests for (conditional)
dependence, since an optimisation procedure is employed
in obtaining the variables being tested, and this procedure
must be corrected for when determining the threshold for
signiﬁcance. The latter may be accomplished by bootstrap
techniques.

D. Disentangling multiple effects

MERLiN cannot unambiguously recover multiple effects
separately (e. g. A, B or C in Figure 10) as opposed to any
linear combination of those effects that all satisfy the sought-
after statistical properties (e. g. aA + bB + cC in Figure 10).
However, incorporating a priori knowledge as demonstrated
in Section V-B can mitigate this. When analysing EEG data,
for instance, one could a priori exclude spatial ﬁlters that are
neurophysiologically implausible and run optimisation over
the complement set instead of the whole unit-sphere.

A

B

C

Fig. 10.
(X → A → B) and direct (X → B) effects of X on B cancel.

Example causal graph for which it is supposed that the indirect

E. Faithfulness

While the faithfulness assumption remains untestable we are
unlikely to encounter violations in practice, e. g. we can show
that faithfulness holds almost surely if the causal relationships
are linear [43]. Multivariate causal inference methods may
be robust against certain violations of faithfulness, and hence
offer an alternative to such arguments. MERLiN, for example,
is able to identify cause-effect relationships in unfaithful
scenarios that cannot be revealed by classical univariate ap-
proaches. Consider the graph shown in Figure 10 and suppose
that the indirect (X → A → B) and direct (X → B) effects of
X on B cancel, i. e., X ⊥⊥ B wrt. the resulting and unfaithful
joint distribution. In this example, univariate methods cannot
infer the existence of the edge X → B, while MERLiN can
in principle determine that B is part of the revealed linear
combination and as such directly affected by X. The link to
faithfulness prompts further research on multivariate methods
and variants of the faithfulness assumption. Furthermore, it
stresses the importance of causal variable construction.

REFERENCES

[1] K. Chalupka, P. Perona, and F. Eberhardt, “Visual causal feature learn-
ing,” in Proceedings of the 31th Conference on Uncertainty in Artiﬁcial
Intelligence, 2015.

[2] P. Nunez and R. Srinivasan, Electric Fields of the Brain: The Neuro-

physics of EEG. Oxford University Press, 2006.

[3] D. Lowe, “Object recognition from local scale-invariant features,” in
Computer Vision, 1999. The Proceedings of the Seventh IEEE Interna-
tional Conference on, vol. 2, pp. 1150–1157, 1999.

[4] N. Dalal and B. Triggs, “Histograms of oriented gradients for human
detection,” in Computer Vision and Pattern Recognition, 2005. CVPR
2005. IEEE Computer Society Conference on, vol. 1, pp. 886–893, 2005.
[5] H. Bay, A. Ess, T. Tuytelaars, and L. V. Gool, “Speeded-up robust
features (SURF),” Computer Vision and Image Understanding, vol. 110,
no. 3, pp. 346–359, 2008.

[6] A. Hyv¨arinen and E. Oja, “Independent component analysis: algorithms
and applications,” Neural Networks, vol. 13, no. 4, pp. 411–430, 2000.
[7] S. Makeig, M. Westerﬁeld, T.-P. Jung, S. Enghoff, J. Townsend,
E. Courchesne, and T. J. Sejnowski, “Dynamic brain sources of visual
evoked responses,” Science, vol. 295, no. 5555, pp. 690–694, 2002.
[8] A. Hyv¨arinen, J. Karhunen, and E. Oja, Independent Component Anal-
ysis. Adaptive and Cognitive Dynamic Systems: Signal Processing,
Learning, Communications and Control, Wiley, 2004.

[9] J. Iriarte, E. Urrestarazu, M. Valencia, M. Alegre, A. Malanda, C. Viteri,
and J. Artieda, “Independent component analysis as a tool to eliminate
artifacts in EEG: A quantitative study,” Journal of clinical neurophysi-
ology, vol. 20, no. 4, pp. 249–257, 2003.

[10] A. Delorme, T. Sejnowski, and S. Makeig, “Enhanced detection of
artifacts in EEG data using higher-order statistics and independent
component analysis,” NeuroImage, vol. 34, no. 4, pp. 1443–1449, 2007.
[11] S. Weichwald, B. Sch¨olkopf, T. Ball, and M. Grosse-Wentrup, “Causal
and anti-causal learning in pattern recognition for neuroimaging,” in
Pattern Recognition in Neuroimaging, 2014 International Workshop on,
pp. 1–4, June 2014.

¨Ozdenizci, B. Sch¨olkopf, T. Ball, and
[12] S. Weichwald, T. Meyer, O.
M. Grosse-Wentrup, “Causal
interpretation rules for encoding and
decoding models in neuroimaging,” NeuroImage, vol. 110, pp. 48–59,
2015.

[13] J. D. Ramsey, S. J. Hanson, C. Hanson, Y. O. Halchenko, R. A.
Poldrack, and C. Glymour, “Six problems for causal inference from
fMRI,” NeuroImage, vol. 49, no. 2, pp. 1545–1558, 2010.

[14] M. Grosse-Wentrup, B. Sch¨olkopf, and J. Hill, “Causal inﬂuence of
gamma oscillations on the sensorimotor rhythm,” NeuroImage, vol. 56,
no. 2, pp. 837–842, 2011.

[15] J. D. Ramsey, S. J. Hanson, and C. Glymour, “Multi-subject search
correctly identiﬁes causal connections and most causal directions in the
DCM models of the smith et al. simulation study,” NeuroImage, vol. 58,
no. 3, pp. 838–848, 2011.

[16] J. A. Mumford and J. D. Ramsey, “Bayesian networks for fMRI: A

primer,” NeuroImage, vol. 86, pp. 573–582, 2014.

[17] M. Grosse-Wentrup, D. Janzing, M. Siegel, and B. Sch¨olkopf, “Identiﬁ-
cation of causal relations in neuroimaging data with latent confounders:
An instrumental variable approach,” NeuroImage, vol. 125, pp. 825–833,
2016.

[18] M. Eichler and V. Didelez, “On Granger causality and the effect of
interventions in time series,” Lifetime Data Analysis, vol. 16, no. 1,
pp. 3–32, 2010.

[19] J. T. Lizier and M. Prokopenko, “Differentiating information transfer
and causal effect,” The European Physical Journal B, vol. 73, no. 4,
pp. 605–615, 2010.

[20] P. Spirtes, C. Glymour, and R. Scheines, Causation, Prediction, and

[21] J. Pearl, Causality: Models, Reasoning and Inference. Cambridge

Search. MIT press, 2nd ed., 2000.

University Press, 2nd ed., 2009.

[22] S. L. Lauritzen, Graphical Models. Oxford University Press, 1996.
[23] T. Verma and J. Pearl, “Equivalence and synthesis of causal models,”
the 6th Conference on Uncertainty in Artiﬁcial

in Proceedings of
Intelligence, (Amsterdam, NL), pp. 255–268, Elsevier Science, 1990.

[24] J. Bergstra, O. Breuleux, F. Bastien, P. Lamblin, R. Pascanu, G. Des-
jardins, J. Turian, D. Warde-Farley, and Y. Bengio, “Theano: A CPU
and GPU math expression compiler,” in Proceedings of the Python for
Scientiﬁc Computing Conference (SciPy), June 2010. Oral Presentation.
[25] F. Bastien, P. Lamblin, R. Pascanu, J. Bergstra, I. J. Goodfellow,
A. Bergeron, N. Bouchard, and Y. Bengio, “Theano: New features
and speed improvements.” Deep Learning and Unsupervised Feature
Learning NIPS 2012 Workshop, 2012.

[26] J. Townsend, N. Koep, and S. Weichwald, “Pymanopt: A Python
Toolbox for Manifold Optimization using Automatic Differentiation,”
arXiv preprint arXiv:1603.03236, 2016.

[27] K. Baba, R. Shibata, and M. Sibuya, “Partial correlation and conditional
correlation as measures of conditional independence,” Australian & New
Zealand Journal of Statistics, vol. 46, no. 4, pp. 657–664, 2004.
[28] S. Li, “Concise formulas for the area and volume of a hyperspherical
cap,” Asian Journal of Mathematics and Statistics, vol. 4, no. 1, pp. 66–
70, 2011.

[29] M. P. van den Heuvel and H. E. H. Pol, “Exploring the brain network:
A review on resting-state fMRI functional connectivity,” European
Neuropsychopharmacology, vol. 20, no. 8, pp. 519 – 534, 2010.

13

[30] P. L. Nunez, R. Srinivasan, A. F. Westdorp, R. S. Wijesinghe, D. M.
Tucker, R. B. Silberstein, and P. J. Cadusch, “EEG coherency: I:
statistics, reference electrode, volume conduction, laplacians, cortical
imaging, and interpretation at multiple scales,” Electroencephalography
and Clinical Neurophysiology, vol. 103, no. 5, pp. 499–515, 1997.
[31] G. Nolte, O. Bai, L. Wheaton, Z. Mari, S. Vorbach, and M. Hallett,
“Identifying true brain interaction from EEG data using the imaginary
part of coherency,” Clinical Neurophysiology, vol. 115, no. 10, pp. 2292–
2307, 2004.

[32] J. Stinstra and M. Peters, “The volume conductor may act as a temporal
ﬁlter on the ECG and EEG,” Medical and Biological Engineering and
Computing, vol. 36, no. 6, pp. 711–716, 1998.

[33] M. Grosse-Wentrup and B. Sch¨olkopf, “A brain–computer interface
based on self-regulation of gamma-oscillations in the superior parietal
cortex,” Journal of neural engineering, vol. 11, no. 5, p. 056015, 2014.
[34] B. D. Van Veen, W. Van Drongelen, M. Yuchtman, and A. Suzuki, “Lo-
calization of brain electrical activity via linearly constrained minimum
variance spatial ﬁltering,” Biomedical Engineering, IEEE Transactions
on, vol. 44, no. 9, pp. 867–880, 1997.

[35] A. C. Chen, D. J. Oathes, C. Chang, T. Bradley, Z.-W. Zhou, L. M.
Williams, G. H. Glover, K. Deisseroth, and A. Etkin, “Causal
in-
teractions between fronto-parietal central executive and default-mode
networks in humans,” Proceedings of the National Academy of Sciences,
vol. 110, no. 49, pp. 19944–19949, 2013.

[36] J. C. Mosher, R. M. Leahy, and P. S. Lewis, “EEG and MEG: Forward
solutions for inverse methods,” Biomedical Engineering, IEEE Transac-
tions on, vol. 46, no. 3, pp. 245–259, 1999.

[37] S. Haufe, F. Meinecke, K. G¨orgen, S. D¨ahne, J.-D. Haynes, B. Blankertz,
and F. Bießmann, “On the interpretation of weight vectors of linear
models in multivariate neuroimaging,” NeuroImage, vol. 87, pp. 96–110,
2014.

[38] A. M. Dale, A. K. Liu, B. R. Fischl, R. L. Buckner, J. W. Belliveau,
J. D. Lewine, and E. Halgren, “Dynamic statistical parametric mapping:
Combining fMRI and MEG for high-resolution imaging of cortical
activity,” Neuron, vol. 26, no. 1, pp. 55–67, 2000.

[39] A. Delorme, J. Palmer, J. Onton, R. Oostenveld, and S. Makeig,
“Independent EEG sources are dipolar,” PLoS ONE, vol. 7, p. e30135,
02 2012.

[40] K.-R. M¨uller, C. W. Anderson, and G. E. Birch, “Linear and nonlinear
methods for brain-computer interfaces,” Neural Systems and Rehabili-
tation Engineering, IEEE Transactions on, vol. 11, no. 2, pp. 165–169,
2003.

[41] T. Naselaris, K. N. Kay, S. Nishimoto, and J. L. Gallant, “Encoding and
decoding in fmri,” Neuroimage, vol. 56, no. 2, pp. 400–410, 2011.
[42] S. Weichwald, A. Gretton, B. Sch¨olkopf, and M. Grosse-Wentrup,
“Recovery of non-linear cause-effect relationships from linearly mixed
neuroimaging data,” arXiv preprint arXiv:1605.00391, 2016. to appear
in Pattern Recognition in Neuroimaging, 2016 International Workshop
on.

[43] C. Meek, “Strong completeness and faithfulness in bayesian networks,”
the 11th Conference on Uncertainty in Artiﬁcial

in Proceedings of
Intelligence, pp. 411–418, 1995.

