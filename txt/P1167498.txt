Reading Scene Text with Attention Convolutional Sequence Modeling

Yunze Gao1,2, Yingying Chen1,2, Jinqiao Wang1,2, Hanqing Lu1,2
1National Lab of Pattern Recognition, Institute of Automation, Chinese Academy of Sciences, Beijing, China
2University of Chinese Academy of Sciences, Beijing, China
{yunze.gao, yingying.chen, jqwang, luhq}@nlpr.ia.ac.cn

7
1
0
2
 
p
e
S
 
3
1
 
 
]

V
C
.
s
c
[
 
 
1
v
3
0
3
4
0
.
9
0
7
1
:
v
i
X
r
a

Abstract

Reading text in the wild is a challenging task in the ﬁeld of
computer vision. Existing approaches mainly adopted Con-
nectionist Temporal Classiﬁcation (CTC) or Attention mod-
els based on Recurrent Neural Network (RNN), which is
computationally expensive and hard to train. In this paper, we
present an end-to-end Attention Convolutional Network for
scene text recognition. Firstly, instead of RNN, we adopt the
stacked convolutional layers to effectively capture the con-
textual dependencies of the input sequence, which is charac-
terized by lower computational complexity and easier paral-
lel computation. Compared to the chain structure of recurrent
networks, the Convolutional Neural Network (CNN) provides
a natural way to capture long-term dependencies between ele-
ments, which is 9 times faster than Bidirectional Long Short-
Term Memory (BLSTM). Furthermore, in order to enhance
the representation of foreground text and suppress the back-
ground noise, we incorporate the residual attention modules
into a small densely connected network to improve the dis-
criminability of CNN features. We validate the performance
of our approach on the standard benchmarks, including the
Street View Text, IIIT5K and ICDAR datasets. As a result,
state-of-the-art or highly-competitive performance and efﬁ-
ciency show the superiority of the proposed approach.

Introduction
Scene text recognition is to reading text in natural images,
which has received considerable attention and plays an im-
portant role in a variety of computer vision tasks. Reading
text in the wild can extract rich semantic information that is
highly relevant to scene or object and therefore has been ap-
plied in plenty of real world applications, such as street sign
reading in the driveless vehicle, automatic car license plate
recognition, assistive technologies for the blind, robot navi-
gation, scene understanding and image retrieval. However,
suffering from various appearance, distortion, low resolu-
tion, blur and disturbance of background noise, text recogni-
tion in unconstrained environment is still a challenging prob-
lem.

Traditional methods (Wang, Babenko, and Belongie
2011; Bissacco et al. 2013; Mishra, Alahari, and Jawahar
2012b) recognized scene text by ﬁrst detecting individual
character and then recognizing each cropped character with
convolutional neural network separately. A large amount of
inter-character and intra-character confusion impact the per-

Figure 1: Three typical architectures and our network for
scene text recognition. (a) CNN + softmax. (b) RNN + CTC.
(c) RNN + Attention. (d) CNN + CTC (our approach).

formance of the entire recognition network greatly. There-
fore, these approaches rely on an accurate character detector.
Recently, some works adopted an end-to-end CNN frame-
work for scene text recognition. (Jaderberg et al. 2016) for-
mulated the scene text recognition as an image classiﬁcation
problem. As shown in Figure 1(a), each class corresponds to
one word in a pre-deﬁned large lexicon composed of around
90k words. However, it is difﬁcult to be generalized to other
situations that has huge number of classes due to the oversize
pre-reﬁned dictionary and the requirement for large amount
of training samples.

To address this dilemma, recent studies (Shi, Bai, and Yao
2016; Lee and Osindero 2016; Shi et al. 2016) regarded
scene text recognition as a sequence recognition problem
to directly generate label sequence, by means of recurrent
neural network with CTC (Graves et al. 2006) or Atten-
tion schemes. As shown in Figure 1(b), RNN is leveraged
to model the sequential dependencies within the feature se-
quence produced by CNN and then CTC is to predict la-
bel sequence with arbitrary length. Afterwards, attention de-
coder (Shi et al. 2016; Lee and Osindero 2016) was proposed
to weight the feature sequence and perform soft features se-
lection, as illustrated in Figure 1(c).

RNN is effective to learn the contextual information and
capture the long-term dependencies. However, depending on
the computation of the previous step, the recurrent connec-

Figure 2: Overview of the attention convolutional network. The attention feature encoder is a small densely connected network
with residual attention for extracting feature sequence, in which each vector of the feature sequence corresponds to a local
region of the input image. Then the elements of the feature sequence are put together to form a 2D map, which serves as the
input of a convolutional neural network. Next, CNN captures the effective contextual information and learns the sequential
dependencies, which is characterized by lower computational complexity and easier parallel computation. Subsequently, the
output feature maps are restored to a sequence as the input of CTC to generate ﬁnal label sequence. Speciﬁcally, “n” denotes
the number of classes.

tion is incapable of performing parallel operations. The pro-
cess of sequence modeling is closely related to the length of
input sequence due to the chain structure, so recurrent net-
work is computation intensive and time consuming. Besides,
sometimes RNN is difﬁcult to train due to the problem of
gradient vanishing/exploding (Bengio, Simard, and Frasconi
1994). By contrast, CNN has the superiority of parallelism
and lower computational complexity. Convolutional layers
apply ﬁlters over the entire sequence simultaneously and
allow parallel computation. Recent works have used CNN
for sequence learning in machine translation (Gehring et al.
2017) and language modeling (Dauphin et al. 2016). In this
paper, we present an end-to-end attention convolutional net-
work for scene text recognition, which combines CNN with
CTC to generate label sequence, without any recurrent con-
nections, as shown in Figure 1(d). Firstly, a sequence-to-map
operation transforms the feature sequence into a 2D map as
the input of CNN to process the sequence simultaneously.
Then stacked convolutional layers can extract hierarchical
contextual representation of the input sequence to model the
long-term dependencies with a shorter path. At the same
time, the length of dependencies can be controlled by the
number of convolutional layers. This architecture is entirely
convolutional, so it is easily for parallel processing and in-
dependent of the sequence length.

Besides, in order to enhance the representation of the
text to be recognized and suppress the background noise,
we incorporate a residual attention mechanism into a small
densely connected network to extract the discriminative
attention-aware features. We evaluate our approach on chal-
lenging benchmarks including the Street View Text, IIIT-
5K and ICDAR datasets. It is observed that the proposed
method can improve the efﬁciency with the state-of-the-art
performance. The mainly contributions are summarized as

follows:

(1) A novel end-to-end attention convolutional network is
proposed for scene text recognition, which is entirely con-
volutional and performs well with both high accuracy and
efﬁciency.

(2) Instead of RNN, we adopt the stacked convolutional
layers to effectively capture the contextual dependencies of
the input sequence, which is characterized by lower compu-
tational complexity and easier parallel computation.

(3) The residual attention modules in the small densely
connected network could effectively suppress the response
of background noise while enhancing the representation of
foreground text.

Related Work
Traditional methods of scene text recognition ﬁrst per-
formed detection to generate multiple candidates of char-
acter locations, then applied a character classiﬁer for recog-
nition. (Wang, Babenko, and Belongie 2011) used Random
Ferns and HOG features to detect characters and then found
an optimal conﬁguration of a particular word via a picto-
rial structure. (Mishra, Alahari, and Jawahar 2012b) detected
character candidates using sliding windows and integrated
both bottom-up and top-down cues in a uniﬁed Conditional
Random Field (CRF) model. (Shi et al. 2013) constructed
a part-based tree-structured model to recognize characters
in cropped images. (Yao et al. 2014) proposed an alterna-
tive way for character representation, denoted as Strokelets,
which was a combination of multi-scale mid-lever features.
Afterwards, the explorations of scene text recognition fo-
cus on the mapping from the entire image to word string
directly. (Almaz´an et al. 2014) embedded word images and
word labels into a common Euclidean space and the embed-

ding vectors were used to match images and labels. (Jader-
berg et al. 2014a) constructed two CNNs to classify charac-
ter at each position in the word and detect the N-grams con-
tained within the word separately, following a CRF model
to combile their representations. Recently, there are increas-
ing researches on treating scene text recognition as a se-
quence recognition problem. (Shi, Bai, and Yao 2016) pro-
posed Convolutional Recurrent Neural Network (CRNN)
which combined convolutional network and recurrent net-
work to model the spatial dependencies. In (Lee and Osin-
dero 2016), a recurrent network with attention mechanism
was constructed to decode feature sequence and predict la-
bels recurrently. (Shi et al. 2016) adopted a convolutional-
recurrent structure in the encoder to learn the sequential dy-
namics.

Since the lower computational complexity and greater
parallelism, CNN is a more efﬁcient structure to capture
the sequential contextual information. Some attempts for ap-
plying CNN to sequence modeling have been made to re-
place RNN. (Dauphin et al. 2016) introduced a new neu-
ral language model that replaced the recurrent connections
typically used in RNN with gated temporal convolutions.
(Strubell et al. 2017) proposed the Iterated Dilated Convolu-
tional Neural Networks (ID-CNNs), which was a faster al-
ternative to recurrent network for obtaining per token vec-
tor representations in Natural Language Processing (NLP).
(Gehring et al. 2017) proposed an architecture based entirely
on convolutional neural network in machine translation. Al-
though CNN has shown the superiority of parallelism and
efﬁciency, as far as we know, there is no research on using
CNN to perform sequence generation in the ﬁeld of scene
text recognition. Our method incorporates CNN and CTC
into a uniﬁed framework without any recurrent connections,
which improves the efﬁciency while achieving good perfor-
mance. Furthermore, the proposed algorithm is not limited
by a pre-reﬁned dictionary and is available in both lexicon-
free and lexicon-based setting. Without individual character
detection, the proposed network can be trained end-to-end
with the word level annotations and can effectively deal with
words with arbitrary length.

The Proposed Approach
The overview of the attention convolutional network for
scene text recognition is illustrated in Figure 2, which is
composed of an attention feature encoder, a convolutional
sequence modeling module and a CTC module. The at-
tention feature encoder is a small densely connected net-
work with residual attention for extracting feature sequence.
Speciﬁcally, The encoder takes the cropped word image as
input and extracts robust feature representation for the en-
tire image, with a residual attention mechanism to suppress
background noise. Then the feature maps produced by the
dense attention network are converted into a feature se-
quence. Each element in the feature sequence, which cor-
responds to a local region of the word image, can be viewed
as the feature representation of the region. In the convolu-
tional sequence modeling module, in order to process the se-
quence simultaneously, a sequence-to-map operation trans-
forms the feature sequence into a 2D map to serve as the in-

put of the convolutional layers. Then stacked convolutional
layers are leveraged to capture the effective contextual in-
formation and learn the sequential dependencies. Next, the
same as the map-to-sequence operation in the encoder, the
output feature maps are restored to a sequence as the input
of CTC. Finally, CTC is used to perform sequence genera-
tion with arbitrary length. In the following sections, we will
describe the three components in detail.

Attention Feature Encoder
To improve the discriminability of CNN features, we design
a dense attention encoder network to extract the attention-
aware representation. In dense blocks, dense connectivity
can improve the information ﬂow between layers, and mean-
while, equipped with a residual attention mechanism, the
disturbance of background noise can be effectively reduced.
Furthermore, we convert the feature maps into a sequential
representation of the input image. Speciﬁcally, in a left-to-
right order, we take out the same columns of feature maps
and concatenate them into a vector, which corresponds to a
local rectangular region of the word image.

Dense Connectivity Taking advantage of the power of
Densenet (Huang et al. 2016), we utilize the dense con-
nectivity to improve the ﬂow of information and gradient
propagation in the encoder network. There exists direct con-
nections between all layers in the dense block. Therefore,
each layer can get the information from all preceding lay-
ers and transmit its message to all subsequent layers. Ad-
ditionally, instead of gradient back propagation from layer
to layer, each layer can obtain the deep supervision, which
eases the learning. The concatenation of feature maps pro-
duced by preceding layers severs as the input of the later
layers.

Residual Attention Attention mechanism plays an impor-
tant guiding role in the process of feature learning, which
aims to selectively focus on the salient regions of the ob-
jects and enhance the representation of relevant parts. For
text in natural images, there often exists some disturbances,
including shadow, irrelevant symbols and background tex-
ture. The scene text with various appearance is often con-
fused by these factors. Therefore, we introduce a residual
attention mechanism as (Wang et al. 2017) to enhance the
representation of foreground text and suppress background
noise.

The residual attention module serves as the transition be-
tween dense blocks, which is divided into two branches.
Speciﬁcally, the feature branch performs the feedforward
process and the attention branch generates the soft atten-
tion weights. The attention branch is designed with bottom-
up top-down structure so that the high-level semantic in-
formation can be captured to guide the discriminative fea-
ture selection. Max pooling followed by the convolutional
layer are stacked several times to increase the receptive ﬁeld
rapidly and collect the global information. Then a symmetri-
cal architecture with bilinear interpolation for upsampling is
applied to recover the resolution. Afterwards, the attention
maps as soft weights are added on corresponding feature
maps in each position. Considering the attention weights

range from zero to one, the element-wise product between
feature maps and attention maps may cause severe degrada-
tion of useful information. Therefore, the residual attention
learning is utilized to address this issue. Similar to the con-
nection in Resnet (He et al. 2016), the output of residual
attention module is:

T = (1 + A) × F

(1)

where F and A denote the output of the feature branch
and the attention branch, respectively. In this way, the back-
ground noise can be suppressed efﬁciently while enhancing
the discriminability of original features. Furthermore, differ-
ent attention modules generate the attention maps adapted
to the corresponding features. The low-level attention mod-
ule mainly concentrates on the appearance including edge,
color and texture, while the high level attention module con-
tains more semantic information. With the residual attention
mechanism, the feature encoder beneﬁts from the noise sup-
pression to obtain a more discriminative representation.

Convolutional Sequence Modeling
As the dominant approach of sequence to sequence learning,
RNN has been successfully applied in many computer vision
tasks, including speech recognition (Hannun et al. 2014;
Miao, Metze, and Rawat 2013), language modeling (Joze-
fowicz et al. 2016) and machine translation (Luong et al.
2014). However, depending on the computation of the pre-
vious step, the recurrent connection is incapable of perform-
ing parallel operations. Besides, sometimes RNN is difﬁcult
to train due to the problem of gradient vanishing/exploding.
Therefore, in this paper, we adopt CNN to capture the se-
quential dependencies with both directions for scene text
recognition, which is a faster alternative of recurrent net-
work. Given the feature sequence produced by encoder,
which is denoted as f = (f1, f2, · · · , fw). In order to get
the contextual information c = (c1, c2, · · · , cw), the recur-
rent neural network R generates the contextual represen-
tation through the recurrent connection ci = R(ci−1, fi),
which is a chain structure and is unable to perform parallel
computation.

Our approach models the sequential dependencies with
entirely convolutional operation. Firstly, the elements of the
feature sequence are put together to form a 2D map, where
each column is associated with a local region of original
word image from left to right. Then we convolve the in-
put using a ﬁlter with width k, resulting contextual infor-
mation over k elements of the input sequence. Stacked con-
volutional layers generate the hierarchical representation to
enlarge the size of receptive ﬁeld rapidly. For example, 4
convolutional layers with kernel size k = 5 can capture the
information of 17 input elements. In this way, we can eas-
ily control the range of spatial dependencies to be modeled
through the number of convolutional layers. When there are
sufﬁcient layers, the high-level features can obtain the re-
quiring contextual information. Besides, the convolution op-
eration does not depend on the state of the previous step and
is irrelevant to the length of input sequence. Therefore, the
computation over the entire sequence can be simultaneously

processed, which could greatly accelerate the process of se-
quence modeling. Furthermore, the convolutional network
consumes less memory space and running time due to fewer
parameters and lower computation complexity.

In the process of sequence modeling, we ensure that the
length of sequence remains unchanged, by means of con-
volution with zero padding. Afterwards, in order to get the
sequential representation to serve as the input of CTC, we
restore the output feature maps to a sequence again by the
same map-to-sequence operation in the feature encoder. As-
suming the feature maps produced by CNN have the dimen-
sion of C × H × W , where C, H and W denote the chan-
nels, height and width, respectively. Speciﬁcally, we crop the
each channel of feature maps by column and then concate-
nate the same columns of all channels into a vector, which
has a dimension of C × H. Therefore, we can obtain a se-
quence with W vectors, which is the contextual information
c = (c1, c2, · · · , cw). Finally, for the generated sequence,
we obtain the probability distribution over the label space
for per-frame in the sequence via a linear layer:

yt = sof tmax(W ∗ ct + b), t = 1, · · · , w

(2)

where W and b denote the weight matrix and bias separately.

label sequence for the input

Connectionist Temporal Classiﬁcation
im-
To generate the ﬁnal
the output probability distribution sequence y =
age,
(y1, y2, · · · , yw) is interpreted as conditional probabilities
over possible label sequences, using the Connectionist Tem-
poral Classiﬁcation (CTC) proposed by (Graves et al. 2006).
Deﬁning L as the set of 36 classes including all English al-
phanumeric characters, we get the ﬁnal label space L
=
L ∪ {blank}, in which the extra blank denotes the class for
observing no character. Given the probability distribution,
the conditional probability of the sequence π is

(cid:48)

p(π|y) =

w
(cid:89)

t=1

yt
πt

(3)

(4)

where yt
πt denotes the probability of emtting label πt at step
t. Then a many-to-one mapping B is deﬁned to transform
the sequence π to a shorter sequence as the ﬁnal prediction.
The operation B is to merge the repeated continuous labels
to a single one and then remove the blank labels. For exam-
ple, B maps the sequence “- -aa-b- -c-dd” to “abcd”, where
the ‘-’ represents the blank. Different sequences π may be
mapped to the same result, thus the probability of the ﬁnal
output sequence is formulated as the sum of the conditional
probabilities of all π corresponding to it:

p(l|y) =

p(π|y)

(cid:88)

π∈B−1(l)

In genaral, for a given sequence, there are a large number
of mapping paths. Thus the computation of the sum in Equa-
tion 4 is time consuming. To remedy this issue, the forward-
backward algorithm based on dynamic programming is used
to calculate the conditional probability and the error differ-
entials in an efﬁcient way.

Given the training set D = {Ii, li}, where Ii and li rep-
resent the word image and the corresponding ground truth
label, respectively. The objective function is formulated as
the sum of the negative log likelihood of the probabilities
for target labels:

O = −

(cid:88)

log p(li|yi)

(Ii,li)∈D

(5)

Minimizing the objective function equals to maximize
the probability of producing the target labels, which can be
solved by dynamic programming. By means of CTC, we
can handle sequences with arbitrary length, requiring no pre-
segmented training data.

Lexicon-free Recognition Our network can be used in the
lexicon-free setting, i.e., the predicted words are not con-
strained with a pre-deﬁned dictionary. During inference, the
sequence with the highest conditional probability severs as
the ﬁnal output. However, there is no a general and tractable
approach to ﬁnd the optimal solution. So the approach of
the best path decoding (Graves et al. 2006) is applied to get
the output label sequence approximately, assuming that the
most probable path corresponds to the most probable label:

lp = B(argmax

p(π|y))

π

(6)

Speciﬁcally, the most probable path π is produced by
emitting the label with the highest probability at each step.

Lexicon-based Recognition In the constrained condition,
the prediction is generated by selecting the word with the
highest conditional probability in the pre-deﬁned lexicon.
However, the probabilities need to be computed for all words
in the dictionary, which is time consuming and infeasible. So
we adopt an approximate method by comparing the edit dis-
tance between the predicted sequence in the lexicon-free set-
ting and words in the lexicon, then choosing the word with
the smallest edit distance as the output label.

Experiment
In this section, we will give the implementation details and
evaluate the performance of the proposed approach.

Dataset

Several public datasets are used for the evaluation, including
Street View Text, IIIT5K, ICDAR 2003 and ICDAR 2013.

• Street View Text (Wang, Babenko, and Belongie 2011)
contains 647 word images which are cropped from 249
street-view images collected from Google Street View.
For each image, there is a 50 words lexicon deﬁned by
(Wang, Babenko, and Belongie 2011), denoted as SVT-
50.

• IIIT5K (Mishra, Alahari, and Jawahar 2012a) contains
3000 cropped word images collected from the Internet.
Each image has a 50 words lexicon and a 1000 words lex-
icon, denoted as IIIT5k-50 and IIIT5k-1k separately.

Table 1: Network architecture of the attention convolutional
network. The growth rate is 18 in the dense blocks. Stride
2×1 represents the ﬁlter with height 2 and width 1.

Module

Encoder

CNN

CTC

Layer
Convolution
Dense Block
Attention Module
Average Pooling
Dense Block
Attention Module
Average Pooling
Dense Block
Convolution
Average Pooling
Convolution
Convolution
Convolution
Convolution
Convolution
CTC

Conﬁgurations
3×3, 36, stride 1×1
[3×3, stride 1×1] × 4
Attention 1
2×2, stride 2×2
[3×3, stride 1×1] × 4
Attention 1
2×2, stride 2×2
[3×3, stride 1×1] × 4
3×3, 512, stride 1×1
2×2, stride 2×1
3×3, 512, stride 1×1
3×3, 1, stride 2×1
3×3, 1, stride 2×1
3×3, 1, stride 2×1
3×3, 1, stride 2×1
-

• ICDAR 2003 (Lucas et al. 2005) contains 251 scene im-
ages and 860 cropped word images. The 50 words lexi-
con for each image is deﬁned by (Wang, Babenko, and
Belongie 2011), which is denoted as IC03-50. And a full
lexicon is composed of all the words that appear in the
test set, denoted as IC03-Full.

• ICDAR 2013 (Karatzas et al. 2013) contains 1015
cropped word images without any lexicon, which derives
from the ICDAR 2003.

For training data, our model is trained purely on the syn-
thetic dataset released by (Jaderberg et al. 2014b), without
any extra data for ﬁne-tuning. The synthetic dataset contains
around 8 millions images, which are generated by an syn-
thetic engine. Following the evaluation protocol in (Wang,
Babenko, and Belongie 2011), we perform recognition on
word images that contain only alphanumeric characters and
at least three characters.

Implementation Details
The network architecture of our approach is shown in Table
1. The attention feature encoder is composed of three dense
blocks and two residual attention modules. For each dense
block, there are four convolutional layers and the growth rate
is 18. For residual attention, the feature branch has one con-
volutional layer and the attention branch has the bottom-up
top-down structure. In detail, 3,2 max pooling are used in the
two residual attention modules, respectively. And a sigmoid
function is applied to normalize the weights in attention
maps. Besides, the skip connection is added to fuse infor-
mation with different scales. Additionally, the CNN for se-
quence modeling contains 4 convolutional layers, so that the
per-frame representation of the output sequence can cover
the contextual information over 9 input elements. All the
convolution are performed with zero padding, ReLU acti-
vation function and batch normalization (Ioffe and Szegedy

Table 2: Scene text recognition accuracies on the benchmark datasets. “50”, “1000” and “Full” represent the size of lexicon
used for constrained recognition. “∗”(Jaderberg et al. 2016) is not lexicon-free strictly, due to the output sequence is constrained
to a 90k dictionary.

SVT IIIT5k-50

IIIT5k IC03-50

IC03 IC13

Methods
ABBYY(2011)
Wang et al.(2011)
Mishra et al.(2012a)
Wang et al.(2012)
Goel et al.(2013)
Bissacco et al.(2013)
Alsharif and Pineau (2013)
Almaz´an et al.(2014)
Yao et al.(2014)
Rodriguez-Serrano et al.(2015)
Jaderberg et al.(2014)
Su and Lu (2014)
Gordo (2015)
∗Jaderberg et al.(2016)
Jaderberg et al.(2014a)
Shi et al.(2016)
Shi et al.(2016)
Lee et al.(2016)
Ghosh et al.(2017)
Ours

SVT-50
35.0
57.0
73.2
70.0
77.3
90.4
74.3
89.2
75.9
70.0
86.1
83.0
91.8
95.4
93.2
97.5
95.5
96.3
95.2
97.4

-
-
-
-
-
78.0
-
-
-
-
-
-
-
80.7
71.7
82.7
81.9
80.7
80.4
82.7

24.3
-
64.1
-
-
-
-
91.2
80.2
76.1
-
-
93.3
97.1
95.5
97.8
96.2
96.8
-
99.1

IIIT5k-1k
-
-
57.5
-
-
-
-
82.1
69.3
57.4
-
-
86.6
92.7
89.6
95.0
93.8
94.4
-
97.9

-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
81.2
81.9
78.4
-
81.8

56.0
76.0
81.8
90.0
89.7
-
93.1
-
88.5
-
96.2
92.0
-
98.7
97.8
98.7
98.3
97.9
95.7
98.7

IC03-Full
55.0
62.0
67.8
84.0
-
-
88.6
-
80.3
-
91.5
82.0
-
98.6
97.0
98.0
96.2
97.0
94.1
96.7

-
-
-
-
-
-
-
-
-
-
-
-
-
93.1
89.6
91.9
90.1
88.7
92.6
89.2

-
-
-
-
-
87.6
-
-
-
-
-
-
-
90.8
81.8
89.6
88.6
90.0
-
88.0

2015).

In the process of training and testing, the word images are
resized to 32 × 100 with gray scale. We adopt the msra (He
et al. 2015) as the weight initialization method and train our
network using Adam (Kingma and Ba 2014) with a mini-
batch size of 64. Moreover, the gradient clipping is used at
the magnitude of 5. The proposed network is implemented
with Tensorﬂow (Abadi et al. 2016).

Ablation Study

In this section, we evaluate the contributions of the two main
components in the proposed approach, including residual at-
tention modules for suppressing noise and convolutional net-
work for sequence modeling.

Residual Attention Module To validate the effectiveness
of residual attention modules, we explore the performance
of densely connected network with BLSTM and CNN while
applying residual attention mechanism. As shown in Table
3, the networks with residual attention modules consistently
outperform the networks without attention, which proves
the effectiveness of the method. Besides, we observe that
the improvements brought by residual attention modules on
ICDAR datasets are not as signiﬁcant as that on SVT and
IIIT5k. The possible reason is that the proportion of images
with background noise in SVT and IIIT5k is higher than that
in ICDAR datasets. Furthermore, we visualize the attention
maps of some examples in Figure 3. As shown in Figure 3,
the attention maps focus on the foreground text to be rec-
ognized and effectively reduce the response of background
noise including shadow, irrelevant symbols, and background
texture.

Table 3: Lexicon-free scene text recognition accuracies on
standard benchmarks. The growth rate is 18 for all networks.

Method
Dense+BLSTM

SVT IIIT5k IC03 IC13
89.5
81.9
88.7
Dense+BLSTM+attention 83.0
88.6
81.2
88.0
82.7

Dense+CNN
Dense+CNN+attention

90.7
90.8
88.3
89.2

80.4
83.0
79.6
81.8

Convolutional vs. Recurrent Model To compare the per-
formance of recurrent network and convolutional network,
we replace the convolutional layers for sequence modeling
with 2 layers BLSTM which has 256 units per layer as the
baseline. As shown in Table 4, compared with BLSTM, the
convolutional neural network requires signiﬁcantly fewer
parameters and less time to achieve comparable perfor-
mance. Furthermore, the speed of sequence modeling with
CNN can run 9 times faster than BLSTM and the parameters
are greatly reduced. Therefore, the proposed CNN model
signiﬁcantly improves the efﬁciency while maintaining good
performance. The convolutional sequence modeling module
also can be used in other networks to capture contextual de-
pendencies and achieve high efﬁciency.

Comparisons with State-of-the-art Methods
We evaluate the attention convolutional network on the
above four public datasets and compare it with state-of-the-
art algorithms in Table 2. Most existing approaches were in-
capable of performing recognition without a dictionary and
did not report the results in the unconstrained condition. By
contrast, our method is available in both lexicon-free and

connected network with residual attention modules for ex-
tracting features, stacked convolutional layers for sequence
modeling and CTC for sequence generation. Instead of
RNN, we introduce a convolutional neural network to cap-
ture the contextual information and model long-term depen-
dencies with fewer parameters, which is 9 times faster than
BLSTM. In addition, the usage of residual attention mecha-
nism signiﬁcantly improves the performance and suppresses
background noise. Finally, the proposed network can be
trained end-to-end with the word level annotations. And our
method has capability of handling with word sequences with
arbitrary length in both lexicon-free and lexicon-based set-
ting. The extensive experimental results on the challenging
datasets demonstrate the superiority of our approach com-
pared with the state-of-the-art methods.

References
Abadi, M.; Agarwal, A.; Barham, P.; Brevdo, E.; Chen,
Z.; Citro, C.; Corrado, G. S.; Davis, A.; Dean, J.; Devin,
M.; et al. 2016. Tensorﬂow: Large-scale machine learn-
ing on heterogeneous distributed systems. arXiv preprint
arXiv:1603.04467.
Almaz´an, J.; Gordo, A.; Forn´es, A.; and Valveny, E. 2014.
Word spotting and recognition with embedded attributes.
IEEE transactions on pattern analysis and machine intel-
ligence 36(12):2552–2566.
Alsharif, O., and Pineau, J. 2013. End-to-end text recog-
nition with hybrid hmm maxout models. arXiv preprint
arXiv:1310.1811.
Bengio, Y.; Simard, P.; and Frasconi, P. 1994. Learning
long-term dependencies with gradient descent is difﬁcult.
IEEE transactions on neural networks 5(2):157–166.
Bissacco, A.; Cummins, M.; Netzer, Y.; and Neven, H. 2013.
Photoocr: Reading text in uncontrolled conditions. In Pro-
ceedings of the IEEE International Conference on Computer
Vision, 785–792.
Dauphin, Y. N.; Fan, A.; Auli, M.; and Grangier, D. 2016.
Language modeling with gated convolutional networks.
arXiv preprint arXiv:1612.08083.
Gehring, J.; Auli, M.; Grangier, D.; Yarats, D.; and Dauphin,
Y. N. 2017. Convolutional sequence to sequence learning.
arXiv preprint arXiv:1705.03122.
Ghosh, S. K.; Valveny, E.; and Bagdanov, A. D. 2017. Visual
attention models for scene text recognition. arXiv preprint
arXiv:1706.01487.
Goel, V.; Mishra, A.; Alahari, K.; and Jawahar, C. 2013.
Whole is greater than sum of parts: Recognizing scene text
In Document Analysis and Recognition (ICDAR),
words.
2013 12th International Conference on, 398–402. IEEE.
Gordo, A. 2015. Supervised mid-level features for word im-
age representation. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, 2956–2964.
Graves, A.; Fern´andez, S.; Gomez, F.; and Schmidhuber, J.
2006. Connectionist temporal classiﬁcation: labelling un-
segmented sequence data with recurrent neural networks.
In Proceedings of the 23rd international conference on Ma-
chine learning, 369–376. ACM.

Figure 3: Visualization of the feature maps and attention
maps. (a) Original images. (b) Feature maps before atten-
tion. (c) Attention maps. (d) Feature maps after attention.

Table 4: Comparison between CNN and BLSTM. The SM
time represents the time for sequence modeling (SM) with
CNN or BLSTM.
Model
BLSTM-2L
CNN-4L

Total time
45.3ms
19.6ms

SM time
31.7ms
3.5ms

Params
141.5M
75.4M

SVT
83.0
82.7

lexicon-based setting.

For lexicon-free recognition, our network achieves the
state-of-the-art or highly competitive performance. Specif-
ically, we obtain the best result on SVT and the second best
result on IIIT5k. It is worthy noting that the model in (Jader-
berg et al. 2016) only can deal with the words in its 90k dic-
tionary, which is not lexicon-free recognition strictly. Dif-
ferent form (Jaderberg et al. 2016), our approach is able to
recognize random word strings, which is not restricted by
a ﬁxed dictionary. Besides, we obtain the better or compa-
rable results compared with (Shi et al. 2016), while (Shi et
al. 2016) used Spatial Transformer Network (STN) to rec-
tify the irregular text. We do not perform any special op-
eration aimed at irregular text, which shows the tolerance
of our network to spatial distortions of scene text. Further-
more, most methods used RNN to capture contextual depen-
dencies, while we adopt convolutional sequence modeling
to achieve higher efﬁciency and competitive results.

For lexicon-based recognition, our method consistently
outperforms other approaches on several benchmarks. Es-
pecially, we outperform prior state-of-the-art (Shi, Bai, and
Yao 2016) by margin of nearly 3 percentages on IIIT5k with
1000 words lexicon. The signiﬁcant improvement validates
the effectiveness of our method. Moreover, it is observed
that IIIT5k contains plenty of images suffering from back-
ground noise, which proves the superiority of our method
in suppressing noise. Besides, we only behind (Jaderberg
et al. 2016) on ICDAR03 with the full lexicon. However,
(Jaderberg et al. 2016) beneﬁts from the pre-deﬁned large
dictionary as mentioned before. Therefore, our results are
still competitive compared with the state-of-the-arts.

Conclusion
In this paper, we propose a novel attention convolutional net-
work for scene text recognition, which contains a densely

Miao, Y.; Metze, F.; and Rawat, S. 2013. Deep maxout
networks for low-resource speech recognition. In Automatic
Speech Recognition and Understanding (ASRU), 2013 IEEE
Workshop on, 398–403. IEEE.
Mishra, A.; Alahari, K.; and Jawahar, C. 2012a. Scene text
In BMVC
recognition using higher order language priors.
2012-23rd British Machine Vision Conference. BMVA.
Mishra, A.; Alahari, K.; and Jawahar, C. 2012b. Top-down
and bottom-up cues for scene text recognition. In Computer
Vision and Pattern Recognition (CVPR), 2012 IEEE Confer-
ence on, 2687–2694. IEEE.
Rodriguez-Serrano, J. A.; Gordo, A.; and Perronnin, F.
2015. Label embedding: A frugal baseline for text recogni-
tion. International Journal of Computer Vision 113(3):193–
207.
Shi, B.; Bai, X.; and Yao, C. 2016. An end-to-end trainable
neural network for image-based sequence recognition and
its application to scene text recognition. IEEE transactions
on pattern analysis and machine intelligence.
Shi, C.; Wang, C.; Xiao, B.; Zhang, Y.; Gao, S.; and Zhang,
Z. 2013. Scene text recognition using part-based tree-
structured character detection. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
2961–2968.
Shi, B.; Wang, X.; Lyu, P.; Yao, C.; and Bai, X. 2016. Robust
scene text recognition with automatic rectiﬁcation. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, 4168–4176.
Strubell, E.; Verga, P.; Belanger, D.; and McCallum, A.
2017. Fast and accurate sequence labeling with iterated di-
lated convolutions. arXiv preprint arXiv:1702.02098.
Su, B., and Lu, S. 2014. Accurate scene text recognition
based on recurrent neural network. In Asian Conference on
Computer Vision, 35–48. Springer.
Wang, K.; Babenko, B.; and Belongie, S. 2011. End-to-end
In Computer Vision (ICCV), 2011
scene text recognition.
IEEE International Conference on, 1457–1464. IEEE.
Wang, T.; Wu, D. J.; Coates, A.; and Ng, A. Y. 2012. End-to-
end text recognition with convolutional neural networks. In
Pattern Recognition (ICPR), 2012 21st International Con-
ference on, 3304–3308. IEEE.
Wang, F.; Jiang, M.; Qian, C.; Yang, S.; Li, C.; Zhang, H.;
Wang, X.; and Tang, X. 2017. Residual attention network
for image classiﬁcation. arXiv preprint arXiv:1704.06904.
Yao, C.; Bai, X.; Shi, B.; and Liu, W. 2014. Strokelets: A
learned multi-scale representation for scene text recognition.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, 4042–4049.

Hannun, A.; Case, C.; Casper, J.; Catanzaro, B.; Diamos, G.;
Elsen, E.; Prenger, R.; Satheesh, S.; Sengupta, S.; Coates,
A.; et al. 2014. Deep speech: Scaling up end-to-end speech
recognition. arXiv preprint arXiv:1412.5567.
He, K.; Zhang, X.; Ren, S.; and Sun, J. 2015. Delving deep
into rectiﬁers: Surpassing human-level performance on im-
agenet classiﬁcation. In Proceedings of the IEEE interna-
tional conference on computer vision, 1026–1034.
He, K.; Zhang, X.; Ren, S.; and Sun, J. 2016. Deep resid-
In Proceedings of the
ual learning for image recognition.
IEEE conference on computer vision and pattern recogni-
tion, 770–778.
Huang, G.; Liu, Z.; Weinberger, K. Q.; and van der Maaten,
L. 2016. Densely connected convolutional networks. arXiv
preprint arXiv:1608.06993.
Ioffe, S., and Szegedy, C. 2015. Batch normalization: Accel-
erating deep network training by reducing internal covariate
In International Conference on Machine Learning,
shift.
448–456.
Jaderberg, M.; Simonyan, K.; Vedaldi, A.; and Zisserman,
A. 2014a. Deep structured output learning for unconstrained
text recognition. arXiv preprint arXiv:1412.5903.
Jaderberg, M.; Simonyan, K.; Vedaldi, A.; and Zisser-
man, A. 2014b. Synthetic data and artiﬁcial neural net-
works for natural scene text recognition. arXiv preprint
arXiv:1406.2227.
Jaderberg, M.; Simonyan, K.; Vedaldi, A.; and Zisserman,
A.
2016. Reading text in the wild with convolutional
neural networks. International Journal of Computer Vision
116(1):1–20.
Jaderberg, M.; Vedaldi, A.; and Zisserman, A. 2014. Deep
features for text spotting. In European conference on com-
puter vision, 512–528. Springer.
Jozefowicz, R.; Vinyals, O.; Schuster, M.; Shazeer, N.; and
Wu, Y. 2016. Exploring the limits of language modeling.
arXiv preprint arXiv:1602.02410.
Karatzas, D.; Shafait, F.; Uchida, S.; Iwamura, M.; i Big-
orda, L. G.; Mestre, S. R.; Mas, J.; Mota, D. F.; Almazan,
J. A.; and de las Heras, L. P. 2013. Icdar 2013 robust reading
In Document Analysis and Recognition (IC-
competition.
DAR), 2013 12th International Conference on, 1484–1493.
IEEE.
Kingma, D., and Ba, J. 2014. Adam: A method for stochastic
optimization. arXiv preprint arXiv:1412.6980.
Lee, C.-Y., and Osindero, S. 2016. Recursive recurrent nets
In Proceed-
with attention modeling for ocr in the wild.
ings of the IEEE Conference on Computer Vision and Pat-
tern Recognition, 2231–2239.
Lucas, S. M.; Panaretos, A.; Sosa, L.; Tang, A.; Wong, S.;
Young, R.; Ashida, K.; Nagai, H.; Okamoto, M.; Yamamoto,
H.; et al. 2005.
Icdar 2003 robust reading competitions:
entries, results, and future directions. International journal
on document analysis and recognition 7(2):105–122.
Luong, M.-T.; Sutskever, I.; Le, Q. V.; Vinyals, O.; and
Zaremba, W. 2014. Addressing the rare word problem in
neural machine translation. arXiv preprint arXiv:1410.8206.

