Improving the Gaussian Process Sparse Spectrum Approximation by
Representing Uncertainty in Frequency Inputs

5
1
0
2
 
r
a

M
 
0
2
 
 
]
L
M

.
t
a
t
s
[
 
 
2
v
4
2
4
2
0
.
3
0
5
1
:
v
i
X
r
a

Yarin Gal
Richard Turner
University of Cambridge

Abstract

Standard sparse pseudo-input approximations to
the Gaussian process (GP) cannot handle com-
plex functions well. Sparse spectrum alternatives
attempt to answer this but are known to over-ﬁt.
We suggest the use of variational inference for
the sparse spectrum approximation to avoid both
issues. We model the covariance function with
a ﬁnite Fourier series approximation and treat it
as a random variable. The random covariance
function has a posterior, on which a variational
distribution is placed. The variational distribu-
tion transforms the random covariance function
to ﬁt the data. We study the properties of our
approximate inference, compare it to alternative
ones, and extend it to the distributed and stochas-
tic domains. Our approximation captures com-
plex functions better than standard approaches
and avoids over-ﬁtting.

1 Introduction

The Gaussian process (GP, Rasmussen & Williams, 2006)
is a powerful tool for modelling distributions over non-
linear functions.
It offers robustness to over-ﬁtting, a
principled way to tune hyper-parameters, and uncertainty
bounds over the outputs. These properties are critical for
tasks including non-linear function regression, reinforce-
ment learning, density estimation, and more (Brochu et al.,
2010; Rasmussen et al., 2003; Engel et al., 2005; Titsias &
Lawrence, 2010). But the advantages of the Gaussian pro-
cess come with a great computational cost. Evaluating the
GP posterior involves a large matrix inversion – for N data
points the model requires O(N 3) time complexity.

Many approximations to the GP have been proposed to re-
duce the model’s time complexity. Qui˜nonero-Candela &
Rasmussen (2005) survey approaches relying on “sparse
pseudo-input” approximations. In these, a small number of
points in the input space with corresponding outputs (“in-
ducing inputs and outputs”) are used to deﬁne a new Gaus-
sian process. The new GP is desired to be as close as pos-
sible to the GP deﬁned on the entire dataset, and the matrix
inversion is now done with respect to the inducing points

YG279@CAM.AC.UK
RET26@CAM.AC.UK

alone. These approaches are suitable for locally complex
functions. The approximate model would place most of the
inducing points in regions where the function is complex,
and only a small number of points would be placed in re-
gions where the function is not. Highly complex functions
cannot be modelled well with this approach.

L´azaro-Gredilla et al. (2010) suggested an alternative ap-
proximation to the GP model.
In their paper they sug-
gest the decomposition of the GP’s stationary covariance
function into its Fourier series. The inﬁnite series is then
approximated with a ﬁnite one. They optimise over the
frequencies of the series to minimise some divergence
from the full Gaussian process. This approach was named
a “sparse spectrum” approximation. This approach is
closely related to the one suggested by Rahimi & Recht
(2007) in the randomised methods community (random
projections).
In Rahimi & Recht (2007)’s approach, the
frequencies are randomised (sampled from some distribu-
tion rather than optimised) and the Fourier coefﬁcients are
computed analytically. Both approaches capture globally
complex behaviour, but the direct optimisation of the dif-
ferent quantities often leads to some form of over-ﬁtting (as
reported in (Wilson et al., 2014) for the SSGP and shown
below for random projections). Similar over-ﬁtting prob-
lems observed with the sparse pseudo-input approximation
were answered with variational inference (Titsias, 2009).

We suggest the use of variational inference for the sparse
spectrum approximation. This allows us to avoid over-
ﬁtting while efﬁciently capturing globally complex be-
haviour. We replace the stationary covariance function with
a ﬁnite approximation obtained from Monte Carlo inte-
gration. This ﬁnite approximation is a random variable,
and conditioned on a dataset this random variable has an
intractable posterior. We approximate this posterior with
variational inference, resulting in a non-stationary ﬁnite
rank covariance function. The approximating variational
distribution transforms the covariance function to ﬁt the
data well. The prior from the GP model keeps the approxi-
mating distribution from over-ﬁtting to the data.

Like in (L´azaro-Gredilla et al., 2010), we can marginalise
over the Fourier coefﬁcients. This results in approximate
inference with O(N K 2 + K 3) time complexity with N

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

data points and K inducing frequencies (components in the
Fourier expansion). This is the same as that of the sparse
pseudo-input and sparse spectrum approximations. We can
further optimise a variational distribution over the frequen-
cies reducing the time complexity to O(N K 2). This fac-
torises the lower bound and allows us to perform distributed
inference, resulting in O(K) time complexity given a sufﬁ-
cient number of nodes in a distributed framework. We can
approximate the latter lower bound and use random subsets
of the data (mini batches) employing stochastic variational
inference (Hoffman et al., 2013). This results in O(SK 2)
time complexity with S << N the size of the mini-batch1.

In the experiments section we demonstrate the properties of
our GP approximation and compare it to alternative approx-
imations. We describe qualitative properties of the approx-
imation and discuss how the approximation can be used
to learn the covariance function by ﬁtting to the data. We
compare the approximation to the full Gaussian process,
sparse spectrum GP, sparse pseudo-input GP, and random
projections. We show that alternative approximations ei-
ther over-ﬁt or under-ﬁt even on simple datasets. We em-
pirically demonstrate the advantages of the variational in-
ference in avoiding over-ﬁtting by comparing the approxi-
mation to the sparse spectrum one on audio data from the
TIMIT dataset. We compare the stochastic optimisation to
the non-stochastic one, and compare the performance to the
sparse pseudo-input SVI. Finally, we inspect the model’s
time accuracy trade-off and show that it avoids over-ﬁtting
as the number of parameters increases.

2 Sparse Spectrum Approximation in Gaus-

sian Process Regression

We use Bochner’s theorem (Bochner, 1959) to reformulate
the covariance function in terms of its frequencies. Since
our covariance function K(x, y) is stationary, it can be
represented as K(x − y) for all x, y ∈ RQ. Follow-
ing Bochner’s theorem, K(x − y) can be represented as
the Fourier transform of some ﬁnite measure σ2p(w) with
p(w) a probability density,

K(x − y) =

σ2p(w)e−2πiwT (x−y)dw

(cid:90)

(cid:90)

RQ

RQ

since the covariance function is real-valued.

This can be approximated as a ﬁnite sum with K terms
using Monte Carlo integration,
σ2
K

(cid:0)(x − zk) − (y − zk)(cid:1)(cid:1)

cos (cid:0)2πwT

K(x − y) ≈

K
(cid:88)

k

k=1

with wk ∼ p(w) and zk some Q dimensional vectors for

1Python code for all

inference algorithms is available at

http://github.com/yaringal/VSSGP

k = 1, ..., K. The points zk act as inducing inputs, and
will have corresponding inducing frequencies in our ap-
proximation. For the sparse spectrum GP, these points take
value 0. These will be explained in detail in a later section.

Using identity 1 proved in the appendix we rewrite the
terms above for every k as

cos (cid:0)2πwT

k

(cid:0)(x − zk) − (y − zk)(cid:1)(cid:1)
(cid:90) 2π
√

1
2π
2 cos (cid:0)2πwT

√

0
·

=

2 cos (cid:0)2πwT

k (x − zk) + b(cid:1)

k (y − zk) + b(cid:1)db.

This integral can again be approximated as a ﬁnite sum us-
ing Monte Carlo integration. To keep the notation simple,
we approximate the integral with a single sample2 for every
k,

K(x − y) ≈

2 cos(2πwT

k (x − zk) + bk)

·

2 cos(2πwT

k (y − zk) + bk)

σ2
K

K
(cid:88)

√

k=1

√

=: (cid:98)K(x − y)

k=1 as phases, and denote ω = (wk, bk)K

with bk ∼ Unif[0, 2π], deﬁning the approximate covariance
function (cid:98)K. We refer to (wk)K
k=1 as inducing frequencies
and to (bk)K
k=1.
Note that this integral could be approximated with any ar-
bitrary number of samples instead.
We denote X ∈ RN ×Q the inputs and Y ∈ RN ×D the out-
puts of a real-valued dataset with N data points. In Gaus-
sian process regression we ﬁnd the probability P (Y|X)
with the assumption that the function generating Y is
drawn from a Gaussian process. The full GP model is de-
ﬁned as (assuming stationary covariance function K(·, ·)):
F | X ∼ N (0, K(X, X))
Y | F ∼ N (F, τ −1I)

with some precision hyper-parameter τ .

Using (cid:98)K instead as the covariance function of the Gaussian
process yields the following generative model:

wk ∼ p(w), bk ∼ Unif[0, 2π],
ω = (wk, bk)K
√

k=1

σ2
K

K
(cid:88)

k=1

2 cos (cid:0)2πwT

k (x − zk) + bk

√

·

2 cos (cid:0)2πwT

k (y − zk) + bk

(cid:1)

(cid:1)

F | X, ω ∼ N (0, (cid:98)K(X, X))
Y | F ∼ N (F, τ −1I).

2The above transformation and approximate integration are
used in the randomised methods literature (“Random projec-
tions”, Rahimi & Recht, 2007). It was shown to give better ap-
proximation than Monte Carlo integration of eq. 1. Intuitively it
is equivalent to a random phase shift for each basis function.

=

σ2p(w) cos(2πwT (x − y))dw (1)

(cid:98)K(x, y) =

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

(cid:90)

(cid:90)

3 Random Covariance Functions

K is a deterministic covariance function of its inputs; (cid:98)K is
a random ﬁnite rank covariance function. As such, we can
ﬁnd the conditional distribution of the covariance function
given a dataset (more precisely, the conditional distribution
of ω). This is a powerful view of this approximation – it
allows us to transform the covariance function to ﬁt the data
well, while the prior keeps it from over-ﬁtting to the data.
We will use (cid:98)K as our Gaussian process covariance function
from now on, replacing K. This results in the following
predictive distribution:

p(Y|X) =

p(Y|F)p(F|ω, X)p(ω)dωdF.

We can integrate this analytically for F and obtain

p(Y|X) =

N (Y; 0, (cid:98)K(X, X) + τ −1I)p(ω)dω

but this involves the inversion of (cid:98)K(X, X) + τ −1I, which
does not allow us to integrate over ω (even variationally!).
Instead, we introduce an auxiliary random variable.

Denoting the 1 × K row vector
(cid:20)(cid:114)

φ(x, ω) =

cos (cid:0)2πwT

k (x − zk) + bk

(cid:21)K

(cid:1)

2σ2
K

and the N ×K feature matrix Φ = [φ(xn, ω)]N
(cid:98)K(X, X) = ΦΦT . We rewrite p(Y|X) as

k=1
n=1, we have

(cid:90)

p(Y|X) =

N (Y; 0, ΦΦT + τ −1I)p(ω)dω.

Following identity (Bishop, 2006, page 93, equations 2.113
− 2.115) we introduce a K × 1 auxiliary random variable
ad ∼ N (0, IK) to the distribution inside the integral above,

N (yd; 0, ΦΦT + τ −1I)

(cid:90)

=

N (yd; Φad, τ −1I)N (ad; 0, IK)dad,

where yd is the d’th column of the N × D matrix Y.
Writing A = [ad]D
d=1, the above is equivalent to3
(cid:90)

p(Y|X) =

p(Y|A, X, ω)p(A)p(ω)dAdω.

(2)

We refer to A ∈ RK×D as the Fourier coefﬁcients.

Regarding ω as parameters and optimising these values (in-
tegrating over A) results in the sparse spectrum approx-
imation (L´azaro-Gredilla et al., 2010). Regarding A as
parameters and optimising these values (leaving ω con-
stant) results in a method known as “random projections”
(Rahimi & Recht, 2007). Related work to random pro-
jections variationally integrates over the hyper-parameters
while leaving ω constant (Tan et al., 2013).

We can extend the above to sums of covariance functions

3This is equivalent to the weighted basis function interpreta-

tion of the Gaussian process (Rasmussen & Williams, 2006).

as well. Following proposition 1 in the appendix, given
a sum of covariance functions with L components (with
each corresponding to Φi an N × K matrix) we have Φ =
[Φi]L

i=1 an N × LK matrix.

As an example covariance function of this form consider
the spectral mixture (SM) covariance function (Lindgren,
2012; Wilson & Adams, 2013). This covariance function
has been used in the audio processing community since the
’70s and was recently introduced to the machine learning
community. It generalises many known covariance func-
tions, such as the periodic covariance function, the auto-
matic relevance determination (ARD) squared exponential
(SE) covariance function, products of these and weighted
sums of these products.

We will continue the development of our method using this
covariance function. Note however that our method is gen-
eral and can be extended for other covariance functions
as well. The spectral mixture covariance function with L
components is given by

K(x, y) =

(cid:18)

σ2
i exp

−

L
(cid:88)

i=1

1
2

Q
(cid:88)

q=1

(cid:19)

(xq − yq)2
l2
iq

·

Q
(cid:89)

q=1

cos

(cid:18) 2π(xq − yq)
piq

(cid:19)

i , length-scales liq and periods p−1
iq ]Q
q=1 and Li = diag([2πlqi]Q

with weights σ2
iq . We
write pi = [p−1
q=1). This co-
variance function reduces to a sum of squared exponential
(SE) covariance functions for piq = ∞ for all i and q.

For p(w) composed of a single SM component, we fol-
low proposition 2 in the appendix and perform a change of
variables, resulting in p(w) a standard normal distribution
with the parameters of p(w) now expressed in Φ instead.
For p(w) composed of several components, for each com-
ponent i we get Φi is an N × K matrix with elements

(cid:114)

2σ2
i
K

cos (cid:0)2π(L−1

i wk + pi)T (x − zk) + bk

(cid:1),

where for simplicity, we index wk and bk with k =
1, ..., LK as a function of i.

4 Variational Inference

The predictive distribution for an input point x∗ is given by

p(y∗|x∗, X, Y) =

p(y∗|x∗, A, ω)p(A, ω|X, Y)dAdω,

(cid:90)

(3)
with y∗ ∈ R1×D. The distribution p(A, ω|X, Y) cannot
be evaluated analytically.
Instead we deﬁne an approxi-
mating variational distribution q(A, ω), whose structure is
easy to evaluate.

We would like our approximating distribution to be as close
as possible to the posterior distribution obtained from the

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

full GP. We thus minimise the Kullback–Leibler divergence
KL(q(A, ω) | p(A, ω|X, Y)),

resulting in the approximate predictive distribution

(cid:90)

q(y∗|x∗) =

p(y∗|x∗, A, ω)q(A, ω)dAdω.

(4)

Minimising the Kullback–Leibler divergence is equivalent
to maximising the log evidence lower bound

(cid:90)

L :=

q(A, ω) log p(Y|A, X, ω)dAdω

(5)
with respect to the variational parameters deﬁning q(A, ω).

− KL(q(A, ω)||p(A)p(ω))

We deﬁne a factorised variational distribution q(A, ω) =
q(A)q(ω). We deﬁne q(ω) with ω = (wk, bk)K
k=1 to be a
joint Gaussian distribution and a uniform distribution,

wk ∼ N (µk, Σk),
bk ∼ Unif(αk, βk),

k = 1, ..., LK

k = 1, ..., LK

with Σk diagonal, 0 ≤ αk ≤ βk ≤ 2π, and deﬁne q(A) =
(cid:81)D

d=1 q(ad) (with ad ∈ RLK×1) by
ad ∼ N (md, sd),

d = 1, ..., D

with sd diagonal. We evaluate the log evidence
lower bound and optimise over {µk, Σk, αk, βk}LK
k=1,
{md, sd}D

d=1, and {σi, Li, pi}L

i=1 to maximise Eq. 5.

4.1 Evaluating the Log Evidence Lower Bound

Given A and ω, we evaluate the probability of the d’th
element, yd, as

2 xT

= e− 1

nkΣkxnk cos (cid:0)µT
where µk is the mean of q(wk) and Σk is its covariance.
We get
(cid:18)

k xnk + bnk

(cid:1).

(cid:114)

(cid:19)

Eq(ω)

(cid:0)Φ(cid:1)

=

n,k

2σ2
i
K

e− 1

2 xT

nkΣkxnk

· Eq(bk)

(cid:0) cos(µT

k xnk + bnk)(cid:1) (8)

with the integration with respect to q(bk) trivial.

(cid:0)ΦT Φ(cid:1), an LK × LK matrix:

Next we evaluate Eq(ω)
(cid:0)ΦT Φ(cid:1)

Eq(ω)

(cid:19)

(cid:18)

i,j

=

N
(cid:88)

n=1

2σ2
i
LK

for i, j ≤ LK.

Eq(wi,bi,wj ,bj )

(cid:0) cos(wT

i xni + bni)

· cos(wT

j xnj + bnj)(cid:1) (9)

For i (cid:54)= j, from independence we can break the expectation
of each term into
Eq(wi,bi,wj ,bj )
= Eq(wi,bi)
· Eq(wj ,bj )

i xni + bni) cos(wT
i xni + bni)(cid:1)
j xnj + bnj)(cid:1),

(cid:0) cos(wT
(cid:0) cos(wT
(cid:0) cos(wT

j xnj + bnj)(cid:1)

and for i = j,

Eq(wi,bi)

(cid:0) cos(wT

i xni + bni)2(cid:1) =

+

1
2
(cid:0) cos(2µT

e−2xT

niΣixni Eq(bi)

i xni + 2bni)(cid:1)

1
2

log p(yd|A, X, ω) =

following identity 3.

−

N
2

log(2πτ −1) −

τ
2
Note that yd is an N × 1 vector, Φ is an N × LK matrix,
and ad is an LK × 1 vector.

(yd − Φad)T (yd − Φad).

We need to evaluate the expectations of yT
d ΦT Φad (both scalar values) under q(A)q(ω):
aT
(cid:0)ad
(cid:1) = yT

(cid:0)Φ(cid:1)Eq(A)

Eq(A)q(ω)

d Eq(ω)

d Φad

(cid:0)yT

(cid:1),

d Φad and

and

Eq(A)q(ω)

(cid:0)aT

d ΦT Φad

(cid:1) = tr

Eq(ω)

(cid:0)ΦT Φ(cid:1)Eq(A)

(cid:0)adaT

d

(cid:18)

In conclusion, we obtained our optimisation objective:

L =

D
(cid:88)

(cid:18)

d=1

−

N
2

log(2πτ −1) −

yT

d yd

τ
2
(cid:0)Φ(cid:1)md

+ τ yT
τ
2

−

d Eq(ω)
tr(cid:0)Eq(ω)(ΦT Φ)(sd + mdmT

(cid:19)

d )(cid:1)

− KL(q(A)||p(A)) − KL(q(ω)||p(ω)).

(10)

The KL divergence terms can be evaluated analytically for
the Gaussian and uniform distributions.

(6)

(cid:19)
.

(cid:1)

(7)

The values Eq(A)(ad) and Eq(A)(adaT

d ) are evaluated as

Eq(A)(ad) = md,

Eq(A)(adaT

d ) = sd + mdmT
d .
(cid:0)Φ). Remember that Φ depends on
Next we evaluate Eq(ω)
ω and that q(ω) = q((wk, bk)LK
k=1). We write as shorthand
xnk := 2πL−1
i (xn − zk)
with component i appropriate to k. Following identity 2
proved in the appendix, we have that the expectation of a
single element in the vector with respect to q(wk) is

(xn − zk) and bnk = bk + 2πpT

i

Eq(wk)

(cid:0) cos (cid:0)wT

k xnk + bnk

(cid:1)(cid:1)

4.2 Optimal variational distribution over A

In the above we optimise over the variational parameters
for A, namely md and sd for d ≤ D. This allows us to
attain a reduction in time complexity compared to previ-
ous approaches and use stochastic inference, as will be ex-
plained below. This comes with a cost, as the dependence
between ω and A can render the optimisation hard.

We can ﬁnd the optimal variational distribution q(A) an-
alytically, which allows us to optimise ω and the hyper-
parameters alone. In proposition 3 in the appendix we show

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

log(2πτ −1) −

yT

d yd +

log(|τ −1Σ|)

6 Predictive Distribution

unbiased estimator to the lower bound. The time complex-
ity of each iteration is O(SK 2) with S << N the size of
the random subset, compared to O(SK 2 + K 3) of GP SVI
using sparse pseudo-input approximation (Hensman et al.,
2013).

The approximate predictive distribution for a point x∗ is
given by equation 4. Denoting M = [md]D
d=1, we have
(cid:1)M

(cid:0)φ∗
following proposition 4 in the appendix.

Eq(y∗|x∗)(y∗) = Eq(ω)

(14)

(11)

that the optimal variational distribution is given by

q(ad) = N (ΣEq(ω)(ΦT )yd, τ −1Σ)

with Σ = (Eq(ω)(ΦT Φ) + τ −1I)−1.

The lower bound to optimise then reduces to

L =

D
(cid:88)

(cid:18)

d=1

−

N
2

+

τ yT

1
2
− KL(q(ω)||p(ω)).

τ
2

1
2

(cid:19)

d Eq(ω)(Φ)ΣEq(ω)(ΦT )yd

5 Distributed Inference and Stochastic Infer-

ence

Evaluating L in equation 10 requires O(N K 2) time com-
plexity (for ﬁxed Q, D, diagonal sd, and covariance func-
tion with one component L = 1). This stems from the term
(cid:0)ΦT Φ(cid:1) – a K × K matrix, where each element is
Eq(ω)
composed of a sum over N .

Following the ideas of (Gal et al., 2014) we show that the
approximation can be implemented in a distributed frame-
work. Write

Lnd = −

1
2

log(2πτ −1) −

τ
2
tr(cid:0)Eq(ω)(φT
n φn)(sd + mdmT

yndynd + τ yndEq(ω)
d )(cid:1)

−

τ
2

(cid:0)φn

(cid:1)md

with φn = φ(xn, ω). We can break the optimisation objec-
tive in equation 10 into a sum over N ,

D
(cid:88)

N
(cid:88)

d=1

n=1

L =

Lnd − KL(q(A)||p(A)) − KL(q(ω)||p(ω)).

(12)
These terms can be computed concurrently on different
nodes in a distributed framework, requiring O(K 2) time
complexity in each iteration. We can further break the
computation of Lnd into a sum over K as well, thus re-
ducing the time complexity to O(K) with K inducing
points. This is in comparison to distributed inference with
sparse pseudo-input GPs which takes O(K 3) time com-
plexity with K inducing points, resulting from the covari-
ance matrix inversion. This is a major advantage, as em-
pirical results suggest that in many real-world applications
the number of inducing points should scale with the data.

We can exploit
the above representation and perform
stochastic variational inference (SVI) by approximating the
objective with a subset of the data, resulting in noisy gradi-
ents (Hoffman et al., 2013). Here we use as our objective

L ≈

N
|S|

D
(cid:88)

(cid:88)

d=1

n∈S

Lnd

(13)
with a mini-batch S of randomly selected points. This is an

− KL(q(A)||p(A)) − KL(q(ω)||p(ω)).

The variance of the predictive distribution is given by
Varq(y∗|x∗)(y∗) = τ −1ID + Ψ

(15)
(cid:1)(cid:1)M
(cid:0)φT
+ MT (cid:0)Eq(ω)
Eq(ω)
with Ψi,j = tr(cid:0)Eq(ω)
(cid:1) · 1[i = j], following
proposition 5 in the appendix (1 is the indicator function).

(cid:1) − Eq(ω)
(cid:1) · si
∗ φ∗

∗ φ∗
(cid:0)φT

(cid:0)φ∗

(cid:0)φ∗

(cid:1)T

When the optimal variational distribution over A is used,
we have M = ΣEq(ω)(ΦT )Y and si = τ −1Σ for all i.

7 Properties of the Approximate Model

We have presented a variational sparse spectrum approxi-
mation to the Gaussian process (VSSGP in short). We gave
3 approximate models with different lower bounds: an ap-
proximate model with an optimal variational distribution
over A (equation 11, referred to as VSSGP), an approx-
imate model with a factorised lower bound over the data
points (equations 10, 12, referred to as factorised VSSGP –
fVSSGP), and an approximation to the lower bound of the
factorised VSSGP for use in stochastic optimisation over
subsets of the data (equation 13, referred to as stochastic
factorised VSSGP – sfVSSGP).

The VSSGP model generalises on some of the GP approx-
imations brought in the introduction. Fixing Σk at zero in
our approximate model (as well as αk and βk at 0 and 2π)
and optimising only µk results in the sparse spectrum ap-
proximation. Randomising µk, we obtain the random pro-
jections approximation (Rahimi & Recht, 2007). Indeed,
(cid:0)ΦT Φ(cid:1) =
for Σk = 0 and ﬁxed phases we have that Eq(ω)
(cid:0)Φ(cid:1) = Φ, and equation 11
(cid:0)Φ(cid:1) and Eq(ω)
Eq(ω)
recovers equation 8 in (L´azaro-Gredilla et al., 2010).

(cid:0)ΦT (cid:1)Eq(ω)

The points zk act as inducing inputs with wk and bk acting
as inducing frequencies and phases at these inputs. This
is similar to the sparse pseudo-input approximation, but
instead of having inducing values in the output space, we
have the inducing values in the frequency domain. These
are necessary to the approximation. Without these points
(or equivalently, setting these to 0), the features would
decay quickly for data points far from the origin (the ﬁxed
point 0).

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

The distribution over the frequencies is optimised to ﬁt the
data well. The prior is used to regulate the ﬁt and avoid
over-ﬁtting to the data. This approximation can be used to
learn covariance functions by ﬁtting them to the data. This
is similar to the ideas brought in (Duvenaud et al., 2013)
where the structure of a covariance function is sought by
looking at possible compositions of these. This can give ad-
ditional insight into the data. In (Duvenaud et al., 2013) the
structure of the covariance composition is used to explain
the data. In the approximation presented here the spectrum
of the covariance function can be used to explain the data.

It is interesting to note that although the approximated co-
variance function K(x, y) has to be stationary (i.e. it is
represented as K(x, y) = K(x − y)), the approximate
posterior is not. This is in contrast to the SSGP that re-
sults in a stationary approximation. Furthermore, unlike
the SSGP, our approximation is not periodic. This is one of
the theoretical limitations of the sparse spectrum approx-
imation. The limitation arises from the fact that the co-
variance is represented as a weighted sum of cosines in the
SSGP. In the our approximation this is avoided by decay-
ing the cosines to zero. This and other properties of the
approximation are discussed further in discussion 1 in the
appendix.

8 Experiments

We next study the properties of the VSSGP and compare
it to alternative approximations, showing its advantages.
We compare the VSSGP to the full Gaussian process (de-
noted Full GP), the sparse spectrum GP approximation (de-
noted SSGP), a sparse pseudo-input GP approximation (de-
noted SPGP), and the random projections approximation
(denoted RP). We compare the VSSGP to the fVSSGP and
sfVSSGP that offer improved time complexity. We further
compare sfVSSGP to the existing sparse pseudo-input GP
approach used with SVI (denoted sSPGP, Hensman et al.,
2013). We inspect the model’s time accuracy trade-off and
show that it avoids over-ﬁtting as the number of parameters
increases.

8.1 VSSGP Properties

We evaluate the predictive mean and uncertainty of the
VSSGP on the atmospheric CO2 concentrations dataset de-
rived from in situ air samples collected at Mauna Loa Ob-
servatory, Hawaii (Keeling et al., 2004). We ﬁt the approx-
imate model using a spectral mixture covariance function
with two components initialised with periods [5, ∞] and
corresponding initial length-scales [0.1, 1000] (resulting in
a sum of SE × periodic and SE covariances). We ran-
domised the phases following the Monte Carlo integration
(instead of optimising a variational distribution on these4)
and initialise the frequencies at random. We use 10 induc-

4This seems to work better in practice.

Figure 1. Predictive mean and uncertainty on the Mauna Loa CO2
concentrations dataset. In red is the observed function; in blue is
the predictive mean plus/minus two standard deviations. In this
example the approximating distribution is used with a spectral
mixture covariance with two components (L = 2, K = 10).

ing inputs for each component (K = 10), set the obser-
vation noise precision to τ = 10, and covariance noise to
σ2 = 1. LBFGS (Zhu et al., 1997) was used to optimise
the objective given in equation 11, and was run for 500 it-
erations.

Figure 1 shows the predictive mean with the predictive un-
certainty increasing far from the data. This is a property
shared with the SE GP. The covariance hyper-parameters
optimise to periods of [9.8, ∞], length-scales [0.09, 54],
and covariance noise [0.0043, 5.7], correspondingly. The
frequency with the smallest standard-deviation (highest
conﬁdence) for the ﬁrst component is 1 (corresponding to
a period of 1 year, capturing the short term behaviour). For
the second component these are 0.0053, 0.00065 (corre-
sponding to periods of 185 and 1536 years capturing the
long term behaviour).

8.2 Comparison to Existing GP Approximations

We compare various GP approximations on the solar irra-
diance dataset (Lean, 2004). We scaled the dataset dividing
by the data standard deviation, and removed 5 segments of
length 20. We followed the experiment set-up of the previ-
ous section and used the same initial parameters for all ap-
proximate models. Instead of the SM covariance function
we use a single SE setting its length-scale l = 1, and used
50 inducing inputs. LBFGS was used for 1000 iterations.
The RP model was run twice with two different settings:
once following the same set-up of the other models, opti-
mising over the model hyper-parameters (RP1), and once
keeping all hyper-parameters ﬁxed and setting the observa-
tion noise precision to τ = 100 with K = 500 inducing
inputs5 (RP2).

Figure 2 shows qualitatively the predictive mean and un-
certainty of the various approaches. SSGP and RP seem
to over-ﬁt the function using high frequencies with high
conﬁdence. SPGP seems to under-ﬁt the function, but has
accurate predictive mean and uncertainty at points where
many inducing inputs lie (such as the ﬂat region). VSSGP’s
predictive mean resembles that of the full GP, but with in-

5This follows the usual use of the model in the randomised
methods community. We experimented with various values of τ
and decided to use 100.

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

(a) Sparse pseudo-input GP

(b) Sparse Spectrum GP

(c) Random Projections (RP2, K = 500)

(d) Full GP

(e) Variational Sparse Spectrum GP

Figure 2. Predictive mean and uncertainty on the reconstructed
solar irradiance dataset with missing segments, for the GP and
various GP approximations. In red is the observed function and in
green are the missing segments. In blue is the predictive mean
plus/minus two standard deviations of the various approxima-
tions. All tests were done with the SE covariance function, and all
sparse approximations use K = 50 inducing inputs (apart from
RP2 with K = 500).

creased uncertainty throughout the space. Further, its un-
certainty on the missing segments is smaller than that of the
full GP (some frequencies have low uncertainty, thus used
near the data). The full GP learnt length-scale is 4. VSSGP
learnt a length-scale of 3, and SPGP learnt a length-scale
of 5. SSGP and RP1 learnt length-scales of 0.97, 1.66, i.e.
the hyper-parameter optimisation found a local minimum.

Table 1 gives a quantitative comparison of the different ap-
proximations for the task of imputation. RMSE (root mean
square error) of the approximate predictive mean on the
missing segments was computed (test error), as well as the
RMSE on the observed function (training error). Note that

Solar
Train
Test

SPGP
0.23
0.61

SSGP RP1 RP2
0.04
0.32
0.15
0.76
0.65
0.63

GP VSSGP
0.08
0.50

0.13
0.41

Table 1. Imputation RMSE on both train and test sets, for the re-
constructed solar irradiance dataset. All tests were done with the
SE covariance function, and all sparse approximations use 50 in-
ducing inputs (apart from RP2 that uses K = 500).

the full GP seems to get worse results than VSSGP. This
might be because of the (slightly) larger learnt length-scale.

8.3 From SSGP to Variational SSGP

We use of variational inference in the VSSGP to avoid over-
ﬁtting to the data, a behaviour that is often observed with
SSGP. To test this we perform a direct comparison of the
proposed approximate model to SSGP on the task of au-
dio signal imputation. For this experiment we used a short
speech signal with 1000 samples taken from the TIMIT
dataset (Garofolo et al., 1993). We removed 5 segments
of length 40 from the signal, and evaluated the imputation
error (RMSE) of the predictive mean with K = 100 in-
ducing points. We used the same experiment set-up as be-
fore with a sum of 2 SE covariance functions with length-
scales l = [2, 10] and observation noise precision τ = 1000
matching the signal magnitude. LBFGS was run for 1000
iterations. The experiment was repeated 5 times and the
results averaged.

Audio 1K
Train
Test

SSGP
0.0091 ± 0.0042
0.088 ± 0.033

VSSGP
0.0062 ± 0.00048
0.034 ± 0.0043

Table 3. Imputation RMSE on both train and test sets, for a speech
signal segment of length 1K (K = 100).

Table 3 shows the RMSE of the training set and test set
for the audio data. SSGP seems to achieve a small training
error but cannot generalise well to unseen audio segments.
VSSGP attains a slightly lower training error, and is able to
impute unseen audio segments with better accuracy.

It is interesting to note that using the RMSE of the short-
time Fourier transform of the original signal and the pre-
dicted mean (STFT, the common metric for audio imputa-
tion, with 25ms frame size and a hop size of 12ms), the
SSGP model attains a training error of 0.094 ± 0.05 and a
test error of 0.55 ± 0.41. The VSSGP attains a training er-
ror of 0.067 ± 0.0067 with a test error of 0.17 ± 0.022. For
comparison, baseline performance of predicting 0 attains
an error of 0.44 on the training set and an error of 0.38 on
the test set.

8.4 VSSGP, factorised VSSGP, and stochastic fac-

torised VSSGP

VSSGP, fVSSGP, and sfVSSGP all rely on different lower
bounds to the same approximate model. Whereas VSSGP

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

Audio 1K
Train
Test

VSSGP
0.0062 ± 0.00048 (0.063±0.0068)
0.034 ± 0.0043 (0.17±0.022)

fVSSGP
0.0054 ± 0.00083 (0.055±0.0088)
0.038 ± 0.0049 (0.22±0.028)

sfVSSGP
0.005 ± 0.003 (0.052±0.031)
0.04 ± 0.0066 (0.24±0.0089)

Table 2. Imputation RMSE (and in smaller font STFT RMSE) on train and test sets, for a speech signal segment of length 1K (K = 100).

solves for the variational distribution over the Fourier coef-
ﬁcients analytically, fVSSGP optimises over these quanti-
ties. This reduces the time complexity, but with the price of
potentially worsened performance. sfVSSGP further em-
ploys an approximation to the lower bound using random
subsets of the data – following the idea that not all data
points have to be observed for a good ﬁt to be found. This
assumption has the potential to hinder performance even
further. We next assess these trade-offs.

We repeated the experimental set-up of the previous sec-
tion (and use the same RMSE for VSSGP). We optimise
both fVSSGP and sfVSSGP for 5000 iterations instead of
the 1000 of VSSGP. This is because the improved time
complexity allows us to perform more function evaluations
within the same time-frame. We optimise the fVSSGP
lower bound with LBFGS, and the sfVSSGP lower bound
with RMSPROP (Tieleman & Hinton, 2012). RMSPROP
performs stochastic optimisation with no need for learning-
rate tuning – the learning rate changes adaptively based on
the directions of the last two gradients.

Table 2 shows the RMSE for the train and test sets. Both
fVSSGP and sfVSSGP effectively achieve the same test set
accuracy (taking the standard deviation into account). We
also see a slight decrease in train set RMSE.

8.5 Stochastic Variational Inference

We compared sfVSSGP to the SPGP approximation with
stochastic variational inference (sSPGP, Hensman et al.,
2013). We used the same audio experiment as above, but
with a signal of length 16000. 25 random segments of
length 80 were removed from the signal. sSPGP’s time
complexity (O(SK 2 + K 3) with mini-batch of size S and
K inducing points) prohibits it from being used with a large
number of inducing points. We therefore used 800 inducing
points for sSPGP and 400 inducing inputs for each compo-
nent in the covariance function of sfVSSGP (K = 400).

The RMSE of sSPGP for the training set is 0.043 and for
the test set is 0.034 (with a training time of 133 minutes

(a) Train error

(b) Test error

(c) Running time

Figure 3. Mean and standard deviation for train error, test error,
and running time, all as functions of the number of inducing
points (K) for a speech signal segment of length 4K.

using GPy (authors, 2012–2014)). The RMSE of sfVSSGP
for the training set is 0.016 and for the test set is 0.034 (with
a training time of 48 minutes). Using the same audio im-
putation metric as in the previous section, we get that the
STFT RMSE for the sSPGP on the training set is 0.54 and
on the test set is 0.43. The STFT RMSE for the VSSGP on
the training set is 0.18 with a test error of 0.3. For compar-
ison again, baseline performance of predicting 0 attains an
error of 0.52 on the training set and an error of 0.62 on the
test set.

8.6 Speed-Accuracy Trade-off

We inspect the speed-accuracy trade-off of the approxima-
tion (RMSE as a function of the number of inducing points)
for the sfVSSGP approximation. We repeat the same audio
experiment set-up with a speech signal with 4000 samples
and evaluate the imputation error (RMSE) of the predictive
mean with various numbers of inducing point. RMSPROP
was run for 500 iterations. The experiment was repeated 5
times and the results averaged.

Figure 3 shows that the approximation offers increased ac-
curacy with an increasing number of inducing points. No
further improvement is achieved with more than 400 induc-
ing points. The time scales quadratically with the number
of inducing points. Note that the approximation does not
over-ﬁt to the data as the number of parameters increases.

9 Discussion

Our approximate inference relates to the Bayesian neural
network (Bayesian NN, Mackay, 1992; MacKay, 1992).
In the Bayesian NN a prior distribution is placed over
the weights of an NN, and a posterior distribution (over
the weights and outputs) is sought. The model offers a
Bayesian interpretation to the classic NN, with the desired
property of uncertainty estimates on the outputs. Inference
in Bayesian NNs is generally hard, and approximations to
the model are often used (Bishop, 2006, pp 277-290). Our
GP approximate inference relates Bayesian NNs and GPs,
and can be seen as a method for tractable variational infer-
ence in Bayesian NNs with a single hidden layer.

Future research includes the extension of our approxima-
tion to deep GPs (Damianou & Lawrence, 2012). We also
aim to use the approximate model as a method for adding
and removing units in an NN in a principled way. Lastly,
we aim to replace the cosines in the Fourier expansion with
alternative basis functions and study the resulting approxi-
mate model.

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

References

authors, The GPy. GPy: A Gaussian process framework
in python. http://github.com/SheffieldML/
GPy, 2012–2014.

Bishop, Christopher M. Pattern Recognition and Machine
Learning (Information Science and Statistics). Springer-
Verlag New York, Inc., Secaucus, NJ, USA, 2006. ISBN
0387310738.

Bochner, Salomon. Lectures on Fourier integrals. Num-

ber 42. Princeton University Press, 1959.

Brochu, Eric, Cora, Vlad M, and de Freitas, Nando.
A tutorial on Bayesian optimization of expensive cost
functions, with application to active user modeling and
arXiv preprint
hierarchical reinforcement
arXiv:1012.2599, 2010.

learning.

Damianou, Andreas C and Lawrence, Neil D. Deep Gaus-
sian processes. arXiv preprint arXiv:1211.0358, 2012.

Duvenaud, David, Lloyd, James Robert, Grosse, Roger,
Tenenbaum, Joshua B., and Ghahramani, Zoubin. Struc-
ture discovery in nonparametric regression through com-
In Proceedings of the 30th
positional kernel search.
International Conference on Machine Learning, June
2013.

Engel, Yaakov, Mannor, Shie, and Meir, Ron. Reinforce-
ment learning with Gaussian processes. In Proceedings
of the 22nd international conference on Machine learn-
ing, pp. 201–208. ACM, 2005.

Gal, Yarin, van der Wilk, Mark, and Rasmussen, Carl. Dis-
tributed variational inference in sparse Gaussian process
regression and latent variable models. In Ghahramani,
Z., Welling, M., Cortes, C., Lawrence, N.D., and Wein-
berger, K.Q. (eds.), Advances in Neural Information Pro-
cessing Systems 27, pp. 3257–3265. Curran Associates,
Inc., 2014.

Garofolo, John S, Consortium, Linguistic Data, et al.
TIMIT: acoustic-phonetic continuous speech corpus.
Linguistic Data Consortium, 1993.

Hensman, James, Fusi, Nicolo, and Lawrence, Neil D.
Gaussian processes for big data. In Nicholson, Ann and
Smyth, Padhraic (eds.), UAI. AUAI Press, 2013.

Hoffman, Matthew D., Blei, David M., Wang, Chong, and
Paisley, John. Stochastic Variational Inference. Journal
Of Machine Learning Research, 14:1303–1347, MAY
2013. ISSN 1532-4435.

Keeling, C.D., Whorf, T.P., and the Carbon Dioxide Re-
search Group. Atmospheric CO2 concentrations (ppmv)

derived from in situ air samples collected at Mauna Loa
Observatory, Hawaii. Scripps Institution of Oceanogra-
phy (SIO), University of California, La Jolla, California
USA 92093-0444, June 2004.

L´azaro-Gredilla, Miguel, Qui˜nonero-Candela, Joaquin,
and Figueiras-Vidal,
Rasmussen, Carl Edward,
An´ıbal R.
Sparse spectrum Gaussian process re-
gression. The Journal of Machine Learning Research,
11:1865–1881, 2010.

Lean, J. Solar irradiance reconstruction. NOAA/NGDC
Paleoclimatology Program, Boulder CO, USA, 2004.
IGBP PAGES/World Data Center for Paleoclimatology.
Data Contribution Series 2004-035.

Lindgren, Georg. Stationary Stochastic Processes: Theory

and Applications. CRC Press, 2012.

Mackay, David. The evidence framework applied to clas-
siﬁcation networks. Neural computation, 4(5):720–736,
1992.

MacKay, David JC. A practical Bayesian framework for
backpropagation networks. Neural computation, 4(3):
448–472, 1992.

Qui˜nonero-Candela, Joaquin and Rasmussen, Carl Ed-
ward. A unifying view of sparse approximate Gaussian
process regression. Journal of Machine Learning Re-
search, 6:2005, 2005.

Rahimi, Ali and Recht, Benjamin. Random features for
large-scale kernel machines. In Advances in neural in-
formation processing systems, pp. 1177–1184, 2007.

Rasmussen, Carl Edward and Williams, Christopher K. I.
Gaussian Processes for Machine Learning (Adaptive
Computation and Machine Learning). The MIT Press,
2006. ISBN 026218253X.

Rasmussen, Carl Edward, Kuss, Malte, et al. Gaussian pro-
cesses in reinforcement learning. In NIPS, volume 4, pp.
1, 2003.

Tan, Linda S. L., Ong, Victor M. H., Nott, David J., and
Jasra, Ajay. Variational inference for sparse spectrum
Gaussian process regression. arXiv:1306.1999, 2013.

Tieleman, T. and Hinton, G.

Lecture 6.5 - rmsprop,
COURSERA: Neural networks for machine learning,
2012.

Titsias, Michalis and Lawrence, Neil. Bayesian Gaussian
process latent variable model. Thirteenth International
Conference on Artiﬁcial Intelligence and Statistics (AIS-
TATS), 6:844–851, 2010.

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

Titsias, Michalis K. Variational learning of inducing vari-
In International
ables in sparse Gaussian processes.
Conference on Artiﬁcial Intelligence and Statistics, pp.
567–574, 2009.

Wilson, Andrew and Adams, Ryan. Gaussian process ker-
nels for pattern discovery and extrapolation. In Proceed-
ings of The 30th International Conference on Machine
Learning, pp. 1067–1075, 2013.

Wilson, Andrew, Gilboa, Elad, Cunningham, John P, and
Nehorai, Arye. Fast kernel learning for multidimen-
sional pattern extrapolation. In Advances in Neural In-
formation Processing Systems, pp. 3626–3634, 2014.

Zhu, Ciyou, Byrd, Richard H, Lu, Peihuang, and Nocedal,
Jorge. Algorithm 778: L-BFGS-B: Fortran subroutines
for large-scale bound-constrained optimization. ACM
Transactions on Mathematical Software (TOMS), 23(4):
550–560, 1997.

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

A Appendix

Identity 1.

cos(x − y) =

2 cos(x + b)

2 cos(y + b)db

(cid:90) 2π

0

√

1
2π

√

Proof. We ﬁrst evaluate the term inside the integral. We
have

cos(x + b) cos(y + b)

= (cos(x) cos(b) − sin(x) sin(b))

· (cos(y) cos(b) − sin(y) sin(b))

= (cos(x) cos(y)) cos2(b) + (sin(x) sin(y)) sin2(b)
− (sin(x) cos(y) + cos(x) sin(y)) sin(b) cos(b).
2 + 1
4 sin(2b), as well as
4 sin(2b), and (cid:82) sin(b) cos(b)db =

Now, since (cid:82) cos2(b)db = b
(cid:82) sin2(b)db = b
− 1

2 − 1

4 cos(2b), we have

(cid:90) 2π

√

√

2 cos(x + b)

2 cos(y + b)db

0

1
2π
1
π

=

(cos(x) cos(y)(π − 0)

+ sin(x) sin(y)(π − 0)

− (sin(x) cos(y) + cos(x) sin(y)) · 0

= cos(x − y)

Identity 2.

EN (w;µ,Σ)

(cid:0) cos(wT x + b)(cid:1) = e− 1

2 xT Σx cos(µT x + b)

Proof. We rely on the characteristic function of the Gaus-
sian distribution to prove this identity.
EN (w;µ,Σ)
(cid:18)

(cid:0) cos(wT x + b)(cid:1)

(cid:19)

= (cid:60)

eibEN (w;µ,Σ)

(cid:0)eiwT x(cid:1)

= (cid:60)(eibeiwT µ− 1
= e− 1

2 xT Σx cos(µT x + b)

2 xT Σx)

where (cid:60)(·) is the real part function, and the transition from
the second to the third lines uses the characteristic function
of a multivariate Gaussian distribution.

=

e−2xT Σx cos(2µT x + 2b) +

1
2

1
2

Proposition 1. Given a sum of covariance functions with
L components (with each corresponding to Φi an N × K
matrix) we have Φ = [Φi]L

i=1 an N × LK matrix.

Proof. We extend the derivation of equation 2 to sums of
covariance functions. Given a sum of covariance functions
with L components

L
(cid:88)

K(x, y) =

σ2
i Ki(x, y),

i=1
following equation 1 we have

L
(cid:88)

(cid:90)

K(x, y) =

RQ

i=1
where we write σ2
having to sum to one).

i pi(w) cos(2πwT (x − y))dw,
σ2

i instead of σσ2

i for brevity (with σ2

i not

Following the derivations of equation 2, for each compo-
nent i in the sum we get Φi an N × K matrix. Writing
Φ = [Φi]L
i=1 an N × LK matrix, we have that the sum
of covariance matrices can be expressed with a single term
after marginalizing F out,
L
(cid:88)

ΦiΦT

i + τ −1I = ΦΦT + τ −1I,

i=1
thus identity 2 still holds.

Proposition 2. Performing a change of variables to the
SM covariance function with a single component, results in
p(w) a standard normal distribution with covariance func-
tion hyper-parameters expressed in Φ.

Proof. The SM covariance function’s corresponding prob-
ability measure p(w) is expressed as a mixture of Gaus-
sians,

p(w) =

(2πliq )2
2

−

(wq− 1
piq

)2

2πliqe

σ2
i

Q
(cid:89)

√

q=1

L
(cid:88)

i=1

L
(cid:88)

=

i N (w; pi, L−2
σ2

i

),

with σ2

i=1
i summing to one.

Identity 3.

EN (w;µ,Σ)

(cid:0) cos(wT x + b)2(cid:1)
1
2

=

e−2xT Σx cos(2µT x + 2b) +

1
2

Following equation 1 with the above p(w) we perform a
change of variables to get,
K(x, y)

Proof. Following the identity cos(θ)2 = cos(2θ)+1

,

2

(cid:0) cos(wT x + b)2(cid:1)

EN (w;µ,Σ)
1
2

=

EN (w;µ,Σ)

(cid:0) cos(2wT x + 2b)(cid:1) +

1
2

L
(cid:88)

(cid:90)

i=1

L
(cid:88)

(cid:90)

=

=

RQ

RQ

i=1

i N (w(cid:48); pi, L−2
σ2

i

) cos(2πw(cid:48)T (x − y))dw(cid:48)

i N (w; 0, I) cos(2π(L−1
σ2

i w + pi)T (x − y))

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

for w(cid:48) = L−1

· dw
i w + pi.

For each component i we get Φi an N × K matrix with
elements
(cid:114)

cos (cid:0)2π(L−1

i wk + pi)T (x − zk) + bk

(cid:1),

2σ2
i
K

where for simplicity, we index wk and bk with k =
1, ..., LK as a function of i.

Proposition 3. Let p(a) = N (0, I). The optimal distribu-
tion q(a) solving
(cid:90)
(cid:90)

q(a)

q(ω) log p(y|a, X, ω)dωda

− KL(q(a)||p(a)) − KL(q(ω)||p(ω))

is given by

q(ad) = N (ΣEq(ω)(ΦT )yd, τ −1Σ)

with Σ = (Eq(ω)(ΦT Φ) + τ −1I)−1.

The lower bound to optimise then reduces to

L =

D
(cid:88)

(cid:18)

d=1

−

N
2

log(2πτ −1) −

yT

d yd

τ
2

+

+

1
2
1
2

log(|τ −1Σ|)

τ yT

d Eq(ω)(Φ)ΣEq(ω)(ΦT )yd

(cid:19)

− KL(q(ω)||p(ω)).

L =

q(a)

q(ω) log p(y|a, X, ω)dωda

−

q(a) log

da −

q(ω) log

(cid:90)

q(a)
p(a)

q(ω)
p(ω)

dω.

d(L + λ (cid:82) ((cid:82) q(a)da − 1))
dq(a)

= 0

Proof. Let
(cid:90)

(cid:90)

(cid:90)

We want to solve

for some λ. I.e.

(cid:90)

This means that
q(a) = eλ−1e
(cid:18)

Proposition 4. Denoting M = [md]D

Eq(y∗|x∗)(y∗) = Eq(ω)

d=1, we have
(cid:0)φ∗
(cid:1)M.

Proof. The d’th output y∗
given by (writing φ∗ = φ(x∗, ω))

d of the mean of the distribution is

Eq(y∗

d |x∗)(y∗

d) =

dp(y∗
y∗

d|x∗, A, ω)q(A, ω)dAdωdy∗
d

(cid:90)

=

(cid:90)

(cid:90)

(cid:0)φ∗ad

(cid:1)q(A, ω)dAdω

(cid:90)

=

φ∗q(ω)dω
(cid:0)φ∗
(cid:1)md,
which can be evaluated analytically following equation 8.

adq(A)dA

= Eq(ω)

Proposition 5. The variance of the predictive distribution
is given by
Varq(y∗|x∗)(y∗) = τ −1ID + Ψ

+ MT (cid:0)Eq(ω)
with Ψi,j = tr(cid:0)Eq(ω)

(cid:0)φT
∗ φ∗
(cid:0)φT
∗ φ∗

(cid:1) − Eq(ω)
(cid:1) · si

(cid:0)φ∗
(cid:1) · 1[i = j].

(cid:1)T

Eq(ω)

(cid:0)φ∗

(cid:1)(cid:1)M

Proof. The raw second moment of the distribution is given
by (remember that y∗ is a 1 × D row vector)
Eq(y∗|x∗)((y∗)T (y∗))

(y∗)T (y∗)p(y∗|x∗, A, ω)dy∗

q(A, ω)dAdω

(cid:19)

(cid:90) (cid:18)

=

=

(cid:90)

(cid:0)Covp(y∗|x∗,A,ω)(y∗)

+ Ep(y∗|x∗,A,ω)(y∗)T Ep(y∗|x∗,A,ω)(y∗)(cid:1)q(A, ω)dAdω

= τ −1ID + Eq(A)q(ω)

(cid:0)AT φT
Now, for i (cid:54)= j between 1 and D,
(cid:18)
(cid:0)AT φT

Eq(A)q(ω)

∗ φ∗A(cid:1)

(cid:19)

∗ φ∗A(cid:1).

i,j

i,i

= Eq(A)q(ω)

(cid:0)aT

i φT

∗ φ∗aj

(cid:1)

= mT

i Eq(ω)

(cid:0)φT

∗ φ∗

(cid:1)mj,

= Eq(A)q(ω)

(cid:0)aT

i φT

∗ φ∗ai

(cid:1)

= mT

i Eq(ω)
(cid:18)

+ tr

Eq(ω)

(cid:0)φT

(cid:1)mi

∗ φ∗
(cid:0)φT

∗ φ∗

(cid:1) · si

(cid:19)

q(ω) log p(y|a, X, ω)dω − log

− 1 + λ = 0.

q(a)
p(a)

and for i = j between 1 and D,
(cid:18)
(cid:0)AT φT

Eq(A)q(ω)

∗ φ∗A(cid:1)

(cid:19)

(cid:82) q(ω) log p(y|a,X,ω)dωp(a)

= exp

−

aT τ (E(ΦT Φ) + τ −1I)a

1
2

+ (cid:0)τ yT E(Φ)(cid:1)a + ...

(cid:19)

following equation 7.

and since q(a) is Gaussian, it must be equal to
q(a) = N (ΣEq(ω)(ΦT )y, τ −1Σ)

with Σ = (Eq(ω)(ΦT Φ) + τ −1I)−1.

Writing p(a) and q(a) explicitly and simplifying results in
the required lower bound.

Taking the difference between the raw second moment and
the outer product of the mean we get that the variance of
the predictive distribution is given by
Varq(y∗|x∗)(y∗) = τ −1ID + Ψ

+ MT (cid:0)Eq(ω)

(cid:0)φT

∗ φ∗

(cid:1) − Eq(ω)

(cid:0)φ∗

(cid:1)T

Eq(ω)

(cid:0)φ∗

(cid:1)(cid:1)M

Improving the Gaussian Process Sparse Spectrum Approximation by Representing Uncertainty in Frequency Inputs

period was observed to often be larger than the range of the
data). The limitation arises from the fact that the covariance
is represented as a weighted sum of cosines in SSGP. In the
approximation we present here this is avoided by decaying
the cosines to zero.

It is interesting to note that although our approximated co-
variance function K(x, y) has to be stationary (i.e. it can
be represented as K(x, y) = K(x − y)), the approximate
posterior is not. This is because stationarity entails that for
all x it must hold that K(x, x) = K(x − x) = K(0).
But for Eq(ω)( (cid:98)K(X, X)) = Eq(ω)(ΦΦT ) we have that the
diagonal terms depend on x:
2σ2
i
K

(cid:0)Eq(ω)(ΦΦT )(cid:1)

n,n =

nkΣkxnk

e−xT

K
(cid:88)

k=1

k xnk) + bnk)(cid:1)2
.
· Eq(bk)
This is in comparison to the SSGP approximation, where
the approximate model is stationary.

(cid:0) cos(µT

It is also interesting to note that the lower bound in equation
10 is equivalent to that of equation 11 for sd non-diagonal.
For sd diagonal the lower bound is looser, but offers im-
proved time complexity.

The use of the factorised lower bound allows us to save on
the expensive computation of A for small updates of ω.
Intuitively, this is because small updates in ω would result
in small updates to A. Thus solving for A analytically at
every time point without re-using previous computations
is very wasteful. Optimising over A to solve the linear
system of equations (given ω) allows us to use optimal A
from previous steps, adapting it accordingly.

Also, even though it is possible to analytically integrate
over A, we can’t analytically integrate ω. This is because
ω appears inside a cosine inside an exponent in equation
2. We can’t solve for ω analytically either in the equation
preceding equation 6. This is again because ω appears in-
side a cosine (unlike A which appears in a quadratic form
in that equation).

Finally, we can approximate our approach to achieve a
much more scalable implementation by only using the K (cid:48)
nearest inducing inputs for each data point. This is follow-
ing the observation that for short length-scales and large Σ,
the features will decay to zero exponentially fast with the
distance of the data points from the inducing inputs.

with Ψi,j = tr(cid:0)Eq(ω)

(cid:0)φT

∗ φ∗

(cid:1) · si

(cid:1) · 1[i = j].

Discussion 1. We discuss some of the key properties of the
VSSGP, fVSSGP, and sfVSSGP. Due to space constraints,
this discussion was moved to the appendix.

Unlike the sparse pseudo-input approximation, where the
variational uncertainty is over the locations of a sparse
set of inducing points in the output space,
the uncer-
tainty in our approximation is over a sparse set of func-
tion frequencies. As the uncertainty over a frequency (Σk)
grows, the exponential decay term in the expectation of
Φ decreases, and the expected magnitude of the feature
([(Eq(ω)(Φ))n,k]N
n=1) tends to zero for points xn far from
zk. Conversely, as the uncertainty over a frequency de-
creases, the exponential decay term increases towards one,
and the expected magnitude of the feature does not dimin-
ish for points xn far from zk.

With the predictive uncertainty in equation 15 we preserve
many of the GP characteristics. As an example, consider
the SE covariance function6. In full GPs the variance in-
creases towards σ2 + τ −1 far away from the data. This
property is key to Bayesian optimisation for example where
this uncertainty is used to decide what action to take given
a GP posterior.

With the SE covariance function, our expression for
φ∗ contains an exponential decay term exp(− 1
2 (xn −
zk)T Σk(xn − zk)). This term tends to zero as xn diverges
from zk. For xn far away from zk for all k we get that the
(cid:1) tends
entire matrix Φ tends to zero, and that Eq(ω)
to σ2

(cid:0)φT

∗ φ∗

K Ik.

For fVSSGP, equation 15 then collapses to

(cid:80)K

with Ψ(cid:48)

i,j = σ2 1
K

Varq(y∗|x∗)(y∗) = τ −1ID + Ψ(cid:48)
k=1(µikµjk + s2
ik
This term leads to identical predictive variance to that of the
full GP when A is ﬁxed and follows the prior. It is larger
di > 1−µ2
than the predictive variance of a full GP when s2
di
on average, and smaller otherwise.

1[i = j]).

Unlike the SE GP, the predictive mean in the VSSGP with
a SE covariance function does not tend to zero quickly far
from the data. This is because the model can have high
conﬁdence in some frequencies, driving the inducing fre-
quency variances (Σk) to zero. This in turn requires xn−zk
to be much larger for the exponential decay term to tend to
zero. The frequencies the model is conﬁdent about will be
used far from the data as well.

Unlike the SSGP, the approximation presented here is not
periodic. This is one of the theoretical limitations of the
sparse spectrum approximation (although in practice the

6Given by σ2 exp (cid:0) − 1

(cid:80)Q

2

q=1

(xq −yq )2
l2
q

(cid:1)

