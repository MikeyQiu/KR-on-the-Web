Structured Attentions for Visual Question Answering

Chen Zhu, Yanpeng Zhao, Shuaiyi Huang, Kewei Tu, Yi Ma
ShanghaiTech University
{zhuchen, zhaoyp1, huangsy, tukw, mayi}@shanghaitech.edu.cn

7
1
0
2
 
g
u
A
 
7
 
 
]

V
C
.
s
c
[
 
 
1
v
1
7
0
2
0
.
8
0
7
1
:
v
i
X
r
a

Abstract

Visual attention, which assigns weights to image regions
according to their relevance to a question, is considered as
an indispensable part by most Visual Question Answering
models. Although the questions may involve complex rela-
tions among multiple regions, few attention models can ef-
fectively encode such cross-region relations. In this paper,
we demonstrate the importance of encoding such relations
by showing the limited effective receptive ﬁeld of ResNet
on two datasets, and propose to model the visual attention
as a multivariate distribution over a grid-structured Con-
ditional Random Field on image regions. We demonstrate
how to convert the iterative inference algorithms, Mean
Field and Loopy Belief Propagation, as recurrent layers
of an end-to-end neural network. We empirically evalu-
ated our model on 3 datasets, in which it surpasses the
best baseline model of the newly released CLEVR dataset
[13] by 9.5%, and the best published model on the VQA
dataset [3] by 1.25%. Source code is available at https:
//github.com/zhuchen03/vqa-sva.

1. Introduction

Visual Question Answering (VQA) is a comprehensive
task inspecting intelligent systems’ ability to recognize im-
ages and natural languages together. Advances in this area
not only beneﬁt real-world applications which require the
synergistic reasoning of vision and language, such as query-
ing events in surveillance videos [34] and searching speciﬁc
goods in images [41], but also call for ﬁner-grained under-
standing on the semantic structures of images.

Adoption of the visual attention mechanism like [38, 40,
24, 27] is a major source to boost performance of VQA. Vi-
sual attentions impose regularization on the models to ﬁnd
the most relevant image regions to the question. Still, exper-
iments [6] point out that state-of-the-art models often fail to
identify the related regions like humans do. We argue this
problem comes from the fact that such attention models do
not take into account the spatial relations between regions
when predicting the attention. This is important because the

Figure 1: An example of the proposed model on CLEVR, demon-
strating it is capable of inferring spatial relations despite the lim-
ited effective receptive ﬁeld of the CNN. Question: What is the
color of the sphere on the right of the metal sphere? Our model
overcomes the unstructured attention’s tendency to attend to iso-
lated key words in the questions, attending to the right region and
giving the correct answer purple.

effective receptive ﬁeld (ERF) of deep CNNs only covers a
small fraction of the image [25]. Even with memory mecha-
nism [37, 27, 40, 38], it is difﬁcult to infer the right attention
corresponding to questions that involve the spatial relations
between regions without overlapping ERFs.

In this paper, we propose a novel neural network to
model the attention with a multivariate distribution which
considers the arrangements of image regions. We adopt the
most straightforward graph structure to model image region
arrangements - a grid-structured Conditional Random Field
(CRF) [29]. The framework of the proposed method is illus-
trated in Fig. 2. We show that attention can be formulated
as the marginal distribution of each hidden variable in the
CRF. Then, we implement the iterative approximate infer-
ence algorithms, Mean Field and Loopy Belief Propagation,
as recurrent layers of neural networks, which iteratively re-
ﬁnes the attention. An example of this process is shown in
Fig. 1. We evaluate the proposed model on three repre-

sentative datasets, where our model is competitive with the
rule-based model [2] on the SHAPES dataset, and surpasses
the best baseline model of CLEVR by more than 9.5% and
best published method [17] on the VQA dataset by 1.25%.
We also demonstrate that the ERF on CLEVR and the VQA
dataset is not large enough for previous methods to answer
all questions involving object arrangements correctly.

Our work has the following contributions. First, we pro-
pose to model structured attentions with a CRF over image
regions for Visual Question Answering, to address the prob-
lem of limited effective receptive ﬁelds of CNNs. Second,
we demonstrate how to unfold both Mean Field and Loopy
Belief Propagation algorithms for CRF as recurrent layers
of neural networks, and perform comprehensive evaluation
of the two different networks on three challenging datasets.
Third, we give empirical evaluations of ERFs on CLEVR
and the MSCOCO dataset.

2. Related Work

There have been many different directions for improv-
ing VQA performance, including predicting answer types
[14], utilizing task-speciﬁc submodules [1, 2], and better
multimodal feature pooling methods [8, 17]. Our focus is
on structure-aware spatial attention applied on the visual
feature. There are two major forms of spatial attention for
VQA. One [31, 22, 11] is based on region proposals gener-
ated by Edge Box [43], and the other [38, 40, 24, 27, 8, 17]
predicts attention on the individual feature vectors of convo-
lutional feature maps. The most representative model SAN
[40] adopted multiple attention layers to support multi-step
reasoning. There are also methods [24, 27] that adopted
both image attention and question attention to reﬁne the
image and question representation simultaneously.
[38]
proved its ability to recognize absolute and relative posi-
tions with two simple experiments, but the model itself does
not consider the arrangement of regions and the success
may be attributed to the power of CNNs.

Some of the methods considered the structures of im-
ages. [26] adopted the Bayesian framework based on the
logic forms of segmentation results. The method was sur-
passed by some simple baseline models due to its demand
for better semantic segmentation [15]. The DMN [37]
adopted a bidirectional GRU that traverses the convolu-
tional feature map in a snake-like fashion to encode the de-
pendency of regions, which might not be the optimal choice
for the 2D structure of images. [22] concatenated the 8D
bounding box representation with the 4096D visual fea-
ture, in which the spatial information could be easily over-
weighed by the visual feature.

There have been a number of approaches combining neu-
ral networks and CRF to predict structured outputs in both
computer vision and natural language processing. [30] uti-
lized neural networks with sigmoid activation to predict the

unary potential for sequential labeling. [7] also used neu-
ral networks to predict the pairwise potential of labels. [4]
learned ﬁxed pairwise potentials for word recognition and
image classiﬁcation.
[12] utilized CNNs to predict both
the unary potentials and higher-order potentials for uncon-
strained word recognition.
[42] proposed to unfold the
Mean Field algorithm as recurrent layers for semantic seg-
mentation. It modeled the pairwise potential with Gaussian
kernels, which encourages similar features to take the same
label. Besides the supervised structure in the output layers,
[18] enforced the intermediate layers of neural networks to
learn structured attentions for natural language tasks.

To the best of our knowledge, structured attention has
not been explored for the complex task of VQA. We give
the ﬁrst empirical evaluations on unfolding both Mean Field
and Loopy Belief Propagation as intermediate recurrent lay-
ers on the task of VQA, which can be seen as a further ex-
ploration of [18] in modeling 2D structures of visual data.

3. Attention Models and Methods

The general architecture of the proposed model is shown
in Fig. 2. Here we deﬁne some notations used across the
paper. We take the question feature q ∈ RnQ from the last
time step of a GRU such as [20], and the image feature map
X = [x1, ..., xM ] ∈ RnI ×M from one of the convolution
layers of a CNN such as [10]. Here nQ, nI are the dimen-
sions of question and image feature vectors respectively,
and M is the total number of image feature vectors which
divides the image into M regions. We use softmax(·) to de-
note the softmax activation function and σ(·) to denote the
sigmoid activation function. The attention mechanism in
VQA aims to produce a context c from X which represents
the visual feature related to the question.

3.1. Unstructured Categorical Attention

In previous methods for VQA, visual attention is usually
modeled as a single or multi-step soft-selection from X. As
shown in [39, 18], the soft-selection approach represents the
selected region index by a categorical latent variable z ∈
{1, ..., M } and deﬁnes c as an expectation of the selection:

c = E

1{z=i} · xi

=

p(z = i|X, q)xi,

(1)

(cid:34)

(cid:88)

i

(cid:35)

(cid:88)

i

where 1{z=i} is an indicator function, and the distribution
of z is parameterized by

p(z = i|X, q) = softmax(Ug(xi, q)),

(2)

where U ∈ R1×nI and g(·) is some multimodal feature
pooling function such as [8, 17]. Noticing this model ig-
nores the spatial arrangement of the feature vectors in X in

Figure 2: The whole picture of the proposed model. The inputs to the recurrent inference layers are the unary potential ψi(zi) and pairwise
potential ψij(zi, zj), computed with Eq. 8. ψi(zi) can also be used as an additional glimpse, which usually detects the key nouns. In
the inference layers, xi represents b(i) for MF and m(i) for LBP. The recurrent inference layers generates a structured glimpse with MF
or LBP. The 2 glimpses are used to weight-sum the visual feature vectors. The classiﬁer use both of the attended visual features and the
question feature to predict the answer. The demonstration is a real case.

each step, and the resulting hidden states in multi-step mod-
els [39, 38] are still unstructured, we have dropped the hid-
den states in the condition presented in [38] for notational
convenience.

Since categorical distribution only requires the probabil-
ities to be positive and sum to 1, the following normalized
sigmoid attention is still a valid categorical attention:

p(z = i|X, q) =

σ(Ug(xi, q))
j σ(Ug(xj, q))

.

(cid:80)

(3)

We can use such attention as a glimpse1 of our model, which
will be introduced in Section 3.4.

3.2. Structured Multivariate Attention

To consider the arrangement of X, we adopt a structured
multivariate attention model similar to [18], in which we
consider the distribution z ∼ p(z|X, q) as a vector of binary
latent variables z = [z1, ..., zM ]T with zi = 1 if xi is related
to the question and zi = 0 otherwise. Multiple regions can
now be selected at the same time. We deﬁne the context as
the expectation of the sum over all related regions, which
can be derived as a sum of xi weighted by the marginal
probability p(zi = 1|X, q):

Ez∼p(z|X,q)[Xz] =

p(zi = 1|X, q)xi.

(4)

(cid:88)

i

Let S = (cid:80)
i p(zi = 1|X, q). Since 0 ≤ S ≤ M and M is
relatively large, to reduce covariate shift, we normalize the
expectation to get the context c:

c =

p(zi = 1|X, q)xi,

(5)

1
S

(cid:88)

i

We model the distribution p(z|X, q) in the most straight-
forward form, a grid-structured Conditional Random Field,

which represents the joint probability p(z|X, q) with a grid-
structured factor graph that considers the pairwise joint dis-
tribution of a region’s 4-neighbourhood, as shown in Fig. 2.
Let N = {(i, j)|i < j, j ∈ Ni}, where Ni is the set of i’s
neighbors on the graph. The grid-structured CRF assumes

p(z|X, q) =

ψij(zi, zj)

ψi(zi),

(6)

1
Z

(cid:89)

(i,j)∈N

(cid:89)

i

where the unary potential ψi(zi) ≥ 0 measures the likeli-
hood of region i taking the value zi ∈ {0, 1}, and the pair-
wise potential ψij(zi, zj) ≥ 0 measures the likelihood of
regions (i, j) taking values zi, zj respectively.

3.3. Recurrent Inference Layers

The inference problem in such a gird-structured factor
graph, which aims to calculate the marginal probability
p(zi|X, q; θ), is known to be NP-hard [32]. Still, there
are approximate inference algorithms to solve the problem,
such as Mean Field (MF) and Loopy Belief Propagation
(LBP). These algorithms take potential functions ψi(zi)
and ψij(zi, zj) as inputs and update p(zi|X, q; θ) iteratively
through message passing. We train neural networks to pre-
dict optimal ψi(zi) and ψij(zi, zj) and then run the algo-
rithms for a ﬁxed number of T steps. The iterative algo-
rithms are implemented as recurrent inference layers in the
neural network.

3.3.1 Potential Functions

In VQA, the potential functions should depend on both the
image and the question. We use low-rank bilinear pooling
[17], a parsimonious bilinear model, to capturing the inter-
action between 2 feature vectors x, y:

1Glimpses refer to multiple attentions, same as in [8, 17].

g(x, y; Px, Py) = tanh(Pxx) (cid:12) tanh(Pyy),

(7)

Algorithm 1 MF Recurrent Layer in VQA
Input: ψi(zi), ln ψij(zi, zj)
initialize b(0)
for t=1:T do

(zi) = ψi(zi)

i

for i = 1 : M , zi in {0, 1} do

s←0
for j in Ni, zj in {0, 1} do

j

s←s+b(t−1)
b(t)
i (zi) ← ψi(zi) exp(s)
normalize(b(t)
)

i

(zj) ln ψij(zi, zj)

return b(T )

(zi)

i

where Px, Py are learnt projection matrices projecting x, y
to the same dimension, and (cid:12) represents Hadamard prod-
uct. Based on this, we model ψi(zi) and ψij(zi, zj) as fol-
lowing:

ψi(zi = 1) = σ (Ug (xi, q; Ux, Uq)) ,

(8)

(9)

(cid:1)(cid:1) ,

ψi(zi = 0) = 1 − ψi(zi = 1),
ψij(zi, zj) = h (cid:0)vzizj g (cid:0)yij, q; Vy, Vq

(10)
where Ux ∈ Rnc×nI , Uq ∈ Rnc×nQ , U ∈ R1×nc, Vy ∈
Rnc×2nI , Vq ∈ Rnc×nQ are learnt projection matrices,
vzizj is a row vector of V ∈ R4×nc indexed by zi and zj,
yij = [xT
j ]T , nc is the common projection dimension,
h(·) is a certain activation function which will differ in the
2 inference algorithms.

i , xT

3.3.2 Mean Field Layers

The Mean Field algorithm approximates the distribution
p(z|X, q) in Eq. 6 with a fully factorized distribution q(z):

q(z) =

bi(zi),

(cid:89)

i

where bi(zi) are variational parameters corresponding to the
marginal probabilities p(zi|X, q). The variational parame-
ters are optimized by iteratively minimizing the mean-ﬁeld
free energy

FM F (bi) = −

bi(zi)bj(zj) ln ψij(zi, zj)

(cid:88)

(cid:88)

zi,zj

(i,j)∈N
(cid:88)
(cid:88)

i

zi

+

bi(zi)[ln bi(zi) − ln ψi(zi)]

subject to the constraint (cid:80)
bi(zi) = 1, which is shown
zi
to be equivalent to minimizing the KL divergence be-
tween p(z|X, q) and q(z) [35]. Speciﬁcally, MF initializes
b(0)
i

(zi) = ψi(zi) and updates b(t)

i (zi) as:

b(t)
i (zi) = αψi(zi) · exp



b(t−1)
j

(zj) ln ψij(zi, zj)

 ,



(cid:88)

(cid:88)

j∈Ni

zj

(11)



(12)

Algorithm 2 LBP Recurrent Layer in VQA
Input: ψi(zi), ψij(zi, zj)

initialize m(0)
for t=1:T do

ij (zj) = 0.5, m(t)

ij (zj) = 0 for t > 0

for j = 1 : M , i in Nj do

for zi in {0, 1} do

s(zi) ←1
for k in Ni \ {j} do

s(zi) ← s(zi) · m(t−1)
(zi)
for (zi, zj) in {0, 1} × {0, 1} do

ki

m(t)

ij (zj) ← m(t)

ij (zj) + ψij(zi, zj)ψi(zi)s(zi)

normalize(m(t)
ij )

for i = 1 : M do

bi(zi) ← ψi(zi)
for k in Ni, zi in {0, 1} do
bi(zi) ← bi(zi) · m(T )

ki (zi)

normalize(bi)

return bi(zi)

where α is the normalizing constant. Since Eq. 12 only
involves ln ψij(zi, zj), we adopt a log model for pairwise
potential,

ln ψij(zi, zj) = tanh(vzi,zj g(yij, q; Vy, Vq)).

(13)

MF can be unfolded as a recurrent layer of neural networks
without parameters, where in each step t the inputs are
ψi(zi), ψij(zi, zj) and b(t−1)
(zi), as demonstrated by Al-
gorithm 1.

i

3.3.3 Loopy Belief Propagation Layers

Loopy Belief Propagation can be applied similarly by ini-
tializing all messages to a ﬁxed value and updating the mes-
sages iteratively in a ﬁxed or random order [29]. In our grid-
structured graph, since each factor is connected to only 2
variables, the variable-to-factor and factor-to-variable mes-
sages can be merged as a single message mij, representing
the message from zi to zj. We initialize m(0)
ij (zj) = 0.5,
and iteratively update the messages based on the formula

m(t)

ij (zj) = α

ψij(zi, zj)ψi(zi)·

(cid:89)

m(t−1)
ki

(zi), (14)

(cid:88)

zi

k∈Ni\{j}

where α is the normalizing constant as above. After a ﬁxed
number of steps T , the variable zi gathers all the messages
from its neighbourhood to get the marginal probability:

bi(zi) = βψi(zi)

(15)

(cid:89)

k∈Ni

m(T )

ki (zi),

where β is the normalizing constant.

Similar to MF, LBP can also be unfolded into param-
eterless recurrent layer, where at each time step t the in-
put is ψi(zi), ψij(zi, zj) and m(t−1)
(zj), and after T steps

ij

m(T )(zi) is used to compute marginal probability bi(zi), as
shown in Algorithm 2.

3.4. The overall structure

As shown in Fig. 2, the overall structure of the pro-
posed model is an end-to-end classiﬁcation neural network.
Firstly, ψi(zi) and ψij(zi, zj) are computed using the ex-
tracted features X and q. Then, the recurrent inference lay-
ers run for T steps to get the structured marginal probability
p(zi = 1|X, q) = b(T )
(zi = 1), which is then used to com-
pute the structured context ˆc with Eq. 5. We also compute
a unstructured context ˜c with Eq. 1 by replacing Ug(xi, q)
in Eq. 3 with ψi(zi = 1). In the classiﬁer, the contexts are
both pooled with the question to get

i

ˆs = g(ˆc, q; ˆWc, ˆWq),
˜s = g(˜c, q; ˜Wc, ˜Wq),
(17)
where ˆWc, ˜Wc ∈ Rnc×nI , ˆWq, ˜Wq ∈ Rnc×nQ. The an-
swer is predicted with

(16)

a = arg max
k∈ΩK

softmax(wk[ˆsT , ˜sT ]T ),

(18)

where wk is the k-th row of W ∈ RK×2nc, K is the num-
ber of answers, ΩK is the answer space with up to K an-
swers.

4. Experiments

4.1. Datasets

The SHAPES dataset [2] is a synthetic dataset consist-
ing of images containing 3 basic shapes in 3 different colors
with a resolution of 30×30, and queries about the arrange-
ments of the basic shapes, as shown in Fig. 3. The answer
is “yes” when the image satisﬁes the query, and “no” other-
wise. There are 3 different lengths of queries. The original
dataset [1] has 14592 and 1024 image/question pairs for the
training and test sets. All the queries in the test set do not
appear in the training set.

The CLEVR dataset [13] is a much more complex but
unbiased synthetic dataset aiming at testing visual abilities
such as counting, comparing and logical reasoning. It con-
sists of 100,000 images of simple 3D objects with random
shapes, sizes, materials, colors and positions with a reso-
lution of 320×480, and nearly a million natural language
questions, 853,554 of which are unique. The questions can
be categorized into 5 general types: exist, count, compare
integer, query attribute, and compare attribute. There are
699,989 training questions, 149,991 validation questions
and 149,988 test questions. The vocabulary sizes for the
questions and answers are 82 and 28 respectively.

The VQA real-image dataset [3] is a comprehensive
dataset which requires knowledge beyond the dataset to an-
swer all the questions correctly. It has about 204,721 images

from MSCOCO [23] each with 3 natural language ques-
tions, and each question has 10 answers collected from on-
line workers. It consists of 3 splits: train, val and test,
each of which has 248,349, 121,512 and 244,302 questions
respectively. test-dev is a subset of test, which has
60,864 questions. We keep a collection of 2,000 most fre-
quent answers from the union of train and val, and ig-
nore questions with no answers from this collection, which
leaves us 334,554 samples for training. With the same pre-
processing procedure as [8, 17], we also get 837,298 train-
ing samples from Visual Genome [21] for augmentation.

4.2. Model Conﬁguration and Training

For extracting image features, we use a 2-layer LeNet
trained with the whole network on SHAPES as in [1],
and ImageNet-pretrained ResNets [10] on CLEVR and the
VQA dataset. For sentence embedding, we use single-layer
GRU. On the SHAPES dataset, we set nc = 128, nQ =
128, nI = 50, M = 9. On CLEVR, following [13], we re-
size the input images to 224 × 224, and use feature maps at
the res4b22 layer of ResNet-101 (nI = 1024, M = 196)
and the res5c layer of ResNet-152 (nI = 2048, M = 49)
in different experiments. We also set nQ = 2048, compa-
rable to the 2-layer LSTM with 1024 units per layer used in
[13]. On the VQA dataset, we ﬁx nc = 1200. Images are
resized to 448 × 448 and we use the feature at the res5c
layer of ResNet-152 (nI = 2048, M = 196 ), the same as
[24, 8, 17]. We set nQ = 2400 since we use the pre-trained
skip-thought vector [20] provided by [17] as initialization.
For training, we implement our network with MXNet
[5]. In all 3 tasks, we use the Adam optimizer [19] with
the default setting except for the learning rate, which is
picked using grid search. We adopt Bayesian dropout [9]
for GRU’s as in [17], and apply dropout [33] before every
other fully connected layer. On SHAPES and CLEVR, we
ﬁnd setting both dropout probability to 0.2 to be optimal,
while on the VQA dataset, setting a small Bayesian dropout
0.25 for the GRU and a large dropout of 0.5 for the other
parts achieved the optimal results. In addition, we use an-
swer sampling by default on the VQA dataset as in [8, 17].

4.3. Visualization of ERF

To visualize the ERF, we need to compute the inﬂuence
of a pixel Iij ∈ R3 on the entry yn
rc, the feature at (r, c)
of the n-th channel in a certain conv layer, represented by
rc/∂Iij(cid:107). As in [25], we assume a loss function ln
(cid:107)∂yn
rc
which is related only to channel yn
rc = 1
and ∂ln
rc/∂Iij =
∂ln
rc/∂Iij can be computed efﬁciently by
DL frameworks. Finally, we draw the heat map of the total
effect of a subset ΩC of channels:

ij = 0 for i (cid:54)= r or c (cid:54)= j, so that ∂yn

rc/∂yn
rc/∂Iij, since ∂ln

rc, i.e., ∂ln

rc/∂yn

Eij =

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:88)

n∈ΩC

(cid:19)2

(cid:18) ∂ln
rc
∂Iij

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

.

(19)

amount of data as [1]. This may because [1] uses a parser
to understand the queries with guaranteed correctness on
this dataset, while we have to train the GRU to understand
the queries from scratch. The parser-based method may
not perform well in more general tasks such as the VQA
dataset, since they found using fewer modules on the VQA
dataset turned out to be better, but our RNN-based approach
should generalize better with enough training data. So we
generate more data with the same answer distributions for
each query as [1] to train and test our model, and re-trained
their model using the released code. We name the origi-
nal dataset small, and the newly generated datasets with
2 and 3 times as much data in both training and test sets as
medium and large respectively. We ﬁnd with more train-
ing data, our model becomes competitive with [1] and the
MF-G2 model surpasses it on both medium and large, as
shown in Table 1. Our models are extremely good at han-
dling length-4 queries, which looks for object arrangements
in 4-neighborhood, as demonstrated in Fig. 3. The high ac-
curacy also implies the model is capable of set theory rea-
soning, since it achieved high test accuracy with length-3
queries which contain self-conﬂict queries such as is red
green, which aims to ﬁnd an object that is both red and
green. For complex queries, such as is red below below
green, which aims to ﬁnd a red object below another object
that is below a green object, it is not as competitive as [1],
probably because the GRU in our model has not generalized
to higher order logic.

4.4.2 On CLEVR

In this part, we study the role of different visual features
and different kinds of attentions on the performance, and
test our best models on the test set, as shown in Table 2.
Our best model surpasses the best baseline model in [13] by
more than 9.5% on the test set. Both MF and LBP outper-
form SM and SIG, demonstrating the effectiveness of our
method. The maximum margin of MF/LBP vs. SIG on
overall accuracy is 2.62% and 1.33% with the ResNet-152
and ResNet-101 features respectively. The most signiﬁcant
improvement of MF/LBP over other models is on Com-
pare Attribute, which involves comparing speciﬁc attributes
of objects speciﬁed by spatial relations with other objects.
This also proves that our model alleviates the problem of
previous methods of ignoring arrangements of regions. Fur-
ther, we show the receptive ﬁelds of the 2 selected layers on
the test set in Fig. 4. In each image, we choose the feature
vector closest to the center, where there is a higher chance
for objects to appear. Still, both of them only occupy a small
portion of the image, indicating the importance of consider-
ing the structure of regions. Overall, the performance with
res4b22 features is better than that with res5c features.
From the ERF point of view, the ERF of res5c has more

Figure 3: Visualization of MF-G2 and LBP-G2 on the test set of
large. b(0) or ψi represents the initial attention, b(3) or b repre-
sents the reﬁned attention after MF or LBP. The query looks for a
green object under a circle.

small

large

medium NMN

Query Length
% of test set
NMN[2]
SIG-G2
MF-G2
LBP-G2

SIG-G2
MF-G2
LBP-G2
NMN
SIG-G2
MF-G2
LBP-G2

3
12.5
91.4
57.0
53.1
63.3
99.2
68.8
98.0
87.1
99.7
93.2
99.7
95.1

4
62.5
95.6
70.5
71.4
72.2
92.1
79.6
99.6
99.5
94.2
95.6
99.9
100

5
25
92.6
66.8
66.0
62.5
85.2
73.8
71.5
71.9
91.2
72.5
79.2
78.9

All
-
94.3
67.9
67.8
68.7
91.3
76.8
92.4
91.0
94.1
89.5
94.7
94.1

Table 1: Accuracy on SHAPES.

4.4. Results and Analysis

We perform experiments on the 3 datasets, in which we
ﬁx the general structure except for the visual attention mod-
els, to quantify the role of structured attention in our model
and the best conﬁguration for it. We will use the following
abbreviations to distinguish the models we implemented:
• SM/SIG: 1-glimpse softmax or sigmoid attention.

• MF/LBP: 1-glimpse multivariate attention with a MF

or LBP recurrent layer and a default T = 3.

• MODEL-G2: 2-glimpses with a default T = 3, where

MODEL=SIG,MF or LBP is the attention model.

• MF-SIG/LBP-SIG: 2-glimpse model by concatenating
a MF or LBP attention with a SIG attention, as men-
tioned in Section 3.4.

• MODEL-Tn: MODEL with T = n inference steps.

4.4.1 On SHAPES

In this part, we will look into the inﬂuence of the volume
of the data on our model’s generalization, and compare the
performance of SIG-G2, MF-G2 and LBP-G2 models. We
ﬁnd it is difﬁcult for all 3 models to generalize with the same

CLEVR validation

Table 3: Results of the Open Ended task on test-dev.

res5c on CLEVR res5c on CLEVR res5c on MSCOCO

Figure 4: The average ERF [25] of 32 channels chosen at regular
intervals, on 15000 images from the CLEVR test set and 52500
images from the MSCOCO test set with resolution of 224 × 224
and 448 × 448 respectively. The ERF images are smoothed with
σ = 4 Gaussian kernels.

All

Exist Count

CI

QA

CA

res5c
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
MCB[13]
SAN[13]
MF-SIG
LBP-SIG

68.80
70.52
73.14
72.30
73.19
73.33

75.63
75.32
76.65
76.21
77.4
77.97

51.4
68.5
77.57
78.04

73.20
73.90
76.46
76.32
76.53
77.50

77.69
76.54
77.90
78.97
79.8
79.7

63.4
71.1
80.05
79.63

CLEVR validation

53.16
53.89
56.89
54.92
56.22
56.39

57.79
58.93
58.87
57.52
61.0
61.39

76.52
76.52
77.43
77.50
78.56
77.97

78.63
78.12
80.48
80.14
79.3
80.17

CLEVR test
63.3
42.1
73.5
52.2
80.08
60.69
80.69
61.27

81.58
82.46
83.72
83.35
84.23
84.09

87.76
87.94
88.10
87.90
88.0
88.54

49.0
85.2
88.16
88.59

56.77
63.06
68.76
67.54
68.34
68.70

71.83
69.38
74.34
73.43
75.1
76.31

60.0
52.2
75.27
76.28

Table 2: Accuracy on CLEVR. CI, QA, CA stand for Count Inte-
ger, Query Attribute and Compare Attribute respectively. The top
half uses ResNet-152 features and the bottom half uses ResNet-
101 features. Our best model uses the same visual feature as [13].

than twice the area as the ERF of res4b22. As a result,
the feature vector of res5c may require more than twice
the number of parameters to represent same amount of in-
formation in this region as res4b22, but its has only twice.

4.4.3 On the VQA dataset

Since we have found MF-SIG and LBP-SIG are the best on
CLEVR, in this part, we mainly compare the two models
with different T . Notice now the total number of glimpses
is the same as MCB [8] and MLB [17], and both of them use
res5c features and better feature pooling methods. The
optimal choice in these experiments is MF-SIG-T3, which
is 0.92% higher in overall accuracy than the previous best
method [17], and outperforms previous methods on all 3
general categories of questions. We then use external data
from Visual Genome to train MF-SIG-T3 and MF-T3, in

All
64.7
65.08
65.90
65.89
66.00
65.81
65.93
65.90
65.81
65.73
65.4
65.84
67.17
67.19

Model
MCB[8]
MLB[17]
MF-SIG-T1
MF-SIG-T2
MF-SIG-T3
MF-SIG-T4
LBP-SIG-T1
LBP-SIG-T2
LBP-SIG-T3
LBP-SIG-T4
MCB+VG[8]
MLB+VG[17]
MF+VG
MF-SIG+VG
On test-dev2017 of VQA2.0
MF-SIG+VG

Y/N
82.5
84.14
84.22
84.21
84.33
84.22
84.31
84.23
84.05
84.08
82.3
83.87
84.77
84.71

81.29

64.73

No.
37.6
38.21
39.51
39.57
39.34
38.96
39.27
39.70
39.76
38.87
37.2
37.87
39.71
40.58

Other
55.6
54.87
56.22
56.20
56.37
56.16
56.26
56.16
56.12
56.13
57.4
56.76
58.34
58.24

42.99

55.55

Open Ended

Single Model
SMem[38]
SAN[40]
D-NMN[1]
ACK[36]
FDA[11]
QRU[22]
HYBRID[14]
DMN+[37]
MRN[16]
HieCoAtt[24]
RAU[28]
MLB[17]
MF-SIG-T3
Ensemble Model
MCB[8]
MLB[17]
Ours
Ours test2017

All
58.24
58.85
59.4
59.44
59.54
60.76
60.06
60.36
61.84
62.06
63.2
65.07
65.88

66.47
66.89
68.14
65.84

Y/N
80.8
79.11
81.1
81.07
81.34
-
80.34
80.43
82.39
79.95
81.7
84.02
84.42

83.24
84.61
85.41
81.85

No.
37.53
36.41
38.6
37.12
35.67
-
37.82
36.82
38.23
38.22
38.2
37.90
38.94

39.47
39.07
40.99
43.64

MC

All
-
-
-
-
64.18
65.43
-
-
66.33
66.07
67.3
68.89
70.33

70.10
70.29
72.08
-

Other
43.48
46.42
45.5
45.83
46.10
-
47.56
48.33
49.41
51.95
52.8
54.77
55.89

58.00
57.79
59.27
57.07

Table 4: Results of the Open Ended and Multiple Choice tasks
on test. We compare the accuracy of single models (without
augmentation) and ensemble models with published methods.

which MF-SIG surpassed MLB under the same condition
by 1.35%. The accuracy boost of our model is higher than
MCB and MLB, showing that our model has higher capac-
ity. The LBP models, which performs better than MF layers
on CLEVR, turns out to be worse on this dataset, and T = 1
is the optimal choice for LBP. We also ﬁnd the single MF at-
tention model, which should not be as powerful as MF-SIG,
achieved 67.17% accuracy with augmentation. These might
be caused by the bias of the current VQA dataset [3], where
there are questions with ﬁxed answers across all involved
images. We also show the results on test, as shown in Ta-
ble 4. Our model is the best among published methods with-
out external data. With an ensemble of 3 MF-T3 and 4 MF-
SIG-T3 models, we achieve 68.18% accuracy on test,
1.25% higher than best published ensemble model on the

Figure 5: Two instances of different attentions on CLEVR, where
the SIG model gives wrong answers but MF-SIG and LBP-SIG
both give the correct answer. For each instance, from left to right,
the ﬁrst row to the second row, the images are: input image, b(0)
of MF-SIG, b(3) of MF-SIG, ψi(zi) of LBP-SIG, b of LBP-SIG,
attention of SIG. Notations are the same as in Fig. 3. Best viewed
in color.

Open Ended task. By the date of submission, we rank the
second on the leaderboard of Open Ended task and the ﬁrst
on that of the Multiple Choice task. The champion on Open
Ended has an accuracy of 69.94% but the method is not pub-
lished. We have also recorded our model’s performance on
the test-dev2017 and test2017 of VQA2.0 in Table
3 and 4. Accuracy on test2017 is achieved with 8 snap-
shots from 4 models with different learning rates.

4.4.4 Qualitative Results

We demonstrate some attention maps on CLEVR and the
VQA dataset to analyze the behavior of the proposed mod-
els. Fig. 5 shows 2 instances where the SIG model failed but
both MF and LBP succeeded. We ﬁnd the MF-SIG model
has learned interesting patterns where its attention often
covers the background surrounding the target initially, but
converges to the target after iterative inference. This phe-
nomenon almost never happens with the LBP-SIG model,
which usually has better initializations that contained the
target region. The shortcoming of the unstructured SIG
model is also exposed in the 2 instances, where it tends to
get stuck with the key nouns of the question. Fig. 6 demon-
strates 3 instances of the MF-SIG model together with the
effective receptive ﬁeld. The model gives 2 correct answers
for the ﬁrst 2 instances and 1 wrong answer for the last in-

Figure 6: Some instances in the VQA dataset. The ERFs locate at
the target region in row 1 and 3, and at at initial attention in row 2.
Best viewed in color.

stance. In the ﬁrst instance, the ERF at the target should
be enough to encode the relations. The initial attention in-
volves some extra areas due to the key word “luggage”, but
it manages to converge to the most relevant region. In the
second instance, the initial attention is wrong, as we can
see the ERF at the initial attention does not overlap with the
target, but with the help of MF, the ﬁnal attention captures
the relation “in the front” and gives an acceptable answer.
In the third instance, the ERF at the target region is very
weak on the keyword “bulb”, which means the feature vec-
tor does not encode this concept, probably due to the size of
the bulb. The model fails to attend to the right region and
gives a popular answer “2” (3rd most popular answer on the
VQA dataset) according to the type of the question.

5. Conclusion

In this paper, we propose a novel structured visual at-
tention mechanism for VQA, which models attention with
binary latent variables and a grid-structured CRF over these
variables. Inference in the CRF is implemented as recurrent
layers in neural networks. Experimental results demonstrate
that the proposed method is capable of capturing the seman-
tic structure of the image in accordance with the question,
which alleviates the problem of unstructured attention that
captures only the key nouns in the questions. As a result,
our method achieves state-of-the-art accuracy on three chal-
lenging datasets. Although structured visual attention does
not solve all problems in VQA, we argue that it should be
an indispensable module for VQA in the future.

References

[1] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Learning
to compose neural networks for question answering. NAACL,
2016.

[2] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Neural

module networks. In CVPR, 2016.

[3] S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra,
C. Lawrence Zitnick, and D. Parikh. VQA: Visual question
answering. In ICCV, 2015.

[4] L.-C. Chen, A. G. Schwing, A. L. Yuille, and R. Urtasun.

Learning deep structured models. In ICML, 2015.

[5] T. Chen, M. Li, Y. Li, M. Lin, N. Wang, M. Wang, T. Xiao,
B. Xu, C. Zhang, and Z. Zhang. Mxnet: A ﬂexible and efﬁ-
cient machine learning library for heterogeneous distributed
systems. arXiv preprint arXiv:1512.01274, 2015.

[6] A. Das, H. Agrawal, C. L. Zitnick, D. Parikh, and D. Batra.
Human attention in visual question answering: Do humans
and deep networks look at the same regions? EMNLP, 2016.
[7] T.-M.-T. Do and T. Artieres. Neural conditional random

ﬁelds. In AISTATS, 2010.

[8] A. Fukui, D. H. Park, D. Yang, A. Rohrbach, T. Darrell,
and M. Rohrbach. Multimodal compact bilinear pooling for
visual question answering and visual grounding. EMNLP,
2016.

[9] Y. Gal and Z. Ghahramani. A theoretically grounded ap-
plication of dropout in recurrent neural networks. In NIPS,
2016.

[10] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning

for image recognition. In CVPR, 2016.

[11] I. Ilievski, S. Yan, and J. Feng. A focused dynamic atten-
tion model for visual question answering. arXiv preprint
arXiv:1604.01485, 2016.

[12] M. Jaderberg, K. Simonyan, A. Vedaldi, and A. Zisserman.
Deep structured output learning for unconstrained text recog-
nition. ICLR, 2015.

[13] J. Johnson, B. Hariharan, L. van der Maaten, L. Fei-Fei,
C. L. Zitnick, and R. Girshick. Clevr: A diagnostic dataset
for compositional language and elementary visual reasoning.
CVPR, 2017.

[14] K. Kaﬂe and C. Kanan. Answer-type prediction for visual

question answering. In CVPR, 2016.

[15] K. Kaﬂe and C. Kanan.

Visual question answering:
Datasets, algorithms, and future challenges. arXiv preprint
arXiv:1610.01465, 2016.

[16] J.-H. Kim, S.-W. Lee, D. Kwak, M.-O. Heo, J. Kim, J.-W.
Ha, and B.-T. Zhang. Multimodal residual learning for visual
QA. In NIPS, 2016.

[17] J.-H. Kim, K.-W. On, J. Kim, J.-W. Ha, and B.-T. Zhang.
ICLR,

Hadamard product for low-rank bilinear pooling.
2017.

[18] Y. Kim, C. Denton, L. Hoang, and A. M. Rush. Structured

attention networks. ICLR, 2017.

[19] D. Kingma and J. Ba. Adam: A method for stochastic opti-

mization. ICLR, 2015.

[20] R. Kiros, Y. Zhu, R. R. Salakhutdinov, R. Zemel, R. Urtasun,
A. Torralba, and S. Fidler. Skip-thought vectors. In NIPS,
2015.

[21] R. Krishna, Y. Zhu, O. Groth, J. Johnson, K. Hata, J. Kravitz,
S. Chen, Y. Kalantidis, L.-J. Li, D. A. Shamma, et al. Vi-
sual genome: Connecting language and vision using crowd-
sourced dense image annotations. IJCV, 2016.

[22] R. Li and J. Jia. Visual question answering with question

representation update (QRU). In NIPS, 2016.

[23] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll´ar, and C. L. Zitnick. Microsoft COCO: Com-
mon objects in context. In ECCV, 2014.

[24] J. Lu, J. Yang, D. Batra, and D. Parikh. Hierarchical
question-image co-attention for visual question answering.
In NIPS, 2016.

[25] W. Luo, Y. Li, R. Urtasun, and R. Zemel. Understanding
the effective receptive ﬁeld in deep convolutional neural net-
works. In NIPS, 2016.

[26] M. Malinowski and M. Fritz. A multi-world approach to
question answering about real-world scenes based on uncer-
tain input. In NIPS, 2014.

[27] H. Nam, J.-W. Ha, and J. Kim. Dual attention networks
arXiv preprint

for multimodal reasoning and matching.
arXiv:1611.00471, 2016.

[28] H. Noh and B. Han. Training recurrent answering units
arXiv preprint

with joint loss minimization for VQA.
arXiv:1606.03647, 2016.

[29] S. Nowozin, C. H. Lampert, et al. Structured learning and
prediction in computer vision. Foundations and Trends R(cid:13) in
Computer Graphics and Vision, 6(3–4):185–365, 2011.
[30] J. Peng, L. Bo, and J. Xu. Conditional neural ﬁelds. In NIPS,

2009.

[31] K. J. Shih, S. Singh, and D. Hoiem. Where to look: Focus
regions for visual question answering. In CVPR, 2016.
[32] S. E. Shimony. Finding maps for belief networks is np-hard.

Artiﬁcial Intelligence, 68(2):399–410, 1994.

[33] N. Srivastava, G. E. Hinton, A. Krizhevsky, I. Sutskever, and
R. Salakhutdinov. Dropout: a simple way to prevent neural
networks from overﬁtting. JMLR, 2014.

[34] K. Tu, M. Meng, M. W. Lee, T. E. Choe, and S.-C. Zhu. Joint
video and text parsing for understanding events and answer-
ing queries. IEEE MultiMedia, 2014.

[35] Y. Weiss. Comparing the mean ﬁeld method and belief prop-
agation for approximate inference in mrfs. Advanced Mean
Field MethodsTheory and Practice, pages 229–240, 2001.

[36] Q. Wu, P. Wang, C. Shen, A. Dick, and A. van den Hen-
gel. Ask me anything: Free-form visual question answering
based on knowledge from external sources. In CVPR, 2016.
[37] C. Xiong, S. Merity, and R. Socher. Dynamic memory net-
ICML,

works for visual and textual question answering.
1603, 2016.

[38] H. Xu and K. Saenko. Ask, attend and answer: Exploring
question-guided spatial attention for visual question answer-
ing. In ECCV, 2016.

[39] K. Xu, J. Ba, R. Kiros, K. Cho, A. C. Courville, R. Salakhut-
dinov, R. S. Zemel, and Y. Bengio. Show, attend and tell:
Neural image caption generation with visual attention.
In
ICML, 2015.

[40] Z. Yang, X. He, J. Gao, L. Deng, and A. Smola. Stacked
attention networks for image question answering. In CVPR,
2016.

[41] T. Yeh, J. J. Lee, and T. Darrell. Photo-based question an-

swering. In ACMMM, 2008.

[42] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. H. Torr. Conditional ran-
dom ﬁelds as recurrent neural networks. In ICCV, 2015.
[43] C. L. Zitnick and P. Doll´ar. Edge boxes: Locating object

proposals from edges. In ECCV, 2014.

Structured Attentions for Visual Question Answering

Chen Zhu, Yanpeng Zhao, Shuaiyi Huang, Kewei Tu, Yi Ma
ShanghaiTech University
{zhuchen, zhaoyp1, huangsy, tukw, mayi}@shanghaitech.edu.cn

7
1
0
2
 
g
u
A
 
7
 
 
]

V
C
.
s
c
[
 
 
1
v
1
7
0
2
0
.
8
0
7
1
:
v
i
X
r
a

Abstract

Visual attention, which assigns weights to image regions
according to their relevance to a question, is considered as
an indispensable part by most Visual Question Answering
models. Although the questions may involve complex rela-
tions among multiple regions, few attention models can ef-
fectively encode such cross-region relations. In this paper,
we demonstrate the importance of encoding such relations
by showing the limited effective receptive ﬁeld of ResNet
on two datasets, and propose to model the visual attention
as a multivariate distribution over a grid-structured Con-
ditional Random Field on image regions. We demonstrate
how to convert the iterative inference algorithms, Mean
Field and Loopy Belief Propagation, as recurrent layers
of an end-to-end neural network. We empirically evalu-
ated our model on 3 datasets, in which it surpasses the
best baseline model of the newly released CLEVR dataset
[13] by 9.5%, and the best published model on the VQA
dataset [3] by 1.25%. Source code is available at https:
//github.com/zhuchen03/vqa-sva.

1. Introduction

Visual Question Answering (VQA) is a comprehensive
task inspecting intelligent systems’ ability to recognize im-
ages and natural languages together. Advances in this area
not only beneﬁt real-world applications which require the
synergistic reasoning of vision and language, such as query-
ing events in surveillance videos [34] and searching speciﬁc
goods in images [41], but also call for ﬁner-grained under-
standing on the semantic structures of images.

Adoption of the visual attention mechanism like [38, 40,
24, 27] is a major source to boost performance of VQA. Vi-
sual attentions impose regularization on the models to ﬁnd
the most relevant image regions to the question. Still, exper-
iments [6] point out that state-of-the-art models often fail to
identify the related regions like humans do. We argue this
problem comes from the fact that such attention models do
not take into account the spatial relations between regions
when predicting the attention. This is important because the

Figure 1: An example of the proposed model on CLEVR, demon-
strating it is capable of inferring spatial relations despite the lim-
ited effective receptive ﬁeld of the CNN. Question: What is the
color of the sphere on the right of the metal sphere? Our model
overcomes the unstructured attention’s tendency to attend to iso-
lated key words in the questions, attending to the right region and
giving the correct answer purple.

effective receptive ﬁeld (ERF) of deep CNNs only covers a
small fraction of the image [25]. Even with memory mecha-
nism [37, 27, 40, 38], it is difﬁcult to infer the right attention
corresponding to questions that involve the spatial relations
between regions without overlapping ERFs.

In this paper, we propose a novel neural network to
model the attention with a multivariate distribution which
considers the arrangements of image regions. We adopt the
most straightforward graph structure to model image region
arrangements - a grid-structured Conditional Random Field
(CRF) [29]. The framework of the proposed method is illus-
trated in Fig. 2. We show that attention can be formulated
as the marginal distribution of each hidden variable in the
CRF. Then, we implement the iterative approximate infer-
ence algorithms, Mean Field and Loopy Belief Propagation,
as recurrent layers of neural networks, which iteratively re-
ﬁnes the attention. An example of this process is shown in
Fig. 1. We evaluate the proposed model on three repre-

sentative datasets, where our model is competitive with the
rule-based model [2] on the SHAPES dataset, and surpasses
the best baseline model of CLEVR by more than 9.5% and
best published method [17] on the VQA dataset by 1.25%.
We also demonstrate that the ERF on CLEVR and the VQA
dataset is not large enough for previous methods to answer
all questions involving object arrangements correctly.

Our work has the following contributions. First, we pro-
pose to model structured attentions with a CRF over image
regions for Visual Question Answering, to address the prob-
lem of limited effective receptive ﬁelds of CNNs. Second,
we demonstrate how to unfold both Mean Field and Loopy
Belief Propagation algorithms for CRF as recurrent layers
of neural networks, and perform comprehensive evaluation
of the two different networks on three challenging datasets.
Third, we give empirical evaluations of ERFs on CLEVR
and the MSCOCO dataset.

2. Related Work

There have been many different directions for improv-
ing VQA performance, including predicting answer types
[14], utilizing task-speciﬁc submodules [1, 2], and better
multimodal feature pooling methods [8, 17]. Our focus is
on structure-aware spatial attention applied on the visual
feature. There are two major forms of spatial attention for
VQA. One [31, 22, 11] is based on region proposals gener-
ated by Edge Box [43], and the other [38, 40, 24, 27, 8, 17]
predicts attention on the individual feature vectors of convo-
lutional feature maps. The most representative model SAN
[40] adopted multiple attention layers to support multi-step
reasoning. There are also methods [24, 27] that adopted
both image attention and question attention to reﬁne the
image and question representation simultaneously.
[38]
proved its ability to recognize absolute and relative posi-
tions with two simple experiments, but the model itself does
not consider the arrangement of regions and the success
may be attributed to the power of CNNs.

Some of the methods considered the structures of im-
ages. [26] adopted the Bayesian framework based on the
logic forms of segmentation results. The method was sur-
passed by some simple baseline models due to its demand
for better semantic segmentation [15]. The DMN [37]
adopted a bidirectional GRU that traverses the convolu-
tional feature map in a snake-like fashion to encode the de-
pendency of regions, which might not be the optimal choice
for the 2D structure of images. [22] concatenated the 8D
bounding box representation with the 4096D visual fea-
ture, in which the spatial information could be easily over-
weighed by the visual feature.

There have been a number of approaches combining neu-
ral networks and CRF to predict structured outputs in both
computer vision and natural language processing. [30] uti-
lized neural networks with sigmoid activation to predict the

unary potential for sequential labeling. [7] also used neu-
ral networks to predict the pairwise potential of labels. [4]
learned ﬁxed pairwise potentials for word recognition and
image classiﬁcation.
[12] utilized CNNs to predict both
the unary potentials and higher-order potentials for uncon-
strained word recognition.
[42] proposed to unfold the
Mean Field algorithm as recurrent layers for semantic seg-
mentation. It modeled the pairwise potential with Gaussian
kernels, which encourages similar features to take the same
label. Besides the supervised structure in the output layers,
[18] enforced the intermediate layers of neural networks to
learn structured attentions for natural language tasks.

To the best of our knowledge, structured attention has
not been explored for the complex task of VQA. We give
the ﬁrst empirical evaluations on unfolding both Mean Field
and Loopy Belief Propagation as intermediate recurrent lay-
ers on the task of VQA, which can be seen as a further ex-
ploration of [18] in modeling 2D structures of visual data.

3. Attention Models and Methods

The general architecture of the proposed model is shown
in Fig. 2. Here we deﬁne some notations used across the
paper. We take the question feature q ∈ RnQ from the last
time step of a GRU such as [20], and the image feature map
X = [x1, ..., xM ] ∈ RnI ×M from one of the convolution
layers of a CNN such as [10]. Here nQ, nI are the dimen-
sions of question and image feature vectors respectively,
and M is the total number of image feature vectors which
divides the image into M regions. We use softmax(·) to de-
note the softmax activation function and σ(·) to denote the
sigmoid activation function. The attention mechanism in
VQA aims to produce a context c from X which represents
the visual feature related to the question.

3.1. Unstructured Categorical Attention

In previous methods for VQA, visual attention is usually
modeled as a single or multi-step soft-selection from X. As
shown in [39, 18], the soft-selection approach represents the
selected region index by a categorical latent variable z ∈
{1, ..., M } and deﬁnes c as an expectation of the selection:

c = E

1{z=i} · xi

=

p(z = i|X, q)xi,

(1)

(cid:34)

(cid:88)

i

(cid:35)

(cid:88)

i

where 1{z=i} is an indicator function, and the distribution
of z is parameterized by

p(z = i|X, q) = softmax(Ug(xi, q)),

(2)

where U ∈ R1×nI and g(·) is some multimodal feature
pooling function such as [8, 17]. Noticing this model ig-
nores the spatial arrangement of the feature vectors in X in

Figure 2: The whole picture of the proposed model. The inputs to the recurrent inference layers are the unary potential ψi(zi) and pairwise
potential ψij(zi, zj), computed with Eq. 8. ψi(zi) can also be used as an additional glimpse, which usually detects the key nouns. In
the inference layers, xi represents b(i) for MF and m(i) for LBP. The recurrent inference layers generates a structured glimpse with MF
or LBP. The 2 glimpses are used to weight-sum the visual feature vectors. The classiﬁer use both of the attended visual features and the
question feature to predict the answer. The demonstration is a real case.

each step, and the resulting hidden states in multi-step mod-
els [39, 38] are still unstructured, we have dropped the hid-
den states in the condition presented in [38] for notational
convenience.

Since categorical distribution only requires the probabil-
ities to be positive and sum to 1, the following normalized
sigmoid attention is still a valid categorical attention:

p(z = i|X, q) =

σ(Ug(xi, q))
j σ(Ug(xj, q))

.

(cid:80)

(3)

We can use such attention as a glimpse1 of our model, which
will be introduced in Section 3.4.

3.2. Structured Multivariate Attention

To consider the arrangement of X, we adopt a structured
multivariate attention model similar to [18], in which we
consider the distribution z ∼ p(z|X, q) as a vector of binary
latent variables z = [z1, ..., zM ]T with zi = 1 if xi is related
to the question and zi = 0 otherwise. Multiple regions can
now be selected at the same time. We deﬁne the context as
the expectation of the sum over all related regions, which
can be derived as a sum of xi weighted by the marginal
probability p(zi = 1|X, q):

Ez∼p(z|X,q)[Xz] =

p(zi = 1|X, q)xi.

(4)

(cid:88)

i

Let S = (cid:80)
i p(zi = 1|X, q). Since 0 ≤ S ≤ M and M is
relatively large, to reduce covariate shift, we normalize the
expectation to get the context c:

c =

p(zi = 1|X, q)xi,

(5)

1
S

(cid:88)

i

We model the distribution p(z|X, q) in the most straight-
forward form, a grid-structured Conditional Random Field,

which represents the joint probability p(z|X, q) with a grid-
structured factor graph that considers the pairwise joint dis-
tribution of a region’s 4-neighbourhood, as shown in Fig. 2.
Let N = {(i, j)|i < j, j ∈ Ni}, where Ni is the set of i’s
neighbors on the graph. The grid-structured CRF assumes

p(z|X, q) =

ψij(zi, zj)

ψi(zi),

(6)

1
Z

(cid:89)

(i,j)∈N

(cid:89)

i

where the unary potential ψi(zi) ≥ 0 measures the likeli-
hood of region i taking the value zi ∈ {0, 1}, and the pair-
wise potential ψij(zi, zj) ≥ 0 measures the likelihood of
regions (i, j) taking values zi, zj respectively.

3.3. Recurrent Inference Layers

The inference problem in such a gird-structured factor
graph, which aims to calculate the marginal probability
p(zi|X, q; θ), is known to be NP-hard [32]. Still, there
are approximate inference algorithms to solve the problem,
such as Mean Field (MF) and Loopy Belief Propagation
(LBP). These algorithms take potential functions ψi(zi)
and ψij(zi, zj) as inputs and update p(zi|X, q; θ) iteratively
through message passing. We train neural networks to pre-
dict optimal ψi(zi) and ψij(zi, zj) and then run the algo-
rithms for a ﬁxed number of T steps. The iterative algo-
rithms are implemented as recurrent inference layers in the
neural network.

3.3.1 Potential Functions

In VQA, the potential functions should depend on both the
image and the question. We use low-rank bilinear pooling
[17], a parsimonious bilinear model, to capturing the inter-
action between 2 feature vectors x, y:

1Glimpses refer to multiple attentions, same as in [8, 17].

g(x, y; Px, Py) = tanh(Pxx) (cid:12) tanh(Pyy),

(7)

Algorithm 1 MF Recurrent Layer in VQA
Input: ψi(zi), ln ψij(zi, zj)
initialize b(0)
for t=1:T do

(zi) = ψi(zi)

i

for i = 1 : M , zi in {0, 1} do

s←0
for j in Ni, zj in {0, 1} do

j

s←s+b(t−1)
b(t)
i (zi) ← ψi(zi) exp(s)
normalize(b(t)
)

i

(zj) ln ψij(zi, zj)

return b(T )

(zi)

i

where Px, Py are learnt projection matrices projecting x, y
to the same dimension, and (cid:12) represents Hadamard prod-
uct. Based on this, we model ψi(zi) and ψij(zi, zj) as fol-
lowing:

ψi(zi = 1) = σ (Ug (xi, q; Ux, Uq)) ,

(8)

(9)

(cid:1)(cid:1) ,

ψi(zi = 0) = 1 − ψi(zi = 1),
ψij(zi, zj) = h (cid:0)vzizj g (cid:0)yij, q; Vy, Vq

(10)
where Ux ∈ Rnc×nI , Uq ∈ Rnc×nQ , U ∈ R1×nc, Vy ∈
Rnc×2nI , Vq ∈ Rnc×nQ are learnt projection matrices,
vzizj is a row vector of V ∈ R4×nc indexed by zi and zj,
yij = [xT
j ]T , nc is the common projection dimension,
h(·) is a certain activation function which will differ in the
2 inference algorithms.

i , xT

3.3.2 Mean Field Layers

The Mean Field algorithm approximates the distribution
p(z|X, q) in Eq. 6 with a fully factorized distribution q(z):

q(z) =

bi(zi),

(cid:89)

i

where bi(zi) are variational parameters corresponding to the
marginal probabilities p(zi|X, q). The variational parame-
ters are optimized by iteratively minimizing the mean-ﬁeld
free energy

FM F (bi) = −

bi(zi)bj(zj) ln ψij(zi, zj)

(cid:88)

(cid:88)

zi,zj

(i,j)∈N
(cid:88)
(cid:88)

i

zi

+

bi(zi)[ln bi(zi) − ln ψi(zi)]

subject to the constraint (cid:80)
bi(zi) = 1, which is shown
zi
to be equivalent to minimizing the KL divergence be-
tween p(z|X, q) and q(z) [35]. Speciﬁcally, MF initializes
b(0)
i

(zi) = ψi(zi) and updates b(t)

i (zi) as:

b(t)
i (zi) = αψi(zi) · exp



b(t−1)
j

(zj) ln ψij(zi, zj)

 ,



(cid:88)

(cid:88)

j∈Ni

zj

(11)



(12)

Algorithm 2 LBP Recurrent Layer in VQA
Input: ψi(zi), ψij(zi, zj)

initialize m(0)
for t=1:T do

ij (zj) = 0.5, m(t)

ij (zj) = 0 for t > 0

for j = 1 : M , i in Nj do

for zi in {0, 1} do

s(zi) ←1
for k in Ni \ {j} do

s(zi) ← s(zi) · m(t−1)
(zi)
for (zi, zj) in {0, 1} × {0, 1} do

ki

m(t)

ij (zj) ← m(t)

ij (zj) + ψij(zi, zj)ψi(zi)s(zi)

normalize(m(t)
ij )

for i = 1 : M do

bi(zi) ← ψi(zi)
for k in Ni, zi in {0, 1} do
bi(zi) ← bi(zi) · m(T )

ki (zi)

normalize(bi)

return bi(zi)

where α is the normalizing constant. Since Eq. 12 only
involves ln ψij(zi, zj), we adopt a log model for pairwise
potential,

ln ψij(zi, zj) = tanh(vzi,zj g(yij, q; Vy, Vq)).

(13)

MF can be unfolded as a recurrent layer of neural networks
without parameters, where in each step t the inputs are
ψi(zi), ψij(zi, zj) and b(t−1)
(zi), as demonstrated by Al-
gorithm 1.

i

3.3.3 Loopy Belief Propagation Layers

Loopy Belief Propagation can be applied similarly by ini-
tializing all messages to a ﬁxed value and updating the mes-
sages iteratively in a ﬁxed or random order [29]. In our grid-
structured graph, since each factor is connected to only 2
variables, the variable-to-factor and factor-to-variable mes-
sages can be merged as a single message mij, representing
the message from zi to zj. We initialize m(0)
ij (zj) = 0.5,
and iteratively update the messages based on the formula

m(t)

ij (zj) = α

ψij(zi, zj)ψi(zi)·

(cid:89)

m(t−1)
ki

(zi), (14)

(cid:88)

zi

k∈Ni\{j}

where α is the normalizing constant as above. After a ﬁxed
number of steps T , the variable zi gathers all the messages
from its neighbourhood to get the marginal probability:

bi(zi) = βψi(zi)

(15)

(cid:89)

k∈Ni

m(T )

ki (zi),

where β is the normalizing constant.

Similar to MF, LBP can also be unfolded into param-
eterless recurrent layer, where at each time step t the in-
put is ψi(zi), ψij(zi, zj) and m(t−1)
(zj), and after T steps

ij

m(T )(zi) is used to compute marginal probability bi(zi), as
shown in Algorithm 2.

3.4. The overall structure

As shown in Fig. 2, the overall structure of the pro-
posed model is an end-to-end classiﬁcation neural network.
Firstly, ψi(zi) and ψij(zi, zj) are computed using the ex-
tracted features X and q. Then, the recurrent inference lay-
ers run for T steps to get the structured marginal probability
p(zi = 1|X, q) = b(T )
(zi = 1), which is then used to com-
pute the structured context ˆc with Eq. 5. We also compute
a unstructured context ˜c with Eq. 1 by replacing Ug(xi, q)
in Eq. 3 with ψi(zi = 1). In the classiﬁer, the contexts are
both pooled with the question to get

i

ˆs = g(ˆc, q; ˆWc, ˆWq),
˜s = g(˜c, q; ˜Wc, ˜Wq),
(17)
where ˆWc, ˜Wc ∈ Rnc×nI , ˆWq, ˜Wq ∈ Rnc×nQ. The an-
swer is predicted with

(16)

a = arg max
k∈ΩK

softmax(wk[ˆsT , ˜sT ]T ),

(18)

where wk is the k-th row of W ∈ RK×2nc, K is the num-
ber of answers, ΩK is the answer space with up to K an-
swers.

4. Experiments

4.1. Datasets

The SHAPES dataset [2] is a synthetic dataset consist-
ing of images containing 3 basic shapes in 3 different colors
with a resolution of 30×30, and queries about the arrange-
ments of the basic shapes, as shown in Fig. 3. The answer
is “yes” when the image satisﬁes the query, and “no” other-
wise. There are 3 different lengths of queries. The original
dataset [1] has 14592 and 1024 image/question pairs for the
training and test sets. All the queries in the test set do not
appear in the training set.

The CLEVR dataset [13] is a much more complex but
unbiased synthetic dataset aiming at testing visual abilities
such as counting, comparing and logical reasoning. It con-
sists of 100,000 images of simple 3D objects with random
shapes, sizes, materials, colors and positions with a reso-
lution of 320×480, and nearly a million natural language
questions, 853,554 of which are unique. The questions can
be categorized into 5 general types: exist, count, compare
integer, query attribute, and compare attribute. There are
699,989 training questions, 149,991 validation questions
and 149,988 test questions. The vocabulary sizes for the
questions and answers are 82 and 28 respectively.

The VQA real-image dataset [3] is a comprehensive
dataset which requires knowledge beyond the dataset to an-
swer all the questions correctly. It has about 204,721 images

from MSCOCO [23] each with 3 natural language ques-
tions, and each question has 10 answers collected from on-
line workers. It consists of 3 splits: train, val and test,
each of which has 248,349, 121,512 and 244,302 questions
respectively. test-dev is a subset of test, which has
60,864 questions. We keep a collection of 2,000 most fre-
quent answers from the union of train and val, and ig-
nore questions with no answers from this collection, which
leaves us 334,554 samples for training. With the same pre-
processing procedure as [8, 17], we also get 837,298 train-
ing samples from Visual Genome [21] for augmentation.

4.2. Model Conﬁguration and Training

For extracting image features, we use a 2-layer LeNet
trained with the whole network on SHAPES as in [1],
and ImageNet-pretrained ResNets [10] on CLEVR and the
VQA dataset. For sentence embedding, we use single-layer
GRU. On the SHAPES dataset, we set nc = 128, nQ =
128, nI = 50, M = 9. On CLEVR, following [13], we re-
size the input images to 224 × 224, and use feature maps at
the res4b22 layer of ResNet-101 (nI = 1024, M = 196)
and the res5c layer of ResNet-152 (nI = 2048, M = 49)
in different experiments. We also set nQ = 2048, compa-
rable to the 2-layer LSTM with 1024 units per layer used in
[13]. On the VQA dataset, we ﬁx nc = 1200. Images are
resized to 448 × 448 and we use the feature at the res5c
layer of ResNet-152 (nI = 2048, M = 196 ), the same as
[24, 8, 17]. We set nQ = 2400 since we use the pre-trained
skip-thought vector [20] provided by [17] as initialization.
For training, we implement our network with MXNet
[5]. In all 3 tasks, we use the Adam optimizer [19] with
the default setting except for the learning rate, which is
picked using grid search. We adopt Bayesian dropout [9]
for GRU’s as in [17], and apply dropout [33] before every
other fully connected layer. On SHAPES and CLEVR, we
ﬁnd setting both dropout probability to 0.2 to be optimal,
while on the VQA dataset, setting a small Bayesian dropout
0.25 for the GRU and a large dropout of 0.5 for the other
parts achieved the optimal results. In addition, we use an-
swer sampling by default on the VQA dataset as in [8, 17].

4.3. Visualization of ERF

To visualize the ERF, we need to compute the inﬂuence
of a pixel Iij ∈ R3 on the entry yn
rc, the feature at (r, c)
of the n-th channel in a certain conv layer, represented by
rc/∂Iij(cid:107). As in [25], we assume a loss function ln
(cid:107)∂yn
rc
which is related only to channel yn
rc = 1
and ∂ln
rc/∂Iij =
∂ln
rc/∂Iij can be computed efﬁciently by
DL frameworks. Finally, we draw the heat map of the total
effect of a subset ΩC of channels:

ij = 0 for i (cid:54)= r or c (cid:54)= j, so that ∂yn

rc/∂yn
rc/∂Iij, since ∂ln

rc, i.e., ∂ln

rc/∂yn

Eij =

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:88)

n∈ΩC

(cid:19)2

(cid:18) ∂ln
rc
∂Iij

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

.

(19)

amount of data as [1]. This may because [1] uses a parser
to understand the queries with guaranteed correctness on
this dataset, while we have to train the GRU to understand
the queries from scratch. The parser-based method may
not perform well in more general tasks such as the VQA
dataset, since they found using fewer modules on the VQA
dataset turned out to be better, but our RNN-based approach
should generalize better with enough training data. So we
generate more data with the same answer distributions for
each query as [1] to train and test our model, and re-trained
their model using the released code. We name the origi-
nal dataset small, and the newly generated datasets with
2 and 3 times as much data in both training and test sets as
medium and large respectively. We ﬁnd with more train-
ing data, our model becomes competitive with [1] and the
MF-G2 model surpasses it on both medium and large, as
shown in Table 1. Our models are extremely good at han-
dling length-4 queries, which looks for object arrangements
in 4-neighborhood, as demonstrated in Fig. 3. The high ac-
curacy also implies the model is capable of set theory rea-
soning, since it achieved high test accuracy with length-3
queries which contain self-conﬂict queries such as is red
green, which aims to ﬁnd an object that is both red and
green. For complex queries, such as is red below below
green, which aims to ﬁnd a red object below another object
that is below a green object, it is not as competitive as [1],
probably because the GRU in our model has not generalized
to higher order logic.

4.4.2 On CLEVR

In this part, we study the role of different visual features
and different kinds of attentions on the performance, and
test our best models on the test set, as shown in Table 2.
Our best model surpasses the best baseline model in [13] by
more than 9.5% on the test set. Both MF and LBP outper-
form SM and SIG, demonstrating the effectiveness of our
method. The maximum margin of MF/LBP vs. SIG on
overall accuracy is 2.62% and 1.33% with the ResNet-152
and ResNet-101 features respectively. The most signiﬁcant
improvement of MF/LBP over other models is on Com-
pare Attribute, which involves comparing speciﬁc attributes
of objects speciﬁed by spatial relations with other objects.
This also proves that our model alleviates the problem of
previous methods of ignoring arrangements of regions. Fur-
ther, we show the receptive ﬁelds of the 2 selected layers on
the test set in Fig. 4. In each image, we choose the feature
vector closest to the center, where there is a higher chance
for objects to appear. Still, both of them only occupy a small
portion of the image, indicating the importance of consider-
ing the structure of regions. Overall, the performance with
res4b22 features is better than that with res5c features.
From the ERF point of view, the ERF of res5c has more

Figure 3: Visualization of MF-G2 and LBP-G2 on the test set of
large. b(0) or ψi represents the initial attention, b(3) or b repre-
sents the reﬁned attention after MF or LBP. The query looks for a
green object under a circle.

small

large

medium NMN

Query Length
% of test set
NMN[2]
SIG-G2
MF-G2
LBP-G2

SIG-G2
MF-G2
LBP-G2
NMN
SIG-G2
MF-G2
LBP-G2

3
12.5
91.4
57.0
53.1
63.3
99.2
68.8
98.0
87.1
99.7
93.2
99.7
95.1

4
62.5
95.6
70.5
71.4
72.2
92.1
79.6
99.6
99.5
94.2
95.6
99.9
100

5
25
92.6
66.8
66.0
62.5
85.2
73.8
71.5
71.9
91.2
72.5
79.2
78.9

All
-
94.3
67.9
67.8
68.7
91.3
76.8
92.4
91.0
94.1
89.5
94.7
94.1

Table 1: Accuracy on SHAPES.

4.4. Results and Analysis

We perform experiments on the 3 datasets, in which we
ﬁx the general structure except for the visual attention mod-
els, to quantify the role of structured attention in our model
and the best conﬁguration for it. We will use the following
abbreviations to distinguish the models we implemented:
• SM/SIG: 1-glimpse softmax or sigmoid attention.

• MF/LBP: 1-glimpse multivariate attention with a MF

or LBP recurrent layer and a default T = 3.

• MODEL-G2: 2-glimpses with a default T = 3, where

MODEL=SIG,MF or LBP is the attention model.

• MF-SIG/LBP-SIG: 2-glimpse model by concatenating
a MF or LBP attention with a SIG attention, as men-
tioned in Section 3.4.

• MODEL-Tn: MODEL with T = n inference steps.

4.4.1 On SHAPES

In this part, we will look into the inﬂuence of the volume
of the data on our model’s generalization, and compare the
performance of SIG-G2, MF-G2 and LBP-G2 models. We
ﬁnd it is difﬁcult for all 3 models to generalize with the same

CLEVR validation

Table 3: Results of the Open Ended task on test-dev.

res5c on CLEVR res5c on CLEVR res5c on MSCOCO

Figure 4: The average ERF [25] of 32 channels chosen at regular
intervals, on 15000 images from the CLEVR test set and 52500
images from the MSCOCO test set with resolution of 224 × 224
and 448 × 448 respectively. The ERF images are smoothed with
σ = 4 Gaussian kernels.

All

Exist Count

CI

QA

CA

res5c
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
MCB[13]
SAN[13]
MF-SIG
LBP-SIG

68.80
70.52
73.14
72.30
73.19
73.33

75.63
75.32
76.65
76.21
77.4
77.97

51.4
68.5
77.57
78.04

73.20
73.90
76.46
76.32
76.53
77.50

77.69
76.54
77.90
78.97
79.8
79.7

63.4
71.1
80.05
79.63

CLEVR validation

53.16
53.89
56.89
54.92
56.22
56.39

57.79
58.93
58.87
57.52
61.0
61.39

76.52
76.52
77.43
77.50
78.56
77.97

78.63
78.12
80.48
80.14
79.3
80.17

CLEVR test
63.3
42.1
73.5
52.2
80.08
60.69
80.69
61.27

81.58
82.46
83.72
83.35
84.23
84.09

87.76
87.94
88.10
87.90
88.0
88.54

49.0
85.2
88.16
88.59

56.77
63.06
68.76
67.54
68.34
68.70

71.83
69.38
74.34
73.43
75.1
76.31

60.0
52.2
75.27
76.28

Table 2: Accuracy on CLEVR. CI, QA, CA stand for Count Inte-
ger, Query Attribute and Compare Attribute respectively. The top
half uses ResNet-152 features and the bottom half uses ResNet-
101 features. Our best model uses the same visual feature as [13].

than twice the area as the ERF of res4b22. As a result,
the feature vector of res5c may require more than twice
the number of parameters to represent same amount of in-
formation in this region as res4b22, but its has only twice.

4.4.3 On the VQA dataset

Since we have found MF-SIG and LBP-SIG are the best on
CLEVR, in this part, we mainly compare the two models
with different T . Notice now the total number of glimpses
is the same as MCB [8] and MLB [17], and both of them use
res5c features and better feature pooling methods. The
optimal choice in these experiments is MF-SIG-T3, which
is 0.92% higher in overall accuracy than the previous best
method [17], and outperforms previous methods on all 3
general categories of questions. We then use external data
from Visual Genome to train MF-SIG-T3 and MF-T3, in

All
64.7
65.08
65.90
65.89
66.00
65.81
65.93
65.90
65.81
65.73
65.4
65.84
67.17
67.19

Model
MCB[8]
MLB[17]
MF-SIG-T1
MF-SIG-T2
MF-SIG-T3
MF-SIG-T4
LBP-SIG-T1
LBP-SIG-T2
LBP-SIG-T3
LBP-SIG-T4
MCB+VG[8]
MLB+VG[17]
MF+VG
MF-SIG+VG
On test-dev2017 of VQA2.0
MF-SIG+VG

Y/N
82.5
84.14
84.22
84.21
84.33
84.22
84.31
84.23
84.05
84.08
82.3
83.87
84.77
84.71

81.29

64.73

No.
37.6
38.21
39.51
39.57
39.34
38.96
39.27
39.70
39.76
38.87
37.2
37.87
39.71
40.58

Other
55.6
54.87
56.22
56.20
56.37
56.16
56.26
56.16
56.12
56.13
57.4
56.76
58.34
58.24

42.99

55.55

Open Ended

Single Model
SMem[38]
SAN[40]
D-NMN[1]
ACK[36]
FDA[11]
QRU[22]
HYBRID[14]
DMN+[37]
MRN[16]
HieCoAtt[24]
RAU[28]
MLB[17]
MF-SIG-T3
Ensemble Model
MCB[8]
MLB[17]
Ours
Ours test2017

All
58.24
58.85
59.4
59.44
59.54
60.76
60.06
60.36
61.84
62.06
63.2
65.07
65.88

66.47
66.89
68.14
65.84

Y/N
80.8
79.11
81.1
81.07
81.34
-
80.34
80.43
82.39
79.95
81.7
84.02
84.42

83.24
84.61
85.41
81.85

No.
37.53
36.41
38.6
37.12
35.67
-
37.82
36.82
38.23
38.22
38.2
37.90
38.94

39.47
39.07
40.99
43.64

MC

All
-
-
-
-
64.18
65.43
-
-
66.33
66.07
67.3
68.89
70.33

70.10
70.29
72.08
-

Other
43.48
46.42
45.5
45.83
46.10
-
47.56
48.33
49.41
51.95
52.8
54.77
55.89

58.00
57.79
59.27
57.07

Table 4: Results of the Open Ended and Multiple Choice tasks
on test. We compare the accuracy of single models (without
augmentation) and ensemble models with published methods.

which MF-SIG surpassed MLB under the same condition
by 1.35%. The accuracy boost of our model is higher than
MCB and MLB, showing that our model has higher capac-
ity. The LBP models, which performs better than MF layers
on CLEVR, turns out to be worse on this dataset, and T = 1
is the optimal choice for LBP. We also ﬁnd the single MF at-
tention model, which should not be as powerful as MF-SIG,
achieved 67.17% accuracy with augmentation. These might
be caused by the bias of the current VQA dataset [3], where
there are questions with ﬁxed answers across all involved
images. We also show the results on test, as shown in Ta-
ble 4. Our model is the best among published methods with-
out external data. With an ensemble of 3 MF-T3 and 4 MF-
SIG-T3 models, we achieve 68.18% accuracy on test,
1.25% higher than best published ensemble model on the

Figure 5: Two instances of different attentions on CLEVR, where
the SIG model gives wrong answers but MF-SIG and LBP-SIG
both give the correct answer. For each instance, from left to right,
the ﬁrst row to the second row, the images are: input image, b(0)
of MF-SIG, b(3) of MF-SIG, ψi(zi) of LBP-SIG, b of LBP-SIG,
attention of SIG. Notations are the same as in Fig. 3. Best viewed
in color.

Open Ended task. By the date of submission, we rank the
second on the leaderboard of Open Ended task and the ﬁrst
on that of the Multiple Choice task. The champion on Open
Ended has an accuracy of 69.94% but the method is not pub-
lished. We have also recorded our model’s performance on
the test-dev2017 and test2017 of VQA2.0 in Table
3 and 4. Accuracy on test2017 is achieved with 8 snap-
shots from 4 models with different learning rates.

4.4.4 Qualitative Results

We demonstrate some attention maps on CLEVR and the
VQA dataset to analyze the behavior of the proposed mod-
els. Fig. 5 shows 2 instances where the SIG model failed but
both MF and LBP succeeded. We ﬁnd the MF-SIG model
has learned interesting patterns where its attention often
covers the background surrounding the target initially, but
converges to the target after iterative inference. This phe-
nomenon almost never happens with the LBP-SIG model,
which usually has better initializations that contained the
target region. The shortcoming of the unstructured SIG
model is also exposed in the 2 instances, where it tends to
get stuck with the key nouns of the question. Fig. 6 demon-
strates 3 instances of the MF-SIG model together with the
effective receptive ﬁeld. The model gives 2 correct answers
for the ﬁrst 2 instances and 1 wrong answer for the last in-

Figure 6: Some instances in the VQA dataset. The ERFs locate at
the target region in row 1 and 3, and at at initial attention in row 2.
Best viewed in color.

stance. In the ﬁrst instance, the ERF at the target should
be enough to encode the relations. The initial attention in-
volves some extra areas due to the key word “luggage”, but
it manages to converge to the most relevant region. In the
second instance, the initial attention is wrong, as we can
see the ERF at the initial attention does not overlap with the
target, but with the help of MF, the ﬁnal attention captures
the relation “in the front” and gives an acceptable answer.
In the third instance, the ERF at the target region is very
weak on the keyword “bulb”, which means the feature vec-
tor does not encode this concept, probably due to the size of
the bulb. The model fails to attend to the right region and
gives a popular answer “2” (3rd most popular answer on the
VQA dataset) according to the type of the question.

5. Conclusion

In this paper, we propose a novel structured visual at-
tention mechanism for VQA, which models attention with
binary latent variables and a grid-structured CRF over these
variables. Inference in the CRF is implemented as recurrent
layers in neural networks. Experimental results demonstrate
that the proposed method is capable of capturing the seman-
tic structure of the image in accordance with the question,
which alleviates the problem of unstructured attention that
captures only the key nouns in the questions. As a result,
our method achieves state-of-the-art accuracy on three chal-
lenging datasets. Although structured visual attention does
not solve all problems in VQA, we argue that it should be
an indispensable module for VQA in the future.

References

[1] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Learning
to compose neural networks for question answering. NAACL,
2016.

[2] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Neural

module networks. In CVPR, 2016.

[3] S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra,
C. Lawrence Zitnick, and D. Parikh. VQA: Visual question
answering. In ICCV, 2015.

[4] L.-C. Chen, A. G. Schwing, A. L. Yuille, and R. Urtasun.

Learning deep structured models. In ICML, 2015.

[5] T. Chen, M. Li, Y. Li, M. Lin, N. Wang, M. Wang, T. Xiao,
B. Xu, C. Zhang, and Z. Zhang. Mxnet: A ﬂexible and efﬁ-
cient machine learning library for heterogeneous distributed
systems. arXiv preprint arXiv:1512.01274, 2015.

[6] A. Das, H. Agrawal, C. L. Zitnick, D. Parikh, and D. Batra.
Human attention in visual question answering: Do humans
and deep networks look at the same regions? EMNLP, 2016.
[7] T.-M.-T. Do and T. Artieres. Neural conditional random

ﬁelds. In AISTATS, 2010.

[8] A. Fukui, D. H. Park, D. Yang, A. Rohrbach, T. Darrell,
and M. Rohrbach. Multimodal compact bilinear pooling for
visual question answering and visual grounding. EMNLP,
2016.

[9] Y. Gal and Z. Ghahramani. A theoretically grounded ap-
plication of dropout in recurrent neural networks. In NIPS,
2016.

[10] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning

for image recognition. In CVPR, 2016.

[11] I. Ilievski, S. Yan, and J. Feng. A focused dynamic atten-
tion model for visual question answering. arXiv preprint
arXiv:1604.01485, 2016.

[12] M. Jaderberg, K. Simonyan, A. Vedaldi, and A. Zisserman.
Deep structured output learning for unconstrained text recog-
nition. ICLR, 2015.

[13] J. Johnson, B. Hariharan, L. van der Maaten, L. Fei-Fei,
C. L. Zitnick, and R. Girshick. Clevr: A diagnostic dataset
for compositional language and elementary visual reasoning.
CVPR, 2017.

[14] K. Kaﬂe and C. Kanan. Answer-type prediction for visual

question answering. In CVPR, 2016.

[15] K. Kaﬂe and C. Kanan.

Visual question answering:
Datasets, algorithms, and future challenges. arXiv preprint
arXiv:1610.01465, 2016.

[16] J.-H. Kim, S.-W. Lee, D. Kwak, M.-O. Heo, J. Kim, J.-W.
Ha, and B.-T. Zhang. Multimodal residual learning for visual
QA. In NIPS, 2016.

[17] J.-H. Kim, K.-W. On, J. Kim, J.-W. Ha, and B.-T. Zhang.
ICLR,

Hadamard product for low-rank bilinear pooling.
2017.

[18] Y. Kim, C. Denton, L. Hoang, and A. M. Rush. Structured

attention networks. ICLR, 2017.

[19] D. Kingma and J. Ba. Adam: A method for stochastic opti-

mization. ICLR, 2015.

[20] R. Kiros, Y. Zhu, R. R. Salakhutdinov, R. Zemel, R. Urtasun,
A. Torralba, and S. Fidler. Skip-thought vectors. In NIPS,
2015.

[21] R. Krishna, Y. Zhu, O. Groth, J. Johnson, K. Hata, J. Kravitz,
S. Chen, Y. Kalantidis, L.-J. Li, D. A. Shamma, et al. Vi-
sual genome: Connecting language and vision using crowd-
sourced dense image annotations. IJCV, 2016.

[22] R. Li and J. Jia. Visual question answering with question

representation update (QRU). In NIPS, 2016.

[23] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll´ar, and C. L. Zitnick. Microsoft COCO: Com-
mon objects in context. In ECCV, 2014.

[24] J. Lu, J. Yang, D. Batra, and D. Parikh. Hierarchical
question-image co-attention for visual question answering.
In NIPS, 2016.

[25] W. Luo, Y. Li, R. Urtasun, and R. Zemel. Understanding
the effective receptive ﬁeld in deep convolutional neural net-
works. In NIPS, 2016.

[26] M. Malinowski and M. Fritz. A multi-world approach to
question answering about real-world scenes based on uncer-
tain input. In NIPS, 2014.

[27] H. Nam, J.-W. Ha, and J. Kim. Dual attention networks
arXiv preprint

for multimodal reasoning and matching.
arXiv:1611.00471, 2016.

[28] H. Noh and B. Han. Training recurrent answering units
arXiv preprint

with joint loss minimization for VQA.
arXiv:1606.03647, 2016.

[29] S. Nowozin, C. H. Lampert, et al. Structured learning and
prediction in computer vision. Foundations and Trends R(cid:13) in
Computer Graphics and Vision, 6(3–4):185–365, 2011.
[30] J. Peng, L. Bo, and J. Xu. Conditional neural ﬁelds. In NIPS,

2009.

[31] K. J. Shih, S. Singh, and D. Hoiem. Where to look: Focus
regions for visual question answering. In CVPR, 2016.
[32] S. E. Shimony. Finding maps for belief networks is np-hard.

Artiﬁcial Intelligence, 68(2):399–410, 1994.

[33] N. Srivastava, G. E. Hinton, A. Krizhevsky, I. Sutskever, and
R. Salakhutdinov. Dropout: a simple way to prevent neural
networks from overﬁtting. JMLR, 2014.

[34] K. Tu, M. Meng, M. W. Lee, T. E. Choe, and S.-C. Zhu. Joint
video and text parsing for understanding events and answer-
ing queries. IEEE MultiMedia, 2014.

[35] Y. Weiss. Comparing the mean ﬁeld method and belief prop-
agation for approximate inference in mrfs. Advanced Mean
Field MethodsTheory and Practice, pages 229–240, 2001.

[36] Q. Wu, P. Wang, C. Shen, A. Dick, and A. van den Hen-
gel. Ask me anything: Free-form visual question answering
based on knowledge from external sources. In CVPR, 2016.
[37] C. Xiong, S. Merity, and R. Socher. Dynamic memory net-
ICML,

works for visual and textual question answering.
1603, 2016.

[38] H. Xu and K. Saenko. Ask, attend and answer: Exploring
question-guided spatial attention for visual question answer-
ing. In ECCV, 2016.

[39] K. Xu, J. Ba, R. Kiros, K. Cho, A. C. Courville, R. Salakhut-
dinov, R. S. Zemel, and Y. Bengio. Show, attend and tell:
Neural image caption generation with visual attention.
In
ICML, 2015.

[40] Z. Yang, X. He, J. Gao, L. Deng, and A. Smola. Stacked
attention networks for image question answering. In CVPR,
2016.

[41] T. Yeh, J. J. Lee, and T. Darrell. Photo-based question an-

swering. In ACMMM, 2008.

[42] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. H. Torr. Conditional ran-
dom ﬁelds as recurrent neural networks. In ICCV, 2015.
[43] C. L. Zitnick and P. Doll´ar. Edge boxes: Locating object

proposals from edges. In ECCV, 2014.

Structured Attentions for Visual Question Answering

Chen Zhu, Yanpeng Zhao, Shuaiyi Huang, Kewei Tu, Yi Ma
ShanghaiTech University
{zhuchen, zhaoyp1, huangsy, tukw, mayi}@shanghaitech.edu.cn

7
1
0
2
 
g
u
A
 
7
 
 
]

V
C
.
s
c
[
 
 
1
v
1
7
0
2
0
.
8
0
7
1
:
v
i
X
r
a

Abstract

Visual attention, which assigns weights to image regions
according to their relevance to a question, is considered as
an indispensable part by most Visual Question Answering
models. Although the questions may involve complex rela-
tions among multiple regions, few attention models can ef-
fectively encode such cross-region relations. In this paper,
we demonstrate the importance of encoding such relations
by showing the limited effective receptive ﬁeld of ResNet
on two datasets, and propose to model the visual attention
as a multivariate distribution over a grid-structured Con-
ditional Random Field on image regions. We demonstrate
how to convert the iterative inference algorithms, Mean
Field and Loopy Belief Propagation, as recurrent layers
of an end-to-end neural network. We empirically evalu-
ated our model on 3 datasets, in which it surpasses the
best baseline model of the newly released CLEVR dataset
[13] by 9.5%, and the best published model on the VQA
dataset [3] by 1.25%. Source code is available at https:
//github.com/zhuchen03/vqa-sva.

1. Introduction

Visual Question Answering (VQA) is a comprehensive
task inspecting intelligent systems’ ability to recognize im-
ages and natural languages together. Advances in this area
not only beneﬁt real-world applications which require the
synergistic reasoning of vision and language, such as query-
ing events in surveillance videos [34] and searching speciﬁc
goods in images [41], but also call for ﬁner-grained under-
standing on the semantic structures of images.

Adoption of the visual attention mechanism like [38, 40,
24, 27] is a major source to boost performance of VQA. Vi-
sual attentions impose regularization on the models to ﬁnd
the most relevant image regions to the question. Still, exper-
iments [6] point out that state-of-the-art models often fail to
identify the related regions like humans do. We argue this
problem comes from the fact that such attention models do
not take into account the spatial relations between regions
when predicting the attention. This is important because the

Figure 1: An example of the proposed model on CLEVR, demon-
strating it is capable of inferring spatial relations despite the lim-
ited effective receptive ﬁeld of the CNN. Question: What is the
color of the sphere on the right of the metal sphere? Our model
overcomes the unstructured attention’s tendency to attend to iso-
lated key words in the questions, attending to the right region and
giving the correct answer purple.

effective receptive ﬁeld (ERF) of deep CNNs only covers a
small fraction of the image [25]. Even with memory mecha-
nism [37, 27, 40, 38], it is difﬁcult to infer the right attention
corresponding to questions that involve the spatial relations
between regions without overlapping ERFs.

In this paper, we propose a novel neural network to
model the attention with a multivariate distribution which
considers the arrangements of image regions. We adopt the
most straightforward graph structure to model image region
arrangements - a grid-structured Conditional Random Field
(CRF) [29]. The framework of the proposed method is illus-
trated in Fig. 2. We show that attention can be formulated
as the marginal distribution of each hidden variable in the
CRF. Then, we implement the iterative approximate infer-
ence algorithms, Mean Field and Loopy Belief Propagation,
as recurrent layers of neural networks, which iteratively re-
ﬁnes the attention. An example of this process is shown in
Fig. 1. We evaluate the proposed model on three repre-

sentative datasets, where our model is competitive with the
rule-based model [2] on the SHAPES dataset, and surpasses
the best baseline model of CLEVR by more than 9.5% and
best published method [17] on the VQA dataset by 1.25%.
We also demonstrate that the ERF on CLEVR and the VQA
dataset is not large enough for previous methods to answer
all questions involving object arrangements correctly.

Our work has the following contributions. First, we pro-
pose to model structured attentions with a CRF over image
regions for Visual Question Answering, to address the prob-
lem of limited effective receptive ﬁelds of CNNs. Second,
we demonstrate how to unfold both Mean Field and Loopy
Belief Propagation algorithms for CRF as recurrent layers
of neural networks, and perform comprehensive evaluation
of the two different networks on three challenging datasets.
Third, we give empirical evaluations of ERFs on CLEVR
and the MSCOCO dataset.

2. Related Work

There have been many different directions for improv-
ing VQA performance, including predicting answer types
[14], utilizing task-speciﬁc submodules [1, 2], and better
multimodal feature pooling methods [8, 17]. Our focus is
on structure-aware spatial attention applied on the visual
feature. There are two major forms of spatial attention for
VQA. One [31, 22, 11] is based on region proposals gener-
ated by Edge Box [43], and the other [38, 40, 24, 27, 8, 17]
predicts attention on the individual feature vectors of convo-
lutional feature maps. The most representative model SAN
[40] adopted multiple attention layers to support multi-step
reasoning. There are also methods [24, 27] that adopted
both image attention and question attention to reﬁne the
image and question representation simultaneously.
[38]
proved its ability to recognize absolute and relative posi-
tions with two simple experiments, but the model itself does
not consider the arrangement of regions and the success
may be attributed to the power of CNNs.

Some of the methods considered the structures of im-
ages. [26] adopted the Bayesian framework based on the
logic forms of segmentation results. The method was sur-
passed by some simple baseline models due to its demand
for better semantic segmentation [15]. The DMN [37]
adopted a bidirectional GRU that traverses the convolu-
tional feature map in a snake-like fashion to encode the de-
pendency of regions, which might not be the optimal choice
for the 2D structure of images. [22] concatenated the 8D
bounding box representation with the 4096D visual fea-
ture, in which the spatial information could be easily over-
weighed by the visual feature.

There have been a number of approaches combining neu-
ral networks and CRF to predict structured outputs in both
computer vision and natural language processing. [30] uti-
lized neural networks with sigmoid activation to predict the

unary potential for sequential labeling. [7] also used neu-
ral networks to predict the pairwise potential of labels. [4]
learned ﬁxed pairwise potentials for word recognition and
image classiﬁcation.
[12] utilized CNNs to predict both
the unary potentials and higher-order potentials for uncon-
strained word recognition.
[42] proposed to unfold the
Mean Field algorithm as recurrent layers for semantic seg-
mentation. It modeled the pairwise potential with Gaussian
kernels, which encourages similar features to take the same
label. Besides the supervised structure in the output layers,
[18] enforced the intermediate layers of neural networks to
learn structured attentions for natural language tasks.

To the best of our knowledge, structured attention has
not been explored for the complex task of VQA. We give
the ﬁrst empirical evaluations on unfolding both Mean Field
and Loopy Belief Propagation as intermediate recurrent lay-
ers on the task of VQA, which can be seen as a further ex-
ploration of [18] in modeling 2D structures of visual data.

3. Attention Models and Methods

The general architecture of the proposed model is shown
in Fig. 2. Here we deﬁne some notations used across the
paper. We take the question feature q ∈ RnQ from the last
time step of a GRU such as [20], and the image feature map
X = [x1, ..., xM ] ∈ RnI ×M from one of the convolution
layers of a CNN such as [10]. Here nQ, nI are the dimen-
sions of question and image feature vectors respectively,
and M is the total number of image feature vectors which
divides the image into M regions. We use softmax(·) to de-
note the softmax activation function and σ(·) to denote the
sigmoid activation function. The attention mechanism in
VQA aims to produce a context c from X which represents
the visual feature related to the question.

3.1. Unstructured Categorical Attention

In previous methods for VQA, visual attention is usually
modeled as a single or multi-step soft-selection from X. As
shown in [39, 18], the soft-selection approach represents the
selected region index by a categorical latent variable z ∈
{1, ..., M } and deﬁnes c as an expectation of the selection:

c = E

1{z=i} · xi

=

p(z = i|X, q)xi,

(1)

(cid:34)

(cid:88)

i

(cid:35)

(cid:88)

i

where 1{z=i} is an indicator function, and the distribution
of z is parameterized by

p(z = i|X, q) = softmax(Ug(xi, q)),

(2)

where U ∈ R1×nI and g(·) is some multimodal feature
pooling function such as [8, 17]. Noticing this model ig-
nores the spatial arrangement of the feature vectors in X in

Figure 2: The whole picture of the proposed model. The inputs to the recurrent inference layers are the unary potential ψi(zi) and pairwise
potential ψij(zi, zj), computed with Eq. 8. ψi(zi) can also be used as an additional glimpse, which usually detects the key nouns. In
the inference layers, xi represents b(i) for MF and m(i) for LBP. The recurrent inference layers generates a structured glimpse with MF
or LBP. The 2 glimpses are used to weight-sum the visual feature vectors. The classiﬁer use both of the attended visual features and the
question feature to predict the answer. The demonstration is a real case.

each step, and the resulting hidden states in multi-step mod-
els [39, 38] are still unstructured, we have dropped the hid-
den states in the condition presented in [38] for notational
convenience.

Since categorical distribution only requires the probabil-
ities to be positive and sum to 1, the following normalized
sigmoid attention is still a valid categorical attention:

p(z = i|X, q) =

σ(Ug(xi, q))
j σ(Ug(xj, q))

.

(cid:80)

(3)

We can use such attention as a glimpse1 of our model, which
will be introduced in Section 3.4.

3.2. Structured Multivariate Attention

To consider the arrangement of X, we adopt a structured
multivariate attention model similar to [18], in which we
consider the distribution z ∼ p(z|X, q) as a vector of binary
latent variables z = [z1, ..., zM ]T with zi = 1 if xi is related
to the question and zi = 0 otherwise. Multiple regions can
now be selected at the same time. We deﬁne the context as
the expectation of the sum over all related regions, which
can be derived as a sum of xi weighted by the marginal
probability p(zi = 1|X, q):

Ez∼p(z|X,q)[Xz] =

p(zi = 1|X, q)xi.

(4)

(cid:88)

i

Let S = (cid:80)
i p(zi = 1|X, q). Since 0 ≤ S ≤ M and M is
relatively large, to reduce covariate shift, we normalize the
expectation to get the context c:

c =

p(zi = 1|X, q)xi,

(5)

1
S

(cid:88)

i

We model the distribution p(z|X, q) in the most straight-
forward form, a grid-structured Conditional Random Field,

which represents the joint probability p(z|X, q) with a grid-
structured factor graph that considers the pairwise joint dis-
tribution of a region’s 4-neighbourhood, as shown in Fig. 2.
Let N = {(i, j)|i < j, j ∈ Ni}, where Ni is the set of i’s
neighbors on the graph. The grid-structured CRF assumes

p(z|X, q) =

ψij(zi, zj)

ψi(zi),

(6)

1
Z

(cid:89)

(i,j)∈N

(cid:89)

i

where the unary potential ψi(zi) ≥ 0 measures the likeli-
hood of region i taking the value zi ∈ {0, 1}, and the pair-
wise potential ψij(zi, zj) ≥ 0 measures the likelihood of
regions (i, j) taking values zi, zj respectively.

3.3. Recurrent Inference Layers

The inference problem in such a gird-structured factor
graph, which aims to calculate the marginal probability
p(zi|X, q; θ), is known to be NP-hard [32]. Still, there
are approximate inference algorithms to solve the problem,
such as Mean Field (MF) and Loopy Belief Propagation
(LBP). These algorithms take potential functions ψi(zi)
and ψij(zi, zj) as inputs and update p(zi|X, q; θ) iteratively
through message passing. We train neural networks to pre-
dict optimal ψi(zi) and ψij(zi, zj) and then run the algo-
rithms for a ﬁxed number of T steps. The iterative algo-
rithms are implemented as recurrent inference layers in the
neural network.

3.3.1 Potential Functions

In VQA, the potential functions should depend on both the
image and the question. We use low-rank bilinear pooling
[17], a parsimonious bilinear model, to capturing the inter-
action between 2 feature vectors x, y:

1Glimpses refer to multiple attentions, same as in [8, 17].

g(x, y; Px, Py) = tanh(Pxx) (cid:12) tanh(Pyy),

(7)

Algorithm 1 MF Recurrent Layer in VQA
Input: ψi(zi), ln ψij(zi, zj)
initialize b(0)
for t=1:T do

(zi) = ψi(zi)

i

for i = 1 : M , zi in {0, 1} do

s←0
for j in Ni, zj in {0, 1} do

j

s←s+b(t−1)
b(t)
i (zi) ← ψi(zi) exp(s)
normalize(b(t)
)

i

(zj) ln ψij(zi, zj)

return b(T )

(zi)

i

where Px, Py are learnt projection matrices projecting x, y
to the same dimension, and (cid:12) represents Hadamard prod-
uct. Based on this, we model ψi(zi) and ψij(zi, zj) as fol-
lowing:

ψi(zi = 1) = σ (Ug (xi, q; Ux, Uq)) ,

(8)

(9)

(cid:1)(cid:1) ,

ψi(zi = 0) = 1 − ψi(zi = 1),
ψij(zi, zj) = h (cid:0)vzizj g (cid:0)yij, q; Vy, Vq

(10)
where Ux ∈ Rnc×nI , Uq ∈ Rnc×nQ , U ∈ R1×nc, Vy ∈
Rnc×2nI , Vq ∈ Rnc×nQ are learnt projection matrices,
vzizj is a row vector of V ∈ R4×nc indexed by zi and zj,
yij = [xT
j ]T , nc is the common projection dimension,
h(·) is a certain activation function which will differ in the
2 inference algorithms.

i , xT

3.3.2 Mean Field Layers

The Mean Field algorithm approximates the distribution
p(z|X, q) in Eq. 6 with a fully factorized distribution q(z):

q(z) =

bi(zi),

(cid:89)

i

where bi(zi) are variational parameters corresponding to the
marginal probabilities p(zi|X, q). The variational parame-
ters are optimized by iteratively minimizing the mean-ﬁeld
free energy

FM F (bi) = −

bi(zi)bj(zj) ln ψij(zi, zj)

(cid:88)

(cid:88)

zi,zj

(i,j)∈N
(cid:88)
(cid:88)

i

zi

+

bi(zi)[ln bi(zi) − ln ψi(zi)]

subject to the constraint (cid:80)
bi(zi) = 1, which is shown
zi
to be equivalent to minimizing the KL divergence be-
tween p(z|X, q) and q(z) [35]. Speciﬁcally, MF initializes
b(0)
i

(zi) = ψi(zi) and updates b(t)

i (zi) as:

b(t)
i (zi) = αψi(zi) · exp



b(t−1)
j

(zj) ln ψij(zi, zj)

 ,



(cid:88)

(cid:88)

j∈Ni

zj

(11)



(12)

Algorithm 2 LBP Recurrent Layer in VQA
Input: ψi(zi), ψij(zi, zj)

initialize m(0)
for t=1:T do

ij (zj) = 0.5, m(t)

ij (zj) = 0 for t > 0

for j = 1 : M , i in Nj do

for zi in {0, 1} do

s(zi) ←1
for k in Ni \ {j} do

s(zi) ← s(zi) · m(t−1)
(zi)
for (zi, zj) in {0, 1} × {0, 1} do

ki

m(t)

ij (zj) ← m(t)

ij (zj) + ψij(zi, zj)ψi(zi)s(zi)

normalize(m(t)
ij )

for i = 1 : M do

bi(zi) ← ψi(zi)
for k in Ni, zi in {0, 1} do
bi(zi) ← bi(zi) · m(T )

ki (zi)

normalize(bi)

return bi(zi)

where α is the normalizing constant. Since Eq. 12 only
involves ln ψij(zi, zj), we adopt a log model for pairwise
potential,

ln ψij(zi, zj) = tanh(vzi,zj g(yij, q; Vy, Vq)).

(13)

MF can be unfolded as a recurrent layer of neural networks
without parameters, where in each step t the inputs are
ψi(zi), ψij(zi, zj) and b(t−1)
(zi), as demonstrated by Al-
gorithm 1.

i

3.3.3 Loopy Belief Propagation Layers

Loopy Belief Propagation can be applied similarly by ini-
tializing all messages to a ﬁxed value and updating the mes-
sages iteratively in a ﬁxed or random order [29]. In our grid-
structured graph, since each factor is connected to only 2
variables, the variable-to-factor and factor-to-variable mes-
sages can be merged as a single message mij, representing
the message from zi to zj. We initialize m(0)
ij (zj) = 0.5,
and iteratively update the messages based on the formula

m(t)

ij (zj) = α

ψij(zi, zj)ψi(zi)·

(cid:89)

m(t−1)
ki

(zi), (14)

(cid:88)

zi

k∈Ni\{j}

where α is the normalizing constant as above. After a ﬁxed
number of steps T , the variable zi gathers all the messages
from its neighbourhood to get the marginal probability:

bi(zi) = βψi(zi)

(15)

(cid:89)

k∈Ni

m(T )

ki (zi),

where β is the normalizing constant.

Similar to MF, LBP can also be unfolded into param-
eterless recurrent layer, where at each time step t the in-
put is ψi(zi), ψij(zi, zj) and m(t−1)
(zj), and after T steps

ij

m(T )(zi) is used to compute marginal probability bi(zi), as
shown in Algorithm 2.

3.4. The overall structure

As shown in Fig. 2, the overall structure of the pro-
posed model is an end-to-end classiﬁcation neural network.
Firstly, ψi(zi) and ψij(zi, zj) are computed using the ex-
tracted features X and q. Then, the recurrent inference lay-
ers run for T steps to get the structured marginal probability
p(zi = 1|X, q) = b(T )
(zi = 1), which is then used to com-
pute the structured context ˆc with Eq. 5. We also compute
a unstructured context ˜c with Eq. 1 by replacing Ug(xi, q)
in Eq. 3 with ψi(zi = 1). In the classiﬁer, the contexts are
both pooled with the question to get

i

ˆs = g(ˆc, q; ˆWc, ˆWq),
˜s = g(˜c, q; ˜Wc, ˜Wq),
(17)
where ˆWc, ˜Wc ∈ Rnc×nI , ˆWq, ˜Wq ∈ Rnc×nQ. The an-
swer is predicted with

(16)

a = arg max
k∈ΩK

softmax(wk[ˆsT , ˜sT ]T ),

(18)

where wk is the k-th row of W ∈ RK×2nc, K is the num-
ber of answers, ΩK is the answer space with up to K an-
swers.

4. Experiments

4.1. Datasets

The SHAPES dataset [2] is a synthetic dataset consist-
ing of images containing 3 basic shapes in 3 different colors
with a resolution of 30×30, and queries about the arrange-
ments of the basic shapes, as shown in Fig. 3. The answer
is “yes” when the image satisﬁes the query, and “no” other-
wise. There are 3 different lengths of queries. The original
dataset [1] has 14592 and 1024 image/question pairs for the
training and test sets. All the queries in the test set do not
appear in the training set.

The CLEVR dataset [13] is a much more complex but
unbiased synthetic dataset aiming at testing visual abilities
such as counting, comparing and logical reasoning. It con-
sists of 100,000 images of simple 3D objects with random
shapes, sizes, materials, colors and positions with a reso-
lution of 320×480, and nearly a million natural language
questions, 853,554 of which are unique. The questions can
be categorized into 5 general types: exist, count, compare
integer, query attribute, and compare attribute. There are
699,989 training questions, 149,991 validation questions
and 149,988 test questions. The vocabulary sizes for the
questions and answers are 82 and 28 respectively.

The VQA real-image dataset [3] is a comprehensive
dataset which requires knowledge beyond the dataset to an-
swer all the questions correctly. It has about 204,721 images

from MSCOCO [23] each with 3 natural language ques-
tions, and each question has 10 answers collected from on-
line workers. It consists of 3 splits: train, val and test,
each of which has 248,349, 121,512 and 244,302 questions
respectively. test-dev is a subset of test, which has
60,864 questions. We keep a collection of 2,000 most fre-
quent answers from the union of train and val, and ig-
nore questions with no answers from this collection, which
leaves us 334,554 samples for training. With the same pre-
processing procedure as [8, 17], we also get 837,298 train-
ing samples from Visual Genome [21] for augmentation.

4.2. Model Conﬁguration and Training

For extracting image features, we use a 2-layer LeNet
trained with the whole network on SHAPES as in [1],
and ImageNet-pretrained ResNets [10] on CLEVR and the
VQA dataset. For sentence embedding, we use single-layer
GRU. On the SHAPES dataset, we set nc = 128, nQ =
128, nI = 50, M = 9. On CLEVR, following [13], we re-
size the input images to 224 × 224, and use feature maps at
the res4b22 layer of ResNet-101 (nI = 1024, M = 196)
and the res5c layer of ResNet-152 (nI = 2048, M = 49)
in different experiments. We also set nQ = 2048, compa-
rable to the 2-layer LSTM with 1024 units per layer used in
[13]. On the VQA dataset, we ﬁx nc = 1200. Images are
resized to 448 × 448 and we use the feature at the res5c
layer of ResNet-152 (nI = 2048, M = 196 ), the same as
[24, 8, 17]. We set nQ = 2400 since we use the pre-trained
skip-thought vector [20] provided by [17] as initialization.
For training, we implement our network with MXNet
[5]. In all 3 tasks, we use the Adam optimizer [19] with
the default setting except for the learning rate, which is
picked using grid search. We adopt Bayesian dropout [9]
for GRU’s as in [17], and apply dropout [33] before every
other fully connected layer. On SHAPES and CLEVR, we
ﬁnd setting both dropout probability to 0.2 to be optimal,
while on the VQA dataset, setting a small Bayesian dropout
0.25 for the GRU and a large dropout of 0.5 for the other
parts achieved the optimal results. In addition, we use an-
swer sampling by default on the VQA dataset as in [8, 17].

4.3. Visualization of ERF

To visualize the ERF, we need to compute the inﬂuence
of a pixel Iij ∈ R3 on the entry yn
rc, the feature at (r, c)
of the n-th channel in a certain conv layer, represented by
rc/∂Iij(cid:107). As in [25], we assume a loss function ln
(cid:107)∂yn
rc
which is related only to channel yn
rc = 1
and ∂ln
rc/∂Iij =
∂ln
rc/∂Iij can be computed efﬁciently by
DL frameworks. Finally, we draw the heat map of the total
effect of a subset ΩC of channels:

ij = 0 for i (cid:54)= r or c (cid:54)= j, so that ∂yn

rc/∂yn
rc/∂Iij, since ∂ln

rc, i.e., ∂ln

rc/∂yn

Eij =

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:88)

n∈ΩC

(cid:19)2

(cid:18) ∂ln
rc
∂Iij

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

.

(19)

amount of data as [1]. This may because [1] uses a parser
to understand the queries with guaranteed correctness on
this dataset, while we have to train the GRU to understand
the queries from scratch. The parser-based method may
not perform well in more general tasks such as the VQA
dataset, since they found using fewer modules on the VQA
dataset turned out to be better, but our RNN-based approach
should generalize better with enough training data. So we
generate more data with the same answer distributions for
each query as [1] to train and test our model, and re-trained
their model using the released code. We name the origi-
nal dataset small, and the newly generated datasets with
2 and 3 times as much data in both training and test sets as
medium and large respectively. We ﬁnd with more train-
ing data, our model becomes competitive with [1] and the
MF-G2 model surpasses it on both medium and large, as
shown in Table 1. Our models are extremely good at han-
dling length-4 queries, which looks for object arrangements
in 4-neighborhood, as demonstrated in Fig. 3. The high ac-
curacy also implies the model is capable of set theory rea-
soning, since it achieved high test accuracy with length-3
queries which contain self-conﬂict queries such as is red
green, which aims to ﬁnd an object that is both red and
green. For complex queries, such as is red below below
green, which aims to ﬁnd a red object below another object
that is below a green object, it is not as competitive as [1],
probably because the GRU in our model has not generalized
to higher order logic.

4.4.2 On CLEVR

In this part, we study the role of different visual features
and different kinds of attentions on the performance, and
test our best models on the test set, as shown in Table 2.
Our best model surpasses the best baseline model in [13] by
more than 9.5% on the test set. Both MF and LBP outper-
form SM and SIG, demonstrating the effectiveness of our
method. The maximum margin of MF/LBP vs. SIG on
overall accuracy is 2.62% and 1.33% with the ResNet-152
and ResNet-101 features respectively. The most signiﬁcant
improvement of MF/LBP over other models is on Com-
pare Attribute, which involves comparing speciﬁc attributes
of objects speciﬁed by spatial relations with other objects.
This also proves that our model alleviates the problem of
previous methods of ignoring arrangements of regions. Fur-
ther, we show the receptive ﬁelds of the 2 selected layers on
the test set in Fig. 4. In each image, we choose the feature
vector closest to the center, where there is a higher chance
for objects to appear. Still, both of them only occupy a small
portion of the image, indicating the importance of consider-
ing the structure of regions. Overall, the performance with
res4b22 features is better than that with res5c features.
From the ERF point of view, the ERF of res5c has more

Figure 3: Visualization of MF-G2 and LBP-G2 on the test set of
large. b(0) or ψi represents the initial attention, b(3) or b repre-
sents the reﬁned attention after MF or LBP. The query looks for a
green object under a circle.

small

large

medium NMN

Query Length
% of test set
NMN[2]
SIG-G2
MF-G2
LBP-G2

SIG-G2
MF-G2
LBP-G2
NMN
SIG-G2
MF-G2
LBP-G2

3
12.5
91.4
57.0
53.1
63.3
99.2
68.8
98.0
87.1
99.7
93.2
99.7
95.1

4
62.5
95.6
70.5
71.4
72.2
92.1
79.6
99.6
99.5
94.2
95.6
99.9
100

5
25
92.6
66.8
66.0
62.5
85.2
73.8
71.5
71.9
91.2
72.5
79.2
78.9

All
-
94.3
67.9
67.8
68.7
91.3
76.8
92.4
91.0
94.1
89.5
94.7
94.1

Table 1: Accuracy on SHAPES.

4.4. Results and Analysis

We perform experiments on the 3 datasets, in which we
ﬁx the general structure except for the visual attention mod-
els, to quantify the role of structured attention in our model
and the best conﬁguration for it. We will use the following
abbreviations to distinguish the models we implemented:
• SM/SIG: 1-glimpse softmax or sigmoid attention.

• MF/LBP: 1-glimpse multivariate attention with a MF

or LBP recurrent layer and a default T = 3.

• MODEL-G2: 2-glimpses with a default T = 3, where

MODEL=SIG,MF or LBP is the attention model.

• MF-SIG/LBP-SIG: 2-glimpse model by concatenating
a MF or LBP attention with a SIG attention, as men-
tioned in Section 3.4.

• MODEL-Tn: MODEL with T = n inference steps.

4.4.1 On SHAPES

In this part, we will look into the inﬂuence of the volume
of the data on our model’s generalization, and compare the
performance of SIG-G2, MF-G2 and LBP-G2 models. We
ﬁnd it is difﬁcult for all 3 models to generalize with the same

CLEVR validation

Table 3: Results of the Open Ended task on test-dev.

res5c on CLEVR res5c on CLEVR res5c on MSCOCO

Figure 4: The average ERF [25] of 32 channels chosen at regular
intervals, on 15000 images from the CLEVR test set and 52500
images from the MSCOCO test set with resolution of 224 × 224
and 448 × 448 respectively. The ERF images are smoothed with
σ = 4 Gaussian kernels.

All

Exist Count

CI

QA

CA

res5c
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
MCB[13]
SAN[13]
MF-SIG
LBP-SIG

68.80
70.52
73.14
72.30
73.19
73.33

75.63
75.32
76.65
76.21
77.4
77.97

51.4
68.5
77.57
78.04

73.20
73.90
76.46
76.32
76.53
77.50

77.69
76.54
77.90
78.97
79.8
79.7

63.4
71.1
80.05
79.63

CLEVR validation

53.16
53.89
56.89
54.92
56.22
56.39

57.79
58.93
58.87
57.52
61.0
61.39

76.52
76.52
77.43
77.50
78.56
77.97

78.63
78.12
80.48
80.14
79.3
80.17

CLEVR test
63.3
42.1
73.5
52.2
80.08
60.69
80.69
61.27

81.58
82.46
83.72
83.35
84.23
84.09

87.76
87.94
88.10
87.90
88.0
88.54

49.0
85.2
88.16
88.59

56.77
63.06
68.76
67.54
68.34
68.70

71.83
69.38
74.34
73.43
75.1
76.31

60.0
52.2
75.27
76.28

Table 2: Accuracy on CLEVR. CI, QA, CA stand for Count Inte-
ger, Query Attribute and Compare Attribute respectively. The top
half uses ResNet-152 features and the bottom half uses ResNet-
101 features. Our best model uses the same visual feature as [13].

than twice the area as the ERF of res4b22. As a result,
the feature vector of res5c may require more than twice
the number of parameters to represent same amount of in-
formation in this region as res4b22, but its has only twice.

4.4.3 On the VQA dataset

Since we have found MF-SIG and LBP-SIG are the best on
CLEVR, in this part, we mainly compare the two models
with different T . Notice now the total number of glimpses
is the same as MCB [8] and MLB [17], and both of them use
res5c features and better feature pooling methods. The
optimal choice in these experiments is MF-SIG-T3, which
is 0.92% higher in overall accuracy than the previous best
method [17], and outperforms previous methods on all 3
general categories of questions. We then use external data
from Visual Genome to train MF-SIG-T3 and MF-T3, in

All
64.7
65.08
65.90
65.89
66.00
65.81
65.93
65.90
65.81
65.73
65.4
65.84
67.17
67.19

Model
MCB[8]
MLB[17]
MF-SIG-T1
MF-SIG-T2
MF-SIG-T3
MF-SIG-T4
LBP-SIG-T1
LBP-SIG-T2
LBP-SIG-T3
LBP-SIG-T4
MCB+VG[8]
MLB+VG[17]
MF+VG
MF-SIG+VG
On test-dev2017 of VQA2.0
MF-SIG+VG

Y/N
82.5
84.14
84.22
84.21
84.33
84.22
84.31
84.23
84.05
84.08
82.3
83.87
84.77
84.71

81.29

64.73

No.
37.6
38.21
39.51
39.57
39.34
38.96
39.27
39.70
39.76
38.87
37.2
37.87
39.71
40.58

Other
55.6
54.87
56.22
56.20
56.37
56.16
56.26
56.16
56.12
56.13
57.4
56.76
58.34
58.24

42.99

55.55

Open Ended

Single Model
SMem[38]
SAN[40]
D-NMN[1]
ACK[36]
FDA[11]
QRU[22]
HYBRID[14]
DMN+[37]
MRN[16]
HieCoAtt[24]
RAU[28]
MLB[17]
MF-SIG-T3
Ensemble Model
MCB[8]
MLB[17]
Ours
Ours test2017

All
58.24
58.85
59.4
59.44
59.54
60.76
60.06
60.36
61.84
62.06
63.2
65.07
65.88

66.47
66.89
68.14
65.84

Y/N
80.8
79.11
81.1
81.07
81.34
-
80.34
80.43
82.39
79.95
81.7
84.02
84.42

83.24
84.61
85.41
81.85

No.
37.53
36.41
38.6
37.12
35.67
-
37.82
36.82
38.23
38.22
38.2
37.90
38.94

39.47
39.07
40.99
43.64

MC

All
-
-
-
-
64.18
65.43
-
-
66.33
66.07
67.3
68.89
70.33

70.10
70.29
72.08
-

Other
43.48
46.42
45.5
45.83
46.10
-
47.56
48.33
49.41
51.95
52.8
54.77
55.89

58.00
57.79
59.27
57.07

Table 4: Results of the Open Ended and Multiple Choice tasks
on test. We compare the accuracy of single models (without
augmentation) and ensemble models with published methods.

which MF-SIG surpassed MLB under the same condition
by 1.35%. The accuracy boost of our model is higher than
MCB and MLB, showing that our model has higher capac-
ity. The LBP models, which performs better than MF layers
on CLEVR, turns out to be worse on this dataset, and T = 1
is the optimal choice for LBP. We also ﬁnd the single MF at-
tention model, which should not be as powerful as MF-SIG,
achieved 67.17% accuracy with augmentation. These might
be caused by the bias of the current VQA dataset [3], where
there are questions with ﬁxed answers across all involved
images. We also show the results on test, as shown in Ta-
ble 4. Our model is the best among published methods with-
out external data. With an ensemble of 3 MF-T3 and 4 MF-
SIG-T3 models, we achieve 68.18% accuracy on test,
1.25% higher than best published ensemble model on the

Figure 5: Two instances of different attentions on CLEVR, where
the SIG model gives wrong answers but MF-SIG and LBP-SIG
both give the correct answer. For each instance, from left to right,
the ﬁrst row to the second row, the images are: input image, b(0)
of MF-SIG, b(3) of MF-SIG, ψi(zi) of LBP-SIG, b of LBP-SIG,
attention of SIG. Notations are the same as in Fig. 3. Best viewed
in color.

Open Ended task. By the date of submission, we rank the
second on the leaderboard of Open Ended task and the ﬁrst
on that of the Multiple Choice task. The champion on Open
Ended has an accuracy of 69.94% but the method is not pub-
lished. We have also recorded our model’s performance on
the test-dev2017 and test2017 of VQA2.0 in Table
3 and 4. Accuracy on test2017 is achieved with 8 snap-
shots from 4 models with different learning rates.

4.4.4 Qualitative Results

We demonstrate some attention maps on CLEVR and the
VQA dataset to analyze the behavior of the proposed mod-
els. Fig. 5 shows 2 instances where the SIG model failed but
both MF and LBP succeeded. We ﬁnd the MF-SIG model
has learned interesting patterns where its attention often
covers the background surrounding the target initially, but
converges to the target after iterative inference. This phe-
nomenon almost never happens with the LBP-SIG model,
which usually has better initializations that contained the
target region. The shortcoming of the unstructured SIG
model is also exposed in the 2 instances, where it tends to
get stuck with the key nouns of the question. Fig. 6 demon-
strates 3 instances of the MF-SIG model together with the
effective receptive ﬁeld. The model gives 2 correct answers
for the ﬁrst 2 instances and 1 wrong answer for the last in-

Figure 6: Some instances in the VQA dataset. The ERFs locate at
the target region in row 1 and 3, and at at initial attention in row 2.
Best viewed in color.

stance. In the ﬁrst instance, the ERF at the target should
be enough to encode the relations. The initial attention in-
volves some extra areas due to the key word “luggage”, but
it manages to converge to the most relevant region. In the
second instance, the initial attention is wrong, as we can
see the ERF at the initial attention does not overlap with the
target, but with the help of MF, the ﬁnal attention captures
the relation “in the front” and gives an acceptable answer.
In the third instance, the ERF at the target region is very
weak on the keyword “bulb”, which means the feature vec-
tor does not encode this concept, probably due to the size of
the bulb. The model fails to attend to the right region and
gives a popular answer “2” (3rd most popular answer on the
VQA dataset) according to the type of the question.

5. Conclusion

In this paper, we propose a novel structured visual at-
tention mechanism for VQA, which models attention with
binary latent variables and a grid-structured CRF over these
variables. Inference in the CRF is implemented as recurrent
layers in neural networks. Experimental results demonstrate
that the proposed method is capable of capturing the seman-
tic structure of the image in accordance with the question,
which alleviates the problem of unstructured attention that
captures only the key nouns in the questions. As a result,
our method achieves state-of-the-art accuracy on three chal-
lenging datasets. Although structured visual attention does
not solve all problems in VQA, we argue that it should be
an indispensable module for VQA in the future.

References

[1] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Learning
to compose neural networks for question answering. NAACL,
2016.

[2] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Neural

module networks. In CVPR, 2016.

[3] S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra,
C. Lawrence Zitnick, and D. Parikh. VQA: Visual question
answering. In ICCV, 2015.

[4] L.-C. Chen, A. G. Schwing, A. L. Yuille, and R. Urtasun.

Learning deep structured models. In ICML, 2015.

[5] T. Chen, M. Li, Y. Li, M. Lin, N. Wang, M. Wang, T. Xiao,
B. Xu, C. Zhang, and Z. Zhang. Mxnet: A ﬂexible and efﬁ-
cient machine learning library for heterogeneous distributed
systems. arXiv preprint arXiv:1512.01274, 2015.

[6] A. Das, H. Agrawal, C. L. Zitnick, D. Parikh, and D. Batra.
Human attention in visual question answering: Do humans
and deep networks look at the same regions? EMNLP, 2016.
[7] T.-M.-T. Do and T. Artieres. Neural conditional random

ﬁelds. In AISTATS, 2010.

[8] A. Fukui, D. H. Park, D. Yang, A. Rohrbach, T. Darrell,
and M. Rohrbach. Multimodal compact bilinear pooling for
visual question answering and visual grounding. EMNLP,
2016.

[9] Y. Gal and Z. Ghahramani. A theoretically grounded ap-
plication of dropout in recurrent neural networks. In NIPS,
2016.

[10] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning

for image recognition. In CVPR, 2016.

[11] I. Ilievski, S. Yan, and J. Feng. A focused dynamic atten-
tion model for visual question answering. arXiv preprint
arXiv:1604.01485, 2016.

[12] M. Jaderberg, K. Simonyan, A. Vedaldi, and A. Zisserman.
Deep structured output learning for unconstrained text recog-
nition. ICLR, 2015.

[13] J. Johnson, B. Hariharan, L. van der Maaten, L. Fei-Fei,
C. L. Zitnick, and R. Girshick. Clevr: A diagnostic dataset
for compositional language and elementary visual reasoning.
CVPR, 2017.

[14] K. Kaﬂe and C. Kanan. Answer-type prediction for visual

question answering. In CVPR, 2016.

[15] K. Kaﬂe and C. Kanan.

Visual question answering:
Datasets, algorithms, and future challenges. arXiv preprint
arXiv:1610.01465, 2016.

[16] J.-H. Kim, S.-W. Lee, D. Kwak, M.-O. Heo, J. Kim, J.-W.
Ha, and B.-T. Zhang. Multimodal residual learning for visual
QA. In NIPS, 2016.

[17] J.-H. Kim, K.-W. On, J. Kim, J.-W. Ha, and B.-T. Zhang.
ICLR,

Hadamard product for low-rank bilinear pooling.
2017.

[18] Y. Kim, C. Denton, L. Hoang, and A. M. Rush. Structured

attention networks. ICLR, 2017.

[19] D. Kingma and J. Ba. Adam: A method for stochastic opti-

mization. ICLR, 2015.

[20] R. Kiros, Y. Zhu, R. R. Salakhutdinov, R. Zemel, R. Urtasun,
A. Torralba, and S. Fidler. Skip-thought vectors. In NIPS,
2015.

[21] R. Krishna, Y. Zhu, O. Groth, J. Johnson, K. Hata, J. Kravitz,
S. Chen, Y. Kalantidis, L.-J. Li, D. A. Shamma, et al. Vi-
sual genome: Connecting language and vision using crowd-
sourced dense image annotations. IJCV, 2016.

[22] R. Li and J. Jia. Visual question answering with question

representation update (QRU). In NIPS, 2016.

[23] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll´ar, and C. L. Zitnick. Microsoft COCO: Com-
mon objects in context. In ECCV, 2014.

[24] J. Lu, J. Yang, D. Batra, and D. Parikh. Hierarchical
question-image co-attention for visual question answering.
In NIPS, 2016.

[25] W. Luo, Y. Li, R. Urtasun, and R. Zemel. Understanding
the effective receptive ﬁeld in deep convolutional neural net-
works. In NIPS, 2016.

[26] M. Malinowski and M. Fritz. A multi-world approach to
question answering about real-world scenes based on uncer-
tain input. In NIPS, 2014.

[27] H. Nam, J.-W. Ha, and J. Kim. Dual attention networks
arXiv preprint

for multimodal reasoning and matching.
arXiv:1611.00471, 2016.

[28] H. Noh and B. Han. Training recurrent answering units
arXiv preprint

with joint loss minimization for VQA.
arXiv:1606.03647, 2016.

[29] S. Nowozin, C. H. Lampert, et al. Structured learning and
prediction in computer vision. Foundations and Trends R(cid:13) in
Computer Graphics and Vision, 6(3–4):185–365, 2011.
[30] J. Peng, L. Bo, and J. Xu. Conditional neural ﬁelds. In NIPS,

2009.

[31] K. J. Shih, S. Singh, and D. Hoiem. Where to look: Focus
regions for visual question answering. In CVPR, 2016.
[32] S. E. Shimony. Finding maps for belief networks is np-hard.

Artiﬁcial Intelligence, 68(2):399–410, 1994.

[33] N. Srivastava, G. E. Hinton, A. Krizhevsky, I. Sutskever, and
R. Salakhutdinov. Dropout: a simple way to prevent neural
networks from overﬁtting. JMLR, 2014.

[34] K. Tu, M. Meng, M. W. Lee, T. E. Choe, and S.-C. Zhu. Joint
video and text parsing for understanding events and answer-
ing queries. IEEE MultiMedia, 2014.

[35] Y. Weiss. Comparing the mean ﬁeld method and belief prop-
agation for approximate inference in mrfs. Advanced Mean
Field MethodsTheory and Practice, pages 229–240, 2001.

[36] Q. Wu, P. Wang, C. Shen, A. Dick, and A. van den Hen-
gel. Ask me anything: Free-form visual question answering
based on knowledge from external sources. In CVPR, 2016.
[37] C. Xiong, S. Merity, and R. Socher. Dynamic memory net-
ICML,

works for visual and textual question answering.
1603, 2016.

[38] H. Xu and K. Saenko. Ask, attend and answer: Exploring
question-guided spatial attention for visual question answer-
ing. In ECCV, 2016.

[39] K. Xu, J. Ba, R. Kiros, K. Cho, A. C. Courville, R. Salakhut-
dinov, R. S. Zemel, and Y. Bengio. Show, attend and tell:
Neural image caption generation with visual attention.
In
ICML, 2015.

[40] Z. Yang, X. He, J. Gao, L. Deng, and A. Smola. Stacked
attention networks for image question answering. In CVPR,
2016.

[41] T. Yeh, J. J. Lee, and T. Darrell. Photo-based question an-

swering. In ACMMM, 2008.

[42] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. H. Torr. Conditional ran-
dom ﬁelds as recurrent neural networks. In ICCV, 2015.
[43] C. L. Zitnick and P. Doll´ar. Edge boxes: Locating object

proposals from edges. In ECCV, 2014.

Structured Attentions for Visual Question Answering

Chen Zhu, Yanpeng Zhao, Shuaiyi Huang, Kewei Tu, Yi Ma
ShanghaiTech University
{zhuchen, zhaoyp1, huangsy, tukw, mayi}@shanghaitech.edu.cn

7
1
0
2
 
g
u
A
 
7
 
 
]

V
C
.
s
c
[
 
 
1
v
1
7
0
2
0
.
8
0
7
1
:
v
i
X
r
a

Abstract

Visual attention, which assigns weights to image regions
according to their relevance to a question, is considered as
an indispensable part by most Visual Question Answering
models. Although the questions may involve complex rela-
tions among multiple regions, few attention models can ef-
fectively encode such cross-region relations. In this paper,
we demonstrate the importance of encoding such relations
by showing the limited effective receptive ﬁeld of ResNet
on two datasets, and propose to model the visual attention
as a multivariate distribution over a grid-structured Con-
ditional Random Field on image regions. We demonstrate
how to convert the iterative inference algorithms, Mean
Field and Loopy Belief Propagation, as recurrent layers
of an end-to-end neural network. We empirically evalu-
ated our model on 3 datasets, in which it surpasses the
best baseline model of the newly released CLEVR dataset
[13] by 9.5%, and the best published model on the VQA
dataset [3] by 1.25%. Source code is available at https:
//github.com/zhuchen03/vqa-sva.

1. Introduction

Visual Question Answering (VQA) is a comprehensive
task inspecting intelligent systems’ ability to recognize im-
ages and natural languages together. Advances in this area
not only beneﬁt real-world applications which require the
synergistic reasoning of vision and language, such as query-
ing events in surveillance videos [34] and searching speciﬁc
goods in images [41], but also call for ﬁner-grained under-
standing on the semantic structures of images.

Adoption of the visual attention mechanism like [38, 40,
24, 27] is a major source to boost performance of VQA. Vi-
sual attentions impose regularization on the models to ﬁnd
the most relevant image regions to the question. Still, exper-
iments [6] point out that state-of-the-art models often fail to
identify the related regions like humans do. We argue this
problem comes from the fact that such attention models do
not take into account the spatial relations between regions
when predicting the attention. This is important because the

Figure 1: An example of the proposed model on CLEVR, demon-
strating it is capable of inferring spatial relations despite the lim-
ited effective receptive ﬁeld of the CNN. Question: What is the
color of the sphere on the right of the metal sphere? Our model
overcomes the unstructured attention’s tendency to attend to iso-
lated key words in the questions, attending to the right region and
giving the correct answer purple.

effective receptive ﬁeld (ERF) of deep CNNs only covers a
small fraction of the image [25]. Even with memory mecha-
nism [37, 27, 40, 38], it is difﬁcult to infer the right attention
corresponding to questions that involve the spatial relations
between regions without overlapping ERFs.

In this paper, we propose a novel neural network to
model the attention with a multivariate distribution which
considers the arrangements of image regions. We adopt the
most straightforward graph structure to model image region
arrangements - a grid-structured Conditional Random Field
(CRF) [29]. The framework of the proposed method is illus-
trated in Fig. 2. We show that attention can be formulated
as the marginal distribution of each hidden variable in the
CRF. Then, we implement the iterative approximate infer-
ence algorithms, Mean Field and Loopy Belief Propagation,
as recurrent layers of neural networks, which iteratively re-
ﬁnes the attention. An example of this process is shown in
Fig. 1. We evaluate the proposed model on three repre-

sentative datasets, where our model is competitive with the
rule-based model [2] on the SHAPES dataset, and surpasses
the best baseline model of CLEVR by more than 9.5% and
best published method [17] on the VQA dataset by 1.25%.
We also demonstrate that the ERF on CLEVR and the VQA
dataset is not large enough for previous methods to answer
all questions involving object arrangements correctly.

Our work has the following contributions. First, we pro-
pose to model structured attentions with a CRF over image
regions for Visual Question Answering, to address the prob-
lem of limited effective receptive ﬁelds of CNNs. Second,
we demonstrate how to unfold both Mean Field and Loopy
Belief Propagation algorithms for CRF as recurrent layers
of neural networks, and perform comprehensive evaluation
of the two different networks on three challenging datasets.
Third, we give empirical evaluations of ERFs on CLEVR
and the MSCOCO dataset.

2. Related Work

There have been many different directions for improv-
ing VQA performance, including predicting answer types
[14], utilizing task-speciﬁc submodules [1, 2], and better
multimodal feature pooling methods [8, 17]. Our focus is
on structure-aware spatial attention applied on the visual
feature. There are two major forms of spatial attention for
VQA. One [31, 22, 11] is based on region proposals gener-
ated by Edge Box [43], and the other [38, 40, 24, 27, 8, 17]
predicts attention on the individual feature vectors of convo-
lutional feature maps. The most representative model SAN
[40] adopted multiple attention layers to support multi-step
reasoning. There are also methods [24, 27] that adopted
both image attention and question attention to reﬁne the
image and question representation simultaneously.
[38]
proved its ability to recognize absolute and relative posi-
tions with two simple experiments, but the model itself does
not consider the arrangement of regions and the success
may be attributed to the power of CNNs.

Some of the methods considered the structures of im-
ages. [26] adopted the Bayesian framework based on the
logic forms of segmentation results. The method was sur-
passed by some simple baseline models due to its demand
for better semantic segmentation [15]. The DMN [37]
adopted a bidirectional GRU that traverses the convolu-
tional feature map in a snake-like fashion to encode the de-
pendency of regions, which might not be the optimal choice
for the 2D structure of images. [22] concatenated the 8D
bounding box representation with the 4096D visual fea-
ture, in which the spatial information could be easily over-
weighed by the visual feature.

There have been a number of approaches combining neu-
ral networks and CRF to predict structured outputs in both
computer vision and natural language processing. [30] uti-
lized neural networks with sigmoid activation to predict the

unary potential for sequential labeling. [7] also used neu-
ral networks to predict the pairwise potential of labels. [4]
learned ﬁxed pairwise potentials for word recognition and
image classiﬁcation.
[12] utilized CNNs to predict both
the unary potentials and higher-order potentials for uncon-
strained word recognition.
[42] proposed to unfold the
Mean Field algorithm as recurrent layers for semantic seg-
mentation. It modeled the pairwise potential with Gaussian
kernels, which encourages similar features to take the same
label. Besides the supervised structure in the output layers,
[18] enforced the intermediate layers of neural networks to
learn structured attentions for natural language tasks.

To the best of our knowledge, structured attention has
not been explored for the complex task of VQA. We give
the ﬁrst empirical evaluations on unfolding both Mean Field
and Loopy Belief Propagation as intermediate recurrent lay-
ers on the task of VQA, which can be seen as a further ex-
ploration of [18] in modeling 2D structures of visual data.

3. Attention Models and Methods

The general architecture of the proposed model is shown
in Fig. 2. Here we deﬁne some notations used across the
paper. We take the question feature q ∈ RnQ from the last
time step of a GRU such as [20], and the image feature map
X = [x1, ..., xM ] ∈ RnI ×M from one of the convolution
layers of a CNN such as [10]. Here nQ, nI are the dimen-
sions of question and image feature vectors respectively,
and M is the total number of image feature vectors which
divides the image into M regions. We use softmax(·) to de-
note the softmax activation function and σ(·) to denote the
sigmoid activation function. The attention mechanism in
VQA aims to produce a context c from X which represents
the visual feature related to the question.

3.1. Unstructured Categorical Attention

In previous methods for VQA, visual attention is usually
modeled as a single or multi-step soft-selection from X. As
shown in [39, 18], the soft-selection approach represents the
selected region index by a categorical latent variable z ∈
{1, ..., M } and deﬁnes c as an expectation of the selection:

c = E

1{z=i} · xi

=

p(z = i|X, q)xi,

(1)

(cid:34)

(cid:88)

i

(cid:35)

(cid:88)

i

where 1{z=i} is an indicator function, and the distribution
of z is parameterized by

p(z = i|X, q) = softmax(Ug(xi, q)),

(2)

where U ∈ R1×nI and g(·) is some multimodal feature
pooling function such as [8, 17]. Noticing this model ig-
nores the spatial arrangement of the feature vectors in X in

Figure 2: The whole picture of the proposed model. The inputs to the recurrent inference layers are the unary potential ψi(zi) and pairwise
potential ψij(zi, zj), computed with Eq. 8. ψi(zi) can also be used as an additional glimpse, which usually detects the key nouns. In
the inference layers, xi represents b(i) for MF and m(i) for LBP. The recurrent inference layers generates a structured glimpse with MF
or LBP. The 2 glimpses are used to weight-sum the visual feature vectors. The classiﬁer use both of the attended visual features and the
question feature to predict the answer. The demonstration is a real case.

each step, and the resulting hidden states in multi-step mod-
els [39, 38] are still unstructured, we have dropped the hid-
den states in the condition presented in [38] for notational
convenience.

Since categorical distribution only requires the probabil-
ities to be positive and sum to 1, the following normalized
sigmoid attention is still a valid categorical attention:

p(z = i|X, q) =

σ(Ug(xi, q))
j σ(Ug(xj, q))

.

(cid:80)

(3)

We can use such attention as a glimpse1 of our model, which
will be introduced in Section 3.4.

3.2. Structured Multivariate Attention

To consider the arrangement of X, we adopt a structured
multivariate attention model similar to [18], in which we
consider the distribution z ∼ p(z|X, q) as a vector of binary
latent variables z = [z1, ..., zM ]T with zi = 1 if xi is related
to the question and zi = 0 otherwise. Multiple regions can
now be selected at the same time. We deﬁne the context as
the expectation of the sum over all related regions, which
can be derived as a sum of xi weighted by the marginal
probability p(zi = 1|X, q):

Ez∼p(z|X,q)[Xz] =

p(zi = 1|X, q)xi.

(4)

(cid:88)

i

Let S = (cid:80)
i p(zi = 1|X, q). Since 0 ≤ S ≤ M and M is
relatively large, to reduce covariate shift, we normalize the
expectation to get the context c:

c =

p(zi = 1|X, q)xi,

(5)

1
S

(cid:88)

i

We model the distribution p(z|X, q) in the most straight-
forward form, a grid-structured Conditional Random Field,

which represents the joint probability p(z|X, q) with a grid-
structured factor graph that considers the pairwise joint dis-
tribution of a region’s 4-neighbourhood, as shown in Fig. 2.
Let N = {(i, j)|i < j, j ∈ Ni}, where Ni is the set of i’s
neighbors on the graph. The grid-structured CRF assumes

p(z|X, q) =

ψij(zi, zj)

ψi(zi),

(6)

1
Z

(cid:89)

(i,j)∈N

(cid:89)

i

where the unary potential ψi(zi) ≥ 0 measures the likeli-
hood of region i taking the value zi ∈ {0, 1}, and the pair-
wise potential ψij(zi, zj) ≥ 0 measures the likelihood of
regions (i, j) taking values zi, zj respectively.

3.3. Recurrent Inference Layers

The inference problem in such a gird-structured factor
graph, which aims to calculate the marginal probability
p(zi|X, q; θ), is known to be NP-hard [32]. Still, there
are approximate inference algorithms to solve the problem,
such as Mean Field (MF) and Loopy Belief Propagation
(LBP). These algorithms take potential functions ψi(zi)
and ψij(zi, zj) as inputs and update p(zi|X, q; θ) iteratively
through message passing. We train neural networks to pre-
dict optimal ψi(zi) and ψij(zi, zj) and then run the algo-
rithms for a ﬁxed number of T steps. The iterative algo-
rithms are implemented as recurrent inference layers in the
neural network.

3.3.1 Potential Functions

In VQA, the potential functions should depend on both the
image and the question. We use low-rank bilinear pooling
[17], a parsimonious bilinear model, to capturing the inter-
action between 2 feature vectors x, y:

1Glimpses refer to multiple attentions, same as in [8, 17].

g(x, y; Px, Py) = tanh(Pxx) (cid:12) tanh(Pyy),

(7)

Algorithm 1 MF Recurrent Layer in VQA
Input: ψi(zi), ln ψij(zi, zj)
initialize b(0)
for t=1:T do

(zi) = ψi(zi)

i

for i = 1 : M , zi in {0, 1} do

s←0
for j in Ni, zj in {0, 1} do

j

s←s+b(t−1)
b(t)
i (zi) ← ψi(zi) exp(s)
normalize(b(t)
)

i

(zj) ln ψij(zi, zj)

return b(T )

(zi)

i

where Px, Py are learnt projection matrices projecting x, y
to the same dimension, and (cid:12) represents Hadamard prod-
uct. Based on this, we model ψi(zi) and ψij(zi, zj) as fol-
lowing:

ψi(zi = 1) = σ (Ug (xi, q; Ux, Uq)) ,

(8)

(9)

(cid:1)(cid:1) ,

ψi(zi = 0) = 1 − ψi(zi = 1),
ψij(zi, zj) = h (cid:0)vzizj g (cid:0)yij, q; Vy, Vq

(10)
where Ux ∈ Rnc×nI , Uq ∈ Rnc×nQ , U ∈ R1×nc, Vy ∈
Rnc×2nI , Vq ∈ Rnc×nQ are learnt projection matrices,
vzizj is a row vector of V ∈ R4×nc indexed by zi and zj,
yij = [xT
j ]T , nc is the common projection dimension,
h(·) is a certain activation function which will differ in the
2 inference algorithms.

i , xT

3.3.2 Mean Field Layers

The Mean Field algorithm approximates the distribution
p(z|X, q) in Eq. 6 with a fully factorized distribution q(z):

q(z) =

bi(zi),

(cid:89)

i

where bi(zi) are variational parameters corresponding to the
marginal probabilities p(zi|X, q). The variational parame-
ters are optimized by iteratively minimizing the mean-ﬁeld
free energy

FM F (bi) = −

bi(zi)bj(zj) ln ψij(zi, zj)

(cid:88)

(cid:88)

zi,zj

(i,j)∈N
(cid:88)
(cid:88)

i

zi

+

bi(zi)[ln bi(zi) − ln ψi(zi)]

subject to the constraint (cid:80)
bi(zi) = 1, which is shown
zi
to be equivalent to minimizing the KL divergence be-
tween p(z|X, q) and q(z) [35]. Speciﬁcally, MF initializes
b(0)
i

(zi) = ψi(zi) and updates b(t)

i (zi) as:

b(t)
i (zi) = αψi(zi) · exp



b(t−1)
j

(zj) ln ψij(zi, zj)

 ,



(cid:88)

(cid:88)

j∈Ni

zj

(11)



(12)

Algorithm 2 LBP Recurrent Layer in VQA
Input: ψi(zi), ψij(zi, zj)

initialize m(0)
for t=1:T do

ij (zj) = 0.5, m(t)

ij (zj) = 0 for t > 0

for j = 1 : M , i in Nj do

for zi in {0, 1} do

s(zi) ←1
for k in Ni \ {j} do

s(zi) ← s(zi) · m(t−1)
(zi)
for (zi, zj) in {0, 1} × {0, 1} do

ki

m(t)

ij (zj) ← m(t)

ij (zj) + ψij(zi, zj)ψi(zi)s(zi)

normalize(m(t)
ij )

for i = 1 : M do

bi(zi) ← ψi(zi)
for k in Ni, zi in {0, 1} do
bi(zi) ← bi(zi) · m(T )

ki (zi)

normalize(bi)

return bi(zi)

where α is the normalizing constant. Since Eq. 12 only
involves ln ψij(zi, zj), we adopt a log model for pairwise
potential,

ln ψij(zi, zj) = tanh(vzi,zj g(yij, q; Vy, Vq)).

(13)

MF can be unfolded as a recurrent layer of neural networks
without parameters, where in each step t the inputs are
ψi(zi), ψij(zi, zj) and b(t−1)
(zi), as demonstrated by Al-
gorithm 1.

i

3.3.3 Loopy Belief Propagation Layers

Loopy Belief Propagation can be applied similarly by ini-
tializing all messages to a ﬁxed value and updating the mes-
sages iteratively in a ﬁxed or random order [29]. In our grid-
structured graph, since each factor is connected to only 2
variables, the variable-to-factor and factor-to-variable mes-
sages can be merged as a single message mij, representing
the message from zi to zj. We initialize m(0)
ij (zj) = 0.5,
and iteratively update the messages based on the formula

m(t)

ij (zj) = α

ψij(zi, zj)ψi(zi)·

(cid:89)

m(t−1)
ki

(zi), (14)

(cid:88)

zi

k∈Ni\{j}

where α is the normalizing constant as above. After a ﬁxed
number of steps T , the variable zi gathers all the messages
from its neighbourhood to get the marginal probability:

bi(zi) = βψi(zi)

(15)

(cid:89)

k∈Ni

m(T )

ki (zi),

where β is the normalizing constant.

Similar to MF, LBP can also be unfolded into param-
eterless recurrent layer, where at each time step t the in-
put is ψi(zi), ψij(zi, zj) and m(t−1)
(zj), and after T steps

ij

m(T )(zi) is used to compute marginal probability bi(zi), as
shown in Algorithm 2.

3.4. The overall structure

As shown in Fig. 2, the overall structure of the pro-
posed model is an end-to-end classiﬁcation neural network.
Firstly, ψi(zi) and ψij(zi, zj) are computed using the ex-
tracted features X and q. Then, the recurrent inference lay-
ers run for T steps to get the structured marginal probability
p(zi = 1|X, q) = b(T )
(zi = 1), which is then used to com-
pute the structured context ˆc with Eq. 5. We also compute
a unstructured context ˜c with Eq. 1 by replacing Ug(xi, q)
in Eq. 3 with ψi(zi = 1). In the classiﬁer, the contexts are
both pooled with the question to get

i

ˆs = g(ˆc, q; ˆWc, ˆWq),
˜s = g(˜c, q; ˜Wc, ˜Wq),
(17)
where ˆWc, ˜Wc ∈ Rnc×nI , ˆWq, ˜Wq ∈ Rnc×nQ. The an-
swer is predicted with

(16)

a = arg max
k∈ΩK

softmax(wk[ˆsT , ˜sT ]T ),

(18)

where wk is the k-th row of W ∈ RK×2nc, K is the num-
ber of answers, ΩK is the answer space with up to K an-
swers.

4. Experiments

4.1. Datasets

The SHAPES dataset [2] is a synthetic dataset consist-
ing of images containing 3 basic shapes in 3 different colors
with a resolution of 30×30, and queries about the arrange-
ments of the basic shapes, as shown in Fig. 3. The answer
is “yes” when the image satisﬁes the query, and “no” other-
wise. There are 3 different lengths of queries. The original
dataset [1] has 14592 and 1024 image/question pairs for the
training and test sets. All the queries in the test set do not
appear in the training set.

The CLEVR dataset [13] is a much more complex but
unbiased synthetic dataset aiming at testing visual abilities
such as counting, comparing and logical reasoning. It con-
sists of 100,000 images of simple 3D objects with random
shapes, sizes, materials, colors and positions with a reso-
lution of 320×480, and nearly a million natural language
questions, 853,554 of which are unique. The questions can
be categorized into 5 general types: exist, count, compare
integer, query attribute, and compare attribute. There are
699,989 training questions, 149,991 validation questions
and 149,988 test questions. The vocabulary sizes for the
questions and answers are 82 and 28 respectively.

The VQA real-image dataset [3] is a comprehensive
dataset which requires knowledge beyond the dataset to an-
swer all the questions correctly. It has about 204,721 images

from MSCOCO [23] each with 3 natural language ques-
tions, and each question has 10 answers collected from on-
line workers. It consists of 3 splits: train, val and test,
each of which has 248,349, 121,512 and 244,302 questions
respectively. test-dev is a subset of test, which has
60,864 questions. We keep a collection of 2,000 most fre-
quent answers from the union of train and val, and ig-
nore questions with no answers from this collection, which
leaves us 334,554 samples for training. With the same pre-
processing procedure as [8, 17], we also get 837,298 train-
ing samples from Visual Genome [21] for augmentation.

4.2. Model Conﬁguration and Training

For extracting image features, we use a 2-layer LeNet
trained with the whole network on SHAPES as in [1],
and ImageNet-pretrained ResNets [10] on CLEVR and the
VQA dataset. For sentence embedding, we use single-layer
GRU. On the SHAPES dataset, we set nc = 128, nQ =
128, nI = 50, M = 9. On CLEVR, following [13], we re-
size the input images to 224 × 224, and use feature maps at
the res4b22 layer of ResNet-101 (nI = 1024, M = 196)
and the res5c layer of ResNet-152 (nI = 2048, M = 49)
in different experiments. We also set nQ = 2048, compa-
rable to the 2-layer LSTM with 1024 units per layer used in
[13]. On the VQA dataset, we ﬁx nc = 1200. Images are
resized to 448 × 448 and we use the feature at the res5c
layer of ResNet-152 (nI = 2048, M = 196 ), the same as
[24, 8, 17]. We set nQ = 2400 since we use the pre-trained
skip-thought vector [20] provided by [17] as initialization.
For training, we implement our network with MXNet
[5]. In all 3 tasks, we use the Adam optimizer [19] with
the default setting except for the learning rate, which is
picked using grid search. We adopt Bayesian dropout [9]
for GRU’s as in [17], and apply dropout [33] before every
other fully connected layer. On SHAPES and CLEVR, we
ﬁnd setting both dropout probability to 0.2 to be optimal,
while on the VQA dataset, setting a small Bayesian dropout
0.25 for the GRU and a large dropout of 0.5 for the other
parts achieved the optimal results. In addition, we use an-
swer sampling by default on the VQA dataset as in [8, 17].

4.3. Visualization of ERF

To visualize the ERF, we need to compute the inﬂuence
of a pixel Iij ∈ R3 on the entry yn
rc, the feature at (r, c)
of the n-th channel in a certain conv layer, represented by
rc/∂Iij(cid:107). As in [25], we assume a loss function ln
(cid:107)∂yn
rc
which is related only to channel yn
rc = 1
and ∂ln
rc/∂Iij =
∂ln
rc/∂Iij can be computed efﬁciently by
DL frameworks. Finally, we draw the heat map of the total
effect of a subset ΩC of channels:

ij = 0 for i (cid:54)= r or c (cid:54)= j, so that ∂yn

rc/∂yn
rc/∂Iij, since ∂ln

rc, i.e., ∂ln

rc/∂yn

Eij =

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

(cid:88)

n∈ΩC

(cid:19)2

(cid:18) ∂ln
rc
∂Iij

(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)
(cid:13)

.

(19)

amount of data as [1]. This may because [1] uses a parser
to understand the queries with guaranteed correctness on
this dataset, while we have to train the GRU to understand
the queries from scratch. The parser-based method may
not perform well in more general tasks such as the VQA
dataset, since they found using fewer modules on the VQA
dataset turned out to be better, but our RNN-based approach
should generalize better with enough training data. So we
generate more data with the same answer distributions for
each query as [1] to train and test our model, and re-trained
their model using the released code. We name the origi-
nal dataset small, and the newly generated datasets with
2 and 3 times as much data in both training and test sets as
medium and large respectively. We ﬁnd with more train-
ing data, our model becomes competitive with [1] and the
MF-G2 model surpasses it on both medium and large, as
shown in Table 1. Our models are extremely good at han-
dling length-4 queries, which looks for object arrangements
in 4-neighborhood, as demonstrated in Fig. 3. The high ac-
curacy also implies the model is capable of set theory rea-
soning, since it achieved high test accuracy with length-3
queries which contain self-conﬂict queries such as is red
green, which aims to ﬁnd an object that is both red and
green. For complex queries, such as is red below below
green, which aims to ﬁnd a red object below another object
that is below a green object, it is not as competitive as [1],
probably because the GRU in our model has not generalized
to higher order logic.

4.4.2 On CLEVR

In this part, we study the role of different visual features
and different kinds of attentions on the performance, and
test our best models on the test set, as shown in Table 2.
Our best model surpasses the best baseline model in [13] by
more than 9.5% on the test set. Both MF and LBP outper-
form SM and SIG, demonstrating the effectiveness of our
method. The maximum margin of MF/LBP vs. SIG on
overall accuracy is 2.62% and 1.33% with the ResNet-152
and ResNet-101 features respectively. The most signiﬁcant
improvement of MF/LBP over other models is on Com-
pare Attribute, which involves comparing speciﬁc attributes
of objects speciﬁed by spatial relations with other objects.
This also proves that our model alleviates the problem of
previous methods of ignoring arrangements of regions. Fur-
ther, we show the receptive ﬁelds of the 2 selected layers on
the test set in Fig. 4. In each image, we choose the feature
vector closest to the center, where there is a higher chance
for objects to appear. Still, both of them only occupy a small
portion of the image, indicating the importance of consider-
ing the structure of regions. Overall, the performance with
res4b22 features is better than that with res5c features.
From the ERF point of view, the ERF of res5c has more

Figure 3: Visualization of MF-G2 and LBP-G2 on the test set of
large. b(0) or ψi represents the initial attention, b(3) or b repre-
sents the reﬁned attention after MF or LBP. The query looks for a
green object under a circle.

small

large

medium NMN

Query Length
% of test set
NMN[2]
SIG-G2
MF-G2
LBP-G2

SIG-G2
MF-G2
LBP-G2
NMN
SIG-G2
MF-G2
LBP-G2

3
12.5
91.4
57.0
53.1
63.3
99.2
68.8
98.0
87.1
99.7
93.2
99.7
95.1

4
62.5
95.6
70.5
71.4
72.2
92.1
79.6
99.6
99.5
94.2
95.6
99.9
100

5
25
92.6
66.8
66.0
62.5
85.2
73.8
71.5
71.9
91.2
72.5
79.2
78.9

All
-
94.3
67.9
67.8
68.7
91.3
76.8
92.4
91.0
94.1
89.5
94.7
94.1

Table 1: Accuracy on SHAPES.

4.4. Results and Analysis

We perform experiments on the 3 datasets, in which we
ﬁx the general structure except for the visual attention mod-
els, to quantify the role of structured attention in our model
and the best conﬁguration for it. We will use the following
abbreviations to distinguish the models we implemented:
• SM/SIG: 1-glimpse softmax or sigmoid attention.

• MF/LBP: 1-glimpse multivariate attention with a MF

or LBP recurrent layer and a default T = 3.

• MODEL-G2: 2-glimpses with a default T = 3, where

MODEL=SIG,MF or LBP is the attention model.

• MF-SIG/LBP-SIG: 2-glimpse model by concatenating
a MF or LBP attention with a SIG attention, as men-
tioned in Section 3.4.

• MODEL-Tn: MODEL with T = n inference steps.

4.4.1 On SHAPES

In this part, we will look into the inﬂuence of the volume
of the data on our model’s generalization, and compare the
performance of SIG-G2, MF-G2 and LBP-G2 models. We
ﬁnd it is difﬁcult for all 3 models to generalize with the same

CLEVR validation

Table 3: Results of the Open Ended task on test-dev.

res5c on CLEVR res5c on CLEVR res5c on MSCOCO

Figure 4: The average ERF [25] of 32 channels chosen at regular
intervals, on 15000 images from the CLEVR test set and 52500
images from the MSCOCO test set with resolution of 224 × 224
and 448 × 448 respectively. The ERF images are smoothed with
σ = 4 Gaussian kernels.

All

Exist Count

CI

QA

CA

res5c
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
SM
SIG
MF
LBP
MF-SIG
LBP-SIG

res4b22
MCB[13]
SAN[13]
MF-SIG
LBP-SIG

68.80
70.52
73.14
72.30
73.19
73.33

75.63
75.32
76.65
76.21
77.4
77.97

51.4
68.5
77.57
78.04

73.20
73.90
76.46
76.32
76.53
77.50

77.69
76.54
77.90
78.97
79.8
79.7

63.4
71.1
80.05
79.63

CLEVR validation

53.16
53.89
56.89
54.92
56.22
56.39

57.79
58.93
58.87
57.52
61.0
61.39

76.52
76.52
77.43
77.50
78.56
77.97

78.63
78.12
80.48
80.14
79.3
80.17

CLEVR test
63.3
42.1
73.5
52.2
80.08
60.69
80.69
61.27

81.58
82.46
83.72
83.35
84.23
84.09

87.76
87.94
88.10
87.90
88.0
88.54

49.0
85.2
88.16
88.59

56.77
63.06
68.76
67.54
68.34
68.70

71.83
69.38
74.34
73.43
75.1
76.31

60.0
52.2
75.27
76.28

Table 2: Accuracy on CLEVR. CI, QA, CA stand for Count Inte-
ger, Query Attribute and Compare Attribute respectively. The top
half uses ResNet-152 features and the bottom half uses ResNet-
101 features. Our best model uses the same visual feature as [13].

than twice the area as the ERF of res4b22. As a result,
the feature vector of res5c may require more than twice
the number of parameters to represent same amount of in-
formation in this region as res4b22, but its has only twice.

4.4.3 On the VQA dataset

Since we have found MF-SIG and LBP-SIG are the best on
CLEVR, in this part, we mainly compare the two models
with different T . Notice now the total number of glimpses
is the same as MCB [8] and MLB [17], and both of them use
res5c features and better feature pooling methods. The
optimal choice in these experiments is MF-SIG-T3, which
is 0.92% higher in overall accuracy than the previous best
method [17], and outperforms previous methods on all 3
general categories of questions. We then use external data
from Visual Genome to train MF-SIG-T3 and MF-T3, in

All
64.7
65.08
65.90
65.89
66.00
65.81
65.93
65.90
65.81
65.73
65.4
65.84
67.17
67.19

Model
MCB[8]
MLB[17]
MF-SIG-T1
MF-SIG-T2
MF-SIG-T3
MF-SIG-T4
LBP-SIG-T1
LBP-SIG-T2
LBP-SIG-T3
LBP-SIG-T4
MCB+VG[8]
MLB+VG[17]
MF+VG
MF-SIG+VG
On test-dev2017 of VQA2.0
MF-SIG+VG

Y/N
82.5
84.14
84.22
84.21
84.33
84.22
84.31
84.23
84.05
84.08
82.3
83.87
84.77
84.71

81.29

64.73

No.
37.6
38.21
39.51
39.57
39.34
38.96
39.27
39.70
39.76
38.87
37.2
37.87
39.71
40.58

Other
55.6
54.87
56.22
56.20
56.37
56.16
56.26
56.16
56.12
56.13
57.4
56.76
58.34
58.24

42.99

55.55

Open Ended

Single Model
SMem[38]
SAN[40]
D-NMN[1]
ACK[36]
FDA[11]
QRU[22]
HYBRID[14]
DMN+[37]
MRN[16]
HieCoAtt[24]
RAU[28]
MLB[17]
MF-SIG-T3
Ensemble Model
MCB[8]
MLB[17]
Ours
Ours test2017

All
58.24
58.85
59.4
59.44
59.54
60.76
60.06
60.36
61.84
62.06
63.2
65.07
65.88

66.47
66.89
68.14
65.84

Y/N
80.8
79.11
81.1
81.07
81.34
-
80.34
80.43
82.39
79.95
81.7
84.02
84.42

83.24
84.61
85.41
81.85

No.
37.53
36.41
38.6
37.12
35.67
-
37.82
36.82
38.23
38.22
38.2
37.90
38.94

39.47
39.07
40.99
43.64

MC

All
-
-
-
-
64.18
65.43
-
-
66.33
66.07
67.3
68.89
70.33

70.10
70.29
72.08
-

Other
43.48
46.42
45.5
45.83
46.10
-
47.56
48.33
49.41
51.95
52.8
54.77
55.89

58.00
57.79
59.27
57.07

Table 4: Results of the Open Ended and Multiple Choice tasks
on test. We compare the accuracy of single models (without
augmentation) and ensemble models with published methods.

which MF-SIG surpassed MLB under the same condition
by 1.35%. The accuracy boost of our model is higher than
MCB and MLB, showing that our model has higher capac-
ity. The LBP models, which performs better than MF layers
on CLEVR, turns out to be worse on this dataset, and T = 1
is the optimal choice for LBP. We also ﬁnd the single MF at-
tention model, which should not be as powerful as MF-SIG,
achieved 67.17% accuracy with augmentation. These might
be caused by the bias of the current VQA dataset [3], where
there are questions with ﬁxed answers across all involved
images. We also show the results on test, as shown in Ta-
ble 4. Our model is the best among published methods with-
out external data. With an ensemble of 3 MF-T3 and 4 MF-
SIG-T3 models, we achieve 68.18% accuracy on test,
1.25% higher than best published ensemble model on the

Figure 5: Two instances of different attentions on CLEVR, where
the SIG model gives wrong answers but MF-SIG and LBP-SIG
both give the correct answer. For each instance, from left to right,
the ﬁrst row to the second row, the images are: input image, b(0)
of MF-SIG, b(3) of MF-SIG, ψi(zi) of LBP-SIG, b of LBP-SIG,
attention of SIG. Notations are the same as in Fig. 3. Best viewed
in color.

Open Ended task. By the date of submission, we rank the
second on the leaderboard of Open Ended task and the ﬁrst
on that of the Multiple Choice task. The champion on Open
Ended has an accuracy of 69.94% but the method is not pub-
lished. We have also recorded our model’s performance on
the test-dev2017 and test2017 of VQA2.0 in Table
3 and 4. Accuracy on test2017 is achieved with 8 snap-
shots from 4 models with different learning rates.

4.4.4 Qualitative Results

We demonstrate some attention maps on CLEVR and the
VQA dataset to analyze the behavior of the proposed mod-
els. Fig. 5 shows 2 instances where the SIG model failed but
both MF and LBP succeeded. We ﬁnd the MF-SIG model
has learned interesting patterns where its attention often
covers the background surrounding the target initially, but
converges to the target after iterative inference. This phe-
nomenon almost never happens with the LBP-SIG model,
which usually has better initializations that contained the
target region. The shortcoming of the unstructured SIG
model is also exposed in the 2 instances, where it tends to
get stuck with the key nouns of the question. Fig. 6 demon-
strates 3 instances of the MF-SIG model together with the
effective receptive ﬁeld. The model gives 2 correct answers
for the ﬁrst 2 instances and 1 wrong answer for the last in-

Figure 6: Some instances in the VQA dataset. The ERFs locate at
the target region in row 1 and 3, and at at initial attention in row 2.
Best viewed in color.

stance. In the ﬁrst instance, the ERF at the target should
be enough to encode the relations. The initial attention in-
volves some extra areas due to the key word “luggage”, but
it manages to converge to the most relevant region. In the
second instance, the initial attention is wrong, as we can
see the ERF at the initial attention does not overlap with the
target, but with the help of MF, the ﬁnal attention captures
the relation “in the front” and gives an acceptable answer.
In the third instance, the ERF at the target region is very
weak on the keyword “bulb”, which means the feature vec-
tor does not encode this concept, probably due to the size of
the bulb. The model fails to attend to the right region and
gives a popular answer “2” (3rd most popular answer on the
VQA dataset) according to the type of the question.

5. Conclusion

In this paper, we propose a novel structured visual at-
tention mechanism for VQA, which models attention with
binary latent variables and a grid-structured CRF over these
variables. Inference in the CRF is implemented as recurrent
layers in neural networks. Experimental results demonstrate
that the proposed method is capable of capturing the seman-
tic structure of the image in accordance with the question,
which alleviates the problem of unstructured attention that
captures only the key nouns in the questions. As a result,
our method achieves state-of-the-art accuracy on three chal-
lenging datasets. Although structured visual attention does
not solve all problems in VQA, we argue that it should be
an indispensable module for VQA in the future.

References

[1] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Learning
to compose neural networks for question answering. NAACL,
2016.

[2] J. Andreas, M. Rohrbach, T. Darrell, and D. Klein. Neural

module networks. In CVPR, 2016.

[3] S. Antol, A. Agrawal, J. Lu, M. Mitchell, D. Batra,
C. Lawrence Zitnick, and D. Parikh. VQA: Visual question
answering. In ICCV, 2015.

[4] L.-C. Chen, A. G. Schwing, A. L. Yuille, and R. Urtasun.

Learning deep structured models. In ICML, 2015.

[5] T. Chen, M. Li, Y. Li, M. Lin, N. Wang, M. Wang, T. Xiao,
B. Xu, C. Zhang, and Z. Zhang. Mxnet: A ﬂexible and efﬁ-
cient machine learning library for heterogeneous distributed
systems. arXiv preprint arXiv:1512.01274, 2015.

[6] A. Das, H. Agrawal, C. L. Zitnick, D. Parikh, and D. Batra.
Human attention in visual question answering: Do humans
and deep networks look at the same regions? EMNLP, 2016.
[7] T.-M.-T. Do and T. Artieres. Neural conditional random

ﬁelds. In AISTATS, 2010.

[8] A. Fukui, D. H. Park, D. Yang, A. Rohrbach, T. Darrell,
and M. Rohrbach. Multimodal compact bilinear pooling for
visual question answering and visual grounding. EMNLP,
2016.

[9] Y. Gal and Z. Ghahramani. A theoretically grounded ap-
plication of dropout in recurrent neural networks. In NIPS,
2016.

[10] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning

for image recognition. In CVPR, 2016.

[11] I. Ilievski, S. Yan, and J. Feng. A focused dynamic atten-
tion model for visual question answering. arXiv preprint
arXiv:1604.01485, 2016.

[12] M. Jaderberg, K. Simonyan, A. Vedaldi, and A. Zisserman.
Deep structured output learning for unconstrained text recog-
nition. ICLR, 2015.

[13] J. Johnson, B. Hariharan, L. van der Maaten, L. Fei-Fei,
C. L. Zitnick, and R. Girshick. Clevr: A diagnostic dataset
for compositional language and elementary visual reasoning.
CVPR, 2017.

[14] K. Kaﬂe and C. Kanan. Answer-type prediction for visual

question answering. In CVPR, 2016.

[15] K. Kaﬂe and C. Kanan.

Visual question answering:
Datasets, algorithms, and future challenges. arXiv preprint
arXiv:1610.01465, 2016.

[16] J.-H. Kim, S.-W. Lee, D. Kwak, M.-O. Heo, J. Kim, J.-W.
Ha, and B.-T. Zhang. Multimodal residual learning for visual
QA. In NIPS, 2016.

[17] J.-H. Kim, K.-W. On, J. Kim, J.-W. Ha, and B.-T. Zhang.
ICLR,

Hadamard product for low-rank bilinear pooling.
2017.

[18] Y. Kim, C. Denton, L. Hoang, and A. M. Rush. Structured

attention networks. ICLR, 2017.

[19] D. Kingma and J. Ba. Adam: A method for stochastic opti-

mization. ICLR, 2015.

[20] R. Kiros, Y. Zhu, R. R. Salakhutdinov, R. Zemel, R. Urtasun,
A. Torralba, and S. Fidler. Skip-thought vectors. In NIPS,
2015.

[21] R. Krishna, Y. Zhu, O. Groth, J. Johnson, K. Hata, J. Kravitz,
S. Chen, Y. Kalantidis, L.-J. Li, D. A. Shamma, et al. Vi-
sual genome: Connecting language and vision using crowd-
sourced dense image annotations. IJCV, 2016.

[22] R. Li and J. Jia. Visual question answering with question

representation update (QRU). In NIPS, 2016.

[23] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Doll´ar, and C. L. Zitnick. Microsoft COCO: Com-
mon objects in context. In ECCV, 2014.

[24] J. Lu, J. Yang, D. Batra, and D. Parikh. Hierarchical
question-image co-attention for visual question answering.
In NIPS, 2016.

[25] W. Luo, Y. Li, R. Urtasun, and R. Zemel. Understanding
the effective receptive ﬁeld in deep convolutional neural net-
works. In NIPS, 2016.

[26] M. Malinowski and M. Fritz. A multi-world approach to
question answering about real-world scenes based on uncer-
tain input. In NIPS, 2014.

[27] H. Nam, J.-W. Ha, and J. Kim. Dual attention networks
arXiv preprint

for multimodal reasoning and matching.
arXiv:1611.00471, 2016.

[28] H. Noh and B. Han. Training recurrent answering units
arXiv preprint

with joint loss minimization for VQA.
arXiv:1606.03647, 2016.

[29] S. Nowozin, C. H. Lampert, et al. Structured learning and
prediction in computer vision. Foundations and Trends R(cid:13) in
Computer Graphics and Vision, 6(3–4):185–365, 2011.
[30] J. Peng, L. Bo, and J. Xu. Conditional neural ﬁelds. In NIPS,

2009.

[31] K. J. Shih, S. Singh, and D. Hoiem. Where to look: Focus
regions for visual question answering. In CVPR, 2016.
[32] S. E. Shimony. Finding maps for belief networks is np-hard.

Artiﬁcial Intelligence, 68(2):399–410, 1994.

[33] N. Srivastava, G. E. Hinton, A. Krizhevsky, I. Sutskever, and
R. Salakhutdinov. Dropout: a simple way to prevent neural
networks from overﬁtting. JMLR, 2014.

[34] K. Tu, M. Meng, M. W. Lee, T. E. Choe, and S.-C. Zhu. Joint
video and text parsing for understanding events and answer-
ing queries. IEEE MultiMedia, 2014.

[35] Y. Weiss. Comparing the mean ﬁeld method and belief prop-
agation for approximate inference in mrfs. Advanced Mean
Field MethodsTheory and Practice, pages 229–240, 2001.

[36] Q. Wu, P. Wang, C. Shen, A. Dick, and A. van den Hen-
gel. Ask me anything: Free-form visual question answering
based on knowledge from external sources. In CVPR, 2016.
[37] C. Xiong, S. Merity, and R. Socher. Dynamic memory net-
ICML,

works for visual and textual question answering.
1603, 2016.

[38] H. Xu and K. Saenko. Ask, attend and answer: Exploring
question-guided spatial attention for visual question answer-
ing. In ECCV, 2016.

[39] K. Xu, J. Ba, R. Kiros, K. Cho, A. C. Courville, R. Salakhut-
dinov, R. S. Zemel, and Y. Bengio. Show, attend and tell:
Neural image caption generation with visual attention.
In
ICML, 2015.

[40] Z. Yang, X. He, J. Gao, L. Deng, and A. Smola. Stacked
attention networks for image question answering. In CVPR,
2016.

[41] T. Yeh, J. J. Lee, and T. Darrell. Photo-based question an-

swering. In ACMMM, 2008.

[42] S. Zheng, S. Jayasumana, B. Romera-Paredes, V. Vineet,
Z. Su, D. Du, C. Huang, and P. H. Torr. Conditional ran-
dom ﬁelds as recurrent neural networks. In ICCV, 2015.
[43] C. L. Zitnick and P. Doll´ar. Edge boxes: Locating object

proposals from edges. In ECCV, 2014.

