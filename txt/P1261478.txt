Real-time Automatic Word Segmentation for User-generated Text

Won Ik Cho1, Sung Jun Cheon1, Woo Hyun Kang1, Ji Won Kim2, and Nam Soo Kim1
Department of Electrical and Computer Engineering and INMC1
Department of Linguistics2
Seoul National University, 1 Gwanak-ro, Gwanak-gu, Seoul, Korea, 08826
{wicho,sjcheon,whkang}@hi.snu.ac.kr, {kimjiwon08,nkim}@snu.ac.kr

9
1
0
2
 
y
a
M
 
7
 
 
]
L
C
.
s
c
[
 
 
2
v
3
1
1
3
1
.
0
1
8
1
:
v
i
X
r
a

Abstract

For readability and possibly for disambigua-
tion, appropriate word segmentation is rec-
ommended for written text. In this paper, we
propose a real-time assistive technology that
utilizes an automatic segmentation. The lan-
guage investigated is Korean, a head-ﬁnal lan-
guage with various morpho-syllabic blocks as
characters. The training scheme is fully neu-
ral network-based and straightforward. Be-
sides, we show how the proposed system can
be utilized in a web-based real-time revi-
sion for a user-generated text. With qualita-
tive and quantitative comparison with widely
used text processing toolkits, we show the re-
liability of the proposed system and how it
ﬁts with conversation-style and non-canonical
texts. The demonstration is available online1.

1

Introduction

The study on word segmentation2 has been done
for many languages including Hindi (Garg et al.,
2010), Arabic (Lee et al., 2003), Chinese (Chen
et al., 2015a), Japanese (Sassano, 2002), and Ko-
rean (Lee et al., 2002). The necessity for segmen-
tation depends on language; e.g., in Japanese, it is
not obligatory. However, in Korean, the spaces be-
tween words3 are indispensable for readability of
the text (Lee and Kim, 2013) and possibly for the
naturalness of the speech generated from the text.
Nonetheless, in real-world language life where
input through a device is universal, giving space
with an additional entry can be an annoying or
time-consuming process. For example, in a real-
time chatting via desktop or mobile keyboards,
some users tend to enter non-segmented texts

1https://github.com/warnikchow/raws
2Although spacing is more appropriate for Korean, we use

segmentation instead for consistency.

3The unit for spacing in Korean is called eojeol (어절).
It corresponds with word in English but differs in that it is a
composition of morphemes rather than an inﬂection.

1:

an

Instagram of

Figure
elderly Korean
Youtube star, Makrae Park (Image by Visualdive;
http://www.visualdive.com/). Fluent utilization of
mechanical segmentation system can be difﬁcult for
some digitally marginalized people so that the resulting
document lacks readability.

which lack in readability and even sometimes
cause ambiguity. This originates mainly in the an-
noyance, but sometimes it is a challenging issue
for digitally marginalized people such as the hand-
icapped or the elderly (Figure 1). We were inspired
by the technical needs that the readability issue
is expected to be resolved with a web-based real-
time automatic segmentation.

In this paper, we propose an assistive technol-
ogy that aids device users to assign proper spaces
for non-segmented documents. The system is dif-
ferent from conventional correction tools which
evaluate the suitability of the input text concerning
the standard language rules and suggest a gram-
matically appropriate one. In a slightly different
perspective, the proposed system assigns proper
spaces between the characters of a non-segmented
input utterance, in a non-invasive way that avoids
distortion in the user’s intention. Although the

resulting segmentation is not strictly correct4, it
gives sufﬁcient readability and provides natural-
ness in the viewpoint of speech production.

In the following section, we take a look at the
literature on word and hashtag segmentation. In
Section 3, the architecture of the proposed sys-
tem is described with a detailed implementation
scheme. Afterward, the system is evaluated quan-
titatively and qualitatively with a manually created
dataset and several test sentences.

2 Related Work

Many studies on automatic segmentation of Ko-
rean text have dealt with sequential information on
the history of syllables, using statistics-based ap-
proaches on the previous words, correctly predict-
ing the space that follows each syllabic block (Lee
et al., 2002, 2014). This issue is different from
the studies on morphological analysis (Lee, 2011),
though some approaches utilized decomposition
into morphemes (Lee et al., 2002). In a recent im-
plementation of KoSpacing (Jeon, 2018), convo-
lutional neural network (CNN) (Kim, 2014) and
bidirectional gated recurrent unit (BiGRU) (Chen
et al., 2015b) were employed, utilizing various
news articles in training.

For Japanese, which has a similar syntax (head-
ﬁnal) with Korean, traditional approaches to the
segmentation of the text and Kanji sequence
adopted statistical models (Sassano, 2002; Ando
and Lee, 2003). However, contextual information
does not seem to be fully utilized so far.

For Chinese word segmentation, many contex-
tual approaches have been suggested, although the
embedding methodology and syntax are different
from that of Korean. In Chen et al. (2015a), con-
text information was aggregated via a gated recul-
sive neural network to predict a space between
characters. In Cai and Zhao (2016), a gated combi-
nation neural network was used over characters to
produce distributed representations of word candi-
dates.

It is notable that the segmentation technique for
non-spaced document evolved briskly in the lan-
guages with indecisive spacings such as Chinese,
Japanese, and Korean (CJK). Thus, unlike CJK, it
is difﬁcult to infer what the English counterpart
of word segmentation should be. Taking into ac-

4In Korean, not strictly obeying the segmentation (spac-
ing) rules is tolerated in the informal conversation-style sen-
tences.

count the differences coming from the character
systems, we concluded that it approximately cor-
responds with hashtag segmentation that is widely
used for various analysis tasks targeting social me-
dia text, including Facebook comments, Tweets,
and Instagram (Bansal et al., 2015; Cho et al.,
2018). The importance of using hashtag informa-
tion in social media text analysis was emphasized
in Chang (2010) but the study on its segmenta-
tion boosted since Berardi et al. (2011). Early ap-
proaches utilized lexicon-based identiﬁcation and
statistical models such as the Viterbi algorithm
(Bansal et al., 2015; Baziotis et al., 2017), and are
still used widely due to their speed and accuracy.
Many of the algorithms are still actively adopted
in the word segmentation of CJK.

3 Proposed System

In this section, referring to the previous studies,
we investigate the adequate architecture that gen-
erates proper segmentation for non-canonical sen-
tences. The proposed system incorporates mainly
three features: (1) a conversation-style and non-
normalized/non-standard corpus used for training,
(2) a deep learning-based automatic segmentation
module, and (3) the potential to be utilized in a
web interface that is applicable for various social
media and microblogs.

3.1 Corpus

The corpus consists of dialogs in Korean drama
scripts which are semi-automatically collected,
with punctuations and narration removed. It con-
tains 2M utterances of various length and involves
a wide variety of topics. The number of appear-
ing characters were found out to be around 2,500,
which incorporates almost all the Korean charac-
ters that are used in real life. Several characteris-
tics distinguish our dataset from the corpora con-
ventionally used:

(i) Non-standardness: The script
is highly
conversation-style, and it contains a large portion
of dialogs that do not ﬁt with standard (Contempo-
rary Seoul) Korean. It also includes dialects, mid-
dle age Korean, and transliteration of foreign lan-
guages (e.g., Japanese and Chinese).

(ii) Non-normalizedness: A signiﬁcant portion
of the sentences contain non-normalized expres-
sions; it contains murmur, new words, slangs, in-
complete sentences, etc.

Figure 2: The architecture of the automatic segmentation module. The input sentence means “Mother put soup into
the bottle”, but if it were not for the space ﬂag in the third place of the inference module, the sentence could have
meant “I put the skin of mother into the bottle”, which is syntactically possible output for an ambiguous sentence
but awkward. Lmax denotes the maximum character length of the input.

(iii) Weak segmentation rules: Word (eojeol)
segmentation does not strictly follow the standard
Korean as in literary language, but the corpus was
checked with the spaces that are inappropriately
inserted. The omission of the spacing was toler-
ated in a manner that does not induce awkward-
ness regarding prosody of the sentence if spoken.

(iv) Allows errata: Errata were not corrected if
the pronunciation does not affect the semantics of
the sentence; this can be a strong point of the word
segmentation of user-generated text.

3.2 Automatic segmentation module

Automatic segmentation module which is inspired
by the encoder-decoder network (Cho et al., 2014)
consists of two submodules, respectively manag-
ing sentence encoding and space inference.

3.2.1 Character-based sentence encoding

To clarify the symbol system of the Korean lan-
guage, we introduce the Korean character Hangul
and its components (alphabet) Jamo. Roughly, Ja
denotes the consonants and mo denotes the vow-
els, making up a morpho-syllabic block of Hangul
by {Syllable: CV(C)}. Note that the blocks are dif-
ferent from morphemes, which can be whatever
form of a combination of Jamo.

The vector embedding of the characters was
done using skip-gram (Mikolov et al., 2013)
and subword embedding of fastText (Bojanowski

et al., 2016), not the one-hot encoding, utilizing
the corpus constructed in Section 3.1. It bases on
the conclusion that the sparsely embedded vec-
tors seemed inefﬁcient for either CNN and Bidi-
rectional long short-term memory (BiLSTM), in
the sense that they lack distributional information
and even require high computation. Also, context-
related properties of distributional semantics were
expected to compensate for the noise of user-
generated text such as errata.

In the form of a non-segmented sequence of
character vectors, the sentence is fed as an input to
the CNN and BiLSTM. They ﬁnally yield a ﬂat-
tened vector an as output layer of each network,
which are concatenated to make up encoding of
the whole input sentence (Figure 2). Roughly, this
conveys the concept of our study as a language-
independent contextual segmentation that can help
disambiguate challenging composites. That is, the
system segments a sentence into the words con-
sidering the whole composition, not only the his-
tory or the neighborhood. We expect CNN and
BiLSTM play an essential role in this process, by
providing distributional and sequential informa-
tion of the sentence. The speciﬁcation regarding
the model architecture is stated in Table 1.

3.2.2 Decoder with a binary output

The backend of the segmentation module includes
a decoder network that assigns proper segmen-

Figure 3: A brief sketch on the web-based segmentation service.

Corpus

2,000,000 (#char: >2,500)

Speciﬁcation

Instance of
utterances
Input size
(single channel)
Filters

Window

# Conv layer

Input size

(Lmax, 100, 1)

32
Conv layer: (3, 100)
Max pooling: (2,1)
2

(Lmax, 100)

Hidden layer nodes
Hidden layer nodes
# Layers
Optimizer
Batch size
Dropout
Activation

32
128
2
Adam (0.0005)
128
0.3 (for MLPs)
ReLU (MLPs, CNN, output)

Loss function

Mean squared error (MSE)

Table 1: System speciﬁcation.

CNN

BiLSTM

MLP

Others

tation for a given sequence of character vectors.
With the vectorized encoding of the sentence as
an input, the decoder network infers a binary se-
quence that indicates if there should be a space
just after each character. Note that the length of the
output sequence equals to L − 1 where L denotes
the number of characters in the input sentence (Ta-
ble 1).

3.3 Application to web interface

The last feature of the proposed system is the
applicability as an assistive interface for various
web-based services such as Instagram and Tele-
gram. Although not directly related to the perfor-
mance of the system, mainly two issues are argued
for industrial potential.

3.3.1 Long sentences

Since the overall architecture deals with the sen-
tences of ﬁxed length Lmax, which is set 100, the
inference of spaces for long sentences requires an
additional procedure. To cover such cases, we ap-

plied an overlap-hopping for the sentences whose
length exceeds Lmax. The overlap length is 30
(characters), and the decision of the segmentation
follows the inference which is done later. For ex-
ample, to simplify the description, if the input is
given ‘A B C D E F G H I J ’. where Lmax is 5,
and overlap length is 1, then the segmentation is
performed in the order of ‘A B C D E’, ‘B C D
E F’ · · · ‘F G H I J’ and then concatenated. This
kind of approach is expected to be more accurate
than just separating the whole sequence into ‘A B
C D E’ and ‘F G H I J’ and performing two times
of segmentation. In the latter process, the contex-
tual information regarding the neighborhood of the
cutting point (between E and F) can be neglected.

3.3.2

Immediate segmentation and
recommendation

The interface should be user-friendly considering
the class of people the assistive technology targets.
Also, since the system incorporates a deep struc-
ture, the issue of computation should not be over-
looked. Thus, we suggest a system which acts as
either an immediate segmenter or a segmentation
recommender, depending on the option user se-
lects (possibly automatically set considering user
status).

Since a large portion of web-based services ac-
companies a procedure of restoring query on the
server, a non-segmented text the user generates
can be primarily fed as an input to the automatic
segmentation module which is running online. If
the user wants an immediate segmentation, the
module can immediately upload a segmented ver-
sion of the sentence. If the user wants a recommen-
dation, the segmented version is returned so that
the user can make a modiﬁcation and conﬁrmation
on it (Figure 3). The latter can be utilized as user
feedback. In real-world usage, spaces given by the
users (not non-segmented, with a few spaces) are
also expected to be adopted as ground truth.

This user-friendly function has a lot to do with
the motivation of this study. It is not concretely
implemented here but is expected to be easily ma-
terialized in the user interface.

4 Experiment

4.1

Implementation

Implementation for the system was done with fast-
Text5 and Keras (Chollet et al., 2015), which were
used for embedding character vectors and making
neural network models respectively. With GTX
Tesla M40 24GB, the training for both systems
took about 30 hours; about two hours per epoch.

In architecture, Lmax was set to 100, consider-
ing the usual length of the utterances and hash-
tags. The input is the feature extracted from a non-
segmented utterance, and the output is a binary
vector that
indicates appropriate segmentation.
Note that the activation and loss function (ReLU,
MSE) were chosen experimentally; for Korean,
using sigmoid resulted in overﬁtting that caused
an awkward segmentation for even a simple com-
posite. We assume this phenomenon comes from
the volume of the character set. The threshold re-
garding MSE was set to 0.5.

4.2 Evaluation

For evaluation, two widely-used text processing
tools, namely (i) a correction module by Naver6
and (ii) KoSpacing7(Jeon, 2018) were adopted.
Naver does not disclose the architecture that is
utilized, but seems to base on a hybrid struc-
ture of rules and statistical models using Korean
word taxonomy, considering the system malfunc-
tion given input with long and non-standard ex-
pressions (e.g., dialect and slangs). KoSpacing
bases on a deep hierarchical structure of CNN and
BiGRU but adopts character n-gram and various
news articles. We treat both modules as a represen-
tative of word-based and character-based toolkit
respectively.

Since the proposed system does not aim strictly
accurate segmentation considering the indecisive-
ness of the Korean word segmentation, we modi-
ﬁed the concept of mean opinion score (MOS) to
evaluate the result which incorporates multiple an-
swers. Provided with three sentences as the out-

5https://pypi.org/project/fasttext/
6goo.gl/mTMLmr
7Demo and model architecture are available in:

put of each system, namely Naver, KoSpacing and
Proposed, 14 Korean subjects were required to as-
sign the rank considering the naturalness of the
segmentation. Assigning the same rank to the out-
puts of more than one systems was allowed8.

For the survey, 30 posts were excerpted from
the Instagram posts of Makrae Park9 (Figure 1,
licensed10). The test posts are not necessarily
single utterances; they contain compound sen-
tences which incorporate scrambling, dialects,
non-normalized expressions, and many errata.
Since the word-based module did not even re-
spond with many of such samples, we consider-
ately chose the posts with which the modules gen-
erate a segmented output.

For the cases where the characters of the output
are corrected due to the function of the module,
the result was modiﬁed so that the characters in
the original text are preserved. Also, taking into
account the output from KoSpacing and Proposed,
we chose the cases where the output for all the
three systems differ with each other11. A sample
post and the output sentences with it are described
in the following part.

The ﬁnal ranking R of each system equals to the
average of the ranks for the whole input utterances.
We propose a system rank S which is deﬁned by:

S =

N + 1 − R
N

for the number of the systems N = 3. The sys-
tem rank was designed to yield 1 for all-ﬁrst place
model and 1

N for the opposite case.

As a result, 0.6809, 0.7142, and 0.7444 were
obtained for Naver, KoSpacing, and Proposed re-
spectively. The result does not imply the supe-
riority of the proposed system towards the con-
ventional toolkits regarding the segmentation ac-
curacy. Instead, it is conveyed that the proposed
system yields quite tolerable segmentation for
the utterances that are non-normalized and non-
standard, mainly due to the characteristics of the
corpus.

8For example, (1,1,3) denotes two 1st-places and one 3rd-

place. Similarly, (1,2,2) denotes two 2nd-places.
9https://www.instagram.com/korea grandma
10It is described in the guideline that the data uploaded by
the users belong to the company, and those are provided for
an academic purpose. Refer to:
https://help.instagram.com/155833707900388

11The survey sheet is available in:

https://github.com/haven-jeon/PyKoSpacing

https://github.com/warnikchow/raws/blob/master/survey.xlsx

Figure 4: A sample post (Original), its romanization, gloss, translation, and output sentences. Some typing errors
of the user are colored in red in the original text but were not reﬂected in the translation. Angmi refers to a dog.
The input for the systems is identical to Original, except for the removal of slashes (‘/’) which were added to help
the readers recognize the sentence boundary.

4.2.1 Qualitative analysis
We introduce three real-life utterances and one in
the test data (Figure 4) that display the advantages
of using the proposed system. Here, for each sen-
tence, original text is provided with proper seg-
mentation, romanization, gloss, and translation.
Then, the input sentence (without segmentation) is
notated, along with the output from the modules.

(1) Original: 나 너 본 지 한 세 달 다 돼 감
na ne pon ci han sey tal ta tway kam
I you meet ci about three months almost has been
It’s been almost three months since we last met.
(informal)
- Input: 나너본지한세달다돼감
- Naver: 나 / 너 / 본 / 지 / 한 / 세 / 달 / 다 / 돼 / 감
- Proposed: 나 / 너 / 본지 / 한 / 세달 / 다 / 돼 / 감
For (1), Naver showed the result that strictly obeys
the segmentation rules. In contrast, Proposed
yields an output in which the characters compris-
ing the phrases are agglutinated. Although strictly
correct output is grammatically appropriate, the
output from the proposed model clusters the sylla-
bles that are syntactically close (e.g., pon-ci (meet-
ci, since last met), sey-tal (three-months)), making
the prosodic durations more natural (in speech).
This seems to be the result inﬂuenced by the prop-
erty of the drama script that the model adopts, of
which the corpora utilized by the other models
might lack.

(2) Original: 아버지 친구분 당선되셨어요
apeci chinkwu-pwun tangsen-toy-sy.ess-e-yo
father friend-HON elect-be-HON.PST-DEC-POL
Father’s friend was elected. (honoriﬁc, polite)
- Input: 아버지친구분당선되셨어요
- KoSpacing: 아버지 / 친구 / 분당선 / 되셨어요
- Proposed: 아버지 / 친구분 / 당선 / 되셨어요
Sentence (2) incorporates morphological and se-
mantic ambiguity; if a space goes in between

‘구 (kwu)’ and ‘분 (pwun)’, not between ‘분
(pwun)’ and ‘당 (tang)’, the sentence meaning
changes to “Father’s friend became Bundang
line12.” which is syntactically acceptable but se-
mantically different (and awkward) from the orig-
inal intention. In the input, KoSpacing inserts a
space between kwu/pwun and Proposed puts be-
tween pwun/tang; in the case of KoSpacing, where
chinkwu (friend) becomes apart with its hon-
oriﬁc sufﬁx pwun and pwun makes up a new noun
phrase pwuntangsen (Bundang line), completely
different meaning is conveyed although the other
part of the output sentence is same as that of Pro-
posed. This kind of segmentation seems to hap-
pen because KoSpacing is trained with the news
articles which more embody the topics regarding
transportation than colloquial expressions.

(3) Original: 뭣이 중헌지도 모름서
mwes-i cwunghen-ci-to molum-se
what-NOM important-NMN13-too ignorant-DEC
You don’t even know what’s important! (dialect)
- Input: 뭣이중헌지도모름서
- Naver: 뭣이중헌지도모름서
- Proposed: 뭣이 / 중헌지도 / 모름서
For (3), Naver did not make response regarding
the unseen data; southeastern dialect which may
not have been incorporated in training corpus. Pro-
posed showed a proper output, without omission
of a character nor a transformation of the sentence.

(4) We display a sample post in the survey sheet.
Given a post from the real Instagram account,
which incorporates non-normalized expressions,
dialects, and errata, the output sentences from the
baseline modules and the proposed system are
listed. Three bold chunks in Proposed denote the
results that are distinct in the proposed model,

12A subway line of Korea.
13Denotes a nominalizer.

which yield the naturalness regarding syntax and
prosody, although the ﬁrst two phrases are not
strictly grammatical.

During the survey, the subjects were asked to
take into account all the appropriate and incor-
rect parts of the output, so that a reasonable out-
come can be obtained. For instance, the under-
lined phrases in KoSpacing and Proposed denote
the ones that are not correct, displaying demerit
of the two systems with respect to Naver mod-
ule in the sample. This led to Proposed scoring
the second place in the given sentence (Naver the
ﬁrst and KoSpacing the third). However, this sin-
gle case does not discourage the motivation of the
proposed system; not to target an accurate correc-
tion of noisy utterance but to assign naturalness
and readability. Although we cannot introduce all
the cases in this paper, generally the proposed sys-
tem exhibited the result that adheres to the goal of
the implementation.

4.3 Discussion

Our study encompasses the following as distin-
guishing features:

• A motivation which originates in the charac-
teristics of Korean script and the need from
the real world

• Corpus, model architecture, and web appli-
cation methodologies that are appropriate for
real-time automatic segmentation of noisy
user-generated Korean text

• A comparative study with the conventional
spacing toolkits; especially a rigorous qual-
itative analysis utilizing sample scripts

We want to note again that our approach differs
from the grammatical correction that can happen
to modify the users’ intent inadvertently. By this,
we can avoid incorrect (or unnecessary) revision
and prevent the users from correcting the mod-
iﬁed sentence once more. Also, overlap-hopping
method applied for long input makes it possible
for the text processing system to deal with the seg-
mentation of large-scale documents. In the future,
the whole context of the document might be able
to be engaged in to deal with the segmentation of
the character sequence that incorporates ambigu-
ity.

5 Conclusion

lized both as a web-based real-time assistive tech-
nology and an analyzing toolkit for noisy user-
generated text. First, we reﬁned Korean drama
scripts, making up 2M lines respectively, in the
way that the segmentation results ﬁt with context
and prosody. Based on them, a deep training ar-
chitecture was constructed to yield an automatic
segmenter of which the performance was veriﬁed
by quantitative and qualitative comparison with
widely used text processing modules. For Korean,
where the strict rule is not necessarily required
to obey in real-time written conversation, we pro-
posed a subjective measure that can compare the
naturalness of the segmentation that the systems
assign to user-generated texts.

Application of this system is not limited to as-
sistive technology for digitally marginalized peo-
ple and hashtag segmentation for the analysis of
noisy texts, as suggested in the paper. For instance,
for Korean, since the system receives any sentence
input and generates the segmented one which ﬁts
with prosody, automatic speech recognition (ASR)
or text-to-speech (TTS) modules of smart devices
may utilize the proposed function as a post- or
pre-processing respectively, to provide more nat-
ural output. Also, since the reliability of the sys-
tem concept was veriﬁed by adopting the language
with sufﬁciently large character set (Korean), it is
expected to be applied to other languages that in-
corporate an adequate number of characters (e.g.,
Chinese and Japanese) and maybe smaller (e.g.,
English). The pre-trained systems for Korean and
English are available online14, and the fastText
character vector dictionary trained with the corpus
is also distributed for the research purpose15.

Acknowledgments

This work was supported by the Technology Inno-
vation Program (10076583, Development of free-
running speech recognition technologies for em-
bedded robot system) funded By the Ministry of
Trade, Industry & Energy (MOTIE, Korea). Also,
the authors appreciate ASAP of Hanyang Univer-
sity, Makrae Park, and Ye Seul Jung for providing
the corpus, motivation, and useful example sen-
tences.

In this paper, we suggested a cross-lingually ap-
plicable word segmentation system that can be uti-

14https://github.com/warnikchow/raws
15Disclosing the corpus is limited due to the copyright.

Franc¸ois Chollet et al. 2015. Keras. https://

github.com/fchollet/keras.

Naresh Kumar Garg, Lakhwinder Kaur, and MK Jin-
Segmentation of handwritten hindi
International Journal of Computer Applica-

dal. 2010.
text.
tions (IJCA), 1(4):22–26.

Heewon Jeon. 2018.
rean word spacing.
haven-jeon/KoSpacing.

Kospacing: Automatic ko-
https://github.com/

Yoon Kim. 2014.

works for sentence classiﬁcation.
arXiv:1408.5882.

Convolutional neural net-
arXiv preprint

Changki Lee, Edward Choi, and Hyunki Kim. 2014.
Balanced korean word spacing with structural svm.
In Proceedings of the 2014 Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP), pages 875–879.

Changki Lee and Hyunki Kim. 2013. Automatic ko-
rean word spacing using pegasos algorithm. Infor-
mation Processing & Management, 49(1):370–379.

Do-Gil Lee, Sang-Zoo Lee, Hae-Chang Rim, and Heui-
Seok Lim. 2002. Automatic word spacing using hid-
den markov model for reﬁning korean text corpora.
In Proceedings of the 3rd workshop on Asian lan-
guage resources and international standardization-
Volume 12, pages 1–7. Association for Computa-
tional Linguistics.

Jae-Sung Lee. 2011. Three-step probabilistic model
for korean morphological analysis. Journal of KI-
ISE: Software and Applications, 38(5):257–268.

Young-Suk Lee, Kishore Papineni, Salim Roukos, Os-
sama Emam, and Hany Hassan. 2003. Language
In Pro-
model based arabic word segmentation.
ceedings of the 41st Annual Meeting on Association
for Computational Linguistics-Volume 1, pages 399–
406. Association for Computational Linguistics.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
In Advances in neural information processing
ity.
systems, pages 3111–3119.

Manabu Sassano. 2002. An empirical study of active
learning with support vector machines for japanese
word segmentation. In Proceedings of the 40th An-
nual Meeting on Association for Computational Lin-
guistics, pages 505–512. Association for Computa-
tional Linguistics.

References

Rie Kubota Ando and Lillian Lee. 2003. Mostly-
unsupervised statistical segmentation of japanese
kanji sequences. Natural Language Engineering,
9(2):127–149.

Piyush Bansal, Romil Bansal, and Vasudeva Varma.
2015. Towards deep semantic analysis of hashtags.
In European Conference on Information Retrieval,
pages 453–464. Springer.

Christos Baziotis, Nikos Pelekis, and Christos Doulk-
eridis. 2017. Datastories at semeval-2017 task
4: Deep lstm with attention for message-level and
In Proceedings of
topic-based sentiment analysis.
the 11th International Workshop on Semantic Eval-
uation (SemEval-2017), pages 747–754.

Giacomo Berardi, Andrea Esuli, Diego Marcheggiani,
and Fabrizio Sebastiani. 2011. Isti@ trec microblog
track 2011: Exploring the use of hashtag segmenta-
tion and text quality ranking. In TREC.

Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2016. Enriching word vectors with
subword information. CoRR, abs/1607.04606.

Deng Cai and Hai Zhao. 2016. Neural word seg-
arXiv preprint

mentation learning for chinese.
arXiv:1606.04300.

Hsia-Ching Chang. 2010. A new perspective on twitter
hashtag use: Diffusion of innovation theory. Pro-
ceedings of the Association for Information Science
and Technology, 47(1):1–4.

Xinchi Chen, Xipeng Qiu, Chenxi Zhu, and Xuanjing
Huang. 2015a. Gated recursive neural network for
In Proceedings of the
chinese word segmentation.
53rd Annual Meeting of the Association for Compu-
tational Linguistics and the 7th International Joint
Conference on Natural Language Processing (Vol-
ume 1: Long Papers), volume 1, pages 1744–1753.

Xinchi Chen, Xipeng Qiu, Chenxi Zhu, Pengfei Liu,
and Xuanjing Huang. 2015b. Long short-term mem-
ory neural networks for chinese word segmentation.
In Proceedings of the 2015 Conference on Empiri-
cal Methods in Natural Language Processing, pages
1197–1206.

Kyunghyun Cho, Bart Van Merri¨enboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014.
Learning
phrase representations using rnn encoder-decoder
for statistical machine translation. arXiv preprint
arXiv:1406.1078.

Won Ik Cho, Woo Hyun Kang, and Nam Soo Kim.
2018. Hashcount at semeval-2018 task 3: Concate-
native featurization of tweet and hashtags for irony
detection. In Proceedings of the 12th International
Workshop on Semantic Evaluation, SemEval-2018,
New Orleans, LA, USA. Association for Computa-
tional Linguistics.

Real-time Automatic Word Segmentation for User-generated Text

Won Ik Cho1, Sung Jun Cheon1, Woo Hyun Kang1, Ji Won Kim2, and Nam Soo Kim1
Department of Electrical and Computer Engineering and INMC1
Department of Linguistics2
Seoul National University, 1 Gwanak-ro, Gwanak-gu, Seoul, Korea, 08826
{wicho,sjcheon,whkang}@hi.snu.ac.kr, {kimjiwon08,nkim}@snu.ac.kr

9
1
0
2
 
y
a
M
 
7
 
 
]
L
C
.
s
c
[
 
 
2
v
3
1
1
3
1
.
0
1
8
1
:
v
i
X
r
a

Abstract

For readability and possibly for disambigua-
tion, appropriate word segmentation is rec-
ommended for written text. In this paper, we
propose a real-time assistive technology that
utilizes an automatic segmentation. The lan-
guage investigated is Korean, a head-ﬁnal lan-
guage with various morpho-syllabic blocks as
characters. The training scheme is fully neu-
ral network-based and straightforward. Be-
sides, we show how the proposed system can
be utilized in a web-based real-time revi-
sion for a user-generated text. With qualita-
tive and quantitative comparison with widely
used text processing toolkits, we show the re-
liability of the proposed system and how it
ﬁts with conversation-style and non-canonical
texts. The demonstration is available online1.

1

Introduction

The study on word segmentation2 has been done
for many languages including Hindi (Garg et al.,
2010), Arabic (Lee et al., 2003), Chinese (Chen
et al., 2015a), Japanese (Sassano, 2002), and Ko-
rean (Lee et al., 2002). The necessity for segmen-
tation depends on language; e.g., in Japanese, it is
not obligatory. However, in Korean, the spaces be-
tween words3 are indispensable for readability of
the text (Lee and Kim, 2013) and possibly for the
naturalness of the speech generated from the text.
Nonetheless, in real-world language life where
input through a device is universal, giving space
with an additional entry can be an annoying or
time-consuming process. For example, in a real-
time chatting via desktop or mobile keyboards,
some users tend to enter non-segmented texts

1https://github.com/warnikchow/raws
2Although spacing is more appropriate for Korean, we use

segmentation instead for consistency.

3The unit for spacing in Korean is called eojeol (어절).
It corresponds with word in English but differs in that it is a
composition of morphemes rather than an inﬂection.

1:

an

Instagram of

Figure
elderly Korean
Youtube star, Makrae Park (Image by Visualdive;
http://www.visualdive.com/). Fluent utilization of
mechanical segmentation system can be difﬁcult for
some digitally marginalized people so that the resulting
document lacks readability.

which lack in readability and even sometimes
cause ambiguity. This originates mainly in the an-
noyance, but sometimes it is a challenging issue
for digitally marginalized people such as the hand-
icapped or the elderly (Figure 1). We were inspired
by the technical needs that the readability issue
is expected to be resolved with a web-based real-
time automatic segmentation.

In this paper, we propose an assistive technol-
ogy that aids device users to assign proper spaces
for non-segmented documents. The system is dif-
ferent from conventional correction tools which
evaluate the suitability of the input text concerning
the standard language rules and suggest a gram-
matically appropriate one. In a slightly different
perspective, the proposed system assigns proper
spaces between the characters of a non-segmented
input utterance, in a non-invasive way that avoids
distortion in the user’s intention. Although the

resulting segmentation is not strictly correct4, it
gives sufﬁcient readability and provides natural-
ness in the viewpoint of speech production.

In the following section, we take a look at the
literature on word and hashtag segmentation. In
Section 3, the architecture of the proposed sys-
tem is described with a detailed implementation
scheme. Afterward, the system is evaluated quan-
titatively and qualitatively with a manually created
dataset and several test sentences.

2 Related Work

Many studies on automatic segmentation of Ko-
rean text have dealt with sequential information on
the history of syllables, using statistics-based ap-
proaches on the previous words, correctly predict-
ing the space that follows each syllabic block (Lee
et al., 2002, 2014). This issue is different from
the studies on morphological analysis (Lee, 2011),
though some approaches utilized decomposition
into morphemes (Lee et al., 2002). In a recent im-
plementation of KoSpacing (Jeon, 2018), convo-
lutional neural network (CNN) (Kim, 2014) and
bidirectional gated recurrent unit (BiGRU) (Chen
et al., 2015b) were employed, utilizing various
news articles in training.

For Japanese, which has a similar syntax (head-
ﬁnal) with Korean, traditional approaches to the
segmentation of the text and Kanji sequence
adopted statistical models (Sassano, 2002; Ando
and Lee, 2003). However, contextual information
does not seem to be fully utilized so far.

For Chinese word segmentation, many contex-
tual approaches have been suggested, although the
embedding methodology and syntax are different
from that of Korean. In Chen et al. (2015a), con-
text information was aggregated via a gated recul-
sive neural network to predict a space between
characters. In Cai and Zhao (2016), a gated combi-
nation neural network was used over characters to
produce distributed representations of word candi-
dates.

It is notable that the segmentation technique for
non-spaced document evolved briskly in the lan-
guages with indecisive spacings such as Chinese,
Japanese, and Korean (CJK). Thus, unlike CJK, it
is difﬁcult to infer what the English counterpart
of word segmentation should be. Taking into ac-

4In Korean, not strictly obeying the segmentation (spac-
ing) rules is tolerated in the informal conversation-style sen-
tences.

count the differences coming from the character
systems, we concluded that it approximately cor-
responds with hashtag segmentation that is widely
used for various analysis tasks targeting social me-
dia text, including Facebook comments, Tweets,
and Instagram (Bansal et al., 2015; Cho et al.,
2018). The importance of using hashtag informa-
tion in social media text analysis was emphasized
in Chang (2010) but the study on its segmenta-
tion boosted since Berardi et al. (2011). Early ap-
proaches utilized lexicon-based identiﬁcation and
statistical models such as the Viterbi algorithm
(Bansal et al., 2015; Baziotis et al., 2017), and are
still used widely due to their speed and accuracy.
Many of the algorithms are still actively adopted
in the word segmentation of CJK.

3 Proposed System

In this section, referring to the previous studies,
we investigate the adequate architecture that gen-
erates proper segmentation for non-canonical sen-
tences. The proposed system incorporates mainly
three features: (1) a conversation-style and non-
normalized/non-standard corpus used for training,
(2) a deep learning-based automatic segmentation
module, and (3) the potential to be utilized in a
web interface that is applicable for various social
media and microblogs.

3.1 Corpus

The corpus consists of dialogs in Korean drama
scripts which are semi-automatically collected,
with punctuations and narration removed. It con-
tains 2M utterances of various length and involves
a wide variety of topics. The number of appear-
ing characters were found out to be around 2,500,
which incorporates almost all the Korean charac-
ters that are used in real life. Several characteris-
tics distinguish our dataset from the corpora con-
ventionally used:

(i) Non-standardness: The script
is highly
conversation-style, and it contains a large portion
of dialogs that do not ﬁt with standard (Contempo-
rary Seoul) Korean. It also includes dialects, mid-
dle age Korean, and transliteration of foreign lan-
guages (e.g., Japanese and Chinese).

(ii) Non-normalizedness: A signiﬁcant portion
of the sentences contain non-normalized expres-
sions; it contains murmur, new words, slangs, in-
complete sentences, etc.

Figure 2: The architecture of the automatic segmentation module. The input sentence means “Mother put soup into
the bottle”, but if it were not for the space ﬂag in the third place of the inference module, the sentence could have
meant “I put the skin of mother into the bottle”, which is syntactically possible output for an ambiguous sentence
but awkward. Lmax denotes the maximum character length of the input.

(iii) Weak segmentation rules: Word (eojeol)
segmentation does not strictly follow the standard
Korean as in literary language, but the corpus was
checked with the spaces that are inappropriately
inserted. The omission of the spacing was toler-
ated in a manner that does not induce awkward-
ness regarding prosody of the sentence if spoken.

(iv) Allows errata: Errata were not corrected if
the pronunciation does not affect the semantics of
the sentence; this can be a strong point of the word
segmentation of user-generated text.

3.2 Automatic segmentation module

Automatic segmentation module which is inspired
by the encoder-decoder network (Cho et al., 2014)
consists of two submodules, respectively manag-
ing sentence encoding and space inference.

3.2.1 Character-based sentence encoding

To clarify the symbol system of the Korean lan-
guage, we introduce the Korean character Hangul
and its components (alphabet) Jamo. Roughly, Ja
denotes the consonants and mo denotes the vow-
els, making up a morpho-syllabic block of Hangul
by {Syllable: CV(C)}. Note that the blocks are dif-
ferent from morphemes, which can be whatever
form of a combination of Jamo.

The vector embedding of the characters was
done using skip-gram (Mikolov et al., 2013)
and subword embedding of fastText (Bojanowski

et al., 2016), not the one-hot encoding, utilizing
the corpus constructed in Section 3.1. It bases on
the conclusion that the sparsely embedded vec-
tors seemed inefﬁcient for either CNN and Bidi-
rectional long short-term memory (BiLSTM), in
the sense that they lack distributional information
and even require high computation. Also, context-
related properties of distributional semantics were
expected to compensate for the noise of user-
generated text such as errata.

In the form of a non-segmented sequence of
character vectors, the sentence is fed as an input to
the CNN and BiLSTM. They ﬁnally yield a ﬂat-
tened vector an as output layer of each network,
which are concatenated to make up encoding of
the whole input sentence (Figure 2). Roughly, this
conveys the concept of our study as a language-
independent contextual segmentation that can help
disambiguate challenging composites. That is, the
system segments a sentence into the words con-
sidering the whole composition, not only the his-
tory or the neighborhood. We expect CNN and
BiLSTM play an essential role in this process, by
providing distributional and sequential informa-
tion of the sentence. The speciﬁcation regarding
the model architecture is stated in Table 1.

3.2.2 Decoder with a binary output

The backend of the segmentation module includes
a decoder network that assigns proper segmen-

Figure 3: A brief sketch on the web-based segmentation service.

Corpus

2,000,000 (#char: >2,500)

Speciﬁcation

Instance of
utterances
Input size
(single channel)
Filters

Window

# Conv layer

Input size

(Lmax, 100, 1)

32
Conv layer: (3, 100)
Max pooling: (2,1)
2

(Lmax, 100)

Hidden layer nodes
Hidden layer nodes
# Layers
Optimizer
Batch size
Dropout
Activation

32
128
2
Adam (0.0005)
128
0.3 (for MLPs)
ReLU (MLPs, CNN, output)

Loss function

Mean squared error (MSE)

Table 1: System speciﬁcation.

CNN

BiLSTM

MLP

Others

tation for a given sequence of character vectors.
With the vectorized encoding of the sentence as
an input, the decoder network infers a binary se-
quence that indicates if there should be a space
just after each character. Note that the length of the
output sequence equals to L − 1 where L denotes
the number of characters in the input sentence (Ta-
ble 1).

3.3 Application to web interface

The last feature of the proposed system is the
applicability as an assistive interface for various
web-based services such as Instagram and Tele-
gram. Although not directly related to the perfor-
mance of the system, mainly two issues are argued
for industrial potential.

3.3.1 Long sentences

Since the overall architecture deals with the sen-
tences of ﬁxed length Lmax, which is set 100, the
inference of spaces for long sentences requires an
additional procedure. To cover such cases, we ap-

plied an overlap-hopping for the sentences whose
length exceeds Lmax. The overlap length is 30
(characters), and the decision of the segmentation
follows the inference which is done later. For ex-
ample, to simplify the description, if the input is
given ‘A B C D E F G H I J ’. where Lmax is 5,
and overlap length is 1, then the segmentation is
performed in the order of ‘A B C D E’, ‘B C D
E F’ · · · ‘F G H I J’ and then concatenated. This
kind of approach is expected to be more accurate
than just separating the whole sequence into ‘A B
C D E’ and ‘F G H I J’ and performing two times
of segmentation. In the latter process, the contex-
tual information regarding the neighborhood of the
cutting point (between E and F) can be neglected.

3.3.2

Immediate segmentation and
recommendation

The interface should be user-friendly considering
the class of people the assistive technology targets.
Also, since the system incorporates a deep struc-
ture, the issue of computation should not be over-
looked. Thus, we suggest a system which acts as
either an immediate segmenter or a segmentation
recommender, depending on the option user se-
lects (possibly automatically set considering user
status).

Since a large portion of web-based services ac-
companies a procedure of restoring query on the
server, a non-segmented text the user generates
can be primarily fed as an input to the automatic
segmentation module which is running online. If
the user wants an immediate segmentation, the
module can immediately upload a segmented ver-
sion of the sentence. If the user wants a recommen-
dation, the segmented version is returned so that
the user can make a modiﬁcation and conﬁrmation
on it (Figure 3). The latter can be utilized as user
feedback. In real-world usage, spaces given by the
users (not non-segmented, with a few spaces) are
also expected to be adopted as ground truth.

This user-friendly function has a lot to do with
the motivation of this study. It is not concretely
implemented here but is expected to be easily ma-
terialized in the user interface.

4 Experiment

4.1

Implementation

Implementation for the system was done with fast-
Text5 and Keras (Chollet et al., 2015), which were
used for embedding character vectors and making
neural network models respectively. With GTX
Tesla M40 24GB, the training for both systems
took about 30 hours; about two hours per epoch.

In architecture, Lmax was set to 100, consider-
ing the usual length of the utterances and hash-
tags. The input is the feature extracted from a non-
segmented utterance, and the output is a binary
vector that
indicates appropriate segmentation.
Note that the activation and loss function (ReLU,
MSE) were chosen experimentally; for Korean,
using sigmoid resulted in overﬁtting that caused
an awkward segmentation for even a simple com-
posite. We assume this phenomenon comes from
the volume of the character set. The threshold re-
garding MSE was set to 0.5.

4.2 Evaluation

For evaluation, two widely-used text processing
tools, namely (i) a correction module by Naver6
and (ii) KoSpacing7(Jeon, 2018) were adopted.
Naver does not disclose the architecture that is
utilized, but seems to base on a hybrid struc-
ture of rules and statistical models using Korean
word taxonomy, considering the system malfunc-
tion given input with long and non-standard ex-
pressions (e.g., dialect and slangs). KoSpacing
bases on a deep hierarchical structure of CNN and
BiGRU but adopts character n-gram and various
news articles. We treat both modules as a represen-
tative of word-based and character-based toolkit
respectively.

Since the proposed system does not aim strictly
accurate segmentation considering the indecisive-
ness of the Korean word segmentation, we modi-
ﬁed the concept of mean opinion score (MOS) to
evaluate the result which incorporates multiple an-
swers. Provided with three sentences as the out-

5https://pypi.org/project/fasttext/
6goo.gl/mTMLmr
7Demo and model architecture are available in:

put of each system, namely Naver, KoSpacing and
Proposed, 14 Korean subjects were required to as-
sign the rank considering the naturalness of the
segmentation. Assigning the same rank to the out-
puts of more than one systems was allowed8.

For the survey, 30 posts were excerpted from
the Instagram posts of Makrae Park9 (Figure 1,
licensed10). The test posts are not necessarily
single utterances; they contain compound sen-
tences which incorporate scrambling, dialects,
non-normalized expressions, and many errata.
Since the word-based module did not even re-
spond with many of such samples, we consider-
ately chose the posts with which the modules gen-
erate a segmented output.

For the cases where the characters of the output
are corrected due to the function of the module,
the result was modiﬁed so that the characters in
the original text are preserved. Also, taking into
account the output from KoSpacing and Proposed,
we chose the cases where the output for all the
three systems differ with each other11. A sample
post and the output sentences with it are described
in the following part.

The ﬁnal ranking R of each system equals to the
average of the ranks for the whole input utterances.
We propose a system rank S which is deﬁned by:

S =

N + 1 − R
N

for the number of the systems N = 3. The sys-
tem rank was designed to yield 1 for all-ﬁrst place
model and 1

N for the opposite case.

As a result, 0.6809, 0.7142, and 0.7444 were
obtained for Naver, KoSpacing, and Proposed re-
spectively. The result does not imply the supe-
riority of the proposed system towards the con-
ventional toolkits regarding the segmentation ac-
curacy. Instead, it is conveyed that the proposed
system yields quite tolerable segmentation for
the utterances that are non-normalized and non-
standard, mainly due to the characteristics of the
corpus.

8For example, (1,1,3) denotes two 1st-places and one 3rd-

place. Similarly, (1,2,2) denotes two 2nd-places.
9https://www.instagram.com/korea grandma
10It is described in the guideline that the data uploaded by
the users belong to the company, and those are provided for
an academic purpose. Refer to:
https://help.instagram.com/155833707900388

11The survey sheet is available in:

https://github.com/haven-jeon/PyKoSpacing

https://github.com/warnikchow/raws/blob/master/survey.xlsx

Figure 4: A sample post (Original), its romanization, gloss, translation, and output sentences. Some typing errors
of the user are colored in red in the original text but were not reﬂected in the translation. Angmi refers to a dog.
The input for the systems is identical to Original, except for the removal of slashes (‘/’) which were added to help
the readers recognize the sentence boundary.

4.2.1 Qualitative analysis
We introduce three real-life utterances and one in
the test data (Figure 4) that display the advantages
of using the proposed system. Here, for each sen-
tence, original text is provided with proper seg-
mentation, romanization, gloss, and translation.
Then, the input sentence (without segmentation) is
notated, along with the output from the modules.

(1) Original: 나 너 본 지 한 세 달 다 돼 감
na ne pon ci han sey tal ta tway kam
I you meet ci about three months almost has been
It’s been almost three months since we last met.
(informal)
- Input: 나너본지한세달다돼감
- Naver: 나 / 너 / 본 / 지 / 한 / 세 / 달 / 다 / 돼 / 감
- Proposed: 나 / 너 / 본지 / 한 / 세달 / 다 / 돼 / 감
For (1), Naver showed the result that strictly obeys
the segmentation rules. In contrast, Proposed
yields an output in which the characters compris-
ing the phrases are agglutinated. Although strictly
correct output is grammatically appropriate, the
output from the proposed model clusters the sylla-
bles that are syntactically close (e.g., pon-ci (meet-
ci, since last met), sey-tal (three-months)), making
the prosodic durations more natural (in speech).
This seems to be the result inﬂuenced by the prop-
erty of the drama script that the model adopts, of
which the corpora utilized by the other models
might lack.

(2) Original: 아버지 친구분 당선되셨어요
apeci chinkwu-pwun tangsen-toy-sy.ess-e-yo
father friend-HON elect-be-HON.PST-DEC-POL
Father’s friend was elected. (honoriﬁc, polite)
- Input: 아버지친구분당선되셨어요
- KoSpacing: 아버지 / 친구 / 분당선 / 되셨어요
- Proposed: 아버지 / 친구분 / 당선 / 되셨어요
Sentence (2) incorporates morphological and se-
mantic ambiguity; if a space goes in between

‘구 (kwu)’ and ‘분 (pwun)’, not between ‘분
(pwun)’ and ‘당 (tang)’, the sentence meaning
changes to “Father’s friend became Bundang
line12.” which is syntactically acceptable but se-
mantically different (and awkward) from the orig-
inal intention. In the input, KoSpacing inserts a
space between kwu/pwun and Proposed puts be-
tween pwun/tang; in the case of KoSpacing, where
chinkwu (friend) becomes apart with its hon-
oriﬁc sufﬁx pwun and pwun makes up a new noun
phrase pwuntangsen (Bundang line), completely
different meaning is conveyed although the other
part of the output sentence is same as that of Pro-
posed. This kind of segmentation seems to hap-
pen because KoSpacing is trained with the news
articles which more embody the topics regarding
transportation than colloquial expressions.

(3) Original: 뭣이 중헌지도 모름서
mwes-i cwunghen-ci-to molum-se
what-NOM important-NMN13-too ignorant-DEC
You don’t even know what’s important! (dialect)
- Input: 뭣이중헌지도모름서
- Naver: 뭣이중헌지도모름서
- Proposed: 뭣이 / 중헌지도 / 모름서
For (3), Naver did not make response regarding
the unseen data; southeastern dialect which may
not have been incorporated in training corpus. Pro-
posed showed a proper output, without omission
of a character nor a transformation of the sentence.

(4) We display a sample post in the survey sheet.
Given a post from the real Instagram account,
which incorporates non-normalized expressions,
dialects, and errata, the output sentences from the
baseline modules and the proposed system are
listed. Three bold chunks in Proposed denote the
results that are distinct in the proposed model,

12A subway line of Korea.
13Denotes a nominalizer.

which yield the naturalness regarding syntax and
prosody, although the ﬁrst two phrases are not
strictly grammatical.

During the survey, the subjects were asked to
take into account all the appropriate and incor-
rect parts of the output, so that a reasonable out-
come can be obtained. For instance, the under-
lined phrases in KoSpacing and Proposed denote
the ones that are not correct, displaying demerit
of the two systems with respect to Naver mod-
ule in the sample. This led to Proposed scoring
the second place in the given sentence (Naver the
ﬁrst and KoSpacing the third). However, this sin-
gle case does not discourage the motivation of the
proposed system; not to target an accurate correc-
tion of noisy utterance but to assign naturalness
and readability. Although we cannot introduce all
the cases in this paper, generally the proposed sys-
tem exhibited the result that adheres to the goal of
the implementation.

4.3 Discussion

Our study encompasses the following as distin-
guishing features:

• A motivation which originates in the charac-
teristics of Korean script and the need from
the real world

• Corpus, model architecture, and web appli-
cation methodologies that are appropriate for
real-time automatic segmentation of noisy
user-generated Korean text

• A comparative study with the conventional
spacing toolkits; especially a rigorous qual-
itative analysis utilizing sample scripts

We want to note again that our approach differs
from the grammatical correction that can happen
to modify the users’ intent inadvertently. By this,
we can avoid incorrect (or unnecessary) revision
and prevent the users from correcting the mod-
iﬁed sentence once more. Also, overlap-hopping
method applied for long input makes it possible
for the text processing system to deal with the seg-
mentation of large-scale documents. In the future,
the whole context of the document might be able
to be engaged in to deal with the segmentation of
the character sequence that incorporates ambigu-
ity.

5 Conclusion

lized both as a web-based real-time assistive tech-
nology and an analyzing toolkit for noisy user-
generated text. First, we reﬁned Korean drama
scripts, making up 2M lines respectively, in the
way that the segmentation results ﬁt with context
and prosody. Based on them, a deep training ar-
chitecture was constructed to yield an automatic
segmenter of which the performance was veriﬁed
by quantitative and qualitative comparison with
widely used text processing modules. For Korean,
where the strict rule is not necessarily required
to obey in real-time written conversation, we pro-
posed a subjective measure that can compare the
naturalness of the segmentation that the systems
assign to user-generated texts.

Application of this system is not limited to as-
sistive technology for digitally marginalized peo-
ple and hashtag segmentation for the analysis of
noisy texts, as suggested in the paper. For instance,
for Korean, since the system receives any sentence
input and generates the segmented one which ﬁts
with prosody, automatic speech recognition (ASR)
or text-to-speech (TTS) modules of smart devices
may utilize the proposed function as a post- or
pre-processing respectively, to provide more nat-
ural output. Also, since the reliability of the sys-
tem concept was veriﬁed by adopting the language
with sufﬁciently large character set (Korean), it is
expected to be applied to other languages that in-
corporate an adequate number of characters (e.g.,
Chinese and Japanese) and maybe smaller (e.g.,
English). The pre-trained systems for Korean and
English are available online14, and the fastText
character vector dictionary trained with the corpus
is also distributed for the research purpose15.

Acknowledgments

This work was supported by the Technology Inno-
vation Program (10076583, Development of free-
running speech recognition technologies for em-
bedded robot system) funded By the Ministry of
Trade, Industry & Energy (MOTIE, Korea). Also,
the authors appreciate ASAP of Hanyang Univer-
sity, Makrae Park, and Ye Seul Jung for providing
the corpus, motivation, and useful example sen-
tences.

In this paper, we suggested a cross-lingually ap-
plicable word segmentation system that can be uti-

14https://github.com/warnikchow/raws
15Disclosing the corpus is limited due to the copyright.

Franc¸ois Chollet et al. 2015. Keras. https://

github.com/fchollet/keras.

Naresh Kumar Garg, Lakhwinder Kaur, and MK Jin-
Segmentation of handwritten hindi
International Journal of Computer Applica-

dal. 2010.
text.
tions (IJCA), 1(4):22–26.

Heewon Jeon. 2018.
rean word spacing.
haven-jeon/KoSpacing.

Kospacing: Automatic ko-
https://github.com/

Yoon Kim. 2014.

works for sentence classiﬁcation.
arXiv:1408.5882.

Convolutional neural net-
arXiv preprint

Changki Lee, Edward Choi, and Hyunki Kim. 2014.
Balanced korean word spacing with structural svm.
In Proceedings of the 2014 Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP), pages 875–879.

Changki Lee and Hyunki Kim. 2013. Automatic ko-
rean word spacing using pegasos algorithm. Infor-
mation Processing & Management, 49(1):370–379.

Do-Gil Lee, Sang-Zoo Lee, Hae-Chang Rim, and Heui-
Seok Lim. 2002. Automatic word spacing using hid-
den markov model for reﬁning korean text corpora.
In Proceedings of the 3rd workshop on Asian lan-
guage resources and international standardization-
Volume 12, pages 1–7. Association for Computa-
tional Linguistics.

Jae-Sung Lee. 2011. Three-step probabilistic model
for korean morphological analysis. Journal of KI-
ISE: Software and Applications, 38(5):257–268.

Young-Suk Lee, Kishore Papineni, Salim Roukos, Os-
sama Emam, and Hany Hassan. 2003. Language
In Pro-
model based arabic word segmentation.
ceedings of the 41st Annual Meeting on Association
for Computational Linguistics-Volume 1, pages 399–
406. Association for Computational Linguistics.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
In Advances in neural information processing
ity.
systems, pages 3111–3119.

Manabu Sassano. 2002. An empirical study of active
learning with support vector machines for japanese
word segmentation. In Proceedings of the 40th An-
nual Meeting on Association for Computational Lin-
guistics, pages 505–512. Association for Computa-
tional Linguistics.

References

Rie Kubota Ando and Lillian Lee. 2003. Mostly-
unsupervised statistical segmentation of japanese
kanji sequences. Natural Language Engineering,
9(2):127–149.

Piyush Bansal, Romil Bansal, and Vasudeva Varma.
2015. Towards deep semantic analysis of hashtags.
In European Conference on Information Retrieval,
pages 453–464. Springer.

Christos Baziotis, Nikos Pelekis, and Christos Doulk-
eridis. 2017. Datastories at semeval-2017 task
4: Deep lstm with attention for message-level and
In Proceedings of
topic-based sentiment analysis.
the 11th International Workshop on Semantic Eval-
uation (SemEval-2017), pages 747–754.

Giacomo Berardi, Andrea Esuli, Diego Marcheggiani,
and Fabrizio Sebastiani. 2011. Isti@ trec microblog
track 2011: Exploring the use of hashtag segmenta-
tion and text quality ranking. In TREC.

Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2016. Enriching word vectors with
subword information. CoRR, abs/1607.04606.

Deng Cai and Hai Zhao. 2016. Neural word seg-
arXiv preprint

mentation learning for chinese.
arXiv:1606.04300.

Hsia-Ching Chang. 2010. A new perspective on twitter
hashtag use: Diffusion of innovation theory. Pro-
ceedings of the Association for Information Science
and Technology, 47(1):1–4.

Xinchi Chen, Xipeng Qiu, Chenxi Zhu, and Xuanjing
Huang. 2015a. Gated recursive neural network for
In Proceedings of the
chinese word segmentation.
53rd Annual Meeting of the Association for Compu-
tational Linguistics and the 7th International Joint
Conference on Natural Language Processing (Vol-
ume 1: Long Papers), volume 1, pages 1744–1753.

Xinchi Chen, Xipeng Qiu, Chenxi Zhu, Pengfei Liu,
and Xuanjing Huang. 2015b. Long short-term mem-
ory neural networks for chinese word segmentation.
In Proceedings of the 2015 Conference on Empiri-
cal Methods in Natural Language Processing, pages
1197–1206.

Kyunghyun Cho, Bart Van Merri¨enboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014.
Learning
phrase representations using rnn encoder-decoder
for statistical machine translation. arXiv preprint
arXiv:1406.1078.

Won Ik Cho, Woo Hyun Kang, and Nam Soo Kim.
2018. Hashcount at semeval-2018 task 3: Concate-
native featurization of tweet and hashtags for irony
detection. In Proceedings of the 12th International
Workshop on Semantic Evaluation, SemEval-2018,
New Orleans, LA, USA. Association for Computa-
tional Linguistics.

