Noname manuscript No.
(will be inserted by the editor)

Hierarchical Cellular Automata for Visual Saliency

Yao Qin* · Mengyang Feng* · Huchuan Lu · Garrison W. Cottrell

7
1
0
2
 
y
a
M
 
6
2
 
 
]

V
C
.
s
c
[
 
 
1
v
5
2
4
9
0
.
5
0
7
1
:
v
i
X
r
a

Received: date / Accepted: date

Abstract Saliency detection, ﬁnding the most impor-
tant parts of an image, has become increasingly popular
in computer vision. In this paper, we introduce Hierar-
chical Cellular Automata (HCA) – a temporally evolv-
ing model to intelligently detect salient objects. HCA
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). As an unsupervised propagation mechanism,
Single-layer Cellular Automata can exploit the intrinsic
relevance of similar regions through interactions with
neighbors. Low-level image features as well as high-
level semantic information extracted from deep neu-
ral networks are incorporated into the SCA to measure
the correlation between diﬀerent image patches. With
these hierarchical deep features, an impact factor ma-
trix and a coherence matrix are constructed to balance
the inﬂuences on each cell’s next state. The saliency
values of all cells are iteratively updated according to a
well-deﬁned update rule. Furthermore, we propose CCA
to integrate multiple saliency maps generated by SCA
at diﬀerent scales in a Bayesian framework. Therefore,
single-layer propagation and multi-layer integration are
jointly modeled in our uniﬁed HCA. Surprisingly, we

Yao Qin
University of California, San Diego
E-mail: yaq007@eng.ucsd.edu

Mengyang Feng
Dalian University of Technology
E-mail: mengyangfeng@gmail.com

Huchuan Lu
Dalian University of Technology
E-mail: lhchuan@dlut.edu.cn

Garrsion W. Cottrell
University of California, San Diego
E-mail: gary@eng.ucsd.edu

* Equal Contribution

ﬁnd that the SCA can improve all existing methods
that we applied it to, resulting in a similar precision
level regardless of the original results. The CCA can
act as an eﬃcient pixel-wise aggregation algorithm that
can integrate state-of-the-art methods, resulting in even
better results. Extensive experiments on four challeng-
ing datasets demonstrate that the proposed algorithm
outperforms state-of-the-art conventional methods and
is competitive with deep learning based approaches.

Keywords Saliency Detection · Hierarchical Cellular
Automata · Deep Contrast Features · Bayesian
Framework

1 Introduction

Humans excel in identifying visually signiﬁcant regions
in a scene corresponding to salient objects. Given an im-
age, people can quickly tell what attracts them most.
In the ﬁeld of computer vision, however, performing the
same task is very challenging, despite dramatic progress
in recent years. To mimic the human attention sys-
tem, many researchers focus on developing computa-
tional models that locate regions of interest in the im-
age. Since accurate saliency maps can assign relative
importance to the visual contents in an image, saliency
detection can be used as a pre-processing procedure to
narrow the scope of visual processing and reduce the
cost of computing resources. As a result, saliency detec-
tion has raised a great amount of attention (Achanta
et al, 2009; Goferman et al, 2010) and has been in-
corporated into various computer vision tasks, such as
visual tracking (Mahadevan and Vasconcelos, 2009), ob-
ject retargeting (Ding et al, 2011; Sun and Ling, 2011)
and image categorization (Siagian and Itti, 2007; Kanan
and Cottrell, 2010). Results in perceptual research

2

Yao Qin* et al.

are usually integrated in a simple and heuristic way,
which may directly limit the precision of saliency ag-
gregation.

To address these two obvious problems, we propose
a novel method named Hierarchical Cellular Automata
(HCA) to extract the salient objects from the back-
ground eﬃciently. A Hierarchical Cellular Automata
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). First, to improve the features, we use fully
convolutional networks (Long et al, 2015) to extract
deep features due to their successful application to se-
mantic segmentation. It has been demonstrated that
deep features are highly versatile and have stronger rep-
resentational power than traditional handcrafted fea-
tures (Krizhevsky et al, 2012; Farabet et al, 2013; Gir-
shick et al, 2014). Low-level image features and high-
level saliency cues extracted from deep neural networks
are used by an SCA to measure the similarity of neigh-
bors. With these hierarchical deep features, the SCA
iteratively updates the saliency map through interac-
tions with similar neighbors. Then the salient object
will naturally emerge from the background with high
consistency among similar image patches. Secondly, to
detect multi-scale salient objects, we apply the SCA at
diﬀerent scales and integrate them with the CCA based
on Bayesian inference. Through interactions with neigh-
bors in a cuboid zone, the integrated saliency map can
highlight the foreground and suppress the background.
An overview of our proposed HCA is shown in Figure. 2.
Furthermore, the Hierarchical Cellular Automata is
capable of optimizing other saliency detection methods.
If a saliency map generated by one of the existing meth-
ods is used as the prior map and fed into HCA, it can be
improved to the state-of-the-art precision level. Mean-
while, if multiple saliency maps generated by diﬀerent
existing methods are used as initial inputs, HCA can
naturally fuse these saliency maps and achieve a result
that outperforms each method.

In summary, the main contributions of our work in-

clude:
(1) We propose a novel Hierarchical Cellular Automata
to adaptively detect salient objects of diﬀerent scales
based on hierarchical deep features. The model eﬀec-
tively improves all of the methods we have applied it
to to state-of-the-art precision levels and is relatively
insensitive to the original maps.
(2) Single-layer Cellular Automata serve as a propaga-
tion mechanism that exploits the intrinsic relevance of
similar regions via interactions with neighbors.
(3) Cuboid Cellular Automata can integrate multiple
saliency maps into a more favorable result under the
Bayesian framework.

Fig. 1 An example illustrates that conventional saliency
detection methods based on handcrafted low-level features
fail
in complex circumstances. From top left to bottom
right: stimulus, HS (Yan et al, 2013), DSR (Li et al, 2013),
MR (Yang et al, 2013), ground truth, wCO (Zhu et al, 2014),
and our method SCA and HCA.

show that contrast is one of the decisive factors in the
human visual attention system (Itti and Koch, 2001;
Reinagel and Zador, 1999), suggesting that salient ob-
jects are most likely in the region of the image that
signiﬁcantly diﬀers from its surroundings. Many con-
ventional saliency detection methods focus on exploit-
ing local and global contrast based on various hand-
crafted image features, e.g., color features (Liu et al,
2011; Cheng et al, 2015), focusness (Jiang et al, 2013c),
textual distinctiveness (Scharfenberger et al, 2013), and
structure descriptors (Shi et al, 2013). Although these
methods perform well on simple benchmarks, they may
fail in some complex situations where the handcrafted
low-level features do not help salient objects stand out
from the background. For example, in Figure. 1, the
prairie dog is surrounded by low-contrast rocks and
bushes. It is challenging to detect the prairie dog as
a salient object with only low-level saliency cues. How-
ever, humans can easily recognize the prairie dog based
on its category as it is semantically salient in high-level
cognition and understanding.

In addition to the limitation of low-level features,
the large variations in object scales also restrict the ac-
curacy of saliency detection. An appropriate scale is of
great importance in extracting the salient object from
the background. One of the most popular ways to detect
salient objects of diﬀerent sizes is to construct multi-
scale saliency maps and then aggregate them with pre-
deﬁned functions, such as averaging or a weighted sum-
mation. In most existing methods (Wang et al, 2016; Li
and Yu, 2015; Li et al, 2014a; Zhou et al, 2014; Borji
et al, 2015), however, these constructed saliency maps

Hierarchical Cellular Automata for Visual Saliency

3

Fig. 2 The pipeline of our proposed Hierarchical Cellular Automata. First, the stimulus is segmented into multi-scale super-
pixels, and superpixels on the image boundary are selected as seeds for the propagation of the background (Section. 3.1). Then
FCN-32s (Long et al, 2015) is used as a feature extractor to obtain deep features (Section. 3.2). The generated prior maps
and deep features are both fed into the Single-Layer Cellular Automata (Section. 3.3.1) to create multi-scale saliency maps.
Finally, we integrate these saliency maps via the Cuboid Cellular Automata (Section. 3.3.2) to obtain our ultimate result.

2 Related Work

2.1 Salient Object Detection

Methods of saliency detection can be divided into two
categories: top-down (task-driven) methods and bottom-
up (data-driven) methods. Approaches like (Alexe et al,
2010; Marchesotti et al, 2009; Ng et al, 2002; Yang and
Yang, 2012) are typical top-down visual attention meth-
ods that require supervised learning with manually la-
beled ground truth. To better distinguish salient ob-
jects from the background, high-level category-speciﬁc
information and supervised methods are incorporated
to improve the accuracy of saliency maps. In contrast,
bottom-up methods usually concentrate on low-level
cues such as color, intensity, texture and orientation to
construct saliency maps (Hou and Zhang, 2007; Jiang
et al, 2011; Klein and Frintrop, 2011; Sun et al, 2012;
Tong et al, 2015b; Yan et al, 2013). Some global bottom-
up approaches tend to build saliency maps by calculat-
ing the holistic statistics on uniqueness of each element
over the whole image (Cheng et al, 2015; Perazzi et al,
2012; Bruce and Tsotsos, 2005).

As saliency is deﬁned as a particular part of an im-
age that visually stands out compared to their neigh-
boring regions or the rest of image, one of the most
used principles, contrast prior, measures the saliency of
a region according to the color contrast or geodesic dis-
tance against its surroundings (Cheng et al, 2013, 2015;
Jiang et al, 2011; Jiang and Davis, 2013; Klein and
Frintrop, 2011; Perazzi et al, 2012; Wang et al, 2011).
Recently, the boundary prior has been introduced in
several methods based on the assumption that regions
along the image boundaries are more likely to be the
background (Jiang et al, 2013b; Li et al, 2013; Wei et al,
2012; Yang et al, 2013; Borji et al, 2015; Shen and Wu,
2012), although this takes advantage of photographer’s

bias and is less likely to be true for active robots. Con-
sidering the connectivity of regions in the background,
Wei et al (2012) deﬁne the saliency value for each re-
gion as the shortest-path distance towards the bound-
ary. Yang et al (2013) use manifold ranking to infer the
saliency score of image regions according to their rele-
vance to boundary superpixels. Furthermore, in (Jiang
et al, 2013a), the contrast against the image border is
used as a new regional feature vector to characterize
the background.

However, one of the fundamental problems with all
these conventional saliency detection methods is that
the features used are not representative enough to cap-
ture the contrast between foreground and background,
and this limits the precision of saliency detection. For
one thing, low-level features cannot help salient objects
stand out from a low-contrast background with similar
visual appearance. Also, the extracted global features
are weak in capturing semantic information and have
much poorer generalization compared to the deep fea-
tures used in this paper.

2.2 Deep Neural Networks

Deep convolutional neural networks have recently achie-
ved a great success in various computer vision tasks,
including image classiﬁcation (Krizhevsky et al, 2012;
Szegedy et al, 2015), object detection (Girshick et al,
2014; Hariharan et al, 2014; Szegedy et al, 2013) and
semantic segmentation (Long et al, 2015; Pinheiro and
Collobert, 2014). With the rapid development of deep
neural networks, researchers have begun to construct
eﬀective neural networks for saliency detection (Zhao
et al, 2015; Li and Yu, 2015; Zou and Komodakis, 2015;
Wang et al, 2015; Li et al, 2016; Kim and Pavlovic,
2016). In (Zhao et al, 2015), Zhao et al. propose a
uniﬁed multi-context deep neural network taking both

4

Yao Qin* et al.

global and local context into consideration. Li et al. (Li
and Yu, 2015) and Zou et al. (Zou and Komodakis,
2015) explore high-quality visual features extracted from
DNNs to improve the accuracy of saliency detection.
DeepSaliency in (Li et al, 2016) is a multi-task deep
neural network using a collaborative feature learning
scheme between two correlated tasks, saliency detec-
tion and semantic segmentation, to learn better fea-
ture representation. One leading factor for the success
of deep neural networks is the powerful expressibility
and strong capacity of deep architectures that facili-
tate learning high-level features with semantic infor-
mation (Hariharan et al, 2015; Ma et al, 2015).

In (Donahue et al, 2014), Donahue et al. point out
that features extracted from the activation of a deep
convolutional network can be repurposed to other generic
tasks. Inspired by this idea, we use the hierarchical
deep features extracted from fully convolutional net-
works (Long et al, 2015) to represent smaller image
regions. The extracted deep features incorporate low-
level features as well as high-level semantic information
of the image and can be fed into our Hierarchical Cel-
lular Automata to measure the similarity of diﬀerent
image patches.

2.3 Cellular Automata

Cellular Automata are a model of computation ﬁrst
proposed by Von Neumann (1951). They can be de-
scribed as a temporally evolving system with simple
construction but complex self-organizing behavior. A
Cellular Automaton consists of a lattice of cells with
discrete states, which evolve in discrete time steps ac-
cording to speciﬁc rules. Each cell’s next state is deter-
mined by its current state as well as its nearest neigh-
bors’ states. Cellular Automata have been applied to
simulate the evolution of many complicated dynamical
systems (Batty, 2007; Chopard and Droz, 2005; Cow-
burn and Welland, 2000; de Almeida et al, 2003; Mar-
tins, 2008; Pan et al, 2016). Considering that salient ob-
jects are spatially coherent, we introduce Cellular Au-
tomata into this ﬁeld and propose Single-layer Cellular
Automata as an unsupervised propagation mechanism
to exploit the intrinsic relationships of neighboring ele-
ments of the saliency map and eliminate gaps between
similar regions.

In addition, we propose a method to combine multi-
ple saliency maps generated by diﬀerent algorithms, or
combine saliency maps at diﬀerent scales through what
we call Cuboid Cellular Automata (CCA). In CCA,
states of the automaton are determined by a cuboid
neighborhood corresponding to automata at the same
location as well as their adjacent neighbors in diﬀer-
ent saliency maps. An illustration of the idea is in Fig-
ure 3(b). In this setting, the saliency maps are itera-

tively updated through interactions among neighbors
in the cuboid zone. The state updates are determined
through Bayesian evidence combination rules. Variants
of this type of approach have been used before (Rahtu
et al, 2010; Xie and Lu, 2011; Xie et al, 2013; Li et al,
2013). Xie et al (2013) use the low-level visual cues
derived from a convex hull to compute the observa-
tion likelihood. Li et al (2013) construct saliency maps
through dense and sparse reconstruction and propose a
Bayesian algorithm to combine them. Using Bayesian
updates to combine saliency maps puts the algorithm
for Cuboid Cellular Automata on a ﬁrm theoretical
foundation.

3 Proposed algorithm

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata (HCA) for saliency detection,
composed of two sub-units, a Single-layer Cellular Au-
tomata (SCA), and a Cuboid Cellular Automata (CCA),
as described below. First, we construct prior maps of
diﬀerent scales with superpixels on the image bound-
ary chosen as the background seeds. Then, hierarchi-
cal deep features are extracted from fully convolutional
networks (Long et al, 2015) to measure the similarity of
diﬀerent superpixels. Next, we use SCA to iteratively
update the prior maps at diﬀerent scales based on the
hierarchical deep features. Finally, a CCA is used to
integrate the multi-scale saliency maps using Bayesian
evidence combination. Figure. 2 shows an overview of
our proposed method.

3.1 Background Priors

Recently, there have been various mathematical mod-
els proposed to generate a coarse saliency map to help
locate potential salient objects in an image (Tong et al,
2015a; Zhu et al, 2014; Gong et al, 2015). Even though
prior maps are eﬀective in improving detection preci-
sion, they still have several drawbacks. For example, a
poor prior map may greatly limit the accuracy of the ﬁ-
nal saliency map if it incorrectly estimates the location
of the objects or classiﬁes the foreground as the back-
ground. Also, the computational time to construct a
prior map can be excessive. Therefore, in this paper, we
build a quite simple and time-eﬃcient prior map that
only provides the propagation seeds for HCA, which is
quite insensitive to the prior map and is able to reﬁne
this coarse prior map into an improved saliency map.

First, we use the eﬃcient Simple Linear Iterative
Clustering (SLIC) algorithm (Achanta et al, 2010) to
segment the image into smaller superpixels in order to
capture the essential structural information of the im-
age. Let si ∈ R denote the saliency value of the super-
pixel i in the image. Based on the assumption that su-
perpixels on the image boundary tend to have a higher

Hierarchical Cellular Automata for Visual Saliency

5

probability of being the background, we assign a close-
to-zero saliency value to the boundary superpixels. For
others, we assign a uniform value as their initial saliency
values,

si =

(cid:26) 0.001 i ∈ boundary
0.5 i (cid:54)∈ boundary.

(1)

Considering the great variation in the scales of salient
objects, we segment the image into superpixels at M
diﬀerent scales, which are displayed in Figure. 2 (Prior
Maps).

3.2 Deep Features from FCN

As is well-known, the features in the last layers of CNNs
encode semantic abstractions of objects, and are robust
to appearance variations, while the early layers contain
low-level image features, such as color, edge, and tex-
ture. Although high-level features can eﬀectively dis-
criminate the objects from various backgrounds, they
cannot precisely capture the ﬁne-grained low-level in-
formation due to their low spatial resolution. Therefore,
a combination of these deep features is preferred com-
pared to any individual feature map.

In this paper, we use the feature maps extracted
from the fully-convolutional network (FCN-32s (Long
et al, 2015)) to encode object appearance. The input
image to FCN-32s is resized to 500 × 500, and a 100-
pixel padding is added to the four boundaries. Due to
subsampling and pooling operations in the CNN, the
outputs of each convolutional layer in the FCN frame-
work are not at the same resolution. Since we only care
about the features corresponding to the original image,
we need to 1) crop the feature maps to get rid of the
padding; 2) resize each feature map to the input image
size via the nearest neighbor interpolation. Then each
feature map can be aggregated using a simple linear
combination as:

g(ri, rj) =

ρl · (cid:107)df l

i − df l

j(cid:107)2,

(2)

L
(cid:88)

l=1

where df l
i denotes the deep features of superpixel i on
the l-th layer and ρl is a weighting of the importance of
the l-th feature map, which we set by cross-validation.
The weights are constrained to sum to 1: (cid:80)L
l=1 ρl = 1.
Each superpixel is represented by the mean of the deep
features of all contained pixels. The computed g(ri, rj)
is used to measure the similarity between superpixels.

3.3 Hierarchical Cellular Automata

Hierarchical Cellular Automata (HCA) is a uniﬁed frame-
work composed of single-layer propagation (Single-layer
Cellular Automata) and multi-layer aggregation (Cuboid

Fig. 3 The constructed graph models used in our algorithm.
(a) is used in SCA, the orange lines and the blue lines rep-
resent the connections between the blue center cell and its
2-layer neighbors. The purple lines indicate that superpixels
on the image boundaries are all connected to each other; (b)
is used in CCA, a cell (e.g. the red pixel in the bottom layer)
is connected to the pixels with the same coordinates in other
layers as well as their four adjacent neighbors (e.g. cells in
blue color). All these pixels construct a cuboid interaction
zone.

Cellular Automata). It can generate saliency maps at
diﬀerent scales and integrate them to get a ﬁne-grained
saliency map. We will discuss SCA and CCA respec-
tively in Sections 3.3.1 and 3.3.2.

3.3.1 Single-layer Cellular Automata

In Single-layer Cellular Automata (SCA), each cell de-
notes a superpixel generated by the SLIC algorithm.
SLIC takes the number of desired superpixels as a pa-
rameter, so by using diﬀerent numbers of superpixels
with SCA, we can obtain maps at diﬀerent scales. In
this section, we assume one scale, denoted m. We de-
note the number of superpixels in scale m by nm, but
we omit the subscript m in most notation in this section
for clarity, e.g., F for Fm, C for Cm and s for sm.

We make three major modiﬁcations to the previ-
ous cellular automata models (Smith, 1972; Von Neu-
mann, 1951) for saliency detection. First, the states of
cells in most existing Cellular Automata models are dis-
crete (Von Neumann et al, 1966; Wolfram, 1983). How-
ever, in this paper, we use the saliency value of each
superpixel as its state, which is continuous between
0 and 1. Second, we give a broader deﬁnition of the
neighborhood that is similar to the concept of z-layer
neighborhood (here z = 2) in graph theory. The z-layer
neighborhood of a cell includes adjacent cells as well
as those sharing common boundaries with its adjacent
cells. Also, we assume that superpixels on the image
boundaries are all connected to each other because all
of them serve as background seeds. The connections be-
tween the neighbors are clearly illustrated in Figure. 3
(a). Finally, instead of uniform inﬂuence of the neigh-
bors , the inﬂuence is based on the similarity between
the neighbor to the cell in feature space, as explained
next.

Impact Factor Matrix: Intuitively, neighbors with
more similar features have a greater inﬂuence on the

6

Yao Qin* et al.

cell’s next state. The similarity of any pair of super-
pixels is measured by a pre-deﬁned distance in feature
space. For the m-th saliency map, which has nm super-
pixels in total, we construct an impact factor matrix
F ∈ Rnm×nm . Each element fij in F deﬁnes the impact
factor of superpixel i to j as:

fij =

(cid:40)

exp( −g(ri,rj )
0

σ2
f

)

j ∈ NB(i)

j = i or otherwise,

(3)

where g(ri, rj) is a function that computes the distance
between the superpixel i and j in feature space with ri
as the feature descriptor of superpixel i. In this paper,
we use the weighted distance of hierarchical deep fea-
tures computed by Eqn. (2) to measure the similarity
between neighbors. σf is a parameter that controls the
strength of similarity and NB(i) is the set of the neigh-
bors of the cell i. In order to normalize the impact fac-
tors, a degree matrix D = diag{d1, d2, · · · , dnm } is con-
structed, where di = (cid:80)
i fij. Finally, a row-normalized
impact factor matrix can be calculated as F∗ = D−1 ·F.
Coherence Matrix: Given that each cell’s next
state is determined by its current state as well as its
neighbors, we need to balance the importance of these
two factors. On the one hand, if a superpixel is quite
diﬀerent from all its neighbors in the feature space, its
next state will be primarily based on itself. On the other
hand, if a cell is similar to its neighbors, it should be
assimilated by the local environment. To this end, we
build a coherence matrix C = diag{c1, c2, · · · , cnm} to
promote the evolution among all cells. Each cell’s co-
herence towards its current state is initially computed
as: ci =
max(fij ) , so it is inversely proportional to its
maximum similarity to its neighbors. We normalize this
to be in a range ci ∈ [ b , a + b ], where a and b are pa-
rameters, via:
c∗
i = a ·

ci − min (cj)
max (cj) − min (cj)

+ b,

(4)

1

where the min and max are computed over j = 1, 2,
..., nm. Based on preliminary experiments, we set the
constants a and b in Eq. (4) to 0.6 and 0.2. If a is ﬁxed
to 0.6, our results are insensitive to the value of b in
the interval [ 0.1 , 0.3 ]. The ﬁnal, normalized coherence
matrix is then: C∗ = diag{c∗

1, c∗
Synchronous Update Rule: In Cellular Automata,

2, · · · , c∗

nm

}.

all cells will simultaneously update their states accord-
ing to the update rule, which is a key point in Cellular
Automata, as it controls whether the ultimate evolv-
ing state is chaotic or stable (Wolfram, 1983). Here, we
deﬁne the synchronous update rule based on the im-
pact factor matrix F∗ ∈ Rnm×nm and coherence matrix
C∗ ∈ Rnm×nm:

s(t+1) = C∗s(t) + (I − C∗) F∗s(t),

(5)

Fig. 4 Saliency maps generated by SCA (nm = 200). The
ﬁrst three columns show that salient objects can be precisely
detected when the saliency appears in the center of the im-
age. The last three columns indicate that SCA can still have
good performance even when salient objects touch the image
boundary.

where I is the identity matrix of dimension nm × nm
and s(t) ∈ Rnm denotes the saliency map at time t.
When t = 0, s(0) is the prior map generated by the
method introduced in Section. 3.1. After TS time steps
(a time step is deﬁned as one update of all cells), the
saliency map can be represented as s(TS ). It should be
noted that the update rule is invariant over time; only
the cells’ states s(t) change over iterations.

Our synchronous update rule is based on the gen-
eralized intrinsic characteristics of most images. First,
superpixels belonging to the foreground usually share
similar feature representations. By exploiting the corre-
lation between neighbors, the SCA can enhance saliency
consistency among similar regions and develop a steady
local environment. Second, it can be observed that there
is a high contrast between the object and its surround-
ing background in feature space. Therefore, a clear bound-
ary will naturally emerge between the object and the
background, as the cell’s saliency value is greatly inﬂu-
enced by its similar neighbors. With boundary-based
prior maps, salient objects can be naturally highlighted
after the evolution of the system due to the connec-
tivity and compactness of the object, as exempliﬁed in
Figure. 4. Speciﬁcally, even though part of the salient
object is incorrectly selected as the background seed,
the SCA can adaptively increase their saliency values
under the inﬂuence of the local environment. The last
three columns in Figure. 4 show that when the object
touches the image boundary, the results achieved by the
SCA are still satisfying.

3.3.2 Cuboid Cellular Automata

To better capture the salient objects of diﬀerent scales,
we propose a novel method named Cuboid Cellular
Automata (CCA) to incorporate M diﬀerent saliency
maps generated by SCA under M scales, each of which
serves as a layer of the Cuboid Cellular Automata. In
CCA, each cell corresponds to a pixel, and the saliency
values of all pixels constitute the set of cells’ states. The

Hierarchical Cellular Automata for Visual Saliency

number of all pixels in an image is denoted as H. Unlike
the deﬁnition of a neighborhood in Section. 3.3.1 and
Multi-layer Cellular Automata in (Qin et al, 2015), here
pixels with the same coordinates in diﬀerent saliency
maps as well as their 4-connected pixels are all regarded
as neighbors. That is, for any cell in a saliency map, it
should have 5M − 1 neighbors, constructing a cuboid
interaction zone. The hierarchical graph is presented
in Figure. 3 (b) to illustrate the connections between
neighbors.

m,i = P (i ∈(t)

m F ), while 1 − s(t)

The saliency value of pixel i in the m-th saliency
map at time t is its probability of being the foreground
F , represented as s(t)
m,i = P (i ∈(t)
m,i is
its probability of being the background B, denoted as
1 − s(t)
m B). We binarize each map with an
adaptive threshold using Otsu’s method (Otsu, 1975),
which is computed from the initial saliency map and
does not change over time. The threshold of the m-
th saliency map is denoted by γm. If pixel i in the
m-th binary map is classiﬁed as foreground at time t
(s(t)
m,i = +1. Cor-
respondingly, η(t)
m,i = −1 means that pixel i is binarized
as background (s(t)

m,i ≥ γm), then it will be denoted as η(t)

m,i < γm).

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

If pixel i belongs to the foreground, the probability
that one of its neighboring pixels j in the m-th binary
map is classiﬁed as foreground at time t is denoted as
P ( η(t)
m F ). In the same way, the proba-
bility P ( η(t)
m B ) represents that the pixel
j is binarized as B conditioned on that pixel i belongs
to the background at time t. We make the assump-
tion that P ( η(t)
m F ) is the same for all
the pixels in any saliency map and it does not change
over time. Additionally, it is reasonable to assume that
m F ) = P ( η(t)
P ( η(t)
m B ).
Therefore, we use a constant λ to denote these two
probablities:

m,j = +1|i ∈(t)

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

P ( η(t)

m,j = +1|i ∈(t)

m F ) = P ( η(t)

m,j = −1|i ∈(t)

m B ) = λ.
(6)

m F |η(t)

m,j = +1)

Then the posterior probability P (i ∈(t)
can be calculated as follows:
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:16)
(cid:17)
P

η(t)
m,j = +1

i ∈(t)

i ∈(t)

m F

m F

m F

∝ P

(cid:12)
(cid:12)i ∈(t)
(cid:12)

P

(cid:16)

(cid:16)

(cid:17)

(cid:17)

= s(t)

m,i · λ

In order to get rid of the normalizing constant in

Eqn. (7), we deﬁne the prior ratio Ω(i ∈(t)
i ∈(t)

m F

P

(cid:16)

(cid:17)

m F ) as:

(cid:16)

Ω

i ∈(t)

m F

(cid:17)

=

(cid:16)

P

i ∈(t)

m B

(cid:17) =

s(t)
m,i
1 − s(t)
m,i

.

(7)

(8)

7

(9)

(11)

(12)

Combining Eqn. (7) and Eqn. (8), the posterior ratio
Ω(i ∈(t)

m,j = +1) turns into:

m F | η(t)

(cid:16)

Ω

i ∈(t)

m F

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1

(cid:17)

=

(cid:16)

(cid:16)

P

P

i ∈(t)

m F

i ∈(t)

m B

=

s(t)
m,i
1 − s(t)
m,i

·

(cid:17)

(cid:17)

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
λ
1 − λ

.

m F |η(t)

As the posterior probability P (i ∈(t)

m,j = +1)
represents the probability of pixel i of being the fore-
ground F conditioned on that its neighboring pixel j
in the m-th saliency map is binarized as foreground at
time t, P (i ∈(t)
m,j = +1) can also be used to rep-
resent the probability of pixel i of being the foreground
F at time t + 1. Then,

m F |η(t)

s(t+1)
m,i = P (i ∈(t)

m F |η(t)

m,j = +1).

(10)

According to Eqn. (9) and Eqn. (10), we can get:

s(t+1)
m,i
1 − s(t+1)

m,i

m F |η(t)

m,j = +1)

m F |η(t)

m,j = +1)

m F |η(t)
m B|η(t)

m,j = +1)
m,j = +1)

=

=

=

P (i ∈(t)
1 − P (i ∈(t)
P (i ∈(t)
P (i ∈(t)
s(t)
m,i
1 − s(t)
m,i

·

λ
1 − λ

.

It is much easier to deal with the logarithm of this quan-
tity because the changes in logodds will be additive. So
Eqn. (11) turns into:

(cid:16)

l

s(t+1)
m,i

(cid:17)

= l

(cid:17)

(cid:16)

s(t)
m,i

+ Λ,

(cid:17)

(cid:16)

= ln(

where l

s(t+1)
m,i

) and Λ = ln( λ

s(t+1)
m,i
1−λ ) is
1−s(t+1)
m,i
a constant. The intuitive explanation for Eqn. (12) is
that: if a pixel observes that one of its neighbors is bi-
narized as foreground, it ought to increase its saliency
value; otherwise, it should decrease its saliency value.
Therefore, Eqn. (12) requires Λ > 0. In this paper, we
empirically set Λ = 0.05.

As each pixel has 5M −1 neighbors in total, the pixel
will decide its action (increase or decrease it saliency
value) based on all its neighbors’ current states. Assum-
ing the contribution of each neighbor is conditionally in-
dependent, we derive the synchronous update rule from
Eqn. (12) as:
(cid:16)

(cid:17)

(cid:16)

(cid:17)

l

s(t+1)
m

= l

s(t)
m

+ Σ(t)

m · Λ,

(13)

8

Yao Qin* et al.

Fig. 5 Visual comparison of saliency maps generated by SCA
at diﬀerent scales (n1 = 120, n2 = 160 and n3 = 200) and
HCA.

m ∈ RH is the m-th saliency map at time t and
m ∈ RH can

where s(t)
H is the number of pixels in the image. Σ(t)
be computed by:
5
(cid:88)

M
(cid:88)

(cid:17)

(cid:16)

δ(k = m, j > 1) · sign

s(t)
j,k − γk · 1

,

Σ(t)

m =

j=1

k=1

(14)

(15)

where M is the number of diﬀerent saliency maps, s(t)
j,k ∈
RH is a vector containing the saliency values of the j-th
neighbor for all the pixels in the m-th saliency map at
time t and 1 = [1, 1, · · · , 1](cid:62) ∈ RH . We use δ(k =
m, j > 1) to represent the occasion that the cell only
has 4 neighbors instead of 5 in the m-th saliency map
when it is in the m-th saliency map. After TC iterations,
the ﬁnal integrated saliency map s(TC ) is calculated by

s(TC ) =

1
M

M
(cid:88)

m=1

s(TC )
m .

In this paper, we use CCA to integrate saliency
maps generated by SCA at M = 3 scales. This com-
bination is denoted as HCA, and the visual saliency
maps generated by HCA can be seen in Figure. 5. Here
we use the notation SCAn to denote SCA applied with
n superpixels. We can see that the detected objects in
the integrated saliency maps are uniformly highlighted
and much closer to the ground truth.

3.4 Consistent Optimization

3.4.1 Single-layer Propagation

Due to the connectivity and compactness of the ob-
ject, the salient part of an image will naturally emerge
with the Single-layer Cellular Automaton, which serves
as a propagation mechanism. Therefore, we use the
saliency maps generated by several well-known meth-
ods as the prior maps and refresh them according to the
synchronous update rule. The saliency maps achieved
by CAS (Goferman et al, 2010), LR (Shen and Wu,
2012) and RC (Cheng et al, 2015) are taken as s(0)

Fig. 6 Comparison of saliency maps generated by diﬀerent
methods and their optimized results via Single-layer Cellular
Automata. The ﬁrst row is respectively input images, ground
truth and saliency maps generated by our proposed SCA with
200 superpixels. The second row displays original saliency
maps generated by three traditional methods (from left to
right: CAS (Goferman et al, 2010), LR (Shen and Wu, 2012),
RC (Cheng et al, 2015)). The third row is their corresponding
optimized results by SCA with 200 superpixels.

in Eqn. (5). The optimized results via SCA are shown
in Figure. 6. We can see that the foreground is uni-
formly highlighted and a clear object contour naturally
emerges with the automatic single-layer propagation
mechanism. Even though the original saliency maps are
not particularly good, all of them are signiﬁcantly im-
proved to a similar accuracy level after evolution. That
means our method is independent of prior maps and can
make a consistent and eﬃcient optimization towards
state-of-the-art methods.

3.4.2 Pixel-wise Integration

A variety of methods have been developed for visual
saliency detection, and each of them has its advantages
and limitations. As shown in Figure. 7, the performance
of a saliency detection method varies with individual
images. Each method can work well for some images or
some parts of the images but none of them can perfectly
handle all the images. Furthermore, diﬀerent methods
may complement each other. To take advantage of the
superiority of each saliency map, we use Cuboid Cel-
lular Automata to aggregate two groups of saliency
maps, which are generated by three conventional algo-
rithms: BL (Tong et al, 2015a), HS (Yan et al, 2013) and
MR (Yang et al, 2013) and three deep learning meth-
ods: MDF (Li and Yu, 2015) and DS (Li et al, 2016)
and MCDL (Zhao et al, 2015). Each of them serves
as a layer of Cellular Automata s(0)
m in Eqn. (13). Fig-
ure. 7 shows that our proposed pixel-wise aggregation
method, Cuboid Cellular Automata, can appropriately
integrate multiple saliency maps and outperforms each
one. The saliency objects on the aggregated saliency
map are consistently highlighted and much closer to
the ground truth.

Hierarchical Cellular Automata for Visual Saliency

9

(a) Saliency aggregation of three conventional methods

(b) Saliency aggregation of three deep learning methods

Fig. 7 Eﬀects of pixel-wise saliency aggregation with Cuboid
Cellular Automata. We integrate saliency maps generated
by three conventional algorithms: BL (Tong et al, 2015a),
HS (Yan et al, 2013) and MR (Yang et al, 2013) in (a) and
incorporate saliency maps generated by three deep learning
methods: MDF (Li and Yu, 2015), DS (Li et al, 2016), and
MCDL (Zhao et al, 2015) in (b). The integrated result is de-
noted as CCA.

3.4.3 SCA + CCA = HCA

Here we show that when CCA is applied to some (poor)
prior maps, it does not perform as well as when the
prior map is post-processed by SCA. This motivates
their combination into HCA. As is shown in Figure. 8,
when the candidate saliency maps are not well con-
structed, both CCA and MCA (Qin et al, 2015) fail to
detect the salient object. Unlike CCA and MCA, HCA
overcomes this limitation through incorporating single-
layer propagation (SCA) together with pixel-wise in-
tegration (CCA) into a uniﬁed framework. The salient
objects can be intelligently detected by HCA regardless
of the original performance of the candidate methods.
When we use HCA to integrate existing methods, the
optimized results will be denoted as HCA*.

4 Experiments

In order to demonstrate the eﬀectiveness of our pro-
posed algorithms, we compare the results on four chal-
lenging datasets: ECSSD (Yan et al, 2013), MSRA5000
(Liu et al, 2011), PASCAL-S (Li et al, 2014b) and
HKU-IS (Li and Yu, 2015). The Extended Complex
Scene Saliency Dataset (ECSSD) contains 1000 images
with multiple objects of diﬀerent sizes. Some of the im-
ages come from the challenging Berkeley-300 dataset.
MSRA- 5000 contains more comprehensive images with
complex background. The PASCAL-S dataset derives
from the validation set of PASCAL VOC2010 (Ever-
ingham et al, 2010) segmentation challenge and con-
tains 850 natural images. The last dataset, HKU-IS,
contains 4447 challenging images and their pixel-wise
saliency annotation. In this paper, we use ECSSD as

Fig. 8 Eﬀects of holistic optimization by Hierarchical Cel-
lular Automata. We use MCA (Qin et al, 2015), CCA and
HCA to integrate saliency maps generated by three classic
methods: FT (Achanta et al, 2009), ITTI (Itti et al, 1998)
and CAS (Goferman et al, 2010). Their respective saliency
maps optimized by SCA with 200 superpixels are shown in
the second row. Note that HCA* uses as input the saliency
maps processed by SCA (the second row) and applies CCA to
them, while the MCA and CCA models are applied directly
to the ﬁrst row.

the validation dataset to help choose the feature maps
in FCN (Long et al, 2015).

We compare our algorithm with 20 classic or state-
of-the-art methods including ITTI (Itti et al, 1998),
FT (Achanta et al, 2009), CAS (Goferman et al, 2010),
LR (Shen and Wu, 2012), XL13 (Xie et al, 2013), DSR
(Li et al, 2013), HS (Yan et al, 2013), UFO (Jiang
et al, 2013c), MR (Yang et al, 2013), DRFI (Jiang
et al, 2013b), wCO (Zhu et al, 2014), RC (Cheng et al,
2015), HDCT (Kim et al, 2014), BL (Tong et al, 2015a),
BSCA (Qin et al, 2015), LEGS (Wang et al, 2015),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015),
DS (Li et al, 2016), and SSD-HS (Kim and Pavlovic,
2016), where the last 5 methods are deep learning-based
methods. The results of diﬀerent methods are either
provided by authors or achieved by running available
code or binaries. The code and results of HCA will be
publicly available at our project site 1.
4.1 Parameter Setup

For the Single-layer Cellular Automaton, we set the
number of iterations TS = 20. σ2
f in Eq. (3) is set to
0.1 as in (Yang et al, 2013). For the Cuboid Cellular
Automata, we set the number of iterations TC = 3. We
determined empirically that SCA and CCA converge by
20 and 3 iterations, respectively. We choose M = 3 and
run SCA with n1 = 120, n2 = 160, n3 = 200 superpixels
to generate multi-scale saliency maps for CCA.
4.2 Evaluation Metrics

We evaluate all methods by standard Precision-Recall
(PR) curves via binarizing the saliency map with a

1 https://github.com/ArcherFMY/HCA_saliency_codes

10

Yao Qin* et al.

Fig. 9 Visual comparison of saliency maps with diﬀerent layers of deep features. The left two columns are the input images
and their ground truth. Other columns present the saliency maps with diﬀerent layers of deep features. The color bars on the
top stand for diﬀerent convolutional layers (see Figure. 10(a) and (b)).

(a) F-measure bars

(b) MAE bars

4.3 Validation of the Proposed Algorithm

MAE =

|si − gi|.

1
H

H
(cid:88)

i=1

(18)

MAE indicates how similar a saliency map is compared
to the ground truth, and is of great importance for
diﬀerent applications, such as image segmentation and
cropping (Perazzi et al, 2012).

4.3.1 Feature Analysis

In order to construct the Impact Factor matrix, we need
to choose the features that will enter into Eqn.( 2). Here
we analyze the eﬃcacy of the features in diﬀerent layers
of a deep network in order to choose these feature lay-
ers. In deep neural networks, earlier convolutional layers
capture ﬁne-grained low-level information, e.g., colors,
edges and texture, while later layers capture high-level
semantic features. In order to select the best feature
layers in the FCN (Long et al, 2015), we use ECSSD
as a validation dataset to measure the performance of
deep features extracted from diﬀerent layers. The func-
tion g(ri, rj) in Eqn. (3) can be computed as
(cid:13)
g(ri, rj) = (cid:13)
(cid:13)2

i − df l
j

(cid:13)df l

(19)

,

where df l
i denotes the deep features of superpixel i on
the l-th layer. The outputs of convolutional layers, relu
layers and pooling layers are all regarded as a feature
map. Therefore, we consider in total 31 layers of fully
convolutional networks. We do not take the last two
convolutional layers into consideration as their spatial
resolutions are too low.

We use the F-measure (the higher, the better) and
mean absolute error (MAE) (the lower, the better) to
evaluate the performance of diﬀerent layers on the EC-
SSD dataset. The results are shown in Figure. 10 (a)
and (b). The F-measure score is obtained by thresh-
olding the saliency maps at twice the mean saliency
value. We use this convention for all of the subsequent
F-measure results. The x-index in Figure. 10 (a) and (b)
refers to convolutional, ReLu, and pooling layers as im-
plemented in the FCN. We can see that deep features
extracted from the pooling layer in Conv1 and Conv5
can achieve the best two F-measure scores, and also
perform well on MAE. The saliency maps in Figure. 9
correspond to the bars in Figure 10. Here it is visually

(c) Precision-Recall curves comparison

Fig. 10 (a) The F-measure score for each layer in FCN-32s
on ECSSD; (b) The MAE score for each layer in FCN-32s
on ECSSD; (c) Precision-Recall curves of SCA using deep
features extracted from pool1 and pool5 as well as a weighted
summation of these two layers of deep features.

threshold sliding from 0 to 255 and then comparing
the binary maps with the ground truth. Speciﬁcally,

precision =

, recall =

|SF ∩ GF |
|SF |

|SF ∩ GF |
|GF |

,

(16)

where SF is the set of the pixels segmented as the fore-
ground, GF denotes the set of the pixels belonging to
the foreground in the ground truth, and |·| refers to the
number of elements in a set. In many cases, high preci-
sion and recall are both required. These are combined
in the F-measure to obtain a single ﬁgure of merit, pa-
rameterized by β:

Fβ =

(cid:0)1 + β2(cid:1) · precision · recall
β2 · precision + recall

(17)

where β2 is set to 0.3 as suggested in (Achanta et al,
2009) to emphasize the precision. To complement these
two measures, we also use mean absolute error (MAE)
to quantitatively measure the average diﬀerence be-
tween the saliency map s ∈ RH and the ground truth
g ∈ RH in pixel level:

Hierarchical Cellular Automata for Visual Saliency

11

apparent that salient objects are better detected with
the ﬁnal pooling layers of Conv1 and Conv5 . Therefore,
in this paper, we combine the feature maps from pool1
and pool5 with a simple linear combination. Eqn. (2)
then turns into:
g(ri, rj) = ρ1 · (cid:13)

+ ρ2 · (cid:13)

i − df 31
j

i − df 5
j

(cid:13)df 31

, (20)

(cid:13)df 5

(cid:13)
(cid:13)2

(cid:13)
(cid:13)2

where ρ1 and ρ2 balance the weight of pool1 and pool5.
In this paper, we empirically set ρ1 = 0.375 and ρ2 =
0.625 and apply them to all other datasets.

To test the eﬀectiveness of the integrated deep fea-
tures, we show the Precision-Recall curves of Single-
layer Cellular Automata with each layer of deep fea-
tures as well as the integrated deep features on two
datasets. The Precision-Recall curves in Figure. 10 (c)
demonstrate that hierarchical deep features outperform
single-layer features, as they contain both category-
level semantics and ﬁne-grained details.

4.3.2 Component Eﬀectiveness

To demonstrate the eﬀectiveness of our proposed al-
gorithm, we test the results on the standard ECSSD
and PASCAL-S datasets. We generate saliency maps
at three scales: n1 = 120, n2 = 160, n3 = 200 and use
CCA to integrate them. FT curves in Figure. 11 indi-
cate that the results of the Single-layer Automata are
already quite satisfying. In addition, CCA can improve
the overall performance of SCA with a wider range of
high F-measure scores than SCA alone. Similar results
are also achieved on other datasets but are not pre-
sented here to be succinct.

4.3.3 Performance Comparison

As is shown in Figure 12, our proposed Hierarchical Cel-
lular Automata performs favorably against state-of-the-
art conventional algorithms with higher precision and
recall values on four challenging datasets. HCA is com-
petitive with deep learning based approaches and has
higher precision at low levels of recall. Furthermore, the
fairly low MAE scores, displayed in Figure. 12(c), indi-
cate that our saliency maps are very close to the ground
truth. As MCDL (Zhao et al, 2015) trained the network
on the MSRA dataset, we do not report its result on
this dataset in Figure. 12. In addition, LEGS (Wang
et al, 2015) used part of the images in the MSRA and
PASCAL-S datasets as the training set. As a result,
we only test LEGS with the test images on these two
datasets. Saliency maps are shown in Figure. 16 for vi-
sual comparison of our method with other models.

4.4 Optimization of state-of-the-art methods

In the previous sections, we showed qualitatively that
our model creates better saliency maps by improving

Fig. 11 F-measure - Threshold curves of saliency maps gen-
erated by SCA at diﬀerent scales (n1 = 120, n2 = 160, n3 =
200 respectively), and the integrated results by HCA on EC-
SSD and PASCAL-S.
Table 1 Run Time of Each Component of HCA

Method
w/ SLIC(s)
wo/ SLIC(s)

SCA120
.2889
.0704

SCA160
.3134
.0525

SCA200 CCA HCA
1.0240
.2421

.3380
.0355

-
.0837

initial saliency maps with SCA, or by combining the re-
sults of multiple algorithms with CCA, or by applying
SCA and CCA. Here we compare our methods to other
methods quantitatively. When the initial maps are im-
perfect, we apply SCA to improve them and then apply
CCA. When the initial maps are already very good, we
show that we can combine state-of-the-art methods to
perform even better by simply using CCA.
4.4.1 Consistent Improvement

In Section 3.4.1, we concluded that results generated
by diﬀerent methods can be eﬀectively optimized via
Single-layer Cellular Automata. Figure 13 shows the
precision-recall curves and mean absolute error bars of
various saliency methods and their optimized results on
two datasets. These results demonstrate that SCA can
greatly improve existing results to a similar precision
level. Even though the original saliency maps are not
well constructed, the optimized results are comparable
to the state-of-the-art methods. It should be noted that
SCA can even optimize deep learning-based methods to
a better precision level, e.g., MCDL (Zhao et al, 2015),
MDF (Li and Yu, 2015), LEGS (Wang et al, 2015), and
SSD-HS (Kim and Pavlovic, 2016). In addition, for one
existing method, we can use SCA to optimize it at dif-
ferent scales and then use CCA to integrate the multi-
scale saliency maps. The ultimate optimized result is
denoted as HCA*. The lowest MAEs of saliency maps
optimized by HCA in Figure 13 (c) show that HCA’s
use of CCA improves performance over SCA alone.

4.4.2 Eﬀective Integration

In Section. 3.4.2, we used Cuboid Cellular Automata as
a pixel-wise aggregation method to integrate two groups
of state-of-the-art methods. One group includes three
of the latest conventional methods while the other con-
tains three deep learning-based methods. We test the

12

Yao Qin* et al.

(a) PR curves

(b) FT curves

(c) MAE bars

Fig. 12 PR curves, FT curves and MAE scores of diﬀerent methods compared with our algorithm (HCA). From top to
bottom: ECSSD, MSRA5000, PASCAL-S and HKU-IS are tested.

Hierarchical Cellular Automata for Visual Saliency

13

(a) PR curves

(b) FT curves

(c) MAE scores

Fig. 13 Consistent improvement on ECSSD and PASCALS datasets. (a) and (b): PR curves of diﬀerent methods (dashed
line) and their optimized version via SCA200 (solid line). The right column shows that SCA200 ((cid:52)), improves the MAEs of
the original methods (×) and that HCA* ((cid:13)), here applied to SCA120, SCA160, and SCA200, further improves the results.

(a) PR curves

(b) FT curves

(c) Score bars

Fig. 14 Eﬀects of pixel-wise aggregation via Cuboid Cellular Automata on ECSSD dataset. The ﬁrst row compares three
conventional methods BL (Tong et al, 2015a), HS (Yan et al, 2013), MR (Yang et al, 2013) and their integrated results via
Cuboid Cellular Automata, denoted as CCA. The second row compares three deep learning models, e.g. DS (Li et al, 2016),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015) and their integrated results. The precision, recall and F-measure scores in
the right column are obtained by thresholding the saliency maps at twice the mean saliency value.

14

Yao Qin* et al.

(a) PR curves

(b) FT curves
Fig. 15 Comparison between three diﬀerent integration methods MCA (Qin et al, 2015), CCA and HCA when integrating
FT (Achanta et al, 2009), ITTI (Itti et al, 1998) and CAS (Goferman et al, 2010) on ECSSD and MSRA datasets.

(c) MAE scores

Table 2 Comparison of Run Time

Code
Matlab
Python

Model Year
HCA
MCDL
LEGS
MDF
BL

2015
2015 Matlab + C
2015
2015

Matlab
Matlab

Time(s) Model Year Code Time(s) Model Year
2013
2013
2012
2011
2010 Matlab + C

HDCT 2014 Matlab
2014 Matlab
wCO
2013 Matlab
DRFI
2013 Matlab
DSR
2013
HS

1.4917
2.2521
1.9050
25.7328
21.5161

Code
Matlab
Matlab
Matlab
C

5.1248
0.1484
8.0104
3.4796
0.3821

MR
XL13
LR
RC
CAS

EXE

Time(s)
0.4542
65.5491
10.0259
0.1360
44.3270

various methods on the ECSSD dataset, and the in-
tegrated result is denoted as CCA. PR curves in Fig-
ure. 14(a) demonstrate the eﬀectiveness of CCA over
all the individual methods. FT curves of CCA in Fig-
ure. 14(b) are ﬁxed at high values that are insensitive
to the thresholds. In addition, we binarize the saliency
map with two times mean saliency value. From Fig-
ure. 14(c) we can see that the integrated result has
higher precision, recall and F-measure scores compared
to each method that is integrated. Also, the mean ab-
solute errors of CCA are always the lowest. The fairly
low mean absolute errors indicate that the integrated
results are quite similar to the ground truth.

Although Cuboid Cellular Automata have exhibited
great strength in integrating multiple saliency maps,
they have a major drawback in that the integrated re-
sult highly relies on the precision of the saliency detec-
tion methods used as input. If saliency maps fed into
Cuboid Cellular Automata are not well constructed, it
cannot naturally detect the salient objects via inter-
actions between these candidate saliency maps. HCA,
however, can easily address this problem by incorporat-

ing single-layer propagation and multi-layer integration
into a uniﬁed framework. Unlike MCA (Qin et al, 2015)
and CCA, HCA can achieve better integrated saliency
map regardless of their original detection performance
through the application of SCA to clean up the ini-
tial maps. PR curves, FT curves and MAE scores in
Figure. 15 show that 1) CCA has a better performance
than MCA, as it considers the inﬂuence of adjacent cells
on diﬀerent layers. 2) HCA can greatly improve the ag-
gregation results compared to MCA and CCA because
it is independent of the initial saliency maps.

4.5 Run Time

The run time to process one image in the MSRA5000
dataset via Matlab R2014b-64bit with a PC equipped
with an i7-4790k 3.60 GHz CPU and 32GB RAM is
shown in Table 1. The Table displays the average run
time of each component in our algorithm, not including
the time for extracting deep features. We can see that
the Single-layer Cellular Automata and Cuboid Cellular
Automata are very fast at processing one image, on av-
erage 0.06s. Their combination HCA takes only 0.2421s

Hierarchical Cellular Automata for Visual Saliency

15

Fig. 16 Visual comparison of saliency maps of diﬀerent methods. GT: Ground Truth, Ours: Saliency maps generated by
Hierarchical Cellular Automata (HCA).

to process one image without superpixel segmentation
and 1.0240s with SLIC.

We also compare the run time of our method with
other state-of-the-art methods in Table 2. Here we com-
pute the run time including superpixel segmentation
and feature extraction for all models. Our algorithm
has the least run time compared to other deep learning
based methods and is the ﬁfth fastest overall.

5 Conclusion

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata, a temporally evolving system
for saliency detection. It incorporates two components,
Single-layer Cellular Automata (SCA), which can clean
up noisy saliency maps, and Cuboid Cellular Automata
(CCA), that can integrate multiple saliency maps. SCA
is designed to exploit the intrinsic connectivity of saliency

objects through interactions with neighbors. Low-level
image features and high-level semantic information are
both extracted from deep neural networks and incor-
porated into SCA to measure the similarity between
neighbors. With superpixels on the image boundary
chosen as the background seeds, SCA iteratively up-
dates the saliency maps according to well-deﬁned up-
date rules, and salient objects naturally emerge un-
der the inﬂuence of their neighbors. This context-based
propagation mechanism can improve the saliency maps
generated by existing methods to a high performance
level. We used this in two ways: First, given a single
saliency map, SCA can be applied to superpixels gen-
erated from the saliency map at multiple scales, and
CCA can then integrate these into an improved saliency
map. Second, we can take saliency maps generated by

16

Yao Qin* et al.

multiple methods, apply SCA (if necessary) to improve
them, and then apply CCA to integrate them into bet-
ter saliency maps. Our experimental results demon-
strate the superior performance of our algorithms com-
pared to existing methods.

References

Achanta R, Hemami S, Estrada F, Susstrunk S (2009)
Frequency-tuned salient region detection. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 1597–1604

Achanta R, Shaji A, Smith K, Lucchi A, Fua P,

S¨usstrunk S (2010) Slic superpixels. Tech. rep.

Alexe B, Deselaers T, Ferrari V (2010) What is an ob-
ject? In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 73–80
de Almeida CM, Batty M, Monteiro AMV, Cˆamara
G, Soares-Filho BS, Cerqueira GC, Pennachin CL
(2003) Stochastic cellular automata modeling of ur-
ban land use dynamics: empirical development and
estimation. Computers, Environment and Urban Sys-
tems 27(5):481–509

Batty M (2007) Cities and complexity: understanding
cities with cellular automata, agent-based models,
and fractals. The MIT press

Borji A, Cheng MM, Jiang H, Li J (2015) Salient ob-
ject detection: A benchmark. IEEE Transactions on
Image Processing 24(12):5706–5722

Bruce N, Tsotsos J (2005) Saliency based on informa-
tion maximization. In: Advances in neural informa-
tion processing systems, pp 155–162

Cheng M, Mitra NJ, Huang X, Torr PH, Hu S (2015)
Global contrast based salient region detection. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence 37(3):569–582

Cheng MM, Warrell J, Lin WY, Zheng S, Vineet V,
Crook N (2013) Eﬃcient salient region detection with
soft image abstraction. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
1529–1536

Chopard B, Droz M (2005) Cellular automata model-
ing of physical systems, vol 6. Cambridge University
Press

Cowburn R, Welland M (2000) Room tempera-
ture magnetic quantum cellular automata. Science
287(5457):1466

Ding Y, Xiao J, Yu J (2011) Importance ﬁltering for
image retargeting. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 89–96

Donahue J, Jia Y, Vinyals O, Hoﬀman J, Zhang N,
Tzeng E, Darrell T (2014) Decaf: A deep convolu-

tional activation feature for generic visual recogni-
tion. In: Proceedings of International Conference on
Machine Learning, pp 647–655

Everingham M, Van Gool L, Williams CK, Winn J,
Zisserman A (2010) The pascal visual object classes
(voc) challenge. International journal of computer vi-
sion 88(2):303–338

Farabet C, Couprie C, Najman L, LeCun Y (2013)
Learning hierarchical
features for scene labeling.
IEEE transactions on pattern analysis and machine
intelligence 35(8):1915–1929

Girshick R, Donahue J, Darrell T, Malik J (2014) Rich
feature hierarchies for accurate object detection and
semantic segmentation. In: Proceedings of the IEEE
conference on computer vision and pattern recogni-
tion, pp 580–587

Goferman S, Zelnik-manor L, Tal A (2010) Context-
aware saliency detection. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Gong C, Tao D, Liu W, Maybank SJ, Fang M, Fu
K, Yang J (2015) Saliency propagation from simple
to diﬃcult. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 2531–
2539

Hariharan B, Arbel´aez P, Girshick R, Malik J (2014)
Simultaneous detection and segmentation. In: Pro-
ceedings of European Conference on Computer Vi-
sion, Springer, pp 297–312

Hariharan B, Arbel´aez P, Girshick R, Malik J (2015)
Hypercolumns for object segmentation and ﬁne-
grained localization. In: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recog-
nition, pp 447–456

Hou X, Zhang L (2007) Saliency detection: A spectral
residual approach. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 1–8

Itti L, Koch C (2001) Computational modelling of vi-
sual attention. Nature reviews neuroscience 2(3):194–
203

Itti L, Koch C, Niebur E (1998) A model of saliency-
based visual attention for rapid scene analysis. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence (11):1254–1259

Jiang B, Zhang L, Lu H, Yang C, Yang MH (2013a)
Saliency detection via absorbing markov chain. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 1665–1672

Jiang H, Wang J, Yuan Z, Liu T, Zheng N, Li S (2011)
Automatic salient object segmentation based on con-
text and shape prior. In: Proceedings of British Ma-
chine Vision Conference, vol 6, p 9

Hierarchical Cellular Automata for Visual Saliency

17

Jiang H, Wang J, Yuan Z, Wu Y, Zheng N, Li S
(2013b) Salient object detection: A discriminative re-
gional feature integration approach. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 2083–2090

Jiang P, Ling H, Yu J, Peng J (2013c) Salient region de-
tection by ufo: Uniqueness, focusness and objectness.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 1976–1983

Jiang Z, Davis L (2013) Submodular salient region de-
tection. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2043–2050
Kanan C, Cottrell GW (2010) Robust classiﬁcation of
objects, faces, and ﬂowers using natural image statis-
tics. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2472–2479
Kim J, Pavlovic V (2016) A shape-based approach for
salient object detection using deep learning. In: Pro-
ceedings of European Conference on Computer Vi-
sion, pp 455–470

Kim J, Han D, Tai YW, Kim J (2014) Salient region
detection via high-dimensional color transform. In:
Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition, pp 883–890

Klein DA, Frintrop S (2011) Center-surround diver-
gence of feature statistics for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 2214–2219

Krizhevsky A, Sutskever I, Hinton GE (2012) Ima-
genet classiﬁcation with deep convolutional neural
networks. In: Advances in neural information pro-
cessing systems, pp 1097–1105

Li G, Yu Y (2015) Visual saliency based on multiscale
deep features. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 5455–
5463

Li N, Ye J, Ji Y, Ling H, Yu J (2014a) Saliency detec-
tion on light ﬁeld. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition
Li X, Lu H, Zhang L, Ruan X, Yang MH (2013) Saliency
detection via dense and sparse reconstruction. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 2976–2983

Li X, Zhao L, Wei L, Yang MH, Wu F, Zhuang Y, Ling
H, Wang J (2016) Deepsaliency: Multi-task deep neu-
ral network model for salient object detection. IEEE
Transactions on Image Processing 25(8):3919–3930
Li Y, Hou X, Koch C, Rehg J, Yuille A (2014b) The se-
crets of salient object segmentation. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 280–287

Liu T, Yuan Z, Sun J, Wang J, Zheng N, Tang X, Shum
HY (2011) Learning to detect a salient object. IEEE

Transactions on Pattern Analysis and Machine Intel-
ligence 33(2):353–367

Long J, Shelhamer E, Darrell T (2015) Fully convolu-
tional networks for semantic segmentation. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 3431–3440

Ma C, Huang JB, Yang X, Yang MH (2015) Hierar-
chical convolutional features for visual tracking. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 3074–3082

Mahadevan V, Vasconcelos N (2009) Saliency-based
discriminant tracking. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recogni-
tion, pp 1007–1013

Marchesotti L, Cifarelli C, Csurka G (2009) A frame-
work for visual saliency detection with applications
to image thumbnailing. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
2232–2239

Martins AC (2008) Continuous opinions and discrete
actions in opinion dynamics problems. International
Journal of Modern Physics C 19(04):617–624

Ng AY, Jordan MI, Weiss Y, et al (2002) On spectral
clustering: Analysis and an algorithm. Advances in
neural information processing systems 2:849–856
Otsu N (1975) A threshold selection method from gray-
level histograms. Automatica 11(285-296):23–27
Pan Q, Qin Y, Xu Y, Tong M, He M (2016) Opinion
evolution in open community. International Journal
of Modern Physics C p 1750003

Perazzi F, Kr¨ahenb¨uhl P, Pritch Y, Hornung A (2012)
Saliency ﬁlters: Contrast based ﬁltering for salient
region detection. In: Proceedings of IEEE Conference
on Computer Vision and Pattern Recognition, IEEE,
pp 733–740

Pinheiro PH, Collobert R (2014) Recurrent convolu-
tional neural networks for scene labeling. In: Proceed-
ings of International Conference on Machine Learn-
ing, pp 82–90

Qin Y, Lu H, Xu Y, Wang H (2015) Saliency detection
via cellular automata. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recognition
Rahtu E, Kannala J, Salo M, Heikkil¨a J (2010) Seg-
menting salient objects from images and videos. In:
Proceedings of European Conference on Computer
Vision, pp 366–379

Reinagel P, Zador AM (1999) Natural scene statistics at
the centre of gaze. Network: Computation in Neural
Systems 10(4):341–350

Scharfenberger C, Wong A, Fergani K, Zelek JS, Clausi
DA (2013) Statistical textural distinctiveness for
salient region detection in natural images. In: Pro-
ceedings of IEEE Conference on Computer Vision

18

Yao Qin* et al.

Computer Vision and Pattern Recognition, pp 3183–
3192

Wang Q, Zheng W, Piramuthu R (2016) Grab: Visual
saliency via novel graph model and background pri-
ors. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 535–543
Wei Y, Wen F, Zhu W, Sun J (2012) Geodesic saliency
using background priors. In: Proceedings of European
Conference on Computer Vision, pp 29–42

Wolfram S (1983) Statistical mechanics of cellular au-

tomata. Reviews of modern physics 55(3):601

Xie Y, Lu H (2011) Visual saliency detection based
on bayesian model. In: Proceedings of IEEE Interna-
tional Conference on Image Processing, pp 645–648
Xie Y, Lu H, Yang MH (2013) Bayesian saliency via
low and mid level cues. IEEE Transactions on Image
Processing 22(5):1689–1698

Yan Q, Xu L, Shi J, Jia J (2013) Hierarchical saliency
detection. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 1155–
1162

Yang C, Zhang L, Lu H, Ruan X, Yang MH (2013)
Saliency detection via graph-based manifold ranking.
In: Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 3166–3173

Yang J, Yang MH (2012) Top-down visual saliency via
joint crf and dictionary learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, IEEE, pp 2296–2303

Zhao R, Ouyang W, Li H, Wang X (2015) Saliency de-
tection by multi-context deep learning. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 1265–1274

Zhou F, Bing Kang S, Cohen MF (2014) Time-mapping
using space-time saliency. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Zhu W, Liang S, Wei Y, Sun J (2014) Saliency optimiza-
tion from robust background detection. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 2814–2821

Zou W, Komodakis N (2015) Harf: Hierarchy-
associated rich features for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 406–414

and Pattern Recognition, pp 979–986

Shen X, Wu Y (2012) A uniﬁed approach to salient
object detection via low rank matrix recovery. In:
Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 853–860

Shi K, Wang K, Lu J, Lin L (2013) Pisa: Pixelwise im-
age saliency by aggregating complementary appear-
ance contrast measures with spatial priors. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 2115–2122

Siagian C, Itti L (2007) Rapid biologically-inspired
scene classiﬁcation using features shared with visual
attention. IEEE Transactions on Pattern Analysis
and Machine Intelligence 29(2):300–312

Smith AR (1972) Real-time language recognition by
one-dimensional cellular automata. Journal of Com-
puter and System Sciences 6(3):233–253

Sun J, Ling H (2011) Scale and object aware image
retargeting for thumbnail browsing. In: Proceedings
of the IEEE International Conference on Computer
Vision, pp 1511–1518

Sun J, Lu H, Li S (2012) Saliency detection based on
integration of boundary and soft-segmentation. In:
Proceedings of IEEE International Conference on Im-
age Processing, pp 1085–1088

Szegedy C, Toshev A, Erhan D (2013) Deep neural net-
works for object detection. In: Advances in Neural
Information Processing Systems, pp 2553–2561

Szegedy C, Liu W, Jia Y, Sermanet P, Reed S, Anguelov
D, Erhan D, Vanhoucke V, Rabinovich A (2015) Go-
ing deeper with convolutions. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern
Recognition, pp 1–9

Tong N, Lu H, Ruan X, Yang MH (2015a) Salient object
detection via bootstrap learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, pp 1884–1892

Tong N, Lu H, Zhang Y, Ruan X (2015b) Salient object
detection via global and local cues. Pattern Recogni-
tion 48(10):3258–3267

Von Neumann J (1951) The general and logical the-
ory of automata. Cerebral mechanisms in behavior
1(41):1–2

Von Neumann J, Burks AW, et al (1966) Theory of self-
reproducing automata. IEEE Transactions on Neural
Networks 5(1):3–14

Wang L, Xue J, Zheng N, Hua G (2011) Automatic
salient object extraction with contextual cue. In: Pro-
ceedings of the IEEE International Conference on
Computer Vision, pp 105–112

Wang L, Lu H, Ruan X, Yang MH (2015) Deep net-
works for saliency detection via local estimation and
global search. In: Proceedings of IEEE Conference on

Noname manuscript No.
(will be inserted by the editor)

Hierarchical Cellular Automata for Visual Saliency

Yao Qin* · Mengyang Feng* · Huchuan Lu · Garrison W. Cottrell

7
1
0
2
 
y
a
M
 
6
2
 
 
]

V
C
.
s
c
[
 
 
1
v
5
2
4
9
0
.
5
0
7
1
:
v
i
X
r
a

Received: date / Accepted: date

Abstract Saliency detection, ﬁnding the most impor-
tant parts of an image, has become increasingly popular
in computer vision. In this paper, we introduce Hierar-
chical Cellular Automata (HCA) – a temporally evolv-
ing model to intelligently detect salient objects. HCA
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). As an unsupervised propagation mechanism,
Single-layer Cellular Automata can exploit the intrinsic
relevance of similar regions through interactions with
neighbors. Low-level image features as well as high-
level semantic information extracted from deep neu-
ral networks are incorporated into the SCA to measure
the correlation between diﬀerent image patches. With
these hierarchical deep features, an impact factor ma-
trix and a coherence matrix are constructed to balance
the inﬂuences on each cell’s next state. The saliency
values of all cells are iteratively updated according to a
well-deﬁned update rule. Furthermore, we propose CCA
to integrate multiple saliency maps generated by SCA
at diﬀerent scales in a Bayesian framework. Therefore,
single-layer propagation and multi-layer integration are
jointly modeled in our uniﬁed HCA. Surprisingly, we

Yao Qin
University of California, San Diego
E-mail: yaq007@eng.ucsd.edu

Mengyang Feng
Dalian University of Technology
E-mail: mengyangfeng@gmail.com

Huchuan Lu
Dalian University of Technology
E-mail: lhchuan@dlut.edu.cn

Garrsion W. Cottrell
University of California, San Diego
E-mail: gary@eng.ucsd.edu

* Equal Contribution

ﬁnd that the SCA can improve all existing methods
that we applied it to, resulting in a similar precision
level regardless of the original results. The CCA can
act as an eﬃcient pixel-wise aggregation algorithm that
can integrate state-of-the-art methods, resulting in even
better results. Extensive experiments on four challeng-
ing datasets demonstrate that the proposed algorithm
outperforms state-of-the-art conventional methods and
is competitive with deep learning based approaches.

Keywords Saliency Detection · Hierarchical Cellular
Automata · Deep Contrast Features · Bayesian
Framework

1 Introduction

Humans excel in identifying visually signiﬁcant regions
in a scene corresponding to salient objects. Given an im-
age, people can quickly tell what attracts them most.
In the ﬁeld of computer vision, however, performing the
same task is very challenging, despite dramatic progress
in recent years. To mimic the human attention sys-
tem, many researchers focus on developing computa-
tional models that locate regions of interest in the im-
age. Since accurate saliency maps can assign relative
importance to the visual contents in an image, saliency
detection can be used as a pre-processing procedure to
narrow the scope of visual processing and reduce the
cost of computing resources. As a result, saliency detec-
tion has raised a great amount of attention (Achanta
et al, 2009; Goferman et al, 2010) and has been in-
corporated into various computer vision tasks, such as
visual tracking (Mahadevan and Vasconcelos, 2009), ob-
ject retargeting (Ding et al, 2011; Sun and Ling, 2011)
and image categorization (Siagian and Itti, 2007; Kanan
and Cottrell, 2010). Results in perceptual research

2

Yao Qin* et al.

are usually integrated in a simple and heuristic way,
which may directly limit the precision of saliency ag-
gregation.

To address these two obvious problems, we propose
a novel method named Hierarchical Cellular Automata
(HCA) to extract the salient objects from the back-
ground eﬃciently. A Hierarchical Cellular Automata
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). First, to improve the features, we use fully
convolutional networks (Long et al, 2015) to extract
deep features due to their successful application to se-
mantic segmentation. It has been demonstrated that
deep features are highly versatile and have stronger rep-
resentational power than traditional handcrafted fea-
tures (Krizhevsky et al, 2012; Farabet et al, 2013; Gir-
shick et al, 2014). Low-level image features and high-
level saliency cues extracted from deep neural networks
are used by an SCA to measure the similarity of neigh-
bors. With these hierarchical deep features, the SCA
iteratively updates the saliency map through interac-
tions with similar neighbors. Then the salient object
will naturally emerge from the background with high
consistency among similar image patches. Secondly, to
detect multi-scale salient objects, we apply the SCA at
diﬀerent scales and integrate them with the CCA based
on Bayesian inference. Through interactions with neigh-
bors in a cuboid zone, the integrated saliency map can
highlight the foreground and suppress the background.
An overview of our proposed HCA is shown in Figure. 2.
Furthermore, the Hierarchical Cellular Automata is
capable of optimizing other saliency detection methods.
If a saliency map generated by one of the existing meth-
ods is used as the prior map and fed into HCA, it can be
improved to the state-of-the-art precision level. Mean-
while, if multiple saliency maps generated by diﬀerent
existing methods are used as initial inputs, HCA can
naturally fuse these saliency maps and achieve a result
that outperforms each method.

In summary, the main contributions of our work in-

clude:
(1) We propose a novel Hierarchical Cellular Automata
to adaptively detect salient objects of diﬀerent scales
based on hierarchical deep features. The model eﬀec-
tively improves all of the methods we have applied it
to to state-of-the-art precision levels and is relatively
insensitive to the original maps.
(2) Single-layer Cellular Automata serve as a propaga-
tion mechanism that exploits the intrinsic relevance of
similar regions via interactions with neighbors.
(3) Cuboid Cellular Automata can integrate multiple
saliency maps into a more favorable result under the
Bayesian framework.

Fig. 1 An example illustrates that conventional saliency
detection methods based on handcrafted low-level features
fail
in complex circumstances. From top left to bottom
right: stimulus, HS (Yan et al, 2013), DSR (Li et al, 2013),
MR (Yang et al, 2013), ground truth, wCO (Zhu et al, 2014),
and our method SCA and HCA.

show that contrast is one of the decisive factors in the
human visual attention system (Itti and Koch, 2001;
Reinagel and Zador, 1999), suggesting that salient ob-
jects are most likely in the region of the image that
signiﬁcantly diﬀers from its surroundings. Many con-
ventional saliency detection methods focus on exploit-
ing local and global contrast based on various hand-
crafted image features, e.g., color features (Liu et al,
2011; Cheng et al, 2015), focusness (Jiang et al, 2013c),
textual distinctiveness (Scharfenberger et al, 2013), and
structure descriptors (Shi et al, 2013). Although these
methods perform well on simple benchmarks, they may
fail in some complex situations where the handcrafted
low-level features do not help salient objects stand out
from the background. For example, in Figure. 1, the
prairie dog is surrounded by low-contrast rocks and
bushes. It is challenging to detect the prairie dog as
a salient object with only low-level saliency cues. How-
ever, humans can easily recognize the prairie dog based
on its category as it is semantically salient in high-level
cognition and understanding.

In addition to the limitation of low-level features,
the large variations in object scales also restrict the ac-
curacy of saliency detection. An appropriate scale is of
great importance in extracting the salient object from
the background. One of the most popular ways to detect
salient objects of diﬀerent sizes is to construct multi-
scale saliency maps and then aggregate them with pre-
deﬁned functions, such as averaging or a weighted sum-
mation. In most existing methods (Wang et al, 2016; Li
and Yu, 2015; Li et al, 2014a; Zhou et al, 2014; Borji
et al, 2015), however, these constructed saliency maps

Hierarchical Cellular Automata for Visual Saliency

3

Fig. 2 The pipeline of our proposed Hierarchical Cellular Automata. First, the stimulus is segmented into multi-scale super-
pixels, and superpixels on the image boundary are selected as seeds for the propagation of the background (Section. 3.1). Then
FCN-32s (Long et al, 2015) is used as a feature extractor to obtain deep features (Section. 3.2). The generated prior maps
and deep features are both fed into the Single-Layer Cellular Automata (Section. 3.3.1) to create multi-scale saliency maps.
Finally, we integrate these saliency maps via the Cuboid Cellular Automata (Section. 3.3.2) to obtain our ultimate result.

2 Related Work

2.1 Salient Object Detection

Methods of saliency detection can be divided into two
categories: top-down (task-driven) methods and bottom-
up (data-driven) methods. Approaches like (Alexe et al,
2010; Marchesotti et al, 2009; Ng et al, 2002; Yang and
Yang, 2012) are typical top-down visual attention meth-
ods that require supervised learning with manually la-
beled ground truth. To better distinguish salient ob-
jects from the background, high-level category-speciﬁc
information and supervised methods are incorporated
to improve the accuracy of saliency maps. In contrast,
bottom-up methods usually concentrate on low-level
cues such as color, intensity, texture and orientation to
construct saliency maps (Hou and Zhang, 2007; Jiang
et al, 2011; Klein and Frintrop, 2011; Sun et al, 2012;
Tong et al, 2015b; Yan et al, 2013). Some global bottom-
up approaches tend to build saliency maps by calculat-
ing the holistic statistics on uniqueness of each element
over the whole image (Cheng et al, 2015; Perazzi et al,
2012; Bruce and Tsotsos, 2005).

As saliency is deﬁned as a particular part of an im-
age that visually stands out compared to their neigh-
boring regions or the rest of image, one of the most
used principles, contrast prior, measures the saliency of
a region according to the color contrast or geodesic dis-
tance against its surroundings (Cheng et al, 2013, 2015;
Jiang et al, 2011; Jiang and Davis, 2013; Klein and
Frintrop, 2011; Perazzi et al, 2012; Wang et al, 2011).
Recently, the boundary prior has been introduced in
several methods based on the assumption that regions
along the image boundaries are more likely to be the
background (Jiang et al, 2013b; Li et al, 2013; Wei et al,
2012; Yang et al, 2013; Borji et al, 2015; Shen and Wu,
2012), although this takes advantage of photographer’s

bias and is less likely to be true for active robots. Con-
sidering the connectivity of regions in the background,
Wei et al (2012) deﬁne the saliency value for each re-
gion as the shortest-path distance towards the bound-
ary. Yang et al (2013) use manifold ranking to infer the
saliency score of image regions according to their rele-
vance to boundary superpixels. Furthermore, in (Jiang
et al, 2013a), the contrast against the image border is
used as a new regional feature vector to characterize
the background.

However, one of the fundamental problems with all
these conventional saliency detection methods is that
the features used are not representative enough to cap-
ture the contrast between foreground and background,
and this limits the precision of saliency detection. For
one thing, low-level features cannot help salient objects
stand out from a low-contrast background with similar
visual appearance. Also, the extracted global features
are weak in capturing semantic information and have
much poorer generalization compared to the deep fea-
tures used in this paper.

2.2 Deep Neural Networks

Deep convolutional neural networks have recently achie-
ved a great success in various computer vision tasks,
including image classiﬁcation (Krizhevsky et al, 2012;
Szegedy et al, 2015), object detection (Girshick et al,
2014; Hariharan et al, 2014; Szegedy et al, 2013) and
semantic segmentation (Long et al, 2015; Pinheiro and
Collobert, 2014). With the rapid development of deep
neural networks, researchers have begun to construct
eﬀective neural networks for saliency detection (Zhao
et al, 2015; Li and Yu, 2015; Zou and Komodakis, 2015;
Wang et al, 2015; Li et al, 2016; Kim and Pavlovic,
2016). In (Zhao et al, 2015), Zhao et al. propose a
uniﬁed multi-context deep neural network taking both

4

Yao Qin* et al.

global and local context into consideration. Li et al. (Li
and Yu, 2015) and Zou et al. (Zou and Komodakis,
2015) explore high-quality visual features extracted from
DNNs to improve the accuracy of saliency detection.
DeepSaliency in (Li et al, 2016) is a multi-task deep
neural network using a collaborative feature learning
scheme between two correlated tasks, saliency detec-
tion and semantic segmentation, to learn better fea-
ture representation. One leading factor for the success
of deep neural networks is the powerful expressibility
and strong capacity of deep architectures that facili-
tate learning high-level features with semantic infor-
mation (Hariharan et al, 2015; Ma et al, 2015).

In (Donahue et al, 2014), Donahue et al. point out
that features extracted from the activation of a deep
convolutional network can be repurposed to other generic
tasks. Inspired by this idea, we use the hierarchical
deep features extracted from fully convolutional net-
works (Long et al, 2015) to represent smaller image
regions. The extracted deep features incorporate low-
level features as well as high-level semantic information
of the image and can be fed into our Hierarchical Cel-
lular Automata to measure the similarity of diﬀerent
image patches.

2.3 Cellular Automata

Cellular Automata are a model of computation ﬁrst
proposed by Von Neumann (1951). They can be de-
scribed as a temporally evolving system with simple
construction but complex self-organizing behavior. A
Cellular Automaton consists of a lattice of cells with
discrete states, which evolve in discrete time steps ac-
cording to speciﬁc rules. Each cell’s next state is deter-
mined by its current state as well as its nearest neigh-
bors’ states. Cellular Automata have been applied to
simulate the evolution of many complicated dynamical
systems (Batty, 2007; Chopard and Droz, 2005; Cow-
burn and Welland, 2000; de Almeida et al, 2003; Mar-
tins, 2008; Pan et al, 2016). Considering that salient ob-
jects are spatially coherent, we introduce Cellular Au-
tomata into this ﬁeld and propose Single-layer Cellular
Automata as an unsupervised propagation mechanism
to exploit the intrinsic relationships of neighboring ele-
ments of the saliency map and eliminate gaps between
similar regions.

In addition, we propose a method to combine multi-
ple saliency maps generated by diﬀerent algorithms, or
combine saliency maps at diﬀerent scales through what
we call Cuboid Cellular Automata (CCA). In CCA,
states of the automaton are determined by a cuboid
neighborhood corresponding to automata at the same
location as well as their adjacent neighbors in diﬀer-
ent saliency maps. An illustration of the idea is in Fig-
ure 3(b). In this setting, the saliency maps are itera-

tively updated through interactions among neighbors
in the cuboid zone. The state updates are determined
through Bayesian evidence combination rules. Variants
of this type of approach have been used before (Rahtu
et al, 2010; Xie and Lu, 2011; Xie et al, 2013; Li et al,
2013). Xie et al (2013) use the low-level visual cues
derived from a convex hull to compute the observa-
tion likelihood. Li et al (2013) construct saliency maps
through dense and sparse reconstruction and propose a
Bayesian algorithm to combine them. Using Bayesian
updates to combine saliency maps puts the algorithm
for Cuboid Cellular Automata on a ﬁrm theoretical
foundation.

3 Proposed algorithm

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata (HCA) for saliency detection,
composed of two sub-units, a Single-layer Cellular Au-
tomata (SCA), and a Cuboid Cellular Automata (CCA),
as described below. First, we construct prior maps of
diﬀerent scales with superpixels on the image bound-
ary chosen as the background seeds. Then, hierarchi-
cal deep features are extracted from fully convolutional
networks (Long et al, 2015) to measure the similarity of
diﬀerent superpixels. Next, we use SCA to iteratively
update the prior maps at diﬀerent scales based on the
hierarchical deep features. Finally, a CCA is used to
integrate the multi-scale saliency maps using Bayesian
evidence combination. Figure. 2 shows an overview of
our proposed method.

3.1 Background Priors

Recently, there have been various mathematical mod-
els proposed to generate a coarse saliency map to help
locate potential salient objects in an image (Tong et al,
2015a; Zhu et al, 2014; Gong et al, 2015). Even though
prior maps are eﬀective in improving detection preci-
sion, they still have several drawbacks. For example, a
poor prior map may greatly limit the accuracy of the ﬁ-
nal saliency map if it incorrectly estimates the location
of the objects or classiﬁes the foreground as the back-
ground. Also, the computational time to construct a
prior map can be excessive. Therefore, in this paper, we
build a quite simple and time-eﬃcient prior map that
only provides the propagation seeds for HCA, which is
quite insensitive to the prior map and is able to reﬁne
this coarse prior map into an improved saliency map.

First, we use the eﬃcient Simple Linear Iterative
Clustering (SLIC) algorithm (Achanta et al, 2010) to
segment the image into smaller superpixels in order to
capture the essential structural information of the im-
age. Let si ∈ R denote the saliency value of the super-
pixel i in the image. Based on the assumption that su-
perpixels on the image boundary tend to have a higher

Hierarchical Cellular Automata for Visual Saliency

5

probability of being the background, we assign a close-
to-zero saliency value to the boundary superpixels. For
others, we assign a uniform value as their initial saliency
values,

si =

(cid:26) 0.001 i ∈ boundary
0.5 i (cid:54)∈ boundary.

(1)

Considering the great variation in the scales of salient
objects, we segment the image into superpixels at M
diﬀerent scales, which are displayed in Figure. 2 (Prior
Maps).

3.2 Deep Features from FCN

As is well-known, the features in the last layers of CNNs
encode semantic abstractions of objects, and are robust
to appearance variations, while the early layers contain
low-level image features, such as color, edge, and tex-
ture. Although high-level features can eﬀectively dis-
criminate the objects from various backgrounds, they
cannot precisely capture the ﬁne-grained low-level in-
formation due to their low spatial resolution. Therefore,
a combination of these deep features is preferred com-
pared to any individual feature map.

In this paper, we use the feature maps extracted
from the fully-convolutional network (FCN-32s (Long
et al, 2015)) to encode object appearance. The input
image to FCN-32s is resized to 500 × 500, and a 100-
pixel padding is added to the four boundaries. Due to
subsampling and pooling operations in the CNN, the
outputs of each convolutional layer in the FCN frame-
work are not at the same resolution. Since we only care
about the features corresponding to the original image,
we need to 1) crop the feature maps to get rid of the
padding; 2) resize each feature map to the input image
size via the nearest neighbor interpolation. Then each
feature map can be aggregated using a simple linear
combination as:

g(ri, rj) =

ρl · (cid:107)df l

i − df l

j(cid:107)2,

(2)

L
(cid:88)

l=1

where df l
i denotes the deep features of superpixel i on
the l-th layer and ρl is a weighting of the importance of
the l-th feature map, which we set by cross-validation.
The weights are constrained to sum to 1: (cid:80)L
l=1 ρl = 1.
Each superpixel is represented by the mean of the deep
features of all contained pixels. The computed g(ri, rj)
is used to measure the similarity between superpixels.

3.3 Hierarchical Cellular Automata

Hierarchical Cellular Automata (HCA) is a uniﬁed frame-
work composed of single-layer propagation (Single-layer
Cellular Automata) and multi-layer aggregation (Cuboid

Fig. 3 The constructed graph models used in our algorithm.
(a) is used in SCA, the orange lines and the blue lines rep-
resent the connections between the blue center cell and its
2-layer neighbors. The purple lines indicate that superpixels
on the image boundaries are all connected to each other; (b)
is used in CCA, a cell (e.g. the red pixel in the bottom layer)
is connected to the pixels with the same coordinates in other
layers as well as their four adjacent neighbors (e.g. cells in
blue color). All these pixels construct a cuboid interaction
zone.

Cellular Automata). It can generate saliency maps at
diﬀerent scales and integrate them to get a ﬁne-grained
saliency map. We will discuss SCA and CCA respec-
tively in Sections 3.3.1 and 3.3.2.

3.3.1 Single-layer Cellular Automata

In Single-layer Cellular Automata (SCA), each cell de-
notes a superpixel generated by the SLIC algorithm.
SLIC takes the number of desired superpixels as a pa-
rameter, so by using diﬀerent numbers of superpixels
with SCA, we can obtain maps at diﬀerent scales. In
this section, we assume one scale, denoted m. We de-
note the number of superpixels in scale m by nm, but
we omit the subscript m in most notation in this section
for clarity, e.g., F for Fm, C for Cm and s for sm.

We make three major modiﬁcations to the previ-
ous cellular automata models (Smith, 1972; Von Neu-
mann, 1951) for saliency detection. First, the states of
cells in most existing Cellular Automata models are dis-
crete (Von Neumann et al, 1966; Wolfram, 1983). How-
ever, in this paper, we use the saliency value of each
superpixel as its state, which is continuous between
0 and 1. Second, we give a broader deﬁnition of the
neighborhood that is similar to the concept of z-layer
neighborhood (here z = 2) in graph theory. The z-layer
neighborhood of a cell includes adjacent cells as well
as those sharing common boundaries with its adjacent
cells. Also, we assume that superpixels on the image
boundaries are all connected to each other because all
of them serve as background seeds. The connections be-
tween the neighbors are clearly illustrated in Figure. 3
(a). Finally, instead of uniform inﬂuence of the neigh-
bors , the inﬂuence is based on the similarity between
the neighbor to the cell in feature space, as explained
next.

Impact Factor Matrix: Intuitively, neighbors with
more similar features have a greater inﬂuence on the

6

Yao Qin* et al.

cell’s next state. The similarity of any pair of super-
pixels is measured by a pre-deﬁned distance in feature
space. For the m-th saliency map, which has nm super-
pixels in total, we construct an impact factor matrix
F ∈ Rnm×nm . Each element fij in F deﬁnes the impact
factor of superpixel i to j as:

fij =

(cid:40)

exp( −g(ri,rj )
0

σ2
f

)

j ∈ NB(i)

j = i or otherwise,

(3)

where g(ri, rj) is a function that computes the distance
between the superpixel i and j in feature space with ri
as the feature descriptor of superpixel i. In this paper,
we use the weighted distance of hierarchical deep fea-
tures computed by Eqn. (2) to measure the similarity
between neighbors. σf is a parameter that controls the
strength of similarity and NB(i) is the set of the neigh-
bors of the cell i. In order to normalize the impact fac-
tors, a degree matrix D = diag{d1, d2, · · · , dnm } is con-
structed, where di = (cid:80)
i fij. Finally, a row-normalized
impact factor matrix can be calculated as F∗ = D−1 ·F.
Coherence Matrix: Given that each cell’s next
state is determined by its current state as well as its
neighbors, we need to balance the importance of these
two factors. On the one hand, if a superpixel is quite
diﬀerent from all its neighbors in the feature space, its
next state will be primarily based on itself. On the other
hand, if a cell is similar to its neighbors, it should be
assimilated by the local environment. To this end, we
build a coherence matrix C = diag{c1, c2, · · · , cnm} to
promote the evolution among all cells. Each cell’s co-
herence towards its current state is initially computed
as: ci =
max(fij ) , so it is inversely proportional to its
maximum similarity to its neighbors. We normalize this
to be in a range ci ∈ [ b , a + b ], where a and b are pa-
rameters, via:
c∗
i = a ·

ci − min (cj)
max (cj) − min (cj)

+ b,

(4)

1

where the min and max are computed over j = 1, 2,
..., nm. Based on preliminary experiments, we set the
constants a and b in Eq. (4) to 0.6 and 0.2. If a is ﬁxed
to 0.6, our results are insensitive to the value of b in
the interval [ 0.1 , 0.3 ]. The ﬁnal, normalized coherence
matrix is then: C∗ = diag{c∗

1, c∗
Synchronous Update Rule: In Cellular Automata,

2, · · · , c∗

nm

}.

all cells will simultaneously update their states accord-
ing to the update rule, which is a key point in Cellular
Automata, as it controls whether the ultimate evolv-
ing state is chaotic or stable (Wolfram, 1983). Here, we
deﬁne the synchronous update rule based on the im-
pact factor matrix F∗ ∈ Rnm×nm and coherence matrix
C∗ ∈ Rnm×nm:

s(t+1) = C∗s(t) + (I − C∗) F∗s(t),

(5)

Fig. 4 Saliency maps generated by SCA (nm = 200). The
ﬁrst three columns show that salient objects can be precisely
detected when the saliency appears in the center of the im-
age. The last three columns indicate that SCA can still have
good performance even when salient objects touch the image
boundary.

where I is the identity matrix of dimension nm × nm
and s(t) ∈ Rnm denotes the saliency map at time t.
When t = 0, s(0) is the prior map generated by the
method introduced in Section. 3.1. After TS time steps
(a time step is deﬁned as one update of all cells), the
saliency map can be represented as s(TS ). It should be
noted that the update rule is invariant over time; only
the cells’ states s(t) change over iterations.

Our synchronous update rule is based on the gen-
eralized intrinsic characteristics of most images. First,
superpixels belonging to the foreground usually share
similar feature representations. By exploiting the corre-
lation between neighbors, the SCA can enhance saliency
consistency among similar regions and develop a steady
local environment. Second, it can be observed that there
is a high contrast between the object and its surround-
ing background in feature space. Therefore, a clear bound-
ary will naturally emerge between the object and the
background, as the cell’s saliency value is greatly inﬂu-
enced by its similar neighbors. With boundary-based
prior maps, salient objects can be naturally highlighted
after the evolution of the system due to the connec-
tivity and compactness of the object, as exempliﬁed in
Figure. 4. Speciﬁcally, even though part of the salient
object is incorrectly selected as the background seed,
the SCA can adaptively increase their saliency values
under the inﬂuence of the local environment. The last
three columns in Figure. 4 show that when the object
touches the image boundary, the results achieved by the
SCA are still satisfying.

3.3.2 Cuboid Cellular Automata

To better capture the salient objects of diﬀerent scales,
we propose a novel method named Cuboid Cellular
Automata (CCA) to incorporate M diﬀerent saliency
maps generated by SCA under M scales, each of which
serves as a layer of the Cuboid Cellular Automata. In
CCA, each cell corresponds to a pixel, and the saliency
values of all pixels constitute the set of cells’ states. The

Hierarchical Cellular Automata for Visual Saliency

number of all pixels in an image is denoted as H. Unlike
the deﬁnition of a neighborhood in Section. 3.3.1 and
Multi-layer Cellular Automata in (Qin et al, 2015), here
pixels with the same coordinates in diﬀerent saliency
maps as well as their 4-connected pixels are all regarded
as neighbors. That is, for any cell in a saliency map, it
should have 5M − 1 neighbors, constructing a cuboid
interaction zone. The hierarchical graph is presented
in Figure. 3 (b) to illustrate the connections between
neighbors.

m,i = P (i ∈(t)

m F ), while 1 − s(t)

The saliency value of pixel i in the m-th saliency
map at time t is its probability of being the foreground
F , represented as s(t)
m,i = P (i ∈(t)
m,i is
its probability of being the background B, denoted as
1 − s(t)
m B). We binarize each map with an
adaptive threshold using Otsu’s method (Otsu, 1975),
which is computed from the initial saliency map and
does not change over time. The threshold of the m-
th saliency map is denoted by γm. If pixel i in the
m-th binary map is classiﬁed as foreground at time t
(s(t)
m,i = +1. Cor-
respondingly, η(t)
m,i = −1 means that pixel i is binarized
as background (s(t)

m,i ≥ γm), then it will be denoted as η(t)

m,i < γm).

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

If pixel i belongs to the foreground, the probability
that one of its neighboring pixels j in the m-th binary
map is classiﬁed as foreground at time t is denoted as
P ( η(t)
m F ). In the same way, the proba-
bility P ( η(t)
m B ) represents that the pixel
j is binarized as B conditioned on that pixel i belongs
to the background at time t. We make the assump-
tion that P ( η(t)
m F ) is the same for all
the pixels in any saliency map and it does not change
over time. Additionally, it is reasonable to assume that
m F ) = P ( η(t)
P ( η(t)
m B ).
Therefore, we use a constant λ to denote these two
probablities:

m,j = +1|i ∈(t)

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

P ( η(t)

m,j = +1|i ∈(t)

m F ) = P ( η(t)

m,j = −1|i ∈(t)

m B ) = λ.
(6)

m F |η(t)

m,j = +1)

Then the posterior probability P (i ∈(t)
can be calculated as follows:
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:16)
(cid:17)
P

η(t)
m,j = +1

i ∈(t)

i ∈(t)

m F

m F

m F

∝ P

(cid:12)
(cid:12)i ∈(t)
(cid:12)

P

(cid:16)

(cid:16)

(cid:17)

(cid:17)

= s(t)

m,i · λ

In order to get rid of the normalizing constant in

Eqn. (7), we deﬁne the prior ratio Ω(i ∈(t)
i ∈(t)

m F

P

(cid:16)

(cid:17)

m F ) as:

(cid:16)

Ω

i ∈(t)

m F

(cid:17)

=

(cid:16)

P

i ∈(t)

m B

(cid:17) =

s(t)
m,i
1 − s(t)
m,i

.

(7)

(8)

7

(9)

(11)

(12)

Combining Eqn. (7) and Eqn. (8), the posterior ratio
Ω(i ∈(t)

m,j = +1) turns into:

m F | η(t)

(cid:16)

Ω

i ∈(t)

m F

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1

(cid:17)

=

(cid:16)

(cid:16)

P

P

i ∈(t)

m F

i ∈(t)

m B

=

s(t)
m,i
1 − s(t)
m,i

·

(cid:17)

(cid:17)

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
λ
1 − λ

.

m F |η(t)

As the posterior probability P (i ∈(t)

m,j = +1)
represents the probability of pixel i of being the fore-
ground F conditioned on that its neighboring pixel j
in the m-th saliency map is binarized as foreground at
time t, P (i ∈(t)
m,j = +1) can also be used to rep-
resent the probability of pixel i of being the foreground
F at time t + 1. Then,

m F |η(t)

s(t+1)
m,i = P (i ∈(t)

m F |η(t)

m,j = +1).

(10)

According to Eqn. (9) and Eqn. (10), we can get:

s(t+1)
m,i
1 − s(t+1)

m,i

m F |η(t)

m,j = +1)

m F |η(t)

m,j = +1)

m F |η(t)
m B|η(t)

m,j = +1)
m,j = +1)

=

=

=

P (i ∈(t)
1 − P (i ∈(t)
P (i ∈(t)
P (i ∈(t)
s(t)
m,i
1 − s(t)
m,i

·

λ
1 − λ

.

It is much easier to deal with the logarithm of this quan-
tity because the changes in logodds will be additive. So
Eqn. (11) turns into:

(cid:16)

l

s(t+1)
m,i

(cid:17)

= l

(cid:17)

(cid:16)

s(t)
m,i

+ Λ,

(cid:17)

(cid:16)

= ln(

where l

s(t+1)
m,i

) and Λ = ln( λ

s(t+1)
m,i
1−λ ) is
1−s(t+1)
m,i
a constant. The intuitive explanation for Eqn. (12) is
that: if a pixel observes that one of its neighbors is bi-
narized as foreground, it ought to increase its saliency
value; otherwise, it should decrease its saliency value.
Therefore, Eqn. (12) requires Λ > 0. In this paper, we
empirically set Λ = 0.05.

As each pixel has 5M −1 neighbors in total, the pixel
will decide its action (increase or decrease it saliency
value) based on all its neighbors’ current states. Assum-
ing the contribution of each neighbor is conditionally in-
dependent, we derive the synchronous update rule from
Eqn. (12) as:
(cid:16)

(cid:17)

(cid:16)

(cid:17)

l

s(t+1)
m

= l

s(t)
m

+ Σ(t)

m · Λ,

(13)

8

Yao Qin* et al.

Fig. 5 Visual comparison of saliency maps generated by SCA
at diﬀerent scales (n1 = 120, n2 = 160 and n3 = 200) and
HCA.

m ∈ RH is the m-th saliency map at time t and
m ∈ RH can

where s(t)
H is the number of pixels in the image. Σ(t)
be computed by:
5
(cid:88)

M
(cid:88)

(cid:17)

(cid:16)

δ(k = m, j > 1) · sign

s(t)
j,k − γk · 1

,

Σ(t)

m =

j=1

k=1

(14)

(15)

where M is the number of diﬀerent saliency maps, s(t)
j,k ∈
RH is a vector containing the saliency values of the j-th
neighbor for all the pixels in the m-th saliency map at
time t and 1 = [1, 1, · · · , 1](cid:62) ∈ RH . We use δ(k =
m, j > 1) to represent the occasion that the cell only
has 4 neighbors instead of 5 in the m-th saliency map
when it is in the m-th saliency map. After TC iterations,
the ﬁnal integrated saliency map s(TC ) is calculated by

s(TC ) =

1
M

M
(cid:88)

m=1

s(TC )
m .

In this paper, we use CCA to integrate saliency
maps generated by SCA at M = 3 scales. This com-
bination is denoted as HCA, and the visual saliency
maps generated by HCA can be seen in Figure. 5. Here
we use the notation SCAn to denote SCA applied with
n superpixels. We can see that the detected objects in
the integrated saliency maps are uniformly highlighted
and much closer to the ground truth.

3.4 Consistent Optimization

3.4.1 Single-layer Propagation

Due to the connectivity and compactness of the ob-
ject, the salient part of an image will naturally emerge
with the Single-layer Cellular Automaton, which serves
as a propagation mechanism. Therefore, we use the
saliency maps generated by several well-known meth-
ods as the prior maps and refresh them according to the
synchronous update rule. The saliency maps achieved
by CAS (Goferman et al, 2010), LR (Shen and Wu,
2012) and RC (Cheng et al, 2015) are taken as s(0)

Fig. 6 Comparison of saliency maps generated by diﬀerent
methods and their optimized results via Single-layer Cellular
Automata. The ﬁrst row is respectively input images, ground
truth and saliency maps generated by our proposed SCA with
200 superpixels. The second row displays original saliency
maps generated by three traditional methods (from left to
right: CAS (Goferman et al, 2010), LR (Shen and Wu, 2012),
RC (Cheng et al, 2015)). The third row is their corresponding
optimized results by SCA with 200 superpixels.

in Eqn. (5). The optimized results via SCA are shown
in Figure. 6. We can see that the foreground is uni-
formly highlighted and a clear object contour naturally
emerges with the automatic single-layer propagation
mechanism. Even though the original saliency maps are
not particularly good, all of them are signiﬁcantly im-
proved to a similar accuracy level after evolution. That
means our method is independent of prior maps and can
make a consistent and eﬃcient optimization towards
state-of-the-art methods.

3.4.2 Pixel-wise Integration

A variety of methods have been developed for visual
saliency detection, and each of them has its advantages
and limitations. As shown in Figure. 7, the performance
of a saliency detection method varies with individual
images. Each method can work well for some images or
some parts of the images but none of them can perfectly
handle all the images. Furthermore, diﬀerent methods
may complement each other. To take advantage of the
superiority of each saliency map, we use Cuboid Cel-
lular Automata to aggregate two groups of saliency
maps, which are generated by three conventional algo-
rithms: BL (Tong et al, 2015a), HS (Yan et al, 2013) and
MR (Yang et al, 2013) and three deep learning meth-
ods: MDF (Li and Yu, 2015) and DS (Li et al, 2016)
and MCDL (Zhao et al, 2015). Each of them serves
as a layer of Cellular Automata s(0)
m in Eqn. (13). Fig-
ure. 7 shows that our proposed pixel-wise aggregation
method, Cuboid Cellular Automata, can appropriately
integrate multiple saliency maps and outperforms each
one. The saliency objects on the aggregated saliency
map are consistently highlighted and much closer to
the ground truth.

Hierarchical Cellular Automata for Visual Saliency

9

(a) Saliency aggregation of three conventional methods

(b) Saliency aggregation of three deep learning methods

Fig. 7 Eﬀects of pixel-wise saliency aggregation with Cuboid
Cellular Automata. We integrate saliency maps generated
by three conventional algorithms: BL (Tong et al, 2015a),
HS (Yan et al, 2013) and MR (Yang et al, 2013) in (a) and
incorporate saliency maps generated by three deep learning
methods: MDF (Li and Yu, 2015), DS (Li et al, 2016), and
MCDL (Zhao et al, 2015) in (b). The integrated result is de-
noted as CCA.

3.4.3 SCA + CCA = HCA

Here we show that when CCA is applied to some (poor)
prior maps, it does not perform as well as when the
prior map is post-processed by SCA. This motivates
their combination into HCA. As is shown in Figure. 8,
when the candidate saliency maps are not well con-
structed, both CCA and MCA (Qin et al, 2015) fail to
detect the salient object. Unlike CCA and MCA, HCA
overcomes this limitation through incorporating single-
layer propagation (SCA) together with pixel-wise in-
tegration (CCA) into a uniﬁed framework. The salient
objects can be intelligently detected by HCA regardless
of the original performance of the candidate methods.
When we use HCA to integrate existing methods, the
optimized results will be denoted as HCA*.

4 Experiments

In order to demonstrate the eﬀectiveness of our pro-
posed algorithms, we compare the results on four chal-
lenging datasets: ECSSD (Yan et al, 2013), MSRA5000
(Liu et al, 2011), PASCAL-S (Li et al, 2014b) and
HKU-IS (Li and Yu, 2015). The Extended Complex
Scene Saliency Dataset (ECSSD) contains 1000 images
with multiple objects of diﬀerent sizes. Some of the im-
ages come from the challenging Berkeley-300 dataset.
MSRA- 5000 contains more comprehensive images with
complex background. The PASCAL-S dataset derives
from the validation set of PASCAL VOC2010 (Ever-
ingham et al, 2010) segmentation challenge and con-
tains 850 natural images. The last dataset, HKU-IS,
contains 4447 challenging images and their pixel-wise
saliency annotation. In this paper, we use ECSSD as

Fig. 8 Eﬀects of holistic optimization by Hierarchical Cel-
lular Automata. We use MCA (Qin et al, 2015), CCA and
HCA to integrate saliency maps generated by three classic
methods: FT (Achanta et al, 2009), ITTI (Itti et al, 1998)
and CAS (Goferman et al, 2010). Their respective saliency
maps optimized by SCA with 200 superpixels are shown in
the second row. Note that HCA* uses as input the saliency
maps processed by SCA (the second row) and applies CCA to
them, while the MCA and CCA models are applied directly
to the ﬁrst row.

the validation dataset to help choose the feature maps
in FCN (Long et al, 2015).

We compare our algorithm with 20 classic or state-
of-the-art methods including ITTI (Itti et al, 1998),
FT (Achanta et al, 2009), CAS (Goferman et al, 2010),
LR (Shen and Wu, 2012), XL13 (Xie et al, 2013), DSR
(Li et al, 2013), HS (Yan et al, 2013), UFO (Jiang
et al, 2013c), MR (Yang et al, 2013), DRFI (Jiang
et al, 2013b), wCO (Zhu et al, 2014), RC (Cheng et al,
2015), HDCT (Kim et al, 2014), BL (Tong et al, 2015a),
BSCA (Qin et al, 2015), LEGS (Wang et al, 2015),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015),
DS (Li et al, 2016), and SSD-HS (Kim and Pavlovic,
2016), where the last 5 methods are deep learning-based
methods. The results of diﬀerent methods are either
provided by authors or achieved by running available
code or binaries. The code and results of HCA will be
publicly available at our project site 1.
4.1 Parameter Setup

For the Single-layer Cellular Automaton, we set the
number of iterations TS = 20. σ2
f in Eq. (3) is set to
0.1 as in (Yang et al, 2013). For the Cuboid Cellular
Automata, we set the number of iterations TC = 3. We
determined empirically that SCA and CCA converge by
20 and 3 iterations, respectively. We choose M = 3 and
run SCA with n1 = 120, n2 = 160, n3 = 200 superpixels
to generate multi-scale saliency maps for CCA.
4.2 Evaluation Metrics

We evaluate all methods by standard Precision-Recall
(PR) curves via binarizing the saliency map with a

1 https://github.com/ArcherFMY/HCA_saliency_codes

10

Yao Qin* et al.

Fig. 9 Visual comparison of saliency maps with diﬀerent layers of deep features. The left two columns are the input images
and their ground truth. Other columns present the saliency maps with diﬀerent layers of deep features. The color bars on the
top stand for diﬀerent convolutional layers (see Figure. 10(a) and (b)).

(a) F-measure bars

(b) MAE bars

4.3 Validation of the Proposed Algorithm

MAE =

|si − gi|.

1
H

H
(cid:88)

i=1

(18)

MAE indicates how similar a saliency map is compared
to the ground truth, and is of great importance for
diﬀerent applications, such as image segmentation and
cropping (Perazzi et al, 2012).

4.3.1 Feature Analysis

In order to construct the Impact Factor matrix, we need
to choose the features that will enter into Eqn.( 2). Here
we analyze the eﬃcacy of the features in diﬀerent layers
of a deep network in order to choose these feature lay-
ers. In deep neural networks, earlier convolutional layers
capture ﬁne-grained low-level information, e.g., colors,
edges and texture, while later layers capture high-level
semantic features. In order to select the best feature
layers in the FCN (Long et al, 2015), we use ECSSD
as a validation dataset to measure the performance of
deep features extracted from diﬀerent layers. The func-
tion g(ri, rj) in Eqn. (3) can be computed as
(cid:13)
g(ri, rj) = (cid:13)
(cid:13)2

i − df l
j

(cid:13)df l

(19)

,

where df l
i denotes the deep features of superpixel i on
the l-th layer. The outputs of convolutional layers, relu
layers and pooling layers are all regarded as a feature
map. Therefore, we consider in total 31 layers of fully
convolutional networks. We do not take the last two
convolutional layers into consideration as their spatial
resolutions are too low.

We use the F-measure (the higher, the better) and
mean absolute error (MAE) (the lower, the better) to
evaluate the performance of diﬀerent layers on the EC-
SSD dataset. The results are shown in Figure. 10 (a)
and (b). The F-measure score is obtained by thresh-
olding the saliency maps at twice the mean saliency
value. We use this convention for all of the subsequent
F-measure results. The x-index in Figure. 10 (a) and (b)
refers to convolutional, ReLu, and pooling layers as im-
plemented in the FCN. We can see that deep features
extracted from the pooling layer in Conv1 and Conv5
can achieve the best two F-measure scores, and also
perform well on MAE. The saliency maps in Figure. 9
correspond to the bars in Figure 10. Here it is visually

(c) Precision-Recall curves comparison

Fig. 10 (a) The F-measure score for each layer in FCN-32s
on ECSSD; (b) The MAE score for each layer in FCN-32s
on ECSSD; (c) Precision-Recall curves of SCA using deep
features extracted from pool1 and pool5 as well as a weighted
summation of these two layers of deep features.

threshold sliding from 0 to 255 and then comparing
the binary maps with the ground truth. Speciﬁcally,

precision =

, recall =

|SF ∩ GF |
|SF |

|SF ∩ GF |
|GF |

,

(16)

where SF is the set of the pixels segmented as the fore-
ground, GF denotes the set of the pixels belonging to
the foreground in the ground truth, and |·| refers to the
number of elements in a set. In many cases, high preci-
sion and recall are both required. These are combined
in the F-measure to obtain a single ﬁgure of merit, pa-
rameterized by β:

Fβ =

(cid:0)1 + β2(cid:1) · precision · recall
β2 · precision + recall

(17)

where β2 is set to 0.3 as suggested in (Achanta et al,
2009) to emphasize the precision. To complement these
two measures, we also use mean absolute error (MAE)
to quantitatively measure the average diﬀerence be-
tween the saliency map s ∈ RH and the ground truth
g ∈ RH in pixel level:

Hierarchical Cellular Automata for Visual Saliency

11

apparent that salient objects are better detected with
the ﬁnal pooling layers of Conv1 and Conv5 . Therefore,
in this paper, we combine the feature maps from pool1
and pool5 with a simple linear combination. Eqn. (2)
then turns into:
g(ri, rj) = ρ1 · (cid:13)

+ ρ2 · (cid:13)

i − df 31
j

i − df 5
j

(cid:13)df 31

, (20)

(cid:13)df 5

(cid:13)
(cid:13)2

(cid:13)
(cid:13)2

where ρ1 and ρ2 balance the weight of pool1 and pool5.
In this paper, we empirically set ρ1 = 0.375 and ρ2 =
0.625 and apply them to all other datasets.

To test the eﬀectiveness of the integrated deep fea-
tures, we show the Precision-Recall curves of Single-
layer Cellular Automata with each layer of deep fea-
tures as well as the integrated deep features on two
datasets. The Precision-Recall curves in Figure. 10 (c)
demonstrate that hierarchical deep features outperform
single-layer features, as they contain both category-
level semantics and ﬁne-grained details.

4.3.2 Component Eﬀectiveness

To demonstrate the eﬀectiveness of our proposed al-
gorithm, we test the results on the standard ECSSD
and PASCAL-S datasets. We generate saliency maps
at three scales: n1 = 120, n2 = 160, n3 = 200 and use
CCA to integrate them. FT curves in Figure. 11 indi-
cate that the results of the Single-layer Automata are
already quite satisfying. In addition, CCA can improve
the overall performance of SCA with a wider range of
high F-measure scores than SCA alone. Similar results
are also achieved on other datasets but are not pre-
sented here to be succinct.

4.3.3 Performance Comparison

As is shown in Figure 12, our proposed Hierarchical Cel-
lular Automata performs favorably against state-of-the-
art conventional algorithms with higher precision and
recall values on four challenging datasets. HCA is com-
petitive with deep learning based approaches and has
higher precision at low levels of recall. Furthermore, the
fairly low MAE scores, displayed in Figure. 12(c), indi-
cate that our saliency maps are very close to the ground
truth. As MCDL (Zhao et al, 2015) trained the network
on the MSRA dataset, we do not report its result on
this dataset in Figure. 12. In addition, LEGS (Wang
et al, 2015) used part of the images in the MSRA and
PASCAL-S datasets as the training set. As a result,
we only test LEGS with the test images on these two
datasets. Saliency maps are shown in Figure. 16 for vi-
sual comparison of our method with other models.

4.4 Optimization of state-of-the-art methods

In the previous sections, we showed qualitatively that
our model creates better saliency maps by improving

Fig. 11 F-measure - Threshold curves of saliency maps gen-
erated by SCA at diﬀerent scales (n1 = 120, n2 = 160, n3 =
200 respectively), and the integrated results by HCA on EC-
SSD and PASCAL-S.
Table 1 Run Time of Each Component of HCA

Method
w/ SLIC(s)
wo/ SLIC(s)

SCA120
.2889
.0704

SCA160
.3134
.0525

SCA200 CCA HCA
1.0240
.2421

.3380
.0355

-
.0837

initial saliency maps with SCA, or by combining the re-
sults of multiple algorithms with CCA, or by applying
SCA and CCA. Here we compare our methods to other
methods quantitatively. When the initial maps are im-
perfect, we apply SCA to improve them and then apply
CCA. When the initial maps are already very good, we
show that we can combine state-of-the-art methods to
perform even better by simply using CCA.
4.4.1 Consistent Improvement

In Section 3.4.1, we concluded that results generated
by diﬀerent methods can be eﬀectively optimized via
Single-layer Cellular Automata. Figure 13 shows the
precision-recall curves and mean absolute error bars of
various saliency methods and their optimized results on
two datasets. These results demonstrate that SCA can
greatly improve existing results to a similar precision
level. Even though the original saliency maps are not
well constructed, the optimized results are comparable
to the state-of-the-art methods. It should be noted that
SCA can even optimize deep learning-based methods to
a better precision level, e.g., MCDL (Zhao et al, 2015),
MDF (Li and Yu, 2015), LEGS (Wang et al, 2015), and
SSD-HS (Kim and Pavlovic, 2016). In addition, for one
existing method, we can use SCA to optimize it at dif-
ferent scales and then use CCA to integrate the multi-
scale saliency maps. The ultimate optimized result is
denoted as HCA*. The lowest MAEs of saliency maps
optimized by HCA in Figure 13 (c) show that HCA’s
use of CCA improves performance over SCA alone.

4.4.2 Eﬀective Integration

In Section. 3.4.2, we used Cuboid Cellular Automata as
a pixel-wise aggregation method to integrate two groups
of state-of-the-art methods. One group includes three
of the latest conventional methods while the other con-
tains three deep learning-based methods. We test the

12

Yao Qin* et al.

(a) PR curves

(b) FT curves

(c) MAE bars

Fig. 12 PR curves, FT curves and MAE scores of diﬀerent methods compared with our algorithm (HCA). From top to
bottom: ECSSD, MSRA5000, PASCAL-S and HKU-IS are tested.

Hierarchical Cellular Automata for Visual Saliency

13

(a) PR curves

(b) FT curves

(c) MAE scores

Fig. 13 Consistent improvement on ECSSD and PASCALS datasets. (a) and (b): PR curves of diﬀerent methods (dashed
line) and their optimized version via SCA200 (solid line). The right column shows that SCA200 ((cid:52)), improves the MAEs of
the original methods (×) and that HCA* ((cid:13)), here applied to SCA120, SCA160, and SCA200, further improves the results.

(a) PR curves

(b) FT curves

(c) Score bars

Fig. 14 Eﬀects of pixel-wise aggregation via Cuboid Cellular Automata on ECSSD dataset. The ﬁrst row compares three
conventional methods BL (Tong et al, 2015a), HS (Yan et al, 2013), MR (Yang et al, 2013) and their integrated results via
Cuboid Cellular Automata, denoted as CCA. The second row compares three deep learning models, e.g. DS (Li et al, 2016),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015) and their integrated results. The precision, recall and F-measure scores in
the right column are obtained by thresholding the saliency maps at twice the mean saliency value.

14

Yao Qin* et al.

(a) PR curves

(b) FT curves
Fig. 15 Comparison between three diﬀerent integration methods MCA (Qin et al, 2015), CCA and HCA when integrating
FT (Achanta et al, 2009), ITTI (Itti et al, 1998) and CAS (Goferman et al, 2010) on ECSSD and MSRA datasets.

(c) MAE scores

Table 2 Comparison of Run Time

Code
Matlab
Python

Model Year
HCA
MCDL
LEGS
MDF
BL

2015
2015 Matlab + C
2015
2015

Matlab
Matlab

Time(s) Model Year Code Time(s) Model Year
2013
2013
2012
2011
2010 Matlab + C

HDCT 2014 Matlab
2014 Matlab
wCO
2013 Matlab
DRFI
2013 Matlab
DSR
2013
HS

1.4917
2.2521
1.9050
25.7328
21.5161

Code
Matlab
Matlab
Matlab
C

5.1248
0.1484
8.0104
3.4796
0.3821

MR
XL13
LR
RC
CAS

EXE

Time(s)
0.4542
65.5491
10.0259
0.1360
44.3270

various methods on the ECSSD dataset, and the in-
tegrated result is denoted as CCA. PR curves in Fig-
ure. 14(a) demonstrate the eﬀectiveness of CCA over
all the individual methods. FT curves of CCA in Fig-
ure. 14(b) are ﬁxed at high values that are insensitive
to the thresholds. In addition, we binarize the saliency
map with two times mean saliency value. From Fig-
ure. 14(c) we can see that the integrated result has
higher precision, recall and F-measure scores compared
to each method that is integrated. Also, the mean ab-
solute errors of CCA are always the lowest. The fairly
low mean absolute errors indicate that the integrated
results are quite similar to the ground truth.

Although Cuboid Cellular Automata have exhibited
great strength in integrating multiple saliency maps,
they have a major drawback in that the integrated re-
sult highly relies on the precision of the saliency detec-
tion methods used as input. If saliency maps fed into
Cuboid Cellular Automata are not well constructed, it
cannot naturally detect the salient objects via inter-
actions between these candidate saliency maps. HCA,
however, can easily address this problem by incorporat-

ing single-layer propagation and multi-layer integration
into a uniﬁed framework. Unlike MCA (Qin et al, 2015)
and CCA, HCA can achieve better integrated saliency
map regardless of their original detection performance
through the application of SCA to clean up the ini-
tial maps. PR curves, FT curves and MAE scores in
Figure. 15 show that 1) CCA has a better performance
than MCA, as it considers the inﬂuence of adjacent cells
on diﬀerent layers. 2) HCA can greatly improve the ag-
gregation results compared to MCA and CCA because
it is independent of the initial saliency maps.

4.5 Run Time

The run time to process one image in the MSRA5000
dataset via Matlab R2014b-64bit with a PC equipped
with an i7-4790k 3.60 GHz CPU and 32GB RAM is
shown in Table 1. The Table displays the average run
time of each component in our algorithm, not including
the time for extracting deep features. We can see that
the Single-layer Cellular Automata and Cuboid Cellular
Automata are very fast at processing one image, on av-
erage 0.06s. Their combination HCA takes only 0.2421s

Hierarchical Cellular Automata for Visual Saliency

15

Fig. 16 Visual comparison of saliency maps of diﬀerent methods. GT: Ground Truth, Ours: Saliency maps generated by
Hierarchical Cellular Automata (HCA).

to process one image without superpixel segmentation
and 1.0240s with SLIC.

We also compare the run time of our method with
other state-of-the-art methods in Table 2. Here we com-
pute the run time including superpixel segmentation
and feature extraction for all models. Our algorithm
has the least run time compared to other deep learning
based methods and is the ﬁfth fastest overall.

5 Conclusion

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata, a temporally evolving system
for saliency detection. It incorporates two components,
Single-layer Cellular Automata (SCA), which can clean
up noisy saliency maps, and Cuboid Cellular Automata
(CCA), that can integrate multiple saliency maps. SCA
is designed to exploit the intrinsic connectivity of saliency

objects through interactions with neighbors. Low-level
image features and high-level semantic information are
both extracted from deep neural networks and incor-
porated into SCA to measure the similarity between
neighbors. With superpixels on the image boundary
chosen as the background seeds, SCA iteratively up-
dates the saliency maps according to well-deﬁned up-
date rules, and salient objects naturally emerge un-
der the inﬂuence of their neighbors. This context-based
propagation mechanism can improve the saliency maps
generated by existing methods to a high performance
level. We used this in two ways: First, given a single
saliency map, SCA can be applied to superpixels gen-
erated from the saliency map at multiple scales, and
CCA can then integrate these into an improved saliency
map. Second, we can take saliency maps generated by

16

Yao Qin* et al.

multiple methods, apply SCA (if necessary) to improve
them, and then apply CCA to integrate them into bet-
ter saliency maps. Our experimental results demon-
strate the superior performance of our algorithms com-
pared to existing methods.

References

Achanta R, Hemami S, Estrada F, Susstrunk S (2009)
Frequency-tuned salient region detection. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 1597–1604

Achanta R, Shaji A, Smith K, Lucchi A, Fua P,

S¨usstrunk S (2010) Slic superpixels. Tech. rep.

Alexe B, Deselaers T, Ferrari V (2010) What is an ob-
ject? In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 73–80
de Almeida CM, Batty M, Monteiro AMV, Cˆamara
G, Soares-Filho BS, Cerqueira GC, Pennachin CL
(2003) Stochastic cellular automata modeling of ur-
ban land use dynamics: empirical development and
estimation. Computers, Environment and Urban Sys-
tems 27(5):481–509

Batty M (2007) Cities and complexity: understanding
cities with cellular automata, agent-based models,
and fractals. The MIT press

Borji A, Cheng MM, Jiang H, Li J (2015) Salient ob-
ject detection: A benchmark. IEEE Transactions on
Image Processing 24(12):5706–5722

Bruce N, Tsotsos J (2005) Saliency based on informa-
tion maximization. In: Advances in neural informa-
tion processing systems, pp 155–162

Cheng M, Mitra NJ, Huang X, Torr PH, Hu S (2015)
Global contrast based salient region detection. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence 37(3):569–582

Cheng MM, Warrell J, Lin WY, Zheng S, Vineet V,
Crook N (2013) Eﬃcient salient region detection with
soft image abstraction. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
1529–1536

Chopard B, Droz M (2005) Cellular automata model-
ing of physical systems, vol 6. Cambridge University
Press

Cowburn R, Welland M (2000) Room tempera-
ture magnetic quantum cellular automata. Science
287(5457):1466

Ding Y, Xiao J, Yu J (2011) Importance ﬁltering for
image retargeting. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 89–96

Donahue J, Jia Y, Vinyals O, Hoﬀman J, Zhang N,
Tzeng E, Darrell T (2014) Decaf: A deep convolu-

tional activation feature for generic visual recogni-
tion. In: Proceedings of International Conference on
Machine Learning, pp 647–655

Everingham M, Van Gool L, Williams CK, Winn J,
Zisserman A (2010) The pascal visual object classes
(voc) challenge. International journal of computer vi-
sion 88(2):303–338

Farabet C, Couprie C, Najman L, LeCun Y (2013)
Learning hierarchical
features for scene labeling.
IEEE transactions on pattern analysis and machine
intelligence 35(8):1915–1929

Girshick R, Donahue J, Darrell T, Malik J (2014) Rich
feature hierarchies for accurate object detection and
semantic segmentation. In: Proceedings of the IEEE
conference on computer vision and pattern recogni-
tion, pp 580–587

Goferman S, Zelnik-manor L, Tal A (2010) Context-
aware saliency detection. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Gong C, Tao D, Liu W, Maybank SJ, Fang M, Fu
K, Yang J (2015) Saliency propagation from simple
to diﬃcult. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 2531–
2539

Hariharan B, Arbel´aez P, Girshick R, Malik J (2014)
Simultaneous detection and segmentation. In: Pro-
ceedings of European Conference on Computer Vi-
sion, Springer, pp 297–312

Hariharan B, Arbel´aez P, Girshick R, Malik J (2015)
Hypercolumns for object segmentation and ﬁne-
grained localization. In: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recog-
nition, pp 447–456

Hou X, Zhang L (2007) Saliency detection: A spectral
residual approach. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 1–8

Itti L, Koch C (2001) Computational modelling of vi-
sual attention. Nature reviews neuroscience 2(3):194–
203

Itti L, Koch C, Niebur E (1998) A model of saliency-
based visual attention for rapid scene analysis. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence (11):1254–1259

Jiang B, Zhang L, Lu H, Yang C, Yang MH (2013a)
Saliency detection via absorbing markov chain. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 1665–1672

Jiang H, Wang J, Yuan Z, Liu T, Zheng N, Li S (2011)
Automatic salient object segmentation based on con-
text and shape prior. In: Proceedings of British Ma-
chine Vision Conference, vol 6, p 9

Hierarchical Cellular Automata for Visual Saliency

17

Jiang H, Wang J, Yuan Z, Wu Y, Zheng N, Li S
(2013b) Salient object detection: A discriminative re-
gional feature integration approach. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 2083–2090

Jiang P, Ling H, Yu J, Peng J (2013c) Salient region de-
tection by ufo: Uniqueness, focusness and objectness.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 1976–1983

Jiang Z, Davis L (2013) Submodular salient region de-
tection. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2043–2050
Kanan C, Cottrell GW (2010) Robust classiﬁcation of
objects, faces, and ﬂowers using natural image statis-
tics. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2472–2479
Kim J, Pavlovic V (2016) A shape-based approach for
salient object detection using deep learning. In: Pro-
ceedings of European Conference on Computer Vi-
sion, pp 455–470

Kim J, Han D, Tai YW, Kim J (2014) Salient region
detection via high-dimensional color transform. In:
Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition, pp 883–890

Klein DA, Frintrop S (2011) Center-surround diver-
gence of feature statistics for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 2214–2219

Krizhevsky A, Sutskever I, Hinton GE (2012) Ima-
genet classiﬁcation with deep convolutional neural
networks. In: Advances in neural information pro-
cessing systems, pp 1097–1105

Li G, Yu Y (2015) Visual saliency based on multiscale
deep features. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 5455–
5463

Li N, Ye J, Ji Y, Ling H, Yu J (2014a) Saliency detec-
tion on light ﬁeld. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition
Li X, Lu H, Zhang L, Ruan X, Yang MH (2013) Saliency
detection via dense and sparse reconstruction. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 2976–2983

Li X, Zhao L, Wei L, Yang MH, Wu F, Zhuang Y, Ling
H, Wang J (2016) Deepsaliency: Multi-task deep neu-
ral network model for salient object detection. IEEE
Transactions on Image Processing 25(8):3919–3930
Li Y, Hou X, Koch C, Rehg J, Yuille A (2014b) The se-
crets of salient object segmentation. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 280–287

Liu T, Yuan Z, Sun J, Wang J, Zheng N, Tang X, Shum
HY (2011) Learning to detect a salient object. IEEE

Transactions on Pattern Analysis and Machine Intel-
ligence 33(2):353–367

Long J, Shelhamer E, Darrell T (2015) Fully convolu-
tional networks for semantic segmentation. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 3431–3440

Ma C, Huang JB, Yang X, Yang MH (2015) Hierar-
chical convolutional features for visual tracking. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 3074–3082

Mahadevan V, Vasconcelos N (2009) Saliency-based
discriminant tracking. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recogni-
tion, pp 1007–1013

Marchesotti L, Cifarelli C, Csurka G (2009) A frame-
work for visual saliency detection with applications
to image thumbnailing. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
2232–2239

Martins AC (2008) Continuous opinions and discrete
actions in opinion dynamics problems. International
Journal of Modern Physics C 19(04):617–624

Ng AY, Jordan MI, Weiss Y, et al (2002) On spectral
clustering: Analysis and an algorithm. Advances in
neural information processing systems 2:849–856
Otsu N (1975) A threshold selection method from gray-
level histograms. Automatica 11(285-296):23–27
Pan Q, Qin Y, Xu Y, Tong M, He M (2016) Opinion
evolution in open community. International Journal
of Modern Physics C p 1750003

Perazzi F, Kr¨ahenb¨uhl P, Pritch Y, Hornung A (2012)
Saliency ﬁlters: Contrast based ﬁltering for salient
region detection. In: Proceedings of IEEE Conference
on Computer Vision and Pattern Recognition, IEEE,
pp 733–740

Pinheiro PH, Collobert R (2014) Recurrent convolu-
tional neural networks for scene labeling. In: Proceed-
ings of International Conference on Machine Learn-
ing, pp 82–90

Qin Y, Lu H, Xu Y, Wang H (2015) Saliency detection
via cellular automata. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recognition
Rahtu E, Kannala J, Salo M, Heikkil¨a J (2010) Seg-
menting salient objects from images and videos. In:
Proceedings of European Conference on Computer
Vision, pp 366–379

Reinagel P, Zador AM (1999) Natural scene statistics at
the centre of gaze. Network: Computation in Neural
Systems 10(4):341–350

Scharfenberger C, Wong A, Fergani K, Zelek JS, Clausi
DA (2013) Statistical textural distinctiveness for
salient region detection in natural images. In: Pro-
ceedings of IEEE Conference on Computer Vision

18

Yao Qin* et al.

Computer Vision and Pattern Recognition, pp 3183–
3192

Wang Q, Zheng W, Piramuthu R (2016) Grab: Visual
saliency via novel graph model and background pri-
ors. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 535–543
Wei Y, Wen F, Zhu W, Sun J (2012) Geodesic saliency
using background priors. In: Proceedings of European
Conference on Computer Vision, pp 29–42

Wolfram S (1983) Statistical mechanics of cellular au-

tomata. Reviews of modern physics 55(3):601

Xie Y, Lu H (2011) Visual saliency detection based
on bayesian model. In: Proceedings of IEEE Interna-
tional Conference on Image Processing, pp 645–648
Xie Y, Lu H, Yang MH (2013) Bayesian saliency via
low and mid level cues. IEEE Transactions on Image
Processing 22(5):1689–1698

Yan Q, Xu L, Shi J, Jia J (2013) Hierarchical saliency
detection. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 1155–
1162

Yang C, Zhang L, Lu H, Ruan X, Yang MH (2013)
Saliency detection via graph-based manifold ranking.
In: Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 3166–3173

Yang J, Yang MH (2012) Top-down visual saliency via
joint crf and dictionary learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, IEEE, pp 2296–2303

Zhao R, Ouyang W, Li H, Wang X (2015) Saliency de-
tection by multi-context deep learning. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 1265–1274

Zhou F, Bing Kang S, Cohen MF (2014) Time-mapping
using space-time saliency. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Zhu W, Liang S, Wei Y, Sun J (2014) Saliency optimiza-
tion from robust background detection. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 2814–2821

Zou W, Komodakis N (2015) Harf: Hierarchy-
associated rich features for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 406–414

and Pattern Recognition, pp 979–986

Shen X, Wu Y (2012) A uniﬁed approach to salient
object detection via low rank matrix recovery. In:
Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 853–860

Shi K, Wang K, Lu J, Lin L (2013) Pisa: Pixelwise im-
age saliency by aggregating complementary appear-
ance contrast measures with spatial priors. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 2115–2122

Siagian C, Itti L (2007) Rapid biologically-inspired
scene classiﬁcation using features shared with visual
attention. IEEE Transactions on Pattern Analysis
and Machine Intelligence 29(2):300–312

Smith AR (1972) Real-time language recognition by
one-dimensional cellular automata. Journal of Com-
puter and System Sciences 6(3):233–253

Sun J, Ling H (2011) Scale and object aware image
retargeting for thumbnail browsing. In: Proceedings
of the IEEE International Conference on Computer
Vision, pp 1511–1518

Sun J, Lu H, Li S (2012) Saliency detection based on
integration of boundary and soft-segmentation. In:
Proceedings of IEEE International Conference on Im-
age Processing, pp 1085–1088

Szegedy C, Toshev A, Erhan D (2013) Deep neural net-
works for object detection. In: Advances in Neural
Information Processing Systems, pp 2553–2561

Szegedy C, Liu W, Jia Y, Sermanet P, Reed S, Anguelov
D, Erhan D, Vanhoucke V, Rabinovich A (2015) Go-
ing deeper with convolutions. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern
Recognition, pp 1–9

Tong N, Lu H, Ruan X, Yang MH (2015a) Salient object
detection via bootstrap learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, pp 1884–1892

Tong N, Lu H, Zhang Y, Ruan X (2015b) Salient object
detection via global and local cues. Pattern Recogni-
tion 48(10):3258–3267

Von Neumann J (1951) The general and logical the-
ory of automata. Cerebral mechanisms in behavior
1(41):1–2

Von Neumann J, Burks AW, et al (1966) Theory of self-
reproducing automata. IEEE Transactions on Neural
Networks 5(1):3–14

Wang L, Xue J, Zheng N, Hua G (2011) Automatic
salient object extraction with contextual cue. In: Pro-
ceedings of the IEEE International Conference on
Computer Vision, pp 105–112

Wang L, Lu H, Ruan X, Yang MH (2015) Deep net-
works for saliency detection via local estimation and
global search. In: Proceedings of IEEE Conference on

Noname manuscript No.
(will be inserted by the editor)

Hierarchical Cellular Automata for Visual Saliency

Yao Qin* · Mengyang Feng* · Huchuan Lu · Garrison W. Cottrell

7
1
0
2
 
y
a
M
 
6
2
 
 
]

V
C
.
s
c
[
 
 
1
v
5
2
4
9
0
.
5
0
7
1
:
v
i
X
r
a

Received: date / Accepted: date

Abstract Saliency detection, ﬁnding the most impor-
tant parts of an image, has become increasingly popular
in computer vision. In this paper, we introduce Hierar-
chical Cellular Automata (HCA) – a temporally evolv-
ing model to intelligently detect salient objects. HCA
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). As an unsupervised propagation mechanism,
Single-layer Cellular Automata can exploit the intrinsic
relevance of similar regions through interactions with
neighbors. Low-level image features as well as high-
level semantic information extracted from deep neu-
ral networks are incorporated into the SCA to measure
the correlation between diﬀerent image patches. With
these hierarchical deep features, an impact factor ma-
trix and a coherence matrix are constructed to balance
the inﬂuences on each cell’s next state. The saliency
values of all cells are iteratively updated according to a
well-deﬁned update rule. Furthermore, we propose CCA
to integrate multiple saliency maps generated by SCA
at diﬀerent scales in a Bayesian framework. Therefore,
single-layer propagation and multi-layer integration are
jointly modeled in our uniﬁed HCA. Surprisingly, we

Yao Qin
University of California, San Diego
E-mail: yaq007@eng.ucsd.edu

Mengyang Feng
Dalian University of Technology
E-mail: mengyangfeng@gmail.com

Huchuan Lu
Dalian University of Technology
E-mail: lhchuan@dlut.edu.cn

Garrsion W. Cottrell
University of California, San Diego
E-mail: gary@eng.ucsd.edu

* Equal Contribution

ﬁnd that the SCA can improve all existing methods
that we applied it to, resulting in a similar precision
level regardless of the original results. The CCA can
act as an eﬃcient pixel-wise aggregation algorithm that
can integrate state-of-the-art methods, resulting in even
better results. Extensive experiments on four challeng-
ing datasets demonstrate that the proposed algorithm
outperforms state-of-the-art conventional methods and
is competitive with deep learning based approaches.

Keywords Saliency Detection · Hierarchical Cellular
Automata · Deep Contrast Features · Bayesian
Framework

1 Introduction

Humans excel in identifying visually signiﬁcant regions
in a scene corresponding to salient objects. Given an im-
age, people can quickly tell what attracts them most.
In the ﬁeld of computer vision, however, performing the
same task is very challenging, despite dramatic progress
in recent years. To mimic the human attention sys-
tem, many researchers focus on developing computa-
tional models that locate regions of interest in the im-
age. Since accurate saliency maps can assign relative
importance to the visual contents in an image, saliency
detection can be used as a pre-processing procedure to
narrow the scope of visual processing and reduce the
cost of computing resources. As a result, saliency detec-
tion has raised a great amount of attention (Achanta
et al, 2009; Goferman et al, 2010) and has been in-
corporated into various computer vision tasks, such as
visual tracking (Mahadevan and Vasconcelos, 2009), ob-
ject retargeting (Ding et al, 2011; Sun and Ling, 2011)
and image categorization (Siagian and Itti, 2007; Kanan
and Cottrell, 2010). Results in perceptual research

2

Yao Qin* et al.

are usually integrated in a simple and heuristic way,
which may directly limit the precision of saliency ag-
gregation.

To address these two obvious problems, we propose
a novel method named Hierarchical Cellular Automata
(HCA) to extract the salient objects from the back-
ground eﬃciently. A Hierarchical Cellular Automata
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). First, to improve the features, we use fully
convolutional networks (Long et al, 2015) to extract
deep features due to their successful application to se-
mantic segmentation. It has been demonstrated that
deep features are highly versatile and have stronger rep-
resentational power than traditional handcrafted fea-
tures (Krizhevsky et al, 2012; Farabet et al, 2013; Gir-
shick et al, 2014). Low-level image features and high-
level saliency cues extracted from deep neural networks
are used by an SCA to measure the similarity of neigh-
bors. With these hierarchical deep features, the SCA
iteratively updates the saliency map through interac-
tions with similar neighbors. Then the salient object
will naturally emerge from the background with high
consistency among similar image patches. Secondly, to
detect multi-scale salient objects, we apply the SCA at
diﬀerent scales and integrate them with the CCA based
on Bayesian inference. Through interactions with neigh-
bors in a cuboid zone, the integrated saliency map can
highlight the foreground and suppress the background.
An overview of our proposed HCA is shown in Figure. 2.
Furthermore, the Hierarchical Cellular Automata is
capable of optimizing other saliency detection methods.
If a saliency map generated by one of the existing meth-
ods is used as the prior map and fed into HCA, it can be
improved to the state-of-the-art precision level. Mean-
while, if multiple saliency maps generated by diﬀerent
existing methods are used as initial inputs, HCA can
naturally fuse these saliency maps and achieve a result
that outperforms each method.

In summary, the main contributions of our work in-

clude:
(1) We propose a novel Hierarchical Cellular Automata
to adaptively detect salient objects of diﬀerent scales
based on hierarchical deep features. The model eﬀec-
tively improves all of the methods we have applied it
to to state-of-the-art precision levels and is relatively
insensitive to the original maps.
(2) Single-layer Cellular Automata serve as a propaga-
tion mechanism that exploits the intrinsic relevance of
similar regions via interactions with neighbors.
(3) Cuboid Cellular Automata can integrate multiple
saliency maps into a more favorable result under the
Bayesian framework.

Fig. 1 An example illustrates that conventional saliency
detection methods based on handcrafted low-level features
fail
in complex circumstances. From top left to bottom
right: stimulus, HS (Yan et al, 2013), DSR (Li et al, 2013),
MR (Yang et al, 2013), ground truth, wCO (Zhu et al, 2014),
and our method SCA and HCA.

show that contrast is one of the decisive factors in the
human visual attention system (Itti and Koch, 2001;
Reinagel and Zador, 1999), suggesting that salient ob-
jects are most likely in the region of the image that
signiﬁcantly diﬀers from its surroundings. Many con-
ventional saliency detection methods focus on exploit-
ing local and global contrast based on various hand-
crafted image features, e.g., color features (Liu et al,
2011; Cheng et al, 2015), focusness (Jiang et al, 2013c),
textual distinctiveness (Scharfenberger et al, 2013), and
structure descriptors (Shi et al, 2013). Although these
methods perform well on simple benchmarks, they may
fail in some complex situations where the handcrafted
low-level features do not help salient objects stand out
from the background. For example, in Figure. 1, the
prairie dog is surrounded by low-contrast rocks and
bushes. It is challenging to detect the prairie dog as
a salient object with only low-level saliency cues. How-
ever, humans can easily recognize the prairie dog based
on its category as it is semantically salient in high-level
cognition and understanding.

In addition to the limitation of low-level features,
the large variations in object scales also restrict the ac-
curacy of saliency detection. An appropriate scale is of
great importance in extracting the salient object from
the background. One of the most popular ways to detect
salient objects of diﬀerent sizes is to construct multi-
scale saliency maps and then aggregate them with pre-
deﬁned functions, such as averaging or a weighted sum-
mation. In most existing methods (Wang et al, 2016; Li
and Yu, 2015; Li et al, 2014a; Zhou et al, 2014; Borji
et al, 2015), however, these constructed saliency maps

Hierarchical Cellular Automata for Visual Saliency

3

Fig. 2 The pipeline of our proposed Hierarchical Cellular Automata. First, the stimulus is segmented into multi-scale super-
pixels, and superpixels on the image boundary are selected as seeds for the propagation of the background (Section. 3.1). Then
FCN-32s (Long et al, 2015) is used as a feature extractor to obtain deep features (Section. 3.2). The generated prior maps
and deep features are both fed into the Single-Layer Cellular Automata (Section. 3.3.1) to create multi-scale saliency maps.
Finally, we integrate these saliency maps via the Cuboid Cellular Automata (Section. 3.3.2) to obtain our ultimate result.

2 Related Work

2.1 Salient Object Detection

Methods of saliency detection can be divided into two
categories: top-down (task-driven) methods and bottom-
up (data-driven) methods. Approaches like (Alexe et al,
2010; Marchesotti et al, 2009; Ng et al, 2002; Yang and
Yang, 2012) are typical top-down visual attention meth-
ods that require supervised learning with manually la-
beled ground truth. To better distinguish salient ob-
jects from the background, high-level category-speciﬁc
information and supervised methods are incorporated
to improve the accuracy of saliency maps. In contrast,
bottom-up methods usually concentrate on low-level
cues such as color, intensity, texture and orientation to
construct saliency maps (Hou and Zhang, 2007; Jiang
et al, 2011; Klein and Frintrop, 2011; Sun et al, 2012;
Tong et al, 2015b; Yan et al, 2013). Some global bottom-
up approaches tend to build saliency maps by calculat-
ing the holistic statistics on uniqueness of each element
over the whole image (Cheng et al, 2015; Perazzi et al,
2012; Bruce and Tsotsos, 2005).

As saliency is deﬁned as a particular part of an im-
age that visually stands out compared to their neigh-
boring regions or the rest of image, one of the most
used principles, contrast prior, measures the saliency of
a region according to the color contrast or geodesic dis-
tance against its surroundings (Cheng et al, 2013, 2015;
Jiang et al, 2011; Jiang and Davis, 2013; Klein and
Frintrop, 2011; Perazzi et al, 2012; Wang et al, 2011).
Recently, the boundary prior has been introduced in
several methods based on the assumption that regions
along the image boundaries are more likely to be the
background (Jiang et al, 2013b; Li et al, 2013; Wei et al,
2012; Yang et al, 2013; Borji et al, 2015; Shen and Wu,
2012), although this takes advantage of photographer’s

bias and is less likely to be true for active robots. Con-
sidering the connectivity of regions in the background,
Wei et al (2012) deﬁne the saliency value for each re-
gion as the shortest-path distance towards the bound-
ary. Yang et al (2013) use manifold ranking to infer the
saliency score of image regions according to their rele-
vance to boundary superpixels. Furthermore, in (Jiang
et al, 2013a), the contrast against the image border is
used as a new regional feature vector to characterize
the background.

However, one of the fundamental problems with all
these conventional saliency detection methods is that
the features used are not representative enough to cap-
ture the contrast between foreground and background,
and this limits the precision of saliency detection. For
one thing, low-level features cannot help salient objects
stand out from a low-contrast background with similar
visual appearance. Also, the extracted global features
are weak in capturing semantic information and have
much poorer generalization compared to the deep fea-
tures used in this paper.

2.2 Deep Neural Networks

Deep convolutional neural networks have recently achie-
ved a great success in various computer vision tasks,
including image classiﬁcation (Krizhevsky et al, 2012;
Szegedy et al, 2015), object detection (Girshick et al,
2014; Hariharan et al, 2014; Szegedy et al, 2013) and
semantic segmentation (Long et al, 2015; Pinheiro and
Collobert, 2014). With the rapid development of deep
neural networks, researchers have begun to construct
eﬀective neural networks for saliency detection (Zhao
et al, 2015; Li and Yu, 2015; Zou and Komodakis, 2015;
Wang et al, 2015; Li et al, 2016; Kim and Pavlovic,
2016). In (Zhao et al, 2015), Zhao et al. propose a
uniﬁed multi-context deep neural network taking both

4

Yao Qin* et al.

global and local context into consideration. Li et al. (Li
and Yu, 2015) and Zou et al. (Zou and Komodakis,
2015) explore high-quality visual features extracted from
DNNs to improve the accuracy of saliency detection.
DeepSaliency in (Li et al, 2016) is a multi-task deep
neural network using a collaborative feature learning
scheme between two correlated tasks, saliency detec-
tion and semantic segmentation, to learn better fea-
ture representation. One leading factor for the success
of deep neural networks is the powerful expressibility
and strong capacity of deep architectures that facili-
tate learning high-level features with semantic infor-
mation (Hariharan et al, 2015; Ma et al, 2015).

In (Donahue et al, 2014), Donahue et al. point out
that features extracted from the activation of a deep
convolutional network can be repurposed to other generic
tasks. Inspired by this idea, we use the hierarchical
deep features extracted from fully convolutional net-
works (Long et al, 2015) to represent smaller image
regions. The extracted deep features incorporate low-
level features as well as high-level semantic information
of the image and can be fed into our Hierarchical Cel-
lular Automata to measure the similarity of diﬀerent
image patches.

2.3 Cellular Automata

Cellular Automata are a model of computation ﬁrst
proposed by Von Neumann (1951). They can be de-
scribed as a temporally evolving system with simple
construction but complex self-organizing behavior. A
Cellular Automaton consists of a lattice of cells with
discrete states, which evolve in discrete time steps ac-
cording to speciﬁc rules. Each cell’s next state is deter-
mined by its current state as well as its nearest neigh-
bors’ states. Cellular Automata have been applied to
simulate the evolution of many complicated dynamical
systems (Batty, 2007; Chopard and Droz, 2005; Cow-
burn and Welland, 2000; de Almeida et al, 2003; Mar-
tins, 2008; Pan et al, 2016). Considering that salient ob-
jects are spatially coherent, we introduce Cellular Au-
tomata into this ﬁeld and propose Single-layer Cellular
Automata as an unsupervised propagation mechanism
to exploit the intrinsic relationships of neighboring ele-
ments of the saliency map and eliminate gaps between
similar regions.

In addition, we propose a method to combine multi-
ple saliency maps generated by diﬀerent algorithms, or
combine saliency maps at diﬀerent scales through what
we call Cuboid Cellular Automata (CCA). In CCA,
states of the automaton are determined by a cuboid
neighborhood corresponding to automata at the same
location as well as their adjacent neighbors in diﬀer-
ent saliency maps. An illustration of the idea is in Fig-
ure 3(b). In this setting, the saliency maps are itera-

tively updated through interactions among neighbors
in the cuboid zone. The state updates are determined
through Bayesian evidence combination rules. Variants
of this type of approach have been used before (Rahtu
et al, 2010; Xie and Lu, 2011; Xie et al, 2013; Li et al,
2013). Xie et al (2013) use the low-level visual cues
derived from a convex hull to compute the observa-
tion likelihood. Li et al (2013) construct saliency maps
through dense and sparse reconstruction and propose a
Bayesian algorithm to combine them. Using Bayesian
updates to combine saliency maps puts the algorithm
for Cuboid Cellular Automata on a ﬁrm theoretical
foundation.

3 Proposed algorithm

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata (HCA) for saliency detection,
composed of two sub-units, a Single-layer Cellular Au-
tomata (SCA), and a Cuboid Cellular Automata (CCA),
as described below. First, we construct prior maps of
diﬀerent scales with superpixels on the image bound-
ary chosen as the background seeds. Then, hierarchi-
cal deep features are extracted from fully convolutional
networks (Long et al, 2015) to measure the similarity of
diﬀerent superpixels. Next, we use SCA to iteratively
update the prior maps at diﬀerent scales based on the
hierarchical deep features. Finally, a CCA is used to
integrate the multi-scale saliency maps using Bayesian
evidence combination. Figure. 2 shows an overview of
our proposed method.

3.1 Background Priors

Recently, there have been various mathematical mod-
els proposed to generate a coarse saliency map to help
locate potential salient objects in an image (Tong et al,
2015a; Zhu et al, 2014; Gong et al, 2015). Even though
prior maps are eﬀective in improving detection preci-
sion, they still have several drawbacks. For example, a
poor prior map may greatly limit the accuracy of the ﬁ-
nal saliency map if it incorrectly estimates the location
of the objects or classiﬁes the foreground as the back-
ground. Also, the computational time to construct a
prior map can be excessive. Therefore, in this paper, we
build a quite simple and time-eﬃcient prior map that
only provides the propagation seeds for HCA, which is
quite insensitive to the prior map and is able to reﬁne
this coarse prior map into an improved saliency map.

First, we use the eﬃcient Simple Linear Iterative
Clustering (SLIC) algorithm (Achanta et al, 2010) to
segment the image into smaller superpixels in order to
capture the essential structural information of the im-
age. Let si ∈ R denote the saliency value of the super-
pixel i in the image. Based on the assumption that su-
perpixels on the image boundary tend to have a higher

Hierarchical Cellular Automata for Visual Saliency

5

probability of being the background, we assign a close-
to-zero saliency value to the boundary superpixels. For
others, we assign a uniform value as their initial saliency
values,

si =

(cid:26) 0.001 i ∈ boundary
0.5 i (cid:54)∈ boundary.

(1)

Considering the great variation in the scales of salient
objects, we segment the image into superpixels at M
diﬀerent scales, which are displayed in Figure. 2 (Prior
Maps).

3.2 Deep Features from FCN

As is well-known, the features in the last layers of CNNs
encode semantic abstractions of objects, and are robust
to appearance variations, while the early layers contain
low-level image features, such as color, edge, and tex-
ture. Although high-level features can eﬀectively dis-
criminate the objects from various backgrounds, they
cannot precisely capture the ﬁne-grained low-level in-
formation due to their low spatial resolution. Therefore,
a combination of these deep features is preferred com-
pared to any individual feature map.

In this paper, we use the feature maps extracted
from the fully-convolutional network (FCN-32s (Long
et al, 2015)) to encode object appearance. The input
image to FCN-32s is resized to 500 × 500, and a 100-
pixel padding is added to the four boundaries. Due to
subsampling and pooling operations in the CNN, the
outputs of each convolutional layer in the FCN frame-
work are not at the same resolution. Since we only care
about the features corresponding to the original image,
we need to 1) crop the feature maps to get rid of the
padding; 2) resize each feature map to the input image
size via the nearest neighbor interpolation. Then each
feature map can be aggregated using a simple linear
combination as:

g(ri, rj) =

ρl · (cid:107)df l

i − df l

j(cid:107)2,

(2)

L
(cid:88)

l=1

where df l
i denotes the deep features of superpixel i on
the l-th layer and ρl is a weighting of the importance of
the l-th feature map, which we set by cross-validation.
The weights are constrained to sum to 1: (cid:80)L
l=1 ρl = 1.
Each superpixel is represented by the mean of the deep
features of all contained pixels. The computed g(ri, rj)
is used to measure the similarity between superpixels.

3.3 Hierarchical Cellular Automata

Hierarchical Cellular Automata (HCA) is a uniﬁed frame-
work composed of single-layer propagation (Single-layer
Cellular Automata) and multi-layer aggregation (Cuboid

Fig. 3 The constructed graph models used in our algorithm.
(a) is used in SCA, the orange lines and the blue lines rep-
resent the connections between the blue center cell and its
2-layer neighbors. The purple lines indicate that superpixels
on the image boundaries are all connected to each other; (b)
is used in CCA, a cell (e.g. the red pixel in the bottom layer)
is connected to the pixels with the same coordinates in other
layers as well as their four adjacent neighbors (e.g. cells in
blue color). All these pixels construct a cuboid interaction
zone.

Cellular Automata). It can generate saliency maps at
diﬀerent scales and integrate them to get a ﬁne-grained
saliency map. We will discuss SCA and CCA respec-
tively in Sections 3.3.1 and 3.3.2.

3.3.1 Single-layer Cellular Automata

In Single-layer Cellular Automata (SCA), each cell de-
notes a superpixel generated by the SLIC algorithm.
SLIC takes the number of desired superpixels as a pa-
rameter, so by using diﬀerent numbers of superpixels
with SCA, we can obtain maps at diﬀerent scales. In
this section, we assume one scale, denoted m. We de-
note the number of superpixels in scale m by nm, but
we omit the subscript m in most notation in this section
for clarity, e.g., F for Fm, C for Cm and s for sm.

We make three major modiﬁcations to the previ-
ous cellular automata models (Smith, 1972; Von Neu-
mann, 1951) for saliency detection. First, the states of
cells in most existing Cellular Automata models are dis-
crete (Von Neumann et al, 1966; Wolfram, 1983). How-
ever, in this paper, we use the saliency value of each
superpixel as its state, which is continuous between
0 and 1. Second, we give a broader deﬁnition of the
neighborhood that is similar to the concept of z-layer
neighborhood (here z = 2) in graph theory. The z-layer
neighborhood of a cell includes adjacent cells as well
as those sharing common boundaries with its adjacent
cells. Also, we assume that superpixels on the image
boundaries are all connected to each other because all
of them serve as background seeds. The connections be-
tween the neighbors are clearly illustrated in Figure. 3
(a). Finally, instead of uniform inﬂuence of the neigh-
bors , the inﬂuence is based on the similarity between
the neighbor to the cell in feature space, as explained
next.

Impact Factor Matrix: Intuitively, neighbors with
more similar features have a greater inﬂuence on the

6

Yao Qin* et al.

cell’s next state. The similarity of any pair of super-
pixels is measured by a pre-deﬁned distance in feature
space. For the m-th saliency map, which has nm super-
pixels in total, we construct an impact factor matrix
F ∈ Rnm×nm . Each element fij in F deﬁnes the impact
factor of superpixel i to j as:

fij =

(cid:40)

exp( −g(ri,rj )
0

σ2
f

)

j ∈ NB(i)

j = i or otherwise,

(3)

where g(ri, rj) is a function that computes the distance
between the superpixel i and j in feature space with ri
as the feature descriptor of superpixel i. In this paper,
we use the weighted distance of hierarchical deep fea-
tures computed by Eqn. (2) to measure the similarity
between neighbors. σf is a parameter that controls the
strength of similarity and NB(i) is the set of the neigh-
bors of the cell i. In order to normalize the impact fac-
tors, a degree matrix D = diag{d1, d2, · · · , dnm } is con-
structed, where di = (cid:80)
i fij. Finally, a row-normalized
impact factor matrix can be calculated as F∗ = D−1 ·F.
Coherence Matrix: Given that each cell’s next
state is determined by its current state as well as its
neighbors, we need to balance the importance of these
two factors. On the one hand, if a superpixel is quite
diﬀerent from all its neighbors in the feature space, its
next state will be primarily based on itself. On the other
hand, if a cell is similar to its neighbors, it should be
assimilated by the local environment. To this end, we
build a coherence matrix C = diag{c1, c2, · · · , cnm} to
promote the evolution among all cells. Each cell’s co-
herence towards its current state is initially computed
as: ci =
max(fij ) , so it is inversely proportional to its
maximum similarity to its neighbors. We normalize this
to be in a range ci ∈ [ b , a + b ], where a and b are pa-
rameters, via:
c∗
i = a ·

ci − min (cj)
max (cj) − min (cj)

+ b,

(4)

1

where the min and max are computed over j = 1, 2,
..., nm. Based on preliminary experiments, we set the
constants a and b in Eq. (4) to 0.6 and 0.2. If a is ﬁxed
to 0.6, our results are insensitive to the value of b in
the interval [ 0.1 , 0.3 ]. The ﬁnal, normalized coherence
matrix is then: C∗ = diag{c∗

1, c∗
Synchronous Update Rule: In Cellular Automata,

2, · · · , c∗

nm

}.

all cells will simultaneously update their states accord-
ing to the update rule, which is a key point in Cellular
Automata, as it controls whether the ultimate evolv-
ing state is chaotic or stable (Wolfram, 1983). Here, we
deﬁne the synchronous update rule based on the im-
pact factor matrix F∗ ∈ Rnm×nm and coherence matrix
C∗ ∈ Rnm×nm:

s(t+1) = C∗s(t) + (I − C∗) F∗s(t),

(5)

Fig. 4 Saliency maps generated by SCA (nm = 200). The
ﬁrst three columns show that salient objects can be precisely
detected when the saliency appears in the center of the im-
age. The last three columns indicate that SCA can still have
good performance even when salient objects touch the image
boundary.

where I is the identity matrix of dimension nm × nm
and s(t) ∈ Rnm denotes the saliency map at time t.
When t = 0, s(0) is the prior map generated by the
method introduced in Section. 3.1. After TS time steps
(a time step is deﬁned as one update of all cells), the
saliency map can be represented as s(TS ). It should be
noted that the update rule is invariant over time; only
the cells’ states s(t) change over iterations.

Our synchronous update rule is based on the gen-
eralized intrinsic characteristics of most images. First,
superpixels belonging to the foreground usually share
similar feature representations. By exploiting the corre-
lation between neighbors, the SCA can enhance saliency
consistency among similar regions and develop a steady
local environment. Second, it can be observed that there
is a high contrast between the object and its surround-
ing background in feature space. Therefore, a clear bound-
ary will naturally emerge between the object and the
background, as the cell’s saliency value is greatly inﬂu-
enced by its similar neighbors. With boundary-based
prior maps, salient objects can be naturally highlighted
after the evolution of the system due to the connec-
tivity and compactness of the object, as exempliﬁed in
Figure. 4. Speciﬁcally, even though part of the salient
object is incorrectly selected as the background seed,
the SCA can adaptively increase their saliency values
under the inﬂuence of the local environment. The last
three columns in Figure. 4 show that when the object
touches the image boundary, the results achieved by the
SCA are still satisfying.

3.3.2 Cuboid Cellular Automata

To better capture the salient objects of diﬀerent scales,
we propose a novel method named Cuboid Cellular
Automata (CCA) to incorporate M diﬀerent saliency
maps generated by SCA under M scales, each of which
serves as a layer of the Cuboid Cellular Automata. In
CCA, each cell corresponds to a pixel, and the saliency
values of all pixels constitute the set of cells’ states. The

Hierarchical Cellular Automata for Visual Saliency

number of all pixels in an image is denoted as H. Unlike
the deﬁnition of a neighborhood in Section. 3.3.1 and
Multi-layer Cellular Automata in (Qin et al, 2015), here
pixels with the same coordinates in diﬀerent saliency
maps as well as their 4-connected pixels are all regarded
as neighbors. That is, for any cell in a saliency map, it
should have 5M − 1 neighbors, constructing a cuboid
interaction zone. The hierarchical graph is presented
in Figure. 3 (b) to illustrate the connections between
neighbors.

m,i = P (i ∈(t)

m F ), while 1 − s(t)

The saliency value of pixel i in the m-th saliency
map at time t is its probability of being the foreground
F , represented as s(t)
m,i = P (i ∈(t)
m,i is
its probability of being the background B, denoted as
1 − s(t)
m B). We binarize each map with an
adaptive threshold using Otsu’s method (Otsu, 1975),
which is computed from the initial saliency map and
does not change over time. The threshold of the m-
th saliency map is denoted by γm. If pixel i in the
m-th binary map is classiﬁed as foreground at time t
(s(t)
m,i = +1. Cor-
respondingly, η(t)
m,i = −1 means that pixel i is binarized
as background (s(t)

m,i ≥ γm), then it will be denoted as η(t)

m,i < γm).

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

If pixel i belongs to the foreground, the probability
that one of its neighboring pixels j in the m-th binary
map is classiﬁed as foreground at time t is denoted as
P ( η(t)
m F ). In the same way, the proba-
bility P ( η(t)
m B ) represents that the pixel
j is binarized as B conditioned on that pixel i belongs
to the background at time t. We make the assump-
tion that P ( η(t)
m F ) is the same for all
the pixels in any saliency map and it does not change
over time. Additionally, it is reasonable to assume that
m F ) = P ( η(t)
P ( η(t)
m B ).
Therefore, we use a constant λ to denote these two
probablities:

m,j = +1|i ∈(t)

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

P ( η(t)

m,j = +1|i ∈(t)

m F ) = P ( η(t)

m,j = −1|i ∈(t)

m B ) = λ.
(6)

m F |η(t)

m,j = +1)

Then the posterior probability P (i ∈(t)
can be calculated as follows:
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:16)
(cid:17)
P

η(t)
m,j = +1

i ∈(t)

i ∈(t)

m F

m F

m F

∝ P

(cid:12)
(cid:12)i ∈(t)
(cid:12)

P

(cid:16)

(cid:16)

(cid:17)

(cid:17)

= s(t)

m,i · λ

In order to get rid of the normalizing constant in

Eqn. (7), we deﬁne the prior ratio Ω(i ∈(t)
i ∈(t)

m F

P

(cid:16)

(cid:17)

m F ) as:

(cid:16)

Ω

i ∈(t)

m F

(cid:17)

=

(cid:16)

P

i ∈(t)

m B

(cid:17) =

s(t)
m,i
1 − s(t)
m,i

.

(7)

(8)

7

(9)

(11)

(12)

Combining Eqn. (7) and Eqn. (8), the posterior ratio
Ω(i ∈(t)

m,j = +1) turns into:

m F | η(t)

(cid:16)

Ω

i ∈(t)

m F

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1

(cid:17)

=

(cid:16)

(cid:16)

P

P

i ∈(t)

m F

i ∈(t)

m B

=

s(t)
m,i
1 − s(t)
m,i

·

(cid:17)

(cid:17)

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
λ
1 − λ

.

m F |η(t)

As the posterior probability P (i ∈(t)

m,j = +1)
represents the probability of pixel i of being the fore-
ground F conditioned on that its neighboring pixel j
in the m-th saliency map is binarized as foreground at
time t, P (i ∈(t)
m,j = +1) can also be used to rep-
resent the probability of pixel i of being the foreground
F at time t + 1. Then,

m F |η(t)

s(t+1)
m,i = P (i ∈(t)

m F |η(t)

m,j = +1).

(10)

According to Eqn. (9) and Eqn. (10), we can get:

s(t+1)
m,i
1 − s(t+1)

m,i

m F |η(t)

m,j = +1)

m F |η(t)

m,j = +1)

m F |η(t)
m B|η(t)

m,j = +1)
m,j = +1)

=

=

=

P (i ∈(t)
1 − P (i ∈(t)
P (i ∈(t)
P (i ∈(t)
s(t)
m,i
1 − s(t)
m,i

·

λ
1 − λ

.

It is much easier to deal with the logarithm of this quan-
tity because the changes in logodds will be additive. So
Eqn. (11) turns into:

(cid:16)

l

s(t+1)
m,i

(cid:17)

= l

(cid:17)

(cid:16)

s(t)
m,i

+ Λ,

(cid:16)

(cid:17)

= ln(

where l

s(t+1)
m,i

) and Λ = ln( λ

s(t+1)
m,i
1−λ ) is
1−s(t+1)
m,i
a constant. The intuitive explanation for Eqn. (12) is
that: if a pixel observes that one of its neighbors is bi-
narized as foreground, it ought to increase its saliency
value; otherwise, it should decrease its saliency value.
Therefore, Eqn. (12) requires Λ > 0. In this paper, we
empirically set Λ = 0.05.

As each pixel has 5M −1 neighbors in total, the pixel
will decide its action (increase or decrease it saliency
value) based on all its neighbors’ current states. Assum-
ing the contribution of each neighbor is conditionally in-
dependent, we derive the synchronous update rule from
Eqn. (12) as:
(cid:16)

(cid:17)

(cid:16)

(cid:17)

l

s(t+1)
m

= l

s(t)
m

+ Σ(t)

m · Λ,

(13)

8

Yao Qin* et al.

Fig. 5 Visual comparison of saliency maps generated by SCA
at diﬀerent scales (n1 = 120, n2 = 160 and n3 = 200) and
HCA.

m ∈ RH is the m-th saliency map at time t and
m ∈ RH can

where s(t)
H is the number of pixels in the image. Σ(t)
be computed by:
5
(cid:88)

M
(cid:88)

(cid:17)

(cid:16)

δ(k = m, j > 1) · sign

s(t)
j,k − γk · 1

,

Σ(t)

m =

j=1

k=1

(14)

(15)

where M is the number of diﬀerent saliency maps, s(t)
j,k ∈
RH is a vector containing the saliency values of the j-th
neighbor for all the pixels in the m-th saliency map at
time t and 1 = [1, 1, · · · , 1](cid:62) ∈ RH . We use δ(k =
m, j > 1) to represent the occasion that the cell only
has 4 neighbors instead of 5 in the m-th saliency map
when it is in the m-th saliency map. After TC iterations,
the ﬁnal integrated saliency map s(TC ) is calculated by

s(TC ) =

1
M

M
(cid:88)

m=1

s(TC )
m .

In this paper, we use CCA to integrate saliency
maps generated by SCA at M = 3 scales. This com-
bination is denoted as HCA, and the visual saliency
maps generated by HCA can be seen in Figure. 5. Here
we use the notation SCAn to denote SCA applied with
n superpixels. We can see that the detected objects in
the integrated saliency maps are uniformly highlighted
and much closer to the ground truth.

3.4 Consistent Optimization

3.4.1 Single-layer Propagation

Due to the connectivity and compactness of the ob-
ject, the salient part of an image will naturally emerge
with the Single-layer Cellular Automaton, which serves
as a propagation mechanism. Therefore, we use the
saliency maps generated by several well-known meth-
ods as the prior maps and refresh them according to the
synchronous update rule. The saliency maps achieved
by CAS (Goferman et al, 2010), LR (Shen and Wu,
2012) and RC (Cheng et al, 2015) are taken as s(0)

Fig. 6 Comparison of saliency maps generated by diﬀerent
methods and their optimized results via Single-layer Cellular
Automata. The ﬁrst row is respectively input images, ground
truth and saliency maps generated by our proposed SCA with
200 superpixels. The second row displays original saliency
maps generated by three traditional methods (from left to
right: CAS (Goferman et al, 2010), LR (Shen and Wu, 2012),
RC (Cheng et al, 2015)). The third row is their corresponding
optimized results by SCA with 200 superpixels.

in Eqn. (5). The optimized results via SCA are shown
in Figure. 6. We can see that the foreground is uni-
formly highlighted and a clear object contour naturally
emerges with the automatic single-layer propagation
mechanism. Even though the original saliency maps are
not particularly good, all of them are signiﬁcantly im-
proved to a similar accuracy level after evolution. That
means our method is independent of prior maps and can
make a consistent and eﬃcient optimization towards
state-of-the-art methods.

3.4.2 Pixel-wise Integration

A variety of methods have been developed for visual
saliency detection, and each of them has its advantages
and limitations. As shown in Figure. 7, the performance
of a saliency detection method varies with individual
images. Each method can work well for some images or
some parts of the images but none of them can perfectly
handle all the images. Furthermore, diﬀerent methods
may complement each other. To take advantage of the
superiority of each saliency map, we use Cuboid Cel-
lular Automata to aggregate two groups of saliency
maps, which are generated by three conventional algo-
rithms: BL (Tong et al, 2015a), HS (Yan et al, 2013) and
MR (Yang et al, 2013) and three deep learning meth-
ods: MDF (Li and Yu, 2015) and DS (Li et al, 2016)
and MCDL (Zhao et al, 2015). Each of them serves
as a layer of Cellular Automata s(0)
m in Eqn. (13). Fig-
ure. 7 shows that our proposed pixel-wise aggregation
method, Cuboid Cellular Automata, can appropriately
integrate multiple saliency maps and outperforms each
one. The saliency objects on the aggregated saliency
map are consistently highlighted and much closer to
the ground truth.

Hierarchical Cellular Automata for Visual Saliency

9

(a) Saliency aggregation of three conventional methods

(b) Saliency aggregation of three deep learning methods

Fig. 7 Eﬀects of pixel-wise saliency aggregation with Cuboid
Cellular Automata. We integrate saliency maps generated
by three conventional algorithms: BL (Tong et al, 2015a),
HS (Yan et al, 2013) and MR (Yang et al, 2013) in (a) and
incorporate saliency maps generated by three deep learning
methods: MDF (Li and Yu, 2015), DS (Li et al, 2016), and
MCDL (Zhao et al, 2015) in (b). The integrated result is de-
noted as CCA.

3.4.3 SCA + CCA = HCA

Here we show that when CCA is applied to some (poor)
prior maps, it does not perform as well as when the
prior map is post-processed by SCA. This motivates
their combination into HCA. As is shown in Figure. 8,
when the candidate saliency maps are not well con-
structed, both CCA and MCA (Qin et al, 2015) fail to
detect the salient object. Unlike CCA and MCA, HCA
overcomes this limitation through incorporating single-
layer propagation (SCA) together with pixel-wise in-
tegration (CCA) into a uniﬁed framework. The salient
objects can be intelligently detected by HCA regardless
of the original performance of the candidate methods.
When we use HCA to integrate existing methods, the
optimized results will be denoted as HCA*.

4 Experiments

In order to demonstrate the eﬀectiveness of our pro-
posed algorithms, we compare the results on four chal-
lenging datasets: ECSSD (Yan et al, 2013), MSRA5000
(Liu et al, 2011), PASCAL-S (Li et al, 2014b) and
HKU-IS (Li and Yu, 2015). The Extended Complex
Scene Saliency Dataset (ECSSD) contains 1000 images
with multiple objects of diﬀerent sizes. Some of the im-
ages come from the challenging Berkeley-300 dataset.
MSRA- 5000 contains more comprehensive images with
complex background. The PASCAL-S dataset derives
from the validation set of PASCAL VOC2010 (Ever-
ingham et al, 2010) segmentation challenge and con-
tains 850 natural images. The last dataset, HKU-IS,
contains 4447 challenging images and their pixel-wise
saliency annotation. In this paper, we use ECSSD as

Fig. 8 Eﬀects of holistic optimization by Hierarchical Cel-
lular Automata. We use MCA (Qin et al, 2015), CCA and
HCA to integrate saliency maps generated by three classic
methods: FT (Achanta et al, 2009), ITTI (Itti et al, 1998)
and CAS (Goferman et al, 2010). Their respective saliency
maps optimized by SCA with 200 superpixels are shown in
the second row. Note that HCA* uses as input the saliency
maps processed by SCA (the second row) and applies CCA to
them, while the MCA and CCA models are applied directly
to the ﬁrst row.

the validation dataset to help choose the feature maps
in FCN (Long et al, 2015).

We compare our algorithm with 20 classic or state-
of-the-art methods including ITTI (Itti et al, 1998),
FT (Achanta et al, 2009), CAS (Goferman et al, 2010),
LR (Shen and Wu, 2012), XL13 (Xie et al, 2013), DSR
(Li et al, 2013), HS (Yan et al, 2013), UFO (Jiang
et al, 2013c), MR (Yang et al, 2013), DRFI (Jiang
et al, 2013b), wCO (Zhu et al, 2014), RC (Cheng et al,
2015), HDCT (Kim et al, 2014), BL (Tong et al, 2015a),
BSCA (Qin et al, 2015), LEGS (Wang et al, 2015),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015),
DS (Li et al, 2016), and SSD-HS (Kim and Pavlovic,
2016), where the last 5 methods are deep learning-based
methods. The results of diﬀerent methods are either
provided by authors or achieved by running available
code or binaries. The code and results of HCA will be
publicly available at our project site 1.
4.1 Parameter Setup

For the Single-layer Cellular Automaton, we set the
number of iterations TS = 20. σ2
f in Eq. (3) is set to
0.1 as in (Yang et al, 2013). For the Cuboid Cellular
Automata, we set the number of iterations TC = 3. We
determined empirically that SCA and CCA converge by
20 and 3 iterations, respectively. We choose M = 3 and
run SCA with n1 = 120, n2 = 160, n3 = 200 superpixels
to generate multi-scale saliency maps for CCA.
4.2 Evaluation Metrics

We evaluate all methods by standard Precision-Recall
(PR) curves via binarizing the saliency map with a

1 https://github.com/ArcherFMY/HCA_saliency_codes

10

Yao Qin* et al.

Fig. 9 Visual comparison of saliency maps with diﬀerent layers of deep features. The left two columns are the input images
and their ground truth. Other columns present the saliency maps with diﬀerent layers of deep features. The color bars on the
top stand for diﬀerent convolutional layers (see Figure. 10(a) and (b)).

(a) F-measure bars

(b) MAE bars

4.3 Validation of the Proposed Algorithm

MAE =

|si − gi|.

1
H

H
(cid:88)

i=1

(18)

MAE indicates how similar a saliency map is compared
to the ground truth, and is of great importance for
diﬀerent applications, such as image segmentation and
cropping (Perazzi et al, 2012).

4.3.1 Feature Analysis

In order to construct the Impact Factor matrix, we need
to choose the features that will enter into Eqn.( 2). Here
we analyze the eﬃcacy of the features in diﬀerent layers
of a deep network in order to choose these feature lay-
ers. In deep neural networks, earlier convolutional layers
capture ﬁne-grained low-level information, e.g., colors,
edges and texture, while later layers capture high-level
semantic features. In order to select the best feature
layers in the FCN (Long et al, 2015), we use ECSSD
as a validation dataset to measure the performance of
deep features extracted from diﬀerent layers. The func-
tion g(ri, rj) in Eqn. (3) can be computed as
(cid:13)
g(ri, rj) = (cid:13)
(cid:13)2

i − df l
j

(cid:13)df l

(19)

,

where df l
i denotes the deep features of superpixel i on
the l-th layer. The outputs of convolutional layers, relu
layers and pooling layers are all regarded as a feature
map. Therefore, we consider in total 31 layers of fully
convolutional networks. We do not take the last two
convolutional layers into consideration as their spatial
resolutions are too low.

We use the F-measure (the higher, the better) and
mean absolute error (MAE) (the lower, the better) to
evaluate the performance of diﬀerent layers on the EC-
SSD dataset. The results are shown in Figure. 10 (a)
and (b). The F-measure score is obtained by thresh-
olding the saliency maps at twice the mean saliency
value. We use this convention for all of the subsequent
F-measure results. The x-index in Figure. 10 (a) and (b)
refers to convolutional, ReLu, and pooling layers as im-
plemented in the FCN. We can see that deep features
extracted from the pooling layer in Conv1 and Conv5
can achieve the best two F-measure scores, and also
perform well on MAE. The saliency maps in Figure. 9
correspond to the bars in Figure 10. Here it is visually

(c) Precision-Recall curves comparison

Fig. 10 (a) The F-measure score for each layer in FCN-32s
on ECSSD; (b) The MAE score for each layer in FCN-32s
on ECSSD; (c) Precision-Recall curves of SCA using deep
features extracted from pool1 and pool5 as well as a weighted
summation of these two layers of deep features.

threshold sliding from 0 to 255 and then comparing
the binary maps with the ground truth. Speciﬁcally,

precision =

, recall =

|SF ∩ GF |
|SF |

|SF ∩ GF |
|GF |

,

(16)

where SF is the set of the pixels segmented as the fore-
ground, GF denotes the set of the pixels belonging to
the foreground in the ground truth, and |·| refers to the
number of elements in a set. In many cases, high preci-
sion and recall are both required. These are combined
in the F-measure to obtain a single ﬁgure of merit, pa-
rameterized by β:

Fβ =

(cid:0)1 + β2(cid:1) · precision · recall
β2 · precision + recall

(17)

where β2 is set to 0.3 as suggested in (Achanta et al,
2009) to emphasize the precision. To complement these
two measures, we also use mean absolute error (MAE)
to quantitatively measure the average diﬀerence be-
tween the saliency map s ∈ RH and the ground truth
g ∈ RH in pixel level:

Hierarchical Cellular Automata for Visual Saliency

11

apparent that salient objects are better detected with
the ﬁnal pooling layers of Conv1 and Conv5 . Therefore,
in this paper, we combine the feature maps from pool1
and pool5 with a simple linear combination. Eqn. (2)
then turns into:
g(ri, rj) = ρ1 · (cid:13)

+ ρ2 · (cid:13)

i − df 31
j

i − df 5
j

(cid:13)df 31

, (20)

(cid:13)df 5

(cid:13)
(cid:13)2

(cid:13)
(cid:13)2

where ρ1 and ρ2 balance the weight of pool1 and pool5.
In this paper, we empirically set ρ1 = 0.375 and ρ2 =
0.625 and apply them to all other datasets.

To test the eﬀectiveness of the integrated deep fea-
tures, we show the Precision-Recall curves of Single-
layer Cellular Automata with each layer of deep fea-
tures as well as the integrated deep features on two
datasets. The Precision-Recall curves in Figure. 10 (c)
demonstrate that hierarchical deep features outperform
single-layer features, as they contain both category-
level semantics and ﬁne-grained details.

4.3.2 Component Eﬀectiveness

To demonstrate the eﬀectiveness of our proposed al-
gorithm, we test the results on the standard ECSSD
and PASCAL-S datasets. We generate saliency maps
at three scales: n1 = 120, n2 = 160, n3 = 200 and use
CCA to integrate them. FT curves in Figure. 11 indi-
cate that the results of the Single-layer Automata are
already quite satisfying. In addition, CCA can improve
the overall performance of SCA with a wider range of
high F-measure scores than SCA alone. Similar results
are also achieved on other datasets but are not pre-
sented here to be succinct.

4.3.3 Performance Comparison

As is shown in Figure 12, our proposed Hierarchical Cel-
lular Automata performs favorably against state-of-the-
art conventional algorithms with higher precision and
recall values on four challenging datasets. HCA is com-
petitive with deep learning based approaches and has
higher precision at low levels of recall. Furthermore, the
fairly low MAE scores, displayed in Figure. 12(c), indi-
cate that our saliency maps are very close to the ground
truth. As MCDL (Zhao et al, 2015) trained the network
on the MSRA dataset, we do not report its result on
this dataset in Figure. 12. In addition, LEGS (Wang
et al, 2015) used part of the images in the MSRA and
PASCAL-S datasets as the training set. As a result,
we only test LEGS with the test images on these two
datasets. Saliency maps are shown in Figure. 16 for vi-
sual comparison of our method with other models.

4.4 Optimization of state-of-the-art methods

In the previous sections, we showed qualitatively that
our model creates better saliency maps by improving

Fig. 11 F-measure - Threshold curves of saliency maps gen-
erated by SCA at diﬀerent scales (n1 = 120, n2 = 160, n3 =
200 respectively), and the integrated results by HCA on EC-
SSD and PASCAL-S.
Table 1 Run Time of Each Component of HCA

Method
w/ SLIC(s)
wo/ SLIC(s)

SCA120
.2889
.0704

SCA160
.3134
.0525

SCA200 CCA HCA
1.0240
.2421

.3380
.0355

-
.0837

initial saliency maps with SCA, or by combining the re-
sults of multiple algorithms with CCA, or by applying
SCA and CCA. Here we compare our methods to other
methods quantitatively. When the initial maps are im-
perfect, we apply SCA to improve them and then apply
CCA. When the initial maps are already very good, we
show that we can combine state-of-the-art methods to
perform even better by simply using CCA.
4.4.1 Consistent Improvement

In Section 3.4.1, we concluded that results generated
by diﬀerent methods can be eﬀectively optimized via
Single-layer Cellular Automata. Figure 13 shows the
precision-recall curves and mean absolute error bars of
various saliency methods and their optimized results on
two datasets. These results demonstrate that SCA can
greatly improve existing results to a similar precision
level. Even though the original saliency maps are not
well constructed, the optimized results are comparable
to the state-of-the-art methods. It should be noted that
SCA can even optimize deep learning-based methods to
a better precision level, e.g., MCDL (Zhao et al, 2015),
MDF (Li and Yu, 2015), LEGS (Wang et al, 2015), and
SSD-HS (Kim and Pavlovic, 2016). In addition, for one
existing method, we can use SCA to optimize it at dif-
ferent scales and then use CCA to integrate the multi-
scale saliency maps. The ultimate optimized result is
denoted as HCA*. The lowest MAEs of saliency maps
optimized by HCA in Figure 13 (c) show that HCA’s
use of CCA improves performance over SCA alone.

4.4.2 Eﬀective Integration

In Section. 3.4.2, we used Cuboid Cellular Automata as
a pixel-wise aggregation method to integrate two groups
of state-of-the-art methods. One group includes three
of the latest conventional methods while the other con-
tains three deep learning-based methods. We test the

12

Yao Qin* et al.

(a) PR curves

(b) FT curves

(c) MAE bars

Fig. 12 PR curves, FT curves and MAE scores of diﬀerent methods compared with our algorithm (HCA). From top to
bottom: ECSSD, MSRA5000, PASCAL-S and HKU-IS are tested.

Hierarchical Cellular Automata for Visual Saliency

13

(a) PR curves

(b) FT curves

(c) MAE scores

Fig. 13 Consistent improvement on ECSSD and PASCALS datasets. (a) and (b): PR curves of diﬀerent methods (dashed
line) and their optimized version via SCA200 (solid line). The right column shows that SCA200 ((cid:52)), improves the MAEs of
the original methods (×) and that HCA* ((cid:13)), here applied to SCA120, SCA160, and SCA200, further improves the results.

(a) PR curves

(b) FT curves

(c) Score bars

Fig. 14 Eﬀects of pixel-wise aggregation via Cuboid Cellular Automata on ECSSD dataset. The ﬁrst row compares three
conventional methods BL (Tong et al, 2015a), HS (Yan et al, 2013), MR (Yang et al, 2013) and their integrated results via
Cuboid Cellular Automata, denoted as CCA. The second row compares three deep learning models, e.g. DS (Li et al, 2016),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015) and their integrated results. The precision, recall and F-measure scores in
the right column are obtained by thresholding the saliency maps at twice the mean saliency value.

14

Yao Qin* et al.

(a) PR curves

(b) FT curves
Fig. 15 Comparison between three diﬀerent integration methods MCA (Qin et al, 2015), CCA and HCA when integrating
FT (Achanta et al, 2009), ITTI (Itti et al, 1998) and CAS (Goferman et al, 2010) on ECSSD and MSRA datasets.

(c) MAE scores

Table 2 Comparison of Run Time

Code
Matlab
Python

Model Year
HCA
MCDL
LEGS
MDF
BL

2015
2015 Matlab + C
2015
2015

Matlab
Matlab

Time(s) Model Year Code Time(s) Model Year
2013
2013
2012
2011
2010 Matlab + C

HDCT 2014 Matlab
2014 Matlab
wCO
2013 Matlab
DRFI
2013 Matlab
DSR
2013
HS

1.4917
2.2521
1.9050
25.7328
21.5161

Code
Matlab
Matlab
Matlab
C

5.1248
0.1484
8.0104
3.4796
0.3821

MR
XL13
LR
RC
CAS

EXE

Time(s)
0.4542
65.5491
10.0259
0.1360
44.3270

various methods on the ECSSD dataset, and the in-
tegrated result is denoted as CCA. PR curves in Fig-
ure. 14(a) demonstrate the eﬀectiveness of CCA over
all the individual methods. FT curves of CCA in Fig-
ure. 14(b) are ﬁxed at high values that are insensitive
to the thresholds. In addition, we binarize the saliency
map with two times mean saliency value. From Fig-
ure. 14(c) we can see that the integrated result has
higher precision, recall and F-measure scores compared
to each method that is integrated. Also, the mean ab-
solute errors of CCA are always the lowest. The fairly
low mean absolute errors indicate that the integrated
results are quite similar to the ground truth.

Although Cuboid Cellular Automata have exhibited
great strength in integrating multiple saliency maps,
they have a major drawback in that the integrated re-
sult highly relies on the precision of the saliency detec-
tion methods used as input. If saliency maps fed into
Cuboid Cellular Automata are not well constructed, it
cannot naturally detect the salient objects via inter-
actions between these candidate saliency maps. HCA,
however, can easily address this problem by incorporat-

ing single-layer propagation and multi-layer integration
into a uniﬁed framework. Unlike MCA (Qin et al, 2015)
and CCA, HCA can achieve better integrated saliency
map regardless of their original detection performance
through the application of SCA to clean up the ini-
tial maps. PR curves, FT curves and MAE scores in
Figure. 15 show that 1) CCA has a better performance
than MCA, as it considers the inﬂuence of adjacent cells
on diﬀerent layers. 2) HCA can greatly improve the ag-
gregation results compared to MCA and CCA because
it is independent of the initial saliency maps.

4.5 Run Time

The run time to process one image in the MSRA5000
dataset via Matlab R2014b-64bit with a PC equipped
with an i7-4790k 3.60 GHz CPU and 32GB RAM is
shown in Table 1. The Table displays the average run
time of each component in our algorithm, not including
the time for extracting deep features. We can see that
the Single-layer Cellular Automata and Cuboid Cellular
Automata are very fast at processing one image, on av-
erage 0.06s. Their combination HCA takes only 0.2421s

Hierarchical Cellular Automata for Visual Saliency

15

Fig. 16 Visual comparison of saliency maps of diﬀerent methods. GT: Ground Truth, Ours: Saliency maps generated by
Hierarchical Cellular Automata (HCA).

to process one image without superpixel segmentation
and 1.0240s with SLIC.

We also compare the run time of our method with
other state-of-the-art methods in Table 2. Here we com-
pute the run time including superpixel segmentation
and feature extraction for all models. Our algorithm
has the least run time compared to other deep learning
based methods and is the ﬁfth fastest overall.

5 Conclusion

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata, a temporally evolving system
for saliency detection. It incorporates two components,
Single-layer Cellular Automata (SCA), which can clean
up noisy saliency maps, and Cuboid Cellular Automata
(CCA), that can integrate multiple saliency maps. SCA
is designed to exploit the intrinsic connectivity of saliency

objects through interactions with neighbors. Low-level
image features and high-level semantic information are
both extracted from deep neural networks and incor-
porated into SCA to measure the similarity between
neighbors. With superpixels on the image boundary
chosen as the background seeds, SCA iteratively up-
dates the saliency maps according to well-deﬁned up-
date rules, and salient objects naturally emerge un-
der the inﬂuence of their neighbors. This context-based
propagation mechanism can improve the saliency maps
generated by existing methods to a high performance
level. We used this in two ways: First, given a single
saliency map, SCA can be applied to superpixels gen-
erated from the saliency map at multiple scales, and
CCA can then integrate these into an improved saliency
map. Second, we can take saliency maps generated by

16

Yao Qin* et al.

multiple methods, apply SCA (if necessary) to improve
them, and then apply CCA to integrate them into bet-
ter saliency maps. Our experimental results demon-
strate the superior performance of our algorithms com-
pared to existing methods.

References

Achanta R, Hemami S, Estrada F, Susstrunk S (2009)
Frequency-tuned salient region detection. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 1597–1604

Achanta R, Shaji A, Smith K, Lucchi A, Fua P,

S¨usstrunk S (2010) Slic superpixels. Tech. rep.

Alexe B, Deselaers T, Ferrari V (2010) What is an ob-
ject? In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 73–80
de Almeida CM, Batty M, Monteiro AMV, Cˆamara
G, Soares-Filho BS, Cerqueira GC, Pennachin CL
(2003) Stochastic cellular automata modeling of ur-
ban land use dynamics: empirical development and
estimation. Computers, Environment and Urban Sys-
tems 27(5):481–509

Batty M (2007) Cities and complexity: understanding
cities with cellular automata, agent-based models,
and fractals. The MIT press

Borji A, Cheng MM, Jiang H, Li J (2015) Salient ob-
ject detection: A benchmark. IEEE Transactions on
Image Processing 24(12):5706–5722

Bruce N, Tsotsos J (2005) Saliency based on informa-
tion maximization. In: Advances in neural informa-
tion processing systems, pp 155–162

Cheng M, Mitra NJ, Huang X, Torr PH, Hu S (2015)
Global contrast based salient region detection. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence 37(3):569–582

Cheng MM, Warrell J, Lin WY, Zheng S, Vineet V,
Crook N (2013) Eﬃcient salient region detection with
soft image abstraction. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
1529–1536

Chopard B, Droz M (2005) Cellular automata model-
ing of physical systems, vol 6. Cambridge University
Press

Cowburn R, Welland M (2000) Room tempera-
ture magnetic quantum cellular automata. Science
287(5457):1466

Ding Y, Xiao J, Yu J (2011) Importance ﬁltering for
image retargeting. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 89–96

Donahue J, Jia Y, Vinyals O, Hoﬀman J, Zhang N,
Tzeng E, Darrell T (2014) Decaf: A deep convolu-

tional activation feature for generic visual recogni-
tion. In: Proceedings of International Conference on
Machine Learning, pp 647–655

Everingham M, Van Gool L, Williams CK, Winn J,
Zisserman A (2010) The pascal visual object classes
(voc) challenge. International journal of computer vi-
sion 88(2):303–338

Farabet C, Couprie C, Najman L, LeCun Y (2013)
Learning hierarchical
features for scene labeling.
IEEE transactions on pattern analysis and machine
intelligence 35(8):1915–1929

Girshick R, Donahue J, Darrell T, Malik J (2014) Rich
feature hierarchies for accurate object detection and
semantic segmentation. In: Proceedings of the IEEE
conference on computer vision and pattern recogni-
tion, pp 580–587

Goferman S, Zelnik-manor L, Tal A (2010) Context-
aware saliency detection. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Gong C, Tao D, Liu W, Maybank SJ, Fang M, Fu
K, Yang J (2015) Saliency propagation from simple
to diﬃcult. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 2531–
2539

Hariharan B, Arbel´aez P, Girshick R, Malik J (2014)
Simultaneous detection and segmentation. In: Pro-
ceedings of European Conference on Computer Vi-
sion, Springer, pp 297–312

Hariharan B, Arbel´aez P, Girshick R, Malik J (2015)
Hypercolumns for object segmentation and ﬁne-
grained localization. In: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recog-
nition, pp 447–456

Hou X, Zhang L (2007) Saliency detection: A spectral
residual approach. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 1–8

Itti L, Koch C (2001) Computational modelling of vi-
sual attention. Nature reviews neuroscience 2(3):194–
203

Itti L, Koch C, Niebur E (1998) A model of saliency-
based visual attention for rapid scene analysis. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence (11):1254–1259

Jiang B, Zhang L, Lu H, Yang C, Yang MH (2013a)
Saliency detection via absorbing markov chain. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 1665–1672

Jiang H, Wang J, Yuan Z, Liu T, Zheng N, Li S (2011)
Automatic salient object segmentation based on con-
text and shape prior. In: Proceedings of British Ma-
chine Vision Conference, vol 6, p 9

Hierarchical Cellular Automata for Visual Saliency

17

Jiang H, Wang J, Yuan Z, Wu Y, Zheng N, Li S
(2013b) Salient object detection: A discriminative re-
gional feature integration approach. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 2083–2090

Jiang P, Ling H, Yu J, Peng J (2013c) Salient region de-
tection by ufo: Uniqueness, focusness and objectness.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 1976–1983

Jiang Z, Davis L (2013) Submodular salient region de-
tection. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2043–2050
Kanan C, Cottrell GW (2010) Robust classiﬁcation of
objects, faces, and ﬂowers using natural image statis-
tics. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2472–2479
Kim J, Pavlovic V (2016) A shape-based approach for
salient object detection using deep learning. In: Pro-
ceedings of European Conference on Computer Vi-
sion, pp 455–470

Kim J, Han D, Tai YW, Kim J (2014) Salient region
detection via high-dimensional color transform. In:
Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition, pp 883–890

Klein DA, Frintrop S (2011) Center-surround diver-
gence of feature statistics for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 2214–2219

Krizhevsky A, Sutskever I, Hinton GE (2012) Ima-
genet classiﬁcation with deep convolutional neural
networks. In: Advances in neural information pro-
cessing systems, pp 1097–1105

Li G, Yu Y (2015) Visual saliency based on multiscale
deep features. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 5455–
5463

Li N, Ye J, Ji Y, Ling H, Yu J (2014a) Saliency detec-
tion on light ﬁeld. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition
Li X, Lu H, Zhang L, Ruan X, Yang MH (2013) Saliency
detection via dense and sparse reconstruction. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 2976–2983

Li X, Zhao L, Wei L, Yang MH, Wu F, Zhuang Y, Ling
H, Wang J (2016) Deepsaliency: Multi-task deep neu-
ral network model for salient object detection. IEEE
Transactions on Image Processing 25(8):3919–3930
Li Y, Hou X, Koch C, Rehg J, Yuille A (2014b) The se-
crets of salient object segmentation. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 280–287

Liu T, Yuan Z, Sun J, Wang J, Zheng N, Tang X, Shum
HY (2011) Learning to detect a salient object. IEEE

Transactions on Pattern Analysis and Machine Intel-
ligence 33(2):353–367

Long J, Shelhamer E, Darrell T (2015) Fully convolu-
tional networks for semantic segmentation. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 3431–3440

Ma C, Huang JB, Yang X, Yang MH (2015) Hierar-
chical convolutional features for visual tracking. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 3074–3082

Mahadevan V, Vasconcelos N (2009) Saliency-based
discriminant tracking. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recogni-
tion, pp 1007–1013

Marchesotti L, Cifarelli C, Csurka G (2009) A frame-
work for visual saliency detection with applications
to image thumbnailing. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
2232–2239

Martins AC (2008) Continuous opinions and discrete
actions in opinion dynamics problems. International
Journal of Modern Physics C 19(04):617–624

Ng AY, Jordan MI, Weiss Y, et al (2002) On spectral
clustering: Analysis and an algorithm. Advances in
neural information processing systems 2:849–856
Otsu N (1975) A threshold selection method from gray-
level histograms. Automatica 11(285-296):23–27
Pan Q, Qin Y, Xu Y, Tong M, He M (2016) Opinion
evolution in open community. International Journal
of Modern Physics C p 1750003

Perazzi F, Kr¨ahenb¨uhl P, Pritch Y, Hornung A (2012)
Saliency ﬁlters: Contrast based ﬁltering for salient
region detection. In: Proceedings of IEEE Conference
on Computer Vision and Pattern Recognition, IEEE,
pp 733–740

Pinheiro PH, Collobert R (2014) Recurrent convolu-
tional neural networks for scene labeling. In: Proceed-
ings of International Conference on Machine Learn-
ing, pp 82–90

Qin Y, Lu H, Xu Y, Wang H (2015) Saliency detection
via cellular automata. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recognition
Rahtu E, Kannala J, Salo M, Heikkil¨a J (2010) Seg-
menting salient objects from images and videos. In:
Proceedings of European Conference on Computer
Vision, pp 366–379

Reinagel P, Zador AM (1999) Natural scene statistics at
the centre of gaze. Network: Computation in Neural
Systems 10(4):341–350

Scharfenberger C, Wong A, Fergani K, Zelek JS, Clausi
DA (2013) Statistical textural distinctiveness for
salient region detection in natural images. In: Pro-
ceedings of IEEE Conference on Computer Vision

18

Yao Qin* et al.

Computer Vision and Pattern Recognition, pp 3183–
3192

Wang Q, Zheng W, Piramuthu R (2016) Grab: Visual
saliency via novel graph model and background pri-
ors. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 535–543
Wei Y, Wen F, Zhu W, Sun J (2012) Geodesic saliency
using background priors. In: Proceedings of European
Conference on Computer Vision, pp 29–42

Wolfram S (1983) Statistical mechanics of cellular au-

tomata. Reviews of modern physics 55(3):601

Xie Y, Lu H (2011) Visual saliency detection based
on bayesian model. In: Proceedings of IEEE Interna-
tional Conference on Image Processing, pp 645–648
Xie Y, Lu H, Yang MH (2013) Bayesian saliency via
low and mid level cues. IEEE Transactions on Image
Processing 22(5):1689–1698

Yan Q, Xu L, Shi J, Jia J (2013) Hierarchical saliency
detection. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 1155–
1162

Yang C, Zhang L, Lu H, Ruan X, Yang MH (2013)
Saliency detection via graph-based manifold ranking.
In: Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 3166–3173

Yang J, Yang MH (2012) Top-down visual saliency via
joint crf and dictionary learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, IEEE, pp 2296–2303

Zhao R, Ouyang W, Li H, Wang X (2015) Saliency de-
tection by multi-context deep learning. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 1265–1274

Zhou F, Bing Kang S, Cohen MF (2014) Time-mapping
using space-time saliency. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Zhu W, Liang S, Wei Y, Sun J (2014) Saliency optimiza-
tion from robust background detection. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 2814–2821

Zou W, Komodakis N (2015) Harf: Hierarchy-
associated rich features for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 406–414

and Pattern Recognition, pp 979–986

Shen X, Wu Y (2012) A uniﬁed approach to salient
object detection via low rank matrix recovery. In:
Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 853–860

Shi K, Wang K, Lu J, Lin L (2013) Pisa: Pixelwise im-
age saliency by aggregating complementary appear-
ance contrast measures with spatial priors. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 2115–2122

Siagian C, Itti L (2007) Rapid biologically-inspired
scene classiﬁcation using features shared with visual
attention. IEEE Transactions on Pattern Analysis
and Machine Intelligence 29(2):300–312

Smith AR (1972) Real-time language recognition by
one-dimensional cellular automata. Journal of Com-
puter and System Sciences 6(3):233–253

Sun J, Ling H (2011) Scale and object aware image
retargeting for thumbnail browsing. In: Proceedings
of the IEEE International Conference on Computer
Vision, pp 1511–1518

Sun J, Lu H, Li S (2012) Saliency detection based on
integration of boundary and soft-segmentation. In:
Proceedings of IEEE International Conference on Im-
age Processing, pp 1085–1088

Szegedy C, Toshev A, Erhan D (2013) Deep neural net-
works for object detection. In: Advances in Neural
Information Processing Systems, pp 2553–2561

Szegedy C, Liu W, Jia Y, Sermanet P, Reed S, Anguelov
D, Erhan D, Vanhoucke V, Rabinovich A (2015) Go-
ing deeper with convolutions. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern
Recognition, pp 1–9

Tong N, Lu H, Ruan X, Yang MH (2015a) Salient object
detection via bootstrap learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, pp 1884–1892

Tong N, Lu H, Zhang Y, Ruan X (2015b) Salient object
detection via global and local cues. Pattern Recogni-
tion 48(10):3258–3267

Von Neumann J (1951) The general and logical the-
ory of automata. Cerebral mechanisms in behavior
1(41):1–2

Von Neumann J, Burks AW, et al (1966) Theory of self-
reproducing automata. IEEE Transactions on Neural
Networks 5(1):3–14

Wang L, Xue J, Zheng N, Hua G (2011) Automatic
salient object extraction with contextual cue. In: Pro-
ceedings of the IEEE International Conference on
Computer Vision, pp 105–112

Wang L, Lu H, Ruan X, Yang MH (2015) Deep net-
works for saliency detection via local estimation and
global search. In: Proceedings of IEEE Conference on

Noname manuscript No.
(will be inserted by the editor)

Hierarchical Cellular Automata for Visual Saliency

Yao Qin* · Mengyang Feng* · Huchuan Lu · Garrison W. Cottrell

7
1
0
2
 
y
a
M
 
6
2
 
 
]

V
C
.
s
c
[
 
 
1
v
5
2
4
9
0
.
5
0
7
1
:
v
i
X
r
a

Received: date / Accepted: date

Abstract Saliency detection, ﬁnding the most impor-
tant parts of an image, has become increasingly popular
in computer vision. In this paper, we introduce Hierar-
chical Cellular Automata (HCA) – a temporally evolv-
ing model to intelligently detect salient objects. HCA
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). As an unsupervised propagation mechanism,
Single-layer Cellular Automata can exploit the intrinsic
relevance of similar regions through interactions with
neighbors. Low-level image features as well as high-
level semantic information extracted from deep neu-
ral networks are incorporated into the SCA to measure
the correlation between diﬀerent image patches. With
these hierarchical deep features, an impact factor ma-
trix and a coherence matrix are constructed to balance
the inﬂuences on each cell’s next state. The saliency
values of all cells are iteratively updated according to a
well-deﬁned update rule. Furthermore, we propose CCA
to integrate multiple saliency maps generated by SCA
at diﬀerent scales in a Bayesian framework. Therefore,
single-layer propagation and multi-layer integration are
jointly modeled in our uniﬁed HCA. Surprisingly, we

Yao Qin
University of California, San Diego
E-mail: yaq007@eng.ucsd.edu

Mengyang Feng
Dalian University of Technology
E-mail: mengyangfeng@gmail.com

Huchuan Lu
Dalian University of Technology
E-mail: lhchuan@dlut.edu.cn

Garrsion W. Cottrell
University of California, San Diego
E-mail: gary@eng.ucsd.edu

* Equal Contribution

ﬁnd that the SCA can improve all existing methods
that we applied it to, resulting in a similar precision
level regardless of the original results. The CCA can
act as an eﬃcient pixel-wise aggregation algorithm that
can integrate state-of-the-art methods, resulting in even
better results. Extensive experiments on four challeng-
ing datasets demonstrate that the proposed algorithm
outperforms state-of-the-art conventional methods and
is competitive with deep learning based approaches.

Keywords Saliency Detection · Hierarchical Cellular
Automata · Deep Contrast Features · Bayesian
Framework

1 Introduction

Humans excel in identifying visually signiﬁcant regions
in a scene corresponding to salient objects. Given an im-
age, people can quickly tell what attracts them most.
In the ﬁeld of computer vision, however, performing the
same task is very challenging, despite dramatic progress
in recent years. To mimic the human attention sys-
tem, many researchers focus on developing computa-
tional models that locate regions of interest in the im-
age. Since accurate saliency maps can assign relative
importance to the visual contents in an image, saliency
detection can be used as a pre-processing procedure to
narrow the scope of visual processing and reduce the
cost of computing resources. As a result, saliency detec-
tion has raised a great amount of attention (Achanta
et al, 2009; Goferman et al, 2010) and has been in-
corporated into various computer vision tasks, such as
visual tracking (Mahadevan and Vasconcelos, 2009), ob-
ject retargeting (Ding et al, 2011; Sun and Ling, 2011)
and image categorization (Siagian and Itti, 2007; Kanan
and Cottrell, 2010). Results in perceptual research

2

Yao Qin* et al.

are usually integrated in a simple and heuristic way,
which may directly limit the precision of saliency ag-
gregation.

To address these two obvious problems, we propose
a novel method named Hierarchical Cellular Automata
(HCA) to extract the salient objects from the back-
ground eﬃciently. A Hierarchical Cellular Automata
consists of two main components: Single-layer Cellu-
lar Automata (SCA) and Cuboid Cellular Automata
(CCA). First, to improve the features, we use fully
convolutional networks (Long et al, 2015) to extract
deep features due to their successful application to se-
mantic segmentation. It has been demonstrated that
deep features are highly versatile and have stronger rep-
resentational power than traditional handcrafted fea-
tures (Krizhevsky et al, 2012; Farabet et al, 2013; Gir-
shick et al, 2014). Low-level image features and high-
level saliency cues extracted from deep neural networks
are used by an SCA to measure the similarity of neigh-
bors. With these hierarchical deep features, the SCA
iteratively updates the saliency map through interac-
tions with similar neighbors. Then the salient object
will naturally emerge from the background with high
consistency among similar image patches. Secondly, to
detect multi-scale salient objects, we apply the SCA at
diﬀerent scales and integrate them with the CCA based
on Bayesian inference. Through interactions with neigh-
bors in a cuboid zone, the integrated saliency map can
highlight the foreground and suppress the background.
An overview of our proposed HCA is shown in Figure. 2.
Furthermore, the Hierarchical Cellular Automata is
capable of optimizing other saliency detection methods.
If a saliency map generated by one of the existing meth-
ods is used as the prior map and fed into HCA, it can be
improved to the state-of-the-art precision level. Mean-
while, if multiple saliency maps generated by diﬀerent
existing methods are used as initial inputs, HCA can
naturally fuse these saliency maps and achieve a result
that outperforms each method.

In summary, the main contributions of our work in-

clude:
(1) We propose a novel Hierarchical Cellular Automata
to adaptively detect salient objects of diﬀerent scales
based on hierarchical deep features. The model eﬀec-
tively improves all of the methods we have applied it
to to state-of-the-art precision levels and is relatively
insensitive to the original maps.
(2) Single-layer Cellular Automata serve as a propaga-
tion mechanism that exploits the intrinsic relevance of
similar regions via interactions with neighbors.
(3) Cuboid Cellular Automata can integrate multiple
saliency maps into a more favorable result under the
Bayesian framework.

Fig. 1 An example illustrates that conventional saliency
detection methods based on handcrafted low-level features
fail
in complex circumstances. From top left to bottom
right: stimulus, HS (Yan et al, 2013), DSR (Li et al, 2013),
MR (Yang et al, 2013), ground truth, wCO (Zhu et al, 2014),
and our method SCA and HCA.

show that contrast is one of the decisive factors in the
human visual attention system (Itti and Koch, 2001;
Reinagel and Zador, 1999), suggesting that salient ob-
jects are most likely in the region of the image that
signiﬁcantly diﬀers from its surroundings. Many con-
ventional saliency detection methods focus on exploit-
ing local and global contrast based on various hand-
crafted image features, e.g., color features (Liu et al,
2011; Cheng et al, 2015), focusness (Jiang et al, 2013c),
textual distinctiveness (Scharfenberger et al, 2013), and
structure descriptors (Shi et al, 2013). Although these
methods perform well on simple benchmarks, they may
fail in some complex situations where the handcrafted
low-level features do not help salient objects stand out
from the background. For example, in Figure. 1, the
prairie dog is surrounded by low-contrast rocks and
bushes. It is challenging to detect the prairie dog as
a salient object with only low-level saliency cues. How-
ever, humans can easily recognize the prairie dog based
on its category as it is semantically salient in high-level
cognition and understanding.

In addition to the limitation of low-level features,
the large variations in object scales also restrict the ac-
curacy of saliency detection. An appropriate scale is of
great importance in extracting the salient object from
the background. One of the most popular ways to detect
salient objects of diﬀerent sizes is to construct multi-
scale saliency maps and then aggregate them with pre-
deﬁned functions, such as averaging or a weighted sum-
mation. In most existing methods (Wang et al, 2016; Li
and Yu, 2015; Li et al, 2014a; Zhou et al, 2014; Borji
et al, 2015), however, these constructed saliency maps

Hierarchical Cellular Automata for Visual Saliency

3

Fig. 2 The pipeline of our proposed Hierarchical Cellular Automata. First, the stimulus is segmented into multi-scale super-
pixels, and superpixels on the image boundary are selected as seeds for the propagation of the background (Section. 3.1). Then
FCN-32s (Long et al, 2015) is used as a feature extractor to obtain deep features (Section. 3.2). The generated prior maps
and deep features are both fed into the Single-Layer Cellular Automata (Section. 3.3.1) to create multi-scale saliency maps.
Finally, we integrate these saliency maps via the Cuboid Cellular Automata (Section. 3.3.2) to obtain our ultimate result.

2 Related Work

2.1 Salient Object Detection

Methods of saliency detection can be divided into two
categories: top-down (task-driven) methods and bottom-
up (data-driven) methods. Approaches like (Alexe et al,
2010; Marchesotti et al, 2009; Ng et al, 2002; Yang and
Yang, 2012) are typical top-down visual attention meth-
ods that require supervised learning with manually la-
beled ground truth. To better distinguish salient ob-
jects from the background, high-level category-speciﬁc
information and supervised methods are incorporated
to improve the accuracy of saliency maps. In contrast,
bottom-up methods usually concentrate on low-level
cues such as color, intensity, texture and orientation to
construct saliency maps (Hou and Zhang, 2007; Jiang
et al, 2011; Klein and Frintrop, 2011; Sun et al, 2012;
Tong et al, 2015b; Yan et al, 2013). Some global bottom-
up approaches tend to build saliency maps by calculat-
ing the holistic statistics on uniqueness of each element
over the whole image (Cheng et al, 2015; Perazzi et al,
2012; Bruce and Tsotsos, 2005).

As saliency is deﬁned as a particular part of an im-
age that visually stands out compared to their neigh-
boring regions or the rest of image, one of the most
used principles, contrast prior, measures the saliency of
a region according to the color contrast or geodesic dis-
tance against its surroundings (Cheng et al, 2013, 2015;
Jiang et al, 2011; Jiang and Davis, 2013; Klein and
Frintrop, 2011; Perazzi et al, 2012; Wang et al, 2011).
Recently, the boundary prior has been introduced in
several methods based on the assumption that regions
along the image boundaries are more likely to be the
background (Jiang et al, 2013b; Li et al, 2013; Wei et al,
2012; Yang et al, 2013; Borji et al, 2015; Shen and Wu,
2012), although this takes advantage of photographer’s

bias and is less likely to be true for active robots. Con-
sidering the connectivity of regions in the background,
Wei et al (2012) deﬁne the saliency value for each re-
gion as the shortest-path distance towards the bound-
ary. Yang et al (2013) use manifold ranking to infer the
saliency score of image regions according to their rele-
vance to boundary superpixels. Furthermore, in (Jiang
et al, 2013a), the contrast against the image border is
used as a new regional feature vector to characterize
the background.

However, one of the fundamental problems with all
these conventional saliency detection methods is that
the features used are not representative enough to cap-
ture the contrast between foreground and background,
and this limits the precision of saliency detection. For
one thing, low-level features cannot help salient objects
stand out from a low-contrast background with similar
visual appearance. Also, the extracted global features
are weak in capturing semantic information and have
much poorer generalization compared to the deep fea-
tures used in this paper.

2.2 Deep Neural Networks

Deep convolutional neural networks have recently achie-
ved a great success in various computer vision tasks,
including image classiﬁcation (Krizhevsky et al, 2012;
Szegedy et al, 2015), object detection (Girshick et al,
2014; Hariharan et al, 2014; Szegedy et al, 2013) and
semantic segmentation (Long et al, 2015; Pinheiro and
Collobert, 2014). With the rapid development of deep
neural networks, researchers have begun to construct
eﬀective neural networks for saliency detection (Zhao
et al, 2015; Li and Yu, 2015; Zou and Komodakis, 2015;
Wang et al, 2015; Li et al, 2016; Kim and Pavlovic,
2016). In (Zhao et al, 2015), Zhao et al. propose a
uniﬁed multi-context deep neural network taking both

4

Yao Qin* et al.

global and local context into consideration. Li et al. (Li
and Yu, 2015) and Zou et al. (Zou and Komodakis,
2015) explore high-quality visual features extracted from
DNNs to improve the accuracy of saliency detection.
DeepSaliency in (Li et al, 2016) is a multi-task deep
neural network using a collaborative feature learning
scheme between two correlated tasks, saliency detec-
tion and semantic segmentation, to learn better fea-
ture representation. One leading factor for the success
of deep neural networks is the powerful expressibility
and strong capacity of deep architectures that facili-
tate learning high-level features with semantic infor-
mation (Hariharan et al, 2015; Ma et al, 2015).

In (Donahue et al, 2014), Donahue et al. point out
that features extracted from the activation of a deep
convolutional network can be repurposed to other generic
tasks. Inspired by this idea, we use the hierarchical
deep features extracted from fully convolutional net-
works (Long et al, 2015) to represent smaller image
regions. The extracted deep features incorporate low-
level features as well as high-level semantic information
of the image and can be fed into our Hierarchical Cel-
lular Automata to measure the similarity of diﬀerent
image patches.

2.3 Cellular Automata

Cellular Automata are a model of computation ﬁrst
proposed by Von Neumann (1951). They can be de-
scribed as a temporally evolving system with simple
construction but complex self-organizing behavior. A
Cellular Automaton consists of a lattice of cells with
discrete states, which evolve in discrete time steps ac-
cording to speciﬁc rules. Each cell’s next state is deter-
mined by its current state as well as its nearest neigh-
bors’ states. Cellular Automata have been applied to
simulate the evolution of many complicated dynamical
systems (Batty, 2007; Chopard and Droz, 2005; Cow-
burn and Welland, 2000; de Almeida et al, 2003; Mar-
tins, 2008; Pan et al, 2016). Considering that salient ob-
jects are spatially coherent, we introduce Cellular Au-
tomata into this ﬁeld and propose Single-layer Cellular
Automata as an unsupervised propagation mechanism
to exploit the intrinsic relationships of neighboring ele-
ments of the saliency map and eliminate gaps between
similar regions.

In addition, we propose a method to combine multi-
ple saliency maps generated by diﬀerent algorithms, or
combine saliency maps at diﬀerent scales through what
we call Cuboid Cellular Automata (CCA). In CCA,
states of the automaton are determined by a cuboid
neighborhood corresponding to automata at the same
location as well as their adjacent neighbors in diﬀer-
ent saliency maps. An illustration of the idea is in Fig-
ure 3(b). In this setting, the saliency maps are itera-

tively updated through interactions among neighbors
in the cuboid zone. The state updates are determined
through Bayesian evidence combination rules. Variants
of this type of approach have been used before (Rahtu
et al, 2010; Xie and Lu, 2011; Xie et al, 2013; Li et al,
2013). Xie et al (2013) use the low-level visual cues
derived from a convex hull to compute the observa-
tion likelihood. Li et al (2013) construct saliency maps
through dense and sparse reconstruction and propose a
Bayesian algorithm to combine them. Using Bayesian
updates to combine saliency maps puts the algorithm
for Cuboid Cellular Automata on a ﬁrm theoretical
foundation.

3 Proposed algorithm

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata (HCA) for saliency detection,
composed of two sub-units, a Single-layer Cellular Au-
tomata (SCA), and a Cuboid Cellular Automata (CCA),
as described below. First, we construct prior maps of
diﬀerent scales with superpixels on the image bound-
ary chosen as the background seeds. Then, hierarchi-
cal deep features are extracted from fully convolutional
networks (Long et al, 2015) to measure the similarity of
diﬀerent superpixels. Next, we use SCA to iteratively
update the prior maps at diﬀerent scales based on the
hierarchical deep features. Finally, a CCA is used to
integrate the multi-scale saliency maps using Bayesian
evidence combination. Figure. 2 shows an overview of
our proposed method.

3.1 Background Priors

Recently, there have been various mathematical mod-
els proposed to generate a coarse saliency map to help
locate potential salient objects in an image (Tong et al,
2015a; Zhu et al, 2014; Gong et al, 2015). Even though
prior maps are eﬀective in improving detection preci-
sion, they still have several drawbacks. For example, a
poor prior map may greatly limit the accuracy of the ﬁ-
nal saliency map if it incorrectly estimates the location
of the objects or classiﬁes the foreground as the back-
ground. Also, the computational time to construct a
prior map can be excessive. Therefore, in this paper, we
build a quite simple and time-eﬃcient prior map that
only provides the propagation seeds for HCA, which is
quite insensitive to the prior map and is able to reﬁne
this coarse prior map into an improved saliency map.

First, we use the eﬃcient Simple Linear Iterative
Clustering (SLIC) algorithm (Achanta et al, 2010) to
segment the image into smaller superpixels in order to
capture the essential structural information of the im-
age. Let si ∈ R denote the saliency value of the super-
pixel i in the image. Based on the assumption that su-
perpixels on the image boundary tend to have a higher

Hierarchical Cellular Automata for Visual Saliency

5

probability of being the background, we assign a close-
to-zero saliency value to the boundary superpixels. For
others, we assign a uniform value as their initial saliency
values,

si =

(cid:26) 0.001 i ∈ boundary
0.5 i (cid:54)∈ boundary.

(1)

Considering the great variation in the scales of salient
objects, we segment the image into superpixels at M
diﬀerent scales, which are displayed in Figure. 2 (Prior
Maps).

3.2 Deep Features from FCN

As is well-known, the features in the last layers of CNNs
encode semantic abstractions of objects, and are robust
to appearance variations, while the early layers contain
low-level image features, such as color, edge, and tex-
ture. Although high-level features can eﬀectively dis-
criminate the objects from various backgrounds, they
cannot precisely capture the ﬁne-grained low-level in-
formation due to their low spatial resolution. Therefore,
a combination of these deep features is preferred com-
pared to any individual feature map.

In this paper, we use the feature maps extracted
from the fully-convolutional network (FCN-32s (Long
et al, 2015)) to encode object appearance. The input
image to FCN-32s is resized to 500 × 500, and a 100-
pixel padding is added to the four boundaries. Due to
subsampling and pooling operations in the CNN, the
outputs of each convolutional layer in the FCN frame-
work are not at the same resolution. Since we only care
about the features corresponding to the original image,
we need to 1) crop the feature maps to get rid of the
padding; 2) resize each feature map to the input image
size via the nearest neighbor interpolation. Then each
feature map can be aggregated using a simple linear
combination as:

g(ri, rj) =

ρl · (cid:107)df l

i − df l

j(cid:107)2,

(2)

L
(cid:88)

l=1

where df l
i denotes the deep features of superpixel i on
the l-th layer and ρl is a weighting of the importance of
the l-th feature map, which we set by cross-validation.
The weights are constrained to sum to 1: (cid:80)L
l=1 ρl = 1.
Each superpixel is represented by the mean of the deep
features of all contained pixels. The computed g(ri, rj)
is used to measure the similarity between superpixels.

3.3 Hierarchical Cellular Automata

Hierarchical Cellular Automata (HCA) is a uniﬁed frame-
work composed of single-layer propagation (Single-layer
Cellular Automata) and multi-layer aggregation (Cuboid

Fig. 3 The constructed graph models used in our algorithm.
(a) is used in SCA, the orange lines and the blue lines rep-
resent the connections between the blue center cell and its
2-layer neighbors. The purple lines indicate that superpixels
on the image boundaries are all connected to each other; (b)
is used in CCA, a cell (e.g. the red pixel in the bottom layer)
is connected to the pixels with the same coordinates in other
layers as well as their four adjacent neighbors (e.g. cells in
blue color). All these pixels construct a cuboid interaction
zone.

Cellular Automata). It can generate saliency maps at
diﬀerent scales and integrate them to get a ﬁne-grained
saliency map. We will discuss SCA and CCA respec-
tively in Sections 3.3.1 and 3.3.2.

3.3.1 Single-layer Cellular Automata

In Single-layer Cellular Automata (SCA), each cell de-
notes a superpixel generated by the SLIC algorithm.
SLIC takes the number of desired superpixels as a pa-
rameter, so by using diﬀerent numbers of superpixels
with SCA, we can obtain maps at diﬀerent scales. In
this section, we assume one scale, denoted m. We de-
note the number of superpixels in scale m by nm, but
we omit the subscript m in most notation in this section
for clarity, e.g., F for Fm, C for Cm and s for sm.

We make three major modiﬁcations to the previ-
ous cellular automata models (Smith, 1972; Von Neu-
mann, 1951) for saliency detection. First, the states of
cells in most existing Cellular Automata models are dis-
crete (Von Neumann et al, 1966; Wolfram, 1983). How-
ever, in this paper, we use the saliency value of each
superpixel as its state, which is continuous between
0 and 1. Second, we give a broader deﬁnition of the
neighborhood that is similar to the concept of z-layer
neighborhood (here z = 2) in graph theory. The z-layer
neighborhood of a cell includes adjacent cells as well
as those sharing common boundaries with its adjacent
cells. Also, we assume that superpixels on the image
boundaries are all connected to each other because all
of them serve as background seeds. The connections be-
tween the neighbors are clearly illustrated in Figure. 3
(a). Finally, instead of uniform inﬂuence of the neigh-
bors , the inﬂuence is based on the similarity between
the neighbor to the cell in feature space, as explained
next.

Impact Factor Matrix: Intuitively, neighbors with
more similar features have a greater inﬂuence on the

6

Yao Qin* et al.

cell’s next state. The similarity of any pair of super-
pixels is measured by a pre-deﬁned distance in feature
space. For the m-th saliency map, which has nm super-
pixels in total, we construct an impact factor matrix
F ∈ Rnm×nm . Each element fij in F deﬁnes the impact
factor of superpixel i to j as:

fij =

(cid:40)

exp( −g(ri,rj )
0

σ2
f

)

j ∈ NB(i)

j = i or otherwise,

(3)

where g(ri, rj) is a function that computes the distance
between the superpixel i and j in feature space with ri
as the feature descriptor of superpixel i. In this paper,
we use the weighted distance of hierarchical deep fea-
tures computed by Eqn. (2) to measure the similarity
between neighbors. σf is a parameter that controls the
strength of similarity and NB(i) is the set of the neigh-
bors of the cell i. In order to normalize the impact fac-
tors, a degree matrix D = diag{d1, d2, · · · , dnm } is con-
structed, where di = (cid:80)
i fij. Finally, a row-normalized
impact factor matrix can be calculated as F∗ = D−1 ·F.
Coherence Matrix: Given that each cell’s next
state is determined by its current state as well as its
neighbors, we need to balance the importance of these
two factors. On the one hand, if a superpixel is quite
diﬀerent from all its neighbors in the feature space, its
next state will be primarily based on itself. On the other
hand, if a cell is similar to its neighbors, it should be
assimilated by the local environment. To this end, we
build a coherence matrix C = diag{c1, c2, · · · , cnm} to
promote the evolution among all cells. Each cell’s co-
herence towards its current state is initially computed
as: ci =
max(fij ) , so it is inversely proportional to its
maximum similarity to its neighbors. We normalize this
to be in a range ci ∈ [ b , a + b ], where a and b are pa-
rameters, via:
c∗
i = a ·

ci − min (cj)
max (cj) − min (cj)

+ b,

(4)

1

where the min and max are computed over j = 1, 2,
..., nm. Based on preliminary experiments, we set the
constants a and b in Eq. (4) to 0.6 and 0.2. If a is ﬁxed
to 0.6, our results are insensitive to the value of b in
the interval [ 0.1 , 0.3 ]. The ﬁnal, normalized coherence
matrix is then: C∗ = diag{c∗

1, c∗
Synchronous Update Rule: In Cellular Automata,

2, · · · , c∗

nm

}.

all cells will simultaneously update their states accord-
ing to the update rule, which is a key point in Cellular
Automata, as it controls whether the ultimate evolv-
ing state is chaotic or stable (Wolfram, 1983). Here, we
deﬁne the synchronous update rule based on the im-
pact factor matrix F∗ ∈ Rnm×nm and coherence matrix
C∗ ∈ Rnm×nm:

s(t+1) = C∗s(t) + (I − C∗) F∗s(t),

(5)

Fig. 4 Saliency maps generated by SCA (nm = 200). The
ﬁrst three columns show that salient objects can be precisely
detected when the saliency appears in the center of the im-
age. The last three columns indicate that SCA can still have
good performance even when salient objects touch the image
boundary.

where I is the identity matrix of dimension nm × nm
and s(t) ∈ Rnm denotes the saliency map at time t.
When t = 0, s(0) is the prior map generated by the
method introduced in Section. 3.1. After TS time steps
(a time step is deﬁned as one update of all cells), the
saliency map can be represented as s(TS ). It should be
noted that the update rule is invariant over time; only
the cells’ states s(t) change over iterations.

Our synchronous update rule is based on the gen-
eralized intrinsic characteristics of most images. First,
superpixels belonging to the foreground usually share
similar feature representations. By exploiting the corre-
lation between neighbors, the SCA can enhance saliency
consistency among similar regions and develop a steady
local environment. Second, it can be observed that there
is a high contrast between the object and its surround-
ing background in feature space. Therefore, a clear bound-
ary will naturally emerge between the object and the
background, as the cell’s saliency value is greatly inﬂu-
enced by its similar neighbors. With boundary-based
prior maps, salient objects can be naturally highlighted
after the evolution of the system due to the connec-
tivity and compactness of the object, as exempliﬁed in
Figure. 4. Speciﬁcally, even though part of the salient
object is incorrectly selected as the background seed,
the SCA can adaptively increase their saliency values
under the inﬂuence of the local environment. The last
three columns in Figure. 4 show that when the object
touches the image boundary, the results achieved by the
SCA are still satisfying.

3.3.2 Cuboid Cellular Automata

To better capture the salient objects of diﬀerent scales,
we propose a novel method named Cuboid Cellular
Automata (CCA) to incorporate M diﬀerent saliency
maps generated by SCA under M scales, each of which
serves as a layer of the Cuboid Cellular Automata. In
CCA, each cell corresponds to a pixel, and the saliency
values of all pixels constitute the set of cells’ states. The

Hierarchical Cellular Automata for Visual Saliency

number of all pixels in an image is denoted as H. Unlike
the deﬁnition of a neighborhood in Section. 3.3.1 and
Multi-layer Cellular Automata in (Qin et al, 2015), here
pixels with the same coordinates in diﬀerent saliency
maps as well as their 4-connected pixels are all regarded
as neighbors. That is, for any cell in a saliency map, it
should have 5M − 1 neighbors, constructing a cuboid
interaction zone. The hierarchical graph is presented
in Figure. 3 (b) to illustrate the connections between
neighbors.

m,i = P (i ∈(t)

m F ), while 1 − s(t)

The saliency value of pixel i in the m-th saliency
map at time t is its probability of being the foreground
F , represented as s(t)
m,i = P (i ∈(t)
m,i is
its probability of being the background B, denoted as
1 − s(t)
m B). We binarize each map with an
adaptive threshold using Otsu’s method (Otsu, 1975),
which is computed from the initial saliency map and
does not change over time. The threshold of the m-
th saliency map is denoted by γm. If pixel i in the
m-th binary map is classiﬁed as foreground at time t
(s(t)
m,i = +1. Cor-
respondingly, η(t)
m,i = −1 means that pixel i is binarized
as background (s(t)

m,i ≥ γm), then it will be denoted as η(t)

m,i < γm).

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

If pixel i belongs to the foreground, the probability
that one of its neighboring pixels j in the m-th binary
map is classiﬁed as foreground at time t is denoted as
P ( η(t)
m F ). In the same way, the proba-
bility P ( η(t)
m B ) represents that the pixel
j is binarized as B conditioned on that pixel i belongs
to the background at time t. We make the assump-
tion that P ( η(t)
m F ) is the same for all
the pixels in any saliency map and it does not change
over time. Additionally, it is reasonable to assume that
m F ) = P ( η(t)
P ( η(t)
m B ).
Therefore, we use a constant λ to denote these two
probablities:

m,j = −1|i ∈(t)

m,j = +1|i ∈(t)

m,j = +1|i ∈(t)

P ( η(t)

m,j = +1|i ∈(t)

m F ) = P ( η(t)

m,j = −1|i ∈(t)

m B ) = λ.
(6)

m F |η(t)

m,j = +1)

Then the posterior probability P (i ∈(t)
can be calculated as follows:
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:16)
(cid:17)
P

η(t)
m,j = +1

i ∈(t)

i ∈(t)

m F

m F

m F

∝ P

(cid:12)
(cid:12)i ∈(t)
(cid:12)

P

(cid:16)

(cid:16)

(cid:17)

(cid:17)

= s(t)

m,i · λ

In order to get rid of the normalizing constant in

Eqn. (7), we deﬁne the prior ratio Ω(i ∈(t)
i ∈(t)

m F

P

(cid:16)

(cid:17)

m F ) as:

(cid:16)

Ω

i ∈(t)

m F

(cid:17)

=

(cid:16)

P

i ∈(t)

m B

(cid:17) =

s(t)
m,i
1 − s(t)
m,i

.

(7)

(8)

7

(9)

(11)

(12)

Combining Eqn. (7) and Eqn. (8), the posterior ratio
Ω(i ∈(t)

m,j = +1) turns into:

m F | η(t)

(cid:16)

Ω

i ∈(t)

m F

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1

(cid:17)

=

(cid:16)

(cid:16)

P

P

i ∈(t)

m F

i ∈(t)

m B

=

s(t)
m,i
1 − s(t)
m,i

·

(cid:17)

(cid:17)

(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
(cid:12)
(cid:12)η(t)
(cid:12)
m,j = +1
λ
1 − λ

.

m F |η(t)

As the posterior probability P (i ∈(t)

m,j = +1)
represents the probability of pixel i of being the fore-
ground F conditioned on that its neighboring pixel j
in the m-th saliency map is binarized as foreground at
time t, P (i ∈(t)
m,j = +1) can also be used to rep-
resent the probability of pixel i of being the foreground
F at time t + 1. Then,

m F |η(t)

s(t+1)
m,i = P (i ∈(t)

m F |η(t)

m,j = +1).

(10)

According to Eqn. (9) and Eqn. (10), we can get:

s(t+1)
m,i
1 − s(t+1)

m,i

m F |η(t)

m,j = +1)

m F |η(t)

m,j = +1)

m F |η(t)
m B|η(t)

m,j = +1)
m,j = +1)

=

=

=

P (i ∈(t)
1 − P (i ∈(t)
P (i ∈(t)
P (i ∈(t)
s(t)
m,i
1 − s(t)
m,i

·

λ
1 − λ

.

It is much easier to deal with the logarithm of this quan-
tity because the changes in logodds will be additive. So
Eqn. (11) turns into:

(cid:16)

l

s(t+1)
m,i

(cid:17)

= l

(cid:17)

(cid:16)

s(t)
m,i

+ Λ,

(cid:17)

(cid:16)

= ln(

where l

s(t+1)
m,i

) and Λ = ln( λ

s(t+1)
m,i
1−λ ) is
1−s(t+1)
m,i
a constant. The intuitive explanation for Eqn. (12) is
that: if a pixel observes that one of its neighbors is bi-
narized as foreground, it ought to increase its saliency
value; otherwise, it should decrease its saliency value.
Therefore, Eqn. (12) requires Λ > 0. In this paper, we
empirically set Λ = 0.05.

As each pixel has 5M −1 neighbors in total, the pixel
will decide its action (increase or decrease it saliency
value) based on all its neighbors’ current states. Assum-
ing the contribution of each neighbor is conditionally in-
dependent, we derive the synchronous update rule from
Eqn. (12) as:
(cid:16)

(cid:17)

(cid:16)

(cid:17)

l

s(t+1)
m

= l

s(t)
m

+ Σ(t)

m · Λ,

(13)

8

Yao Qin* et al.

Fig. 5 Visual comparison of saliency maps generated by SCA
at diﬀerent scales (n1 = 120, n2 = 160 and n3 = 200) and
HCA.

m ∈ RH is the m-th saliency map at time t and
m ∈ RH can

where s(t)
H is the number of pixels in the image. Σ(t)
be computed by:
5
(cid:88)

M
(cid:88)

(cid:17)

(cid:16)

δ(k = m, j > 1) · sign

s(t)
j,k − γk · 1

,

Σ(t)

m =

j=1

k=1

(14)

(15)

where M is the number of diﬀerent saliency maps, s(t)
j,k ∈
RH is a vector containing the saliency values of the j-th
neighbor for all the pixels in the m-th saliency map at
time t and 1 = [1, 1, · · · , 1](cid:62) ∈ RH . We use δ(k =
m, j > 1) to represent the occasion that the cell only
has 4 neighbors instead of 5 in the m-th saliency map
when it is in the m-th saliency map. After TC iterations,
the ﬁnal integrated saliency map s(TC ) is calculated by

s(TC ) =

1
M

M
(cid:88)

m=1

s(TC )
m .

In this paper, we use CCA to integrate saliency
maps generated by SCA at M = 3 scales. This com-
bination is denoted as HCA, and the visual saliency
maps generated by HCA can be seen in Figure. 5. Here
we use the notation SCAn to denote SCA applied with
n superpixels. We can see that the detected objects in
the integrated saliency maps are uniformly highlighted
and much closer to the ground truth.

3.4 Consistent Optimization

3.4.1 Single-layer Propagation

Due to the connectivity and compactness of the ob-
ject, the salient part of an image will naturally emerge
with the Single-layer Cellular Automaton, which serves
as a propagation mechanism. Therefore, we use the
saliency maps generated by several well-known meth-
ods as the prior maps and refresh them according to the
synchronous update rule. The saliency maps achieved
by CAS (Goferman et al, 2010), LR (Shen and Wu,
2012) and RC (Cheng et al, 2015) are taken as s(0)

Fig. 6 Comparison of saliency maps generated by diﬀerent
methods and their optimized results via Single-layer Cellular
Automata. The ﬁrst row is respectively input images, ground
truth and saliency maps generated by our proposed SCA with
200 superpixels. The second row displays original saliency
maps generated by three traditional methods (from left to
right: CAS (Goferman et al, 2010), LR (Shen and Wu, 2012),
RC (Cheng et al, 2015)). The third row is their corresponding
optimized results by SCA with 200 superpixels.

in Eqn. (5). The optimized results via SCA are shown
in Figure. 6. We can see that the foreground is uni-
formly highlighted and a clear object contour naturally
emerges with the automatic single-layer propagation
mechanism. Even though the original saliency maps are
not particularly good, all of them are signiﬁcantly im-
proved to a similar accuracy level after evolution. That
means our method is independent of prior maps and can
make a consistent and eﬃcient optimization towards
state-of-the-art methods.

3.4.2 Pixel-wise Integration

A variety of methods have been developed for visual
saliency detection, and each of them has its advantages
and limitations. As shown in Figure. 7, the performance
of a saliency detection method varies with individual
images. Each method can work well for some images or
some parts of the images but none of them can perfectly
handle all the images. Furthermore, diﬀerent methods
may complement each other. To take advantage of the
superiority of each saliency map, we use Cuboid Cel-
lular Automata to aggregate two groups of saliency
maps, which are generated by three conventional algo-
rithms: BL (Tong et al, 2015a), HS (Yan et al, 2013) and
MR (Yang et al, 2013) and three deep learning meth-
ods: MDF (Li and Yu, 2015) and DS (Li et al, 2016)
and MCDL (Zhao et al, 2015). Each of them serves
as a layer of Cellular Automata s(0)
m in Eqn. (13). Fig-
ure. 7 shows that our proposed pixel-wise aggregation
method, Cuboid Cellular Automata, can appropriately
integrate multiple saliency maps and outperforms each
one. The saliency objects on the aggregated saliency
map are consistently highlighted and much closer to
the ground truth.

Hierarchical Cellular Automata for Visual Saliency

9

(a) Saliency aggregation of three conventional methods

(b) Saliency aggregation of three deep learning methods

Fig. 7 Eﬀects of pixel-wise saliency aggregation with Cuboid
Cellular Automata. We integrate saliency maps generated
by three conventional algorithms: BL (Tong et al, 2015a),
HS (Yan et al, 2013) and MR (Yang et al, 2013) in (a) and
incorporate saliency maps generated by three deep learning
methods: MDF (Li and Yu, 2015), DS (Li et al, 2016), and
MCDL (Zhao et al, 2015) in (b). The integrated result is de-
noted as CCA.

3.4.3 SCA + CCA = HCA

Here we show that when CCA is applied to some (poor)
prior maps, it does not perform as well as when the
prior map is post-processed by SCA. This motivates
their combination into HCA. As is shown in Figure. 8,
when the candidate saliency maps are not well con-
structed, both CCA and MCA (Qin et al, 2015) fail to
detect the salient object. Unlike CCA and MCA, HCA
overcomes this limitation through incorporating single-
layer propagation (SCA) together with pixel-wise in-
tegration (CCA) into a uniﬁed framework. The salient
objects can be intelligently detected by HCA regardless
of the original performance of the candidate methods.
When we use HCA to integrate existing methods, the
optimized results will be denoted as HCA*.

4 Experiments

In order to demonstrate the eﬀectiveness of our pro-
posed algorithms, we compare the results on four chal-
lenging datasets: ECSSD (Yan et al, 2013), MSRA5000
(Liu et al, 2011), PASCAL-S (Li et al, 2014b) and
HKU-IS (Li and Yu, 2015). The Extended Complex
Scene Saliency Dataset (ECSSD) contains 1000 images
with multiple objects of diﬀerent sizes. Some of the im-
ages come from the challenging Berkeley-300 dataset.
MSRA- 5000 contains more comprehensive images with
complex background. The PASCAL-S dataset derives
from the validation set of PASCAL VOC2010 (Ever-
ingham et al, 2010) segmentation challenge and con-
tains 850 natural images. The last dataset, HKU-IS,
contains 4447 challenging images and their pixel-wise
saliency annotation. In this paper, we use ECSSD as

Fig. 8 Eﬀects of holistic optimization by Hierarchical Cel-
lular Automata. We use MCA (Qin et al, 2015), CCA and
HCA to integrate saliency maps generated by three classic
methods: FT (Achanta et al, 2009), ITTI (Itti et al, 1998)
and CAS (Goferman et al, 2010). Their respective saliency
maps optimized by SCA with 200 superpixels are shown in
the second row. Note that HCA* uses as input the saliency
maps processed by SCA (the second row) and applies CCA to
them, while the MCA and CCA models are applied directly
to the ﬁrst row.

the validation dataset to help choose the feature maps
in FCN (Long et al, 2015).

We compare our algorithm with 20 classic or state-
of-the-art methods including ITTI (Itti et al, 1998),
FT (Achanta et al, 2009), CAS (Goferman et al, 2010),
LR (Shen and Wu, 2012), XL13 (Xie et al, 2013), DSR
(Li et al, 2013), HS (Yan et al, 2013), UFO (Jiang
et al, 2013c), MR (Yang et al, 2013), DRFI (Jiang
et al, 2013b), wCO (Zhu et al, 2014), RC (Cheng et al,
2015), HDCT (Kim et al, 2014), BL (Tong et al, 2015a),
BSCA (Qin et al, 2015), LEGS (Wang et al, 2015),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015),
DS (Li et al, 2016), and SSD-HS (Kim and Pavlovic,
2016), where the last 5 methods are deep learning-based
methods. The results of diﬀerent methods are either
provided by authors or achieved by running available
code or binaries. The code and results of HCA will be
publicly available at our project site 1.
4.1 Parameter Setup

For the Single-layer Cellular Automaton, we set the
number of iterations TS = 20. σ2
f in Eq. (3) is set to
0.1 as in (Yang et al, 2013). For the Cuboid Cellular
Automata, we set the number of iterations TC = 3. We
determined empirically that SCA and CCA converge by
20 and 3 iterations, respectively. We choose M = 3 and
run SCA with n1 = 120, n2 = 160, n3 = 200 superpixels
to generate multi-scale saliency maps for CCA.
4.2 Evaluation Metrics

We evaluate all methods by standard Precision-Recall
(PR) curves via binarizing the saliency map with a

1 https://github.com/ArcherFMY/HCA_saliency_codes

10

Yao Qin* et al.

Fig. 9 Visual comparison of saliency maps with diﬀerent layers of deep features. The left two columns are the input images
and their ground truth. Other columns present the saliency maps with diﬀerent layers of deep features. The color bars on the
top stand for diﬀerent convolutional layers (see Figure. 10(a) and (b)).

(a) F-measure bars

(b) MAE bars

4.3 Validation of the Proposed Algorithm

MAE =

|si − gi|.

1
H

H
(cid:88)

i=1

(18)

MAE indicates how similar a saliency map is compared
to the ground truth, and is of great importance for
diﬀerent applications, such as image segmentation and
cropping (Perazzi et al, 2012).

4.3.1 Feature Analysis

In order to construct the Impact Factor matrix, we need
to choose the features that will enter into Eqn.( 2). Here
we analyze the eﬃcacy of the features in diﬀerent layers
of a deep network in order to choose these feature lay-
ers. In deep neural networks, earlier convolutional layers
capture ﬁne-grained low-level information, e.g., colors,
edges and texture, while later layers capture high-level
semantic features. In order to select the best feature
layers in the FCN (Long et al, 2015), we use ECSSD
as a validation dataset to measure the performance of
deep features extracted from diﬀerent layers. The func-
tion g(ri, rj) in Eqn. (3) can be computed as
(cid:13)
g(ri, rj) = (cid:13)
(cid:13)2

i − df l
j

(cid:13)df l

(19)

,

where df l
i denotes the deep features of superpixel i on
the l-th layer. The outputs of convolutional layers, relu
layers and pooling layers are all regarded as a feature
map. Therefore, we consider in total 31 layers of fully
convolutional networks. We do not take the last two
convolutional layers into consideration as their spatial
resolutions are too low.

We use the F-measure (the higher, the better) and
mean absolute error (MAE) (the lower, the better) to
evaluate the performance of diﬀerent layers on the EC-
SSD dataset. The results are shown in Figure. 10 (a)
and (b). The F-measure score is obtained by thresh-
olding the saliency maps at twice the mean saliency
value. We use this convention for all of the subsequent
F-measure results. The x-index in Figure. 10 (a) and (b)
refers to convolutional, ReLu, and pooling layers as im-
plemented in the FCN. We can see that deep features
extracted from the pooling layer in Conv1 and Conv5
can achieve the best two F-measure scores, and also
perform well on MAE. The saliency maps in Figure. 9
correspond to the bars in Figure 10. Here it is visually

(c) Precision-Recall curves comparison

Fig. 10 (a) The F-measure score for each layer in FCN-32s
on ECSSD; (b) The MAE score for each layer in FCN-32s
on ECSSD; (c) Precision-Recall curves of SCA using deep
features extracted from pool1 and pool5 as well as a weighted
summation of these two layers of deep features.

threshold sliding from 0 to 255 and then comparing
the binary maps with the ground truth. Speciﬁcally,

precision =

, recall =

|SF ∩ GF |
|SF |

|SF ∩ GF |
|GF |

,

(16)

where SF is the set of the pixels segmented as the fore-
ground, GF denotes the set of the pixels belonging to
the foreground in the ground truth, and |·| refers to the
number of elements in a set. In many cases, high preci-
sion and recall are both required. These are combined
in the F-measure to obtain a single ﬁgure of merit, pa-
rameterized by β:

Fβ =

(cid:0)1 + β2(cid:1) · precision · recall
β2 · precision + recall

(17)

where β2 is set to 0.3 as suggested in (Achanta et al,
2009) to emphasize the precision. To complement these
two measures, we also use mean absolute error (MAE)
to quantitatively measure the average diﬀerence be-
tween the saliency map s ∈ RH and the ground truth
g ∈ RH in pixel level:

Hierarchical Cellular Automata for Visual Saliency

11

apparent that salient objects are better detected with
the ﬁnal pooling layers of Conv1 and Conv5 . Therefore,
in this paper, we combine the feature maps from pool1
and pool5 with a simple linear combination. Eqn. (2)
then turns into:
g(ri, rj) = ρ1 · (cid:13)

+ ρ2 · (cid:13)

i − df 31
j

i − df 5
j

(cid:13)df 31

, (20)

(cid:13)df 5

(cid:13)
(cid:13)2

(cid:13)
(cid:13)2

where ρ1 and ρ2 balance the weight of pool1 and pool5.
In this paper, we empirically set ρ1 = 0.375 and ρ2 =
0.625 and apply them to all other datasets.

To test the eﬀectiveness of the integrated deep fea-
tures, we show the Precision-Recall curves of Single-
layer Cellular Automata with each layer of deep fea-
tures as well as the integrated deep features on two
datasets. The Precision-Recall curves in Figure. 10 (c)
demonstrate that hierarchical deep features outperform
single-layer features, as they contain both category-
level semantics and ﬁne-grained details.

4.3.2 Component Eﬀectiveness

To demonstrate the eﬀectiveness of our proposed al-
gorithm, we test the results on the standard ECSSD
and PASCAL-S datasets. We generate saliency maps
at three scales: n1 = 120, n2 = 160, n3 = 200 and use
CCA to integrate them. FT curves in Figure. 11 indi-
cate that the results of the Single-layer Automata are
already quite satisfying. In addition, CCA can improve
the overall performance of SCA with a wider range of
high F-measure scores than SCA alone. Similar results
are also achieved on other datasets but are not pre-
sented here to be succinct.

4.3.3 Performance Comparison

As is shown in Figure 12, our proposed Hierarchical Cel-
lular Automata performs favorably against state-of-the-
art conventional algorithms with higher precision and
recall values on four challenging datasets. HCA is com-
petitive with deep learning based approaches and has
higher precision at low levels of recall. Furthermore, the
fairly low MAE scores, displayed in Figure. 12(c), indi-
cate that our saliency maps are very close to the ground
truth. As MCDL (Zhao et al, 2015) trained the network
on the MSRA dataset, we do not report its result on
this dataset in Figure. 12. In addition, LEGS (Wang
et al, 2015) used part of the images in the MSRA and
PASCAL-S datasets as the training set. As a result,
we only test LEGS with the test images on these two
datasets. Saliency maps are shown in Figure. 16 for vi-
sual comparison of our method with other models.

4.4 Optimization of state-of-the-art methods

In the previous sections, we showed qualitatively that
our model creates better saliency maps by improving

Fig. 11 F-measure - Threshold curves of saliency maps gen-
erated by SCA at diﬀerent scales (n1 = 120, n2 = 160, n3 =
200 respectively), and the integrated results by HCA on EC-
SSD and PASCAL-S.
Table 1 Run Time of Each Component of HCA

Method
w/ SLIC(s)
wo/ SLIC(s)

SCA120
.2889
.0704

SCA160
.3134
.0525

SCA200 CCA HCA
1.0240
.2421

.3380
.0355

-
.0837

initial saliency maps with SCA, or by combining the re-
sults of multiple algorithms with CCA, or by applying
SCA and CCA. Here we compare our methods to other
methods quantitatively. When the initial maps are im-
perfect, we apply SCA to improve them and then apply
CCA. When the initial maps are already very good, we
show that we can combine state-of-the-art methods to
perform even better by simply using CCA.
4.4.1 Consistent Improvement

In Section 3.4.1, we concluded that results generated
by diﬀerent methods can be eﬀectively optimized via
Single-layer Cellular Automata. Figure 13 shows the
precision-recall curves and mean absolute error bars of
various saliency methods and their optimized results on
two datasets. These results demonstrate that SCA can
greatly improve existing results to a similar precision
level. Even though the original saliency maps are not
well constructed, the optimized results are comparable
to the state-of-the-art methods. It should be noted that
SCA can even optimize deep learning-based methods to
a better precision level, e.g., MCDL (Zhao et al, 2015),
MDF (Li and Yu, 2015), LEGS (Wang et al, 2015), and
SSD-HS (Kim and Pavlovic, 2016). In addition, for one
existing method, we can use SCA to optimize it at dif-
ferent scales and then use CCA to integrate the multi-
scale saliency maps. The ultimate optimized result is
denoted as HCA*. The lowest MAEs of saliency maps
optimized by HCA in Figure 13 (c) show that HCA’s
use of CCA improves performance over SCA alone.

4.4.2 Eﬀective Integration

In Section. 3.4.2, we used Cuboid Cellular Automata as
a pixel-wise aggregation method to integrate two groups
of state-of-the-art methods. One group includes three
of the latest conventional methods while the other con-
tains three deep learning-based methods. We test the

12

Yao Qin* et al.

(a) PR curves

(b) FT curves

(c) MAE bars

Fig. 12 PR curves, FT curves and MAE scores of diﬀerent methods compared with our algorithm (HCA). From top to
bottom: ECSSD, MSRA5000, PASCAL-S and HKU-IS are tested.

Hierarchical Cellular Automata for Visual Saliency

13

(a) PR curves

(b) FT curves

(c) MAE scores

Fig. 13 Consistent improvement on ECSSD and PASCALS datasets. (a) and (b): PR curves of diﬀerent methods (dashed
line) and their optimized version via SCA200 (solid line). The right column shows that SCA200 ((cid:52)), improves the MAEs of
the original methods (×) and that HCA* ((cid:13)), here applied to SCA120, SCA160, and SCA200, further improves the results.

(a) PR curves

(b) FT curves

(c) Score bars

Fig. 14 Eﬀects of pixel-wise aggregation via Cuboid Cellular Automata on ECSSD dataset. The ﬁrst row compares three
conventional methods BL (Tong et al, 2015a), HS (Yan et al, 2013), MR (Yang et al, 2013) and their integrated results via
Cuboid Cellular Automata, denoted as CCA. The second row compares three deep learning models, e.g. DS (Li et al, 2016),
MCDL (Zhao et al, 2015), MDF (Li and Yu, 2015) and their integrated results. The precision, recall and F-measure scores in
the right column are obtained by thresholding the saliency maps at twice the mean saliency value.

14

Yao Qin* et al.

(a) PR curves

(b) FT curves
Fig. 15 Comparison between three diﬀerent integration methods MCA (Qin et al, 2015), CCA and HCA when integrating
FT (Achanta et al, 2009), ITTI (Itti et al, 1998) and CAS (Goferman et al, 2010) on ECSSD and MSRA datasets.

(c) MAE scores

Table 2 Comparison of Run Time

Code
Matlab
Python

Model Year
HCA
MCDL
LEGS
MDF
BL

2015
2015 Matlab + C
2015
2015

Matlab
Matlab

Time(s) Model Year Code Time(s) Model Year
2013
2013
2012
2011
2010 Matlab + C

HDCT 2014 Matlab
2014 Matlab
wCO
2013 Matlab
DRFI
2013 Matlab
DSR
2013
HS

1.4917
2.2521
1.9050
25.7328
21.5161

Code
Matlab
Matlab
Matlab
C

5.1248
0.1484
8.0104
3.4796
0.3821

MR
XL13
LR
RC
CAS

EXE

Time(s)
0.4542
65.5491
10.0259
0.1360
44.3270

various methods on the ECSSD dataset, and the in-
tegrated result is denoted as CCA. PR curves in Fig-
ure. 14(a) demonstrate the eﬀectiveness of CCA over
all the individual methods. FT curves of CCA in Fig-
ure. 14(b) are ﬁxed at high values that are insensitive
to the thresholds. In addition, we binarize the saliency
map with two times mean saliency value. From Fig-
ure. 14(c) we can see that the integrated result has
higher precision, recall and F-measure scores compared
to each method that is integrated. Also, the mean ab-
solute errors of CCA are always the lowest. The fairly
low mean absolute errors indicate that the integrated
results are quite similar to the ground truth.

Although Cuboid Cellular Automata have exhibited
great strength in integrating multiple saliency maps,
they have a major drawback in that the integrated re-
sult highly relies on the precision of the saliency detec-
tion methods used as input. If saliency maps fed into
Cuboid Cellular Automata are not well constructed, it
cannot naturally detect the salient objects via inter-
actions between these candidate saliency maps. HCA,
however, can easily address this problem by incorporat-

ing single-layer propagation and multi-layer integration
into a uniﬁed framework. Unlike MCA (Qin et al, 2015)
and CCA, HCA can achieve better integrated saliency
map regardless of their original detection performance
through the application of SCA to clean up the ini-
tial maps. PR curves, FT curves and MAE scores in
Figure. 15 show that 1) CCA has a better performance
than MCA, as it considers the inﬂuence of adjacent cells
on diﬀerent layers. 2) HCA can greatly improve the ag-
gregation results compared to MCA and CCA because
it is independent of the initial saliency maps.

4.5 Run Time

The run time to process one image in the MSRA5000
dataset via Matlab R2014b-64bit with a PC equipped
with an i7-4790k 3.60 GHz CPU and 32GB RAM is
shown in Table 1. The Table displays the average run
time of each component in our algorithm, not including
the time for extracting deep features. We can see that
the Single-layer Cellular Automata and Cuboid Cellular
Automata are very fast at processing one image, on av-
erage 0.06s. Their combination HCA takes only 0.2421s

Hierarchical Cellular Automata for Visual Saliency

15

Fig. 16 Visual comparison of saliency maps of diﬀerent methods. GT: Ground Truth, Ours: Saliency maps generated by
Hierarchical Cellular Automata (HCA).

to process one image without superpixel segmentation
and 1.0240s with SLIC.

We also compare the run time of our method with
other state-of-the-art methods in Table 2. Here we com-
pute the run time including superpixel segmentation
and feature extraction for all models. Our algorithm
has the least run time compared to other deep learning
based methods and is the ﬁfth fastest overall.

5 Conclusion

In this paper, we propose an unsupervised Hierarchi-
cal Cellular Automata, a temporally evolving system
for saliency detection. It incorporates two components,
Single-layer Cellular Automata (SCA), which can clean
up noisy saliency maps, and Cuboid Cellular Automata
(CCA), that can integrate multiple saliency maps. SCA
is designed to exploit the intrinsic connectivity of saliency

objects through interactions with neighbors. Low-level
image features and high-level semantic information are
both extracted from deep neural networks and incor-
porated into SCA to measure the similarity between
neighbors. With superpixels on the image boundary
chosen as the background seeds, SCA iteratively up-
dates the saliency maps according to well-deﬁned up-
date rules, and salient objects naturally emerge un-
der the inﬂuence of their neighbors. This context-based
propagation mechanism can improve the saliency maps
generated by existing methods to a high performance
level. We used this in two ways: First, given a single
saliency map, SCA can be applied to superpixels gen-
erated from the saliency map at multiple scales, and
CCA can then integrate these into an improved saliency
map. Second, we can take saliency maps generated by

16

Yao Qin* et al.

multiple methods, apply SCA (if necessary) to improve
them, and then apply CCA to integrate them into bet-
ter saliency maps. Our experimental results demon-
strate the superior performance of our algorithms com-
pared to existing methods.

References

Achanta R, Hemami S, Estrada F, Susstrunk S (2009)
Frequency-tuned salient region detection. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 1597–1604

Achanta R, Shaji A, Smith K, Lucchi A, Fua P,

S¨usstrunk S (2010) Slic superpixels. Tech. rep.

Alexe B, Deselaers T, Ferrari V (2010) What is an ob-
ject? In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 73–80
de Almeida CM, Batty M, Monteiro AMV, Cˆamara
G, Soares-Filho BS, Cerqueira GC, Pennachin CL
(2003) Stochastic cellular automata modeling of ur-
ban land use dynamics: empirical development and
estimation. Computers, Environment and Urban Sys-
tems 27(5):481–509

Batty M (2007) Cities and complexity: understanding
cities with cellular automata, agent-based models,
and fractals. The MIT press

Borji A, Cheng MM, Jiang H, Li J (2015) Salient ob-
ject detection: A benchmark. IEEE Transactions on
Image Processing 24(12):5706–5722

Bruce N, Tsotsos J (2005) Saliency based on informa-
tion maximization. In: Advances in neural informa-
tion processing systems, pp 155–162

Cheng M, Mitra NJ, Huang X, Torr PH, Hu S (2015)
Global contrast based salient region detection. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence 37(3):569–582

Cheng MM, Warrell J, Lin WY, Zheng S, Vineet V,
Crook N (2013) Eﬃcient salient region detection with
soft image abstraction. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
1529–1536

Chopard B, Droz M (2005) Cellular automata model-
ing of physical systems, vol 6. Cambridge University
Press

Cowburn R, Welland M (2000) Room tempera-
ture magnetic quantum cellular automata. Science
287(5457):1466

Ding Y, Xiao J, Yu J (2011) Importance ﬁltering for
image retargeting. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 89–96

Donahue J, Jia Y, Vinyals O, Hoﬀman J, Zhang N,
Tzeng E, Darrell T (2014) Decaf: A deep convolu-

tional activation feature for generic visual recogni-
tion. In: Proceedings of International Conference on
Machine Learning, pp 647–655

Everingham M, Van Gool L, Williams CK, Winn J,
Zisserman A (2010) The pascal visual object classes
(voc) challenge. International journal of computer vi-
sion 88(2):303–338

Farabet C, Couprie C, Najman L, LeCun Y (2013)
Learning hierarchical
features for scene labeling.
IEEE transactions on pattern analysis and machine
intelligence 35(8):1915–1929

Girshick R, Donahue J, Darrell T, Malik J (2014) Rich
feature hierarchies for accurate object detection and
semantic segmentation. In: Proceedings of the IEEE
conference on computer vision and pattern recogni-
tion, pp 580–587

Goferman S, Zelnik-manor L, Tal A (2010) Context-
aware saliency detection. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Gong C, Tao D, Liu W, Maybank SJ, Fang M, Fu
K, Yang J (2015) Saliency propagation from simple
to diﬃcult. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 2531–
2539

Hariharan B, Arbel´aez P, Girshick R, Malik J (2014)
Simultaneous detection and segmentation. In: Pro-
ceedings of European Conference on Computer Vi-
sion, Springer, pp 297–312

Hariharan B, Arbel´aez P, Girshick R, Malik J (2015)
Hypercolumns for object segmentation and ﬁne-
grained localization. In: Proceedings of the IEEE
Conference on Computer Vision and Pattern Recog-
nition, pp 447–456

Hou X, Zhang L (2007) Saliency detection: A spectral
residual approach. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pp 1–8

Itti L, Koch C (2001) Computational modelling of vi-
sual attention. Nature reviews neuroscience 2(3):194–
203

Itti L, Koch C, Niebur E (1998) A model of saliency-
based visual attention for rapid scene analysis. IEEE
Transactions on Pattern Analysis and Machine Intel-
ligence (11):1254–1259

Jiang B, Zhang L, Lu H, Yang C, Yang MH (2013a)
Saliency detection via absorbing markov chain. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 1665–1672

Jiang H, Wang J, Yuan Z, Liu T, Zheng N, Li S (2011)
Automatic salient object segmentation based on con-
text and shape prior. In: Proceedings of British Ma-
chine Vision Conference, vol 6, p 9

Hierarchical Cellular Automata for Visual Saliency

17

Jiang H, Wang J, Yuan Z, Wu Y, Zheng N, Li S
(2013b) Salient object detection: A discriminative re-
gional feature integration approach. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 2083–2090

Jiang P, Ling H, Yu J, Peng J (2013c) Salient region de-
tection by ufo: Uniqueness, focusness and objectness.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 1976–1983

Jiang Z, Davis L (2013) Submodular salient region de-
tection. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2043–2050
Kanan C, Cottrell GW (2010) Robust classiﬁcation of
objects, faces, and ﬂowers using natural image statis-
tics. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 2472–2479
Kim J, Pavlovic V (2016) A shape-based approach for
salient object detection using deep learning. In: Pro-
ceedings of European Conference on Computer Vi-
sion, pp 455–470

Kim J, Han D, Tai YW, Kim J (2014) Salient region
detection via high-dimensional color transform. In:
Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition, pp 883–890

Klein DA, Frintrop S (2011) Center-surround diver-
gence of feature statistics for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 2214–2219

Krizhevsky A, Sutskever I, Hinton GE (2012) Ima-
genet classiﬁcation with deep convolutional neural
networks. In: Advances in neural information pro-
cessing systems, pp 1097–1105

Li G, Yu Y (2015) Visual saliency based on multiscale
deep features. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 5455–
5463

Li N, Ye J, Ji Y, Ling H, Yu J (2014a) Saliency detec-
tion on light ﬁeld. In: Proceedings of IEEE Confer-
ence on Computer Vision and Pattern Recognition
Li X, Lu H, Zhang L, Ruan X, Yang MH (2013) Saliency
detection via dense and sparse reconstruction. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 2976–2983

Li X, Zhao L, Wei L, Yang MH, Wu F, Zhuang Y, Ling
H, Wang J (2016) Deepsaliency: Multi-task deep neu-
ral network model for salient object detection. IEEE
Transactions on Image Processing 25(8):3919–3930
Li Y, Hou X, Koch C, Rehg J, Yuille A (2014b) The se-
crets of salient object segmentation. In: Proceedings
of IEEE Conference on Computer Vision and Pattern
Recognition, pp 280–287

Liu T, Yuan Z, Sun J, Wang J, Zheng N, Tang X, Shum
HY (2011) Learning to detect a salient object. IEEE

Transactions on Pattern Analysis and Machine Intel-
ligence 33(2):353–367

Long J, Shelhamer E, Darrell T (2015) Fully convolu-
tional networks for semantic segmentation. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 3431–3440

Ma C, Huang JB, Yang X, Yang MH (2015) Hierar-
chical convolutional features for visual tracking. In:
Proceedings of the IEEE International Conference on
Computer Vision, pp 3074–3082

Mahadevan V, Vasconcelos N (2009) Saliency-based
discriminant tracking. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recogni-
tion, pp 1007–1013

Marchesotti L, Cifarelli C, Csurka G (2009) A frame-
work for visual saliency detection with applications
to image thumbnailing. In: Proceedings of the IEEE
International Conference on Computer Vision, pp
2232–2239

Martins AC (2008) Continuous opinions and discrete
actions in opinion dynamics problems. International
Journal of Modern Physics C 19(04):617–624

Ng AY, Jordan MI, Weiss Y, et al (2002) On spectral
clustering: Analysis and an algorithm. Advances in
neural information processing systems 2:849–856
Otsu N (1975) A threshold selection method from gray-
level histograms. Automatica 11(285-296):23–27
Pan Q, Qin Y, Xu Y, Tong M, He M (2016) Opinion
evolution in open community. International Journal
of Modern Physics C p 1750003

Perazzi F, Kr¨ahenb¨uhl P, Pritch Y, Hornung A (2012)
Saliency ﬁlters: Contrast based ﬁltering for salient
region detection. In: Proceedings of IEEE Conference
on Computer Vision and Pattern Recognition, IEEE,
pp 733–740

Pinheiro PH, Collobert R (2014) Recurrent convolu-
tional neural networks for scene labeling. In: Proceed-
ings of International Conference on Machine Learn-
ing, pp 82–90

Qin Y, Lu H, Xu Y, Wang H (2015) Saliency detection
via cellular automata. In: Proceedings of IEEE Con-
ference on Computer Vision and Pattern Recognition
Rahtu E, Kannala J, Salo M, Heikkil¨a J (2010) Seg-
menting salient objects from images and videos. In:
Proceedings of European Conference on Computer
Vision, pp 366–379

Reinagel P, Zador AM (1999) Natural scene statistics at
the centre of gaze. Network: Computation in Neural
Systems 10(4):341–350

Scharfenberger C, Wong A, Fergani K, Zelek JS, Clausi
DA (2013) Statistical textural distinctiveness for
salient region detection in natural images. In: Pro-
ceedings of IEEE Conference on Computer Vision

18

Yao Qin* et al.

Computer Vision and Pattern Recognition, pp 3183–
3192

Wang Q, Zheng W, Piramuthu R (2016) Grab: Visual
saliency via novel graph model and background pri-
ors. In: Proceedings of IEEE Conference on Com-
puter Vision and Pattern Recognition, pp 535–543
Wei Y, Wen F, Zhu W, Sun J (2012) Geodesic saliency
using background priors. In: Proceedings of European
Conference on Computer Vision, pp 29–42

Wolfram S (1983) Statistical mechanics of cellular au-

tomata. Reviews of modern physics 55(3):601

Xie Y, Lu H (2011) Visual saliency detection based
on bayesian model. In: Proceedings of IEEE Interna-
tional Conference on Image Processing, pp 645–648
Xie Y, Lu H, Yang MH (2013) Bayesian saliency via
low and mid level cues. IEEE Transactions on Image
Processing 22(5):1689–1698

Yan Q, Xu L, Shi J, Jia J (2013) Hierarchical saliency
detection. In: Proceedings of IEEE Conference on
Computer Vision and Pattern Recognition, pp 1155–
1162

Yang C, Zhang L, Lu H, Ruan X, Yang MH (2013)
Saliency detection via graph-based manifold ranking.
In: Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 3166–3173

Yang J, Yang MH (2012) Top-down visual saliency via
joint crf and dictionary learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, IEEE, pp 2296–2303

Zhao R, Ouyang W, Li H, Wang X (2015) Saliency de-
tection by multi-context deep learning. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 1265–1274

Zhou F, Bing Kang S, Cohen MF (2014) Time-mapping
using space-time saliency. In: Proceedings of IEEE
Conference on Computer Vision and Pattern Recog-
nition

Zhu W, Liang S, Wei Y, Sun J (2014) Saliency optimiza-
tion from robust background detection. In: Proceed-
ings of IEEE Conference on Computer Vision and
Pattern Recognition, pp 2814–2821

Zou W, Komodakis N (2015) Harf: Hierarchy-
associated rich features for salient object detection.
In: Proceedings of the IEEE International Conference
on Computer Vision, pp 406–414

and Pattern Recognition, pp 979–986

Shen X, Wu Y (2012) A uniﬁed approach to salient
object detection via low rank matrix recovery. In:
Proceedings of IEEE Conference on Computer Vi-
sion and Pattern Recognition, pp 853–860

Shi K, Wang K, Lu J, Lin L (2013) Pisa: Pixelwise im-
age saliency by aggregating complementary appear-
ance contrast measures with spatial priors. In: Pro-
ceedings of IEEE Conference on Computer Vision
and Pattern Recognition, pp 2115–2122

Siagian C, Itti L (2007) Rapid biologically-inspired
scene classiﬁcation using features shared with visual
attention. IEEE Transactions on Pattern Analysis
and Machine Intelligence 29(2):300–312

Smith AR (1972) Real-time language recognition by
one-dimensional cellular automata. Journal of Com-
puter and System Sciences 6(3):233–253

Sun J, Ling H (2011) Scale and object aware image
retargeting for thumbnail browsing. In: Proceedings
of the IEEE International Conference on Computer
Vision, pp 1511–1518

Sun J, Lu H, Li S (2012) Saliency detection based on
integration of boundary and soft-segmentation. In:
Proceedings of IEEE International Conference on Im-
age Processing, pp 1085–1088

Szegedy C, Toshev A, Erhan D (2013) Deep neural net-
works for object detection. In: Advances in Neural
Information Processing Systems, pp 2553–2561

Szegedy C, Liu W, Jia Y, Sermanet P, Reed S, Anguelov
D, Erhan D, Vanhoucke V, Rabinovich A (2015) Go-
ing deeper with convolutions. In: Proceedings of the
IEEE Conference on Computer Vision and Pattern
Recognition, pp 1–9

Tong N, Lu H, Ruan X, Yang MH (2015a) Salient object
detection via bootstrap learning. In: Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, pp 1884–1892

Tong N, Lu H, Zhang Y, Ruan X (2015b) Salient object
detection via global and local cues. Pattern Recogni-
tion 48(10):3258–3267

Von Neumann J (1951) The general and logical the-
ory of automata. Cerebral mechanisms in behavior
1(41):1–2

Von Neumann J, Burks AW, et al (1966) Theory of self-
reproducing automata. IEEE Transactions on Neural
Networks 5(1):3–14

Wang L, Xue J, Zheng N, Hua G (2011) Automatic
salient object extraction with contextual cue. In: Pro-
ceedings of the IEEE International Conference on
Computer Vision, pp 105–112

Wang L, Lu H, Ruan X, Yang MH (2015) Deep net-
works for saliency detection via local estimation and
global search. In: Proceedings of IEEE Conference on

