Let’s Get Dirty: GAN Based Data Augmentation for
Soiling and Adverse Weather Classiﬁcation in Autonomous Driving

Michal Uˇriˇc´aˇr1, Ganesh Sistu1, Hazem Rashed1, Anton´ın Vobeck´y2,1,
Pavel Kˇr´ıˇzek1, Fabian B¨urger1 and Senthil Yogamani1

1Valeo

2CTU, Prague

firstname.lastname@valeo.com

9
1
0
2
 
c
e
D
 
4
 
 
]

V
C
.
s
c
[
 
 
1
v
9
4
2
2
0
.
2
1
9
1
:
v
i
X
r
a

Abstract

Cameras are getting more and more important in au-
tonomous driving. Wide-angle ﬁsheye cameras are rela-
tively cheap sensors and very suitable for automated park-
ing and low-speed navigation tasks. Four of such cameras
form a surround-view system that provides a complete and
detailed view around the vehicle. These cameras are usually
directly exposed to harsh environmental settings and there-
fore can get soiled very easily by mud, dust, water, frost,
etc. The soiling on the camera lens has a direct impact on
the further processing of the images they provide. While ad-
verse weather conditions, such as rain, are getting attention
recently, there is limited work on lens soiling. We believe
that one of the reasons is that it is difﬁcult to build a diverse
dataset for this task, which is moreover expensive to anno-
tate. We propose a novel GAN based algorithm for gen-
erating artiﬁcial soiling data along with the corresponding
annotation masks. The manually annotated soiling dataset
and the generated augmentation dataset will be made pub-
lic. We demonstrate the generalization of our ﬁsheye trained
soiling GAN model on the Cityscapes dataset. Additionally,
we provide an empirical evaluation of the degradation of
the semantic segmentation algorithm with the soiled data.

1. Introduction

Level 5 autonomous driving stands out as a natural goal
of a huge part of the computer vision and machine learn-
ing community. While some people argue that one type
of sensor can handle all challenging situations, others be-
lieve that a combination of multiple sensory types is a must.
One example for all is the ﬁsh-bone parking [12]. Although
this is a quite limited scenario, such situation cannot be re-
solved completely via cheap ultrasonic sensors as they are
misleading for the correct maneuvering. And here camera
can help. Without exaggeration, it can be stated that sur-
round view cameras are becoming de facto standard in au-

Figure 1: The example of a semi-transparent soiling in form
of a water drop on the camera lens. The detection of the bus
behind the water drop works still well, while the road seg-
mentation (green) is highly degraded in the soiled region.

tonomous parking [21].

A huge progress can be noticed in typical image process-
ing tasks, such as semantic segmentation or object detection
[30, 31, 32]. This is mostly attributed to the prevailing suc-
cess of deep learning. However, there are other less “pop-
ular” problems slowly getting into attention which have to
be solved as well for the ultimate goal of the full Level 5
autonomy [14].

One of these problems is the reliability of the sensory
signal, which in case of surround view cameras means, in-
ter alia, the ability to detect soiling on the camera lens or
recognition of severe weather conditions leading to deteri-
oration of the image quality to such a level that any further
image processing is unreliable. Figure 2 shows how the sur-
round view camera can get soiled and the corresponding
image output, as well as an example of images taken dur-
ing a heavy rain. Figure 1 shows an example of the strong
impact of large rain drops on the camera lens for object de-
tection and semantic segmentation tasks.

In this work, we focus on soiling caused by a variety of
unwanted particles reposing on the camera lens. The source
of these particles is mostly mud, dirt, water or foam created

1

Figure 2: Automotive surround view cameras are exposed to harsh environmental setup. Left: camera lens covered by mud.
Middle: image produced by the soiled camera from the left picture. Right: camera lens soiled during heavy rain.

by a detergent. Based on the state of aggregation, such soil-
ing can be either static (e.g. highly viscous mud tends to
dry up very quickly, so it does not change its position on
the output image over time) or dynamic (mostly water, and
foam). Because of that, the acquisition of suitable data for
training machine learning models or simply testing the ef-
fect on existing classiﬁcation models is quite tedious. The
human annotation is also very time demanding and not very
reliable, since the precise labeling of soiling on a single im-
age can be sometimes very challenging. Our contributions
include:

• A proposition of a baseline pipeline for an opaque soil-
ing generation, based on CycleGAN [42] and semantic
segmentation learned from weak labels.

• Novel DirtyGAN network, which is an end-to-end

generalization of the baseline pipeline.

• Public release of an artiﬁcial soiling dataset as
a companion to the recently published WoodScape
Dataset [40], coined DirtyWoodScape Dataset, to en-
courage further research in this area.

• An empirical evaluation of degradation of several clas-

siﬁcation algorithms on soiled images.

The paper is organized as follows. Section 2 covers the
related work. In Section 3, we give a detailed description
of the proposed algorithms. Section 4 describes the empir-
ical evaluation of the classiﬁcation algorithms’ degradation
in presence of soiling and also provides the evaluation of
the quality of the generated images. Finally, Section 5 con-
cludes the paper.

2. Related Work

In recent years, the task of artiﬁcial image generation
was mostly overtaken by Generative Adversarial Networks
(GANs) [9]. GANs show great ability in synthesizing
realistic-looking images as shown in [24].

Despite this great success, we can observe that GANs
have much more difﬁculty in synthesizing certain image
classes in contrast to others when trained on multi-class

datasets such as ImageNet [28]. To tackle this problem, the
authors of [41] introduce a self-attention mechanism into
convolutional GANs. The proposed mechanism helps to
model long-range dependencies across image regions and
thus improves the overall quality of the generated samples.
Another well-studied area of the computer vision is the
semantic segmentation aiming at assigning a label to each
image pixel. This task requires a large number of pixel-level
annotations that are very difﬁcult to obtain. This problem is
addressed in [33] by a design of a semi-supervised frame-
work based on GANs. It consists of a generator network
that provides additional training samples to a multi-class
classiﬁer, acting as discriminator in the GAN framework.
More recently, Deeplabv3 [3] proposed to use dilated con-
volutions to account for larger receptive ﬁelds without the
need to downscale the image.

The task of soiling detection on camera lenses in au-
tonomous driving is shortly described in [34], where the au-
thors present a sort of a proof of concept idea how GANs
could be applied for dealing with the insufﬁcient data prob-
lem in terms of an advanced data augmentation. In the same
paper the authors also outline other potential usage of GANs
in the autonomous driving area. A more formal introduc-
tion to the soling detection and categorization is provided
in [35], where the problem is formalized as a multilabel
classiﬁcation task.

2.1. Image-to-Image Translation

Image-to-Image translation is a part of graphics and
computer vision that aims to learn a mapping between
a source domain X and a target domain Y with the use of
In [15], the authors present a method using
paired data.
GANs to tackle the problem of image-to-image translation
using paired data. However, obtaining such paired data can
be difﬁcult and sometimes even impossible. Therefore, an
unsupervised version, without use of any examples of cor-
responding pairs, is even more important and challenging.

This problem is tackled by CycleGAN [42] with the use

of two mappings G : X → Y and F : Y → X. Since these
mappings are highly under-constrained, they propose to use
a cycle consistency loss to enforce F (G (X)) ≈ X. Even
though it is not emphasized that much in the CycleGAN
paper, the authors in their implementation use also identity
losses, G(Y ) ≈ Y and F (X) ≈ X, which improved the
results signiﬁcantly.

In [20], the authors assume that a pair of correspond-
ing images in different domains can be mapped to the same
latent representation in a shared-latent space. With this
assumption in hand, they propose an unsupervised image-
to-image translation framework based on Coupled GANs.
This work is extended to a multimodal use in MUNIT [13],
which assumes that the image representation can be de-
composed into a content code that is domain-invariant, and
a style code that captures domain-speciﬁc properties. The
authors combine its content code with a random style code
to transfer a source image to a different domain.

In the unsupervised case of the image-to-image transla-
tion, the network needs to learn which parts of the scene
should be preserved and which should be changed. To
tackle this, works such as [22, 17] propose the use of an
attention mechanism. In [11], they manipulate only certain
attributes of a face image while preserving other details.
This is achieved by decoding the latent representation of
the given face conditioned on the desired attributes and ap-
plying an attribute classiﬁcation constraint to the generated
image to enforce the correct change of the desired attributes.
StarGAN [5] is a model that takes in training data of mul-
tiple domains, and learns the mappings between all avail-
able domains using only a single generator that takes as
inputs both image and domain information, and learns to
ﬂexibly translate the image into the corresponding domain.
However, this approach can only generate a discrete number
of expressions, determined by the content of the dataset. To
address this limitation, the authors of [26] introduce a con-
ditioning scheme based on Action Units annotations, which
describes in a continuous manifold the anatomical facial
movements deﬁning a human expression.

When an image has multiple target instances, and a trans-
lation task involves signiﬁcant changes in shape, the stan-
dard methods often fail. To tackle this issue, InstaGAN [23]
incorporates the instance information such as segmenta-
tion masks and translates both image and corresponding in-
stance attributes.

2.2. Water Soiling & Deraining

Soiling on the camera lens has a direct impact on further
processing of the images, such as semantic segmentation or
object detection. One of the ways to deal with this situation
is to run an image restoration algorithm that improves the
quality of the image. Most of the attention is currently paid
to rain removal (deraining) and water soiling. The work of

[19] provides a comprehensive analysis of this topic.

The authors of [39] address the problem of rain removal
from videos by a two-stage recurrent network. The rain-free
image is estimated from the single rain frame at the ﬁrst
stage. This initial estimate serves as guidance along with
previously recovered clean frames to help to obtain a more
accurate clean frame at the second stage.

In [27] the authors propose a progressive recurrent de-
raining network by repeatedly unfolding a shallow ResNet
with a recurrent layer.

In [38] a dataset of ≈ 29.5k rain/rain-free image pairs are
constructed and a SPatial Attentive Network (SPANet) is
proposed to remove rain streaks in a local-to-global manner.
Authors of [25] presented a method that improves the
segmentation tasks on images affected by rain. They also
introduced a dataset of clear-soiled image pairs which is
used to train a denoising generator that removes the effect
of real water drops.

2.3. Other Types of Soiling/Adversarial Weather

Another type of the image quality degradation is caused
by the presence of aerosols (e.g, mist, fog, fumes, dust, . . . )
in the environment surrounding the car. Due to the light
scattering caused by these aerosol particles, the resulting
image tends to have faint colors and looks hazy, which can
inherently also impact the further image processing.

Fattal presents in [8] a method for single image dehaz-
ing, based on a reﬁned image synthesis model and a depth
estimation. Berman et al. [2], on the other hand, propose
a solution, which is not based on local priors and builds on
an assumption that a dehazed image can be approximated
by a few hundred distinct colors which form tight clusters
in the RGB color space. Ki et al. [16] propose fully end-to-
end learning based boundary equilibrium GANs to perform
an ultra high resolution single image dehazing. Uricar et al.
[36] provided a desoiling dataset benchmark.

3. Artiﬁcial Soiling Generation

The task of single image soiling annotation on the ﬁsh-
eye cameras is quite tedious. We make use of polygonal
annotation, which is a compromise of annotation speed and
quality. However, even this kind of polygonal annotation
is sometimes very hard to interpret even by human annota-
tors. This is particularly true for the soiling boundary which
is usually very fuzzy.

However, an even bigger problem is how to obtain this
kind of data. In our setup, we apply a random pattern of
soiling on the camera lens using a certain soiling source.
Then drivers ride the car for a while and repeat the pro-
cess several times. This has a lot of limitations: Firstly, it
is very inconvenient to record data for all admissible sce-
narios (e.g. driving through the city, rural area, highway,
etc.). Secondly, it is not possible to measure the real impact

Figure 3: Several examples from the WoodScape Dataset. Top: RGB images from the ﬁsheye camera. Bottom: corresponding
human made annotations. White polygons represent soiling masks, while the background is marked by black color.

Figure 4: A few examples of the segmentation network results. In the left column are original soiled images, in the middle
are the coarse annotations, and on the right column are the masks obtained by the segmentation network. The clean area is
marked in dark gray, the opaque area is white, and the semi-transparent region light gray.

of soiling on the images, because we would need a clean
version of the exact same images for a comparison.

All these limitations motivate the use of synthetic soiling
data. In the following sections the proposed soiling genera-
tion algorithms are described.

3.1. Soiling Generation Baseline Pipeline

The core of our baseline pipeline is formed by a Cycle-
GAN [42] network, which we train to perform the image-
to-image translation from clean images to their soiled coun-
terparts. The main problem of the CycleGAN method is
that it modiﬁes the whole image. For our desired applica-
tion this can lead to undesired artifacts in the generated im-
ages. Besides that, the generated synthetic soiling patterns
are often relatively realistic. Note, that due to GPU memory
requirements and time constraints, the CycleGAN training
uses rescaled images ( 1

4 of both width and height).

Next, we train a soiling semantic segmentation network,

M, using the weak polygonal annotation of soiling (see
Figure 3 for several examples). Even though the annota-
tion is quite coarse, the segmentation network M is able
to ﬁt the soiling patterns more precisely. See Figure 4 for
a few examples of M outputs in comparison to the original
annotations. We use WoodScape Dataset [40] for training
the soiling segmentation network.

Last but not least, we train a super-resolution network U,
which we use to transform the GAN generated image to the
original image resolution (i.e. up-scaling of 4× factor).

The idea of a baseline data generation algorithm is de-
scribed in Figure 5. We take the generator transforming
a clean image to the soiled image (GC2S) and apply it on the
clean image I. This gives us an image with a random soil-
ing pattern Is. Next, we obtain the soiling mask m. This is
achieved by applying the semantic segmentation network on
the generated soiled image followed by a Gaussian smooth-
ing ﬁlter γ: m = γ (M (Is)). The resulting soiling mask

Figure 5: The soiling generation baseline pipeline. From left to right: an image into which we would like to paint a random
soiling pattern; CycleGAN generated “soiled” version; blurred mask of the segmented soiling from the generated image; the
resulting artiﬁcially “soiled” image obtained by convex combination of the original image and the generated soiling via the
segmented mask.

m is an image with values in range [0, 1], where 0 means
background, and 1 means soiling. The intermediate values
can be understood as a semi-transparent soiling. We apply
the Gaussian smoothing ﬁlter because it mimics the physi-
cal nature of the soiling phenomenon where the edges of the
soiling patterns are typically semi-transparent, due to pho-
ton scattering. Finally, the artiﬁcially soiled version of the
original image ˆI and is a composition of the original image
I and the soiling pattern Is via the estimated mask m

ˆI = (1 − U (m)) · I + U (m) · U(Is) .

(1)

Note, it is possible to use arbitrary images for the ﬁnal com-
position, once we obtain Is and m. The mask m obtained
by the semantic segmentation network M serves as an au-
tomatic annotation of the soiling in the generated image.

This simple pipeline has certain limitations. The biggest
one is that it cannot be expected to work smoothly for soil-
ing types caused by water (e.g., raindrops, snow, etc.) in
this speciﬁc formulation. One option how to deal with this
issue is the following approach of [1], where the authors
model the reﬂection patterns of the water drops using the
whole image and apply ﬁlters and transformations conse-
quently. The other option is to formulate a CyleGAN-like
approach, which is able to cope with the problem of chang-
ing only those parts of the image that correspond to the soil-
ing pattern and keep the rest unchanged. We formulate this
approach in the following section.

3.2. DirtyGAN

The problem of applying CycleGAN in artiﬁcial soiling
synthesis is twofold. Firstly, CycleGAN does not constrain
the image generation to any speciﬁc regions and rather re-
generates the whole image, affecting all pixels. In case of
the artiﬁcial soiling generation, this is highly undesired, as
for the investigation of the soiling impact on the further
image processing, it is crucial that the background (i.e.,
regions of the image not affected by the soiling) remain
untouched. Secondly, the generation branch “clean” →
“soiled” is ill posed, as there is no visual clue for where

the soiling should be produced. In fact, there are inﬁnitely
many patterns that could be created. Furthermore, there is
also no control over the soiling pattern production process.
The ﬁrst problem can be addressed, e.g., by Insta-
GAN [23]. However, in such case, the second problem be-
comes even a bigger issue. We decided to guide the pattern
generation process via a Variational AutoEncoder (VAE) [7]
and modify the CycleGAN algorithm so that it applies only
on the masked regions of the source and target domain im-
ages. We coin the proposed network DirtyGAN.

We use the weak polygonal soiling annotations from the
WoodScape Dataset for training the VAE. The main idea of
using VAE for the soiling patterns generation is as follows.
By using the encoder of the trained VAE, we can obtain the
projection of an existing sample from the dataset to a lower
If we select two samples z1
dimensional representation.
and z2 that are close on the soiling pattern manifold, we can
obtain a novel sample z by taking their convex combination

z = αz1 + (1 − α)z2 ,

(2)

where α ∈ [0, 1]. Then, we simply take this intermediate
representation z and apply the trained decoder from VAE to
reconstruct the corresponding soiling pattern. In Figure 6,
we depict several examples of this intermediate soiling pat-
terns reconstruction.

The beneﬁt of using this sampling from the learned VAE
is that we could even use it to create animated masks, e.g.,
to mimic dynamic soiling effects, such as water drops in
heavy rain or to be able to investigate the impact of dynamic
soiling in general.

After training the VAE, we simply limit CycleGAN to
be applied only on the masked regions corresponding to
the generated mask for the “clean” → “soiled” translation
or the mask obtained by the soiling semantic segmentation
mask M. We use the similar composition as in the baseline
presented in Section 3.1. In Figure 7, we depict the whole
DirtyGAN scheme.

Figure 6: Variational AutoEncoder and the walk on the soiling manifold. The leftmost column depicts the original soiling
pattern (the annotation for some particular soiled image). The next column is the reconstructed version by applying the
whole VAE. The next 10 columns represent the transition (the walk on the soiling manifold) from the leftmost image to the
rightmost one, which represents another example.

Figure 7: The DirtyGAN scheme.

3.3. Dirty Datasets

We have used the baseline pipeline to generate artiﬁcial
soiling on our recently published WoodScape Dataset [40]
with 10k images, which comes with semantic segmenta-
tion annotation. This makes it a suitable candidate for soil-
ing generation, since we can merge the provided annotation
with the soiling mask and measure the direct impact on clas-
siﬁcation models. Our generated data with updated annota-
tion will be released as a WoodScape Dataset companion
under the name of DirtyWoodScape Dataset1. In Figure 8,
we show several generated examples together with their au-
tomatically obtained annotations.

Since our method of soiling generation is not limited
to ﬁsheye images only and since we would like to support
standard benchmarkings as well, we also release a DirtyC-
ityscapes dataset. It is, as the name suggests, based on the
Cityscapes [6] dataset.

4. Experimental Evaluation

4.1. Degradation Effect

To demonstrate the impact of the soiling on the camera
lens, we provide an empirical evaluation on semantic seg-
mentation task. Pixel level classiﬁcation is commonly used

1https://github.com/valeoai/woodscape

in autonomous driving applications. Our dataset consists
of 10k pairs of images (clean and synthetically soiled using
the proposed baseline framework). We split our data into
training and testing by 80 : 20 ratio according to sampling
strategy described in [37]. We trained two DeepLabV3+ [4]
models on the clean and soiled images, respectively. We
evaluate the performance separately on clean and soiled test
data. Table 3 summarizes the obtained results.

A segmentation model trained on clean images records
56.6% mIoU on clean test data and 34.8% on soiled data, a
performance drop of 21.8% compared to clean images. This
signiﬁcant drop shows that presence of a soiling can cause
serious degradation effect to a standard visual perception
task in autonomous driving.

A model trained on the synthetic soiling data shows a
limited degradation to 16.1%. Training on the soiled im-
ages, however, shows 4% accuracy degradation on clean test
data compared to the baseline when evaluated on clean im-
ages. 8% degradation is observed when evaluated on soiled
images compared to the baseline model. This result moti-
vates the need for studying the effect of soiling on various
perception tasks.

Figure 9 depicts a qualitative evaluation of the soil-
ing impact on the segmentation task. The baseline model
trained on clean images 9a is evaluated on soiled images in
9c showing a high level of degradation due to the soiling.

Figure 8: Examples of the generated images from the DirtyWoodScape Dataset, together with the generated annotations.
Top: WoodScape Dataset RGB images with generated opaque soiling. Bottom: corresponding automatically generated
annotations. White pixels represent the soiling, while black pixels represent the background.

(a) Clean Image

(b) Train clean, test clean

(c) Train clean, test soil

(d) Ground Truth

(e) Soiled Image

(f) Train soil, test clean

(g) Train soil, test soil

Figure 9: Qualitative evaluation using clean vs soiled images on the semantic segmentation network DeepLabV3+.

Figure 9d shows the ground truth annotations, while 9f and
9g illustrate results of model trained on the soiled images
while testing on the clean images in 9a and soiled images in
9e. In a realistic scenario, annotations are not available for
the occluded region of soiled images. Using our GAN gen-
erated dataset, we make use of the annotations in the soiled
area to enable the model to interpolate segmentation classes
in occluded soiled parts. Figure 9f shows the capability of
segmentation networks to perform segmentation even be-
hind the soiled area. However, it is less reliable compared
to the clean baseline and sensitive to overﬁtting.

A similar trend is observed in case of the Cityscapes

dataset [6]. Results are presented in Table 2.

4.2. Artiﬁcial Soiling Quality

other GAN based image generation algorithms. We selected
representative human participants with a variable level of
the problem understanding:
ranging from absolutely no
knowledge about the computer vision and surround view
camera imaging systems for autonomous driving to people
working with the soiling data on a daily basis. The par-
ticipants were asked to classify the presented images either
as real ones or fakes. Then we randomly showed images
with the real soiling from the WoodScape Dataset [40] and
with the artiﬁcially generated soiling. To make the task
even more difﬁcult, we used soiled images showing simi-
lar scenes as they occur in the WoodScape Dataset. Other-
wise, the participants might eventually spot the differences
in the data distribution as the real soiling data comes from a
limited scenarios only.

To start with, we performed a subjective visual study of
the quality of the artiﬁcial soiling similarly as it is done in

The non-expert participants were not able to recognize
real images from fakes. The expert participants were some-

Figure 10: Examples of the generated images from the DirtyCityscapes Dataset. Top: Cityscapes Dataset RGB images.
Bottom: Generated soiled images corresponding to clean images.

Table 1: Comparison of Soiling Segmentation model
trained on generated and real soiled images. Accuracy is
computed on a real test dataset with 2000 images.

ResNet50-FCN8 based
Soiling Segmentation Model
Trained solely on generated images
(8000 samples)
Trained solely on real images
(8000 samples)
Trained on real & generated images
(16000 samples)

Accuracy [%] on real
test 2K dataset (mIoU)

47.41

73.95

91.71

Table 2: Quantitative evaluation on Cityscapes using
ResNet50+FCN8. The accuracy measure is mIoU [%].

Table 3: Quantitative evaluation on our dataset using
DeepLabV3+. The accuracy measure is mIoU [%].

Train\Test Clean
38.1
Clean
35.5
Soiled

Soiled
26.6
38.0

Train\Test Clean
56.6
Clean
52.1
Soiled

Soiled
34.8
48.2

times able to spot a difference in the soiling pattern, because
it was novel, and also they sometimes spotted small arti-
facts, e.g., blurry texture. However, expert participants were
biased as they have knowledge of the real data. In general,
we can say that the image quality of the generated artiﬁcial
soiling is satisfactory when judged by human inspection for
95% of the scenarios.

A primary purpose of generating soiling is to mimic the
real soiling scenarios. To test this ﬁrst we trained a soiling
segmentation network on real soiling data only (8k images).
We tested this model performance on real soiling test data.
This is recorded as 73.95%. Now we added synthetic gener-

ated soiling data (8k images) to our training catalog. As the
generated soiling replicates the real soiling patterns the per-
formance of the network increased to 91.71% on real soiling
test data, forming a 17.76% increase in accuracy without
the need for costly annotations and real-time soiling scene
captures (see the second and third row of Table 1). We ob-
serve a signiﬁcant reduction in accuracy when the network
is trained on the artiﬁcial images solely. This can be at-
tributed to a limited ability of capturing the entire data di-
versity to support the original soiled data.

The binary semantic segmentation network constructed
for the soiling segmentation task is using ResNet50 [10] as
an encoder and FCN8 [29] as a decoder. The binary cross-
entropy was used as a loss function with the ADAM opti-
mizer [18] for training with a learning rate of 1 × 10−4. The
image resolution was 640 × 480 pixels.

5. Conclusions

In this paper, we proposed two algorithms for the gen-
eration of soiling on images from surround view ﬁsheye
cameras. The ﬁrst algorithm is a pipeline built from sev-
eral well known blocks, such as CycleGAN [42], seman-
tic segmentation of the generated soiling and image com-
position. The second algorithm is a novel DirtyGAN net-
work, which is able to generate similar results as the base-
line pipeline in an end-to-end fashion. The possibility to
generate random, but realistic soiling pattern on camera im-
ages is an integral component in examining the degradation
of other image processing methods. We provided empir-
ical evaluation of the performance degradation on several
typical classiﬁcation tasks common for autonomous driving
scenarios. We demonstrate that our soiling model trained
on ﬁsheye images generalizes well on Cityscapes dataset
enabling to create dirty versions of public datasets. Last
but not least, we release a public dataset as a companion
to the recently published WoodScape Dataset [40], coined
DirtyWoodScape Dataset, which can serve as a benchmark
for measuring the degradation of off-the-shelf classiﬁcation
algorithms.

References

[1] Stefano Alletto, Casey Carlin, Luca Rigazio, Yasunori Ishii,
and Sotaro Tsukizawa. Adherent raindrop removal with
self-supervised attention maps and spatio-temporal genera-
tive adversarial networks. In The IEEE International Con-
ference on Computer Vision (ICCV) Workshops, Oct 2019.
5

[2] Dana Berman, Tali Treibitz, and Shai Avidan. Non-local im-
age dehazing. In 2016 IEEE Conference on Computer Vision
and Pattern Recognition, CVPR 2016, Las Vegas, NV, USA,
June 27-30, 2016, pages 1674–1682. IEEE Computer Soci-
ety, 2016. 3

[3] Liang-Chieh Chen, George Papandreou, Iasonas Kokkinos,
Kevin Murphy, and Alan L. Yuille. Deeplab: Semantic im-
age segmentation with deep convolutional nets, atrous con-
volution, and fully connected crfs. IEEE Trans. Pattern Anal.
Mach. Intell., 40(4):834–848, 2018. 2

[4] Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian
Schroff, and Hartwig Adam. Encoder-decoder with atrous
separable convolution for semantic image segmentation. In
Proceedings of the European conference on computer vision
(ECCV), pages 801–818, 2018. 6

[5] Yunjey Choi, Min-Je Choi, Munyoung Kim, Jung-Woo Ha,
Sunghun Kim, and Jaegul Choo. Stargan: Uniﬁed genera-
tive adversarial networks for multi-domain image-to-image
translation. In 2018 IEEE Conference on Computer Vision
and Pattern Recognition, CVPR 2018, Salt Lake City, UT,
USA, June 18-22, 2018, pages 8789–8797. IEEE Computer
Society, 2018. 3

[6] Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo
Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe
Franke, Stefan Roth, and Bernt Schiele. The cityscapes
dataset for semantic urban scene understanding. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 3213–3223, 2016. 6, 7

[7] Carl Doersch. Tutorial on variational autoencoders. CoRR,

[8] Raanan Fattal. Single image dehazing. ACM Trans. Graph.,

abs/1606.05908, 2016. 5

27(3):72:1–72:9, 2008. 3

[9] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing
Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and
In Advances
Yoshua Bengio. Generative adversarial nets.
in neural information processing systems, pages 2672–2680,
2014. 2

[10] Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.
Deep residual learning for image recognition. In Proceed-
ings of the IEEE conference on computer vision and pattern
recognition, pages 770–778, 2016. 8

[11] Zhenliang He, Wangmeng Zuo, Meina Kan, Shiguang Shan,
and Xilin Chen. Attgan: Facial attribute editing by only
IEEE Trans. Image Processing,
changing what you want.
28(11):5464–5478, 2019. 3

[12] Markus Heimberger, Jonathan Horgan, Ciar´an Hughes, John
McDonald, and Senthil Yogamani. Computer vision in au-
tomated parking systems: Design, implementation and chal-
lenges. Image and Vision Computing, 68:88–101, 2017. 1

[13] Xun Huang, Ming-Yu Liu, Serge Belongie, and Jan Kautz.
Multimodal unsupervised image-to-image translation.
In
Proceedings of the European Conference on Computer Vi-
sion (ECCV), pages 172–189, 2018. 3

[14] S. A. E. International. Taxonomy and deﬁnitions for terms
related to on-road motor vehicle automated driving systems
J3016, 2018. 1

[15] Phillip Isola, Jun-Yan Zhu, Tinghui Zhou, and Alexei A.
Efros. Image-to-image translation with conditional adversar-
ial networks. In 2017 IEEE Conference on Computer Vision
and Pattern Recognition, CVPR 2017, Honolulu, HI, USA,
July 21-26, 2017, pages 5967–5976. IEEE Computer Soci-
ety, 2017. 2

[16] Sehwan Ki, Hyeonjun Sim, Jae-Seok Choi, Saehun Kim,
and Munchurl Kim. Fully end-to-end learning based condi-
tional boundary equilibrium GAN with receptive ﬁeld sizes
enlarged for single ultra-high resolution image dehazing.
In 2018 IEEE Conference on Computer Vision and Pattern
Recognition Workshops, CVPR Workshops 2018, Salt Lake
City, UT, USA, June 18-22, 2018, pages 817–824. IEEE
Computer Society, 2018. 3

[17] Junho Kim, Minjae Kim, Hyeonwoo Kang, and Kwanghee
Lee. U-GAT-IT: unsupervised generative attentional net-
works with adaptive layer-instance normalization for image-
to-image translation. CoRR, abs/1907.10830, 2019. 3
[18] Diederik P. Kingma and Jimmy Ba. Adam: A method for

stochastic optimization, 2014. 8

[19] Siyuan Li, Iago Breno Araujo, Wenqi Ren, Zhangyang
Wang, Eric K. Tokuda, Roberto Hirata Junior, Roberto
Cesar-Junior, Jiawan Zhang, Xiaojie Guo, and Xiaochun
Cao. Single image deraining: A comprehensive benchmark
analysis. In The IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), June 2019. 3

[20] Ming-Yu Liu, Thomas Breuel, and Jan Kautz. Unsupervised
image-to-image translation networks. In Isabelle Guyon, Ul-
rike von Luxburg, Samy Bengio, Hanna M. Wallach, Rob
Fergus, S. V. N. Vishwanathan, and Roman Garnett, editors,
Advances in Neural Information Processing Systems 30: An-
nual Conference on Neural Information Processing Systems
2017, 4-9 December 2017, Long Beach, CA, USA, pages
700–708, 2017. 3

[21] Pullaro Maddu, Wayne Doherty, Ganesh Sistu, Isabelle
Leang, Michal Uricar, Sumanth Chennupati, Hazem Rashed,
Jonathan Horgan, Ciaran Hughes, and Senthil Yogamani.
Fisheyemultinet: Real-time multi-task learning architecture
In Proceed-
for surround-view automated parking system.
ings of the Irish Machine Vision and Image Processing Con-
ference, 2019. 1

[22] Youssef Alami Mejjati, Christian Richardt, James Tomp-
kin, Darren Cosker, and Kwang In Kim. Unsupervised
attention-guided image-to-image translation. In Samy Ben-
gio, Hanna M. Wallach, Hugo Larochelle, Kristen Grauman,
Nicol`o Cesa-Bianchi, and Roman Garnett, editors, Advances
in Neural Information Processing Systems 31: Annual Con-
ference on Neural Information Processing Systems 2018,
NeurIPS 2018, 3-8 December 2018, Montr´eal, Canada.,
pages 3697–3707, 2018. 3

[23] Sangwoo Mo, Minsu Cho, and Jinwoo Shin.

Instagan:
Instance-aware image-to-image translation. In 7th Interna-
tional Conference on Learning Representations, ICLR 2019,
New Orleans, LA, USA, May 6-9, 2019. OpenReview.net,
2019. 3, 5

[24] Taesung Park, Ming-Yu Liu, Ting-Chun Wang, and Jun-Yan
Zhu. Semantic image synthesis with spatially-adaptive nor-
In IEEE Conference on Computer Vision and
malization.
Pattern Recognition, CVPR 2019, Long Beach, CA, USA,
June 16-20, 2019, pages 2337–2346. Computer Vision Foun-
dation / IEEE, 2019. 2

[25] Horia Porav, Tom Bruls, and Paul Newman.

I can see
Image restoration via de-raining. CoRR,

clearly now :
abs/1901.00893, 2019. 3

[26] Albert Pumarola, Antonio Agudo, Aleix M. Mart´ınez, Al-
berto Sanfeliu, and Francesc Moreno-Noguer. Ganimation:
Anatomically-aware facial animation from a single image. In
Vittorio Ferrari, Martial Hebert, Cristian Sminchisescu, and
Yair Weiss, editors, Computer Vision - ECCV 2018 - 15th
European Conference, Munich, Germany, September 8-14,
2018, Proceedings, Part X, volume 11214 of Lecture Notes
in Computer Science, pages 835–851. Springer, 2018. 3
[27] Dongwei Ren, Wangmeng Zuo, Qinghua Hu, Pengfei Zhu,
and Deyu Meng. Progressive image deraining networks:
In The IEEE Conference
A better and simpler baseline.
on Computer Vision and Pattern Recognition (CVPR), June
2019. 3

[28] Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause, San-
jeev Satheesh, Sean Ma, Zhiheng Huang, Andrej Karpathy,
Aditya Khosla, Michael Bernstein, Alexander C. Berg, and
Li Fei-Fei. ImageNet Large Scale Visual Recognition Chal-
International Journal of Computer Vision (IJCV),
lenge.
115(3):211–252, 2015. 2

[29] Evan Shelhamer, Jonathan Long, and Trevor Darrell. Fully
IEEE
convolutional networks for semantic segmentation.
Trans. Pattern Anal. Mach. Intell., 39(4):640–651, 2017. 8

[30] Mennatullah Siam, Sara Elkerdawy, Martin Jagersand, and
Senthil Yogamani. Deep semantic segmentation for auto-
mated driving: Taxonomy, roadmap and challenges. In 2017
IEEE 20th International Conference on Intelligent Trans-
portation Systems (ITSC), pages 1–8. IEEE, 2017. 1
[31] Mennatullah Siam, Mostafa Gamal, Moemen Abdel-Razek,
Senthil Yogamani, and Martin Jagersand. Rtseg: Real-time
In 2018 25th
semantic segmentation comparative study.
IEEE International Conference on Image Processing (ICIP),
pages 1603–1607. IEEE, 2018. 1

[32] Mennatullah Siam, Heba Mahgoub, Mohamed Zahran,
Senthil Yogamani, Martin Jagersand, and Ahmad El-Sallab.
MODNet: Motion and appearance based moving object de-
tection network for autonomous driving. In Proceedings of
the 21st International Conference on Intelligent Transporta-
tion Systems (ITSC), pages 2859–2864, 2018. 1

[33] Nasim Souly, Concetto Spampinato, and Mubarak Shah.
Semi supervised semantic segmentation using generative ad-
In IEEE International Conference on
versarial network.
Computer Vision, ICCV 2017, Venice, Italy, October 22-29,
2017, pages 5689–5697. IEEE Computer Society, 2017. 2

[34] Michal Uˇriˇc´aˇr, Pavel Kˇr´ıˇzek, David Hurych, Ibrahim Sobh,
Senthil Yogamani, and Patrick Denny. Yes, we GAN: ap-
plying adversarial techniques for autonomous driving. Elec-
tronic Imaging, 2019(15):48–1–48–17, 2019. 2

[35] Michal Uˇriˇc´aˇr, Pavel Kˇr´ıˇzek, Ganesh Sistu, and Senthil
Soilingnet: Soiling detection on automotive
Yogamani.
In 2019 22nd International Con-
surround-view cameras.
ference on Intelligent Transportation Systems (ITSC). IEEE,
2019. 2

[36] Michal Uˇriˇc´aˇr, J´an Uliˇcn´y, Ganesh Sistu, Hazem Rashed,
Pavel Kˇr´ıˇzek, David Hurych, Anton´ın Vobeck´y, and Senthil
Yogamani. Desoiling dataset: Restoring soiled areas on au-
tomotive ﬁsheye cameras. In The IEEE International Con-
ference on Computer Vision (ICCV) Workshops, Oct 2019.
3

[37] Michal Ui, David Hurych, Pavel Kek, and Senthil Yoga-
mani. Challenges in designing datasets and validation for au-
tonomous driving. In Proceedings of the 14th International
Joint Conference on Computer Vision, Imaging and Com-
puter Graphics Theory and Applications - Volume 5: VIS-
APP,, pages 653–659. INSTICC, SciTePress, 2019. 6
[38] Tianyu Wang, Xin Yang, Ke Xu, Shaozhe Chen, Qiang
Zhang, and Rynson W.H. Lau. Spatial attentive single-image
deraining with a high quality real rain dataset. In The IEEE
Conference on Computer Vision and Pattern Recognition
(CVPR), June 2019. 3

[39] Wenhan Yang, Jiaying Liu, and Jiashi Feng.

Frame-
consistent recurrent video deraining with dual-level ﬂow.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), June 2019. 3

[40] Senthil Yogamani, Ciaran Hughes, Jonathan Horgan, Ganesh
Sistu, Padraig Varley, Derek O’Dea, Michal Uricar, Stefan
Milz, Martin Simon, Karl Amende, Christian Witt, Hazem
Rashed, Sumanth Chennupati, Sanjaya Nayak, Saquib Man-
soor, Xavier Perrotton, and Patrick Perez. Woodscape:
A multi-task, multi-camera ﬁsheye dataset for autonomous
driving. In The IEEE International Conference on Computer
Vision (ICCV), October 2019. 2, 4, 6, 7, 8

[41] Han Zhang, Ian J. Goodfellow, Dimitris N. Metaxas, and
Augustus Odena. Self-attention generative adversarial net-
works. In Kamalika Chaudhuri and Ruslan Salakhutdinov,
editors, Proceedings of the 36th International Conference
on Machine Learning, ICML 2019, 9-15 June 2019, Long
Beach, California, USA, volume 97 of Proceedings of Ma-
chine Learning Research, pages 7354–7363. PMLR, 2019.
2

[42] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A.
Efros. Unpaired Image-to-Image Translation Using Cycle-
In IEEE International
Consistent Adversarial Networks.
Conference on Computer Vision, ICCV 2017, Venice, Italy,
October 22-29, 2017, pages 2242–2251, 2017. 2, 4, 8

the soiled image. Although it is possible to use our algo-
rithm to generate dynamic soiling effects, we present here
only the static soiling. Please, see the video ﬁles for the best
experience.

A. Generated Data Inﬂuence on Soiling Se-

mantic Segmentation

In Figure 11, we depict the problems, we are facing when
using the WoodScape Dataset. Because only coarse polyg-
onal annotation is available (which is moreover prone to er-
rors), the classical fully supervised training of the semantic
segmentation for the soiling is affected by the annotation
quality.
If we, however, add the generated images along
with the precisely generated annotations, the same fully su-
pervised training exploits these annotations, with a desired
effect on the semantic segmentation output quality.

B. Network Architectures

In this section, we provide details about the network ar-

chitectures we used in our experiments.

B.1. Baseline Networks Architecture

Generator and Discriminator of CycleGAN In the Cy-
cleGAN generator network (see Figure 12), We use the
residual block depicted in Figure 14. Note, that we do not
use any kind of normalization, like BatchNorm or Instan-
ceNorm.
In Discriminator (see Figure 13, we use Leaky
ReLU and a fully convolutional classiﬁcation layer at the
end.

Soiling Mask Segmentation In Figure 15, we show the
semantic segmentation network for the soiling mask detec-
tion. For the soiling mask segmentation network, we use
Instance Normalization in convolutional blocks and Batch-
Norm in the residual block.

Variational AutoEncoder We depict the encoder part of
the VAE in Figure 16. The µ and σ are combined into z
via reparametrization trick. The VAE’s decoder is shown in
Figure 17.

B.2. DirtyGAN Architecture

DirtyGAN is composed of the building blocks used in
the baseline algorithm, therefore the networks architecture
is mostly the same, only with some minor tweaks.

C. Generated Data

In Figure 18 and 19, we depict random frame from gen-
erated videos, which we enclose to the supplementary. To ﬁt
the size limit, we resized the images by 1/4 for both width
and height. The ﬁrst image in the row is the original frame
from the video sequence as it was recorded. The second
image in the row is the artiﬁcially generated soiled version
of the ﬁrst image and the third image in the row is the soil-
ing mask, which can serve as the automatic annotation for

Figure 11: The problem of weak annotation labels and how generated data can help, presented on a testing image, which was
not used during the training. The images come from the WoodScape Dataset. Left: original weak (polygonal) annotation;
Note, that not only it is very coarse, but also prone to errors. Middle: semantic segmentation output, when trained on the
weak annotation labels in a fully supervised manner. Right: the same semantic segmentation network output, however, in
this case also the generated data were used. Note, how having precise annotation labels for the generated data help in reﬁning
the segmentation output.

Figure 13: The Discriminator’s architecture, used in the
CycleGAN. “c4s2-64-LR” reads as 2D convolutional layer
with kernel size 4 × 4 pixels, stride 2, 64 output channels,
followed by a Leaky ReLU activation layer. S stands for
the sigmoid activation layer.

Figure 12: The Generator’s architecture, used in the Cy-
cleGAN. “c7s1-32-R” reads as 2D convolutional layer with
kernel size 7 × 7 pixels, stride 1, 32 output channels, fol-
lowed by a ReLU activation layer. T stands for the tanh
activation; “tc” is a shortcut for the transposed convolution;
“rp” means reﬂection padding; “r-128” is a shorthand for
residual block with 128 channels.

Figure 16: The architecture of the VAE encoder used in our
experiments. The notation “c3s2-64-R” corresponds to a
2D convolutional layer, with kernel size 3 × 3 pixels, stride
of 2, 64 output channels, followed by a ReLU activation
layer.

Figure 14: The residual block, which is used in the Gener-
ator’s architecture. Note, that convolutional blocks “c3s1”
might be followed by a BatchNorm layer (used only in the
soiling mask segmentation network).

Figure 15: The soiling mask segmentation network. The
same type of shorthands as in previous ﬁgures are used with
an addition of “IN” for Instance Normalization and “BN”
for BatchNorm layers. “up2” is a simple nearest neighbor
upsampling with scale factor 2.

Figure 17: The architecture of the VAE decoder used in our
experiments. The notation “c3s2-64-R” corresponds to a
2D convolutional layer, with kernel size 3 × 3 pixels, stride
of 2, 64 output channels, followed by a ReLU activation
layer. “tc3s2-256-R” represents a transposed convolution,
with kernel 3 × 3 pixels, stride 2, 256 output channels,
followed by ReLU activation. “rp-1” means a reﬂection
padding of size 1.

Figure 18: Several frames extracted from the supplementary video ﬁles. Please, see the original video ﬁles for the best
experience.

Figure 19: Several frames extracted from the supplementary video ﬁles. Please, see the original video ﬁles for the best
experience.

