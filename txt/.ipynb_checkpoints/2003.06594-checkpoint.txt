Collaborative Motion Prediction via Neural Motion Message Passing

Yue Hu1, Siheng Chen2 (cid:0), Ya Zhang1 (cid:0), and Xiao Gu1

1 Cooperative Medianet Innovation Center, Shanghai Jiao Tong University
2 Mitsubishi Electric Research Laboratories
{18671129361, ya zhang, gugu97} @sjtu.edu.cn, schen@merl.com

0
2
0
2
 
r
a

M
 
4
1
 
 
]

V
C
.
s
c
[
 
 
1
v
4
9
5
6
0
.
3
0
0
2
:
v
i
X
r
a

Abstract

Motion prediction is essential and challenging for au-
tonomous vehicles and social robots. One challenge of mo-
tion prediction is to model the interaction among trafﬁc ac-
tors, which could cooperate with each other to avoid colli-
sions or form groups. To address this challenge, we propose
neural motion message passing (NMMP) to explicitly model
the interaction and learn representations for directed inter-
actions between actors. Based on the proposed NMMP, we
design the motion prediction systems for two settings: the
pedestrian setting and the joint pedestrian and vehicle set-
ting. Both systems share a common pattern: we use an indi-
vidual branch to model the behavior of a single actor and an
interactive branch to model the interaction between actors,
while with different wrappers to handle the varied input for-
mats and characteristics. The experimental results show
that both systems outperform the previous state-of-the-art
methods on several existing benchmarks. Besides, we pro-
vide interpretability for interaction learning. Code is avail-
able at https://github.com/PhyllisH/NMMP.

1. Introduction

Forecasting the future motion for the interacting actors
in the scene has been a crucial problem in many real-world
scenarios. For example, self-driving vehicles and interac-
tive robotics need to understand human and other trafﬁc
actors’ future behaviors to avoid collisions and for better
planning [5, 6, 8, 9]. The intelligent tracking modules in
surveillance systems also need to understand the pedestri-
ans’ motion to optimize resource allocation [31]. Scien-
tiﬁcally, motion prediction is also useful for understanding
human behaviors [22] and motion dynamics [27].

One of the fundamental challenges of this task is to
model the scene constraints, especially the hidden interac-
tions between actors. For example, in the driving scenarios,
trafﬁc actors, such as vehicles and pedestrians, are inﬂu-

Figure 1. Neural motion massage passing is proposed to capture
directed interactions among trafﬁc actors, which can serve as a
plugin module to guide motion prediction.

enced by each other, as well as the trafﬁc conditions and
rules; see Figure 1. Previous works have tried to model
such interactions through three mechanisms: spatial-centric
mechanism, social mechanism, and graph-based mecha-
nism. The spatial-centric mechanism uses the spatial re-
lationship to implicitly model the interaction between ac-
tors [7, 40, 3, 8, 6, 5]. The social mechanism explicitly
aggregates the neighboring actors’ information involved in
the scene through social pooling [1, 11], or attention oper-
ation [34, 28]; however, both mechanisms model the inter-
actions according to the static spatial locations of the actors
and ignore the temporal horizon. The graph-based mech-
anism constructs a graph to explicitly model the pairwise
interactions between actors according to their observed tra-
jectories [16, 34, 14]; however, the previous graph-based
methods only consider features for actors, but do not ex-
plicitly learn features for in-between interactions.

To comprehensively represent the interactions between
actors, we extend the current graph-based mechanism and
propose neural motion message passing (NMMP). The
NMMP infers an interaction graph from actors’ trajecto-
ries, whose nodes are the actors and edges are the inter-
actions. This module updates the neural message passing
framework [15] to the context of motion prediction. It takes
the observed trajectories of trafﬁc actors as input, and pro-

duces the feature representations for both actors and their
corresponding interactions. A main advantage of the pro-
posed NMMP over the current graph-based methods is that
NMMP not only presents informative feature representa-
tions for both actors and interactions, but also provides in-
terpretability for the motion prediction task.
Interaction
representations indicating similar interaction patterns have
similar impacts on the acting actors explicitly. Besides, we
consider the direction of interaction.

We design the motion-prediction systems for two spe-
ciﬁc settings: the pedestrian setting, where we consider an
open area and the actors are ﬂexible pedestrian; and the joint
pedestrian and vehicle setting, where we consider an urban
driving scenario and an actor could be either pedestrian or
vehicle. Most previous literature focus on only one of these
two settings. Here we handle both settings based on the
same NMMP module to model interactions, and an individ-
ual branch to model the behavior of a single actor and an
interactive branch to model the interaction between actors.
We handle the different input formats and characteristics
in these two settings with distinct wrappers. The pedes-
trian motion prediction system includes additional GAN
to deal with the uncertain human behaviours in open-area
scenes. The joint motion prediction system includes addi-
tional CNN to process map information required in urban-
driving scenes, and coordinate transformation to handle ve-
hicle headings. Overall, those differences between two sys-
tems are small variations. The experimental results show
that the proposed systems outperform the state-of-the-art
methods in both settings, which not only show the supe-
riority of the proposed systems, but also validate the gen-
eralization and interpretability of the proposed NMMP. The
main contributions of this paper are:

• We propose neural motion message passing (NMMP)
to learn feature representations for both actors and
their interactions from actors’ trajectory;

• We design systems for pedestrian motion prediction,
and joint pedestrian and vehicle motion prediction
based on the NMMP module; both outperform the pre-
vious state-of-the-art methods;

• We provide interpretability for the proposed motion
prediction systems, including both quantitative bench-
marks and visualization analysis.

2. Related Works

Motion prediction. Traditional approaches for mo-
tion prediction are based on hand-crafted rules and energy
potentials [2, 19, 24, 25, 35, 36]. For example, Social
Force [13] models pedestrian behavior with attractive and
repulsive forces; however, those hand-crafted features fail
to generalize to complex scenes. To tackle this problem,
researchers tend towards data-driven tools. For example,
the sequence-to-sequence models, such as recurrent neural

networks [32], are leveraged to encode prior trajectory se-
quences [1, 20]; however, those models consider the behav-
ior of each individual actor and ignore the rich interactions
among multiple actors in a scene. Recently, three mecha-
nisms are developed to model the hidden interactions.

The ﬁrst one is the spatial-centric mechanism; it repre-
sents the actors’ trajectories in a unifying spatial domain
and uses the spatial relationship to implicitly model the in-
teraction between actors. For example, Social Conv [7] and
MATF [40] leverage the spatial structure of the actors to
learn the interactions; ChauffeurNet [3] and Motion Pre-
diction [8] encode the trajectories of trafﬁc actors and the
scene context into bird’s eye view images; FMNet [6] uses
lightweight CNNs to achieve the real-time inference; and
IntentNet [5] combines LiDAR data with images.

The second one is the social mechanism; it aggregates
the neighboring actors’ information to a social representa-
tion and broadcasts it to each actor. In this way, each actor
is aware of the neighboring information. For example, So-
cial LSTM [1] utilizes max pooling over neighboring actors.
To consider long-range interactions, Social GAN [11] ap-
plies max pooling to all the actors. CIDNN [38] uses inner
product between the prior location embeddings of actors.
However, the max-pooling operation ignores the uniqueness
of each actor and the inner-product operation considers all
the other actors equally. The attention operation is then in-
troduced [34, 28] so that the actor could focus on crucial
impacts.
Inevitably, increasing computational complexity
comes along with the attention operation.

The third one is the graph-based mechanism; it con-
structs a graph to explicitly model the pairwise interactions
between actors. For example, Social-BiGAT[16] learns a
global embedding to represent the interactions in the scene
based on a graph attention network(GAT); Social Atten-
tion [34] and STGAT [14] capture the dynamic interaction
changes over time by using spatial-temporal graphs and
LSTM, respectively.
In this work, we extend the graph-
based mechanism from two aspect: (i) capture directed in-
teractions; and (ii) provide interpretability for interactions.
Graph neural network. Graph neural networks re-
cently have got a lot of attention and achieved signiﬁcant
success in various ﬁelds [10, 26, 15], especially in social
network analysis [12], scene understanding [37, 39], 3D
point cloud processing [21] and human action understand-
ing [27, 22]. Two mainstream architectures include graph
convolutional networks [30, 23, 33] and neural-message-
passing-based networks [10, 15]. While graph convo-
lutional networks consider the edges as a transient part,
neural-message-passing-based networks treat them as a in-
tegral part of the model. In this work, we use the neural-
message-passing-based networks to learn complicated in-
teractions between trafﬁc actors, where actors are consid-
ered as nodes and interactions are considered as edges.

i = f 0

integrate the temporal information to obtain the trajectory
embedding hi of the ith actor in (1b). And (1c) encodes the
difference between the actors at the current time, providing
the relative spatial information. Then, map the trajectory
embedding to the actor space, we get the initial actor em-
bedding of the ith actor, v0
v (hi), and concatenate
both actor embeddings and the relative spatial embedding
dij, we get the initial interaction embedding between the ith
j ; dij](cid:1), which includes
(cid:0)[v0
and the jth actors, e0
both temporal and spatial information. ftemp(·), fLSTM(·),
fspatial(·), f 0
e (·) are MLPs.
Following the spirit of the node-to-edge and edge-to-
node message passing mechanism [10, 15], we update the
interaction graphs with the associated actor and interaction
embeddings; see Figure 2. In the node-to-edge phase, each
interaction receives motion messages from the correspond-
ing pair of actors.
In the edge-to-node phase, each actor
embedding is updated according to all the corresponding
interaction embeddings. The kth (k ≥ 0) iteration works as

v (·), and f 0

ij = f 0
e

i ; v0

vk+1
i

= f k+1
v

(cid:88)

ek
ji;

eji∈E

1
dout
i

(cid:88)

eij ∈E

ek
ij]), (2a)

ek+1
ij

= f k+1
e

; vk+1
j

](cid:1) ,

(2b)

([

1
din
i
(cid:0)[vk+1

i

e (·), f k

v (·) are MLPs. vk

where f k
ij are the ith actor
embedding and the interaction embedding between the ith
and jth actors at the kth iteration, respectively.

i and ek

Here we consider a directed graph to model the relative
interactions between trafﬁc actors. For example, when the
front actor slows down, the back actor would be forced to
slow down or turn to avoid collision, while inversely, the
back actor slowing down might not equally affect the front
actor’s behavior. To explicitly reﬂect this directed informa-
tion, in the edge-to-node phase (2a), we use the concatena-
tion rather than the sum or mean to distinguish the edge di-
rection. din
is the amount of edges pointing to vi, while dout
i
is the amount of edges vi pointing out; both of which are
used to normalize the interaction embeddings. In the node-
to-edge phase (2b), we concatenate two actor embeddings
to update the interaction embedding. Repeat the node-to-
edge and edge-to-node phases K times, we can get the ﬁnal
interacted actor embeddings (vi = vK
i ) and the ﬁnal inter-
action embeddings (eij = eK
ij ). The interaction density is
positively related to the number of iterations K.

i

4. Motion Prediction Systems

We propose the motion-prediction systems based on
NMMP for two settings: pedestrian motion prediction, and
joint pedestrian and vehicle motion prediction.
4.1. Pedestrian motion prediction

Figure 2. The NMMP module explicitly learns trajectory embed-
ding for each actor through LSTM, and interacted actor embedding
and in-between interaction embedding through message passing.

3. Neural Motion Message Passing

In this section, we present NMMP, whose functionality
is to provide feature representations for both actors and their
corresponding interactions from the input trajectories. This
NMMP serves as a core module in the proposed systems as
it enables the trafﬁc actors to share their history information
and collaboratively predict their future trajectories.

i = (x(t)

Considering N visible trafﬁc actors within the scene.
i ) ∈ R2 the spatial coordinate of the
i and

With p(t)
ith actor at timestamp t, let the observed trajectory P−
the ground-truth future trajectory P+

i of the ith actors be

, y(t)

i

P−

i =

P+

i =

i

(cid:104)
p(−Tobs)
(cid:104)
p(1)
i

p(2)
i

p(−Tobs+1)

i

. . . p(0)

i

∈ R2×(Tobs+1),

(cid:105)

. . . p(Tpred)
i

(cid:105)

∈ R2×Tpred .

The overall goal of motion prediction is to propose a pre-
diction model g(·), so that the predicted future trajectories

are close to the ground-truth

(cid:18)

(cid:19)

+
i }N

{(cid:98)P
i=1 = g
future trajectories {P+

{P−

i }N
i=1
i }N

i=1.

See Figure 2, intuitively, the actors are interactively in-
ﬂuenced by each other in real-time, leading to correlated
trajectories. The NMMP is proposed to leverage such a cor-
relation to provide informative feature representations for
the actors and their corresponding interactions. The core
of NMMP is an interaction graph, G(V, E), where the node
vi ∈ V represents the ith trafﬁc actor, and the edge eij ∈ E
denotes the interaction between two actors, vi and vj. We
initialize it as a fully-connected graph and then initialize the
actor and interaction embedding with trajectory embedding
which is obtained though

i − p(t−1)
h(t)
= ftemp(p(t)
i
hi = fLSTM({h(t)
i }0
i − p(0)
p(0)

dij = fspatial

(cid:16)

j

i

),

t=−Tobs+1) ∈ RD,
.

(cid:17)

(1a)

(1b)

(1c)

we encode the displacement between the coordinates at two
consecutive timestamps in (1a). The LSTM is utilized to

The pedestrian motion prediction considers open areas,
such as campus squares, where pedestrians walk ﬂexibly.

Figure 3. The pedestrian motion prediction system based on NMMP (PMP-NMMP) consists of a generator and a discriminator. The
the individual branch considers the individual trajectory embedding and the
generator predicts future trajectories from two branches:
interactive branch considers the interacted actor embedding. The discriminator classiﬁes the complete trajectories to be real or fake.

The trait of setting is the trajectory is highly nonsmooth.
This setting ﬁts to the scenarios of surveillance systems.

4.1.1 System architecture

This system consists of a generator and a discriminator; see
Figure 3. The generator predicts future trajectories of the
actors and the discriminator classiﬁes the complete trajec-
tories to be real or fake. The model is trained adversarially
to encourage realistic trajectories.

Generator. We predict the future trajectory based on two
branches:
the individual branch, which provides a rough
prediction based on each individual actor, and the interac-
tive branch, which reﬁnes the rough prediction based on in-
teraction information. The predicted spatial coordinate of
the ith actor at timestamp t, (cid:98)p(t)
(cid:16)

, is obtained through

(cid:17)(cid:17)

(cid:16)

i

gLSTM

q(t)
i

, (cid:98)p(t−1)

i

∈ R2, (3a)

z(t)
ind = gind
inter = g(t)
z(t)
(cid:98)p(t)

i

i

inter(vi) ∈ R2,
+ z(t)

i

(3c)

ind + z(t)

inter ∈ R2,

inter(·) are MLPs. q(t)

= (cid:98)p(t−1)
where gind(·) and g(t)
is the hidden
state of the i-th actor’s LSTM at time t, which is intialized
with q(0)
i = [hi; zi], hi from NMMP (1b), zi is gaussian
noise to encourage diversity. The LSTM gLSTM(·) predicts
the future movements in time order. (3a) predicts the future
trajectories of each individual actor based on its observed
trajectories; (3b) predicts the interaction component with
the interacted actor embedding vi; and (3c) provides the ﬁ-
nal predicted coordinate, which is the sum of the predicted
coordinate at the previous time stamp, and the predicted in-
dividual and interaction components. Note that instead of
using the absolute location, we predict the displacement to
previous moment, (cid:98)p(t)
, which generalizes better.
Discriminator. The discriminator classiﬁes a complete
trajectory to be real or fake. It uses an individual NMMP
module followed by a classiﬁer. For the ground-truth sam-
ples, the complete trajectory is [P−
i ], which should be
classiﬁed as real; for the generated samples, the complete
+
trajectory is [P−
i ], which should be classiﬁed as fake.
The probability to be real is obtained as

i − (cid:98)p(t−1)

i ; P+

i ; (cid:98)P

i

(3b)

pi = dcls(dNMMP(dLSTM(dMLP([P−

i ; (cid:98)P

+
i ])))),

where dMLP(·) denotes the MLP, dLSTM(·) is the LSTM
to aggregate the temporal information, dNMMP(·) is the
NMMP module, dcls(·) represents the classiﬁer.

4.1.2 Loss function

To train the model, we consider two losses for a scene: the
generator loss LG and the discriminator loss LD,

LG =

LD =

i∈1,2,...,N
(cid:88)

i∈1,2,...,N

(cid:88)

+
i − P+

i ||2
2,

||(cid:98)P

log(D([P−

i ; P+

i ]))

+ log(1 − D([P−

i ; (cid:98)P

+
i ])),

where D(·) produces the real probability of the complete
trajectory generated by the classiﬁer in discriminator. The
generator and the discriminator play a min-max game to get
more stochastic and realistic predictions.

4.2. Joint pedestrian and vehicle motion prediction
The joint pedestrian and vehicle prediction considers ur-
ban driving scenes, where both vehicles and pedestrians are
involved. The trait of this setting is that we need to consider
distinct motion patterns for vehicle and pedestrian, as well
as complicated environmental information, such as drivable
areas for vehicles. This setting ﬁts to autonomous driving.

4.2.1 System architecture

This system includes an individual branches and an inter-
active branch; see Figure 4. Since vehicles and pedestri-
ans have distinct motion behaviors, we use each individual
branch for the same type of actors. The individual branch
predicts the future trajectory for each actor without consid-
ering the interaction. The interactive branch predicts an ad-
ditional compensation component by considering the inter-
actions between actors. We then combine the outputs from
both branches to obtain the ﬁnal predicted trajectory.

Individual branch. We predict the individual compo-
nent of the future trajectory for each individual actor. We
use ego-coordinate-system where the origin is the current

4.2.2 Loss function

To train the system, we consider two losses: one for out-
put from the individual branch and the other for the ﬁnal
combination; that is,

Lind =

||Ti (Zi,ind) − P+

i ||2
2,

Lﬁnal =

+
i − P+

i ||2
2,

||(cid:98)P

(cid:88)

i∈1,2,...,N
(cid:88)

i∈1,2,...,N

where Lind is the (cid:96)2 loss between the individual compo-
nent and the ground-truth future trajectory, and Lﬁnal is
the (cid:96)2 loss between the ﬁnal predictions and the ground-
truth future trajectory. We obtain the ﬁnal loss as, L =
λLind + (1 − λ)Lﬁnal. In the experiment, we set λ = 0.5.

5. Experiments

We validate the proposed network on two settings:
pedestrian motion prediction, and joint pedestrian and ve-
hicle motion prediction.

5.1. Comparison with SOTAs

Metrics. Following previous works [20, 1, 11], we con-
sider two evaluation metrics: average displacement error
(ADE) and ﬁnal displacement error (FDE). ADE is the av-
erage distance between all the predicted trajectory points
and the true points, and FDE is the distance between the
predicted ﬁnal destination and the true ﬁnal destination.

5.1.1 Pedestrian motion prediction

Datasets. We consider two public datasets: ETH-UCY
and Stanford Drone. ETH-UCY dataset contains 5 sets,
ETH, HOTEL, UNIV, ZARA1 and ZARA2. They consist
of human trajectories with rich interactions, such as group
forming, dispersing, and collision avoidance. Following the
experimental setting in SGAN [11], we split the trajectories
into segments of 8s, where we use 0.4s as the time interval,
and use the ﬁrst 3.2 seconds (8 timestamps) to predict the
following 4.8 seconds (12 timestamps). We use the leave-
one-out approach, training on 4 sets and testing on the re-
maining set. Stanford Drone dataset is a crowd pedestrian
dataset, including 20 unique scenes on a university campus.
The coordinates of multiple actors’ trajectories are provided
in pixels. Following the standard data-split setting, we use
6356 samples and the same segment split as ETH-UCY.

Baselines. SLSTM [1] pools the hidden states with the
neighbors. SAT [34] formulates the trajectory sequence in
a spatial-temporal graph to capture the spatial and temporal
dynamics. CIDNN [38] models the crowd interactions with
the inner product and introduces a displacement prediction
module. SGAN [11] leverages adversarial learning to ﬁt the
uncertain human behavior and pools the hidden state with
all the other actors involved in the scene. Sophie [28] intro-
duces the attention mechanism discriminatively considering

Figure 4. The joint pedestrian and vehicle motion prediction sys-
tem based on NMMP (JMP-NMMP) predicts the future trajecto-
ries from two branches: the individual branch considers the indi-
vidual behavior of each actor, and the interactive branch considers
the interactions among actors.

position of each actor to reduce the inﬂuence of the start-
ing position and heading and focus on the motion pattern.
The individual branch follows encoder-decoder structure,
where both encoder and decoder are implemented by MLPs.
For the ith actor, the output of the individual branch is
the individual component of the future trajectory, Zi,ind ∈
R2×Tpred, represented in its ego-coordinate-system.

Interactive branch. We adopt the NMMP module to
predict the interaction component of the future trajectory
for each actor. Since we need to consider all the actors col-
laboratively, we use a global coordinate system. For exam-
ple, we could consider the position of a self-driving vehicle
(SDV) as the origin. We input all the actors’ observed tra-
jectories to the NMMP module, which considers the inter-
actions and then outputs the interacted actor embedding vi
for the ith actor. To further model the complicated environ-
mental information, an additional 2D bird’s-eye-view scene
map is introduced. Such a rasterized scene image is impor-
tant as it provides prior knowledge about the trafﬁc condi-
tion and rules. Following the setting in [18], we rasterize
the scene information to a RGB image; see the rasterization
details in Appendix. We use MobileNet-V2 [29] to extract
scene embedding, S, from the RGB image. We then aggre-
gate the interacted actor embeddding and the scene embed-
ding through MLPs to obtain the output of the interactive
branch. The interaction component of the future trajectory
for the ith actor Zi,inter = MLP ([vi, S]) ∈ R2×Tpred .

Finally, we combine the outputs from both the individ-
ual branch and the interactive branch, and obtain the overall
future trajectory. The future trajectory for the ith actor is

+
i = Ti (Zi,ind) + Zi,inter ∈ R2×Tpred ,
(cid:98)P
where Ti (·) is the transform from the ego-coordinate-
system of the ith actor to the global coordinate system.

Table 1. Quantitative results on ETH-UCY dataset. We present ADE/FDE in meters. Given previous 8 (3.2s), predicting future 12 (4.8s).

DATASET

SLSTM

SAT

CIDNN

SGAN

SOPHIE

S-BIGAT MATF GAN

STGAT

PMP-NMMP

ETH
HOTEL
UNIV
ZARA1
ZARA2

1.09/2.35
0.79/1.76
0.67/1.40
0.47/1.00
0.56/1.17

1.39/2.39
2.51/2.91
1.25/2.54
1.01/2.17
0.88/1.75

1.25/2.32
1.31/2.36
0.90/1.86
0.50/1.04
0.51/1.07

0.87/1.62
0.67/1.37
0.76/1.52
0.35/0.68
0.42/0.84

0.70/1.43
0.76/1.67
0.54/1.24
0.30/0.63
0.38/0.78

0.69/1.29
0.49/1.01
0.55/1.32
0.30/0.62
0.36/0.75

1.01/1.75
0.43/0.80
0.44/0.91
0.26/0.45
0.26/0.57

0.65/1.12
0.35/0.66
0.52/1.10
0.34/0.69
0.29/0.60

OURS

0.61/1.08
0.33/0.63
0.52/1.11
0.32/0.66
0.29/0.61

BASELINES

AVG

0.72/1.54

1.41/2.35

0.89/1.73

0.61/1.21

0.54/1.15

0.48/1.00

0.48/0.90

0.43/0.83

0.41/0.82

the impact of other actors. S-BiGAT [16] introduces GAT
to represents the social interactions with a global embed-
ding. STGAT [14] captures the temporal interactions with an
additional LSTM. Desire [20] takes advantage of the varia-
tional auto-encoders and inverse optimal control to generate
and rank predictions. MATF GAN [40] uses shared convo-
lution operations to model the spatial interactions.

Results. Table 1 shows the comparison between the pro-
posed PMP-NMMP against several previous state-of-the-art
methods on ETH-UCY. We see that (i) While most of the
previous SOTAs [28, 16, 40] are superior on average but
perform poorly on some sets, our model is best on 2 sets
and compatible on other 3 sets; (ii) PMP-NMMP improves
the state-of-the-art to 0.41m and 0.82m on ADE and FDE
on average. Table 2 shows the performance comparison
on Stanford Drone. We see that the proposed PMP-NMMP
signiﬁcantly outperforms the other competitive methods.
The intuition is that it uses the NMMP module to effectively
capture the social interactions in the crowd scenario.

Table 2. Quantitative results on Stanford Drone dataset. ADE and
FDE are reported in pixels.

METHOD

ADE

FDE

SFORCES
SLSTM
SGAN
DESIRE
SOPHIE

36.38
31.19
27.25
19.25
16.27
MATF GAN 22.59
14.67
PMP-NMP

58.14
56.97
41.44
34.05
29.38
33.53
26.72

Qualitative comparison. Figure. 5 compares the pre-
dicted trajectories to the ground-truth trajectories. We
choose six scenarios from HOTEL set and show the ground-
truth trajectories (green line), our predictions (dashed red
line), and the SGAN baseline (dashed blue line). Our model
outperforms SGAN as the corresponding predictions are
closer to the ground-truth.

5.1.2 Joint motion prediction
Dataset. We create a joint pedestrian and vehicle motion
prediction dataset based on NuScenes [4]. NuScenes is an

autonomous driving dataset, which comprises 1000 scenes,
each 20s long and fully annotated with 3D bounding boxes.
We reorganize the dataset and downsample to avoid the
overlapping issue. In total, we select 3148 samples, where
1888 for training, 629 for validation and 631 for testing.
Each sample contains the ground-truth actors’ trajectory in-
formation and a 2D scene map. The scene map reﬂects
100 × 100m2 so that 50m in front of and from the back
the self-driving vehicle is rasterized. The pixel resolution is
0.2m and the image size is 500 × 500. The time interval is
0.1s and we forecast the future 3s (30 timestamps) trajecto-
ries from the previous 0.5s (5 timestamps) trajectories.

Table 3. Quantitative comparison on NuScenes dataset. Error met-
rics reported are ADE/FDE in meters. Given previous 5 (0.5s),
predicting the future 30 (3s).

METHOD

PEDESTRIANS VEHICLES

T(ms)

NOIMAGE
ALEXNET
ALEXNET-NMMP
JMP-NMMP-GAN
JMP-NMMP

0.41/0.81
0.39/0.79
0.38/0.78
0.38/0.78
0.34/0.71

1.77/3.87
1.71/3.79
1.59/3.72
1.65/3.81
1.54/3.55

1.54
23.3
1.98
6.23
3.76

Baselines. ALEXNET [8] extracts the visual cues of
the rasterized actor-centric scene image with AlexNet [17]
and simultaneously and separately encodes and decodes the
prior trajectories with MLPs for each actor in the scene.
We exclude the images in ALEXNET, named NOIMAGE.
See Figure. 4, we add the NMMP module to ALEXNET
and use the SDV-centric scene image instead of multiple
actor-centric scene images, named ALEXTNET-NMMP;
we substitute the AlexNet with MobileNet-V2 [29] in
ALEXTNET-NMMP, named JMP-NMMP; we further in-
troduce GAN as PMP-NMMP, named JMP-NMMP-GAN.
Results. Table 3 shows quantitative comparison. We
see that (i) JMP-NMMP consistently performs the best
for both vehicles and pedestrians, indicating the superior-
ity of the proposed system; (ii) ALEXNET-NMMP is bet-
ter than ALEXNET, indicating that the social interactions
are crucial when forecasting the future movements; (iii)
ALEXNET is better than NOIMAGE and JMP-NMMP is
better than ALEXNET-NMMP, indicating the necessity and

Table 4. We evaluate the NMMP module by applying it in multi-
ple trajectory encoding phases in generator (G) and discriminator
(D). (cid:88)and - means with and without NMMP module respectively.
ADE/FDE are reported in meters.

G D

- -
(cid:88)-
(cid:88)(cid:88)

ETH

HOTEL

UNIV

ZARA1

ZARA2

0.74/1.34
0.70/1.30
0.61/1.08

0.50/1.01
0.41/0.80
0.33/0.63

0.64/1.29
0.54/1.15
0.52/1.1

0.34/0.69
0.33/0.68
0.32/0.66

0.35/0.73
0.31/0.65
0.29/0.61

Table 5. The performance as a function of the number of iterations
in NMMP (K) on UNIV set.

K

1

3

ADE
FDE

0.55
1.16

0.54
1.16

5

0.52
1.11

7

0.56
1.20

scene, we propose the NMMP module.
In PMP-NMMP,
there are two trajectory encoding phases that use the NMMP
module: one in the generator and the other one in the dis-
criminator. Table 4 compares three models. The ﬁrst one
is the baseline, where we adopt the pooling module in [11]
instead of the NMMP module to model the social interac-
tions. The second one substitutes the pooling module in the
generator with the NMMP module. The third one further
substitutes the pooling module in the discriminator with our
NMMP module. The stable gains on all the 5 sets shows the
strength of the NMMP module in modeling the interactions.
Effect of the number of iterations in NMMP. We ex-
plore the performance of NMMP with different number of
iterations on the most crowded set (UNIV), where pedes-
trian amounts ranges from 2 to 57 in a single scene. Table 5
shows the quantitative results. The performance gets bet-
ter, and then sharply worse with the increasing number of
iterations. The intuition is as follows. With the increasing
number of iterations, the NMMP module gets more capac-
ity to model the dense interactions; however, when there are
too many iterations, the actor embedding would be over-
smoothing, mixing local information and global context.

Table 6. The exploration of the decoder design on the UNIV set.
ADE/FDE are reported in meters.

INDIVIDUAL

FINAL ADE/FDE

SINGLE
DOUBLE
DOUBLE

(cid:88)

(cid:88)
(cid:88)

0.56/1.19
0.52/1.11
0.76/1.17

Effect of decoder structure in PMP-NMMP. We ex-
plore the design of the decoder structure from two aspects.
The ﬁrst aspect compares the single-decoder structure and
the double-decoder structure. The single-decoder structure
fuses the individual trajectory embedding and interacted ac-
tor embedding in the feature domain, and then feeds the
unifying features to a single decoder to predict the ﬁnal tra-
jectory; the double structure apply the individual and in-

Figure 5. Predicted trajectory comparison in the pedestrian setting.
The baseline is SGAN [11].

Figure 6. Predicted trajectory comparison in the joint setting. The
baseline is ALEXNET [8].

capacity of scene image; (iv) GAN does not bring gains
but add time cost, indicating the trafﬁc actor behaviours are
much certain and the GAN interferes the optimization; (v)
SDV-centric image highly reduces computational cost and
the ﬁnal running time is sufﬁciently fast for real-time use.

Qualitative comparison. Predictions are presented in
Figure. 6. We choose four samples in the complicated urban
street scenarios and only present the moving actors trajec-
tories. Our predictions (red) are more closer to the ground-
truth (green) than the baseline (blue) especially in the mo-
tion changing cases.

5.2. Ablation study

Since pedestrian motion prediction system and joint mo-
tion prediction system are the systems with small variations
and have consistent performance, so here we present the
analysis of PMP-NMMP as a representative.

Effect of NMMP module in PMP-NMMP. To better
model the social interactions between actors involved in the

teractive decoders to generate two outputs, which add up
to the ﬁnal trajectory. The comparison between the ﬁrst and
second rows in Table 6 shows that the double-decoder struc-
ture outperforms the single-decoder structure, indicating the
double-decoder structure can better model the impacts from
other actors involved in the scene. The second aspect com-
pares the output of the individual branch and the ﬁnal output
in the double-decoder structure. The comparison between
the second and third rows in Table 6 shows that the ﬁnal
output outperforms the output of the individual branch, in-
dicating the importance of the interactive branch.

5.3. Interpretability exploration

Visualization of interaction embeddings in NMMP.
Figure 9 shows the visualization of interactions in the em-
bedding domain and the corresponding actor pairs in the
spatial domain in HOTEL set. The interaction embeddings
eij are mapped to 2D coordinates via t-SNE and shown in
the ﬁrst column. We randomly pick three pairs of close in-
teraction samples in the embedding space, which are col-
ored blue and red, and plot the corresponding trajectory
pairs in the followed two columns. The full line denotes
the observed trajectories, while the dash line represents the
future trajectories. We see that (i) close interaction embed-
dings in the embedding domain lead to similar trajectory
relations between associated actors in the spatial domain.
For example, in the ﬁrst row, pedestrians are walking up-
wards in parallel; in the third row, pedestrians are walking
toward opposite directions; (ii) different interaction types
between actors’ trajectory in the spatial domain are encoded
to different positions in the embedding domain. The top two
rows are close; both are far from the last row in embedding
space. The trajectories show the interaction types of the top
two rows are similar and quite different from the last row.

Figure 7. Close interaction embeddings in the embedding domain
lead to similar trajectory relations between the corresponding actor
pairs in the spatial domain. The ﬁrst column is the visualization of
interaction embeddings, where each dot represents an interaction
and corresponds to one spatial-domain plot in the right columns.

Figure 8. The ADE and FDE normalization ratio over pedestrian
amounts in the scene. The x-axis is the total pedestrian amount in
the scene. The y-axis is the ADE (Red) and FDE (Blue) normal-
ization ratio compared with SGAN [11].

Performances in crowd scenarios. We split 5 sets of
ETH-UCY dataset according to the pedestrian amounts in
the scene. We evaluate the proposed PMP-NMMP and the
SGAN [11] baseline on this re-split dataset. Then we count
the corresponding ADE/FDE normalization ratio

rADE/FDE =

SGANADE/FDE − NMMPADE/FDE
SGANADE/FDE

for the pedestrians in each split. A positive rADE/FDE indi-
cates that PMP-NMMP outperforms SGAN.

Figure 8 shows the ADE/FDE normalization ratio as a
function of the number of pedestrian in the scene. We see
that (i) the normalization ratio is always positive, indicating
PMP-NMMP consistently outperforms SGAN; and (ii) the
normalization ratio increases as the numbers of pedestrian
gets larger, indicating the advantage of NMMP over SGAN
is larger. The intution behind is that the NMMP module has
a larger capacity to handle the crowd scenarios, where the
social interactions are abundant.
6. Conclusions

In this work, we propose NMMP, a novel module explic-
itly modeling the interactions between the trafﬁc actors in
a scene. Unlike prior work simply tackling a single motion
prediction task, we design NMMP based systems for pedes-
trian motion prediction, and joint pedestrian and vehicle
motion prediction. Both outperforms prior state-of-the-art
methods across several widely used benchmarks. Through
our evaluations and visualizations, we show that NMMP is
able to capture the interaction patterns and our systems can
predict precise trajectories in different scenarios.

Acknowledgements This work is
supported by the
National Key Research and Development Program of
China (2019YFB1804304), NSFC (61521062), 111 plan
(B07022), and STCSM (18DZ2270700).

References

[1] Alexandre Alahi, Kratarth Goel, Vignesh Ramanathan,
Alexandre Robicquet, Li Fei-Fei, and Silvio Savarese. So-
cial lstm: Human trajectory prediction in crowded spaces. In
Proceedings of the IEEE conference on computer vision and
pattern recognition, pages 961–971, 2016. 1, 2, 5

[2] Gianluca Antonini, Michel Bierlaire, and Mats Weber. Dis-
crete choice models of pedestrian walking behavior. Trans-
portation Research Part B: Methodological, 40(8):667–687,
2006. 2

[3] Mayank Bansal, Alex Krizhevsky, and Abhijit Ogale. Chauf-
feurnet: Learning to drive by imitating the best and synthe-
sizing the worst. arXiv preprint arXiv:1812.03079, 2018. 1,
2

[4] Holger Caesar, Varun Bankiti, Alex H Lang, Sourabh Vora,
Venice Erin Liong, Qiang Xu, Anush Krishnan, Yu Pan,
Giancarlo Baldan, and Oscar Beijbom. nuscenes: A mul-
arXiv preprint
timodal dataset for autonomous driving.
arXiv:1903.11027, 2019. 6

[5] Sergio Casas, Wenjie Luo, and Raquel Urtasun. Intentnet:
Learning to predict intention from raw sensor data. In Con-
ference on Robot Learning, pages 947–956, 2018. 1, 2

[6] Fang-Chieh Chou, Tsung-Han Lin, Henggang Cui, Vladan
Radosavljevic, Thi Nguyen, Tzu-Kuo Huang, Matthew
Niedoba, Jeff Schneider, and Nemanja Djuric. Predicting
motion of vulnerable road users using high-deﬁnition maps
and efﬁcient convnets. arXiv preprint arXiv:1906.08469,
2019. 1, 2

[7] Nachiket Deo and Mohan M Trivedi. Convolutional social
In Proceedings
pooling for vehicle trajectory prediction.
of the IEEE Conference on Computer Vision and Pattern
Recognition Workshops, pages 1468–1476, 2018. 1, 2

[8] Nemanja Djuric, Vladan Radosavljevic, Henggang Cui, Thi
Nguyen, Fang-Chieh Chou, Tsung-Han Lin, and Jeff Schnei-
der. Short-term motion prediction of trafﬁc actors for au-
tonomous driving using deep convolutional networks. arXiv
preprint arXiv:1808.05819, 2018. 1, 2, 6, 7

[9] S´ebastien Forestier, Yoan Mollard, Damien Caselli, and
Pierre-Yves Oudeyer. Autonomous exploration, active learn-
ing and human guidance with open-source poppy humanoid
robot platform and explauto library. 2016. 1

[10] Justin Gilmer, Samuel S Schoenholz, Patrick F Riley, Oriol
Vinyals, and George E Dahl. Neural message passing for
quantum chemistry. In Proceedings of the 34th International
Conference on Machine Learning-Volume 70, pages 1263–
1272. JMLR. org, 2017. 2, 3

[11] Agrim Gupta, Justin Johnson, Li Fei-Fei, Silvio Savarese,
and Alexandre Alahi. Social gan: Socially acceptable tra-
jectories with generative adversarial networks. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 2255–2264, 2018. 1, 2, 5, 7, 8

[12] Will Hamilton, Zhitao Ying, and Jure Leskovec.

Induc-
tive representation learning on large graphs. In Advances in
Neural Information Processing Systems, pages 1024–1034,
2017. 2

[13] Dirk Helbing and Peter Molnar. Social force model for
pedestrian dynamics. Physical review E, 51(5):4282, 1995.
2

[14] Yingfan Huang, HuiKun Bi, Zhaoxin Li, Tianlu Mao, and
Zhaoqi Wang. Stgat: Modeling spatial-temporal interactions
for human trajectory prediction. In International Conference
on Computer Vision (ICCV), 2019. 1, 2, 6

[15] Thomas Kipf, Ethan Fetaya, Kuan-Chieh Wang, Max
Welling, and Richard Zemel. Neural relational inference for
interacting systems. In International Conference on Machine
Learning, pages 2693–2702, 2018. 1, 2, 3

[16] Vineet Kosaraju, Amir Sadeghian, Roberto Mart´ın-Mart´ın,
Ian Reid, S Hamid Rezatoﬁghi, and Silvio Savarese. Social-
bigat: Multimodal trajectory forecasting using bicycle-gan
and graph attention networks. In Advances in Neural Infor-
mation Processing Systems (NeurIPS) 32, 2019. 1, 2, 5, 6

[17] Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hinton.
Imagenet classiﬁcation with deep convolutional neural net-
In Advances in neural information processing sys-
works.
tems, pages 1097–1105, 2012. 6

[18] Laura Leal-Taix´e, Michele Fenzi, Alina Kuznetsova, Bodo
Rosenhahn, and Silvio Savarese. Learning an image-based
In Proceed-
motion context for multiple people tracking.
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 3542–3549, 2014. 5

[19] Jae-Gil Lee, Jiawei Han, and Kyu-Young Whang. Trajectory
In Proceed-
clustering: a partition-and-group framework.
ings of the 2007 ACM SIGMOD international conference on
Management of data, pages 593–604. ACM, 2007. 2
[20] Namhoon Lee, Wongun Choi, Paul Vernaza, Christopher B
Choy, Philip HS Torr, and Manmohan Chandraker. Desire:
Distant future prediction in dynamic scenes with interacting
agents. In Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition, pages 336–345, 2017. 2, 5,
6

[21] Guohao Li, Matthias Muller, Ali Thabet, and Bernard
Ghanem. Deepgcns: Can gcns go as deep as cnns? In Pro-
ceedings of the IEEE International Conference on Computer
Vision, pages 9267–9276, 2019. 2

[22] Maosen Li, Siheng Chen, Xu Chen, Ya Zhang, Yanfeng
Wang, and Qi Tian. Actional-structural graph convolutional
networks for skeleton-based action recognition. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 3595–3603, 2019. 1, 2

[23] Yujia Li, Daniel Tarlow, Marc Brockschmidt, and Richard
arXiv

Zemel. Gated graph sequence neural networks.
preprint arXiv:1511.05493, 2015. 2

[24] Ramin Mehran, Alexis Oyama, and Mubarak Shah. Ab-
normal crowd behavior detection using social force model.
In 2009 IEEE Conference on Computer Vision and Pattern
Recognition, pages 935–942. IEEE, 2009. 2

[25] Brendan Morris and Mohan Trivedi. Learning trajectory pat-
terns by clustering: Experimental studies and comparative
evaluation. In 2009 IEEE Conference on Computer Vision
and Pattern Recognition, pages 312–319. IEEE, 2009. 2
[26] Sufeng Niu, Siheng Chen, Hanyu Guo, Colin Targonski,
Melissa C Smith, and Jelena Kovaˇcevi´c. Generalized value

[40] Tianyang Zhao, Yifei Xu, Mathew Monfort, Wongun Choi,
Chris Baker, Yibiao Zhao, Yizhou Wang, and Ying Nian Wu.
Multi-agent tensor fusion for contextual trajectory predic-
tion. In Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition, pages 12126–12134, 2019.
1, 2, 6

iteration networks: Life beyond lattices.
AAAI Conference on Artiﬁcial Intelligence, 2018. 2

In Thirty-Second

[27] Siyuan Qi, Wenguan Wang, Baoxiong Jia, Jianbing Shen,
and Song-Chun Zhu. Learning human-object interactions by
graph parsing neural networks. In Proceedings of the Euro-
pean Conference on Computer Vision (ECCV), pages 401–
417, 2018. 1, 2

[28] Amir Sadeghian, Vineet Kosaraju, Ali Sadeghian, Noriaki
Hirose, Hamid Rezatoﬁghi, and Silvio Savarese. Sophie:
An attentive gan for predicting paths compliant to social and
physical constraints. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1349–
1358, 2019. 1, 2, 5, 6

[29] Mark Sandler, Andrew Howard, Menglong Zhu, Andrey Zh-
moginov, and Liang-Chieh Chen. Inverted residuals and lin-
ear bottlenecks: Mobile networks for classiﬁcation, detec-
tion and segmentation. arXiv preprint arXiv:1801.04381,
2018. 5, 6

[30] Franco Scarselli, Marco Gori, Ah Chung Tsoi, Markus Ha-
genbuchner, and Gabriele Monfardini. The graph neural
IEEE Transactions on Neural Networks,
network model.
20(1):61–80, 2008. 2

[31] Waqas Sultani, Chen Chen, and Mubarak Shah. Real-world
In Proceedings
anomaly detection in surveillance videos.
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 6479–6488, 2018. 1

[32] I Sutskever, O Vinyals, and QV Le. Sequence to sequence

learning with neural networks. Advances in NIPS, 2014. 2

[33] Petar Veliˇckovi´c, Guillem Cucurull, Arantxa Casanova,
Adriana Romero, Pietro Lio, and Yoshua Bengio. Graph at-
tention networks. arXiv preprint arXiv:1710.10903, 2017.
2

[34] Anirudh Vemula, Katharina Muelling, and Jean Oh. Social
In 2018
attention: Modeling attention in human crowds.
IEEE International Conference on Robotics and Automation
(ICRA), pages 1–7. IEEE, 2018. 1, 2, 5

[35] Xiaogang Wang, Keng Teck Ma, Gee-Wah Ng, and W Eric L
Grimson. Trajectory analysis and semantic region modeling
using nonparametric hierarchical bayesian models. Interna-
tional journal of computer vision, 95(3):287–312, 2011. 2

[36] Xiaogang Wang, Xiaoxu Ma, and W Eric L Grimson.
Unsupervised activity perception in crowded and compli-
IEEE
cated scenes using hierarchical bayesian models.
Transactions on pattern analysis and machine intelligence,
31(3):539–555, 2008. 2

[37] Sanghyun Woo, Dahun Kim, Donghyeon Cho, and In So
Kweon. Linknet: Relational embedding for scene graph. In
Advances in Neural Information Processing Systems, pages
558–568, 2018. 2

[38] Yanyu Xu, Zhixin Piao, and Shenghua Gao. Encoding crowd
interaction with deep neural network for pedestrian trajec-
In Proceedings of the IEEE Conference
tory prediction.
on Computer Vision and Pattern Recognition, pages 5275–
5284, 2018. 2, 5

[39] Jianwei Yang, Jiasen Lu, Stefan Lee, Dhruv Batra, and Devi
In Pro-
Parikh. Graph r-cnn for scene graph generation.
ceedings of the European Conference on Computer Vision
(ECCV), pages 670–685, 2018. 2

Further experimental analysis

Rasterization. Given the global coordinates and the
headings of each trafﬁc actor involved in the scene and the
map marked the drivable areas. We encode each actor type
into the corresponding vector layer. White represents driv-
able areas, and vice versa. Vehicles are in yellow polygons
while the self-driving vehicle (SDV) is in red and pedes-
trians in green. Other actors are colored black. Besides,
the actors’ histories are represented with reduced level of
brightness in the same color. The vector layers of the same
actor are rasterized one by one in time order, resulting in the
fading effect. Then the vector layers are rasterized one by
one on top of each other, in the order from drivable areas to
trafﬁc actors such as vehicles and pedestrians, resulting in a
RGB scene image.

Visualization of interaction embeddings in JMP-
NMMP. Figure. 10 shows the visualization of interactions
in the embedding domain and the corresponding actor pairs
in the spatial domain in the joint motion prediction scenar-
ios. Similar to interaction embedding visualization in Fig-
ure 9, the interaction embeddings eij are mapped to 2D
coordinates via t-SNE and shown in the ﬁrst column. We
randomly pick three pairs of close interaction samples in
the embedding space, which are colored red and blue, and
plot the corresponding trajectory pairs in the followed two
columns with dots. We get the similar conclusions as the
interaction embedding analysis in pedestrian motion predic-
tion setting. We see that (i) close interaction embeddings in

Figure 9. Rasterized scene images. The red box is the SDV, the
yellow boxes are the vehicles, and the green dots are the pedes-
trians. As time goes back, the brightness of the boxes darkens,
resulting in the fading tails.

Figure 10. The ﬁrst column is the t-SNE visualization of inter-
action embeddings, where each dot represents an interaction and
correspond to spatial-domain plots. The close red and blue dots
in the ﬁrst column represent close interaction embeddings in the
embedding domain. The right two columns are the corresponding
trafﬁc scenes. And the middle column is the corresponding spatial
plot of the red dot. The trajectories of the interacted trafﬁc actors
are colored in red. Similarly the right column presents spatial plot
of the blue dot.

the embedding domain lead to similar trajectory relations
between associated actors in the spatial domain. For exam-
ple, in the ﬁrst row, pedestrians are following the front one
and moving slowly to pass the road; in the second and third
rows, pedestrians are obstructed by the moving vehicles on
the road; (ii) different interaction types between actors’ tra-
jectory in the spatial domain are encoded to different posi-
tions in the embedding domain. The bottom two rows are
close; both are far from the top row in embedding space.
The trajectories show the interaction types of the top two
rows are similar and quite different from the last row.

