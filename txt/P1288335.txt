Fast, Simple Calcium Imaging Segmentation
with Fully Convolutional Networks

Aleksander Klibisz1, Derek Rose1, Matthew Eicholtz1,
Jay Blundon2, and Stanislav Zakharenko2

1 Oak Ridge National Laboratory, Oak Ridge, TN 37831 USA
{klibisza,rosedc,eicholtzmr}@ornl.gov,
2 St. Jude Children’s Research Hospital, Memphis, TN 38105 USA
{jay.blundon,stanislav.zakharenko}@stjude.org

Abstract. Calcium imaging is a technique for observing neuron activity as a
series of images showing indicator fluorescence over time. Manually segment-
ing neurons is time-consuming, leading to research on automated calcium
imaging segmentation (ACIS). We evaluated several deep learning models for
ACIS on the Neurofinder competition datasets and report our best model:
U-Net2DS, a fully convolutional network that operates on 2D mean summary
images. U-Net2DS requires minimal domain-specific pre/post-processing and
parameter adjustment, and predictions are made on full 512×512 images
at ≈9K images per minute. It ranks third in the Neurofinder competition
(F1 =0.57) and is the best model to exclusively use deep learning. We also
demonstrate useful segmentations on data from outside the competition. The
model’s simplicity, speed, and quality results make it a practical choice for
ACIS and a strong baseline for more complex models in the future.

Keywords: Calcium imaging, fully convolutional networks, deep learning,
microscopy segmentation

1 Introduction

Calcium imaging recordings show neurons from a lab specimen illuminating over time,
ranging from minutes to hours in length with resolution on the order of 512×512
pixels. Identifying the neurons is one step in a workflow that typically involves motion
correction and peak identification with the goal of understanding the activity of large
populations of neurons. Given a 3D spatiotemporal (height, width, time) series of
images, an ACIS model produces a 2D binary mask identifying neuron pixels.

This manuscript has been authored by UT-Battelle, LLC under Contract No. DE-AC05-
00OR22725 with the U.S. Department of Energy. The United States Government retains
and the publisher, by accepting the article for publication, acknowledges that the United
States Government retains a non-exclusive, paid-up, irrevocable, worldwide license to
publish or reproduce the published form of this manuscript, or allow others to do so,
for United States Government purposes. The Department of Energy will provide public
access to these results of federally sponsored research in accordance with the DOE Public
Access Plan (http://energy.gov/downloads/doe-public-access-plan).

7
1
0
2
 
l
u
J
 
9
1
 
 
]

V
C
.
s
c
[
 
 
1
v
4
1
3
6
0
.
7
0
7
1
:
v
i
X
r
a

2

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

Until recently, popular ACIS models were mostly unsupervised and required
considerable assumptions about the data when making predictions. For example,
[8, 16, 17, 20] each require the expected number of neurons and/or their dimensions
to segment a new series. Moreover, many models were tested on different datasets,
making objective comparison difficult.

The ongoing Neurofinder competition [4] has nineteen labeled training datasets
and nine testing datasets. To our knowledge, this is the best benchmark for ACIS,
and the quantity of data makes it appealing for deep learning. Our best model for
the Neurofinder datasets is U-Net2DS, an adaptation of the fully convolutional U-Net
architecture [21] that takes 2D summary images as input. Compared to other models
that do not use deep learning, U-Net2DS requires minimal assumptions, parameter ad-
justment, and pre/post-processing when making predictions. The fully convolutional
architecture enables training on small windows and making predictions on full sum-
mary images. It ranks third in the Neurofinder competition and also shows robustness
to datasets for which it was not directly trained. The Keras [2] implementation and
trained weights are available at https://github.com/alexklibisz/deep-calcium.

2 Related Work

Deep learning has been explored extensively for medical image analysis, covered
thoroughly in [10]. Fully convolutional networks with skip connections were developed
for semantic segmentation of natural images [11] and applied to 2D medical images
[21] and 3D volumes [3, 13]. An analysis of the role of skip connections in fully
convolutional architectures for biomedical segmentation is offered by [5].

ACIS models can be grouped into several categories: matrix factorization, cluster-
ing, dictionary learning, and deep learning. In general, matrix factorization models ([12,
14,17–20]) consider a calcium imaging series as a matrix of spatial and temporal compo-
nents and propose methods for extracting the signals. Clustering models ([8,22]) define
similarity measures for pairs of pixels and divide them using partitioning algorithms.
Dictionary learning models ([16, 18]) extract or generate neuron templates and use
them to match new neurons. Finally, deep learning models learn hierarchies of relevant
neuron features from labeled datasets. The deep networks proposed by [1] use 2D and
3D convolutions with some pre/post-processing, and [6] uses 2D convolutions. Both use
fully-connected classification layers with fixed-size sliding window inputs and outputs.

3 Data and Metrics

3.1 Calcium Imaging Datasets

The Neurofinder [4] training datasets contain 60K images with 7K neurons labeled by
researchers at four labs with various experimental settings. Testing labels are withheld
and submissions are evaluated on the competition server. Dataset samples are shown
in Fig. 1 and Fig. 3. To complement this data, we included our own calcium imaging
datasets, referred to as the St. Jude datasets. They contain GCaMP6f-expressing
neurons from the auditory cortex, a cortical region not represented in Neurofinder,

Fast, Simple Calcium Imaging Segmentation

3

Fig. 1. 200×200 cropped mean summary images from four Neurofinder training datasets.
Ground truth and predicted neurons are outlined in green and red, respectively. Titles
denote the ground truth number of neurons and precision and recall metrics for predictions.

and have bounding box ground truth masks instead of precise outlines. Neurofinder
and St. Jude datasets are motion-corrected, 16-bit TIFFs with 512×512 resolution
and length ranging from 1800 to 8000 images.

We found several noteworthy challenges in the Neurofinder datasets. They are
highly heterogeneous in appearance, making it difficult to define a characteristic
neuron. Images have highly variable brightness with mean pixel values ranging from 57
to 2998 for individual datasets. The labels have a strong imbalance with an average of
12% of pixels labeled as neurons. Finally, labeling preference leaves the possibility for
inconsistent ground truth. For example, the 04.00 labels were optimized for a particular
type of experiment and might be considered inconsistent relative to other datasets.4

3.2 Summary Images

A common mode of visualization for calcium imaging is a 2D summary image, created
by applying a function to each pixel across all frames to flatten the time dimension.
Similar to [1, 6], we found mean summary images produced a clear picture of most
neurons with low computational cost. Examples are shown in Fig. 1 and Fig. 3. Other
summary functions include the maximum, minimum, and standard deviation.

3.3 Evaluation Metrics

The Neurofinder competition measures F1, precision, recall, inclusion, and exclusion,
with submissions ranked by the mean F1 score across all test datasets. Precision and
recall are computed by matching each ground truth neuron to the spatially nearest
predicted neuron without replacement. In contrast to the same pixelwise metrics, one
predicted neuron may only correspond to a single ground truth neuron, even if the pre-
dicted neuron’s region encompasses multiple ground truth neurons. Inclusion and exclu-
sion quantify the structural similarity of matched ground truth and predicted neurons.5

4 See discussion: https://github.com/codeneuro/neurofinder/issues/25
5 Details and implementation: https://github.com/codeneuro/neurofinder-python

4

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

Fig. 2. U-Net2DS architecture. Numbers alongside blocks of layers indicate the number of
convolutional filters, convolutional-transpose filters, and dropout probability.

4 Proposed Models

4.1 U-Net with 2D Summary Images

Architecture The fully convolutional U-Net architecture [21] has four convolu-
tion / max-pooling blocks that reduce dimensionality followed by four convolution
/ transpose-convolution (deconvolution) blocks to restore input dimensionality. A
ReLU activation follows each convolutional layer and skip-connections pass the output
from each convolution / max-pooling block to corresponding convolution / transpose-
convolution blocks via filter concatenation. U-Net2DS makes small modifications to the
original U-Net to reduce overfitting. We added zero padding to each convolutional layer,
reduced the number of filters at each convolutional layer by 50%, added batch normal-
ization [7] after each convolutional layer, and increased dropout. The final layers are a
1×1 convolution with two filters followed by a softmax activation, producing a h×w×
2-channel mask, where the two channels are the probabilities of each pixel belonging to
a neuron or background. U-Net2DS has 7.8M parameters and is illustrated in Fig. 2.

Training We trained a single U-Net2DS on all Neurofinder training datasets. Each
summary image was normalized by subtracting its mean and dividing by its standard
deviation. For each dataset, we combined all of the neuron masks into a single mask
and removed overlapping and adjacent pixels belonging to different neurons to pre-
serve the true number of independent neurons. We used the top 75% of each summary
image for training and bottom 25% for validation. We sampled random batches of
twenty 128×128 image and mask windows, ensuring each window contained a neuron,
and applied random rotations and flips. We trained for ten epochs with 100 training
steps per epoch using the Adam optimizer [9] with a 0.002 learning rate. After each
epoch, we made full-image predictions on the validation data and computed the
Neurofinder F1 metric. We saved weights when the mean F1 improved. Pixelwise
F1 plateaued around 0.7 and Neurofinder F1 around 0.85. Training on an NVIDIA
Titan-X GPU took under half an hour.

Loss Function On average, the 128×128 training windows contained 9% neuron
pixels. This imbalance led us to consider the modified Dice coefficient (MDC) loss

Fast, Simple Calcium Imaging Segmentation

5

Fig. 3. 200 × 200 cropped mean summary images from Neurofinder test and St. Jude
datasets with number of predicted neurons, precision, and recall in titles. Ground truth and
predicted neurons are outlined in green and red, respectively. Ground truth for Neurofinder
test data is not publicly available.

function [13]. We compared MDC to standard logarithmic loss (LL) and found higher
pixelwise recall with MDC, but the average test F1 for LL was consistently better. LL
computes each pixel’s loss independently, which allows weighting for recall or precision.
We experimented with this by multiplying false negative pixel losses between 2×
and 10× and saw increased pixelwise recall but lower F1. We ultimately found that
standard LL resulted in the best F1 scores.

Prediction Full-image prediction was implemented by reshaping U-Net2DS to take
512×512 inputs. This change simplified the implementation and eliminated mask
tiling artifacts that were present when using sliding windows. We found test-time
augmentation consistently improved the mean F1. This consists of averaging predic-
tions for eight rotations and reflections of the summary image. Given raw TIFF files,
the summaries and predictions are computed at ≈9K images per minute.

Results on Neurofinder and St. Jude Datasets As of July 2017, the top-
scoring Neurofinder submission is an ensemble of HNCcorr [22], which clusters pixels
based on correlation over time, and Conv2D [6], a convolutional neural network
with 40×40 input and 20×20 output windows. Second and fourth place use matrix
factorization methods from [16, 17]. U-Net2DS ranks third and is the highest-scoring
model to exclusively use deep learning. Table 1 and Fig. 4 compare the top models’
F1, precision, and recall metrics. Models that explicitly use temporal information
considerably outperform those using summaries on the 02.00 and 02.01 datasets. This
might correspond to differences in ground truth labeling techniques acknowledged by
the Neurofinder competition.6 To evaluate robustness beyond the Neurofinder datasets,
we made predictions on the St. Jude datasets from the auditory cortex and had F1

6 From the website: For the 00 data, labels are derived from an anatomical marker that
indicates the precise location of each neuron and includes neurons with no activity. For
the 01, 02, 03, 04 data, labels were hand drawn or manually curated, using the raw data
and various summary statistics, some of which are biased towards active neurons.

6

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

Fig. 4. F1 for the top five models on each of the Neurofinder testing datasets.

Neurofinder Model
HNCcorr [22] + Conv2d [6]
Sourcery [15]
UNet2DS
Suite2p [17] + Donuts [16]
HNCcorr [22]

F1
0.617±0.122
0.583±0.139
0.569±0.160
0.550±0.127
0.492±0.180

Precision
0.702±0.170
0.599±0.197
0.618±0.235
0.578±0.156
0.618±0.169

Recall
0.602±0.197
0.629±0.168
0.609±0.185
0.568±0.181
0.479±0.268

Table 1. Mean and standard deviation of metrics for the top five Neurofinder models.

scores of 0.45 and 0.47 despite the datasets having been collected under different
experimental settings and from a region of the brain distinct from all training datasets.
Segmentations for two Neurofinder and two St. Jude datasets are shown in Fig. 3.

Deep Learning Insights for Calcium Imaging Data We initially considered
several pre-processing steps, including clipping maximum values to reduce noise and
stretching each series’ values to maximize contrast. These steps made it easier to
recognize neurons visually but did not improve performance. The heavy neuron-to-
background class-imbalance required attention in training. Some combinations of
learning rates and loss functions caused the network to predict 100% background early
on and never recover. It helped to increase window size and monitor the proportion of
neuron pixels predicted vs. the ground truth proportion. Finally, the training datasets
have semantic differences (labeling technique, part of brain, etc.). In some cases we
improved performance by training one model per dataset, but ultimately found it
more practical to train a single model on all data.

4.2 Other Deep Learning Models

U-Net2DS with Temporal Summaries By using mean summaries, U-Net2DS
ignores temporal information and has difficulty separating overlapping neurons. One
possible extension of U-Net2DS would add temporal inputs consisting of summary
images along the time-axis (i.e., YZ, XZ summaries).

Segmentation with Better 2D Summary Images A summary image that am-
plifies neurons and minimizes background should improve a model like U-Net2DS.
Taking inspiration from [22], we experimented with summaries that compute the
mean correlation and cosine distance of each pixel with its neighbors. Similar to [17],

Fast, Simple Calcium Imaging Segmentation

7

we found most neuron pixels had high similarity to nearby background pixels, making
neighborhood similarity a poor summary function.

Frame-by-frame Segmentation Summary images can preserve unwanted back-
ground noise, so it is plausible that a model trained to segment the series frame-
by-frame could recognize a neuron in frames where surrounding noise is minimized.
Unfortunately, it is difficult to select frames for training as most neurons blend with
background at arbitrary times and only 2D labels are given. We tried a contrast-based
weighting scheme that decreased loss for neurons with low contrast to surrounding
background and increased loss for high-contrast neurons. Still, we found most neurons
were more distinguishable in a mean summary than in their highest-contrast frames.
It seems the summary smooths areas that are otherwise noisy in single frames.

3D Convolutional Networks Intuitively, directly including inputs from the time
dimension should improve performance. We explored 3D convolutional networks, sim-
ilar to [1,3,13]. Because series have variable length, we found it difficult to determine
an input depth for all datasets. The 3D models were also prohibitively slow, taking
at least an hour to segment a single series.

5 Conclusion

Large labeled datasets like Neurofinder enable the use of deep learning for automated
calcium imaging segmentation. We demonstrated U-Net2DS, an adaptation of U-Net
[21] that uses mean summaries of calcium imaging series to quickly produce full seg-
mentation masks while minimizing parameter adjustment, pre/post-processing, and
assumptions for new datasets. Despite its relative simplicity, it is the best-performing
non-ensemble and deep learning model in the Neurofinder competition. We described
several other deep learning formulations for this problem, and we believe a model
that efficiently combines spatial and temporal information is a promising next step.

Acknowledgments This work was supported in part by the Department of Develop-
mental Neurobiology at St. Jude Children’s Research Hospital and by the U.S. Depart-
ment of Energy, Office of Science, Office of Workforce Development for Teachers and
Scientists (WDTS) under the Science Undergraduate Laboratory Internship program.

References

1. Apthorpe, N., Riordan, A., Aguilar, R., Homann, J., Gu, Y., Tank, D., Seung, H.S.:
Automatic neuron detection in calcium imaging data using convolutional networks. In:
Advances In Neural Information Processing Systems. pp. 3270–3278 (2016)

2. Chollet, F., et al.: Keras. https://github.com/fchollet/keras (2015)
3. C¸ i¸cek, ¨O., Abdulkadir, A., Lienkamp, S.S., Brox, T., Ronneberger, O.: 3d u-net: learning
dense volumetric segmentation from sparse annotation. In: International Conference on
Medical Image Computing and Computer-Assisted Intervention. pp. 424–432. Springer
(2016)

8

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

4. CodeNeuro.org: The neurofinder challenge. http://neurofinder.codeneuro.org/

(2016)

5. Drozdzal, M., Vorontsov, E., Chartrand, G., Kadoury, S., Pal, C.: The importance of skip
connections in biomedical image segmentation. In: International Workshop on Large-Scale
Annotation of Biomedical Data and Expert Label Synthesis. pp. 179–187. Springer (2016)
6. Gao, S.: Conv2d. https://github.com/iamshang1/Projects/tree/master/Advanced_

ML/Neuron_Detection (2016)

7. Ioffe, S., Szegedy, C.: Batch normalization: Accelerating deep network training by

reducing internal covariate shift. arXiv preprint arXiv:1502.03167 (2015)

8. Kaifosh, P., Zaremba, J.D., Danielson, N.B., Losonczy, A.: Sima: Python software for
analysis of dynamic fluorescence imaging data. Frontiers in neuroinformatics 8, 80 (2014)
9. Kingma, D., Ba, J.: Adam: A method for stochastic optimization. arXiv preprint

arXiv:1412.6980 (2014)

10. Litjens, G., Kooi, T., Bejnordi, B.E., Setio, A.A.A., Ciompi, F., Ghafoorian, M., van der
Laak, J.A., van Ginneken, B., S´anchez, C.I.: A survey on deep learning in medical
image analysis. arXiv preprint arXiv:1702.05747 (2017)

11. Long, J., Shelhamer, E., Darrell, T.: Fully convolutional networks for semantic
segmentation. In: Proceedings of the IEEE Conference on Computer Vision and Pattern
Recognition. pp. 3431–3440 (2015)

12. Maruyama, R., Maeda, K., Moroda, H., Kato, I., Inoue, M., Miyakawa, H., Aonishi,
T.: Detecting cells using non-negative matrix factorization on calcium imaging data.
Neural Networks 55, 11–19 (2014)

13. Milletari, F., Navab, N., Ahmadi, S.A.: V-net: Fully convolutional neural networks for
volumetric medical image segmentation. In: 3D Vision (3DV), 2016 Fourth International
Conference on. pp. 565–571. IEEE (2016)

14. Mukamel, E.A., Nimmerjahn, A., Schnitzer, M.J.: Automated analysis of cellular signals

from large-scale calcium imaging data. Neuron 63(6), 747–760 (2009)

15. Pachitariu, M.: Sourcery. https://github.com/marius10p/suite2p-for-neurofinder

(2016)

16. Pachitariu, M., Packer, A.M., Pettit, N., Dalgleish, H., Hausser, M., Sahani, M.:
Extracting regions of interest from biological images with convolutional sparse block
coding. In: Advances in Neural Information Processing Systems. pp. 1745–1753 (2013)
17. Pachitariu, M., Stringer, C., Schr¨oder, S., Dipoppa, M., Rossi, L.F., Carandini, M.,
Harris, K.D.: Suite2p: beyond 10,000 neurons with standard two-photon microscopy.
bioRxiv p. 061507 (2016)

18. Petersen, A., Simon, N., Witten, D.: Scalpel: Extracting neurons from calcium imaging

data. arXiv preprint arXiv:1703.06946 (2017)

19. Pnevmatikakis, E.A., Paninski, L.: Sparse nonnegative deconvolution for compressive
calcium imaging: algorithms and phase transitions. In: Advances in Neural Information
Processing Systems. pp. 1250–1258 (2013)

20. Pnevmatikakis, E.A., Soudry, D., Gao, Y., Machado, T.A., Merel, J., Pfau, D., Reardon,
T., Mu, Y., Lacefield, C., Yang, W., et al.: Simultaneous denoising, deconvolution, and
demixing of calcium imaging data. Neuron 89(2), 285–299 (2016)

21. Ronneberger, O., Fischer, P., Brox, T.: U-net: Convolutional networks for biomedical
image segmentation. In: International Conference on Medical Image Computing and
Computer-Assisted Intervention. pp. 234–241. Springer (2015)

22. Spaen, Q., Hochbaum, D.S., As´ın-Ach´a, R.: Hnccorr: A novel combinatorial approach
for cell identification in calcium-imaging movies. arXiv preprint arXiv:1703.01999 (2017)

Fast, Simple Calcium Imaging Segmentation
with Fully Convolutional Networks

Aleksander Klibisz1, Derek Rose1, Matthew Eicholtz1,
Jay Blundon2, and Stanislav Zakharenko2

1 Oak Ridge National Laboratory, Oak Ridge, TN 37831 USA
{klibisza,rosedc,eicholtzmr}@ornl.gov,
2 St. Jude Children’s Research Hospital, Memphis, TN 38105 USA
{jay.blundon,stanislav.zakharenko}@stjude.org

Abstract. Calcium imaging is a technique for observing neuron activity as a
series of images showing indicator fluorescence over time. Manually segment-
ing neurons is time-consuming, leading to research on automated calcium
imaging segmentation (ACIS). We evaluated several deep learning models for
ACIS on the Neurofinder competition datasets and report our best model:
U-Net2DS, a fully convolutional network that operates on 2D mean summary
images. U-Net2DS requires minimal domain-specific pre/post-processing and
parameter adjustment, and predictions are made on full 512×512 images
at ≈9K images per minute. It ranks third in the Neurofinder competition
(F1 =0.57) and is the best model to exclusively use deep learning. We also
demonstrate useful segmentations on data from outside the competition. The
model’s simplicity, speed, and quality results make it a practical choice for
ACIS and a strong baseline for more complex models in the future.

Keywords: Calcium imaging, fully convolutional networks, deep learning,
microscopy segmentation

1 Introduction

Calcium imaging recordings show neurons from a lab specimen illuminating over time,
ranging from minutes to hours in length with resolution on the order of 512×512
pixels. Identifying the neurons is one step in a workflow that typically involves motion
correction and peak identification with the goal of understanding the activity of large
populations of neurons. Given a 3D spatiotemporal (height, width, time) series of
images, an ACIS model produces a 2D binary mask identifying neuron pixels.

This manuscript has been authored by UT-Battelle, LLC under Contract No. DE-AC05-
00OR22725 with the U.S. Department of Energy. The United States Government retains
and the publisher, by accepting the article for publication, acknowledges that the United
States Government retains a non-exclusive, paid-up, irrevocable, worldwide license to
publish or reproduce the published form of this manuscript, or allow others to do so,
for United States Government purposes. The Department of Energy will provide public
access to these results of federally sponsored research in accordance with the DOE Public
Access Plan (http://energy.gov/downloads/doe-public-access-plan).

7
1
0
2
 
l
u
J
 
9
1
 
 
]

V
C
.
s
c
[
 
 
1
v
4
1
3
6
0
.
7
0
7
1
:
v
i
X
r
a

2

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

Until recently, popular ACIS models were mostly unsupervised and required
considerable assumptions about the data when making predictions. For example,
[8, 16, 17, 20] each require the expected number of neurons and/or their dimensions
to segment a new series. Moreover, many models were tested on different datasets,
making objective comparison difficult.

The ongoing Neurofinder competition [4] has nineteen labeled training datasets
and nine testing datasets. To our knowledge, this is the best benchmark for ACIS,
and the quantity of data makes it appealing for deep learning. Our best model for
the Neurofinder datasets is U-Net2DS, an adaptation of the fully convolutional U-Net
architecture [21] that takes 2D summary images as input. Compared to other models
that do not use deep learning, U-Net2DS requires minimal assumptions, parameter ad-
justment, and pre/post-processing when making predictions. The fully convolutional
architecture enables training on small windows and making predictions on full sum-
mary images. It ranks third in the Neurofinder competition and also shows robustness
to datasets for which it was not directly trained. The Keras [2] implementation and
trained weights are available at https://github.com/alexklibisz/deep-calcium.

2 Related Work

Deep learning has been explored extensively for medical image analysis, covered
thoroughly in [10]. Fully convolutional networks with skip connections were developed
for semantic segmentation of natural images [11] and applied to 2D medical images
[21] and 3D volumes [3, 13]. An analysis of the role of skip connections in fully
convolutional architectures for biomedical segmentation is offered by [5].

ACIS models can be grouped into several categories: matrix factorization, cluster-
ing, dictionary learning, and deep learning. In general, matrix factorization models ([12,
14,17–20]) consider a calcium imaging series as a matrix of spatial and temporal compo-
nents and propose methods for extracting the signals. Clustering models ([8,22]) define
similarity measures for pairs of pixels and divide them using partitioning algorithms.
Dictionary learning models ([16, 18]) extract or generate neuron templates and use
them to match new neurons. Finally, deep learning models learn hierarchies of relevant
neuron features from labeled datasets. The deep networks proposed by [1] use 2D and
3D convolutions with some pre/post-processing, and [6] uses 2D convolutions. Both use
fully-connected classification layers with fixed-size sliding window inputs and outputs.

3 Data and Metrics

3.1 Calcium Imaging Datasets

The Neurofinder [4] training datasets contain 60K images with 7K neurons labeled by
researchers at four labs with various experimental settings. Testing labels are withheld
and submissions are evaluated on the competition server. Dataset samples are shown
in Fig. 1 and Fig. 3. To complement this data, we included our own calcium imaging
datasets, referred to as the St. Jude datasets. They contain GCaMP6f-expressing
neurons from the auditory cortex, a cortical region not represented in Neurofinder,

Fast, Simple Calcium Imaging Segmentation

3

Fig. 1. 200×200 cropped mean summary images from four Neurofinder training datasets.
Ground truth and predicted neurons are outlined in green and red, respectively. Titles
denote the ground truth number of neurons and precision and recall metrics for predictions.

and have bounding box ground truth masks instead of precise outlines. Neurofinder
and St. Jude datasets are motion-corrected, 16-bit TIFFs with 512×512 resolution
and length ranging from 1800 to 8000 images.

We found several noteworthy challenges in the Neurofinder datasets. They are
highly heterogeneous in appearance, making it difficult to define a characteristic
neuron. Images have highly variable brightness with mean pixel values ranging from 57
to 2998 for individual datasets. The labels have a strong imbalance with an average of
12% of pixels labeled as neurons. Finally, labeling preference leaves the possibility for
inconsistent ground truth. For example, the 04.00 labels were optimized for a particular
type of experiment and might be considered inconsistent relative to other datasets.4

3.2 Summary Images

A common mode of visualization for calcium imaging is a 2D summary image, created
by applying a function to each pixel across all frames to flatten the time dimension.
Similar to [1, 6], we found mean summary images produced a clear picture of most
neurons with low computational cost. Examples are shown in Fig. 1 and Fig. 3. Other
summary functions include the maximum, minimum, and standard deviation.

3.3 Evaluation Metrics

The Neurofinder competition measures F1, precision, recall, inclusion, and exclusion,
with submissions ranked by the mean F1 score across all test datasets. Precision and
recall are computed by matching each ground truth neuron to the spatially nearest
predicted neuron without replacement. In contrast to the same pixelwise metrics, one
predicted neuron may only correspond to a single ground truth neuron, even if the pre-
dicted neuron’s region encompasses multiple ground truth neurons. Inclusion and exclu-
sion quantify the structural similarity of matched ground truth and predicted neurons.5

4 See discussion: https://github.com/codeneuro/neurofinder/issues/25
5 Details and implementation: https://github.com/codeneuro/neurofinder-python

4

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

Fig. 2. U-Net2DS architecture. Numbers alongside blocks of layers indicate the number of
convolutional filters, convolutional-transpose filters, and dropout probability.

4 Proposed Models

4.1 U-Net with 2D Summary Images

Architecture The fully convolutional U-Net architecture [21] has four convolu-
tion / max-pooling blocks that reduce dimensionality followed by four convolution
/ transpose-convolution (deconvolution) blocks to restore input dimensionality. A
ReLU activation follows each convolutional layer and skip-connections pass the output
from each convolution / max-pooling block to corresponding convolution / transpose-
convolution blocks via filter concatenation. U-Net2DS makes small modifications to the
original U-Net to reduce overfitting. We added zero padding to each convolutional layer,
reduced the number of filters at each convolutional layer by 50%, added batch normal-
ization [7] after each convolutional layer, and increased dropout. The final layers are a
1×1 convolution with two filters followed by a softmax activation, producing a h×w×
2-channel mask, where the two channels are the probabilities of each pixel belonging to
a neuron or background. U-Net2DS has 7.8M parameters and is illustrated in Fig. 2.

Training We trained a single U-Net2DS on all Neurofinder training datasets. Each
summary image was normalized by subtracting its mean and dividing by its standard
deviation. For each dataset, we combined all of the neuron masks into a single mask
and removed overlapping and adjacent pixels belonging to different neurons to pre-
serve the true number of independent neurons. We used the top 75% of each summary
image for training and bottom 25% for validation. We sampled random batches of
twenty 128×128 image and mask windows, ensuring each window contained a neuron,
and applied random rotations and flips. We trained for ten epochs with 100 training
steps per epoch using the Adam optimizer [9] with a 0.002 learning rate. After each
epoch, we made full-image predictions on the validation data and computed the
Neurofinder F1 metric. We saved weights when the mean F1 improved. Pixelwise
F1 plateaued around 0.7 and Neurofinder F1 around 0.85. Training on an NVIDIA
Titan-X GPU took under half an hour.

Loss Function On average, the 128×128 training windows contained 9% neuron
pixels. This imbalance led us to consider the modified Dice coefficient (MDC) loss

Fast, Simple Calcium Imaging Segmentation

5

Fig. 3. 200 × 200 cropped mean summary images from Neurofinder test and St. Jude
datasets with number of predicted neurons, precision, and recall in titles. Ground truth and
predicted neurons are outlined in green and red, respectively. Ground truth for Neurofinder
test data is not publicly available.

function [13]. We compared MDC to standard logarithmic loss (LL) and found higher
pixelwise recall with MDC, but the average test F1 for LL was consistently better. LL
computes each pixel’s loss independently, which allows weighting for recall or precision.
We experimented with this by multiplying false negative pixel losses between 2×
and 10× and saw increased pixelwise recall but lower F1. We ultimately found that
standard LL resulted in the best F1 scores.

Prediction Full-image prediction was implemented by reshaping U-Net2DS to take
512×512 inputs. This change simplified the implementation and eliminated mask
tiling artifacts that were present when using sliding windows. We found test-time
augmentation consistently improved the mean F1. This consists of averaging predic-
tions for eight rotations and reflections of the summary image. Given raw TIFF files,
the summaries and predictions are computed at ≈9K images per minute.

Results on Neurofinder and St. Jude Datasets As of July 2017, the top-
scoring Neurofinder submission is an ensemble of HNCcorr [22], which clusters pixels
based on correlation over time, and Conv2D [6], a convolutional neural network
with 40×40 input and 20×20 output windows. Second and fourth place use matrix
factorization methods from [16, 17]. U-Net2DS ranks third and is the highest-scoring
model to exclusively use deep learning. Table 1 and Fig. 4 compare the top models’
F1, precision, and recall metrics. Models that explicitly use temporal information
considerably outperform those using summaries on the 02.00 and 02.01 datasets. This
might correspond to differences in ground truth labeling techniques acknowledged by
the Neurofinder competition.6 To evaluate robustness beyond the Neurofinder datasets,
we made predictions on the St. Jude datasets from the auditory cortex and had F1

6 From the website: For the 00 data, labels are derived from an anatomical marker that
indicates the precise location of each neuron and includes neurons with no activity. For
the 01, 02, 03, 04 data, labels were hand drawn or manually curated, using the raw data
and various summary statistics, some of which are biased towards active neurons.

6

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

Fig. 4. F1 for the top five models on each of the Neurofinder testing datasets.

Neurofinder Model
HNCcorr [22] + Conv2d [6]
Sourcery [15]
UNet2DS
Suite2p [17] + Donuts [16]
HNCcorr [22]

F1
0.617±0.122
0.583±0.139
0.569±0.160
0.550±0.127
0.492±0.180

Precision
0.702±0.170
0.599±0.197
0.618±0.235
0.578±0.156
0.618±0.169

Recall
0.602±0.197
0.629±0.168
0.609±0.185
0.568±0.181
0.479±0.268

Table 1. Mean and standard deviation of metrics for the top five Neurofinder models.

scores of 0.45 and 0.47 despite the datasets having been collected under different
experimental settings and from a region of the brain distinct from all training datasets.
Segmentations for two Neurofinder and two St. Jude datasets are shown in Fig. 3.

Deep Learning Insights for Calcium Imaging Data We initially considered
several pre-processing steps, including clipping maximum values to reduce noise and
stretching each series’ values to maximize contrast. These steps made it easier to
recognize neurons visually but did not improve performance. The heavy neuron-to-
background class-imbalance required attention in training. Some combinations of
learning rates and loss functions caused the network to predict 100% background early
on and never recover. It helped to increase window size and monitor the proportion of
neuron pixels predicted vs. the ground truth proportion. Finally, the training datasets
have semantic differences (labeling technique, part of brain, etc.). In some cases we
improved performance by training one model per dataset, but ultimately found it
more practical to train a single model on all data.

4.2 Other Deep Learning Models

U-Net2DS with Temporal Summaries By using mean summaries, U-Net2DS
ignores temporal information and has difficulty separating overlapping neurons. One
possible extension of U-Net2DS would add temporal inputs consisting of summary
images along the time-axis (i.e., YZ, XZ summaries).

Segmentation with Better 2D Summary Images A summary image that am-
plifies neurons and minimizes background should improve a model like U-Net2DS.
Taking inspiration from [22], we experimented with summaries that compute the
mean correlation and cosine distance of each pixel with its neighbors. Similar to [17],

Fast, Simple Calcium Imaging Segmentation

7

we found most neuron pixels had high similarity to nearby background pixels, making
neighborhood similarity a poor summary function.

Frame-by-frame Segmentation Summary images can preserve unwanted back-
ground noise, so it is plausible that a model trained to segment the series frame-
by-frame could recognize a neuron in frames where surrounding noise is minimized.
Unfortunately, it is difficult to select frames for training as most neurons blend with
background at arbitrary times and only 2D labels are given. We tried a contrast-based
weighting scheme that decreased loss for neurons with low contrast to surrounding
background and increased loss for high-contrast neurons. Still, we found most neurons
were more distinguishable in a mean summary than in their highest-contrast frames.
It seems the summary smooths areas that are otherwise noisy in single frames.

3D Convolutional Networks Intuitively, directly including inputs from the time
dimension should improve performance. We explored 3D convolutional networks, sim-
ilar to [1,3,13]. Because series have variable length, we found it difficult to determine
an input depth for all datasets. The 3D models were also prohibitively slow, taking
at least an hour to segment a single series.

5 Conclusion

Large labeled datasets like Neurofinder enable the use of deep learning for automated
calcium imaging segmentation. We demonstrated U-Net2DS, an adaptation of U-Net
[21] that uses mean summaries of calcium imaging series to quickly produce full seg-
mentation masks while minimizing parameter adjustment, pre/post-processing, and
assumptions for new datasets. Despite its relative simplicity, it is the best-performing
non-ensemble and deep learning model in the Neurofinder competition. We described
several other deep learning formulations for this problem, and we believe a model
that efficiently combines spatial and temporal information is a promising next step.

Acknowledgments This work was supported in part by the Department of Develop-
mental Neurobiology at St. Jude Children’s Research Hospital and by the U.S. Depart-
ment of Energy, Office of Science, Office of Workforce Development for Teachers and
Scientists (WDTS) under the Science Undergraduate Laboratory Internship program.

References

1. Apthorpe, N., Riordan, A., Aguilar, R., Homann, J., Gu, Y., Tank, D., Seung, H.S.:
Automatic neuron detection in calcium imaging data using convolutional networks. In:
Advances In Neural Information Processing Systems. pp. 3270–3278 (2016)

2. Chollet, F., et al.: Keras. https://github.com/fchollet/keras (2015)
3. C¸ i¸cek, ¨O., Abdulkadir, A., Lienkamp, S.S., Brox, T., Ronneberger, O.: 3d u-net: learning
dense volumetric segmentation from sparse annotation. In: International Conference on
Medical Image Computing and Computer-Assisted Intervention. pp. 424–432. Springer
(2016)

8

Klibisz, Rose, Eicholtz, Blundon, Zakharenko

4. CodeNeuro.org: The neurofinder challenge. http://neurofinder.codeneuro.org/

(2016)

5. Drozdzal, M., Vorontsov, E., Chartrand, G., Kadoury, S., Pal, C.: The importance of skip
connections in biomedical image segmentation. In: International Workshop on Large-Scale
Annotation of Biomedical Data and Expert Label Synthesis. pp. 179–187. Springer (2016)
6. Gao, S.: Conv2d. https://github.com/iamshang1/Projects/tree/master/Advanced_

ML/Neuron_Detection (2016)

7. Ioffe, S., Szegedy, C.: Batch normalization: Accelerating deep network training by

reducing internal covariate shift. arXiv preprint arXiv:1502.03167 (2015)

8. Kaifosh, P., Zaremba, J.D., Danielson, N.B., Losonczy, A.: Sima: Python software for
analysis of dynamic fluorescence imaging data. Frontiers in neuroinformatics 8, 80 (2014)
9. Kingma, D., Ba, J.: Adam: A method for stochastic optimization. arXiv preprint

arXiv:1412.6980 (2014)

10. Litjens, G., Kooi, T., Bejnordi, B.E., Setio, A.A.A., Ciompi, F., Ghafoorian, M., van der
Laak, J.A., van Ginneken, B., S´anchez, C.I.: A survey on deep learning in medical
image analysis. arXiv preprint arXiv:1702.05747 (2017)

11. Long, J., Shelhamer, E., Darrell, T.: Fully convolutional networks for semantic
segmentation. In: Proceedings of the IEEE Conference on Computer Vision and Pattern
Recognition. pp. 3431–3440 (2015)

12. Maruyama, R., Maeda, K., Moroda, H., Kato, I., Inoue, M., Miyakawa, H., Aonishi,
T.: Detecting cells using non-negative matrix factorization on calcium imaging data.
Neural Networks 55, 11–19 (2014)

13. Milletari, F., Navab, N., Ahmadi, S.A.: V-net: Fully convolutional neural networks for
volumetric medical image segmentation. In: 3D Vision (3DV), 2016 Fourth International
Conference on. pp. 565–571. IEEE (2016)

14. Mukamel, E.A., Nimmerjahn, A., Schnitzer, M.J.: Automated analysis of cellular signals

from large-scale calcium imaging data. Neuron 63(6), 747–760 (2009)

15. Pachitariu, M.: Sourcery. https://github.com/marius10p/suite2p-for-neurofinder

(2016)

16. Pachitariu, M., Packer, A.M., Pettit, N., Dalgleish, H., Hausser, M., Sahani, M.:
Extracting regions of interest from biological images with convolutional sparse block
coding. In: Advances in Neural Information Processing Systems. pp. 1745–1753 (2013)
17. Pachitariu, M., Stringer, C., Schr¨oder, S., Dipoppa, M., Rossi, L.F., Carandini, M.,
Harris, K.D.: Suite2p: beyond 10,000 neurons with standard two-photon microscopy.
bioRxiv p. 061507 (2016)

18. Petersen, A., Simon, N., Witten, D.: Scalpel: Extracting neurons from calcium imaging

data. arXiv preprint arXiv:1703.06946 (2017)

19. Pnevmatikakis, E.A., Paninski, L.: Sparse nonnegative deconvolution for compressive
calcium imaging: algorithms and phase transitions. In: Advances in Neural Information
Processing Systems. pp. 1250–1258 (2013)

20. Pnevmatikakis, E.A., Soudry, D., Gao, Y., Machado, T.A., Merel, J., Pfau, D., Reardon,
T., Mu, Y., Lacefield, C., Yang, W., et al.: Simultaneous denoising, deconvolution, and
demixing of calcium imaging data. Neuron 89(2), 285–299 (2016)

21. Ronneberger, O., Fischer, P., Brox, T.: U-net: Convolutional networks for biomedical
image segmentation. In: International Conference on Medical Image Computing and
Computer-Assisted Intervention. pp. 234–241. Springer (2015)

22. Spaen, Q., Hochbaum, D.S., As´ın-Ach´a, R.: Hnccorr: A novel combinatorial approach
for cell identification in calcium-imaging movies. arXiv preprint arXiv:1703.01999 (2017)

