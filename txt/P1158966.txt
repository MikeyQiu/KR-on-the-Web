Robust Kronecker-Decomposable Component Analysis for Low-Rank Modeling

Mehdi Bahri1

Yannis Panagakis1,2

Stefanos Zafeiriou1,3

1Imperial College London, UK 2Middlesex University, London, UK 3University of Oulu, Finland
mehdi.b.tn@gmail.com, {i.panagakis, s.zafeiriou}@imperial.ac.uk

7
1
0
2
 
l
u
J
 
6
2
 
 
]
L
M

.
t
a
t
s
[
 
 
2
v
6
8
8
7
0
.
3
0
7
1
:
v
i
X
r
a

Abstract

Dictionary learning and component analysis are part
of one of the most well-studied and active research ﬁelds,
at the intersection of signal and image processing, com-
puter vision, and statistical machine learning. In dictionary
learning, the current methods of choice are arguably K-SVD
and its variants, which learn a dictionary (i.e., a decompo-
sition) for sparse coding via Singular Value Decomposition.
In robust component analysis, leading methods derive from
Principal Component Pursuit (PCP), which recovers a low-
rank matrix from sparse corruptions of unknown magnitude
and support. However, K-SVD is sensitive to the presence
of noise and outliers in the training set. Additionally, PCP
does not provide a dictionary that respects the structure of
the data (e.g., images), and requires expensive SVD com-
putations when solved by convex relaxation. In this paper,
we introduce a new robust decomposition of images by com-
bining ideas from sparse dictionary learning and PCP. We
propose a novel Kronecker-decomposable component anal-
ysis which is robust to gross corruption, can be used for
low-rank modeling, and leverages separability to solve sig-
niﬁcantly smaller problems. We design an efﬁcient learning
algorithm by drawing links with a restricted form of tensor
factorization. The effectiveness of the proposed approach
is demonstrated on real-world applications, namely back-
ground subtraction and image denoising, by performing a
thorough comparison with the current state of the art.

1. Introduction

Sparse dictionary learning [40, 45, 34] and Robust Prin-
cipal Component Analysis (RPCA) [6] are two popular
methods of learning representations that assume different
structure and answer different needs, but both are special
cases of structured matrix factorization. Assuming a set of
N data samples x1, . . . , xn represented as the columns of a
matrix X, we seek a decomposition of X into meaningful
components of a given structure, in the generic form:

Where l(·) is a loss function, generally the (cid:96)2 error, and
g(·) a possibly non-smooth regularizer that encourages the
desired structure, often in the form of speciﬁc sparsity re-
quirements.

When Z is taken to be factorized in the form DR, we
obtain a range of different models depending on the choice
of the regularization. Imposing sparsity on the dictionary
D leads to sparse PCA, while sparsity only in the code R
yields sparse dictionary learning. The current methods of
choice for sparse dictionary learning are K-SVD [1] and its
variants [32], which seek an overcomplete dictionary D and
a sparse representation R = [r1, . . . , rn] by minimizing the
following constrained objective:

min
R,D

||X − DR||2

F, s.t. ||ri||0 ≤ T0,

(2)

where ||.||F is the Frobenius norm and ||.||0 is the (cid:96)0 pseudo-
norm, counting the number of non-zero elements. Problem
(2) is solved in an iterative manner that alternates between
sparse coding of the data samples on the current dictionary,
and a process of updating the dictionary atoms to better ﬁt
the data using the Singular Value Decomposition (SVD).
When used to reconstruct images, K-SVD is trained on
overlapping image patches to allow for overcompleteness
[14]. Problems of this form suffer from a high computa-
tional burden that limits their applicability to small patches
that only capture local information, and prevent them from
scaling to larger images.

The recent developments in robust component analysis
are attributed to the advancements in compressive sensing
[7, 13, 8]. In this area, the emblematic model is the Robust
Principal Component Analysis, proposed in [6]. RPCA as-
sumes that the observation matrix X is the sum of a low-
rank component A, and of a sparse matrix E that collects
the gross errors, or outliers. Finding the minimal rank solu-
tion for A and the sparsest solution for E is combinatorial
and NP-hard. Therefore, RPCA is obtained by solving the
Principal Component Pursuit (PCP) in which the discrete
rank and (cid:96)0-norm functions are approximated by their con-
vex envelopes as follows:

min
Z

l(X, Z) + g(Z)

min
A,E

||A||∗ + ||E||1, s.t. X = A + E

(3)

(1)

1

where ||.||∗ is the nuclear norm and ||.||1 is the standard
(cid:96)1 norm. Like sparse dictionary learning, Robust PCA is
a special case of (1). The nuclear-norm relaxation is con-
vex but the cost of performing SVDs on the full-size ma-
trix A is high. Factorization-based formulations exploit
the fact that a rank-r matrix A ∈ Rm×n can be decom-
posed in A = UVT, U ∈ Rm×r, V ∈ Rn×r, to impose
low-rankness. These formulations are non-convex and algo-
rithms may get stuck in local optima or saddle points. We
refer to [28] for recent developments on the convergence of
non-convex matrix factorizations, [44, 36, 50, 47] for low-
rank problems, and [16] speciﬁcally for matrix completion.

1.1. Separable dictionaries

Analytical separable dictionaries have been proposed as
generalizations of 1-dimensional transforms in the form,
e.g., of tensor-product wavelets, and have since fallen out of
ﬂavour for models that drop orthogonality in favour of over-
completeness to achieve geometric invariance [40]. How-
ever, recent work in the compressed sensing literature has
shown a regain of interest for separable dictionaries for
very high-dimensional signals where scalability is a hard-
requirement. Notably, high-resolution spatial angular rep-
resentations of diffusion-MRI signals, such as in HARDI
(High Angular Resolution Diffusion Imaging), represent
each voxel by a 3D signal, yielding prohibitive sampling
times. Traditional compressed sensing techniques can only
handle signal sparsity bounded below by the number of vox-
els (1 atom per voxel) and still cannot meet the needs of
medical imaging, but Kronecker extensions [42, 41] of Or-
thogonal Matching Pursuit (OMP) [37, 11], Dual ADMM
[5], and FISTA [4] allow sparser signals.

The recent Separable Dictionary Learning (SeDiL) [23]
considers a dictionary that factorizes into the Kronecker
product of two smaller dictionaries A and B, and matrix
observations X = (Xi)i. The observations have sparse rep-
resentations R = (Ri)i in the bases A, B, and the learning
problem is recast as:

Squares to solve minA,B,R ||X − R ×1 A ×2 B||F

1.

1.2. Contributions

In this paper, we propose a novel method for separable
dictionary learning based on a robust tensor factorization
that learns simultaneously the dictionary and the sparse rep-
resentations. We extend the previous approaches by intro-
ducing an additional level of structure to make the model
robust to outliers. We do not seek overcompleteness, but
rather promote sparsity in the dictionary to learn a low-
rank representation of the input tensor. In this regard, our
method combines ideas from both Sparse Dictionary Learn-
ing and Robust PCA. We propose a non-convex paralleliz-
able ADMM algorithm and provide experimental evidence
of its effectiveness. Finally, we compare the performance
of our method against several tensor and matrix factoriza-
tion algorithms on computer vision benchmarks, and show
our model systematically matches or outperforms the state
of the art. We make the code available online2 along with
supplementary material.

Notations
Throughout the paper, matrices (vectors) are
denoted by uppercase (lowercase) boldface letters e.g., X,
(x). I denotes the identity matrix of compatible dimen-
sions. The ith column of X is denoted as xi. Tensors
are considered as the multidimensional equivalent of matri-
ces (second-order tensors), and vectors (ﬁrst-order tensors),
and denoted by bold calligraphic letters, e.g., X . The or-
der of a tensor is the number of indices needed to address
its elements. Consequently, each element of an M th-order
.
tensor X is addressed by M indices, i.e., (X )i1,i2,...,iM
=
xi1,i2,...,iM .

The sets of real and integer numbers are denoted by R
and Z, respectively. An M th-order real-valued tensor X is
deﬁned over the tensor space RI1×I2×···×IM , where Im ∈ Z
for m = 1, 2, . . . , M .

The mode-n product of a tensor X ∈ RI1×I2×...×IM
with a matrix U ∈ RJ×In, denoted by X ×n U, is deﬁned
element-wise as

In(cid:88)

in=1

min
A,B,R

1
2

(cid:88)

i

||Xi −ARiBT||2

F +λg(R)+κr(A)+κr(B)

(X ×m x)i1,...,in−1,in+1,...,iM =

xi1,i2,...,iM xin . (5)

(4)
Where the regularizers g and r promote, respectively, spar-
sity in the representations, and low mutual-coherence of the
dictionary D = B ⊗ A. Here, D is constrained to have or-
thogonal columns, i.e., the pair A, B shall lie on the prod-
uct manifold of two product of sphere manifolds. A differ-
ent approach is taken in [25]. A separable 2D dictionary
is learnt in a two-step strategy similar to that of K-SVD.
Each matrix observation Xi is represented as ARiBT. In
the ﬁrst step, the sparse representations Ri are found by 2D
OMP. In the second step, a CP decomposition is performed
on a tensor of residuals via Regularized Alternating Least

product of matrices A ∈ RI×K, and
The Kronecker
B ∈ RL×M , is denoted by A ⊗ B, and yields a matrix
of dimensions I · L × K · M .

Finally, we deﬁne the tensor Tucker rank as the vector of
the ranks of its mode-n unfoldings (i.e., its mode-n ranks),
and the tensor multi-rank [48, 31] as the vector of the ranks
of its frontal slices. More details about tensors, such as the
deﬁnitions of tensor slices and mode-n unfoldings, can be
found in [26] for example.

1c.f . notations for the product ×n
2https://github.com/mbahri/KDRSDL

2. Model and updates

We ﬁrst formulate our structured factorization, and de-

scribe a tailored optimization procedure.

2.1. Robustness and structure

Consider the following Sparse Dictionary Learning
problem with Frobenius-norm regularization on the dictio-
nary D, where we decompose N observations xi ∈ Rmn
on D ∈ Rmn×r1r2 with representations ri ∈ Rr1r2:

min
D,R

(cid:88)

i

||xi − Dri||2

2 + λ

||ri||1 + ||D||F

(6)

(cid:88)

i

We assume a Kronecker-decomposable dictionary D =
B ⊗ A with A ∈ Rm×r1 , B ∈ Rn×r2. To model the pres-
ence of outliers, we introduce a set of vectors ei ∈ Rmn
and, with d = r1r2 + mn, deﬁne the block vectors and
matrices:

yi =

(cid:21)

(cid:20)ri
ei

∈ Rd C = (cid:2)B ⊗ A I(cid:3) ∈ Rmn×d

(7)

We obtain a two-level structured dictionary C and the as-
sociated sparse encodings yi. Breaking-down the variables
to reduce dimensionality and discarding the constant ||I||F:

min
A,B,R,E

(cid:88)

i

||xi − (B ⊗ A)ri − ei||2
2

(cid:88)

+λ

||ri||1 + λ

||ei||1 + ||B ⊗ A||F

(cid:88)

(8)

i

i
Suppose now that the observations xi were obtained by vec-
torizing two-dimensional data such as images, i.e., xi =
vec(Xi), Xi ∈ Rm×n. We ﬁnd preferable to keep the ob-
servations in matrix form as this preserves the spatial struc-
ture of the images, and - as we will see - allows us solve ma-
trix equations efﬁciently instead of high-dimensional linear
systems. Without loss of generality, we choose r1 = r2 = r
and ri = vec(Ri), Ri ∈ Rr×r, and recast the problem as:

min
A,B,R,E

(cid:88)

i

||Xi − ARiBT − Ei||2
F

(cid:88)

+λ

||Ri||1 + λ

||Ei||1 + ||B ⊗ A||F

(cid:88)

(9)

i

i
Equivalently, enforcing the equality constraints and writing
the problem explicitly as a structured tensor factorization:

minA,B,R,E λ||R||1 + λ||E||1 + ||B ⊗ A||F
s.t

X = R ×1 A ×2 B + E

(10)

Where the matrices Xi, Ri, and Ei are concatenated as the
frontal slices of 3-way tensors. Figure 1 illustrates the de-
composition.

We impose r ≤ min(m, n) as a natural upper bound on
the rank of the frontal slices of L = R ×1 A ×2 B, and on
its mode-1 and mode-2 ranks.

Figure 1: Illustration of the decomposition.

2.2. An efﬁcient algorithm

Problem (10) is not jointly convex, but is convex in
each component individually. We resort to an alternating-
direction method and propose a non-convex ADMM proce-
dure that operates on the frontal slices.

Minimizing ||B ⊗ A||F presents a challenge: the prod-
uct is high-dimensional, the two bases are coupled, and
the loss is non-smooth. Using the identity ||A ⊗ B||p =
||A||p||B||p where ||.||p denotes the Schatten-p norm (this
follows from the compatibility of the Kronecker product
with the singular value decomposition), and remarking that
||B||F||A||F ≤ ||A||2
, we minimize a simpler up-
per bound (||ABT||∗ [39]). The resulting sub-problems are
smaller, and therefore more scalable. In order to obtain ex-
act proximal steps for the encodings Ri, we introduce a split
variable Ki such that ∀i, Ki = Ri. Thus, we solve:

F+||B||2

2

F

min
A,B,R,KE
s.t
s.t

λ||R||1 + λ||E||1 + 1

2 (||A||2

F + ||B||2
F)

X = K ×1 A ×2 B + E
R = K

Introducing the tensors of Lagrange multipliers Λ and
Y, such that the ith frontal slice corresponds to the ith con-
straint, and the dual step sizes µ and µK, we formulate the
Augmented Lagrangian of problem (11):

min λ

||Ri||1 + λ

||Ei||1 +

(||A||2

F + ||B||2

F)+

(cid:88)

i

(cid:104)Λi, Xi − AKiBT − Ei(cid:105) +

(cid:104)Yi, Ri − Ki(cid:105)+

||Xi − AKiBT − Ei||2

F +

||Ri − Ki||2
F

(cid:88)

i

(cid:88)

µ
2

i
(cid:88)

i

1
2
(cid:88)

i
µK
2

(cid:88)

i

(11)

(12)

We can now derive the ADMM updates. Each Ei is given
by shrinkage after rescaling:

Ei = Sλ/µ(Xi − AKiBT +

Λi)

(13)

1
µ

A similar rule is immediate to derive for Ri, and solving for
A and B is straightforward with some matrix algebra. We
therefore focus on the computation of the split variable Ki.

Figure 2: Recovery performance with 60% corruption. Rel-
ative (cid:96)2 error and density.

Figure 3: Sample spectrums of A and B, the ground truth
is 42 for A and 12 for B, and is attained. r = 100.

Differentiating, we ﬁnd Ki satisﬁes:

µKKi + µATAKiBTB
= AT(Λi + µ(Xi − Ei))B + µKRi + Yi

(14)

The key for an efﬁcient algorithm is here to recognize equa-
tion (14) is a Stein equation, and can be solved in cubical
time and quadratic space in r by solvers for discrete-time
Sylvester equations - such as the Hessenberg-Schur method
[19] - instead of the naive O(r6) time, O(r4) space solution
of vectorizing the equation in an r2 linear system.

In practice, we solve a slightly different problem with
α (cid:80)
i ||Ri||1 + λ (cid:80)
i ||Ei||1. This introduces an additional
degree of freedom and corresponds to rescaling the coef-
ﬁcients of Ri. We found the modiﬁed problem to be nu-
merically more stable and to allow for tuning of the relative
importance of ||R||1 and ||E||1. We obtain Algorithm 1.

3. Discussion

We show experimentally that our algorithm successfully
recovers the components of the decomposition (10), we then
prove the formulation encourages two different notions of
low-rankness on tensors, and ﬁnally discuss the issues of
non-convexity and convergence.

3.1. Validation on synthetic data

We generated synthetic data following the model’s as-
sumptions by ﬁrst sampling two random bases A and B of
known ranks rA and rB, N Gaussian slices for the core
R, and forming the ground truth L = R ×1 A ×2 B.
We modeled additive random sparse Laplacian noise with
a tensor E whose entries are 0 with probability p, and 1 or
−1 with equal probability otherwise. We generated data for
p = 70% and p = 40%, leading to a noise density of, re-
spectively, 30% and 60%. We measured the reconstruction
error on L, E, and the density of E for varying values of λ,
and α = 1e−2. Our model achieved near-exact recovery of
both L and E, and exact recovery of the density of E, for
suitable values of λ. Experimental evidence is presented in
Figure 2 for the 60% noise case.

The algorithm appears robust to small changes in λ,
which suggests not only one value can lead to optimal re-
sults, and that a simple criterion that provides consistently
good reconstruction may be derived, as in Robust PCA [6].
In the 30% noise case, we did not observe an increase in the
density of E as λ increases, and the (cid:96)2 error on both E and
L was of the order of 1e−7 (c.f . supplementary material).

3.2. Low-rank solutions

Seeing the model from the perspective of Robust PCA
(3), which seeks a low-rank representation A of the dataset
X, we minimize the rank of the low-rank tensor L. More
precisely, we show in theorem 3.1 that we simultaneously
penalize the Tucker rank and the multi-rank of L.

Theorem 3.1. Algorithm 1 encourages low mode-1 and
mode-2 rank, and thus, low-rankness in each frontal slice
of L, for suitable choices of the parameters λ and α.

Proof. From the equivalence of norms in ﬁnite-dimensions,
∃k ∈ R∗
+, ||A ⊗ B||∗ ≤ k||A ⊗ B||F. We minimise
λ||E||1 + α||R||1 + ||A ⊗ B||F. By choosing α = α(cid:48)
k , λ =
λ(cid:48)
k , we penalize rank(A ⊗ B) = rank(A)rank(B). Given
that the rank is a non-negative integer, rank(A) or rank(B)
decreases necessarily. Therefore, we minimize the mode-1
and mode-2 ranks of L = R ×1 A ×2 B. Additionally,
∀i, rank(ARiBT) ≤ min(rank(A), rank(B), rank(Ri)).
Exhibiting a valid k may help in the choice of parame-
ters. We show ∀A ∈ Rm×n, ||A||∗ ≤ (cid:112)min(m, n)||A||F:
We know ∀x ∈ Rn, ||x||1 ≤
n||x||2. By deﬁnition, the
Schatten-p norm of A is the (cid:96)p norm of its singular values.
Recalling the nuclear norm and the Frobenius norm are the
Schatten-1 and Schatten-2 norms, A has min(m, n) singu-
lar values, hence the result.

√

In practice, we ﬁnd that on synthetic data designed to
test the model, we effectively recover the ranks of A and B
regardless of the choice of r, as seen in Figure 3.

Algorithm 1 Kronecker-Decomposable Robust Sparse Dictionary Learning.
1: procedure KDRSDL(X , r, λ, α)
2:
3:
4:

A0, B0, E 0, R0, K0 ← INITIALIZE(X )
while not converged do

µt Λt)

i)T) / (I + µt (cid:80)
i) / (I + µt (cid:80)

i Kt
i(Kt

i(Bt)TBt(Kt
i)T(At+1)TAt+1Kt
i)

i)T)

(At+1)TAt+1, (Bt+1)TBt+1, 1
µt
K

(cid:104)

(At+1)T(Λt

i + µt ˜Xt+1

i

)Bt+1 + Yt
i

+ Rt
i)

(cid:105)

5:
6:
7:
8:
9:

10:

t+1

← X − E t+1

E t+1 ← Sλ/µt (X − Kt ×1 At ×2 Bt + 1
˜X
At+1 ← ((cid:80)
i(µt ˜Xt+1
Bt+1 ← ((cid:80)
i(µt ˜Xt+1
for all i do
i ← STEIN(− µt
Kt+1
µt
K
(Kt+1
Rt+1
i − 1
i ← Sα/µt
µt
K

i)Bt(Kt
i)TAt+1Kt

i + Λt
i + Λt

Yt
i )

K

t+1

− Kt+1 ×1 At+1 ×2 Bt+1)

K(Rt+1 − Kt+1)

end for
Λt+1 ← Λt + µt( ˜X
Y t+1 ← Y t + µt
µt+1 ← min(µ∗, ρµt)
µt+1
K, ρµt
K ← min(µ∗
end while
return A, B, R, E

11:
12:
13:
14:
15:
16:
17:
18: end procedure

K)

3.3. Convergence and complexity

Convergence and initialization: The problem is non-
convex, therefore global convergence is a priori not guar-
anteed. Recent work [24, 43] studies the convergence of
ADMM for non-convex and possibly non-smooth objective
functions with linear constraints. Here, the constraints are
In [21, 22] the authors derive conditions for
not linear.
global optimality in speciﬁc non-convex matrix and tensor
factorizations that may be extended to other formulations,
including our model. However, the theoretical study of the
global convergence of our algorithm is out of the scope of
this paper and is left for future work. Instead, we provide
experimental results and discuss the strategy implemented.

(cid:80)

(cid:80)

(cid:80)

K =

ηN
i ||Ri||F

ηN
i ||Xi||F

i Ui and B = 1
N

We propose a simple initialization scheme in the wake of
[29]. We initialize the bases A and B and the core R by
performing SVD on each observation Xi = UiSiVT
i . We
set Ri = Si, A = 1
i Vi. To ini-
N
tialize the dual-variables for the constraint Xi − ARiBT −
Ei = 0, we take µ0 =
where η is a scal-
(cid:80)
ing coefﬁcient, chosen in practice to be η = 1.25 as in
[29]. Similarly, we chose µ0
. These cor-
respond to averaging the initial values for each individual
slice and its corresponding constraint. Our convergence
criterion corresponds to primal-feasibility of problem (11),
and is given by max(errrec, errsplit) ≤ (cid:15) where errrec =
||Ri−Ki||2
maxi
.
F
||Ri||2
F
Empirically, we obtained systematic convergence to a good
solution, and a linear convergence rate, as shown in Figure
4. The parameter ρ > 1 can be tuned and affects the speed
of convergence. High values may lead to the algorithm di-
verging, while values closer to 1 will lead to an increased
number of iterations. We used ρ = 1.2 and set upper bounds
K × 107 as usual with ADMM.
µ∗ = µ0 × 107 and µ∗

||Xi−ARiBT−Ei||2
F
||Xi||2
F

and errsplit = maxi

K = µ0

Figure 4: Convergence on synthetic data with 30% and 60%
corruption.

Computational complexity: The time and space com-
plexity per iteration of Algorithm 1 are O(N (mnr + (m +
n)r + mn + min(m, n)r2 + r3 + r2)) and O(N (mn +
r2) + (m + n)r + r2). Since r ≤ min(m, n), the terms in
r are asymptotically negligible, but in practice it is useful
to know how the computational requirements scale with the
size of the dictionary. Similarly, the initialization procedure
has cost O(N (mn min(m, n)+(min(m, n))3+mn)+mn)
in time and needs quadratic space per slice, assuming a stan-
dard algorithm is used for the SVD[9]. Several key steps in
the algorithm, such as summations of independent terms,
are trivially distributed in a MapReduce [12] way. Proximal
operators are separable in nature and are therefore paral-
lelizable. Consequently, highly parallel and distributed im-
plementations are possible, and computational complexity
can be further reduced by adaptively adopting sparse linear
algebra structures and algorithms.

4. Experimental evaluation

We compared the performance of our model against a
range of state-of-the-art tensor decomposition algorithms
on four low-rank modeling computer vision benchmarks:

two for image denoising, and two for background subtrac-
tion. As a baseline, we report the performance of ma-
trix Robust PCA implemented via inexact ALM (RPCA)
[6, 29], and of Non-Negative Robust Dictionary Learning
(RNNDL) [35]. We chose the following methods to in-
clude recent representatives of various existing approaches
to low-rank modeling on tensors: The singleton version of
Higher-Order Robust PCA (HORPCA-S) [18] optimizes the
Tucker rank of the tensor through the sum of the nuclear
norms of its unfoldings. In [46], the authors consider a sim-
ilar model but with robust M-estimators as loss functions,
either a Cauchy loss or a Welsh loss, and support both hard
and soft thresholding; we tested the soft-thresholding mod-
els (Cauchy ST and Welsh ST). Non-convex Tensor Robust
PCA (NC TRPCA) [2] adapts to tensors the matrix non-
convex RPCA [33]. Finally, the two Tensor RPCA algo-
rithms [31, 48] (TRPCA ’14 and TRPCA ’16) work with
slightly different deﬁnitions of the tensor nuclear norm as a
convex surrogate of the tensor multi-rank.

For each model, we identiﬁed a maximum of two pa-
rameters to tune via grid-search in order to keep parameter
tuning tractable. When criteria or heuristics for choosing
the parameters were provided by the authors, we chose the
search space around the value obtained from them. In all
cases, the tuning process explored a wide range of parame-
ters to maximize performance. The range of values investi-
gated are provided as supplementary material.

When the performance of one method was signiﬁcantly
worse than that of the other, the result is not reported so as
not to clutter the text, and is made available in the supple-
mentary material. This is the case of Separable Dictionary
Learning [23] whose drastically different nature renders un-
suitable for robust low-rank modeling, but was compared
for completeness. For the same reason, we did not compare
our method against K-SVD [1], or [25].

4.1. Background subtraction

Background subtraction is a common task in computer
vision and can be tackled by robust low-rank modeling: the
static or mostly static background of a video sequence can
effectively be represented as a low-rank tensor while the
foreground forms a sparse component of outliers.

Experimental procedure We compared the algorithms
on two benchmarks. The ﬁrst is an excerpt of the Highway
dataset [20], and consists in a video sequence of cars travel-
ling on a highway; the background is completely static. We
kept 400 gray-scale images re-sized to 48 × 64 pixels. The
second is the Airport Hall dataset ([27]) and has been cho-
sen as a more challenging benchmark since the background
is not fully static and the scene is richer. We used the same
excerpt of 300 frames (frames 3301 to 3600) as in [49], and
kept the frames in their original size of 144 × 176 pixels.

We treat background subtraction as a binary classiﬁca-

(a) Cauchy ST

(b) Welsh ST (c) TRPCA ’16 (d) HORPCA-S (e) NCTRPCA

(f) RNNDL

(g) RPCA

(h) KDRSDL (i) Ground truth

(j) Original

Figure 5: Results on Airport Hall. TRPCA ’14 removed.

tion problem. Since ground truth frames are available for
our excerpts, we report the AUC [15] on both videos. The
value of α was set to 1e−2 for both experiments.

Results We provide the original, ground truth, and recov-
ered frames in Figure 5 for the Hall experiment (Highway
in supplementary material).

Table 1 presents the AUC scores of the algorithms,
ranked in order of their mean performance on the two
benchmarks. The two matrix methods rank high on both
benchmarks and only half of the tensor algorithms match
or outperform this baseline. Our proposed model matches
the best performance on the Highway dataset and provides
signiﬁcantly higher performance than the other on the more
challenging Hall benchmark. Visual inspection of the re-
sults show KDRSDL is the only method that doesn’t fully
capture the immobile people in the background, and there-
fore achieves the best trade-off between foreground detec-
tion and background-foreground contamination.

Algorithm
KDRSDL (proposed)
TRPCA ’16
NC TRPCA
RPCA (baseline)
RNNDL (baseline)
HORPCA-S
Cauchy ST
Welsh ST
TRPCA ’14

Highway
0.94
0.94
0.93
0.94
0.94
0.93
0.83
0.82
0.76

Hall
0.88
0.86
0.86
0.85
0.85
0.86
0.76
0.71
0.61

Table 1: AUC on Highway and Hall ordered by mean AUC.

4.2. Image denoising

Many natural and artiﬁcial images exhibit an inherent
low-rank structure and are suitably denoised by low-rank
modeling algorithms. In this section, we assess the perfor-
mance of the cohort on two datasets chosen for their popu-
larity, and for the typical use cases they represent.

We consider collections of grayscale images, and color
images represented as 3-way tensors. Laplacian (salt & pep-
per) noise was introduced separately in all frontal slices of

(a) Cauchy ST

(b) Welsh ST (c) TRPCA ’16 (d) HORPCA-S (e) NCTRPCA

(f) RNNDL

(g) RPCA

(h) KDRSDL

(i) Noisy

(j) Original

Figure 7: Results on the Yale benchmark with 30% noise.
TRPCA ’14 removed.

At the 10% noise level, nearly every method provided
good to excellent recovery of the original images. We there-
fore omit this noise level (c.f . supplementary material). On
the other hand, most methods, with the notable exception
of KDRSDL, NC TRPCA, and TRPCA ’16, failed to pro-
vide acceptable reconstruction in the gross corruption case.
Thus, we present the denoised images at the 30% level,
and compare the performance of the three best performing
methods in Table 2 for the 60% noise level.

Clear differences appeared at the 30% noise level, as
demonstrated both by the quantitative metrics, and by visual
inspection of Figure 7. Overall, performance was markedly
lower than at the 10% level, and most methods started to
lose much of the details. Visual inspection of the results
conﬁrms a higher reconstruction quality for KDRSDL. We
invite the reader to look at the texture of the skin, the white
of the eye, and at the reﬂection of the light on the subject’s
skin and pupil. The latter, in particular, is very close in na-
ture to the white pixel corruption of the salt & pepper noise.
Out of all methods, KDRSDL provided the best reconstruc-
tion quality: it is the only algorithm that removed all the
noise and for which all the aforementioned details are dis-
tinguishable in the reconstruction.

Noisy

PSNR
FSIM

KDRSDL

NC TRPCA TRPCA ’16

26.6057
0.8956

22.8502
0.8509

22.566
0.8427

Table 2: Three best results on Yale at 60% noise.

At the 60% noise level, our method scored markedly
higher than its competitors on image quality metrics, as
seen both in Figure 6 and in Table 2. Visualizing the re-

Figure 6: Mean PSNR and FSIM on the 64 images of the
ﬁrst subject of Yale at noise levels 10%, 30%, and 60%.

the observation tensor at three different levels: 10%, 30%,
and 60% to simulate medium, high, and gross corruption. In
these experiments we set the value of α to 1e−3 for noise
levels up to 30%, and to 1e−2 at the 60% level.

We report two quantitative metrics designed to measure
two key aspects of image recovery. The Peak Signal To
Noise Ratio (PSNR) will be used as an indicator of the
element-wise reconstruction quality of the signals, while
the Feature Similarity Index (FSIM, FSIMc for color im-
ages) [30] evaluates the recovery of structural information.
Quantitative metrics are not perfect replacements for sub-
jective visual assessment of image quality; therefore, we
present sample reconstructed images for veriﬁcation. Our
measure of choice for determining which images to com-
pare visually is the FSIM(c) for its higher correlation with
human evaluation than the PSNR.

Monochromatic face images Our face denoising exper-
iment uses the Extented Yale-B dataset [17] of 10 different
subject, each under 64 different lighting conditions. Ac-
cording to [38, 3], face images of one subject under vari-
ous illuminations lie approximately on a 9-dimensional sub-
space, and are therefore suitable for low-rank modeling. We
used the pre-cropped 64 images of the ﬁrst subject and kept
them at full resolution. The resulting collection of images
constitutes a 3-way tensor of 64 images of size 192 × 168.
Each mode corresponds respectively to the columns and
rows of the image, and to the illumination component. All
three are expected to be low-rank due to the spatial corre-
lation within frontal slices and to the correlation between
images of the same subject under different illuminations.
We present the comparative quantitative performance of the
methods tested in Figure 6, and provide visualizations of the
reconstructed ﬁrst image at the 30% noise level in Figure 7.
We report the metrics averaged on the 64 images.

(a) Cauchy ST

(b) Welsh ST (c) TRPCA ’14 (d) TRPCA ’16 (e) HORPCA-S

(f) NCTRPCA

(g) RNNDL

(h) RPCA

(i) KDRSDL

(j) Noisy

Figure 8: PSNR and FSIMc of all methods on the Facade
benchmark at noise levels 10%, 30%, and 60%.

Figure 9: Results on the Facade benchmark with 30% noise.

(k) Original

constructions conﬁrms the difference: the image recovered
by KDRSDL at the 60% noise level is comparable to the
output of competing algorithms at the 30% noise level.

Color image denoising Our benchmark is the Facade im-
age [10]: the rich details and lighting makes it interesting
to assess ﬁne reconstruction. The geometric nature of the
building’s front wall, and the strong correlation between the
RGB bands indicate the data can be modeled by a low-rank
3-way tensor where each frontal slice is a color channel.

At the 10% noise level, KDRSDL attained the high-
est PSNR, and among the highest FSIMc values. Most
methods provided excellent reconstruction, in agreement
with the high values of the metrics shown in Figure 8.
As in the previous benchmark, the results are omitted be-
cause of the space constraints (c.f . supplementary material).
At the 30% noise level, Cauchy ST exhibited the highest
PSNR, while TRPCA ’16 scored best on the FSIMc met-
ric. KDRSDL had the second highest PSNR and among the
highest FSIMc. Details of the results are provided in Figure
9. Visually, clear differences are visible, and are best seen
on the ﬁne details of the picture, such as the black iron orna-
ments, or the light coming through the window. Our method
best preserved the dynamics of the lighting, and the sharp-
ness of the details, and in the end provided the reconstruc-
tion visually closest to original. Competing models tend to
oversmooth the image, and to make the light dimmer; indi-
cating substantial losses of high-frequency and dynamic in-
formation. KDRSDL appears to also provide the best color
ﬁdelity.

In the gross-corruption case, KDRSDL was the best per-
former on both PSNR and FSIMc. As seen on Figure
3, KDRSDL was the only method with TRPCA ’16 and
HORPCA-S to provide a reconstruction with distinguish-
able details, and did it best.

Noisy

PSNR
FSIMc

KDRSDL

TRPCA ’16 HORPCA-S

23.8064
0.9152

23.6552
0.9109

22.8811
0.9060

Table 3: Three best results on Facade at 60% noise.

5. Conclusion

The method we propose combines aspects from Ro-
bust Principal Component Analysis, and Sparse Dictionary
Learning. As in K-SVD, our algorithm learns iteratively
and alternatively both the dictionary and the sparse repre-
sentations. Similarly to Robust PCA, our method assumes
the data decompose additively in a sparse and low-rank
component, and is able to separate the two signals. We
introduce a two-level structure in the dictionary to allow
for both scalable training, and robustness to outliers. Im-
posing this structure exhibits links with tensor factoriza-
tions and allows us to better model spatial correlation in
images than classical matrix methods. These theoretical ad-
vantages translate directly in the experimental performance,
as our method exhibits desirable scalability properties, and
matches or outperforms the current state of the art in low-
rank modeling.

6. Acknowledgements

The work of Y. Panagakis has been partially supported
by the European Community Horizon 2020 [H2020/2014-
645094 (SEWA).
2020] under Grant Agreement No.
S. Zafeiriou was partially funded by EPSRC Project
EP/N007743/1 (FACER2VM).

References

[1] M. Aharon, M. Elad, and A. Bruckstein. K-SVD: An al-
gorithm for designing overcomplete dictionaries for sparse
IEEE Transactions on Signal Processing,
representation.
54(11):4311–4322, 2006. 1, 6

[2] A. Anandkumar, P. Jain, Y. Shi, and U. N. Niranjan. Ten-
sor vs Matrix Methods: Robust Tensor Decomposition under
Block Sparse Perturbations. In A. Gretton and R. C. Chris-
tian, editors, Proceedings of the 19th International Confer-
ence on Artiﬁcial Intelligence and Statistics, AISTATS 2016,
Cadiz, Spain, 2016. JMLR.org. 6

[3] R. Basri and D. Jacobs. Lambertian reﬂectance and linear
subspaces. IEEE Transactions on Pattern Analysis and Ma-
chine Intelligence, 25(2):218–233, 2 2003. 7

[4] A. Beck and M. Teboulle. A Fast Iterative Shrinkage-
Thresholding Algorithm for Linear Inverse Problems. SIAM
Journal on Imaging Sciences, 2(1):183–202, 2009. 2

[5] S. Boyd. Distributed Optimization and Statistical Learning
via the Alternating Direction Method of Multipliers. Founda-
tions and Trends R(cid:13) in Machine Learning, 3(1):1–122, 2010.
2

[6] E. J. Cand`es, X. Li, Y. Ma, and J. Wright. Robust principal
Journal of the ACM, 58(3):1–37, 5

component analysis?
2011. 1, 4, 6

[7] E. J. Cand`es, J. Romberg, and T. Tao. Robust uncertainty
principles: Exact signal reconstruction from highly incom-
IEEE Transactions on Infor-
plete frequency information.
mation Theory, 52(2):489–509, 2 2006. 1

[8] E. J. Candes and T. Tao. Decoding by linear programming.
IEEE Transactions on Information Theory, 51(12):4203–
4215, 12 2005. 1

[9] T. F. Chan. An Improved Algorithm for Computing the Sin-
gular Value Decomposition. ACM Transactions on Mathe-
matical Software, 8(1):72–83, 1982. 5

[10] X. Chen, Z. Han, Y. Wang, Q. Zhao, D. Meng, and Y. Tang.
Robust Tensor Factorization with Unknown Noise. In The
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 5213–5221, 2016. 8

[11] G. M. Davis, S. G. Mallat, and Z. Zhang.

Adap-
tive time-frequency decompositions. Optical Engineering,
33(7):2183–2191, 1994. 2

[12] J. Dean and S. Ghemawat. MapReduce: Simplied Data Pro-
cessing on Large Clusters. Proceedings of 6th Symposium on
Operating Systems Design and Implementation, pages 137–
149, 2004. 5

[13] D. L. Donoho. For most large underdetermined systems
of equations, the minimal L1-norm near-solution approxi-
mates the sparsest near-solution. Comm. Pure Appl. Math.,
59(7):907–934, 2006. 1

[14] M. Elad and M. Aharon. Image denoising via sparse and re-
dundant representation over learned dictionaries. IEEE Tran-
sations on Image Processing, 15(12):3736–3745, 12 2006. 1
[15] T. Fawcett. An introduction to ROC analysis. Pattern Recog-

nition Letters, 27(8):861–874, 2006. 6

[16] R. Ge, J. D. Lee, and T. Ma. Matrix completion has no spu-
In Advances in Neural Information

rious local minimum.

Processing Systems 29: Annual Conference on Neural In-
formation Processing Systems 2016, December 5-10, 2016,
Barcelona, Spain, pages 2973–2981, 2016. 2

[17] A. Georghiades, P. Belhumeur, and D. Kriegman. From few
to many: illumination cone models for face recognition un-
der variable lighting and pose. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 23(6):643–660, 6 2001.
7

[18] D. Goldfarb and Z. T. Qin. Robust Low-Rank Tensor Re-
covery: Models and Algorithms. SIAM Journal on Matrix
Analysis and Applications, 35(1):225–253, 3 2014. 6
[19] G. Golub, S. Nash, and C. Van Loan. A Hessenberg-Schur
method for the problem AX + XB= C. IEEE Transactions
on Automatic Control, 24(6):909–913, 12 1979. 4

[20] N. Goyette, P. M. Jodoin, F. Porikli, J. Konrad, and P. Ish-
war. changedetection.net: A new change detection bench-
In IEEE Computer Society Conference on
mark dataset.
Computer Vision and Pattern Recognition Workshops, pages
1–8, 2012. 6

[21] B. Haeffele, E. Young, and R. Vidal. Structured low-rank
matrix factorization: Optimality, algorithm, and applications
to image processing. In T. Jebara and E. P. Xing, editors, Pro-
ceedings of the 31st International Conference on Machine
Learning (ICML-14), pages 2007–2015. JMLR Workshop
and Conference Proceedings, 2014. 5

[22] B. D. Haeffele and R. Vidal. Global Optimality in Ten-
sor Factorization, Deep Learning, and Beyond. CoRR,
abs/1506.0, 2015. 5

[23] S. Hawe, M. Seibert, and M. Kleinsteuber. Separable Dictio-
nary Learning. Proceedings of the IEEE Computer Society
Conference on Computer Vision and Pattern Recognition, 3
2013. 2, 6

[24] M. Hong, Z. Q. Luo, and M. Razaviyayn. Convergence
analysis of alternating direction method of multipliers for
In 2015 IEEE Interna-
a family of nonconvex problems.
tional Conference on Acoustics, Speech and Signal Process-
ing (ICASSP), pages 3836–3840, 2015. 5

[25] S. H. Hsieh, C. S. Lu, and S. C. Pei. 2D sparse dictionary
learning via tensor decomposition. 2014 IEEE Global Con-
ference on Signal and Information Processing, GlobalSIP
2014, pages 492–496, 2014. 2, 6

[26] T. G. Kolda and B. W. Bader. Tensor Decompositions and
Applications. SIAM Review, 51(3):455–500, 8 2009. 2
[27] L. Li, W. Huang, I.-H. Gu, and Q. Tian. Statistical Modeling
of Complex Backgrounds for Foreground Object Detection.
IEEE Transactions on Image Processing, 13(11):1459–1472,
11 2004. 6

[28] X. Li, Z. Wang, J. Lu, R. Arora, J. D. Haupt, H. Liu, and
T. Zhao. Symmetry, saddle points, and global geometry
of nonconvex matrix factorization. CoRR, abs/1612.09296,
2016. 2

[29] Z. Lin, M. Chen, and Y. Ma. The Augmented Lagrange Mul-
tiplier Method for Exact Recovery of Corrupted Low-Rank
Matrices. arXiv:1009.5055, page 23, 9 2010. 5, 6

[30] Lin Zhang, Lei Zhang, Xuanqin Mou, and D. Zhang. FSIM:
A Feature Similarity Index for Image Quality Assessment.
IEEE Transactions on Image Processing, 20(8):2378–2386,
8 2011. 7

Pattern Recognition. Proceedings of the IEEE, 98(6):1031–
1044, 6 2010. 1

[46] Y. Yang, Y. Feng, and J. A. K. Suykens. Robust Low-
Rank Tensor Recovery With Regularized Redescending M-
IEEE Transactions on Neural Networks and
Estimator.
Learning Systems, 27(9):1933–1946, 9 2015. 6

[47] X. Zhang, L. Wang, and Q. Gu. A Nonconvex Free Lunch
for Low-Rank plus Sparse Matrix Recovery. ArXiv e-prints,
Feb. 2017. 2

[48] Z. Zhang, G. Ely, S. Aeron, N. Hao, and M. Kilmer. Novel
methods for multilinear data completion and de-noising
based on tensor-SVD. Proceedings of the IEEE Computer
Society Conference on Computer Vision and Pattern Recog-
nition, pages 3842–3849, 2014. 2, 6

[49] Q. Zhao, G. Zhou, L. Zhang, A. Cichocki, and S.-I. Amari.
Bayesian Robust Tensor Factorization for Incomplete Mul-
IEEE Transactions on Neural Networks and
tiway Data.
Learning Systems, 27(4):736–748, 4 2016. 6

[50] Z. Zhu, Q. Li, G. Tang, and M. B. Wakin. Global Optimality
in Low-rank Matrix Optimization. ArXiv e-prints, Feb. 2017.
2

[31] C. Lu, J. Feng, Y. Chen, W. Liu, Z. Lin, and S. Yan. Ten-
sor Robust Principal Component Analysis: Exact Recovery
of Corrupted Low-Rank Tensors via Convex Optimization.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), 2016. 2, 6

[32] J. Mairal, M. Elad, and G. Sapiro. Sparse learned represen-
tations for image restoration. Sparse learned representations
for image restoration, (December):1–10, 2008. 1

[33] P. Netrapalli, U. N. Niranjan, S. Sanghavi, A. Anandkumar,
and P. Jain. Non-convex Robust PCA. Advances in Neural
Information Processing Systems 27 (Proceedings of NIPS),
pages 1–9, 10 2014. 6

[34] B. A. Olshausen and D. J. Field. Sparse coding with an over-
complete basis set: A strategy employed by V1? Vision
Research, 37(23):3311–3325, 1997. 1

[35] Q. Pan, D. Kong, C. Ding, and B. Luo. Robust Non-negative
Dictionary Learning. In Proceedings of the Twenty-Eighth
AAAI Conference on Artiﬁcial Intelligence, AAAI’14, pages
2027–2033. AAAI Press, 2014. 6

[36] D. Park, A. Kyrillidis, C. Caramanis, and S. Sanghavi. Find-
ing Low-Rank Solutions via Non-Convex Matrix Factoriza-
tion, Efﬁciently and Provably. ArXiv e-prints, 2016. 2
[37] Y. C. Pati, R. Rezaiifar, and P. S. Krishnaprasad. Orthogonal
matching pursuit: recursive function approximation with ap-
plications to wavelet decomposition. In Proceedings of 27th
Asilomar Conference on Signals, Systems and Computers,
pages 40–44, 11 1993. 2

[38] R. Ramamoorthi and P. Hanrahan. An efﬁcient representa-
tion for irradiance environment maps. In Proceedings of the
28th annual conference on Computer graphics and interac-
tive techniques - SIGGRAPH ’01, volume 64, pages 497–
500, New York, New York, USA, 2001. ACM Press. 7
[39] B. Recht, M. Fazel, and P. A. Parrilo. Guaranteed Minimum-
Rank Solutions of Linear Matrix Equations via Nuclear
Norm Minimization. Optimization Online, 52(3):1–33, 6
2007. 3

[40] R. Rubinstein, A. M. Bruckstein, and M. Elad. Dictionaries
for sparse representation modeling. Proceedings of the IEEE,
98(6):1045–1057, 6 2010. 1, 2

[41] E. Schwab, R. Vidal, and N. Charon. Efﬁcient Global
Spatial-Angular Sparse Coding for Diffusion MRI with Sep-
arable Dictionaries. ArXiv e-prints, Dec. 2016. 2

[42] E. Schwab, R. Vidal, and N. Charon. Spatial-Angular Sparse
Coding for HARDI.
In S. Ourselin, L. Joskowicz, M. R.
Sabuncu, G. Unal, and W. Wells, editors, Medical Image
Computing and Computer-Assisted Intervention – MICCAI
2016: 19th International Conference, Athens, Greece, Oc-
tober 17-21, 2016, Proceedings, Part III, pages 475–483.
Springer International Publishing, Cham, 2016. 2

[43] Y. Wang, W. Yin, and J. Zeng. Global Convergence of
ADMM in Nonconvex Nonsmooth Optimization. ArXiv e-
prints, 2015. 5

[44] K. Wei, J.-F. Cai, T. F. Chan, and S. Leung. Guarantees of
Riemannian Optimization for Low Rank Matrix Completion.
ArXiv e-prints, 2016. 2

[45] J. Wright, Y. Ma, J. Mairal, G. Sapiro, T. S. Huang, and
S. Yan. Sparse Representation for Computer Vision and

Robust Kronecker-Decomposable Component Analysis for Low-Rank Modeling

Mehdi Bahri1

Yannis Panagakis1,2

Stefanos Zafeiriou1,3

1Imperial College London, UK 2Middlesex University, London, UK 3University of Oulu, Finland
mehdi.b.tn@gmail.com, {i.panagakis, s.zafeiriou}@imperial.ac.uk

7
1
0
2
 
l
u
J
 
6
2
 
 
]
L
M

.
t
a
t
s
[
 
 
2
v
6
8
8
7
0
.
3
0
7
1
:
v
i
X
r
a

Abstract

Dictionary learning and component analysis are part
of one of the most well-studied and active research ﬁelds,
at the intersection of signal and image processing, com-
puter vision, and statistical machine learning. In dictionary
learning, the current methods of choice are arguably K-SVD
and its variants, which learn a dictionary (i.e., a decompo-
sition) for sparse coding via Singular Value Decomposition.
In robust component analysis, leading methods derive from
Principal Component Pursuit (PCP), which recovers a low-
rank matrix from sparse corruptions of unknown magnitude
and support. However, K-SVD is sensitive to the presence
of noise and outliers in the training set. Additionally, PCP
does not provide a dictionary that respects the structure of
the data (e.g., images), and requires expensive SVD com-
putations when solved by convex relaxation. In this paper,
we introduce a new robust decomposition of images by com-
bining ideas from sparse dictionary learning and PCP. We
propose a novel Kronecker-decomposable component anal-
ysis which is robust to gross corruption, can be used for
low-rank modeling, and leverages separability to solve sig-
niﬁcantly smaller problems. We design an efﬁcient learning
algorithm by drawing links with a restricted form of tensor
factorization. The effectiveness of the proposed approach
is demonstrated on real-world applications, namely back-
ground subtraction and image denoising, by performing a
thorough comparison with the current state of the art.

1. Introduction

Sparse dictionary learning [40, 45, 34] and Robust Prin-
cipal Component Analysis (RPCA) [6] are two popular
methods of learning representations that assume different
structure and answer different needs, but both are special
cases of structured matrix factorization. Assuming a set of
N data samples x1, . . . , xn represented as the columns of a
matrix X, we seek a decomposition of X into meaningful
components of a given structure, in the generic form:

Where l(·) is a loss function, generally the (cid:96)2 error, and
g(·) a possibly non-smooth regularizer that encourages the
desired structure, often in the form of speciﬁc sparsity re-
quirements.

When Z is taken to be factorized in the form DR, we
obtain a range of different models depending on the choice
of the regularization. Imposing sparsity on the dictionary
D leads to sparse PCA, while sparsity only in the code R
yields sparse dictionary learning. The current methods of
choice for sparse dictionary learning are K-SVD [1] and its
variants [32], which seek an overcomplete dictionary D and
a sparse representation R = [r1, . . . , rn] by minimizing the
following constrained objective:

min
R,D

||X − DR||2

F, s.t. ||ri||0 ≤ T0,

(2)

where ||.||F is the Frobenius norm and ||.||0 is the (cid:96)0 pseudo-
norm, counting the number of non-zero elements. Problem
(2) is solved in an iterative manner that alternates between
sparse coding of the data samples on the current dictionary,
and a process of updating the dictionary atoms to better ﬁt
the data using the Singular Value Decomposition (SVD).
When used to reconstruct images, K-SVD is trained on
overlapping image patches to allow for overcompleteness
[14]. Problems of this form suffer from a high computa-
tional burden that limits their applicability to small patches
that only capture local information, and prevent them from
scaling to larger images.

The recent developments in robust component analysis
are attributed to the advancements in compressive sensing
[7, 13, 8]. In this area, the emblematic model is the Robust
Principal Component Analysis, proposed in [6]. RPCA as-
sumes that the observation matrix X is the sum of a low-
rank component A, and of a sparse matrix E that collects
the gross errors, or outliers. Finding the minimal rank solu-
tion for A and the sparsest solution for E is combinatorial
and NP-hard. Therefore, RPCA is obtained by solving the
Principal Component Pursuit (PCP) in which the discrete
rank and (cid:96)0-norm functions are approximated by their con-
vex envelopes as follows:

min
Z

l(X, Z) + g(Z)

min
A,E

||A||∗ + ||E||1, s.t. X = A + E

(3)

(1)

1

where ||.||∗ is the nuclear norm and ||.||1 is the standard
(cid:96)1 norm. Like sparse dictionary learning, Robust PCA is
a special case of (1). The nuclear-norm relaxation is con-
vex but the cost of performing SVDs on the full-size ma-
trix A is high. Factorization-based formulations exploit
the fact that a rank-r matrix A ∈ Rm×n can be decom-
posed in A = UVT, U ∈ Rm×r, V ∈ Rn×r, to impose
low-rankness. These formulations are non-convex and algo-
rithms may get stuck in local optima or saddle points. We
refer to [28] for recent developments on the convergence of
non-convex matrix factorizations, [44, 36, 50, 47] for low-
rank problems, and [16] speciﬁcally for matrix completion.

1.1. Separable dictionaries

Analytical separable dictionaries have been proposed as
generalizations of 1-dimensional transforms in the form,
e.g., of tensor-product wavelets, and have since fallen out of
ﬂavour for models that drop orthogonality in favour of over-
completeness to achieve geometric invariance [40]. How-
ever, recent work in the compressed sensing literature has
shown a regain of interest for separable dictionaries for
very high-dimensional signals where scalability is a hard-
requirement. Notably, high-resolution spatial angular rep-
resentations of diffusion-MRI signals, such as in HARDI
(High Angular Resolution Diffusion Imaging), represent
each voxel by a 3D signal, yielding prohibitive sampling
times. Traditional compressed sensing techniques can only
handle signal sparsity bounded below by the number of vox-
els (1 atom per voxel) and still cannot meet the needs of
medical imaging, but Kronecker extensions [42, 41] of Or-
thogonal Matching Pursuit (OMP) [37, 11], Dual ADMM
[5], and FISTA [4] allow sparser signals.

The recent Separable Dictionary Learning (SeDiL) [23]
considers a dictionary that factorizes into the Kronecker
product of two smaller dictionaries A and B, and matrix
observations X = (Xi)i. The observations have sparse rep-
resentations R = (Ri)i in the bases A, B, and the learning
problem is recast as:

Squares to solve minA,B,R ||X − R ×1 A ×2 B||F

1.

1.2. Contributions

In this paper, we propose a novel method for separable
dictionary learning based on a robust tensor factorization
that learns simultaneously the dictionary and the sparse rep-
resentations. We extend the previous approaches by intro-
ducing an additional level of structure to make the model
robust to outliers. We do not seek overcompleteness, but
rather promote sparsity in the dictionary to learn a low-
rank representation of the input tensor. In this regard, our
method combines ideas from both Sparse Dictionary Learn-
ing and Robust PCA. We propose a non-convex paralleliz-
able ADMM algorithm and provide experimental evidence
of its effectiveness. Finally, we compare the performance
of our method against several tensor and matrix factoriza-
tion algorithms on computer vision benchmarks, and show
our model systematically matches or outperforms the state
of the art. We make the code available online2 along with
supplementary material.

Notations
Throughout the paper, matrices (vectors) are
denoted by uppercase (lowercase) boldface letters e.g., X,
(x). I denotes the identity matrix of compatible dimen-
sions. The ith column of X is denoted as xi. Tensors
are considered as the multidimensional equivalent of matri-
ces (second-order tensors), and vectors (ﬁrst-order tensors),
and denoted by bold calligraphic letters, e.g., X . The or-
der of a tensor is the number of indices needed to address
its elements. Consequently, each element of an M th-order
.
tensor X is addressed by M indices, i.e., (X )i1,i2,...,iM
=
xi1,i2,...,iM .

The sets of real and integer numbers are denoted by R
and Z, respectively. An M th-order real-valued tensor X is
deﬁned over the tensor space RI1×I2×···×IM , where Im ∈ Z
for m = 1, 2, . . . , M .

The mode-n product of a tensor X ∈ RI1×I2×...×IM
with a matrix U ∈ RJ×In, denoted by X ×n U, is deﬁned
element-wise as

In(cid:88)

in=1

min
A,B,R

1
2

(cid:88)

i

||Xi −ARiBT||2

F +λg(R)+κr(A)+κr(B)

(X ×m x)i1,...,in−1,in+1,...,iM =

xi1,i2,...,iM xin . (5)

(4)
Where the regularizers g and r promote, respectively, spar-
sity in the representations, and low mutual-coherence of the
dictionary D = B ⊗ A. Here, D is constrained to have or-
thogonal columns, i.e., the pair A, B shall lie on the prod-
uct manifold of two product of sphere manifolds. A differ-
ent approach is taken in [25]. A separable 2D dictionary
is learnt in a two-step strategy similar to that of K-SVD.
Each matrix observation Xi is represented as ARiBT. In
the ﬁrst step, the sparse representations Ri are found by 2D
OMP. In the second step, a CP decomposition is performed
on a tensor of residuals via Regularized Alternating Least

product of matrices A ∈ RI×K, and
The Kronecker
B ∈ RL×M , is denoted by A ⊗ B, and yields a matrix
of dimensions I · L × K · M .

Finally, we deﬁne the tensor Tucker rank as the vector of
the ranks of its mode-n unfoldings (i.e., its mode-n ranks),
and the tensor multi-rank [48, 31] as the vector of the ranks
of its frontal slices. More details about tensors, such as the
deﬁnitions of tensor slices and mode-n unfoldings, can be
found in [26] for example.

1c.f . notations for the product ×n
2https://github.com/mbahri/KDRSDL

2. Model and updates

We ﬁrst formulate our structured factorization, and de-

scribe a tailored optimization procedure.

2.1. Robustness and structure

Consider the following Sparse Dictionary Learning
problem with Frobenius-norm regularization on the dictio-
nary D, where we decompose N observations xi ∈ Rmn
on D ∈ Rmn×r1r2 with representations ri ∈ Rr1r2:

min
D,R

(cid:88)

i

||xi − Dri||2

2 + λ

||ri||1 + ||D||F

(6)

(cid:88)

i

We assume a Kronecker-decomposable dictionary D =
B ⊗ A with A ∈ Rm×r1 , B ∈ Rn×r2. To model the pres-
ence of outliers, we introduce a set of vectors ei ∈ Rmn
and, with d = r1r2 + mn, deﬁne the block vectors and
matrices:

yi =

(cid:21)

(cid:20)ri
ei

∈ Rd C = (cid:2)B ⊗ A I(cid:3) ∈ Rmn×d

(7)

We obtain a two-level structured dictionary C and the as-
sociated sparse encodings yi. Breaking-down the variables
to reduce dimensionality and discarding the constant ||I||F:

min
A,B,R,E

(cid:88)

i

||xi − (B ⊗ A)ri − ei||2
2

(cid:88)

+λ

||ri||1 + λ

||ei||1 + ||B ⊗ A||F

(cid:88)

(8)

i

i
Suppose now that the observations xi were obtained by vec-
torizing two-dimensional data such as images, i.e., xi =
vec(Xi), Xi ∈ Rm×n. We ﬁnd preferable to keep the ob-
servations in matrix form as this preserves the spatial struc-
ture of the images, and - as we will see - allows us solve ma-
trix equations efﬁciently instead of high-dimensional linear
systems. Without loss of generality, we choose r1 = r2 = r
and ri = vec(Ri), Ri ∈ Rr×r, and recast the problem as:

min
A,B,R,E

(cid:88)

i

||Xi − ARiBT − Ei||2
F

(cid:88)

+λ

||Ri||1 + λ

||Ei||1 + ||B ⊗ A||F

(cid:88)

(9)

i

i
Equivalently, enforcing the equality constraints and writing
the problem explicitly as a structured tensor factorization:

minA,B,R,E λ||R||1 + λ||E||1 + ||B ⊗ A||F
s.t

X = R ×1 A ×2 B + E

(10)

Where the matrices Xi, Ri, and Ei are concatenated as the
frontal slices of 3-way tensors. Figure 1 illustrates the de-
composition.

We impose r ≤ min(m, n) as a natural upper bound on
the rank of the frontal slices of L = R ×1 A ×2 B, and on
its mode-1 and mode-2 ranks.

Figure 1: Illustration of the decomposition.

2.2. An efﬁcient algorithm

Problem (10) is not jointly convex, but is convex in
each component individually. We resort to an alternating-
direction method and propose a non-convex ADMM proce-
dure that operates on the frontal slices.

Minimizing ||B ⊗ A||F presents a challenge: the prod-
uct is high-dimensional, the two bases are coupled, and
the loss is non-smooth. Using the identity ||A ⊗ B||p =
||A||p||B||p where ||.||p denotes the Schatten-p norm (this
follows from the compatibility of the Kronecker product
with the singular value decomposition), and remarking that
||B||F||A||F ≤ ||A||2
, we minimize a simpler up-
per bound (||ABT||∗ [39]). The resulting sub-problems are
smaller, and therefore more scalable. In order to obtain ex-
act proximal steps for the encodings Ri, we introduce a split
variable Ki such that ∀i, Ki = Ri. Thus, we solve:

F+||B||2

2

F

min
A,B,R,KE
s.t
s.t

λ||R||1 + λ||E||1 + 1

2 (||A||2

F + ||B||2
F)

X = K ×1 A ×2 B + E
R = K

Introducing the tensors of Lagrange multipliers Λ and
Y, such that the ith frontal slice corresponds to the ith con-
straint, and the dual step sizes µ and µK, we formulate the
Augmented Lagrangian of problem (11):

min λ

||Ri||1 + λ

||Ei||1 +

(||A||2

F + ||B||2

F)+

(cid:88)

i

(cid:104)Λi, Xi − AKiBT − Ei(cid:105) +

(cid:104)Yi, Ri − Ki(cid:105)+

||Xi − AKiBT − Ei||2

F +

||Ri − Ki||2
F

(cid:88)

i

(cid:88)

µ
2

i
(cid:88)

i

1
2
(cid:88)

i
µK
2

(cid:88)

i

(11)

(12)

We can now derive the ADMM updates. Each Ei is given
by shrinkage after rescaling:

Ei = Sλ/µ(Xi − AKiBT +

Λi)

(13)

1
µ

A similar rule is immediate to derive for Ri, and solving for
A and B is straightforward with some matrix algebra. We
therefore focus on the computation of the split variable Ki.

Figure 2: Recovery performance with 60% corruption. Rel-
ative (cid:96)2 error and density.

Figure 3: Sample spectrums of A and B, the ground truth
is 42 for A and 12 for B, and is attained. r = 100.

Differentiating, we ﬁnd Ki satisﬁes:

µKKi + µATAKiBTB
= AT(Λi + µ(Xi − Ei))B + µKRi + Yi

(14)

The key for an efﬁcient algorithm is here to recognize equa-
tion (14) is a Stein equation, and can be solved in cubical
time and quadratic space in r by solvers for discrete-time
Sylvester equations - such as the Hessenberg-Schur method
[19] - instead of the naive O(r6) time, O(r4) space solution
of vectorizing the equation in an r2 linear system.

In practice, we solve a slightly different problem with
α (cid:80)
i ||Ri||1 + λ (cid:80)
i ||Ei||1. This introduces an additional
degree of freedom and corresponds to rescaling the coef-
ﬁcients of Ri. We found the modiﬁed problem to be nu-
merically more stable and to allow for tuning of the relative
importance of ||R||1 and ||E||1. We obtain Algorithm 1.

3. Discussion

We show experimentally that our algorithm successfully
recovers the components of the decomposition (10), we then
prove the formulation encourages two different notions of
low-rankness on tensors, and ﬁnally discuss the issues of
non-convexity and convergence.

3.1. Validation on synthetic data

We generated synthetic data following the model’s as-
sumptions by ﬁrst sampling two random bases A and B of
known ranks rA and rB, N Gaussian slices for the core
R, and forming the ground truth L = R ×1 A ×2 B.
We modeled additive random sparse Laplacian noise with
a tensor E whose entries are 0 with probability p, and 1 or
−1 with equal probability otherwise. We generated data for
p = 70% and p = 40%, leading to a noise density of, re-
spectively, 30% and 60%. We measured the reconstruction
error on L, E, and the density of E for varying values of λ,
and α = 1e−2. Our model achieved near-exact recovery of
both L and E, and exact recovery of the density of E, for
suitable values of λ. Experimental evidence is presented in
Figure 2 for the 60% noise case.

The algorithm appears robust to small changes in λ,
which suggests not only one value can lead to optimal re-
sults, and that a simple criterion that provides consistently
good reconstruction may be derived, as in Robust PCA [6].
In the 30% noise case, we did not observe an increase in the
density of E as λ increases, and the (cid:96)2 error on both E and
L was of the order of 1e−7 (c.f . supplementary material).

3.2. Low-rank solutions

Seeing the model from the perspective of Robust PCA
(3), which seeks a low-rank representation A of the dataset
X, we minimize the rank of the low-rank tensor L. More
precisely, we show in theorem 3.1 that we simultaneously
penalize the Tucker rank and the multi-rank of L.

Theorem 3.1. Algorithm 1 encourages low mode-1 and
mode-2 rank, and thus, low-rankness in each frontal slice
of L, for suitable choices of the parameters λ and α.

Proof. From the equivalence of norms in ﬁnite-dimensions,
∃k ∈ R∗
+, ||A ⊗ B||∗ ≤ k||A ⊗ B||F. We minimise
λ||E||1 + α||R||1 + ||A ⊗ B||F. By choosing α = α(cid:48)
k , λ =
λ(cid:48)
k , we penalize rank(A ⊗ B) = rank(A)rank(B). Given
that the rank is a non-negative integer, rank(A) or rank(B)
decreases necessarily. Therefore, we minimize the mode-1
and mode-2 ranks of L = R ×1 A ×2 B. Additionally,
∀i, rank(ARiBT) ≤ min(rank(A), rank(B), rank(Ri)).
Exhibiting a valid k may help in the choice of parame-
ters. We show ∀A ∈ Rm×n, ||A||∗ ≤ (cid:112)min(m, n)||A||F:
We know ∀x ∈ Rn, ||x||1 ≤
n||x||2. By deﬁnition, the
Schatten-p norm of A is the (cid:96)p norm of its singular values.
Recalling the nuclear norm and the Frobenius norm are the
Schatten-1 and Schatten-2 norms, A has min(m, n) singu-
lar values, hence the result.

√

In practice, we ﬁnd that on synthetic data designed to
test the model, we effectively recover the ranks of A and B
regardless of the choice of r, as seen in Figure 3.

Algorithm 1 Kronecker-Decomposable Robust Sparse Dictionary Learning.
1: procedure KDRSDL(X , r, λ, α)
2:
3:
4:

A0, B0, E 0, R0, K0 ← INITIALIZE(X )
while not converged do

µt Λt)

i)T) / (I + µt (cid:80)
i) / (I + µt (cid:80)

i Kt
i(Kt

i(Bt)TBt(Kt
i)T(At+1)TAt+1Kt
i)

i)T)

(At+1)TAt+1, (Bt+1)TBt+1, 1
µt
K

(cid:104)

(At+1)T(Λt

i + µt ˜Xt+1

i

)Bt+1 + Yt
i

+ Rt
i)

(cid:105)

5:
6:
7:
8:
9:

10:

t+1

← X − E t+1

E t+1 ← Sλ/µt (X − Kt ×1 At ×2 Bt + 1
˜X
At+1 ← ((cid:80)
i(µt ˜Xt+1
Bt+1 ← ((cid:80)
i(µt ˜Xt+1
for all i do
i ← STEIN(− µt
Kt+1
µt
K
(Kt+1
Rt+1
i − 1
i ← Sα/µt
µt
K

i)Bt(Kt
i)TAt+1Kt

i + Λt
i + Λt

Yt
i )

K

t+1

− Kt+1 ×1 At+1 ×2 Bt+1)

K(Rt+1 − Kt+1)

end for
Λt+1 ← Λt + µt( ˜X
Y t+1 ← Y t + µt
µt+1 ← min(µ∗, ρµt)
µt+1
K, ρµt
K ← min(µ∗
end while
return A, B, R, E

11:
12:
13:
14:
15:
16:
17:
18: end procedure

K)

3.3. Convergence and complexity

Convergence and initialization: The problem is non-
convex, therefore global convergence is a priori not guar-
anteed. Recent work [24, 43] studies the convergence of
ADMM for non-convex and possibly non-smooth objective
functions with linear constraints. Here, the constraints are
In [21, 22] the authors derive conditions for
not linear.
global optimality in speciﬁc non-convex matrix and tensor
factorizations that may be extended to other formulations,
including our model. However, the theoretical study of the
global convergence of our algorithm is out of the scope of
this paper and is left for future work. Instead, we provide
experimental results and discuss the strategy implemented.

(cid:80)

(cid:80)

(cid:80)

K =

ηN
i ||Ri||F

ηN
i ||Xi||F

i Ui and B = 1
N

We propose a simple initialization scheme in the wake of
[29]. We initialize the bases A and B and the core R by
performing SVD on each observation Xi = UiSiVT
i . We
set Ri = Si, A = 1
i Vi. To ini-
N
tialize the dual-variables for the constraint Xi − ARiBT −
Ei = 0, we take µ0 =
where η is a scal-
(cid:80)
ing coefﬁcient, chosen in practice to be η = 1.25 as in
[29]. Similarly, we chose µ0
. These cor-
respond to averaging the initial values for each individual
slice and its corresponding constraint. Our convergence
criterion corresponds to primal-feasibility of problem (11),
and is given by max(errrec, errsplit) ≤ (cid:15) where errrec =
||Ri−Ki||2
maxi
.
F
||Ri||2
F
Empirically, we obtained systematic convergence to a good
solution, and a linear convergence rate, as shown in Figure
4. The parameter ρ > 1 can be tuned and affects the speed
of convergence. High values may lead to the algorithm di-
verging, while values closer to 1 will lead to an increased
number of iterations. We used ρ = 1.2 and set upper bounds
K × 107 as usual with ADMM.
µ∗ = µ0 × 107 and µ∗

||Xi−ARiBT−Ei||2
F
||Xi||2
F

and errsplit = maxi

K = µ0

Figure 4: Convergence on synthetic data with 30% and 60%
corruption.

Computational complexity: The time and space com-
plexity per iteration of Algorithm 1 are O(N (mnr + (m +
n)r + mn + min(m, n)r2 + r3 + r2)) and O(N (mn +
r2) + (m + n)r + r2). Since r ≤ min(m, n), the terms in
r are asymptotically negligible, but in practice it is useful
to know how the computational requirements scale with the
size of the dictionary. Similarly, the initialization procedure
has cost O(N (mn min(m, n)+(min(m, n))3+mn)+mn)
in time and needs quadratic space per slice, assuming a stan-
dard algorithm is used for the SVD[9]. Several key steps in
the algorithm, such as summations of independent terms,
are trivially distributed in a MapReduce [12] way. Proximal
operators are separable in nature and are therefore paral-
lelizable. Consequently, highly parallel and distributed im-
plementations are possible, and computational complexity
can be further reduced by adaptively adopting sparse linear
algebra structures and algorithms.

4. Experimental evaluation

We compared the performance of our model against a
range of state-of-the-art tensor decomposition algorithms
on four low-rank modeling computer vision benchmarks:

two for image denoising, and two for background subtrac-
tion. As a baseline, we report the performance of ma-
trix Robust PCA implemented via inexact ALM (RPCA)
[6, 29], and of Non-Negative Robust Dictionary Learning
(RNNDL) [35]. We chose the following methods to in-
clude recent representatives of various existing approaches
to low-rank modeling on tensors: The singleton version of
Higher-Order Robust PCA (HORPCA-S) [18] optimizes the
Tucker rank of the tensor through the sum of the nuclear
norms of its unfoldings. In [46], the authors consider a sim-
ilar model but with robust M-estimators as loss functions,
either a Cauchy loss or a Welsh loss, and support both hard
and soft thresholding; we tested the soft-thresholding mod-
els (Cauchy ST and Welsh ST). Non-convex Tensor Robust
PCA (NC TRPCA) [2] adapts to tensors the matrix non-
convex RPCA [33]. Finally, the two Tensor RPCA algo-
rithms [31, 48] (TRPCA ’14 and TRPCA ’16) work with
slightly different deﬁnitions of the tensor nuclear norm as a
convex surrogate of the tensor multi-rank.

For each model, we identiﬁed a maximum of two pa-
rameters to tune via grid-search in order to keep parameter
tuning tractable. When criteria or heuristics for choosing
the parameters were provided by the authors, we chose the
search space around the value obtained from them. In all
cases, the tuning process explored a wide range of parame-
ters to maximize performance. The range of values investi-
gated are provided as supplementary material.

When the performance of one method was signiﬁcantly
worse than that of the other, the result is not reported so as
not to clutter the text, and is made available in the supple-
mentary material. This is the case of Separable Dictionary
Learning [23] whose drastically different nature renders un-
suitable for robust low-rank modeling, but was compared
for completeness. For the same reason, we did not compare
our method against K-SVD [1], or [25].

4.1. Background subtraction

Background subtraction is a common task in computer
vision and can be tackled by robust low-rank modeling: the
static or mostly static background of a video sequence can
effectively be represented as a low-rank tensor while the
foreground forms a sparse component of outliers.

Experimental procedure We compared the algorithms
on two benchmarks. The ﬁrst is an excerpt of the Highway
dataset [20], and consists in a video sequence of cars travel-
ling on a highway; the background is completely static. We
kept 400 gray-scale images re-sized to 48 × 64 pixels. The
second is the Airport Hall dataset ([27]) and has been cho-
sen as a more challenging benchmark since the background
is not fully static and the scene is richer. We used the same
excerpt of 300 frames (frames 3301 to 3600) as in [49], and
kept the frames in their original size of 144 × 176 pixels.

We treat background subtraction as a binary classiﬁca-

(a) Cauchy ST

(b) Welsh ST (c) TRPCA ’16 (d) HORPCA-S (e) NCTRPCA

(f) RNNDL

(g) RPCA

(h) KDRSDL (i) Ground truth

(j) Original

Figure 5: Results on Airport Hall. TRPCA ’14 removed.

tion problem. Since ground truth frames are available for
our excerpts, we report the AUC [15] on both videos. The
value of α was set to 1e−2 for both experiments.

Results We provide the original, ground truth, and recov-
ered frames in Figure 5 for the Hall experiment (Highway
in supplementary material).

Table 1 presents the AUC scores of the algorithms,
ranked in order of their mean performance on the two
benchmarks. The two matrix methods rank high on both
benchmarks and only half of the tensor algorithms match
or outperform this baseline. Our proposed model matches
the best performance on the Highway dataset and provides
signiﬁcantly higher performance than the other on the more
challenging Hall benchmark. Visual inspection of the re-
sults show KDRSDL is the only method that doesn’t fully
capture the immobile people in the background, and there-
fore achieves the best trade-off between foreground detec-
tion and background-foreground contamination.

Algorithm
KDRSDL (proposed)
TRPCA ’16
NC TRPCA
RPCA (baseline)
RNNDL (baseline)
HORPCA-S
Cauchy ST
Welsh ST
TRPCA ’14

Highway
0.94
0.94
0.93
0.94
0.94
0.93
0.83
0.82
0.76

Hall
0.88
0.86
0.86
0.85
0.85
0.86
0.76
0.71
0.61

Table 1: AUC on Highway and Hall ordered by mean AUC.

4.2. Image denoising

Many natural and artiﬁcial images exhibit an inherent
low-rank structure and are suitably denoised by low-rank
modeling algorithms. In this section, we assess the perfor-
mance of the cohort on two datasets chosen for their popu-
larity, and for the typical use cases they represent.

We consider collections of grayscale images, and color
images represented as 3-way tensors. Laplacian (salt & pep-
per) noise was introduced separately in all frontal slices of

(a) Cauchy ST

(b) Welsh ST (c) TRPCA ’16 (d) HORPCA-S (e) NCTRPCA

(f) RNNDL

(g) RPCA

(h) KDRSDL

(i) Noisy

(j) Original

Figure 7: Results on the Yale benchmark with 30% noise.
TRPCA ’14 removed.

At the 10% noise level, nearly every method provided
good to excellent recovery of the original images. We there-
fore omit this noise level (c.f . supplementary material). On
the other hand, most methods, with the notable exception
of KDRSDL, NC TRPCA, and TRPCA ’16, failed to pro-
vide acceptable reconstruction in the gross corruption case.
Thus, we present the denoised images at the 30% level,
and compare the performance of the three best performing
methods in Table 2 for the 60% noise level.

Clear differences appeared at the 30% noise level, as
demonstrated both by the quantitative metrics, and by visual
inspection of Figure 7. Overall, performance was markedly
lower than at the 10% level, and most methods started to
lose much of the details. Visual inspection of the results
conﬁrms a higher reconstruction quality for KDRSDL. We
invite the reader to look at the texture of the skin, the white
of the eye, and at the reﬂection of the light on the subject’s
skin and pupil. The latter, in particular, is very close in na-
ture to the white pixel corruption of the salt & pepper noise.
Out of all methods, KDRSDL provided the best reconstruc-
tion quality: it is the only algorithm that removed all the
noise and for which all the aforementioned details are dis-
tinguishable in the reconstruction.

Noisy

PSNR
FSIM

KDRSDL

NC TRPCA TRPCA ’16

26.6057
0.8956

22.8502
0.8509

22.566
0.8427

Table 2: Three best results on Yale at 60% noise.

At the 60% noise level, our method scored markedly
higher than its competitors on image quality metrics, as
seen both in Figure 6 and in Table 2. Visualizing the re-

Figure 6: Mean PSNR and FSIM on the 64 images of the
ﬁrst subject of Yale at noise levels 10%, 30%, and 60%.

the observation tensor at three different levels: 10%, 30%,
and 60% to simulate medium, high, and gross corruption. In
these experiments we set the value of α to 1e−3 for noise
levels up to 30%, and to 1e−2 at the 60% level.

We report two quantitative metrics designed to measure
two key aspects of image recovery. The Peak Signal To
Noise Ratio (PSNR) will be used as an indicator of the
element-wise reconstruction quality of the signals, while
the Feature Similarity Index (FSIM, FSIMc for color im-
ages) [30] evaluates the recovery of structural information.
Quantitative metrics are not perfect replacements for sub-
jective visual assessment of image quality; therefore, we
present sample reconstructed images for veriﬁcation. Our
measure of choice for determining which images to com-
pare visually is the FSIM(c) for its higher correlation with
human evaluation than the PSNR.

Monochromatic face images Our face denoising exper-
iment uses the Extented Yale-B dataset [17] of 10 different
subject, each under 64 different lighting conditions. Ac-
cording to [38, 3], face images of one subject under vari-
ous illuminations lie approximately on a 9-dimensional sub-
space, and are therefore suitable for low-rank modeling. We
used the pre-cropped 64 images of the ﬁrst subject and kept
them at full resolution. The resulting collection of images
constitutes a 3-way tensor of 64 images of size 192 × 168.
Each mode corresponds respectively to the columns and
rows of the image, and to the illumination component. All
three are expected to be low-rank due to the spatial corre-
lation within frontal slices and to the correlation between
images of the same subject under different illuminations.
We present the comparative quantitative performance of the
methods tested in Figure 6, and provide visualizations of the
reconstructed ﬁrst image at the 30% noise level in Figure 7.
We report the metrics averaged on the 64 images.

(a) Cauchy ST

(b) Welsh ST (c) TRPCA ’14 (d) TRPCA ’16 (e) HORPCA-S

(f) NCTRPCA

(g) RNNDL

(h) RPCA

(i) KDRSDL

(j) Noisy

Figure 8: PSNR and FSIMc of all methods on the Facade
benchmark at noise levels 10%, 30%, and 60%.

Figure 9: Results on the Facade benchmark with 30% noise.

(k) Original

constructions conﬁrms the difference: the image recovered
by KDRSDL at the 60% noise level is comparable to the
output of competing algorithms at the 30% noise level.

Color image denoising Our benchmark is the Facade im-
age [10]: the rich details and lighting makes it interesting
to assess ﬁne reconstruction. The geometric nature of the
building’s front wall, and the strong correlation between the
RGB bands indicate the data can be modeled by a low-rank
3-way tensor where each frontal slice is a color channel.

At the 10% noise level, KDRSDL attained the high-
est PSNR, and among the highest FSIMc values. Most
methods provided excellent reconstruction, in agreement
with the high values of the metrics shown in Figure 8.
As in the previous benchmark, the results are omitted be-
cause of the space constraints (c.f . supplementary material).
At the 30% noise level, Cauchy ST exhibited the highest
PSNR, while TRPCA ’16 scored best on the FSIMc met-
ric. KDRSDL had the second highest PSNR and among the
highest FSIMc. Details of the results are provided in Figure
9. Visually, clear differences are visible, and are best seen
on the ﬁne details of the picture, such as the black iron orna-
ments, or the light coming through the window. Our method
best preserved the dynamics of the lighting, and the sharp-
ness of the details, and in the end provided the reconstruc-
tion visually closest to original. Competing models tend to
oversmooth the image, and to make the light dimmer; indi-
cating substantial losses of high-frequency and dynamic in-
formation. KDRSDL appears to also provide the best color
ﬁdelity.

In the gross-corruption case, KDRSDL was the best per-
former on both PSNR and FSIMc. As seen on Figure
3, KDRSDL was the only method with TRPCA ’16 and
HORPCA-S to provide a reconstruction with distinguish-
able details, and did it best.

Noisy

PSNR
FSIMc

KDRSDL

TRPCA ’16 HORPCA-S

23.8064
0.9152

23.6552
0.9109

22.8811
0.9060

Table 3: Three best results on Facade at 60% noise.

5. Conclusion

The method we propose combines aspects from Ro-
bust Principal Component Analysis, and Sparse Dictionary
Learning. As in K-SVD, our algorithm learns iteratively
and alternatively both the dictionary and the sparse repre-
sentations. Similarly to Robust PCA, our method assumes
the data decompose additively in a sparse and low-rank
component, and is able to separate the two signals. We
introduce a two-level structure in the dictionary to allow
for both scalable training, and robustness to outliers. Im-
posing this structure exhibits links with tensor factoriza-
tions and allows us to better model spatial correlation in
images than classical matrix methods. These theoretical ad-
vantages translate directly in the experimental performance,
as our method exhibits desirable scalability properties, and
matches or outperforms the current state of the art in low-
rank modeling.

6. Acknowledgements

The work of Y. Panagakis has been partially supported
by the European Community Horizon 2020 [H2020/2014-
645094 (SEWA).
2020] under Grant Agreement No.
S. Zafeiriou was partially funded by EPSRC Project
EP/N007743/1 (FACER2VM).

References

[1] M. Aharon, M. Elad, and A. Bruckstein. K-SVD: An al-
gorithm for designing overcomplete dictionaries for sparse
IEEE Transactions on Signal Processing,
representation.
54(11):4311–4322, 2006. 1, 6

[2] A. Anandkumar, P. Jain, Y. Shi, and U. N. Niranjan. Ten-
sor vs Matrix Methods: Robust Tensor Decomposition under
Block Sparse Perturbations. In A. Gretton and R. C. Chris-
tian, editors, Proceedings of the 19th International Confer-
ence on Artiﬁcial Intelligence and Statistics, AISTATS 2016,
Cadiz, Spain, 2016. JMLR.org. 6

[3] R. Basri and D. Jacobs. Lambertian reﬂectance and linear
subspaces. IEEE Transactions on Pattern Analysis and Ma-
chine Intelligence, 25(2):218–233, 2 2003. 7

[4] A. Beck and M. Teboulle. A Fast Iterative Shrinkage-
Thresholding Algorithm for Linear Inverse Problems. SIAM
Journal on Imaging Sciences, 2(1):183–202, 2009. 2

[5] S. Boyd. Distributed Optimization and Statistical Learning
via the Alternating Direction Method of Multipliers. Founda-
tions and Trends R(cid:13) in Machine Learning, 3(1):1–122, 2010.
2

[6] E. J. Cand`es, X. Li, Y. Ma, and J. Wright. Robust principal
Journal of the ACM, 58(3):1–37, 5

component analysis?
2011. 1, 4, 6

[7] E. J. Cand`es, J. Romberg, and T. Tao. Robust uncertainty
principles: Exact signal reconstruction from highly incom-
IEEE Transactions on Infor-
plete frequency information.
mation Theory, 52(2):489–509, 2 2006. 1

[8] E. J. Candes and T. Tao. Decoding by linear programming.
IEEE Transactions on Information Theory, 51(12):4203–
4215, 12 2005. 1

[9] T. F. Chan. An Improved Algorithm for Computing the Sin-
gular Value Decomposition. ACM Transactions on Mathe-
matical Software, 8(1):72–83, 1982. 5

[10] X. Chen, Z. Han, Y. Wang, Q. Zhao, D. Meng, and Y. Tang.
Robust Tensor Factorization with Unknown Noise. In The
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 5213–5221, 2016. 8

[11] G. M. Davis, S. G. Mallat, and Z. Zhang.

Adap-
tive time-frequency decompositions. Optical Engineering,
33(7):2183–2191, 1994. 2

[12] J. Dean and S. Ghemawat. MapReduce: Simplied Data Pro-
cessing on Large Clusters. Proceedings of 6th Symposium on
Operating Systems Design and Implementation, pages 137–
149, 2004. 5

[13] D. L. Donoho. For most large underdetermined systems
of equations, the minimal L1-norm near-solution approxi-
mates the sparsest near-solution. Comm. Pure Appl. Math.,
59(7):907–934, 2006. 1

[14] M. Elad and M. Aharon. Image denoising via sparse and re-
dundant representation over learned dictionaries. IEEE Tran-
sations on Image Processing, 15(12):3736–3745, 12 2006. 1
[15] T. Fawcett. An introduction to ROC analysis. Pattern Recog-

nition Letters, 27(8):861–874, 2006. 6

[16] R. Ge, J. D. Lee, and T. Ma. Matrix completion has no spu-
In Advances in Neural Information

rious local minimum.

Processing Systems 29: Annual Conference on Neural In-
formation Processing Systems 2016, December 5-10, 2016,
Barcelona, Spain, pages 2973–2981, 2016. 2

[17] A. Georghiades, P. Belhumeur, and D. Kriegman. From few
to many: illumination cone models for face recognition un-
der variable lighting and pose. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 23(6):643–660, 6 2001.
7

[18] D. Goldfarb and Z. T. Qin. Robust Low-Rank Tensor Re-
covery: Models and Algorithms. SIAM Journal on Matrix
Analysis and Applications, 35(1):225–253, 3 2014. 6
[19] G. Golub, S. Nash, and C. Van Loan. A Hessenberg-Schur
method for the problem AX + XB= C. IEEE Transactions
on Automatic Control, 24(6):909–913, 12 1979. 4

[20] N. Goyette, P. M. Jodoin, F. Porikli, J. Konrad, and P. Ish-
war. changedetection.net: A new change detection bench-
In IEEE Computer Society Conference on
mark dataset.
Computer Vision and Pattern Recognition Workshops, pages
1–8, 2012. 6

[21] B. Haeffele, E. Young, and R. Vidal. Structured low-rank
matrix factorization: Optimality, algorithm, and applications
to image processing. In T. Jebara and E. P. Xing, editors, Pro-
ceedings of the 31st International Conference on Machine
Learning (ICML-14), pages 2007–2015. JMLR Workshop
and Conference Proceedings, 2014. 5

[22] B. D. Haeffele and R. Vidal. Global Optimality in Ten-
sor Factorization, Deep Learning, and Beyond. CoRR,
abs/1506.0, 2015. 5

[23] S. Hawe, M. Seibert, and M. Kleinsteuber. Separable Dictio-
nary Learning. Proceedings of the IEEE Computer Society
Conference on Computer Vision and Pattern Recognition, 3
2013. 2, 6

[24] M. Hong, Z. Q. Luo, and M. Razaviyayn. Convergence
analysis of alternating direction method of multipliers for
In 2015 IEEE Interna-
a family of nonconvex problems.
tional Conference on Acoustics, Speech and Signal Process-
ing (ICASSP), pages 3836–3840, 2015. 5

[25] S. H. Hsieh, C. S. Lu, and S. C. Pei. 2D sparse dictionary
learning via tensor decomposition. 2014 IEEE Global Con-
ference on Signal and Information Processing, GlobalSIP
2014, pages 492–496, 2014. 2, 6

[26] T. G. Kolda and B. W. Bader. Tensor Decompositions and
Applications. SIAM Review, 51(3):455–500, 8 2009. 2
[27] L. Li, W. Huang, I.-H. Gu, and Q. Tian. Statistical Modeling
of Complex Backgrounds for Foreground Object Detection.
IEEE Transactions on Image Processing, 13(11):1459–1472,
11 2004. 6

[28] X. Li, Z. Wang, J. Lu, R. Arora, J. D. Haupt, H. Liu, and
T. Zhao. Symmetry, saddle points, and global geometry
of nonconvex matrix factorization. CoRR, abs/1612.09296,
2016. 2

[29] Z. Lin, M. Chen, and Y. Ma. The Augmented Lagrange Mul-
tiplier Method for Exact Recovery of Corrupted Low-Rank
Matrices. arXiv:1009.5055, page 23, 9 2010. 5, 6

[30] Lin Zhang, Lei Zhang, Xuanqin Mou, and D. Zhang. FSIM:
A Feature Similarity Index for Image Quality Assessment.
IEEE Transactions on Image Processing, 20(8):2378–2386,
8 2011. 7

Pattern Recognition. Proceedings of the IEEE, 98(6):1031–
1044, 6 2010. 1

[46] Y. Yang, Y. Feng, and J. A. K. Suykens. Robust Low-
Rank Tensor Recovery With Regularized Redescending M-
IEEE Transactions on Neural Networks and
Estimator.
Learning Systems, 27(9):1933–1946, 9 2015. 6

[47] X. Zhang, L. Wang, and Q. Gu. A Nonconvex Free Lunch
for Low-Rank plus Sparse Matrix Recovery. ArXiv e-prints,
Feb. 2017. 2

[48] Z. Zhang, G. Ely, S. Aeron, N. Hao, and M. Kilmer. Novel
methods for multilinear data completion and de-noising
based on tensor-SVD. Proceedings of the IEEE Computer
Society Conference on Computer Vision and Pattern Recog-
nition, pages 3842–3849, 2014. 2, 6

[49] Q. Zhao, G. Zhou, L. Zhang, A. Cichocki, and S.-I. Amari.
Bayesian Robust Tensor Factorization for Incomplete Mul-
IEEE Transactions on Neural Networks and
tiway Data.
Learning Systems, 27(4):736–748, 4 2016. 6

[50] Z. Zhu, Q. Li, G. Tang, and M. B. Wakin. Global Optimality
in Low-rank Matrix Optimization. ArXiv e-prints, Feb. 2017.
2

[31] C. Lu, J. Feng, Y. Chen, W. Liu, Z. Lin, and S. Yan. Ten-
sor Robust Principal Component Analysis: Exact Recovery
of Corrupted Low-Rank Tensors via Convex Optimization.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), 2016. 2, 6

[32] J. Mairal, M. Elad, and G. Sapiro. Sparse learned represen-
tations for image restoration. Sparse learned representations
for image restoration, (December):1–10, 2008. 1

[33] P. Netrapalli, U. N. Niranjan, S. Sanghavi, A. Anandkumar,
and P. Jain. Non-convex Robust PCA. Advances in Neural
Information Processing Systems 27 (Proceedings of NIPS),
pages 1–9, 10 2014. 6

[34] B. A. Olshausen and D. J. Field. Sparse coding with an over-
complete basis set: A strategy employed by V1? Vision
Research, 37(23):3311–3325, 1997. 1

[35] Q. Pan, D. Kong, C. Ding, and B. Luo. Robust Non-negative
Dictionary Learning. In Proceedings of the Twenty-Eighth
AAAI Conference on Artiﬁcial Intelligence, AAAI’14, pages
2027–2033. AAAI Press, 2014. 6

[36] D. Park, A. Kyrillidis, C. Caramanis, and S. Sanghavi. Find-
ing Low-Rank Solutions via Non-Convex Matrix Factoriza-
tion, Efﬁciently and Provably. ArXiv e-prints, 2016. 2
[37] Y. C. Pati, R. Rezaiifar, and P. S. Krishnaprasad. Orthogonal
matching pursuit: recursive function approximation with ap-
plications to wavelet decomposition. In Proceedings of 27th
Asilomar Conference on Signals, Systems and Computers,
pages 40–44, 11 1993. 2

[38] R. Ramamoorthi and P. Hanrahan. An efﬁcient representa-
tion for irradiance environment maps. In Proceedings of the
28th annual conference on Computer graphics and interac-
tive techniques - SIGGRAPH ’01, volume 64, pages 497–
500, New York, New York, USA, 2001. ACM Press. 7
[39] B. Recht, M. Fazel, and P. A. Parrilo. Guaranteed Minimum-
Rank Solutions of Linear Matrix Equations via Nuclear
Norm Minimization. Optimization Online, 52(3):1–33, 6
2007. 3

[40] R. Rubinstein, A. M. Bruckstein, and M. Elad. Dictionaries
for sparse representation modeling. Proceedings of the IEEE,
98(6):1045–1057, 6 2010. 1, 2

[41] E. Schwab, R. Vidal, and N. Charon. Efﬁcient Global
Spatial-Angular Sparse Coding for Diffusion MRI with Sep-
arable Dictionaries. ArXiv e-prints, Dec. 2016. 2

[42] E. Schwab, R. Vidal, and N. Charon. Spatial-Angular Sparse
Coding for HARDI.
In S. Ourselin, L. Joskowicz, M. R.
Sabuncu, G. Unal, and W. Wells, editors, Medical Image
Computing and Computer-Assisted Intervention – MICCAI
2016: 19th International Conference, Athens, Greece, Oc-
tober 17-21, 2016, Proceedings, Part III, pages 475–483.
Springer International Publishing, Cham, 2016. 2

[43] Y. Wang, W. Yin, and J. Zeng. Global Convergence of
ADMM in Nonconvex Nonsmooth Optimization. ArXiv e-
prints, 2015. 5

[44] K. Wei, J.-F. Cai, T. F. Chan, and S. Leung. Guarantees of
Riemannian Optimization for Low Rank Matrix Completion.
ArXiv e-prints, 2016. 2

[45] J. Wright, Y. Ma, J. Mairal, G. Sapiro, T. S. Huang, and
S. Yan. Sparse Representation for Computer Vision and

