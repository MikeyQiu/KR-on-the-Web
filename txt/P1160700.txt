Learning with Noise: Enhance Distantly Supervised Relation Extraction
with Dynamic Transition Matrix

Bingfeng Luo1, Yansong Feng∗1, Zheng Wang2, Zhanxing Zhu3,
Songfang Huang4, Rui Yan1 and Dongyan Zhao1
1ICST, Peking University, China
2School of Computing and Communications, Lancaster University, UK
3Peking University, China
4IBM China Research Lab, China
{bf luo,fengyansong,zhanxing.zhu,ruiyan,zhaody}@pku.edu.cn
z.wang@lancaster.ac.uk
huangsf@cn.ibm.com

Abstract

Distant supervision signiﬁcantly reduces
human efforts in building training data for
many classiﬁcation tasks. While promis-
ing, this technique often introduces noise
to the generated training data, which can
severely affect the model performance. In
this paper, we take a deep look at the appli-
cation of distant supervision in relation ex-
traction. We show that the dynamic transi-
tion matrix can effectively characterize the
noise in the training data built by distant
supervision. The transition matrix can be
effectively trained using a novel curricu-
lum learning based method without any di-
rect supervision about the noise. We thor-
oughly evaluate our approach under a wide
range of extraction scenarios. Experimen-
tal results show that our approach consis-
tently improves the extraction results and
outperforms the state-of-the-art in various
evaluation scenarios.

1

Introduction

Distant supervision (DS) is rapidly emerging as a
viable means for supporting various classiﬁcation
tasks – from relation extraction (Mintz et al., 2009)
and sentiment classiﬁcation (Go et al., 2009) to
cross-lingual semantic analysis (Fang and Cohn,
2016). By using knowledge learned from seed ex-
amples to label data, DS automatically prepares
large scale training data for these tasks.

While promising, DS does not guarantee per-
fect results and often introduces noise to the gener-
ated data. In the context of relation extraction, DS
works by considering sentences containing both
the subject and object of a <subj, rel, obj> triple

as its supports. However, the generated data are
not always perfect. For instance, DS could match
the knowledge base (KB) triple, <Donald Trump,
born-in, New York> in false positive contexts
like Donald Trump worked in New York City. Prior
works (Takamatsu et al., 2012; Ritter et al., 2013)
show that DS often mistakenly labels real posi-
tive instances as negative (false negative) or versa
vice (false positive), and there could be confu-
sions among positive labels as well. These noises
can severely affect training and lead to poorly-
performing models.

Tackling the noisy data problem of DS is non-
trivial, since there usually lacks of explicit super-
vision to capture the noise. Previous works have
tried to remove sentences containing unreliable
syntactic patterns (Takamatsu et al., 2012), design
new models to capture certain types of noise or
aggregate multiple predictions under the at-least-
one assumption that at least one of the aligned
sentences supports the triple in KB (Riedel et al.,
2010; Surdeanu et al., 2012; Ritter et al., 2013;
Min et al., 2013). These approaches represent a
substantial leap forward towards making DS more
practical. however, are either tightly couple to cer-
tain types of noise, or have to rely on manual rules
to ﬁlter noise, thus unable to scale. Recent break-
through in neural networks provides a new way
to reduce the inﬂuence of incorrectly labeled data
by aggregating multiple training instances atten-
tively for relation classiﬁcation, without explicitly
characterizing the inherent noise (Lin et al., 2016;
Zeng et al., 2015). Although promising, modeling
noise within neural network architectures is still in
its early stage and much remains to be done.

In this paper, we aim to enhance DS noise mod-
eling by providing the capability to explicitly char-
acterize the noise in the DS-style training data

7
1
0
2
 
y
a
M
 
1
1
 
 
]
L
C
.
s
c
[
 
 
1
v
5
9
9
3
0
.
5
0
7
1
:
v
i
X
r
a

within neural networks architectures. We show
that while noise is inevitable, it is possible to char-
acterize the noise pattern in a uniﬁed framework
along with its original classiﬁcation objective. Our
key insight is that the DS-style training data typi-
cally contain useful clues about the noise pattern.
For example, we can infer that since some peo-
ple work in their birthplaces, DS could wrongly la-
bel a training sentence describing a working place
as a born-in relation. Our novel approach to
noisy modeling is to use a dynamically-generated
transition matrix for each training instance to (1)
characterize the possibility that the DS labeled re-
lation is confused and (2) indicate its noise pat-
tern. To tackle the challenge of no direct guidance
over the noise pattern, we employ a curriculum
learning based training method to gradually model
the noise pattern over time, and utilize trace regu-
larization to control the behavior of the transition
matrix during training. Our approach is ﬂexible –
while it does not make any assumptions about the
data quality, the algorithm can make effective use
of the data-quality prior knowledge to guide the
learning procedure when such clues are available.
We apply our method to the relation extraction
task and evaluate under various scenarios on two
benchmark datasets. Experimental results show
that our approach consistently improves both ex-
traction settings, outperforming the state-of-the-
art models in different settings.

Our work offers an effective way for tackling
the noisy data problem of DS, making DS more
practical at scale. Our main contributions are to
(1) design a dynamic transition matrix structure to
characterize the noise introduced by DS, and (2)
design a curriculum learning based framework to
adaptively guide the training procedure to learn
with noise.

2 Problem Deﬁnition

The task of distantly supervised relation extraction
is to extract knowledge triples, <subj, rel, obj>,
from free text with the training data constructed
by aligning existing KB triples with a large cor-
pus. Speciﬁcally, given a triple in KB, DS works
by ﬁrst retrieving all the sentences containing both
subj and obj of the triple, and then constructing
the training data by considering these sentences as
support to the existence of the triple. This task
can be conducted in both the sentence and the bag
levels. The former takes a sentence s containing

Figure 1: Overview of our approach

both subj and obj as input, and outputs the rela-
tion expressed by the sentence between subj and
obj. The latter setting alleviates the noisy data
problem by using the at-least-one assumption that
at least one of the retrieved sentences containing
both subj and obj supports the <subj, rel, obj>
triple. It takes a bag of sentences S as input where
each sentence s ∈ S contains both subj and obj,
and outputs the relation between subj and obj ex-
pressed by this bag.

3 Our approach

In order to deal with the noisy training data ob-
tained through DS, our approach follows four steps
as depicted in Figure 1. First, each input sentence
is fed to a sentence encoder to generate an embed-
ding vector. Our model then takes the sentence
embeddings as input and produce a predicted re-
lation distribution, p, for the input sentence (or
the input sentence bag). At the same time, our
model dynamically produces a transition matrix,
T, which is used to characterize the noise pattern
of sentence (or the bag). Finally, the predicted
distribution is multiplied by the transition matrix
to produce the observed relation distribution, o,
which is used to match the noisy relation labels
assigned by DS while the predicted relation dis-
tribution p serves as output of our model during
testing. One of the key challenges of our approach
is on determining the element values of the transi-
tion matrix, which will be described in Section 4.

3.1 Sentence-level Modeling

Sentence Embedding and Prediction In this
work, we use a piecewise convolutional neural net-
work (Zeng et al., 2015) for sentence encoding,
but other sentence embedding models can also be
used. We feed the sentence embedding to a full
connection layer, and use softmax to generate the
predicted relation distribution, p.

Noise Modeling First, each sentence embedding
x, generated b sentence encoder, is passed to a full
connection layer as a non-linearity to obtain the
sentence embedding xn used speciﬁcally for noise
modeling. We then use softmax to calculate the

transition matrix T, for each sentence:

respect to each relation j, and aggregates to the
bag level as sj, by the following equations1:

Tij =

ijxn + b)

exp(wT
j=1 exp(wT

(cid:80)|C|

ijxn + b)

(1)

where Tij is the conditional probability for the in-
put sentence to be labeled as relation j by DS,
given i as the true relation, b is a scalar bias, |C| is
the number of relations, wij is the weight vector
characterizing the confusion between i and j.

Here, we dynamically produce a transition ma-
trix, T, speciﬁcally for each sentence, but with the
parameters (wij) shared across the dataset. By do-
ing so, we are able to adaptively characterize the
noise pattern for each sentence, with a few pa-
In contrast, one could also pro-
rameters only.
duce a global transition matrix for all sentences,
with much less computation, where one need not
to compute T on the ﬂy (see Section 6.1).

Observed Distribution When we characterize
the noise in a sentence with a transition matrix T,
if its true relation is i, we can assume that i might
be erroneously labeled as relation j by DS with
probability Tij. We can therefore capture the ob-
served relation distribution, o, by multiplying T
and the predicted relation distribution, p:

o = TT · p

(2)

where o is then normalized to ensure (cid:80)

i oi = 1.
Rather than using the predicted distribution p
to directly match the relation labeled by DS (Zeng
et al., 2015; Lin et al., 2016), here we utilize o to
match the noisy labels during training and still use
p as output during testing, which actually captures
the procedure of how the noisy label is produced
and thus protects p from the noise.

3.2 Bag Level Modeling

Bag Embedding and Prediction One of the key
challenges for bag level model is how to aggre-
gate the embeddings of individual sentences into
the bag level.
In this work, we experiment two
methods, namely average and attention aggrega-
tion (Lin et al., 2016). The former calculates the
bag embedding, s, by averaging the embeddings of
each sentence, and then feed it to a softmax classi-
ﬁer for relation classiﬁcation.

The attention aggregation calculates an atten-
tion value, aij, for each sentence i in the bag with

sj =

aijxi; aij =

n
(cid:88)

i

exp(xT
i rj)
i(cid:48) exp(xT

i(cid:48) rj)

(cid:80)n

(3)

where xi is the embedding of sentence i, n the
number of sentences in the bag, and rj is the ran-
domly initialized embedding for relation j. In sim-
ilar spirit to (Lin et al., 2016), the resulting bag
embedding sj is fed to a softmax classiﬁer to pre-
dict the probability of relation j for the given bag.

Noise Modeling Since the transition matrix ad-
dresses the transition probability with respect to
each true relation, the attention mechanism ap-
pears to be a natural ﬁt for calculating the tran-
sition matrix in bag level. Similar to attention ag-
gregation above, we calculate the bag embedding
with respect to each relation using Equation 3, but
with a separate set of relation embeddings r(cid:48)
j. We
then calculate the transition matrix, T, by:

Tij =

i r(cid:48)
exp(sT
j=1 exp(sT

j + bi)
i r(cid:48)

j + bi)

(cid:80)|C|

(4)

where si is the bag embedding regarding relation
i, and r(cid:48)
j is the embedding for relation j.

4 Curriculum Learning based Training

One of the key challenges of this work is on
how to train and produce the transition matrix
to model the noise in the training data without
any direct guidance and human involvement. A
straightforward solution is to directly align the ob-
served distribution, o, with respect to the noisy
labels by minimizing the sum of the two terms:
CrossEntropy(o) + Regularization. However,
doing so does not guarantee that the prediction dis-
tribution, p, will match the true relation distribu-
tion. The problem is at the beginning of the train-
ing, we have no prior knowledge about the noise
pattern, thus, both T and p are less reliable, mak-
ing the training procedure be likely to trap into
some poor local optimum. Therefore, we require
a technique to guide our model to gradually adapt
to the noisy training data, e.g., learning something
simple ﬁrst, and then trying to deal with noises.

1While (Lin et al., 2016) use bilinear function to calcu-
late aij, we simply use dot product since we ﬁnd these two
functions perform similarly in our experiments.

Fortunately,

this is exactly what curriculum
learning can do. The idea of curriculum learn-
ing (Bengio et al., 2009) is simple: starting with
the easiest aspect of a task, and leveling up the dif-
ﬁculty gradually, which ﬁts well to our problem.
We thus employ a curriculum learning framework
to guide our model to gradually learn how to char-
acterize the noise. Another advantage is to avoid
falling into poor local optimum.

With curriculum learning, our approach pro-
vides the ﬂexibility to combine prior knowledge
of noise, e.g., splitting a dataset into reliable and
less reliable subsets, to improve the effectiveness
of the transition matrix and better model the noise.

4.1 Trace Regularization

Before proceeding to training details, we ﬁrst dis-
cuss how we characterize the noise level of the
data by controlling the trace of its transition ma-
trix. Intuitively, if the noise is small, the transition
matrix T will tend to become an identity matrix,
i.e., given a set of annotated training sentences, the
observed relations and their true relations are al-
most identical. Since each row of T sums to 1,
the similarity between the transition matrix and
the identity matrix can be represented by its trace,
trace(T). The larger the trace(T) is, the larger
the diagonal elements are, and the more similar
the transition matrix T is to the identity matrix,
indicating a lower level of noise. Therefore, we
can characterize the noise pattern by controlling
the expected value of trace(T) in the form of reg-
ularization. For example, we will expect a larger
trace(T) for reliable data, but a smaller trace(T)
for less reliable data. Another advantage of em-
ploying trace regularization is that it could help re-
duce the model complexity and avoid overﬁtting.

4.2 Training

To tackle the challenge of no direct guidance over
the noise patterns, we implement a curriculum
learning based training method to ﬁrst train the
model without considerations for noise. In other
words, we ﬁrst focus on the loss from the predic-
tion distribution p , and then take the noise model-
ing into account gradually along the training pro-
cess, i.e., gradually increasing the importance of
the loss from the observed distribution o while de-
creasing the importance of p. In this way, the pre-
diction branch is roughly trained before the model
managing to characterize the noise, thus avoids be-
ing stuck into poor local optimum. We thus design

to minimize the following loss function:

L =

−((1 − α)log(oiyi) + αlog(piyi))

(5)

N
(cid:88)

i=1

− βtrace(Ti)

where 0<α≤1 and β>0 are two weighting param-
eters, yi is the relation assigned by DS for the i-th
instance, N the total number of training instances,
oiyi is the probability that the observed relation for
the i-th instance is yi, and piyi is the probability to
predict relation yi for the i-th instance.

Initially, we set α=1, and train our model com-
pletely by minimizing the loss from the prediction
distribution p. That is, we do not expect to model
the noise, but focus on the prediction branch at
this time. As the training progresses, the predic-
tion branch gradually learns the basic prediction
ability. We then decrease α and β by 0<ρ<1
(α∗=ρα and β∗=ρβ) every τ epochs, i.e., learning
more about the noise from the observed distribu-
tion o and allowing a relatively smaller trace(T)
to accommodate more noise. The motivation be-
hind is to put more and more effort on learning
the noise pattern as the training proceeds, with
the essence of curriculum learning. This gradu-
ally learning paradigm signiﬁcantly distinguishes
from prior work on noise modeling for DS seen to
date. Moreover, as such a method does not rely on
any extra assumptions, it can serve as our default
training method for T.

With Prior Knowledge of Data Quality On the
other hand, if we happen to have prior knowledge
about which part of the training data is more re-
liable and which is less reliable, we can utilize
this knowledge as guidance to design the curricu-
lum. Speciﬁcally, we can build a curriculum by
ﬁrst training the prediction branch on the reliable
data for several epochs, and then adding the less
reliable data to train the full model. In this way,
the prediction branch is roughly trained before ex-
posed to more noisy data, thus is less likely to fall
into poor local optimum.

Furthermore, we can take better control of
the training procedure with trace regularization,
e.g., encouraging larger trace(T) for reliable sub-
set and smaller trace(T) for less relaibale ones.
Speciﬁcally, we propose to minimize:

L =

M
(cid:88)

Nm(cid:88)

m=1

i=1

−log(omi,ymi) − βmtrace(Tmi)

(6)

where βm is the regularization weight for the m-th
data subset, M is the total number of subsets, Nm
the number of instances in m-th subset, and Tmi,
ymi and omi,ymi are the transition matrix, the re-
lation labeled by DS and the observed probability
of this relation for the i-th training instance in the
m-th subset, respectively. Note that different from
Equation 5, this loss function does not need to ini-
tiate training by minimizing the loss regarding the
prediction distribution p, since one can easily start
by learning from the most reliable split ﬁrst.

We also use trace regularization for the most re-
liable subset, since there are still some noise anno-
tations inevitably appearing in this split. Speciﬁ-
cally, we expect its trace(T) to be large (using a
positive β) so that the elements of T will be cen-
tralized to the diagonal and T will be more similar
to the identity matrix. As for the less reliable sub-
set, we expect the trace(T) to be small (using a
negative β) so that the elements of the transition
matrix will be diffusive and T will be less similar
to the identity matrix. In other words, the transi-
tion matrix is encouraged to characterize the noise.
Note that this loss function only works for sen-
tence level models. For bag level models, since
reliable and less reliable sentences are all aggre-
gated into a sentence bag, we can not determine
which bag is reliable and which is not. However,
bag level models can still build a curriculum by
changing the content of a bag, e.g., keeping re-
liable sentences in the bag ﬁrst, then gradually
adding less reliable ones, and training with Equa-
tion 5, which could beneﬁt from the prior knowl-
edge of data quality as well.

5 Evaluation Methodology

Our experiments aim to answer two main ques-
tions: (1) is it possible to model the noise in the
training data generated through DS, even when
there is no prior knowledge to guide us? and (2)
whether the prior knowledge of data quality can
help our approach better handle the noise.

We apply our approach to both sentence level
and bag level extraction models, and evaluate in
the situations where we do not have prior knowl-
edge of the data quality as well as where such prior
knowledge is available.

5.1 Datasets

We evaluate our approach on two datasets.

TIMERE We build TIMERE by using DS
to align time-related Wikidata (Vrandeˇci´c and
Kr¨otzsch, 2014) KB triples to Wikipedia text. It
contains 278,141 sentences with 12 types of re-
lations between an entity mention and a time ex-
pression. We choose to use time-related relations
because time expressions speak for themselves in
terms of reliability. That is, given a KB triple
<e, rel, t> and its aligned sentences, the ﬁner-
grained the time expression t appears in the sen-
tence, the more likely the sentence supports the
existence of this triple. For example, a sentence
containing both Alphabet and October-2-2015 is
very likely to express the inception-time of
Alphabet, while a sentence containing both Al-
phabet and 2015 could instead talk about many
events, e.g., releasing ﬁnancial report of 2015, hir-
ing a new CEO, etc. Using this heuristics, we
can split the dataset into 3 subsets according to
different granularities of the time expressions in-
volved, indicating different levels of reliability.
Our criteria for determining the reliability are as
follows. Instances with full date expressions, i.e.,
Year-Month-Day, can be seen as the most re-
liable data, while those with partial date expres-
sions, e.g., Month-Year and Year-Only, are
considered as less reliable. Negative data are con-
structed heuristically that any entity-time pairs in
a sentence without corresponding triples in Wiki-
data are treated as negative data. During training,
we can access 184,579 negative and 77,777 pos-
itive sentences, including 22,214 reliable, 2,094
and 53,469 less reliable ones. The validation set
and test set are randomly sampled from the reli-
able (full-date) data for relatively fair evaluations
and contains 2,776, 2,771 positive sentences and
5,143, 5,095 negative sentences, respectively.

ENTITYRE is a widely-used entity relation ex-
traction dataset, built by aligning triples in Free-
base to the New York Times (NYT) corpus (Riedel
et al., 2010). It contains 52 relations, 136,947 pos-
itive and 385,664 negative sentences for training,
and 6,444 positive and 166,004 negative sentences
for testing. Unlike TIMERE, this dataset does not
contain any prior knowledge about the data qual-
ity. Since the sentence level annotations in EN-
TITYRE are too noisy to serve as gold standard,
we only evaluate bag-level models on ENTITYRE,
a standard practice in previous works (Surdeanu
et al., 2012; Zeng et al., 2015; Lin et al., 2016).

5.2 Experimental Setup

Hyper-parameters We use 200 convolution
kernels with widow size 3. During training, we
use stochastic gradient descend (SGD) with batch
size 20. The learning rates for sentence-level and
bag-level models are 0.1 and 0.01, respectively.

Sentence level experiments are performed on
TIMERE, using 100-d word embeddings pre-
trained using GloVe (Pennington et al., 2014) on
Wikipedia and Gigaword (Parker et al., 2011), and
20-d vectors for distance embeddings. Each of the
three subsets of TIMERE is added after the previ-
ous phase has run for 15 epochs. The trace regu-
larization weights are β1 = 0.01, β2 = −0.01 and
β3 = −0.1, respectively, from the reliable to the
most unreliable, with the ratio of β3 and β2 ﬁxed
to 10 or 5 when tuning.

Bag level experiments are performed on both
TIMERE and ENTITYRE. For TIMERE, we use
the same parameters as above. For ENTITYRE,
we use 50-d word embeddings pre-trained on
the NYT corpus using word2vec (Mikolov et al.,
2013), and 5-d vectors for distance embedding.
For both datasets, α and β in Eq. 5 are initialized
to 1 and 0.1, respectively. We tried various decay
rates, {0.95, 0.9, 0.8}, and steps, {3, 5, 8}. We
found that using a decay rate of 0.9 with step of 5
gives best performance in most cases.

Evaluation Metric The performance is reported
using the precision-recall (PR) curve, which is a
standard evaluation metric in relation extraction.
Speciﬁcally, the extraction results are ﬁrst ranked
decreasingly by their conﬁdence scores, then the
precision and recall are calculated by setting the
threshold to be the score of each extraction result
one by one.

Naming Conventions We evaluate our ap-
proach under a wide range of settings for sentence
level (sent ) and bag level (bag ) models: (1)
mix:
trained on all three subsets of TIMERE
mixed together; (2) reliable:
trained using
the reliable subset of TIMERE only; (3) PR:
trained with prior knowledge of annotation qual-
ity, i.e., starting from the reliable data and then
adding the unreliable data; (4) TM: trained with
dynamic transition matrix; (5) GTM: trained with
a global transition matrix. In bag level, we also in-
vestigate the performance of average aggregation
( avg) and attention aggregation ( att).

Figure 2: Sentence Level Results on TIMERE

6 Experimental Results

6.1 Performance on TIMERE

Sentence Level Models The results of sentence
level models on TIMERE are shown in Figure
2. We can see that mixing all subsets together
(sent mix) gives the worst performance, signif-
icantly worse than using the reliable subset only
(sent reliable). This suggests the noisy na-
ture of the training data obtained through DS and
properly dealing with the noise is the key for
DS for a wider range of applications. When
getting help from our dynamic transition matrix,
the model (sent mix TM) signiﬁcantly improves
sent mix, delivering the same level of perfor-
mance as sent reliable in most cases. This
suggests that our transition matrix can help to mit-
igate the bad inﬂuence of noisy training instances.
Now let us consider the PR scenario where one
can build a curriculum by ﬁrst training on the reli-
able subset, then gradually moving to both reliable
and less reliable data. We can see that, this simple
curriculum learning based model (sent PR) fur-
ther outperforms sent reliable signiﬁcantly,
indicating that the curriculum learning framework
not only reduces the effect of noise, but also helps
the model learn from noisy data. When apply-
ing the transition matrix approach into this cur-
riculum learning framework using one reliable
subset and one unreliable subset generated by
mixing our two less reliable subsets, our model
(sent PR seg2 TM) further improves sent PR
by utilizing the dynamic transition matrix to
model the noise.
It is not surprising that when
we use all three subsets separately, our model
(sent PR TM) signiﬁcantly outperforms all other
models by a large margin.

(a) Attention Aggregation

(b) Average Aggregation

Figure 3: Bag Level Results on TIMERE

Bag Level Models
In this setting, we ﬁrst look
at the performance of the bag level models with
attention aggregation. The results are shown in
Figure 3(a). Consider the comparison between
trained on the reliable subset only
the model
(bag att reliable) and the one trained on
the mixed dataset (bag att mix).
In contrast
to the sentence level, bag att mix outperforms
bag att reliable by a large margin, because
bag att mix has taken the at-least-one assump-
tion into consideration through the attention ag-
gregation mechanism (Eq. 3), which can be seen
as a denoising step within the bag. This may also
be the reason that when we introduce either our
dynamic transition matrix (bag att mix TM) or
the curriculum of using prior knowledge of data
quality (bag att PR) into the bag level models,
the improvement regarding bag att mix is not
as signiﬁcant as in the sentence level.

However, when we apply our dynamic transi-
tion matrix into the curriculum built upon prior
knowledge of data quality (bag att PR TM), the
performance gets further improved. This hap-
pens especially in the high precision part com-
pared to bag att PR. We also note that the bag
level’s at-least-one assumption does not always
hold, and there are still false negative and false
positive problems. Therefore, using our transi-
tion matrix approach with or without prior knowl-
edge of data quality, i.e., bag att mix TM and
bag att PR TM, both improve the performance,
and bag att PR TM performs slightly better.

The results of bag level models with average ag-
gregation are shown in Figure 3(b), where the rel-
ative ranking of various settings is similar to those
with attention aggregation. A notable difference

Figure 4: Global TM v.s. Dynamic TM

is that both bag avg PR and bag avg mix TM
improve bag avg mix by a larger margin com-
pared to that in the attention aggregation setting.
The reason may be that the average aggregation
mechanism is not as good as the attention aggre-
gation in denoising within the bag, which leaves
more space for our transition matrix approach or
curriculum learning with prior knowledge to im-
prove. Also note that bag avg reliable per-
forms best in the very-low-recall region but worst
in general. This is because that it ranks higher
the sentences expressing either birth-date or
death-date, the simplest but the most com-
mon relations in the dataset, but fails to learn other
relations with limited or noisy training instances,
given its relatively simple aggregation strategy.

Global v.s. Dynamic Transition Matrix We
also compare our dynamic transition matrix
method with the global transition matrix method,
which maintains only one transition matrix for all
training instances. Speciﬁcally, instead of dynam-

ically generating a transition matrix for each da-
tum, we ﬁrst initialize an identity matrix T(cid:48) ∈
R|C|×|C|, where |C| is the number of relations (in-
cluding no-relation). Then the global transi-
tion matrix T is built by applying softmax to each
row of T(cid:48) so that (cid:80)
j Tij = 1:

Tij =

ij

eT (cid:48)
(cid:80)|C|
j=1 eT (cid:48)

ij

(7)

where Tij and T (cid:48)
ij are the elements in the ith row
and jth column of T and T(cid:48). The element values
of matrix T(cid:48) are also updated via backpropagation
during training. As shown in Figure 4, using one
global transition matrix ( GTM) is also beneﬁcial
and improves both the sentence level (sent PR)
and bag level (bag att PR) models. However,
since the global transition matrix only captures the
global noise pattern, it fails to characterize individ-
uals with subtle differences, resulting in a perfor-
mance drop compared to the dynamic one ( TM).

relations.

Case Study We ﬁnd our
transition matrix
im-
method tends to obtain more signiﬁcant
For exam-
provement on noisier
time of spacecraft landing is noisier than
ple,
time of spacecraft launch since compared to the
launching of a spacecraft, there are fewer sen-
tences containing the landing time of a space-
craft that talks directly about the landing. Instead,
many of these sentences tend to talk about the
activities of the crew. Our sent PR TM model
improves the F1 of time of spacecraft landing
and time of spacecraft launch over sent PR by
9.09% and 2.78%, respectively. The transition
matrix makes more signiﬁcant improvement on
time of spacecraft landing since there are more
noisy sentences for our method to handle, which
results in more signiﬁcant improvement on the
quality of the training data.

6.2 Performance on ENTITYRE

We evaluate our bag level models on ENTI-
TYRE. As shown in Figure 5, it is not surpris-
ing that the basic model with attention aggrega-
tion (att) signiﬁcantly outperforms the average
one (avg), where att in our bag embedding is
similar in spirit to (Lin et al., 2016), which has re-
ported the-state-of-the-art performance on ENTI-
TYRE. When injected with our transition matrix
approach, both att TM and avg TM clearly out-
perform their basic versions.

Figure 5: Results on ENTITYRE

Method
Mintz
MultiR
MIML
avg
avg TM
att
att TM

P@R 10
39.88
60.94
60.75
58.04
58.56
61.51
67.24

P@R 20
28.55
36.41
33.82
51.25
52.35
56.36
57.61

P@R 30
16.81
-
-
42.45
43.59
45.63
44.90

Table 1: Comparison with feature-based methods.
P@R 10/20/30 refers to the precision when recall
equals 10%, 20% and 30%.

Similar to the situations in TIMERE, since att
has taken the at-least-one assumption into account
through its attention-based bag embedding mech-
anism, thus the improvement made by att TM is
not as large as by avg TM.

We also include the comparison with three
feature-based methods: Mintz (Mintz et al.,
2009) is a multiclass logistic regression model;
MultiR (Hoffmann et al., 2011) is a probabilistic
graphical model that can handle overlapping rela-
tions; MIML (Surdeanu et al., 2012) is also a prob-
abilistic graphical model but operates in the multi-
instance multi-label paradigm. As shown in Ta-
ble 1, although traditional feature-based methods
have reasonable results in the low recall region,
their performances drop quickly as the recall goes
up, and MultiR and MIML did not even reach
the 30% recall. This indicates that, while human-
designed featurs can effectively capture certain re-
lation patterns, their coverage is relatively low.
On the other hand, neural network models have
more stable performance across different recalls,
and att TM performs generally better than other
models, indicating again the effectiveness of our
transition matrix method.

7 Related Work

In addition to relation extraction, distant supervi-
sion (DS) is shown to be effective in generating
training data for various NLP tasks, e.g., tweet
sentiment classiﬁcation (Go et al., 2009), tweet
named entity classifying (Ritter et al., 2011), etc.
However, these early applications of DS do not
well address the issue of data noise.

In relation extraction (RE), recent works have
been proposed to reduce the inﬂuence of wrongly
labeled data. The work presented by (Takamatsu
et al., 2012) removes potential noisy sentences
by identifying bad syntactic patterns at the pre-
processing stage.
(Xu et al., 2013) use pseudo-
relevance feedback to ﬁnd possible false nega-
tive data. (Riedel et al., 2010) make the at-least-
one assumption and propose to alleviate the noise
problem by considering RE as a multi-instance
classiﬁcation problem. Following this assumption,
people further improves the original paradigm us-
ing probabilistic graphic models (Hoffmann et al.,
2011; Surdeanu et al., 2012), and neural network
methods (Zeng et al., 2015). Recently, (Lin et al.,
2016) propose to use attention mechanism to re-
duce the noise within a sentence bag.
Instead
of characterizing the noise, these approaches only
aim to alleviate the effect of noise.

The at-least-one assumption is often too strong
in practice, and there are still chances that the sen-
tence bag may be false positive or false negative.
Thus it is important to model the noise pattern to
guide the learning procedure. (Ritter et al., 2013)
and (Min et al., 2013) try to employ a set of la-
tent variables to represent the true relation. Our
approach differs from them in two aspects. We tar-
get noise modeling in neutral networks while they
target probabilistic graphic models. We further ad-
vance their models by providing the capability to
model the ﬁne-grained transition from the true re-
lation to the observed, and the ﬂexibility to com-
bine indirect guidance.

Outside of NLP, various methods have been
proposed in computer vision to model the data
noise using neural networks.
(Sukhbaatar et al.,
2015) utilize a global transition matrix with weight
decay to transform the true label distribution to the
observed. (Reed et al., 2014) use a hidden layer
to represent the true label distribution but try to
force it to predict both the noisy label and the in-
put. (Chen and Gupta, 2015; Xiao et al., 2015) ﬁrst
estimate the transition matrix on a clean dataset

and apply to the noisy data. Our model shares
similar spirit with (Misra et al., 2016) in that we
all dynamically generate a transition matrix for
each training instance, but, instead of using vanilla
SGD, we train our model with a novel curriculum
learning training framework with trace regulariza-
tion to control the behavior of transition matrix.
In NLP, the only work in neural-network-based
noise modeling is to use one single global transi-
tion matrix to model the noise introduced by cross-
lingual projection of training data (Fang and Cohn,
2016). Our work advances them through gener-
ating a transition matrix dynamically for each in-
stance, to avoid using one single component to
characterize both reliable and unreliable data.

8 Conclusions

In this paper, we investigate the noise problem in-
herent in the DS-style training data. We argue that
the data speak for themselves by providing use-
ful clues to reveal their noise patterns. We thus
propose a novel transition matrix based method
to dynamically characterize the noise underlying
such training data in a uniﬁed framework along the
original prediction objective. One of our key inno-
vations is to exploit a curriculum learning based
training method to gradually learn to model the
underlying noise pattern without direct guidance,
and to provide the ﬂexibility to exploit any prior
knowledge of the data quality to further improve
the effectiveness of the transition matrix. We eval-
uate our approach in two learning settings of the
distantly supervised relation extraction. The ex-
perimental results show that the proposed method
can better characterize the underlying noise and
consistently outperform start-of-the-art extraction
models under various scenarios.

Acknowledgement

of

This work is supported by the National High Tech-
nology R&D Program of China (2015AA015403);
the National Natural Science Foundation of
China (61672057, 61672058); KLSTSPI Key
Intelligent Press Media Technol-
Lab.
ogy; the UK Engineering and Physical Sciences
Research Council under grants EP/M01567X/1
(SANDeRs) and EP/M015793/1 (DIVIDEND);
and the Royal Society International Collaboration
Grant (IE161012).

References

Yoshua Bengio, J´erˆome Louradour, Ronan Collobert,
and Jason Weston. 2009. Curriculum learning. In
ICML. ACM, pages 41–48.

Xinlei Chen and Abhinav Gupta. 2015. Webly super-
vised learning of convolutional networks. In ICCV.
pages 1431–1439.

Meng Fang and Trevor Cohn. 2016. Learning when
to trust distant supervision: An application to low-
resource pos tagging using cross-lingual projection.
In CONLL. pages 178–186.

Sebastian Riedel, Limin Yao, and Andrew McCallum.
2010. Modeling relations and their mentions with-
In Joint European Conference
out labeled text.
on Machine Learning and Knowledge Discovery in
Databases. Springer, pages 148–163.

Alan Ritter, Alan Ritter, Sam Clark, Oren Etzioni, et al.
2011. Named entity recognition in tweets: an exper-
imental study. In EMNLP. Association for Compu-
tational Linguistics, pages 1524–1534.

Alan Ritter, Luke Zettlemoyer, Mausam, and Oren Et-
zioni. 2013. Modeling missing data in distant super-
vision for information extraction. TACL 1:367–378.

Alec Go, Richa Bhayani, and Lei Huang. 2009. Twit-
ter sentiment classiﬁcation using distant supervision.
CS224N Project Report, Stanford 1(12).

Sainbayar Sukhbaatar, Joan Bruna, Manohar Paluri,
Lubomir Bourdev, and Rob Fergus. 2015. Training
convolutional networks with noisy labels. In ICLR.

Mihai Surdeanu, Julie Tibshirani, Ramesh Nallapati,
and Christopher D Manning. 2012. Multi-instance
multi-label
In
EMNLP-CoNLL. pages 455–465.

learning for relation extraction.

Shingo Takamatsu, Issei Sato, and Hiroshi Nakagawa.
2012. Reducing wrong labels in distant supervision
for relation extraction. In ACL. pages 721–729.

Denny Vrandeˇci´c and Markus Kr¨otzsch. 2014. Wiki-
data: a free collaborative knowledgebase. Commu-
nications of the ACM 57(10):78–85.

Tong Xiao, Tian Xia, Yi Yang, Chang Huang, and Xi-
aogang Wang. 2015. Learning from massive noisy
In CVPR.
labeled data for image classiﬁcation.
pages 2691–2699.

Wei Xu, Raphael Hoffmann, Le Zhao, and Ralph Gr-
Filling knowledge base gaps for
In ACL.

ishman. 2013.
distant supervision of relation extraction.
pages 665–670.

Daojian Zeng, Kang Liu, Yubo Chen, and Jun Zhao.
2015. Distant supervision for relation extraction
In
via piecewise convolutional neural networks.
EMNLP. pages 1753–1762.

Raphael Hoffmann, Congle Zhang, Xiao Ling, Luke
Zettlemoyer, and Daniel S Weld. 2011. Knowledge-
based weak supervision for information extraction
In Proceedings of ACL.
of overlapping relations.
pages 541–550.

Yankai Lin, Shiqi Shen, Zhiyuan Liu, Huanbo Luan,
and Maosong Sun. 2016. Neural relation extraction
with selective attention over instances. In ACL. vol-
ume 1, pages 2124–2133.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In NIPS. pages 3111–3119.

Bonan Min, Ralph Grishman, Li Wan, Chang Wang,
and David Gondek. 2013. Distant supervision for
relation extraction with an incomplete knowledge
base. In HLT-NAACL. pages 777–782.

Mike Mintz, Steven Bills, Rion Snow, and Dan Ju-
rafsky. 2009. Distant supervision for relation ex-
traction without labeled data. In ACL. pages 1003–
1011.

Ishan Misra, C Lawrence Zitnick, Margaret Mitchell,
and Ross Girshick. 2016. Seeing through the human
reporting bias: Visual classiﬁers from noisy human-
centric labels. In CVPR. pages 2930–2939.

Robert Parker, David Graff, Junbo Kong, Ke Chen, and
Kazuaki Maeda. 2011. English gigaword ﬁfth edi-
tion, linguistic data consortium. Technical report,
Linguistic Data Consortium, Philadelphia.

Jeffrey Pennington, Richard Socher, and Christopher D
Manning. 2014. Glove: Global vectors for word
representation. In EMNLP. volume 14, pages 1532–
1543.

Scott Reed, Honglak Lee, Dragomir Anguelov, Chris-
tian Szegedy, Dumitru Erhan, and Andrew Rabi-
novich. 2014. Training deep neural networks on
arXiv preprint
noisy labels with bootstrapping.
arXiv:1412.6596 .

