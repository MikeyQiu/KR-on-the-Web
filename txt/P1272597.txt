Learning Dynamics of Linear Denoising Autoencoders

Arnu Pretorius 1 2 Steve Kroon 1 2 Herman Kamper 3

8
1
0
2
 
l
u
J
 
9
2
 
 
]
L
M

.
t
a
t
s
[
 
 
2
v
3
1
4
5
0
.
6
0
8
1
:
v
i
X
r
a

Abstract

Denoising autoencoders (DAEs) have proven use-
ful for unsupervised representation learning, but
a thorough theoretical understanding is still lack-
ing of how the input noise inﬂuences learning.
Here we develop theory for how noise inﬂuences
learning in DAEs. By focusing on linear DAEs,
we are able to derive analytic expressions that
exactly describe their learning dynamics. We ver-
ify our theoretical predictions with simulations
as well as experiments on MNIST and CIFAR-10.
The theory illustrates how, when tuned correctly,
noise allows DAEs to ignore low variance direc-
tions in the inputs while learning to reconstruct
them. Furthermore, in a comparison of the learn-
ing dynamics of DAEs to standard regularised
autoencoders, we show that noise has a similar
regularisation effect to weight decay, but with
faster training dynamics. We also show that our
theoretical predictions approximate learning dy-
namics on real-world data and qualitatively match
observed dynamics in nonlinear DAEs.*

1. Introduction

The goal of unsupervised learning is to uncover hidden struc-
ture in unlabelled data, often in the form of latent feature
representations. One popular type of model, an autoencoder,
does this by trying to reconstruct its input (Bengio et al.,
2007). Autoencoders have been used in various forms to ad-
dress problems in machine translation (Chandar et al., 2014;
Tu et al., 2017), speech processing (Elman & Zipser, 1987;
Zeiler et al., 2013), and computer vision (Rifai et al., 2011;

1Computer Science Division, Stellenbosch University, South
Africa 2CSIR/SU Centre for Artiﬁcial Intelligence Research,
3Department of Electrical and Electronic Engineering, Stellen-
bosch University, South Africa. Correspondence to: Steve Kroon
<kroon@sun.ac.za>.

Proceedings of the 35 th International Conference on Machine
Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018
by the author(s).

*Code to reproduce all the results in this paper is available at:

https://github.com/arnupretorius/lindaedynamics icml2018

Larsson, 2017), to name just a few areas. Denoising au-
toencoders (DAEs) are an extension of autoencoders which
learn latent features by reconstructing data from corrupted
versions of the inputs (Vincent et al., 2008). Although this
corruption step typically leads to improved performance
over standard autoencoders, a theoretical understanding of
its effects remains incomplete. In this paper, we provide
new insights into the inner workings of DAEs by analysing
the learning dynamics of linear DAEs.

We speciﬁcally build on the work of Saxe et al. (2013a;b),
who studied the learning dynamics of deep linear networks
in a supervised regression setting. By analysing the gradient
descent weight update steps as time-dependent differential
equations (in the limit as the learning rate approaches a
small value), Saxe et al. (2013a) were able to derive exact
solutions for the learning trajectory of these networks as a
function of training time. Here we extend their approach
to linear DAEs. To do this, we use the expected recon-
struction loss over the noise distribution as an objective
(requiring a different decomposition of the input covariance)
as a tractable way to incorporate noise into our analytic
solutions. This approach yields exact equations which can
predict the learning trajectory of a linear DAE.

Our work here shares the motivation of many recent stud-
ies (Advani & Saxe, 2017; Pennington & Worah, 2017;
Pennington & Bahri, 2017; Nguyen & Hein, 2017; Dinh
et al., 2017; Louart et al., 2017; Swirszcz et al., 2017; Lin
et al., 2017; Neyshabur et al., 2017; Soudry & Hoffer, 2017;
Pennington et al., 2017) working towards a better theoretical
understanding of neural networks and their behaviour. Al-
though we focus here on a theory for linear networks, such
networks have learning dynamics that are in fact nonlinear.
Furthermore, analyses of linear networks have also proven
useful in understanding the behaviour of nonlinear neural
networks (Saxe et al., 2013a; Advani & Saxe, 2017).

First we introduce linear DAEs (§2). We then derive ana-
lytic expressions for their nonlinear learning dynamics (§3),
and verify our solutions in simulations (§4) which show
how noise can inﬂuence the shape of the loss surface and
change the rate of convergence for gradient descent optimi-
sation. We also ﬁnd that an appropriate amount of noise can
help DAEs ignore low variance directions in the input while
learning the reconstruction mapping. In the remainder of

Learning Dynamics of Linear Denoising Autoencoders

the paper, we compare DAEs to standard regularised autoen-
coders and show that our theoretical predictions match both
simulations (§5) and experimental results on MNIST and
CIFAR-10 (§6). We speciﬁcally ﬁnd that while the noise in
a DAE has an equivalent effect to standard weight decay, the
DAE exhibits faster learning dynamics. We also show that
our observations hold qualitatively for nonlinear DAEs.

2. Linear Denoising Autoencoders

We ﬁrst give the background of linear DAEs. Given training
data consisting of pairs {(˜xi, xi), i = 1, ..., N }, where ˜x
represents a corrupted version of the training data x ∈ RD,
the reconstruction loss for a single hidden layer DAE with
activation function φ is given by

L =

1
2N

N
(cid:88)

i=1

||xi − W2φ(W1 ˜xi)||2.

Here, W1 ∈ RH×D and W2 ∈ RD×H are the weights of
the network with hidden dimensionality H. The learned
feature representations correspond to the latent variable
z = φ(W1 ˜x).

To corrupt an input x, we sample a noise vector (cid:15), where
each component is drawn i.i.d. from a pre-speciﬁed noise
distribution with mean zero and variance s2. We deﬁne the
corrupted version of the input as ˜x = x + (cid:15). This ensures
that the expectation over the noise remains unbiased, i.e.
E(cid:15)(˜x) = x.

Restricting our scope to linear neural networks, with φ(a) =
a, the loss in expectation over the noise distribution is

E(cid:15) [L] =

||xi − W2W1xi||2

1
2N

N
(cid:88)

i=1

s2
2

whitece +

tr(W2W1W T

1 W T

2 ),

(1)

See the supplementary material for the full derivation.

3. Learning Dynamics of Linear DAEs

Here we derive the learning dynamics of linear DAEs, be-
ginning with a brief outline to build some intuition.

The weight update equations for a linear DAE can be formu-
lated as time-dependent differential equations in the limit as
the gradient descent learning rate becomes small (Saxe et al.,
2013a). The task of an ordinary (undercomplete) linear au-
toencoder is to learn the identity mapping that reconstructs
the original input data. The matrix corresponding to this
learned map will essentially be an approximation of the full
identity matrix that is of rank equal to the input dimension.
It turns out that tracking the temporal updates of this map-
ping represents a difﬁcult problem that involves dealing with

coupled differential equations, since both the on-diagonal
and off-diagonal elements of the weight matrices need to
be considered in the approximation dynamics at each time
step.

To circumvent this issue and make the analysis tractable, we
follow the methodology introduced in Saxe et al. (2013a),
which is to: (1) decompose the input covariance matrix
using an eigenvalue decomposition; (2) rotate the weight
matrices to align with these computed directions of vari-
ation; and (3) use an orthogonal initialisation strategy to
diagonalise the composite weight matrix W = W2W1. The
important difference in our setting, is that additional con-
straints are brought about through the injection of noise.

The remainder of this section outlines this derivation for the
exact solutions to the learning dynamics of linear DAEs.

3.1. Gradient descent update

Consider a continuous time limit approach to studying the
learning dynamics of linear DAEs. This is achieved by
choosing a sufﬁciently small learning rate α for optimising
the loss in (1) using gradient descent. The update for W1
in a single gradient descent step then takes the form of a
time-dependent differential equation

τ

d
dt

W1 =

N
(cid:88)

i=1

W T
2

(cid:0)xixT

i − W2W1xixT
i

(cid:1)

whitesp − εW T
= W T

2 W2W1
2 (Σxx − W2W1Σxx) − εW T

2 W2W1.
Here t is the time measured in epochs, τ = N
α , ε = N s2 and
Σxx = (cid:80)N
i , represents the input covariance matrix.
Let the eigenvalue decomposition of the input covariance be
Σxx = V ΛV T , where V is an orthogonal matrix and denote
the eigenvalues λj = [Λ]jj, with λ1 ≥ λ2 ≥ · · · ≥ λD.
The update can then be rewritten as

i=1 xixT

τ

d
dt

W1 = W T

2 V (cid:0)Λ − V T W2W1V Λ(cid:1) V T
2 W2W1.

morewhitespace − εW T

The weight matrices can be rotated to align with the direc-
tions of variation in the input by performing the rotations
W 1 = W1V and W 2 = V T W2. Following a similar deriva-
tion for W2, the weight updates become

τ

τ

d
dt
d
dt

W 1 = W

T
2

(cid:0)Λ − W 2W 1Λ(cid:1) − εW

T
2 W 2W 1

W 2 = (cid:0)Λ − W 2W 1Λ(cid:1) W

T
1 − εW 2W 1W

T
1 .

3.2. Orthogonal initialisation and scalar dynamics

To decouple the dynamics, we can set W2 = V D2RT and
W1 = RD1V T , where R is an arbitrary orthogonal matrix

Learning Dynamics of Linear Denoising Autoencoders

and D2 and D1 are diagonal matrices. This results in the
product of the realigned weight matrices

W 2W 1 = V T V D2RT RD1V T V = D2D1

to become diagonal. The updates now reduce to the follow-
ing scalar dynamics that apply independently to each pair of
diagonal elements w1j and w2j of D1 and D2 respectively:

τ

τ

d
dt
d
dt

w1j = w2jλj (1 − w2jw1j) − εw2

2jw1j

w2j = w1jλj (1 − w2jw1j) − εw2jw2

1j.

(2)

(3)

Note that the same dynamics stem from gradient descent on
the loss given by

(cid:96) =

D
(cid:88)

j=1

λj
2τ

D
(cid:88)

j=1

ε
2τ

(1 − w2jw1j)2 +

(w2jw1j)2.

(4)

By examining (4), it is evident that the degree to which the
ﬁrst term will be reduced will depend on the magnitude of
the associated eigenvalue λj. However, for directions in
the input covariance Σxx with relatively little variation the
decrease in the loss from learning the identity map will be
negligible and is likely to result in overﬁtting (since little
to no signal is being captured by these eigenvalues). The
second term in (4) is the result of the input corruption and
acts as a suppressant on the magnitude of the weights in
the learned mapping. Our interest is to better understand
the interplay between these two terms during learning by
studying their scalar learning dynamics.

3.3. Exact solutions to the dynamics of learning

As noted above, the dynamics of learning are dictated by the
value of w = w2w1 over time. An expression can be derived
for w(t) by using a hyperbolic change of coordinates in (2)
and (3), letting θ parameterise points along a dynamics
trajectory represented by the conserved quantity w2
1 =
±c0. This relies on the fact that (cid:96) is invariant under a scaling
of the weights such that w = (w1/c)(cw2) = w2w1 for any
constant c (Saxe et al., 2013a). Starting at any initial point
(w1, w2) the dynamics are

2 − w2

w(t) =

sinh (θt) ,

c0
2

with

θt = 2tanh−1

(cid:34)

(1 − E) (cid:0)ζ 2 − β2 − 2βδ(cid:1) − 2(1 + E)ζδ
(1 − E) (2β + 4δ) − 2(1 + E)ζ

(cid:0)1 + ε

(cid:1) and
where β = c0
E = eζλt/τ . Here θ0 depends on the initial weights w1
and w2 through the relationship θ0 = sinh−1(2w/c0). The

(cid:1), ζ = (cid:112)β2 + 4, δ = tanh (cid:0) θ0

λ

2

derivation for θt involves rewriting τ d
dt w in terms of θ, in-
tegrating over the interval θ0 to θt, and ﬁnally rearranging
terms to get an expression for θ(t) ≡ θt (see the supple-
mentary material for full details). To derive the learning
dynamics for different noise distributions, the correspond-
ing ε must be computed and used to determine β and ζ. For
example, sampling noise from a Gaussian distribution such
that (cid:15) ∼ N (0, σ2I), gives ε = N σ2. Alternatively, if (cid:15) is
distributed according to a zero-mean Laplace distribution
with scale parameter b, then ε = 2N b2.

4. The Effects of Noise: a Simulation Study

Since the expression for the learning dynamics of a lin-
ear DAE in (5) evolve independently for each direction
of variation in the input, it is enough to study the effect
that noise has on learning for a single eigenvalue λ. To
do this we trained a scalar linear DAE to minimise the loss
(cid:96)λ = λ
2 (w2w1)2 with λ = 1 using gradient
descent. Starting from several different randomly initialised
weights w1 and w2, we compare the simulated dynamics
with those predicted by equation (5). The top row in Figure 1
shows the exact ﬁt between the predictions and numerical
simulations for different noise levels, ε = 0, 1, 5.

2 (1−w2w1)2 + ε

The trajectories in the top row of Figure 1 converge to the
optimal solution at different rates depending on the amount
of injected noise. Speciﬁcally, adding more noise results in
faster convergence. However, the trade-off in (4) ensures
that the ﬁxed point solution also diminishes in magnitude.

To gain further insight, we also visualise the associated loss
surfaces for each experiment in the bottom row of Figure 1.
Note that even though the scalar product w2w1 deﬁnes a
linear mapping, the minimisation of (cid:96)λ with respect to w1
and w2 is a non-convex optimisation problem. The loss
surfaces in Figure 1 each have an unstable saddle point at
w2 = w1 = 0 (red star) with all remaining ﬁxed points lying
on a minimum loss manifold (cyan curve). This manifold
corresponds to the different possible combinations of w2 and
w1 that minimise (cid:96)λ. The paths that gradient descent follow
from various initial starting weights down to points situated
on the manifold are represented by dashed orange lines.

(5)

(cid:35)

For a ﬁxed value of λ, adding noise warps the loss surface
making steeper slopes and pulling the minimum loss mani-
fold in towards the saddle point. Therefore, steeper descent
directions cause learning to converge at a faster rate to ﬁxed
points that are smaller in magnitude. This is the result of a
sharper curving loss surface and the minimum loss manifold
lying closer to the origin.

We can compute the ﬁxed point solution for any pair of
initial starting weights (not on the saddle point) by taking

Learning Dynamics of Linear Denoising Autoencoders

Figure 1. Learning dynamics, loss surface and gradient descent paths for linear denoising autoencoders. Top: Learning dynamics
for each simulated run (dashed orange lines) together with the theoretically predicted learning dynamics (solid green lines). The red
line in each plot indicates the ﬁnal value of the resulting ﬁxed point solution w∗. Bottom: The loss surface corresponding to the loss
2 (w2w1)2 for λ = 1, as well as the gradient descent paths (dashed orange lines) for randomly initialised
(cid:96)λ = λ
weights. The cyan hyperbolas represent the global minimum loss manifold that corresponds to all possible combinations of w2 and w1
that minimise (cid:96)λ. Left: ε = 0, w∗ = 1. Middle: ε = 1, w∗ = 0.5. Right: ε = 5, w∗ = 1/6.

2 (1 − w2w1)2 + ε

the derivative

decayed autoencoder (WDAE) is given by

d(cid:96)λ
dw

λ
τ

= −

(1 − w) +

w,

ε
τ

and setting it equal to zero to ﬁnd w∗ = λ
λ+ε . This solution
reveals the interaction between the input variance associated
with λ and the noise ε. For large eigenvalues for which
λ (cid:29) ε, the ﬁxed point will remain relatively unaffected by
adding noise, i.e., w∗ ≈ 1. In contrast, if λ (cid:28) ε, the noise
will result in w∗ ≈ 0. This means that over a distribution
of eigenvalues, an appropriate amount of noise can help
a DAE to ignore low variance directions in the input data
while learning the reconstruction. In a practical setting, this
motivates the tuning of noise levels on a development set to
prevent overﬁtting.

5. The Relationship Between Noise and

Weight Decay

It is well known that adding noise to the inputs of a neural
network is equivalent to a form of regularisation (Bishop,
1995). Therefore, to further understand the role of noise in
linear DAEs we compare the dynamics of noise to those of
explicit regularisation in the form of weight decay (Krogh
& Hertz, 1992). The reconstruction loss for a linear weight

1
2N

N
(cid:88)

i=1

||xi − W2W1xi||2 +

(cid:0)||W1||2 + ||W2||2(cid:1) (6)

γ
2

where γ is the penalty parameter that controls the amount
of regularisation applied during learning. Provided that
the weights of the network are initialised to be small, it is
also possible (see supplementary material) to derive scalar
dynamics of learning from (6) as

wγ(t) =

ξEγ
Eγ − 1 + ξ/w0

,

(7)

where ξ = (1 − N γ/λ) and Eγ = e2ξt/τ .

Figure 2 compares the learning trajectories of linear DAEs
and WDAEs over time (as measured in training epochs) for
λ = 2.5, 1, 0.5 and 0.1. The dynamics for both noise and
weight decay exhibit a sigmoidal shape with an initial period
of inactivity followed by rapid learning, ﬁnally reaching a
plateau at the ﬁxed point solution. Figure 2 illustrates that
the learning time associated with an eigenvalue is negatively
correlated with its magnitude. Thus, the eigenvalue corre-
sponding to the largest amount of variation explained is the
quickest to escape inactivity during learning.

The colour intensity of the lines in Figure 2 correspond to
the amount of noise or regularisation applied in each run,

Learning Dynamics of Linear Denoising Autoencoders

Figure 2. Theoretically predicted learning dynamics for noise compared to weight decay for linear autoencoders. Top: Noise dynamics
(green), darker line colours correspond to larger amounts of added noise. Bottom: Weight decay dynamics (orange), darker line colours
correspond to larger amounts of regularisation. Left to right: Eigenvalues λ = 2.5, 1 and 0.5 associated with high to low variance.

Figure 3. Learning dynamics for optimal discrete time learning rates (λ = 1). Left: Dynamics of DAEs (green) vs. WDAEs (orange),
where darker line colours correspond to larger amounts noise or weigh decay. Middle: Optimal learning rate as a function of noise ε for
DAEs, and for WDAEs using an equivalent amount of regularisation γ = λε/(λ + ε). Right: Difference in mapping over time.

with darker lines indicating larger amounts. In the contin-
uous time limit with equal learning rates, when compared
with noise dynamics, weight decay experiences a delay in
learning such that the initial inactive period becomes ex-
tended for every eigenvalue, whereas adding noise has no
effect on learning time. In other words, starting from small
weights, noise injected learning is capable of providing an
equivalent regularisation mechanism to that of weight decay
in terms of a constrained ﬁxed point mapping, but with zero
time delay.

However, this analysis does not take into account the prac-
tice of using well-tuned stable learning rates for discrete
optimisation steps. We therefore consider the impact on
training time when using optimised learning rates for each
approach. By using second order information from the Hes-
sian as in Saxe et al. (2013a), (here of the expected recon-
struction loss with respect to the scalar weights), we relate
the optimal learning rates for linear DAEs and WDAEs,

where each optimal rate is inversely related to the amount
of noise/regularisation applied during training (see supple-
mentary material). The ratio of the optimal DAE rate to that
for the WDAE is

R =

2λ + γ
2λ + 3ε

.

(8)

Note that the ratio in (8) will essentially be equal to one
for eigenvalues that are signiﬁcantly larger than both ε and
γ, with deviations from unity only manifesting for smaller
values of λ.

Furthermore, weight decay and noise injected learning re-
sult in equivalent scalar solutions when their parameters
are related by γ = λε
λ+ε (see supplementary material). This
leads to the following two observations. First, it shows
that adding noise during learning can be interpreted as a
form of weight decay where the penalty parameter γ adapts
to each direction of variation in the data. In other words,
noise essentially makes use of the statistical structure of

Learning Dynamics of Linear Denoising Autoencoders

2 (1 − w2w1)2 + ε

Figure 4. The effect of noise versus weight decay on the norm of the weights during learning. Left: Two-dimensional loss surface
(cid:96)λ = λ
1). Gradient descent paths (orange/magenta dashed lines), minimum loss manifold
(cyan curves), saddle point (red star). Middle: Simulated learning dynamics. Right: Norm of the weights over time for each simulated
run. Top: Noise with λ = 1, ε = 0.1 and γ = 0. Bottom: Weight decay with λ = 1, ε = 0 and γ = λ(0.1)/(λ + 0.1) = 0.091. The
magenta line in each plot corresponds to a simulated run with small initialised weights.

2 (w2w1)2 + γ

2 + w2

2 (w2

the input data to inﬂuence the amount of shrinkage that is
being applied in various directions during learning. Second,
together with (8), we can theoretically compare the learning
dynamics of DAEs and WDAEs, when both equivalent reg-
ularisation and the relative differences in optimal learning
rates are taken into account.

The effects of optimal learning rates (for λ = 1), are shown
in Figure 3. DAEs still exhibit faster dynamics (left panel),
even when taking into account the difference in the learn-
ing rate as a function of noise, or equivalent weight decay
(middle panel). In addition, for equivalent regularisation
effects, the ratio of the optimal rates R can be shown to be a
monotonically decreasing function of the noise level, where
the rate of decay depends on the size of λ. This means
that for any amount of added noise, the DAE will require
a slower learning rate than that of the WDAE. Even so, a
faster rate for the WDAE does not seem to compensate for
its slower dynamics and the difference in learning time is
also shown to grow as more noise (regularisation) is applied
during training (right panel).

5.1. Exploiting invariance in the loss function

A primary motivation for weight decay as a regulariser is
that it provides solutions with smaller weight norms, pro-
ducing smoother models that have better generalisation per-
formance. Figure 4 shows the effect of noise (top row)
compared to weight decay (bottom row) on the norm of the
weights during learning. Looking at the loss surface for
weight decay (bottom left panel), the penalty on the size of
the weights acts by shrinking the minimum loss manifold
down from a long curving valley to a single point (associ-

ated with a small norm solution). Interestingly, this results
in gradient descent following a trajectory towards an “invis-
ible” minimum loss manifold similar to the one associated
with noise. However, once on this manifold, weight decay
begins to exploit invariances in the loss function to changes
in the weights, so as to move along the manifold down to-
wards smaller norm solutions. This means that even when
the two approaches learn the exact same mapping over time
(as shown by the learning dynamics in the middle column
of Figure 4), additional epochs will cause weight decay to
further reduce the size of the weights (bottom right panel).
This happens in a stage-like manner where the optimisation
ﬁrst focuses on reducing the reconstruction loss by learning
the optimal mapping and then reduces the regularisation
loss through invariance.

5.2. Small weight initialisation and early stopping

It is common practice to initialise the weights of a network
with small values. In fact, this strategy has recently been
theoretically shown to help, along with early stopping, to
ensure good generalisation performance for neural networks
in certain high-dimensional settings (Advani & Saxe, 2017).
In our analysis however, what we ﬁnd interesting about
small weight initialisation is that it removes some of the
differences in the learning behaviour of DAEs compared to
regularised autoencoders that use weight decay.

To see this, the magenta lines in Figure 4 show the learn-
ing dynamics for the two approaches where the weights of
both the networks were initialised to small random start-
ing values. The learning dynamics are almost identical in
terms of their temporal trajectories and have equal ﬁxed

Learning Dynamics of Linear Denoising Autoencoders

points. However, what is interesting is the implicit regulari-
sation that is brought about through the small initialisation.
By starting small and making incremental updates to the
weights, the scalar solution in both cases end up being equal
to the minimum norm solution. In other words, the path
that gradient descent takes from the initialisation to the min-
imum loss manifold, reaches the manifold where the norm
of the weights happen to also be small. This means that
the second phase of weight decay (where the invariance of
the loss function would be exploited to reduce the regular-
isation penalty), is not only no longer necessary, but also
does not result in a norm that is appreciably smaller than
that obtained by learning with added noise. Therefore in
this case, learning with explicit regularisation provides no
additional beneﬁt over that of learning with noise in terms
of reducing the norm of the weights during training.

When initialising small, early stopping can also serve as a
form of implicit regularisation by ensuring that the weights
do not change past the point where the validation loss starts
to increase (Bengio et al., 2007). In the context of learn-
ing dynamics, early stopping for DAEs can be viewed as a
method that effectively selects only the directions of varia-
tion deemed useful for generalisation during reconstruction,
considering the remaining eigenvalues to carry no additional
signal.

6. Experimental Results

To verify the dynamics of learning on real-world data sets
we compared theoretical predictions with actual learning on
MNIST and CIFAR-10. In our experiments we considered
the following linear autoencoder networks: a regular AE, a
WDAE and a DAE.

For MNIST, we trained each autoencoder with small ran-
domly initialised weights, using N = 50000 training sam-
ples for 5000 epochs, with a learning rate α = 0.01 and a
hidden layer width of H = 256. For the WDAE, the penalty
parameter was set at γ = 0.5 and for the DAE, σ2 = 0.5.
The results are shown in Figure 5 (left column).

The theoretical predictions (solid lines) in Figure 5 show
good agreement with the actual learning dynamics (points).
As predicted, both regularisation (orange) and noise (green)
suppress the ﬁxed point value associated with the differ-
ent eigenvalues and, whereas regularisation delays learning
(fewer ﬁxed points are reached by the WDAE during train-
ing when compared to the DAE), the use of noise has no
effect on training time.

Similar agreement is shown for CIFAR-10 in the right col-
umn of Figure 5. Here, we trained each network with small
randomly initialised weights using N = 30000 training
samples for 5000 epochs, with a learning rate α = 0.001
and a hidden dimension H = 512. For the WDAE, the

Figure 5. Learning dynamics for MNIST and CIFAR-10. Solid
lines represent theoretical dynamics and ‘x’ markers simulated
dynamics. Shown are the mappings associated with the set of
eigenvalues {λi, i = 1, 4, 8, 16, 32}, where the remaining eigen-
values were excluded to improve readability. Top: Noise: AE
(blue) vs. DAE with σ2 = 0.5 (green). Bottom: Weight decay:
AE (blue) vs. WDAE with γ = 0.5 (orange). Left: MNIST. Right:
CIFAR-10.

Figure 6. Learning dynamics for nonlinear networks using ReLU
activation. AE (blue), WDAE (orange) and DAE (green). Shown
are the mappings associated with the ﬁrst four eigenvalues, i.e.
{λi, i = 1, 2, 3, 4}. Left: MNIST Right: CIFAR-10.

penalty parameter was set at γ = 0.5 and for the DAE,
σ2 = 0.5.

Next, we investigated whether these dynamics are at least
also qualitatively present in nonlinear autoencoder networks.
Figure 6 shows the dynamics of learning for nonlinear AEs,
WDAEs and DAEs, using ReLU activations, trained on
MNIST (N = 50000) and CIFAR-10 (N = 30000) with
equal learning rates. For the DAE, the input was corrupted
using sampled Gaussian noise with mean zero and σ2 = 3.
For the WDAE, the amount of weight decay was manually
tuned to γ = 0.0045, to ensure that both autoencoders
displayed roughly the same degree of regularisation in terms
of the ﬁxed points reached. During the course of training,
the identity mapping associated with each eigenvalue was
estimated (see supplementary material), at equally spaced
intervals of size 10 epochs.

The learning dynamics are qualitatively similar to the dy-

Learning Dynamics of Linear Denoising Autoencoders

namics observed in the linear case. Both noise and weight
decay result in a shrinkage of the identity mapping asso-
ciated with each eigenvalue. Furthermore, in terms of the
number of training epochs, the DAE is seen to learn as
quickly as a regular AE, whereas the WDAE incurs a delay
in learning time. Although these experimental results stem
from a single training run for each autoencoder, we note that
wall-clock times for training may still differ because DAEs
require some additional time for sampling noise. Similar
results were observed when using a tanh nonlinearity and
are provided in the supplementary material.

7. Related Work

There have been many studies aiming to provide a better the-
oretical understanding of DAEs. Vincent et al. (2008) anal-
ysed DAEs from several different perspectives, including
manifold learning and information ﬁltering, by establishing
an equivalence between different criteria for learning and
the original training criterion that seeks to minimise the re-
construction loss. Subsequently, Vincent (2011) showed that
under a particular set of conditions, the training of DAEs
can also be interpreted as a type of score matching. This
connection provided a probabilistic basis for DAEs. Fol-
lowing this, a more in-depth analysis of DAEs as a possible
generative model suitable for arbitrary loss functions and
multiple types of data was given by Bengio et al. (2013).

In contrast to a probabilistic understanding of DAEs, we
present here an analysis of the learning process. Speciﬁ-
cally inspired by Saxe et al. (2013a), as well as by earlier
work on supervised neural networks (Opper, 1988; Sanger,
1989; Baldi & Hornik, 1989; Saad & Solla, 1995), we pro-
vide a theoretical investigation of the temporal behaviour of
linear DAEs using derived equations that exactly describe
their dynamics of learning. Speciﬁcally for the linear case,
the squared error loss for the reconstruction contractive au-
toencoder (RCAE) introduced in Alain & Bengio (2014) is
equivalent to the expected loss (over the noise) for the DAE.
Therefore, the learning dynamics described in this paper
also apply to linear RCAEs.

For our analysis to be tractable we used a marginalised re-
construction loss where the gradient descent dynamics are
viewed in expectation over the noise distribution. Whereas
our motivation is analytical in nature, marginalising the re-
construction loss tends to be more commonly motivated
from the point of view of learning useful and robust fea-
ture representations at a signiﬁcantly lower computational
cost (Chen et al., 2014; 2015). This approach has also been
investigated in the context of supervised learning (van der
Maaten et al., 2013; Wang & Manning, 2013; Wager et al.,
2013). Also related to our work is the analysis by Poole
et al. (2014), who showed that training autoencoders with
noise (added at different levels of the network architecture),

is closely connected to training with explicit regularisation
and proposed a marginalised noise framework for noisy
autoencoders.

8. Conclusion and Future Work

This paper analysed the learning dynamics of linear de-
noising autoencoders (DAEs) with the aim of providing a
better understanding of the role of noise during training. By
deriving exact time-dependent equations for learning, we
showed how noise inﬂuences the shape of the loss surface as
well as the rate of convergence to ﬁxed point solutions. We
also compared the learning behaviour of added input noise
to that of weight decay, an explicit form of regularisation.
We found that while the two have similar regularisation
effects, the use of noise for regularisation results in faster
training. We compared our theoretical predictions with ac-
tual learning dynamics on real-world data sets, observing
good agreement. In addition, we also provided evidence
(on both MNIST and CIFAR-10) that our predictions hold
qualitatively for nonlinear DAEs.

This work provides a solid basis for further investigation.
Our analysis could be extended to nonlinear DAEs, poten-
tially using the recent work on nonlinear random matrix
theory for neural networks (Pennington & Worah, 2017;
Louart et al., 2017). Our ﬁndings indicate that appropriate
noise levels help DAEs ignore low variance directions in the
input; we also obtained new insights into the training time
of DAEs. Therefore, future work might consider how these
insights could actually be used for tuning noise levels and
predicting the training time of DAEs. This would require
further validation and empirical experiments, also on other
datasets. Finally, our analysis only considers the training
dynamics, while a better understanding of generalisation
and what inﬂuences the quality of feature representations
during testing, are also of prime importance.

Acknowledgements

We would like to thank Andrew Saxe for early discussions
that got us interested in this work, as well as the review-
ers for insightful comments and suggestions. We would
like to thank the CSIR/SU Centre for Artiﬁcial Intelligence
Research (CAIR), South Africa, for ﬁnancial support. AP
would also like to thank the MIH Media Lab at Stellenbosch
University and Praelexis (Pty) Ltd for providing stimulating
working environments for a portion of this work.

Learning Dynamics of Linear Denoising Autoencoders

References

Advani, M. S. and Saxe, A. M. High-dimensional
dynamics of generalization error in neural networks.
arXiv:1710.03667, 2017.

Alain, G. and Bengio, Y. What regularized auto-encoders
learn from the data-generating distribution. The Journal
of Machine Learning Research, 15(1):3563–3593, 2014.

Baldi, P. and Hornik, K. Neural networks and principal
component analysis: Learning from examples without
local minima. Neural Networks, 2(1):53–58, 1989.

Bengio, Y., Lamblin, P., Popovici, D., and Larochelle, H.
Greedy layer-wise training of deep networks. In Advances
in Neural Information Processing Systems, pp. 153–160,
2007.

Bengio, Y., Yao, L., Alain, G., and Vincent, P. General-
ized denoising auto-encoders as generative models. In
Advances in Neural Information Processing Systems, pp.
899–907, 2013.

Bishop, C. M. Training with noise is equivalent to Tikhonov
regularization. Neural Computation, 7(1):108–116, 1995.

Chandar, S., Lauly, S., Larochelle, H., Khapra, M., Ravin-
dran, B., Raykar, V. C., and Saha, A. An autoencoder
approach to learning bilingual word representations. In
Advances in Neural Information Processing Systems, pp.
1853–1861, 2014.

Lin, H. W., Tegmark, M., and Rolnick, D. Why does deep
and cheap learning work so well? Journal of Statistical
Physics, 168:1223–1247, 2017.

Louart, C., Liao, Z., and Couillet, R. A random matrix
approach to neural networks, 2017. arXiv:1702.05419v2.

Neyshabur, B., Tomioka, R., Salakhutdinov, R., and Srebro,
N. Geometry of optimization and implicit regularization
in deep learning. arXiv:1705.03071, 2017.

Nguyen, Q. and Hein, M. The loss surface of deep and wide

neural networks. arXiv:1704.08045, 2017.

Opper, M. Learning times of neural networks: exact solution
for a perceptron algorithm. Physical Review A, 38(7):
3824, 1988.

Pennington, J. and Bahri, Y. Geometry of neural network
loss surfaces via random matrix theory. In International
Conference on Machine Learning, pp. 2798–2806, 2017.

Pennington, J. and Worah, P. Nonlinear random matrix the-
ory for deep learning. In Advances in Neural Information
Processing Systems, pp. 2634–2643, 2017.

Pennington, J., Schoenholz, S., and Ganguli, S. Resurrecting
the sigmoid in deep learning through dynamical isometry:
theory and practice. In Advances in Neural Information
Processing Systems, pp. 4788–4798, 2017.

Poole, B., Sohl-Dickstein, J., and Ganguli, S. An-
alyzing noise in autoencoders and deep networks.
arXiv:1406.1831, 2014.

Chen, M., Weinberger, K., Sha, F., and Bengio, Y. Marginal-
ized denoising auto-encoders for nonlinear representa-
tions. In International Conference on Machine Learning,
pp. 1476–1484, 2014.

Rifai, S., Vincent, P., Muller, X., Glorot, X., and Bengio,
Y. Contractive auto-encoders: Explicit invariance dur-
ing feature extraction. In International Conference on
Machine Learning, pp. 833–840, 2011.

Chen, M., Weinberger, K., Xu, Z., and Sha, F. Marginal-
izing stacked linear denoising autoencoders. Journal of
Machine Learning Research, 16:3849–3875, 2015.

Saad, D. and Solla, S. A. Exact solution for on-line learning
in multilayer neural networks. Physical Review Letters,
74(21):4337, 1995.

Dinh, L., Pascanu, R., Bengio, S., and Bengio, Y. Sharp
minima can generalize for deep nets. arXiv:1703.04933,
2017.

Elman, J. L. and Zipser, D. Learning the hidden structure of
speech. Journal of the Acoustic Society of America, 83:
1615–1626, 1987.

Krogh, A. and Hertz, J. A. A simple weight decay can im-
prove generalization. In Advances in Neural Information
Processing Systems, pp. 950–957, 1992.

Sanger, T. D. Optimal unsupervised learning in a single-
layer linear feedforward neural network. Neural Net-
works, 2(6):459–473, 1989.

Saxe, A. M., McClelland, J. L., and Ganguli, S. Exact
solutions to the nonlinear dynamics of learning in deep
linear neural networks. arXiv:1312.6120, 2013a.

Saxe, A. M., McClelland, J. L., and Ganguli, S. Learning
hierarchical category structure in deep neural networks.
In Proceedings of the Cognitive Science Society, pp. 1271–
1276, 2013b.

Larsson, G. Discovery of visual semantics by unsu-
pervised and self-supervised representation learning.
arXiv:1708.05812, 2017.

Soudry, D. and Hoffer, E. Exponentially vanishing sub-
optimal local minima in multilayer neural networks.
arXiv:1702.05777, 2017.

Learning Dynamics of Linear Denoising Autoencoders

Swirszcz, G., Czarnecki, W. M., and Pascanu, R. Local
minima in training of neural networks. arXiv:1611.06310,
2017.

Tu, Z., Liu, Y., Shang, L., Liu, X., and Li, H. Neural ma-
chine translation with reconstruction. In AAAI Conference
on Artiﬁcial Intelligence, pp. 3097–3103, 2017.

van der Maaten, L., Chen, M., Tyree, S., and Weinberger,
K. Learning with marginalized corrupted features. In
International Conference on Machine Learning, pp. 410–
418, 2013.

Vincent, P. A connection between score matching and de-
noising autoencoders. Neural Computation, 23(7):1661–
1674, 2011.

Vincent, P., Larochelle, H., Bengio, Y., and Manzagol, P.-A.
Extracting and composing robust features with denoising
autoencoders. In International Conference on Machine
Learning, pp. 1096–1103, 2008.

Wager, S., Wang, S., and Liang, P. S. Dropout training as
adaptive regularization. In Advances in Neural Informa-
tion Processing Systems, pp. 351–359, 2013.

Wang, S. and Manning, C. Fast dropout training. In Inter-
national Conference on Machine Learning, pp. 118–126,
2013.

Zeiler, M., Ranzato, M., Monga, R., Mao, M., Yang, K.,
Le, Q., Nguyen, P., Senior, A., Vanhoucke, V., Dean, J.,
and Hinton, G. E. On rectiﬁed linear units for speech
processing. In Proceedings of the IEEE International
Conference on Acoustics, Speech and Signal Processing,
2013.

Learning Dynamics of Linear Denoising Autoencoders

Supplementary material

The following section provides detail omitted in the paper
regarding the derivation of certain equations as well as addi-
tional comments.

A. Expected loss for linear DAEs

We derive the expected reconstruction loss over the noise
distribution as presented in (1) in the paper. The expected
loss can be written as

E(cid:15)[L] =

E(cid:15)

(cid:2)||xi − W2W1 ˜xi||2(cid:3) .

1
2N

N
(cid:88)

i=1

where ˜xi = xi + (cid:15)i, with (cid:15) sampled from an isotropic noise
distribution with component variance s2. Let SE(˜xi) =
||xi − W2W1 ˜xi||2 and M = W2W1. Then

E(cid:15) [SE(˜xi)] = E(cid:15)

(cid:2)||(I − M )xi + M (xi − ˜xi)||2(cid:3)

= SE(xi) + E(cid:15)

(cid:2)||M (xi − ˜xi)||2(cid:3)

because the cross product terms vanish, since E(cid:15) [˜xi] = xi:

0 = E(cid:15)
= E(cid:15)

i (I − M )T M (xi − ˜xi)(cid:3)
(cid:2)xT
(cid:3) .
(cid:2)(xi − ˜xi)T M T (I − M )xi

We also have that

||M (xi − ˜xi)||2 = (xi − ˜xi)T M T M (xi − ˜xi)

= tr (cid:2)(xi − ˜xi)T M T M (xi − ˜xi)(cid:3)
= tr (cid:2)M (xi − ˜xi)(xi − ˜xi)T M T (cid:3)
= tr (cid:2)M (cid:15)i(cid:15)T

i M T (cid:3)

due to the invariance of the trace under cycle permutation of
products. Therefore, in expectation over the noise we have
(cid:2)||M (xi − ˜xi)||2(cid:3) = tr (cid:2)M (s2I)M T (cid:3) ,

E(cid:15)

and as a result

E(cid:15) [L] =

||xi − W2W1xi||2

1
2N

N
(cid:88)

i=1

whitece +

tr (cid:0)W2W1W T

1 W T
2

(cid:1) .

s2
2

B. Learning dynamics for linear DAEs

We derive the expression for the learning dynamics of a
linear DAE as presented in (5) in the paper. As departure
point, we start by examining the expected scalar update
equations over the noise model for a small learning rate α,
which can be written as

where τ = N
α , with N representing the number of training
samples. Deﬁne w = w2w1 and using the product rule the
update for w then becomes

τ

d
dt

w = τ [w1

w2 + w2

w1]

d
dt

d
dt

= w2
= (λ − w(λ + ε))(w2

1(λ − w2w1(λ + ε)) + w2
2).

1 + w2

2(λ − w2w1(λ + ε))
(9)

Next we make the following hyperbolic change of coordi-
nates

w1 =

c0sinh

, w2 =

c0cosh

, for w2

1 < w2
2

√

√

(cid:19)

(cid:19)

(cid:18) θ
2
(cid:18) θ
2

√

√

(cid:19)

(cid:18) θ
2
(cid:18) θ
(cid:19)
2

w1 =

c0cosh

, w2 =

c0sinh

, for w2

1 > w2
2,

(cid:19)

2 − w2

w = c0cosh

where θ parameterises points along the dynamics trajectory
represented by w2
1 = ±c0 (Saxe et al., 2013a). Note
that with this change of coordinates we obtain
(cid:18) θ
2
2 + e− θ
e θ
2
(cid:18) eθ − e−θ
2

(cid:18) θ
2
2 − e− θ
e θ
2

= c0

(cid:33) (cid:32)

sinh

(cid:33)

(cid:32)

=

(cid:19)

(cid:19)

2

2

c0
2
c0
2

=

sinh(θ),

so that

Similarly,

dw =

cosh(θ)dθ.

c0
2

(cid:19)

(cid:18) θ
2

w2

2 + w2

1 = c0cosh2

+ c0sinh2

(cid:19)

(cid:18) θ
2

(cid:32)

2 + e− θ
e θ
2

2

(cid:33)2

(cid:32)

+ c0

2 − e− θ
e θ
2

2

(cid:33)2

= c0

c0
4

=

(cid:0)eθ + 2 + e−θ + eθ − 2 + e−θ(cid:1)
(cid:18) eθ + e−θ
2
= c0cosh(θ)

= c0

(cid:19)

Plugging these results into the update for w given in (9),
yields

τ c0cosh(θ)
2

dθ
dt

(cid:16)

=

λ −

c0
2

sinh(θ)(λ + ε)

c0cosh(θ),

(cid:17)

τ

τ

d
dt
d
dt

w1 = w2(λ − w2w1λ) − εw2

2w1

and as a result,

w2 = w1(λ − w2w1λ) − εw2w2
1.

τ

dθ
dt

= λ (2 − βsinh(θ)) ,

Learning Dynamics of Linear Denoising Autoencoders

where β = c0

(cid:0)1 + ε

(cid:1). To solve for t, we write

λ

(cid:90) θf

θ0

t =

τ
λ (2 − βsinh(θ))

dθ

and integrate:

(cid:34)

(cid:32)

ln

t =

τ
ζλ

ζ + β + 2tanh( θ
2 )
ζ − β − 2tanh( θ
2 )

(cid:33)(cid:35)θf

θ0

where ζ = (cid:112)β2 + 4 and initial parameter value θ0 =
(cid:17)
sinh−1(2w/c0). Let δ0 = tanh (cid:0) θ0
,
then

(cid:1) and δf = tanh

(cid:16) θf
2

2

t =

τ
λζ

ln

(ζ + β + 2δf ) (ζ − β − 2δ0)
(ζ − β − 2δf ) (ζ + β + 2δ0)

,

so that

eλζt/τ =

(ζ + β + 2δf ) (ζ − β − 2δ0)
(ζ − β − 2δf ) (ζ + β + 2δ0)

.

Thus,

Multiplying by the denominator, expanding, and deﬁning
E = eλζt/τ , we obtain

− 2Eδf (ζ + β + 2δ0)
+ E (cid:0)ζ 2 + 2ζδ0 − β2 − 2βδ0
= 2δf (ζ − β − 2δ0)
+ (cid:0)ζ 2 − 2ζδ0 − β2 − 2βδ0

(cid:1) ,

(cid:1)

which yields

loss with weight decay gives the scalar loss associated with
an eigenvalue λ as

(cid:96)γ =

(1 − w2w1)2 +

(w2

1 + w2

2),

N γ
2τ

λ
2τ

where γ is the penalty parameter that controls the amount
of regularisation that is being applied. The update equations
for the weights then follow as

τ

τ

d
dt
d
dt

w1 = w2(λ − w2w1λ) − N γw1

w2 = w1(λ − w2w1λ) − N γw2,

assuming the initial w2 = w1 (which holds approximately
for small initial values), we have for w = w2w1 that

τ

d
dt

w = 2w(λ − wλ) − 2N γw

= 2w(λ − N γ − wλ).

t =

=

=

(cid:90) wf

dw

τ
2w(λ − N γ − wλ)
w0
(cid:20) ln(w) − ln(λ − N γ − wλ)
τ
λ − N γ
2
(cid:18) wf (λ − N γ − w0λ)
w0(λ − N γ − wf λ)

τ
2(λ − N γ)

(cid:21)wf

ln

w0

(cid:19)

.

Then solving for wf gives

wf (t) =

ξEγ
Eγ − 1 + ξ/w0

,

where Eγ = e2ξt/τ and ξ = (1 − N γ/λ).

δf ((1 − E) (2β + 4δ0) − 2(E + 1)ζ)
= (1 − E) (cid:0)ζ 2 − β2 − 2βδ0

(cid:1) − 2(1 + E)ζδ0.

D. Optimal learning rates

We derive expressions for the optimal learning rates for
linear DAEs and WDAEs as presented in (8) in the paper.
First, consider the expected scalar DAE loss

(cid:96)ε =

(1 − w2w1)2 +

(w2w1)2.

λ
2τ

(cid:34)

2

Solving for θf (t), we obtain the hyperbolic parameter equa-
tion

θf (t) = 2tanh−1

(1 − E) (cid:0)ζ 2 − β2 − 2βδ(cid:1) − 2(1 + E)ζδ
(1 − E) (2β + 4δ) − 2(1 + E)ζ

(cid:35)

where δ = tanh (cid:0) θ0

(cid:1). Using

w(t) =

sinh (θt) ,

c0
2

(where θt = θf (t)) to track the weight trajectory gives
equation (5) in the paper.

C. Learning dynamics for linear WDAEs

We derive the expression for the learning dynamics of a lin-
ear WDAE as presented in (7) in the paper. Reconstruction

The Hessian of (cid:96)ε is given by
(cid:34) ∂2(cid:96)ε
∂w2
1
∂2(cid:96)ε
∂w2w1

H =

where

(λ + ε),

(λ + ε),

∂2(cid:96)ε
∂w2
1
∂2(cid:96)ε
∂w2
2
∂2(cid:96)ε
∂w1w2

=

=

=

w2
2
τ
w2
1
τ
∂2(cid:96)ε
∂w2w1

ε
2τ

(cid:35)

,

∂2(cid:96)ε
∂w1w2
∂2(cid:96)ε
∂w2
2

=

2w2w1
τ

(λ + ε) −

λ
τ

.

Learning Dynamics of Linear Denoising Autoencoders

Now, if we assume w2 = w1, and let a = ∂2(cid:96)ε
∂w2
1
b = ∂2(cid:96)ε
, the eigenvalues for the Hessian can be shown
∂w2w1
to be λH = a − b or λH = a + b. The second order update
for a single weight w at time t is then given by

= ∂2(cid:96)ε
∂w2
2

and

F. Estimated dynamics for nonlinear networks

The dynamics for the nonlinear networks trained in Figure
6 in the paper were estimated using the following approach.
First, compute

wt+1 = wt −

(cid:19)

(cid:18) ∂(cid:96)ε
∂wt

/λH ,

where the maximum λH , is when w2 = w1 = 1, such that

λH =

(λ + ε) +

(λ + ε) −

2
τ

1
τ
2λ + 3ε
τ

.

=

λ
τ

Therefore, the optimal learning rate is

αε = 1/λH =

τ
2λ + 3ε

.

using an eigen-decomposition giving eigenvalues λj, j =
1, ..., D. Then at regular intervals compute

Σxx =

xixT

i = V ΛV T ,

N
(cid:88)

i=1

ˆΣxx(t) =

xi ˆxi(t)T ,

N
(cid:88)

i=1

where ˆx(t) is the estimated reconstruction of input at time
t generated by the autoencoder network. Finally, using the
following rotation to obtain the diagonal matrix

For WDAEs with penalty parameter γ, a very similar deriva-
tion gives

ˆΛ(t) = V T ˆΣxx(t)V,

Taking the ratio of the optimal DAE rate to that for the
WDAE gives

αγ =

τ
2λ + γ

.

R =

=

αε
αγ

2λ + γ
2λ + 3ε

.

where the diagonal contains the estimated eigenvalues ˆλj(t),
we can compute an estimate for the identity mapping asso-
ciated with each eigenvalue as ˆλj(t)/λj ∈ [0, 1].

G. Learning dynamics for tanh autoencoder networks

We investigated the dynamics of learning for nonlinear AEs,
WDAEs and DAEs, using tanh activations.

E. Equivalent scalar solutions

In Section 4 of the paper, the DAE ﬁxed point solution is
shown to be

w∗

ε =

λ
λ + ε

.

Now if w = w2w1 and w2 = w1, then for WDAE we have
that the scalar loss is given by

and

(cid:96)γ =

(1 − w)2 +

w,

λ
2τ

γ
τ

∂(cid:96)γ
∂w

λ
τ

= −

(1 − w) +

γ
τ

.

Setting the above equal to zero and solving gives

To obtain the value of γ for which the two ﬁxed points are
equal, we set w∗

ε and solve for γ to ﬁnd

γ = w∗

w∗

γ = 1 − γ/λ.

γ =

λε
λ + ε

.

Figure 7. Learning dynamics for nonlinear networks using tanh
activation. AE (blue), WDAE (orange) and DAE (green). Left:
MNIST Right: CIFAR-10.

Figure 7 shows the dynamics for these networks trained on
MNIST (N = 50000) and CIFAR-10 (N = 30000) with
equal learning rates. For the DAE, the input was corrupted
using sampled Gaussian noise with mean zero and σ2 = 2.
For the WDAE, the amount of weight decay was set to
γ = 0.0045. During the course of training, the identity
mapping associated with each eigenvalue was estimated
using the approach described in Section F, at equally spaced
intervals of size 100 epochs.

