READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

READ-BAD: A New Dataset and Evaluation
Scheme for Baseline Detection in Archival
Documents

Tobias Gr¨uning, Roger Labahn
Computational Intelligence Technology Lab
University of Rostock
18057 Rostock, Germany
{tobias.gruening, roger.labahn}@uni-rostock.de

Markus Diem, Florian Kleber and Stefan Fiel
Computer Vision Lab
TU Wien
1040 Vienna, Austria
{diem,kleber,ﬁel}@cvl.tuwien.ac.at

7
1
0
2
 
c
e
D
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
1
1
3
3
0
.
5
0
7
1
:
v
i
X
r
a

Abstract—Text line detection is crucial for any application
associated with Automatic Text Recognition or Keyword Spotting.
Modern algorithms perform good on well-established datasets
since they either comprise clean data or simple/homogeneous
page layouts. We have collected and annotated 2036 archival
document images from different locations and time periods.
The dataset contains varying page layouts and degradations
that challenge text line segmentation methods. Well established
text line segmentation evaluation schemes such as the Detection
Rate or Recognition Accuracy demand for binarized data that
is annotated on a pixel level. Producing ground truth by these
means is laborious and not needed to determine a method’s
quality. In this paper we propose a new evaluation scheme that
is based on baselines. The proposed scheme has no need for
binarization and it can handle skewed as well as rotated text
lines. The ICDAR 2017 Competition on Baseline Detection and
the ICDAR 2017 Competition on Layout Analysis for Challenging
Medieval Manuscripts used this evaluation scheme. Finally, we
present results achieved by a recently published text line detection
algorithm.

I. INTRODUCTION

Layout analysis (LA) is considered an open research topic
especially for historical collections and is a major pre-
processing step for e.g. Keyword Spotting (KWS) or Hand-
written Text Recognition (HTR). In the last years several
competitions were organized to evaluate the performance of
layout analysis algorithms: Some focusing purely on LA [1]–
[6], some requiring a good LA as pre-processing step to
achieve competitive results [7]–[9]. The ongoing effort
in
organizing such competitions strongly indicates that there is
still a need for improvement concerning LA.

Even state-of-the-art algorithms have problems if they are
faced with degradations related to historical documents [6],
ink, bleed-through, marginalia, skewed and
e.g. faded-out
touching/overlapping text lines. In contrast, reported results
of LA algorithms perform surprisingly well with accuracies
far better than 90% [10]–[15]. This is basically due to the fact
that the well established easily accessible datasets (like the
IAM-HistDB consisting of Saint Gall Database [16], Parzival
Database [17] and Washington Database [17], as well as the
datasets provided via the competitions [1], [3], [5], the datasets

introduced in [13] and even newly proposed datasets like the
collection of Southeast Asian palm leaf manuscript images
[18] are not covering the full range of difﬁculties present in
historical documents. The datasets contain either modern, well
aligned handwritten texts without any serious difﬁculties for
state-of-the-art algorithms at all or very homogeneous layouts
within a dataset, hence it is an ease to adapt algorithms to
such datasets.

Since state-of-the-art methods achieve high accuracies on
well-established datasets, there is a need for a new, challenging
dataset with complex page layouts and a greater variety in
terms of script, time range and place of origin. A huge variety
of degradations as well as different resolutions and orientations
should be present. Since the landscape of document analysis
has changed over the last years, and machine learning based
algorithms get more and more popular not only for KWS [19]
and HTR [20] but also for LA [21]–[23], the dataset should
consist of hundreds of pages to provide an appropriate amount
of training samples.

Besides the characteristics of the images the kind of ground
truth (GT) provided is essential. The variety of GT given for
different datasets ranges from origin points [6] over polygons
surrounding the text lines [16], [17] and ground truth on pixel
level [1], [3], [13] to detailed information about text region
entities [4] and reading order [8]. Since in the most application
scenarios LA is mainly a pre-processing step for HTR, it is
meaningful to provide goal-oriented GT. Modern HTR systems
require text lines as input [19], [20], that is why we will
restrict ourselves to the text line detection scenario and ignore
issues like entity classiﬁcation and reading order. Nevertheless
in complex layout scenarios (e.g. tables, multi-column texts,
present marginalia), it is mandatory to detect the page layout
to achieve correct
line segmentation results. Ignoring
the page layout typically leads to an undersegmentation of
text lines, see Sec. IV. Therefore, the text line segmentation
scenario somehow comprises the page segmentation scenario
as a required intermediate processing step.

text

To characterize the text lines using solely origin points is in
our opinion not sufﬁcient since they don’t cover the character-

each archival collection using a freely available python script1.
This results in a set of 2500 document images. A more detailed
description of the 9 different document collections is given
below.

Archive Bistum Passau (ABP): collection contains 16, 000
images photographed at 300 dpi. The documents include parish
registers of baptisms, marriages, and funerals.

Bohisto - Bozen State Archive: 77, 000 page images of

council minutes written between 1470 and 1804.

Venice Time Machine (EPFL): about 5000 pages from
indexes of records, records of real property transactions, and
daily death registrations written between the 16th and 18th
century.

Humboldt University Berlin (HUB): 3600 student notes of
lectures given by Alexander von Humboldt between 1827 and
1829.

National Archive Finland (NAF): 2186 page images from
account books, a court book, a census book, and a church
book that cover a time period from 1774 until the 1930s.

Marburg State Archive: 36, 000 page images from the
Grimm collection comprising letters, postcards, and greeting
cards.

University College London (UCL): the Bentham papers
include 55, 000pages. Most pages were written by the British
philosopher Jeremy Bentham between 1760 and 1832.

Brabant Archive (BHIC): composed of various types of

tables containing census information.

University Bibliography Basel (unibas): e-manuscripta2.

istics, e.g. skew, orientation, dimension, ... , of the text lines at
all. On the other hand, [24] showed that the HTR accuracy is
not signiﬁcantly effected by the polygon surrounding the text
lines. Even simple strategies to construct surrounding polygons
given baseline representations lead to satisfying results [24].
Therefore, GT based on baseline representations for the text
lines is in our opinion a reasonable compromise. Furthermore,
annotating baselines is less cumbersome than surrounding
polygons and therefore cheaper.

Since the widely-used evaluation schemes rely on surround-
ing polygons and use area (or foreground pixel) based methods
to calculate the accuracy of text line segmentation results, there
is a need for an evaluation scheme suitable for baselines.

In this paper, we introduce a new dataset containing 2036
pages of historical documents with annotated baselines. Fur-
thermore, we propose a newly developed, goal-oriented evalu-
ation scheme working with baseline representations of the text
lines. This scheme was already used in two layout analysis
competitions, namely the ICDAR 2017 Competition on Base-
line Detection (cBAD) and the ICDAR 2017 Competition on
Layout Analysis for Challenging Medieval Manuscripts. While
we published a report of the cBAD competition alongside
with the evaluation scheme in [25],
this paper aims at a
thorough introduction of the evaluation scheme. In addition,
the collection of the dataset and its sources are described.

The remaining paper is structured as follows, in Section II
the dataset is described, a meaningful subdivision is explained
and some example pages as well as statistics are shown.
Section III describes the newly proposed evaluation scheme
along with some examples demonstrating the functionality of
the scheme. In Section IV the results obtained by a recently
published text line detection method are presented. Section V
concludes the paper.

II. DATASET

The ICDAR 2017 Competition on Baseline Detection
(cBAD) dataset [26] is composed of 2036 document page
images that were collected from 9 different archives.

A. Baseline Deﬁnition

A baseline is deﬁned in the typographical sense as the
virtual line where most characters rest upon and descenders
extend below. Text lines are annotated by one single base-
line. Hence, non-textual symbols are not annotated. Non-
textual symbols include: decoration lines, dotted lines, images,
noise/stains, initials, bleed-through text. A baseline is split if

• it spans different columns.
• it spans different document pages.
• it connects marginalia and the body text.

Fig. 1. Two example images of TRACK A Simple Documents (left) and
TRACK B Complex Documents (right) with annotated baselines and text
regions.

If a text line is clearly not part of a table (column) system, a
single baseline is annotated even crossing column borders.

C. Data Annotation

B. The cBAD Dataset

After removing images due to quality as well as content
issues the number reduced from 2250 to 2118. For these

About 2000 document images from each of 9 different
European archives were collected. These documents were
written between 1470 and 1930. We sampled 250 images from

1https://github.com/TUWien/Benchmarking
2http://www.e-manuscripta.ch/

images the text regions as well as baselines were annotated
by DigiTexx. The well-known PAGE XML3 scheme is used
for storing text region and baseline information. A ﬁnal review
process by two independent operators reduced the total number
to 2036 images. All in all 132, 124 annotated baseline are
available.

This annotated dataset is split into two subsets: Simple
Documents and Complex Documents. The ﬁrst includes only
pages with simple page layouts and annotated text regions.
Hence, this could be used for a track to evaluate the text line
segmentation only, thus neglecting issues that arise from the
page layout. The second subset Complex Documents includes
full page tables, multi column text and rotated text lines. The
challenge is not only to robustly detect baselines but also to
split baselines correctly with respect to the page layout.

Both subsets are split into a training and a test set. For
training 30 images are taken from each collection resulting in
216 training images for Simple Documents and 270 images for
Complex Documents. The data along with the GT is publicly
available [26]. Two example images are shown in Fig. 1.

III. EVALUATION SCHEME

Since baseline detection is the ﬁrst step in the information
retrieval pipeline of an classical workﬂow, there are special
requirements regarding the evaluation scheme:

• The evaluation scheme should indicate how reliable the
text is detected – ignoring layout issues. The value reﬂect-
ing this is called R-value, since it has similar properties
as the well-known recall value.

• The evaluation scheme should indicate how reliable the
structure of the text lines (layout) of the document is
detected. The value reﬂecting this is called P-value, since
it has similar properties as the well-known precision
value.

• The evaluation scheme should be invariant to small dif-
ferences between ground truth and hypotheses. There is
not an unique correct baseline, slightly different baselines
potentially lead to the same HTR accuracy.

• The evaluation scheme should be able to handle skewed

To our knowledge there is no evaluation scheme meeting these
requirements – or even any scheme working for baselines.
Hence, we propose a newly developed scheme to evaluate the
performance of baseline detection algorithms. The proposed
algorithm is implemented in Java and available as a standalone
command line tool. It is licensed under LGPLv3 and publicly
available4.

A. Single Page Evaluation

In the following the calculation of R and P for a single
page is explained. Let P be the set of all polygonal chains

3http://www.primaresearch.org/tools
4https://github.com/Transkribus/TranskribusBaseLineEvaluationScheme

(each polygonal chain represents a baseline and contains a
ﬁnite number of ordered vertices, which are characterized by
two coordinates). G = {g1, ..., gM } ⊂ P is the set of given
(GT) polygonal chains representing the baselines for a single
page and H = {h1, ..., hK} ⊂ P is the set of hypothesis (HY)
polygonal chains calculated by a baseline detection algorithm
for the same page, Fig. 2a. The calculation of R and P for the
two sets G and H follows:

1) Polygonal Chain Normalization:

In a ﬁrst step each
chain is normalized, so that two adjacent vertices are in the
2), Fig. 2b.
8-neighborhood of each other (have a distance ≤
The resulting sets of normalized chains are (cid:101)G and (cid:101)P. For better
readability we omit the tilde. In the following G and P are
the sets of normalized polygonal chains.

√

2) Tolerance Value Calculation: In a second step for each
chain g ∈ G a tolerance value tg is calculated. As mentioned
above, the evaluation scheme should not penalize HY baselines
which are slightly different to the GT baselines. Hence, some
kind of tolerance is necessary. Page (and text line) dependent
tolerance values are calculated, because within a collection
various resolutions and layout scenarios could be present. A
single pre-deﬁned tolerance value can hardly cover all these
scenarios in a satisfying fashion. Since the y-coordinates of the
vertices are typically “wrongly” oriented in computer vision
scenarios, they have to be negated for the following procedure.
To calculate tg, the orientation αg ∈ [0, π) of g is estimated
using linear regression. o(αg) = (cos(αg), sin(αg))T is the
vector of length 1 of orientation αg. Given the set V of all
vertices of the chains in G \ g, the subset Vg ⊂ V is calculated
such that for any v ∈ Vg there are at least two vertices
v1, v2 ∈ g satisfying

(v − v1)T o(αg) · (v − v2)T o(αg) ≤ 0.

(1)

Condition (1) means that the projections of (v − v1) and (v −
v2) into the direction of o(αg) have different algebraic signs
(or have length zero). In Fig. 2c the set Vg2 of vertices for
GT baseline 2 is shown (green points). For each v ∈ Vg one
vertex vm(v) ∈ g is determined for which the projection of
(v − vm(v)) into the direction of o(αg) has minimal length
(cid:12)(v − vg)T o(αg)(cid:12)
(cid:12)
(cid:12) .

vm(v) = arg min

The minimum distance of g to another chain is calculated by

dg = min
v∈Vg

|(v − vm(v))xo(αg)y − (v − vm(v))yo(αg)x| .

Subscripts vx and vy are the x- and y-coordinate of vector
v. dg is the minimal length of the projections of all (v −
vm(v)) into the direction orthogonal to o(αg), see Fig. 2c
(green lines). For Vg = ∅ there are no other baselines allowing
a meaningful calculation of dg, hence its tolerance value is
set to some default value (250 was chosen). Condition (1) is
essential since Vg is the basis for the estimation of the minimal
distance of g to another chain. For instance the yellow vertex
Fig. 2c has a signiﬁcantly shorter orthogonal projection to GT
line 2, but of course would falsify the statistics. The mean dG
of all dg (g ∈ G) with a value different to the default value is

• The evaluation scheme should not rely on a reading order

vg∈g

and oriented text lines

nor on a binarization

(a) Depicted are the sets G = {g1, g2, g3, g4} of four GT baselines (blue) and H = {h1, h2, h3, h4} of four HY baseline (red).

(b) The same baselines as shown in Fig. 2a but represented by normalized polygonal chains (for better clarity only every 25th vertex is shown).

(c) The vertices, which are taken into account to calculate the minimum distance of GT line 2 to the other GT lines, are displayed as green points.
Green lines are the orthogonal (to GT line 2) distances of the green vertices.

(d) Shown in light blue are the tolerance areas for the different GT baselines, for all four baselines the estimated tolerance value is roughly 20.

Fig. 2. Depicted is a snippet of an example document sampled from [26] and intermediate steps of the evaluation scheme.

calculated. Finally, the GT baseline dependent tolerance values
are calculated

tg = 0.25 · min(dg, dG).

25% of the estimated interline distance yields a reasonable
compromise between accuracy and ﬂexibility. T = T (G) is
the set containing the resulting tolerance values, in Fig. 2d the
blue areas show the individual tolerance areas for the different
GT baselines.

3) Coverage Function: Employing the (tolerance depen-
dent) COV : P × P × R → R function implemented via
Alg. 1, one can determine a value representing the fraction of
chain p for which there is a vertex of chain q within a certain
tolerance area (skew-invariant). Alg. 1 counts the number of
vertices of p for which there is a vertex of q with a distance
less than the given tolerance value t. Furthermore a smooth
(linear) transition is performed for vertices with a distance
between t and 3t. A vertex with a distance less than t counts
1, with a distance of 1.5t it counts 0.75, with a distance of
2t it counts 0.5, ... Finally, a vertex with a distance of 3t and
more counts 0. The resulting value is normalized using the
number of vertices of p.

Let COVS : P × P(P) × R → R be the generic extension
of COV to a function accepting sets of polygonal chains
as second argument. The minimum from line 4 in Alg. 1
is calculated over a set of chains instead of a single chain.

Algorithm 1 Coverage Function

1: procedure COV(p, q, t)
2:
3:

c ← 0
for p = (px, py) vertex of p do
dmin ← minq∈q((cid:107)p − q(cid:107)2)
if dmin ≤ t then
c ← c + 1

else if dmin ≤ 3t then
c ← c + 3t−dmin

2t

end if

4:
5:
6:
7:
8:
9:

end for
c ← c
|p|
return c

10:
11:
12:
13: end procedure

(cid:46) |p| is the number of vertices of p

To clarify the functionality of the coverage functions a few
exemplary values are shown in Tab. I. Especially, the function
COV is not commutative in the ﬁrst two arguments.

4) R and P Calculation: The tolerance dependent R value

of G and H is ﬁnally calculated by

R(G, H, T ) =

(cid:80)

g∈G COVS(g, H, tg)
|G|

.

(2)

The R value indicates for what fraction of the GT baselines
there are detected HY baselines within a certain tolerance

TABLE I
EXAMPLE VALUES OF THE COVERAGE FUNCTIONS APPLIED TO
NORMALIZED POLYGONAL CHAINS SHOWN IN FIG. 2B WITH A FIXED
TOLERANCE VALUE OF 20 (AS SHOWN IN FIG. 2D). gi MEANS THE
NORMALIZED VERSION OF THE i-TH GT BASELINE.

COV(p, q, 20)

COVS (p, {q, r}, 20)

Algorithm 2 Alignment Function
1: procedure ALIGN(C, G, H)
2: M ← ∅
C(cid:48) ← C
3:
while C(cid:48) is not empty do
4:
5:

p

h3
g4
g3
h1

q

g4
h3
h2
g1

r

–
h4
–
g2

1.0
0.65
0.76
0.26

–
0.96
–
0.95

6:
7:
8:
9:
10:

m ← one of the maximal elements of C(cid:48)
if m > 0 then

//create a new matching pair
g ← element of G belonging to m
h ← element of H belonging to m
M ← M ∪ (g, h)
C(cid:48) ← take C(cid:48) and delete row/col of m

area. Segmentation (page layout) errors are not penalized at
all, because no alignment between GT and HY baselines is
enforced.

These segmentation errors are penalized in the P value. Let
M(G, H) ⊂ G × H be an alignment of GT and HY chains
where each element of G as well as of H occurs at most once.
The tolerance dependent P value of G and H is calculated as
follows

P(G, H, T ) =

(cid:80)

(g,h)∈M(G,H) COV(h, g, tg)
|H|

.

An alignment ensures that segmentation errors are penalized.
E.g. if a text line is split into two equally sized parts, a R value
of 1.0 is calculated (the two detected chains cover the entire
GT chain), but the expected P value is 0.5 (the GT chain is
aligned with exactly one of the HY chains with a P value of
1, this is divided by 2, because there are two HY chains). We
want to mention that for both cases (R and P) short text lines
have the same impact as long ones, because in (2) and (3) the
line speciﬁc R and P values are divided by the number of GT
respectively HY lines. This prevents the proposed evaluation
scheme from underestimating the importance of short text
lines, which often contain essential information in the context
of historical documents, e.g. dates.

5) Greedy-based Alignment: To evaluate (3) an P-optimal
alignment is necessary. Therefore a P matrix C ∈ RM ×K
is calculated with elements cij = COV(hi, gj, tgj ). Based
on this,
is calculated in a greedy manner
M(G, H) = ALIGN(C, G, H), see Alg. 2. A greedy approach
was chosen, because there is no reading order available (no
dynamic programming possible) and the greedy solution is in
most practical cases the exact solution.

the alignment

6) Harmonic Mean (F value): Finally, the harmonic mean

of R and P, we call it F value,

F =

2 · R · P
R + P

is calculated.

B. Multi Page Evaluation

Since the dataset is very heterogeneous, each page is eval-
uated on its own. The average is calculated for this page-wise
results. This prevents an overbalance of pages with dozens
of baselines (like pages containing a table) and yields results
representing the robustness of the evaluated algorithms over
various scenarios.

return M

else

11:
12:
13:
end if
14:
end while
15:
return M
16:
17: end procedure

(3)

C. Examples

Results for different subsets of the GT and HY baselines of
Fig. 2a are shown in Tab. II and explained in the following.
The small difference between Ex. 1 and Ex. 2 is due to the

TABLE II
EXAMPLE VALUES FOR R, P AND F1 FOR DIFFERENT SUBSETS OF THE GT
AND HY BASELINES SHOWN IF FIG. 2A, FOR ALL EVALUATIONS THE
TOLERANCE PARAMETER WAS FIXED TO 20.

Ex.

G

H

1
2
3
4
5

{g1, g2, g3, g4}
{g2, g3, g4}
{g1, g3, g4}
{g1, g2, g3, g4}
{g1, g2, g3, g4}

{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h1, h2, h3, h4}
{h2, h3}
{h2, h3, h4}

R

0.91
0.9
0.89
0.35
0.43

P

0.61
0.61
0.51
0.88
0.6

F1

0.73
0.73
0.65
0.5
0.5

fact, that in both cases h1 is aligned to g2 for the P calculation.
Hence, there is no effect on P if g1 is removed. R is nearly
the same, because g1 and g2 are both completely covered by
h1. By removing g2 instead of g1 (Ex. 3), h1 is now aligned
to g1 yielding a lower P value, because g2 covers much more
of h1 than g1. In Ex. 4 one gets a high P value, because
the remaining HY baselines are very well covered by the GT
baselines. By adding h4 (Ex. 5) we of course increase R, but
decrease P. This is due to the fact that h3 is aligned to g4 (as
in Ex. 4) and h4 is not aligned at all and gets a P value of 0.

IV. BASELINE SYSTEM

In this section we present the results obtained by applying
the text
line detection algorithm presented in [27]. This
approach relies on the clustering of so-called superpixels
(SPs). These SPs were calculated utilizing the classical FAST
algorithm. The algorithm does not rely on any training process.
Hence,
the training subset was ignored and the proposed
algorithm was just applied for the test subset (without any
parameter tuning). The results obtained are depicted in Tab. III.

TABLE III
RESULTS OBTAINED FOR THE SIMPLE AND COMPLEX TEST-SETS BY THE
METHOD PROPOSED IN [27].

Track

GT lines

HY lines

R

P

Simple
Complex

14735
88962

15836
50166

0.941
0.67

0.884
0.795

F1

0.912
0.728

As mentioned in [27] the method struggles if faced with
complex layouts. The method suffers from undersegmentation
problems and results in a bad accuracy for the complex track
compared to the simple track.

V. CONCLUSION
A new dataset consisting of 2036 pages of archival doc-
uments with 132, 124 annotated baselines was introduced. A
wide span of different times as well as locations is covered.
The dataset contains documents with various degradations and
complex layouts. Along with the dataset a goal-oriented eval-
uation scheme based on baseline representations is introduced.
Finally, the results obtained by a baseline system are shown.
This work provides new challenges as well as a solid basis for
competitive evaluations for the document layout community.

ACKNOWLEDGMENT
This work was partially funded by the European Union’s
Horizon 2020 research and innovation programme under grant
agreement No 674943 (READ – Recognition and Enrichment
of Archival Documents).

REFERENCES

[1] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICDAR2009 handwrit-
ing segmentation contest,” International Journal on Document Analysis
and Recognition, vol. 14, no. 1, pp. 25–33, 2011.

[2] A. Antonacopoulos, S. Pletschacher, D. Bridson, and C. Papadopoulos,
“ICDAR2009 page segmentation competition,” in Proceedings of the In-
ternational Conference on Document Analysis and Recognition, ICDAR,
2009, pp. 1370–1374.

[3] B. Gatos, N. Stamatopoulos, and G. Louloudis, “ICFHR 2010 hand-
writing segmentation contest,” in Proceedings - 12th International
Conference on Frontiers in Handwriting Recognition, ICFHR 2010,
2010, pp. 737–742.

[4] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“Historical document layout analysis competition,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2011, pp. 1516–1520.

[5] N. Stamatopoulos, B. Gatos, G. Louloudis, U. Pal, and A. Alaei,
“ICDAR 2013 handwriting segmentation contest,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, 2013, pp. 1402–1406.

[6] M. Murdock, S. Reid, B. Hamilton, and J. Reese, “ICDAR 2015 com-
petition on text line detection in historical documents,” in Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November.

IEEE, aug 2015, pp. 1171–1175.

[7] A. Antonacopoulos, C. Clausner, C. Papadopoulos, and S. Pletschacher,
“ICDAR 2013 competition on historical book recognition (HBR 2013),”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, 2013, pp. 1459–1463.

[8] ——, “ICDAR2015 competition on recognition of documents with
complex layouts - RDCL2015,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, vol. 2015-
Novem, 2015, pp. 1151–1155.

[9] J. Puigcerver, A. H. Toselli, and E. Vidal, “ICDAR2015 Competition
on Keyword Spotting for Handwritten Documents,” in Proceedings of
the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, 2015, pp. 1176–1180.

[10] A. Nicolaou and B. Gatos, “Handwritten text line segmentation by shred-
ding text into its lines,” in Proceedings of the International Conference
on Document Analysis and Recognition, ICDAR, 2009, pp. 626–630.

[11] A. Garz, A. Fischer, H. Bunke, and R. Ingold, “A binarization-free clus-
tering approach to segment curved text lines in historical manuscripts,”
Proceedings of the International Conference on Document Analysis and
Recognition, ICDAR, pp. 1290–1294, 2013.

[12] M. Diem, F. Kleber, and R. Sablatnig, “Text line detection for hetero-
geneous documents,” Proceedings of the International Conference on
Document Analysis and Recognition, ICDAR, pp. 743–747, 2013.
[13] R. Saabni, A. Asi, and J. El-Sana, “Text line extraction for historical
document images,” Pattern Recognition Letters, vol. 35, no. 1, pp. 23–
33, 2014.

[14] K. Chen, M. Seuret, M. Liwicki, J. Hennebert, and R. Ingold, “Page
segmentation of historical document images with convolutional autoen-
coders,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, vol. 2015-November, 2015, pp. 1011–
1015.

[15] Y. Boulid, A. Souhar, and M. Elkettani, “Detection of Text Lines of
Handwritten Arabic Manuscripts using Markov Decision Processes,”
International Journal of Interactive Multimedia and . . . , pp. 31–36,
2016.

[16] A. Fischer, V. Frinken, A. Forn´es, and H. Bunke, “Transcription
Alignment of Latin Manuscripts Using Hidden Markov Models,” The
Workshop on Historical Document Imaging and Processing (HIP), pp.
29–36, 2011.

[17] A. Fischer, A. Keller, V. Frinken, and H. Bunke, “Lexicon-free hand-
written word spotting using character HMMs,” in Pattern Recognition
Letters, vol. 33, no. 7, 2012, pp. 934–942.

[18] M. W. A. Kesiman, D. Valy, J.-c. Burie, E. Paulus, I. M. G. Sunarya,
K. H. Sok, and J.-m. Ogier, “Southeast Asian palm leaf manuscript
images : a review of handwritten text line segmentation methods and
new challenges Made Windu Antara Kesiman,” Journal of, vol. 26, no. 1,
2016.

[19] T. Strauß, T. Gr¨uning, G. Leifert, and R. Labahn, “CITlab ARGUS
for Keyword Search in Historical Handwritten Documents: Description
of CITlab’s System for the ImageCLEF 2016 Handwritten Scanned
Document Retrieval Task,” ser. CEUR Workshop Proceedings, ´Evora,
Portugal, sep 2016.

[20] A. Graves and J. Schmidhuber, “Ofﬂine Handwriting Recognition with
Multidimensional Recurrent Neural Networks,” Advances in Neural
Information Processing Systems 21, NIPS’21, pp. 545–552, 2008.
[21] B. Moysset, C. Kermorvant, C. Wolf, and J. Louradour, “Paragraph text
segmentation into lines with Recurrent Neural Networks,” Proceedings
of the International Conference on Document Analysis and Recognition,
ICDAR, vol. 2015-November, pp. 456–460, 2015.

[22] K. Chen, C. L. Liu, M. Seuret, M. Liwicki, J. Hennebert, and R. In-
gold, “Page Segmentation for Historical Document Images Based on
Superpixel Classiﬁcation with Unsupervised Feature Learning,” in Pro-
ceedings - 12th IAPR International Workshop on Document Analysis
Systems, DAS 2016, 2016, pp. 299–304.

[23] J. Pastor-Pellicer, M. Z. Afzal, M. Liwicki, and M. J. Castro-Bleda,
“Complete System for Text Line Extraction Using Convolutional Neural
Networks and Watershed Transform,” in Proceedings - 12th IAPR
International Workshop on Document Analysis Systems, DAS 2016,
2016, pp. 30–35.

[24] V. Romero, J. A. Sanchez, V. Bosch, K. Depuydt, and J. De Does,
“Inﬂuence of text line segmentation in Handwritten Text Recognition,”
in Proceedings of the International Conference on Document Analysis
and Recognition, ICDAR, vol. 2015-November, aug 2015, pp. 536–540.
[25] M. Diem, F. Kleber, S. Fiel, T. Gr¨uning, and B. Gatos, “cbad: Icdar2017
competition on baseline detection,” in Proceedings of the International
Conference on Document Analysis and Recognition, ICDAR, 2017, pp.
1355–1360.

[26] ——, “ScriptNet: ICDAR 2017 Competition on Baseline Detection
in Archival Documents (cBAD),” 2017. [Online]. Available: https:
//doi.org/10.5281/zenodo.257972

[27] T. Gr¨uning, G. Leifert, T. Strauß, and R. Labahn, “A robust and
binarization-free approach for text line detection in historical docu-
ments,” in Proceedings of the International Conference on Document
Analysis and Recognition, ICDAR, 2017, pp. 236–241.

