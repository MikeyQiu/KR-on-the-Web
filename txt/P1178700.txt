Group Affect Prediction Using Multimodal Distributions

Saqib Nizam Shamsi
Aspiring Minds
shamsi.saqib@gmail.com

Bhanu Pratap Singh
Univeristy of Massachusetts, Amherst
bhanupratap.mnit@gmail.com

Manya Wadhwa
Johns Hopkins University
mwadhwa1@jhu.edu

8
1
0
2
 
r
a

M
 
2
1
 
 
]

V
C
.
s
c
[
 
 
2
v
6
1
2
1
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

We describe our approach towards building an efﬁcient
predictive model to detect emotions for a group of people in
an image. We have proposed that training a Convolutional
Neural Network (CNN) model on the emotion heatmaps ex-
tracted from the image, outperforms a CNN model trained
entirely on the raw images. The comparison of the mod-
els have been done on a recently published dataset of Emo-
tion Recognition in the Wild (EmotiW) challenge, 2017. The
proposed method 1 achieved validation accuracy of 55.23%
which is 2.44% above the baseline accuracy, provided by
the EmotiW organizers.

1. Introduction

Emotion categorization of a face has always been an in-
teresting problem and researchers have developed various
approaches to solve this problem effectively. Categorizing
the emotion of an image which contains multiple people
has also gained attention [6]. The images are of real-life
scenarios such as an image of a protest or of children play-
ing in a park or some friends sitting and having a discus-
sion. The problem becomes more difﬁcult than emotion
categorization of a facial image because one needs to ad-
dress multiple sub-problems. For instance, the backgrounds
of images might be starkly different from each other, the
faces of the people may be occluded or they might not be
facing the camera. Single-faced images are usually front-
facing images in which faces are easier to crop out from the
original image [9]. With more pictures being posted every
day on social media sites such as Instagram and Facebook,
this problem has interesting applications such as analyzing
the emotion of a group of people attending an event which
could prove helpful in tagging the pictures automatically.

In this paper, we discuss our approach for predicting the
emotion of a group of people in an image. The goal is to
build a model which could classify the emotion of a group
of people in an image into one of the three classes: positive,

1Code

is
approach
https://github.com/saqibns/cv-aal-2018

experiments

and

the

for

available

at:

negative and neutral. The dataset, also known as Group Af-
fect Database 2.0 [8], contains images from different social
events in all the three classes such as convocations, mar-
riages, meetings and funerals. The dataset was a part of a
challenge, which included different sub-problems from pre-
vious challenges. Like the 4th EmotiW challenge, where the
goal was to predict the happiness index of a group image,
this challenge dealt with group images. It was also similar
to the 3rd EmotiW challenge, where the goal was to predict
the emotion of a single face in an image. The difference
was that there were seven categories of emotions in the 3rd
EmotiW challenge. In this challenge there was a group of
people in an image and the emotion of the image was to be
classiﬁed into one of the three classes: Positive, Netural and
Negative.

Researchers have used many interesting approaches for
this problem, such as in [24], the researchers had tried a di-
mensional approach where facial expressions were treated
as a regression problem in the Arousal-Valence space. In
[17], a two-stage ﬁne-tuning was applied on deep CNN
while doing transfer learning. In [23], multiple deep net-
work training layers are utilized for emotion prediction for
the 3rd EmotiW challenge. It is interesting to see that all
the three winners of the 3rd EmotiW challenge utilized deep
learning networks in their techniques [23][17][12]. This in-
dicated that deep networks could be helpful for the dataset
of the 5th challenge as well. The main difference was in the
aggregation of emotions of multiple people from the image
to predict the mood/expression of the image in general.

In this paper, we use a bottom-up [1] approach for
emotion detection. We perform face level emotion detec-
tion. We then experiment with average estimations (section
4.1.1) but as discussed in [4], which is also mentioned in
[21], averaging is not a reliable measure to predict group
level emotion. We also train random forests (section 4.1.2)
but the performance leaves much to be desired. Next, we
use the face level detections and combine individual im-
ages by constructing heatmaps for emotion intensity. We
then train Convolutional Neural Networks on the heatmaps
(section 4.2). As mentioned in [8], large size of faces with
smiles play a role in determination of affect of a group. For

example, a face closer to the camera, thus having a bigger
size, would have more contribution towards the overall af-
fect of the image as compared to the one that is farther away
and is thus smaller. To that end, we create heatmaps which
are normalized by the distance to the center of the image and
use them to train CNNs (section 4.2.3). Finally, we demon-
strate that training CNNs on heatmaps gives better results
than training them on raw images (section 4.3).

2. Dataset

The group emotion recognition dataset [7] was provided
as a part of 5th EmotiW challenge [6]. The dataset was di-
vided into three parts: train, validation and test. However,
we use only the training and validation sets for the current
work. This is because the test set is unlabeled and was to
be used to judge submissions of the challenge. Since it was
unlabeled we could not use it to judge the performance of
our models.

Each set consists of three type of group images: images
with positive emotion such as of marriages and party, neu-
tral images such as of meetings and images with negative
emotion such as of protests and funerals. The distribution
of images in each of the sets is presented in table 1.

For training the networks, we divide the training set into
two parts out of which one is used for training the network
and the other is used as a hold-out set for model selection.
We use stratiﬁed sampling and pick 10% of the images from
the training set to create the hold-out set. We train mod-
els for 100 epochs and ﬁnally pick the one which performs
the best on the held out set. Finally, we see how various
models perform against the baseline of 52.79% [5] on the
validation set, provided by the challenge organizers. The
baseline was obtained by training a Support Vector Regres-
sion model with a non-linear Chi-square kernel on CENsus
TRansform hISTogram (CENTRIST) descriptor [22].

Emotion
Train
Validation

Positive Neutral Negative Total
3630
2065

1159
564

1272
773

1199
728

Table 1. 5th EmotiW Challenge Dataset

3. Pipeline

3.1. Face Detection and Cropping

In order to predict the emotion of an image, we need to
detect the emotion of each face in the image. The emotions
of individual faces in the image would aid us in predicting
the ﬁnal emotion of the image. We used a popular C++
toolkit, Dlib [13] for this purpose. Dlib toolkit contains pre-
trained models for face detection in an image. It provides
the coordinates of a rectangular frame that ﬁts the face. The
frame coordinates are then used to crop faces from images.

Figure 1. Image Preprocessing Pipeline. From the image, faces are
extracted (second row). For every face, all the three categories of
emotion are estimated. Gaussain kernels are centered on each face
(third, fourth and ﬁfth rows). The kernels for the three categories
are stacked to form an RGB image (sixth row) with the distribution
for Negative emotion forming the red channel (ﬁfth row) and the
distributions for Neutral and Positive emotions forming the green
and the blue channels respectively (fourth and third rows). The
middle image (sixth row) has a different color than the other two,
since the intensities of emotions predicted for the middle face dif-
fer from the other two. Note, that the third heatmap (rightmost) in
the sixth row is slightly bigger than the other two, since the face
in the image is larger. Finally, the RGB images obtained for each
face are added to get a combined heatmap (last row).

An example of face detection in an image via Dlib has been
shown in Fig 1

3.2. Emotion Detection For Individual Faces

3.3.2 Creation of Heatmap

The second step towards solving the problem is to detect
emotion of every face detected in section 3.1 above. Detec-
tion of emotion of a face is an open problem. To get the
predictions for every face, we use a pre-trained model by
Levi and Hassner [16]. The advantage of using this model
is that it is trained on Faces In The Wild dataset [11] so
it incorporates faces in different angles, tones, lighting con-
ditions, partially occluded faces etc. It is an ensemble of
ﬁve models. The models are VGG [20] networks which
have been trained on Local Binary Patterns [18] [19]. For
a given face, the ﬁve models give scores for the seven stan-
dard emotions, Anger, Disgust, Fear, Happy, Neutral, Sad
and Surprise. The resulting scores for the seven emotions
are obtained by averaging the predictions of all models. We
then use the values of Happy for Positive class, Neutral for
Neutral class and an average of Anger, Disgust, Fear and
Sad for the Negative class. The value for Surprise predicted
by the model was not used since it was difﬁcult to determine
which category it should belong to owing to its ambiguous
nature.

3.3. Inferring Group Emotions

Now we arrive at the core problem of this challenge,
which is to infer group emotion. We combine the predic-
tions obtained for individual faces, as obtained in section
3.2 to make predictions for the group of people in the image.
For this we use the concept of heatmaps which is described
in sections 3.3.1 and 3.3.2.

3.3.1 Interpolation

For the predicted value of emotion of each face in an image,
we construct its corresponding emotion heatmaps. We have
used linear distribution and bivariate Gaussian distribution
to create the heatmaps in our experiments. Each distribution
is created using the value of the emotion predicted in sec-
tion 3.2 as the value at center. For the bivariate Gaussian,
the radius of the face (approximated by calculating half the
length of the diagonal of the frame of the face, obtained
in section 3.1) becomes the Full Width at Half Maximum
(FWHM). Each heatmap represents intensity of emotion for
a face distributed in a 2D Euclidean space. The distribution
is centered at the face. The size of the 2D space in which
the heatmap is generated is same as the size of the image.
This technique of representing emotions is useful as it al-
lows us to easily combine the values obtained in section 3.2
for multiple faces, and also perform distance based compu-
tations as discussed later in the experiments section.

The distributions for each of the detected face are then com-
bined to form one ﬁnal image.
It is done in three steps.
First, we create three matrices (corresponding to each emo-
tion) using the method described in the previous section for
each face. The second step is to form a combined spatial
distribution for each of the three classes. This is done by
stacking the heatmap matrix on top of one another. The
three heatmaps form the red, green and blue channels of an
RGB image. For our experiments we have arbitrarily cho-
sen the red channel for the negative emotion, green channel
for neutral emotion and blue channel for positive emotion.
The ﬁnal step is to add the RGB image tensors obtained for
each face to form a combined RGB image. The entire ﬂow
of generating a heatmap for an image has been illustrated in
Figure 1.

Figure 2. 3-ConvNN architecture

3.4. Training Convolutional Neural Networks on

Heatmaps

The size of the images in the EmotiW dataset varies con-
siderably. We ﬁrst pre-process the images into heatmaps,
as described in 3.3, and then resize the images into 256 ×
256 × 3 using Python Imaging Library (PIL), since we
train Convolutional Neural Networks (CNNs), which re-
quire an input of ﬁxed size. We also perform data aug-
mentation/oversampling on the generated heatmaps using
Keras’[3] image pre-processing to deal with dataset bias[2].
The augmentations done are random rotations with a range
of 40 degrees, random horizontal shifts in the range of 20%
of the total width, random vertical shifts in the range of 20%
of the total height, rescaling the pixel values by a factor of
0.01, using a shear intensity and zoom intensity of 0.2, ran-
dom horizontal ﬂips and using the ”nearest” ﬁll mode.

Next, we train two different Convolutional Neural Net-
works, the ﬁrst of which contains four layers, three of which
are convolutional layers and the fourth is a fully connected
layer, as depicted in Figure 2. We shall refer to it as 3-
ConvNN throughout the paper. The ﬁrst layer of the net-
work takes in images of dimensions 256×256×3. The ﬁrst
layer consists of 32 ﬁlters with a kernel size of 3 × 3 × 3. It

is followed by a max pooling layer of size 2 × 2 × 3. The
second convolution layer is the same as the ﬁrst one. The
third layer consists of 64 ﬁlters with a kernel size of 3×3×3
followed by a 2 × 2 × 3 max pooling layer. The output of
this layer is then ﬂattened and fed to a fully connected layer
of size 3. We also use dropout with a rate of 0.5. All the
layers in the network use Rectiﬁer Linear Unit (ReLU) ac-
tivation. We use Adam [14] for model optimization. The
network minimizes categorical cross entropy loss.

Figure 3. AlexNet Architecture.

The second network is AlextNet as described in [15].
It takes input with dimensions 227 × 227 × 3. The ﬁrst
convolutional layer contains 96 ﬁlters and a kernel size of
11 × 11 × 3 and a stride of 4 pixels. It is followed by a max
pooling layer of size 3 × 3 × 3 with a stride of 2 pixels. We
then perform batch normalization. Next is a sequence of a
zero padding layer of 1 pixel followed by a convolutional
layer of 384 ﬁlters and a kernel size of 3 × 3 × 3 and a stride
of 1 pixel. This sequence is repeated again and is followed
by a zero padding layer of size 1 and a convolutional layer
of 256 ﬁlters, a kernel size of 3 × 3 × 3 with a stride of 1
pixel. Next, is a max pooling layer of size 3 × 3 × 3 and
a stride of 2 pixels. The output of the max pooling layer
is ﬂattened and is fed to a dense layer of 4096 units. A
dropout with a rate of 0.5 is used next. A dense layer of
4096 units follows next with which is again followed by a
dropout with a rate of 0.5. The ﬁnal layer is a softmax layer
with 3 units. All the previous laye rs use ReLU activation.
The architecture has been illustrated in the Figure 3. The
model minimizes categorical cross entropy loss. We use
Stochatic Gradient Descent (SGD) for model optimization
with a learning rate of 0.01, momentum of 0.9 and a weight
decay of 5 × 10−4.

The entire approach has been illustrated in Fig 4

Figure 4. Pipeline of our approach

4.1. Using Face Level Predictions Directly

4.1.1 Averaging

It is one of the simplest approaches that can be used. We
take average of 7-dimensional vectors obtained for all the
faces in the image. The emotion with the highest mean
value is used as the overall prediction. Anger, Disgust, Fear,
Sadness and Surprise as categorised as Negative, Neutral
and Happy are categorised as Neutral and Positive respec-
tively. However, as discussed in [4], which is also men-
tioned in [21], averaging is not a reliable measure to predict
group level emotion. Upon averaging the face level predic-
tions, we obtained an accuracy of 44.37% on the training
set and an accuracy of 42.38% on the validation set.

4.1.2 Random Forest

We next trained a Random Forest classiﬁer (15 estimators)
using the averaged 7-dimensional vector obtained for an im-
age. Using Random Forest classiﬁer we achieved an ac-
curacy of 99.08% on the training set and an accuracy of
48.13% on the validation set.

4.2. Training Convolutional Neural Networks on

Heatmaps

In this subsection we discuss our experiments using the
generated heatmaps. Converting images into heatmaps (as
discussed in section 3.3) based on face level predictions
served two purposes. Firstly, it allowed the ConvNets to
focus on isolated face level information by removing the
additional information present in the image like the overall
scene information. Secondly, it allowed us to perform ex-
periments by considering face sizes and position of faces in
space as variables. As we shall see later, taking these factors
into account affects the predictions.

4. Experimental Analysis

4.2.1 Linear Distribution

We now describe a series of experiments performed us-
ing raw images as well as the predictions obtained for every
face by running the pre-trained model [16]. The experi-
ments in sections 4.1 and 4.2 were done to obtain the group
level prediction using predictions for individual faces.

We ﬁrst use a linear distribution to create heatmaps. The
function used is

I(x, y) =

(cid:40)

I0
d((x,y),(x0,y0))
I0

d (cid:54)= 0

d = 0

(1)

Where I(x, y) is the intensity at the point (x, y) in the
image, I0 is the maximum intensity, which is at the cen-
ter of the face under consideration. This intensity is ob-
tained by using the methodology as described in section 3.2.
)) is the distance function that calculates the
d((x, y), (x
city block distance between the points (x, y) and (x
).
More speciﬁcally,

, y

, y

(cid:48)

(cid:48)

(cid:48)

(cid:48)

d((x, y), (x(cid:48), y(cid:48))) = 0.1 × (|x − x(cid:48)| + |y − y(cid:48)|)

(2)

A distance scaling factor of 0.1 is used to make the in-
tensity decrease gradually with distance instead of an abrupt
decrease with distance.

Using the above function and the process is as described
in section 3.3 and depicted in Fig. 1, we create heatmaps. It
is to be noted that, by using a linear distribution, we discard
both the size of the faces and their position in space. We
train 3-ConvNN on these images.

4.2.2 Gaussian Distribution

Until now, the size of the face did not play a role in deter-
mining the group level emotion. However, as discussed in
[8], large size of faces with smiles play a role in determi-
nation of affect of a group. Keeping this in mind, we use
a bivariate Gaussian distribution to estimate the intensity of
emotion throughout the image. The function which is used
to calculate the intensity I at a point (x, y), is

I(x, y) = I0×exp(

−4 × ln(2) × 0.1 × [(x − x0)2 + (y − y0)2]
r

)

(3)
Where I0 is the intensity value obtained for a face,
(x0, y0) is the center of the face in the image and r is the ra-
dius of the face which is estimated by half the length of the
diagonal of the frame enclosing the face, obtained via face
detection. A scaling factor of 0.1 is again used, to make the
intensity decrease gradually in two dimensional Euclidean
space.

Using the heatmaps generated by using the above
methodology, we 3-ConvNN and AlexNet on the heatmaps.

I(x, y) = I0 ×

exp( −4×ln(2)×0.1×[(x−x0)2+(y−y0)2]
D((xf , yf ), (xc, yc))

r

)

(4)

Where D((xf , yf ), (xc, yc)) is the Euclidean distance
between the center of the face under consideration and the
center of the image, scaled by a factor of 0.01. (xf , yf ) are
the coordinates of the center of the face (estimated by the
center of the bounding box enclosing the face) in the image
and (xc, yc) are the coordinates of the center of the image.
Thus,

D((xf , yf ), (xc, yc)) = 0.01 ×

(xf − xc)2 + (yf − yc)2
(5)
We then train 3-ConvNN and AlexNet on heatmaps ob-

(cid:113)

tained via this method.

4.3. Training CNNs Directly on Images

We also trained the two CNNs described before in Sec-
tion 3.4 on raw images. 3-ConvNN gave a training accuracy
of 54.68% and a validation accuracy of 50.27%. AlexNet,
when directly trained on raw images gave us a training ac-
curacy of 49.57% and a validation accuracy of 44.98%.

Model

Baseline
Averaging
Random Forest
Linear Distrbution
Heatmaps (3-ConvNN)
Gaussian Heatmaps
(3-ConvNN)
Gaussian Heatmaps
(AlexNet)
Normalized Gaussians
(3-ConvNN)
Normalized Gaussians
(AlexNet)
Raw Images
(3-ConvNN)
Raw Images
(AlexNet)

Training
Accuracy
-
44.37%
99.08%

Validation
Accuracy
52.79%
42.38%
48.13%

35.59%

38.62%

56.73%

51.49%

57.81%

55.23%

56.89%

54.67%

54.51%

52.15%

54.68%

50.27%

49.57%

44.98%

Table 2. Performance of Different Models

4.2.3 Gaussians Normalized by Distance to Image

Center

We also investigate the effect of position of faces in the im-
age. In order to take position into account we divide the
intensity obtained at every point by using a Gaussian dis-
tribution by the distance of the center of the face from the
center of the image.

More speciﬁcally, the intensity at a point (x1, y1) is ob-

tained by the following relation:

5. Results and Discussion

Table 2 summarizes the results of various approaches we
used to predict group emotion. Averaging of face level pre-
dictions discards the information of face sizes and their rel-
ative positions in the image. Mean of face level predictions
discarding these context features and not working well is
also discussed in [4] and [21].

Random Forest classiﬁer (4.1.2) gave an accuracy of
99.08% on the training set and an accuracy of 48.13% on the
validation set. Though the Random Forest model performed
better than the previous approach. We were still behind the
baseline accuracy by 4.84%. The classiﬁer was able to cap-
ture complex interplay between various intensities of face
level predictions, but this approach, like the former ignores
face sizes and relative position of faces.

Using a linear distribution to create heatmaps (4.2.1) we
get an accuracy of 35.59% on the training set and 38.62%
on the validation set, when the heatmaps are trained on 3-
ConvNN. Heatmaps created using a Gaussian distribution
(4.2.2) takes the size of the face into consideration. When
using that to train 3-ConvNN, we obtain an accuracy of
56.73% on the training data and 51.49% on the validation
data. Training AlexNet on the same images gave an ac-
curacy of 57.81% and 55.23% on training and validation
datasets respectively.

When the heatmaps obtained by Gaussians normalized
by the distance from the center (4.2.3) are used to train 3-
ConvNN, we achieve an accuracy of 56.89% and 54.67%
respectively on training and validation sets. AlexNet gave
an accuracy of 54.51% and 52.15% respectively.
In this
method, both the faces and their positions from the center
of the image are considered.

Finally, we see that CNNs trained directly on images do

not perform as good as when trained on heatmaps.

6. Conclusion and Future Work

This paper presented a pipeline that was used to predict
the overall emotion of a group of people in an image for
EmotiW 2017 challenge dataset. Ours is a bottom-up ap-
proach. We create heatmaps using face-level predictions
and train ConvNets on them. We demonstrate that training
the CNNs on heatmaps performs better than training them
directly on raw images. We also investigate the effects of
face size and their position in the image and see that their
position does have an impact on the overall affect. Our best
model achieves a validation accuracy of 55.23% which is
2.44% above the baseline.

Our future work includes different combination methods
for heatmaps like the use of manifolds [10].
In addition
to that, We also intend to investigate the effect of relative
distances between faces in groups.

7. Acknowledgement

We thank Balaji Balasubramaniam, Abhishek Sainani
and the reviewers for their valuable comments and feed-
back, which greatly improved our manuscript.

References

[1] S. Barsade and D. Gibson. Group emotion: A view from top

and bottom. 1:81–102, 01 1998.

[2] V. Campos, B. Jou, and X. Gir´o i Nieto. From pixels to
sentiment: Fine-tuning cnns for visual sentiment prediction.
CoRR, abs/1604.03489, 2016.

[3] F. Chollet et al.

Keras.
fchollet/keras, 2015.

https://github.com/

[4] A. Dhall, R. Goecke, and T. Gedeon. Automatic group hap-
piness intensity analysis. IEEE Trans. Affective Computing,
6(1):13–26, 2015.

[5] A. Dhall, R. Goecke, S. Ghosh, J. Joshi, J. Hoey, and
T. Gedeon. From individual to group-level emotion recog-
nition: Emotiw 5.0. In Proceedings of the 19th ACM Inter-
national Conference on Multimodal Interaction, ICMI 2017,
pages 524–528, New York, NY, USA, 2017. ACM.

[6] A. Dhall, R. Goecke, J. Joshi, J. Hoey, and T. Gedeon.
Emotiw 2016: Video and group-level emotion recognition
challenges. In Proceedings of the 18th ACM International
Conference on Multimodal Interaction, ICMI 2016, pages
427–432. ACM, 2016.

[7] A. Dhall, R. Goecke, S. Lucey, and T. Gedeon. Collect-
ing large, richly annotated facial-expression databases from
movies. IEEE MultiMedia, 19(3):34–41, July 2012.

[8] A. Dhall, J. Joshi, K. Sikka, R. Goecke, and N. Sebe. The
more the merrier: Analysing the affect of a group of peo-
ple in images. In 11th IEEE International Conference and
Workshops on Automatic Face and Gesture Recognition, FG
2015, Ljubljana, Slovenia, May 4-8, 2015, pages 1–8, 2015.
[9] I. J. Goodfellow, D. Erhan, P. L. Carrier, A. Courville,
M. Mirza, B. Hamner, W. Cukierski, Y. Tang, D. Thaler,
D.-H. Lee, Y. Zhou, C. Ramaiah, F. Feng, R. Li, X. Wang,
D. Athanasakis, J. Shawe-Taylor, M. Milakov, J. Park,
R. Ionescu, M. Popescu, C. Grozea, J. Bergstra, J. Xie,
L. Romaszko, B. Xu, Z. Chuang, and Y. Bengio. Chal-
lenges in Representation Learning: A Report on Three Ma-
chine Learning Contests, pages 117–124. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

[10] J. Hamm and D. D. Lee. Grassmann discriminant analysis:
A unifying view on subspace-based learning. In Proceedings
of the 25th International Conference on Machine Learning,
ICML ’08, pages 376–383, 2008.

[11] G. B. Huang, M. Ramesh, T. Berg, and E. Learned-Miller.
Labeled faces in the wild: A database for studying face
recognition in unconstrained environments. Technical re-
port, Technical Report 07-49, University of Massachusetts,
Amherst, 2007.

[12] B.-K. Kim, H. Lee, J. Roh, and S.-Y. Lee. Hierarchical com-
mittee of deep cnns with exponentially-weighted decision fu-
sion for static facial expression recognition. In Proceedings
of the 2015 ACM on International Conference on Multimodal
Interaction, pages 427–434. ACM, 2015.

[13] D. E. King. Dlib-ml: A machine learning toolkit. Journal of

Machine Learning Research, 10:1755–1758, 2009.

[14] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. CoRR, abs/1412.6980, 2014.

[15] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,
editors, Advances in Neural Information Processing Systems
25, pages 1097–1105. Curran Associates, Inc., 2012.
[16] G. Levi and T. Hassner. Emotion recognition in the wild via
convolutional neural networks and mapped binary patterns.
In Proc. ACM International Conference on Multimodal In-
teraction (ICMI), November 2015.

[17] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler. Deep
learning for emotion recognition on small datasets using
In Proceedings of the 2015 ACM on In-
transfer learning.
ternational Conference on Multimodal Interaction, Seattle,
WA, USA, November 09 - 13, 2015, pages 443–449, 2015.

[18] T. Ojala, M. Pietik¨ainen, and D. Harwood. A comparative
study of texture measures with classiﬁcation based on fea-
In Pattern Recognition, pages 51–59,
tured distributions.
1996.

[19] T. Ojala, M. Pietik¨ainen, and T. M¨aenp¨a¨a. A generalized
local binary pattern operator for multiresolution gray scale
and rotation invariant texture classiﬁcation. In International
Conference on Advances in Pattern Recognition, pages 399–
408, 2001.

[20] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[21] V. Vonikakis, Y. Yazici, V. Nguyen, and S. Winkler. Group
happiness assessment using geometric features and dataset
In Proceedings of the 18th ACM International
balancing.
Conference on Multimodal Interaction, ICMI 2016, Tokyo,
Japan, November 12-16, 2016, pages 479–486, 2016.
[22] J. Wu and J. M. Rehg. Centrist: A visual descriptor for scene
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 33(8):1489–1501, Aug 2011.

[23] Z. Yu and C. Zhang.

Image based static facial expression
In Pro-
recognition with multiple deep network learning.
ceedings of the 2015 ACM on International Conference on
Multimodal Interaction, ICMI ’15, pages 435–442. ACM,
2015.

[24] L. Zhang, D. Tjondronegoro, and V. Chandran. Represen-
tation of facial expression categories in continuous arousal–
Image and Vision
valence space: feature and correlation.
Computing, 32(12):1067–1079, 2014.

Group Affect Prediction Using Multimodal Distributions

Saqib Nizam Shamsi
Aspiring Minds
shamsi.saqib@gmail.com

Bhanu Pratap Singh
Univeristy of Massachusetts, Amherst
bhanupratap.mnit@gmail.com

Manya Wadhwa
Johns Hopkins University
mwadhwa1@jhu.edu

8
1
0
2
 
r
a

M
 
2
1
 
 
]

V
C
.
s
c
[
 
 
2
v
6
1
2
1
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

We describe our approach towards building an efﬁcient
predictive model to detect emotions for a group of people in
an image. We have proposed that training a Convolutional
Neural Network (CNN) model on the emotion heatmaps ex-
tracted from the image, outperforms a CNN model trained
entirely on the raw images. The comparison of the mod-
els have been done on a recently published dataset of Emo-
tion Recognition in the Wild (EmotiW) challenge, 2017. The
proposed method 1 achieved validation accuracy of 55.23%
which is 2.44% above the baseline accuracy, provided by
the EmotiW organizers.

1. Introduction

Emotion categorization of a face has always been an in-
teresting problem and researchers have developed various
approaches to solve this problem effectively. Categorizing
the emotion of an image which contains multiple people
has also gained attention [6]. The images are of real-life
scenarios such as an image of a protest or of children play-
ing in a park or some friends sitting and having a discus-
sion. The problem becomes more difﬁcult than emotion
categorization of a facial image because one needs to ad-
dress multiple sub-problems. For instance, the backgrounds
of images might be starkly different from each other, the
faces of the people may be occluded or they might not be
facing the camera. Single-faced images are usually front-
facing images in which faces are easier to crop out from the
original image [9]. With more pictures being posted every
day on social media sites such as Instagram and Facebook,
this problem has interesting applications such as analyzing
the emotion of a group of people attending an event which
could prove helpful in tagging the pictures automatically.

In this paper, we discuss our approach for predicting the
emotion of a group of people in an image. The goal is to
build a model which could classify the emotion of a group
of people in an image into one of the three classes: positive,

1Code

is
approach
https://github.com/saqibns/cv-aal-2018

experiments

and

the

for

available

at:

negative and neutral. The dataset, also known as Group Af-
fect Database 2.0 [8], contains images from different social
events in all the three classes such as convocations, mar-
riages, meetings and funerals. The dataset was a part of a
challenge, which included different sub-problems from pre-
vious challenges. Like the 4th EmotiW challenge, where the
goal was to predict the happiness index of a group image,
this challenge dealt with group images. It was also similar
to the 3rd EmotiW challenge, where the goal was to predict
the emotion of a single face in an image. The difference
was that there were seven categories of emotions in the 3rd
EmotiW challenge. In this challenge there was a group of
people in an image and the emotion of the image was to be
classiﬁed into one of the three classes: Positive, Netural and
Negative.

Researchers have used many interesting approaches for
this problem, such as in [24], the researchers had tried a di-
mensional approach where facial expressions were treated
as a regression problem in the Arousal-Valence space. In
[17], a two-stage ﬁne-tuning was applied on deep CNN
while doing transfer learning. In [23], multiple deep net-
work training layers are utilized for emotion prediction for
the 3rd EmotiW challenge. It is interesting to see that all
the three winners of the 3rd EmotiW challenge utilized deep
learning networks in their techniques [23][17][12]. This in-
dicated that deep networks could be helpful for the dataset
of the 5th challenge as well. The main difference was in the
aggregation of emotions of multiple people from the image
to predict the mood/expression of the image in general.

In this paper, we use a bottom-up [1] approach for
emotion detection. We perform face level emotion detec-
tion. We then experiment with average estimations (section
4.1.1) but as discussed in [4], which is also mentioned in
[21], averaging is not a reliable measure to predict group
level emotion. We also train random forests (section 4.1.2)
but the performance leaves much to be desired. Next, we
use the face level detections and combine individual im-
ages by constructing heatmaps for emotion intensity. We
then train Convolutional Neural Networks on the heatmaps
(section 4.2). As mentioned in [8], large size of faces with
smiles play a role in determination of affect of a group. For

example, a face closer to the camera, thus having a bigger
size, would have more contribution towards the overall af-
fect of the image as compared to the one that is farther away
and is thus smaller. To that end, we create heatmaps which
are normalized by the distance to the center of the image and
use them to train CNNs (section 4.2.3). Finally, we demon-
strate that training CNNs on heatmaps gives better results
than training them on raw images (section 4.3).

2. Dataset

The group emotion recognition dataset [7] was provided
as a part of 5th EmotiW challenge [6]. The dataset was di-
vided into three parts: train, validation and test. However,
we use only the training and validation sets for the current
work. This is because the test set is unlabeled and was to
be used to judge submissions of the challenge. Since it was
unlabeled we could not use it to judge the performance of
our models.

Each set consists of three type of group images: images
with positive emotion such as of marriages and party, neu-
tral images such as of meetings and images with negative
emotion such as of protests and funerals. The distribution
of images in each of the sets is presented in table 1.

For training the networks, we divide the training set into
two parts out of which one is used for training the network
and the other is used as a hold-out set for model selection.
We use stratiﬁed sampling and pick 10% of the images from
the training set to create the hold-out set. We train mod-
els for 100 epochs and ﬁnally pick the one which performs
the best on the held out set. Finally, we see how various
models perform against the baseline of 52.79% [5] on the
validation set, provided by the challenge organizers. The
baseline was obtained by training a Support Vector Regres-
sion model with a non-linear Chi-square kernel on CENsus
TRansform hISTogram (CENTRIST) descriptor [22].

Emotion
Train
Validation

Positive Neutral Negative Total
3630
2065

1159
564

1272
773

1199
728

Table 1. 5th EmotiW Challenge Dataset

3. Pipeline

3.1. Face Detection and Cropping

In order to predict the emotion of an image, we need to
detect the emotion of each face in the image. The emotions
of individual faces in the image would aid us in predicting
the ﬁnal emotion of the image. We used a popular C++
toolkit, Dlib [13] for this purpose. Dlib toolkit contains pre-
trained models for face detection in an image. It provides
the coordinates of a rectangular frame that ﬁts the face. The
frame coordinates are then used to crop faces from images.

Figure 1. Image Preprocessing Pipeline. From the image, faces are
extracted (second row). For every face, all the three categories of
emotion are estimated. Gaussain kernels are centered on each face
(third, fourth and ﬁfth rows). The kernels for the three categories
are stacked to form an RGB image (sixth row) with the distribution
for Negative emotion forming the red channel (ﬁfth row) and the
distributions for Neutral and Positive emotions forming the green
and the blue channels respectively (fourth and third rows). The
middle image (sixth row) has a different color than the other two,
since the intensities of emotions predicted for the middle face dif-
fer from the other two. Note, that the third heatmap (rightmost) in
the sixth row is slightly bigger than the other two, since the face
in the image is larger. Finally, the RGB images obtained for each
face are added to get a combined heatmap (last row).

An example of face detection in an image via Dlib has been
shown in Fig 1

3.2. Emotion Detection For Individual Faces

3.3.2 Creation of Heatmap

The second step towards solving the problem is to detect
emotion of every face detected in section 3.1 above. Detec-
tion of emotion of a face is an open problem. To get the
predictions for every face, we use a pre-trained model by
Levi and Hassner [16]. The advantage of using this model
is that it is trained on Faces In The Wild dataset [11] so
it incorporates faces in different angles, tones, lighting con-
ditions, partially occluded faces etc. It is an ensemble of
ﬁve models. The models are VGG [20] networks which
have been trained on Local Binary Patterns [18] [19]. For
a given face, the ﬁve models give scores for the seven stan-
dard emotions, Anger, Disgust, Fear, Happy, Neutral, Sad
and Surprise. The resulting scores for the seven emotions
are obtained by averaging the predictions of all models. We
then use the values of Happy for Positive class, Neutral for
Neutral class and an average of Anger, Disgust, Fear and
Sad for the Negative class. The value for Surprise predicted
by the model was not used since it was difﬁcult to determine
which category it should belong to owing to its ambiguous
nature.

3.3. Inferring Group Emotions

Now we arrive at the core problem of this challenge,
which is to infer group emotion. We combine the predic-
tions obtained for individual faces, as obtained in section
3.2 to make predictions for the group of people in the image.
For this we use the concept of heatmaps which is described
in sections 3.3.1 and 3.3.2.

3.3.1 Interpolation

For the predicted value of emotion of each face in an image,
we construct its corresponding emotion heatmaps. We have
used linear distribution and bivariate Gaussian distribution
to create the heatmaps in our experiments. Each distribution
is created using the value of the emotion predicted in sec-
tion 3.2 as the value at center. For the bivariate Gaussian,
the radius of the face (approximated by calculating half the
length of the diagonal of the frame of the face, obtained
in section 3.1) becomes the Full Width at Half Maximum
(FWHM). Each heatmap represents intensity of emotion for
a face distributed in a 2D Euclidean space. The distribution
is centered at the face. The size of the 2D space in which
the heatmap is generated is same as the size of the image.
This technique of representing emotions is useful as it al-
lows us to easily combine the values obtained in section 3.2
for multiple faces, and also perform distance based compu-
tations as discussed later in the experiments section.

The distributions for each of the detected face are then com-
bined to form one ﬁnal image.
It is done in three steps.
First, we create three matrices (corresponding to each emo-
tion) using the method described in the previous section for
each face. The second step is to form a combined spatial
distribution for each of the three classes. This is done by
stacking the heatmap matrix on top of one another. The
three heatmaps form the red, green and blue channels of an
RGB image. For our experiments we have arbitrarily cho-
sen the red channel for the negative emotion, green channel
for neutral emotion and blue channel for positive emotion.
The ﬁnal step is to add the RGB image tensors obtained for
each face to form a combined RGB image. The entire ﬂow
of generating a heatmap for an image has been illustrated in
Figure 1.

Figure 2. 3-ConvNN architecture

3.4. Training Convolutional Neural Networks on

Heatmaps

The size of the images in the EmotiW dataset varies con-
siderably. We ﬁrst pre-process the images into heatmaps,
as described in 3.3, and then resize the images into 256 ×
256 × 3 using Python Imaging Library (PIL), since we
train Convolutional Neural Networks (CNNs), which re-
quire an input of ﬁxed size. We also perform data aug-
mentation/oversampling on the generated heatmaps using
Keras’[3] image pre-processing to deal with dataset bias[2].
The augmentations done are random rotations with a range
of 40 degrees, random horizontal shifts in the range of 20%
of the total width, random vertical shifts in the range of 20%
of the total height, rescaling the pixel values by a factor of
0.01, using a shear intensity and zoom intensity of 0.2, ran-
dom horizontal ﬂips and using the ”nearest” ﬁll mode.

Next, we train two different Convolutional Neural Net-
works, the ﬁrst of which contains four layers, three of which
are convolutional layers and the fourth is a fully connected
layer, as depicted in Figure 2. We shall refer to it as 3-
ConvNN throughout the paper. The ﬁrst layer of the net-
work takes in images of dimensions 256×256×3. The ﬁrst
layer consists of 32 ﬁlters with a kernel size of 3 × 3 × 3. It

is followed by a max pooling layer of size 2 × 2 × 3. The
second convolution layer is the same as the ﬁrst one. The
third layer consists of 64 ﬁlters with a kernel size of 3×3×3
followed by a 2 × 2 × 3 max pooling layer. The output of
this layer is then ﬂattened and fed to a fully connected layer
of size 3. We also use dropout with a rate of 0.5. All the
layers in the network use Rectiﬁer Linear Unit (ReLU) ac-
tivation. We use Adam [14] for model optimization. The
network minimizes categorical cross entropy loss.

Figure 3. AlexNet Architecture.

The second network is AlextNet as described in [15].
It takes input with dimensions 227 × 227 × 3. The ﬁrst
convolutional layer contains 96 ﬁlters and a kernel size of
11 × 11 × 3 and a stride of 4 pixels. It is followed by a max
pooling layer of size 3 × 3 × 3 with a stride of 2 pixels. We
then perform batch normalization. Next is a sequence of a
zero padding layer of 1 pixel followed by a convolutional
layer of 384 ﬁlters and a kernel size of 3 × 3 × 3 and a stride
of 1 pixel. This sequence is repeated again and is followed
by a zero padding layer of size 1 and a convolutional layer
of 256 ﬁlters, a kernel size of 3 × 3 × 3 with a stride of 1
pixel. Next, is a max pooling layer of size 3 × 3 × 3 and
a stride of 2 pixels. The output of the max pooling layer
is ﬂattened and is fed to a dense layer of 4096 units. A
dropout with a rate of 0.5 is used next. A dense layer of
4096 units follows next with which is again followed by a
dropout with a rate of 0.5. The ﬁnal layer is a softmax layer
with 3 units. All the previous laye rs use ReLU activation.
The architecture has been illustrated in the Figure 3. The
model minimizes categorical cross entropy loss. We use
Stochatic Gradient Descent (SGD) for model optimization
with a learning rate of 0.01, momentum of 0.9 and a weight
decay of 5 × 10−4.

The entire approach has been illustrated in Fig 4

Figure 4. Pipeline of our approach

4.1. Using Face Level Predictions Directly

4.1.1 Averaging

It is one of the simplest approaches that can be used. We
take average of 7-dimensional vectors obtained for all the
faces in the image. The emotion with the highest mean
value is used as the overall prediction. Anger, Disgust, Fear,
Sadness and Surprise as categorised as Negative, Neutral
and Happy are categorised as Neutral and Positive respec-
tively. However, as discussed in [4], which is also men-
tioned in [21], averaging is not a reliable measure to predict
group level emotion. Upon averaging the face level predic-
tions, we obtained an accuracy of 44.37% on the training
set and an accuracy of 42.38% on the validation set.

4.1.2 Random Forest

We next trained a Random Forest classiﬁer (15 estimators)
using the averaged 7-dimensional vector obtained for an im-
age. Using Random Forest classiﬁer we achieved an ac-
curacy of 99.08% on the training set and an accuracy of
48.13% on the validation set.

4.2. Training Convolutional Neural Networks on

Heatmaps

In this subsection we discuss our experiments using the
generated heatmaps. Converting images into heatmaps (as
discussed in section 3.3) based on face level predictions
served two purposes. Firstly, it allowed the ConvNets to
focus on isolated face level information by removing the
additional information present in the image like the overall
scene information. Secondly, it allowed us to perform ex-
periments by considering face sizes and position of faces in
space as variables. As we shall see later, taking these factors
into account affects the predictions.

4. Experimental Analysis

4.2.1 Linear Distribution

We now describe a series of experiments performed us-
ing raw images as well as the predictions obtained for every
face by running the pre-trained model [16]. The experi-
ments in sections 4.1 and 4.2 were done to obtain the group
level prediction using predictions for individual faces.

We ﬁrst use a linear distribution to create heatmaps. The
function used is

I(x, y) =

(cid:40)

I0
d((x,y),(x0,y0))
I0

d (cid:54)= 0

d = 0

(1)

Where I(x, y) is the intensity at the point (x, y) in the
image, I0 is the maximum intensity, which is at the cen-
ter of the face under consideration. This intensity is ob-
tained by using the methodology as described in section 3.2.
)) is the distance function that calculates the
d((x, y), (x
city block distance between the points (x, y) and (x
).
More speciﬁcally,

, y

, y

(cid:48)

(cid:48)

(cid:48)

(cid:48)

d((x, y), (x(cid:48), y(cid:48))) = 0.1 × (|x − x(cid:48)| + |y − y(cid:48)|)

(2)

A distance scaling factor of 0.1 is used to make the in-
tensity decrease gradually with distance instead of an abrupt
decrease with distance.

Using the above function and the process is as described
in section 3.3 and depicted in Fig. 1, we create heatmaps. It
is to be noted that, by using a linear distribution, we discard
both the size of the faces and their position in space. We
train 3-ConvNN on these images.

4.2.2 Gaussian Distribution

Until now, the size of the face did not play a role in deter-
mining the group level emotion. However, as discussed in
[8], large size of faces with smiles play a role in determi-
nation of affect of a group. Keeping this in mind, we use
a bivariate Gaussian distribution to estimate the intensity of
emotion throughout the image. The function which is used
to calculate the intensity I at a point (x, y), is

I(x, y) = I0×exp(

−4 × ln(2) × 0.1 × [(x − x0)2 + (y − y0)2]
r

)

(3)
Where I0 is the intensity value obtained for a face,
(x0, y0) is the center of the face in the image and r is the ra-
dius of the face which is estimated by half the length of the
diagonal of the frame enclosing the face, obtained via face
detection. A scaling factor of 0.1 is again used, to make the
intensity decrease gradually in two dimensional Euclidean
space.

Using the heatmaps generated by using the above
methodology, we 3-ConvNN and AlexNet on the heatmaps.

I(x, y) = I0 ×

exp( −4×ln(2)×0.1×[(x−x0)2+(y−y0)2]
D((xf , yf ), (xc, yc))

r

)

(4)

Where D((xf , yf ), (xc, yc)) is the Euclidean distance
between the center of the face under consideration and the
center of the image, scaled by a factor of 0.01. (xf , yf ) are
the coordinates of the center of the face (estimated by the
center of the bounding box enclosing the face) in the image
and (xc, yc) are the coordinates of the center of the image.
Thus,

D((xf , yf ), (xc, yc)) = 0.01 ×

(xf − xc)2 + (yf − yc)2
(5)
We then train 3-ConvNN and AlexNet on heatmaps ob-

(cid:113)

tained via this method.

4.3. Training CNNs Directly on Images

We also trained the two CNNs described before in Sec-
tion 3.4 on raw images. 3-ConvNN gave a training accuracy
of 54.68% and a validation accuracy of 50.27%. AlexNet,
when directly trained on raw images gave us a training ac-
curacy of 49.57% and a validation accuracy of 44.98%.

Model

Baseline
Averaging
Random Forest
Linear Distrbution
Heatmaps (3-ConvNN)
Gaussian Heatmaps
(3-ConvNN)
Gaussian Heatmaps
(AlexNet)
Normalized Gaussians
(3-ConvNN)
Normalized Gaussians
(AlexNet)
Raw Images
(3-ConvNN)
Raw Images
(AlexNet)

Training
Accuracy
-
44.37%
99.08%

Validation
Accuracy
52.79%
42.38%
48.13%

35.59%

38.62%

56.73%

51.49%

57.81%

55.23%

56.89%

54.67%

54.51%

52.15%

54.68%

50.27%

49.57%

44.98%

Table 2. Performance of Different Models

4.2.3 Gaussians Normalized by Distance to Image

Center

We also investigate the effect of position of faces in the im-
age. In order to take position into account we divide the
intensity obtained at every point by using a Gaussian dis-
tribution by the distance of the center of the face from the
center of the image.

More speciﬁcally, the intensity at a point (x1, y1) is ob-

tained by the following relation:

5. Results and Discussion

Table 2 summarizes the results of various approaches we
used to predict group emotion. Averaging of face level pre-
dictions discards the information of face sizes and their rel-
ative positions in the image. Mean of face level predictions
discarding these context features and not working well is
also discussed in [4] and [21].

Random Forest classiﬁer (4.1.2) gave an accuracy of
99.08% on the training set and an accuracy of 48.13% on the
validation set. Though the Random Forest model performed
better than the previous approach. We were still behind the
baseline accuracy by 4.84%. The classiﬁer was able to cap-
ture complex interplay between various intensities of face
level predictions, but this approach, like the former ignores
face sizes and relative position of faces.

Using a linear distribution to create heatmaps (4.2.1) we
get an accuracy of 35.59% on the training set and 38.62%
on the validation set, when the heatmaps are trained on 3-
ConvNN. Heatmaps created using a Gaussian distribution
(4.2.2) takes the size of the face into consideration. When
using that to train 3-ConvNN, we obtain an accuracy of
56.73% on the training data and 51.49% on the validation
data. Training AlexNet on the same images gave an ac-
curacy of 57.81% and 55.23% on training and validation
datasets respectively.

When the heatmaps obtained by Gaussians normalized
by the distance from the center (4.2.3) are used to train 3-
ConvNN, we achieve an accuracy of 56.89% and 54.67%
respectively on training and validation sets. AlexNet gave
an accuracy of 54.51% and 52.15% respectively.
In this
method, both the faces and their positions from the center
of the image are considered.

Finally, we see that CNNs trained directly on images do

not perform as good as when trained on heatmaps.

6. Conclusion and Future Work

This paper presented a pipeline that was used to predict
the overall emotion of a group of people in an image for
EmotiW 2017 challenge dataset. Ours is a bottom-up ap-
proach. We create heatmaps using face-level predictions
and train ConvNets on them. We demonstrate that training
the CNNs on heatmaps performs better than training them
directly on raw images. We also investigate the effects of
face size and their position in the image and see that their
position does have an impact on the overall affect. Our best
model achieves a validation accuracy of 55.23% which is
2.44% above the baseline.

Our future work includes different combination methods
for heatmaps like the use of manifolds [10].
In addition
to that, We also intend to investigate the effect of relative
distances between faces in groups.

7. Acknowledgement

We thank Balaji Balasubramaniam, Abhishek Sainani
and the reviewers for their valuable comments and feed-
back, which greatly improved our manuscript.

References

[1] S. Barsade and D. Gibson. Group emotion: A view from top

and bottom. 1:81–102, 01 1998.

[2] V. Campos, B. Jou, and X. Gir´o i Nieto. From pixels to
sentiment: Fine-tuning cnns for visual sentiment prediction.
CoRR, abs/1604.03489, 2016.

[3] F. Chollet et al.

Keras.
fchollet/keras, 2015.

https://github.com/

[4] A. Dhall, R. Goecke, and T. Gedeon. Automatic group hap-
piness intensity analysis. IEEE Trans. Affective Computing,
6(1):13–26, 2015.

[5] A. Dhall, R. Goecke, S. Ghosh, J. Joshi, J. Hoey, and
T. Gedeon. From individual to group-level emotion recog-
nition: Emotiw 5.0. In Proceedings of the 19th ACM Inter-
national Conference on Multimodal Interaction, ICMI 2017,
pages 524–528, New York, NY, USA, 2017. ACM.

[6] A. Dhall, R. Goecke, J. Joshi, J. Hoey, and T. Gedeon.
Emotiw 2016: Video and group-level emotion recognition
challenges. In Proceedings of the 18th ACM International
Conference on Multimodal Interaction, ICMI 2016, pages
427–432. ACM, 2016.

[7] A. Dhall, R. Goecke, S. Lucey, and T. Gedeon. Collect-
ing large, richly annotated facial-expression databases from
movies. IEEE MultiMedia, 19(3):34–41, July 2012.

[8] A. Dhall, J. Joshi, K. Sikka, R. Goecke, and N. Sebe. The
more the merrier: Analysing the affect of a group of peo-
ple in images. In 11th IEEE International Conference and
Workshops on Automatic Face and Gesture Recognition, FG
2015, Ljubljana, Slovenia, May 4-8, 2015, pages 1–8, 2015.
[9] I. J. Goodfellow, D. Erhan, P. L. Carrier, A. Courville,
M. Mirza, B. Hamner, W. Cukierski, Y. Tang, D. Thaler,
D.-H. Lee, Y. Zhou, C. Ramaiah, F. Feng, R. Li, X. Wang,
D. Athanasakis, J. Shawe-Taylor, M. Milakov, J. Park,
R. Ionescu, M. Popescu, C. Grozea, J. Bergstra, J. Xie,
L. Romaszko, B. Xu, Z. Chuang, and Y. Bengio. Chal-
lenges in Representation Learning: A Report on Three Ma-
chine Learning Contests, pages 117–124. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

[10] J. Hamm and D. D. Lee. Grassmann discriminant analysis:
A unifying view on subspace-based learning. In Proceedings
of the 25th International Conference on Machine Learning,
ICML ’08, pages 376–383, 2008.

[11] G. B. Huang, M. Ramesh, T. Berg, and E. Learned-Miller.
Labeled faces in the wild: A database for studying face
recognition in unconstrained environments. Technical re-
port, Technical Report 07-49, University of Massachusetts,
Amherst, 2007.

[12] B.-K. Kim, H. Lee, J. Roh, and S.-Y. Lee. Hierarchical com-
mittee of deep cnns with exponentially-weighted decision fu-
sion for static facial expression recognition. In Proceedings
of the 2015 ACM on International Conference on Multimodal
Interaction, pages 427–434. ACM, 2015.

[13] D. E. King. Dlib-ml: A machine learning toolkit. Journal of

Machine Learning Research, 10:1755–1758, 2009.

[14] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. CoRR, abs/1412.6980, 2014.

[15] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,
editors, Advances in Neural Information Processing Systems
25, pages 1097–1105. Curran Associates, Inc., 2012.
[16] G. Levi and T. Hassner. Emotion recognition in the wild via
convolutional neural networks and mapped binary patterns.
In Proc. ACM International Conference on Multimodal In-
teraction (ICMI), November 2015.

[17] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler. Deep
learning for emotion recognition on small datasets using
In Proceedings of the 2015 ACM on In-
transfer learning.
ternational Conference on Multimodal Interaction, Seattle,
WA, USA, November 09 - 13, 2015, pages 443–449, 2015.

[18] T. Ojala, M. Pietik¨ainen, and D. Harwood. A comparative
study of texture measures with classiﬁcation based on fea-
In Pattern Recognition, pages 51–59,
tured distributions.
1996.

[19] T. Ojala, M. Pietik¨ainen, and T. M¨aenp¨a¨a. A generalized
local binary pattern operator for multiresolution gray scale
and rotation invariant texture classiﬁcation. In International
Conference on Advances in Pattern Recognition, pages 399–
408, 2001.

[20] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[21] V. Vonikakis, Y. Yazici, V. Nguyen, and S. Winkler. Group
happiness assessment using geometric features and dataset
In Proceedings of the 18th ACM International
balancing.
Conference on Multimodal Interaction, ICMI 2016, Tokyo,
Japan, November 12-16, 2016, pages 479–486, 2016.
[22] J. Wu and J. M. Rehg. Centrist: A visual descriptor for scene
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 33(8):1489–1501, Aug 2011.

[23] Z. Yu and C. Zhang.

Image based static facial expression
In Pro-
recognition with multiple deep network learning.
ceedings of the 2015 ACM on International Conference on
Multimodal Interaction, ICMI ’15, pages 435–442. ACM,
2015.

[24] L. Zhang, D. Tjondronegoro, and V. Chandran. Represen-
tation of facial expression categories in continuous arousal–
Image and Vision
valence space: feature and correlation.
Computing, 32(12):1067–1079, 2014.

Group Affect Prediction Using Multimodal Distributions

Saqib Nizam Shamsi
Aspiring Minds
shamsi.saqib@gmail.com

Bhanu Pratap Singh
Univeristy of Massachusetts, Amherst
bhanupratap.mnit@gmail.com

Manya Wadhwa
Johns Hopkins University
mwadhwa1@jhu.edu

8
1
0
2
 
r
a

M
 
2
1
 
 
]

V
C
.
s
c
[
 
 
2
v
6
1
2
1
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

We describe our approach towards building an efﬁcient
predictive model to detect emotions for a group of people in
an image. We have proposed that training a Convolutional
Neural Network (CNN) model on the emotion heatmaps ex-
tracted from the image, outperforms a CNN model trained
entirely on the raw images. The comparison of the mod-
els have been done on a recently published dataset of Emo-
tion Recognition in the Wild (EmotiW) challenge, 2017. The
proposed method 1 achieved validation accuracy of 55.23%
which is 2.44% above the baseline accuracy, provided by
the EmotiW organizers.

1. Introduction

Emotion categorization of a face has always been an in-
teresting problem and researchers have developed various
approaches to solve this problem effectively. Categorizing
the emotion of an image which contains multiple people
has also gained attention [6]. The images are of real-life
scenarios such as an image of a protest or of children play-
ing in a park or some friends sitting and having a discus-
sion. The problem becomes more difﬁcult than emotion
categorization of a facial image because one needs to ad-
dress multiple sub-problems. For instance, the backgrounds
of images might be starkly different from each other, the
faces of the people may be occluded or they might not be
facing the camera. Single-faced images are usually front-
facing images in which faces are easier to crop out from the
original image [9]. With more pictures being posted every
day on social media sites such as Instagram and Facebook,
this problem has interesting applications such as analyzing
the emotion of a group of people attending an event which
could prove helpful in tagging the pictures automatically.

In this paper, we discuss our approach for predicting the
emotion of a group of people in an image. The goal is to
build a model which could classify the emotion of a group
of people in an image into one of the three classes: positive,

1Code

is
approach
https://github.com/saqibns/cv-aal-2018

experiments

and

the

for

available

at:

negative and neutral. The dataset, also known as Group Af-
fect Database 2.0 [8], contains images from different social
events in all the three classes such as convocations, mar-
riages, meetings and funerals. The dataset was a part of a
challenge, which included different sub-problems from pre-
vious challenges. Like the 4th EmotiW challenge, where the
goal was to predict the happiness index of a group image,
this challenge dealt with group images. It was also similar
to the 3rd EmotiW challenge, where the goal was to predict
the emotion of a single face in an image. The difference
was that there were seven categories of emotions in the 3rd
EmotiW challenge. In this challenge there was a group of
people in an image and the emotion of the image was to be
classiﬁed into one of the three classes: Positive, Netural and
Negative.

Researchers have used many interesting approaches for
this problem, such as in [24], the researchers had tried a di-
mensional approach where facial expressions were treated
as a regression problem in the Arousal-Valence space. In
[17], a two-stage ﬁne-tuning was applied on deep CNN
while doing transfer learning. In [23], multiple deep net-
work training layers are utilized for emotion prediction for
the 3rd EmotiW challenge. It is interesting to see that all
the three winners of the 3rd EmotiW challenge utilized deep
learning networks in their techniques [23][17][12]. This in-
dicated that deep networks could be helpful for the dataset
of the 5th challenge as well. The main difference was in the
aggregation of emotions of multiple people from the image
to predict the mood/expression of the image in general.

In this paper, we use a bottom-up [1] approach for
emotion detection. We perform face level emotion detec-
tion. We then experiment with average estimations (section
4.1.1) but as discussed in [4], which is also mentioned in
[21], averaging is not a reliable measure to predict group
level emotion. We also train random forests (section 4.1.2)
but the performance leaves much to be desired. Next, we
use the face level detections and combine individual im-
ages by constructing heatmaps for emotion intensity. We
then train Convolutional Neural Networks on the heatmaps
(section 4.2). As mentioned in [8], large size of faces with
smiles play a role in determination of affect of a group. For

example, a face closer to the camera, thus having a bigger
size, would have more contribution towards the overall af-
fect of the image as compared to the one that is farther away
and is thus smaller. To that end, we create heatmaps which
are normalized by the distance to the center of the image and
use them to train CNNs (section 4.2.3). Finally, we demon-
strate that training CNNs on heatmaps gives better results
than training them on raw images (section 4.3).

2. Dataset

The group emotion recognition dataset [7] was provided
as a part of 5th EmotiW challenge [6]. The dataset was di-
vided into three parts: train, validation and test. However,
we use only the training and validation sets for the current
work. This is because the test set is unlabeled and was to
be used to judge submissions of the challenge. Since it was
unlabeled we could not use it to judge the performance of
our models.

Each set consists of three type of group images: images
with positive emotion such as of marriages and party, neu-
tral images such as of meetings and images with negative
emotion such as of protests and funerals. The distribution
of images in each of the sets is presented in table 1.

For training the networks, we divide the training set into
two parts out of which one is used for training the network
and the other is used as a hold-out set for model selection.
We use stratiﬁed sampling and pick 10% of the images from
the training set to create the hold-out set. We train mod-
els for 100 epochs and ﬁnally pick the one which performs
the best on the held out set. Finally, we see how various
models perform against the baseline of 52.79% [5] on the
validation set, provided by the challenge organizers. The
baseline was obtained by training a Support Vector Regres-
sion model with a non-linear Chi-square kernel on CENsus
TRansform hISTogram (CENTRIST) descriptor [22].

Emotion
Train
Validation

Positive Neutral Negative Total
3630
2065

1272
773

1159
564

1199
728

Table 1. 5th EmotiW Challenge Dataset

3. Pipeline

3.1. Face Detection and Cropping

In order to predict the emotion of an image, we need to
detect the emotion of each face in the image. The emotions
of individual faces in the image would aid us in predicting
the ﬁnal emotion of the image. We used a popular C++
toolkit, Dlib [13] for this purpose. Dlib toolkit contains pre-
trained models for face detection in an image. It provides
the coordinates of a rectangular frame that ﬁts the face. The
frame coordinates are then used to crop faces from images.

Figure 1. Image Preprocessing Pipeline. From the image, faces are
extracted (second row). For every face, all the three categories of
emotion are estimated. Gaussain kernels are centered on each face
(third, fourth and ﬁfth rows). The kernels for the three categories
are stacked to form an RGB image (sixth row) with the distribution
for Negative emotion forming the red channel (ﬁfth row) and the
distributions for Neutral and Positive emotions forming the green
and the blue channels respectively (fourth and third rows). The
middle image (sixth row) has a different color than the other two,
since the intensities of emotions predicted for the middle face dif-
fer from the other two. Note, that the third heatmap (rightmost) in
the sixth row is slightly bigger than the other two, since the face
in the image is larger. Finally, the RGB images obtained for each
face are added to get a combined heatmap (last row).

An example of face detection in an image via Dlib has been
shown in Fig 1

3.2. Emotion Detection For Individual Faces

3.3.2 Creation of Heatmap

The second step towards solving the problem is to detect
emotion of every face detected in section 3.1 above. Detec-
tion of emotion of a face is an open problem. To get the
predictions for every face, we use a pre-trained model by
Levi and Hassner [16]. The advantage of using this model
is that it is trained on Faces In The Wild dataset [11] so
it incorporates faces in different angles, tones, lighting con-
ditions, partially occluded faces etc. It is an ensemble of
ﬁve models. The models are VGG [20] networks which
have been trained on Local Binary Patterns [18] [19]. For
a given face, the ﬁve models give scores for the seven stan-
dard emotions, Anger, Disgust, Fear, Happy, Neutral, Sad
and Surprise. The resulting scores for the seven emotions
are obtained by averaging the predictions of all models. We
then use the values of Happy for Positive class, Neutral for
Neutral class and an average of Anger, Disgust, Fear and
Sad for the Negative class. The value for Surprise predicted
by the model was not used since it was difﬁcult to determine
which category it should belong to owing to its ambiguous
nature.

3.3. Inferring Group Emotions

Now we arrive at the core problem of this challenge,
which is to infer group emotion. We combine the predic-
tions obtained for individual faces, as obtained in section
3.2 to make predictions for the group of people in the image.
For this we use the concept of heatmaps which is described
in sections 3.3.1 and 3.3.2.

3.3.1 Interpolation

For the predicted value of emotion of each face in an image,
we construct its corresponding emotion heatmaps. We have
used linear distribution and bivariate Gaussian distribution
to create the heatmaps in our experiments. Each distribution
is created using the value of the emotion predicted in sec-
tion 3.2 as the value at center. For the bivariate Gaussian,
the radius of the face (approximated by calculating half the
length of the diagonal of the frame of the face, obtained
in section 3.1) becomes the Full Width at Half Maximum
(FWHM). Each heatmap represents intensity of emotion for
a face distributed in a 2D Euclidean space. The distribution
is centered at the face. The size of the 2D space in which
the heatmap is generated is same as the size of the image.
This technique of representing emotions is useful as it al-
lows us to easily combine the values obtained in section 3.2
for multiple faces, and also perform distance based compu-
tations as discussed later in the experiments section.

The distributions for each of the detected face are then com-
bined to form one ﬁnal image.
It is done in three steps.
First, we create three matrices (corresponding to each emo-
tion) using the method described in the previous section for
each face. The second step is to form a combined spatial
distribution for each of the three classes. This is done by
stacking the heatmap matrix on top of one another. The
three heatmaps form the red, green and blue channels of an
RGB image. For our experiments we have arbitrarily cho-
sen the red channel for the negative emotion, green channel
for neutral emotion and blue channel for positive emotion.
The ﬁnal step is to add the RGB image tensors obtained for
each face to form a combined RGB image. The entire ﬂow
of generating a heatmap for an image has been illustrated in
Figure 1.

Figure 2. 3-ConvNN architecture

3.4. Training Convolutional Neural Networks on

Heatmaps

The size of the images in the EmotiW dataset varies con-
siderably. We ﬁrst pre-process the images into heatmaps,
as described in 3.3, and then resize the images into 256 ×
256 × 3 using Python Imaging Library (PIL), since we
train Convolutional Neural Networks (CNNs), which re-
quire an input of ﬁxed size. We also perform data aug-
mentation/oversampling on the generated heatmaps using
Keras’[3] image pre-processing to deal with dataset bias[2].
The augmentations done are random rotations with a range
of 40 degrees, random horizontal shifts in the range of 20%
of the total width, random vertical shifts in the range of 20%
of the total height, rescaling the pixel values by a factor of
0.01, using a shear intensity and zoom intensity of 0.2, ran-
dom horizontal ﬂips and using the ”nearest” ﬁll mode.

Next, we train two different Convolutional Neural Net-
works, the ﬁrst of which contains four layers, three of which
are convolutional layers and the fourth is a fully connected
layer, as depicted in Figure 2. We shall refer to it as 3-
ConvNN throughout the paper. The ﬁrst layer of the net-
work takes in images of dimensions 256×256×3. The ﬁrst
layer consists of 32 ﬁlters with a kernel size of 3 × 3 × 3. It

is followed by a max pooling layer of size 2 × 2 × 3. The
second convolution layer is the same as the ﬁrst one. The
third layer consists of 64 ﬁlters with a kernel size of 3×3×3
followed by a 2 × 2 × 3 max pooling layer. The output of
this layer is then ﬂattened and fed to a fully connected layer
of size 3. We also use dropout with a rate of 0.5. All the
layers in the network use Rectiﬁer Linear Unit (ReLU) ac-
tivation. We use Adam [14] for model optimization. The
network minimizes categorical cross entropy loss.

Figure 3. AlexNet Architecture.

The second network is AlextNet as described in [15].
It takes input with dimensions 227 × 227 × 3. The ﬁrst
convolutional layer contains 96 ﬁlters and a kernel size of
11 × 11 × 3 and a stride of 4 pixels. It is followed by a max
pooling layer of size 3 × 3 × 3 with a stride of 2 pixels. We
then perform batch normalization. Next is a sequence of a
zero padding layer of 1 pixel followed by a convolutional
layer of 384 ﬁlters and a kernel size of 3 × 3 × 3 and a stride
of 1 pixel. This sequence is repeated again and is followed
by a zero padding layer of size 1 and a convolutional layer
of 256 ﬁlters, a kernel size of 3 × 3 × 3 with a stride of 1
pixel. Next, is a max pooling layer of size 3 × 3 × 3 and
a stride of 2 pixels. The output of the max pooling layer
is ﬂattened and is fed to a dense layer of 4096 units. A
dropout with a rate of 0.5 is used next. A dense layer of
4096 units follows next with which is again followed by a
dropout with a rate of 0.5. The ﬁnal layer is a softmax layer
with 3 units. All the previous laye rs use ReLU activation.
The architecture has been illustrated in the Figure 3. The
model minimizes categorical cross entropy loss. We use
Stochatic Gradient Descent (SGD) for model optimization
with a learning rate of 0.01, momentum of 0.9 and a weight
decay of 5 × 10−4.

The entire approach has been illustrated in Fig 4

Figure 4. Pipeline of our approach

4.1. Using Face Level Predictions Directly

4.1.1 Averaging

It is one of the simplest approaches that can be used. We
take average of 7-dimensional vectors obtained for all the
faces in the image. The emotion with the highest mean
value is used as the overall prediction. Anger, Disgust, Fear,
Sadness and Surprise as categorised as Negative, Neutral
and Happy are categorised as Neutral and Positive respec-
tively. However, as discussed in [4], which is also men-
tioned in [21], averaging is not a reliable measure to predict
group level emotion. Upon averaging the face level predic-
tions, we obtained an accuracy of 44.37% on the training
set and an accuracy of 42.38% on the validation set.

4.1.2 Random Forest

We next trained a Random Forest classiﬁer (15 estimators)
using the averaged 7-dimensional vector obtained for an im-
age. Using Random Forest classiﬁer we achieved an ac-
curacy of 99.08% on the training set and an accuracy of
48.13% on the validation set.

4.2. Training Convolutional Neural Networks on

Heatmaps

In this subsection we discuss our experiments using the
generated heatmaps. Converting images into heatmaps (as
discussed in section 3.3) based on face level predictions
served two purposes. Firstly, it allowed the ConvNets to
focus on isolated face level information by removing the
additional information present in the image like the overall
scene information. Secondly, it allowed us to perform ex-
periments by considering face sizes and position of faces in
space as variables. As we shall see later, taking these factors
into account affects the predictions.

4. Experimental Analysis

4.2.1 Linear Distribution

We now describe a series of experiments performed us-
ing raw images as well as the predictions obtained for every
face by running the pre-trained model [16]. The experi-
ments in sections 4.1 and 4.2 were done to obtain the group
level prediction using predictions for individual faces.

We ﬁrst use a linear distribution to create heatmaps. The
function used is

I(x, y) =

(cid:40)

I0
d((x,y),(x0,y0))
I0

d (cid:54)= 0

d = 0

(1)

Where I(x, y) is the intensity at the point (x, y) in the
image, I0 is the maximum intensity, which is at the cen-
ter of the face under consideration. This intensity is ob-
tained by using the methodology as described in section 3.2.
)) is the distance function that calculates the
d((x, y), (x
city block distance between the points (x, y) and (x
).
More speciﬁcally,

, y

, y

(cid:48)

(cid:48)

(cid:48)

(cid:48)

d((x, y), (x(cid:48), y(cid:48))) = 0.1 × (|x − x(cid:48)| + |y − y(cid:48)|)

(2)

A distance scaling factor of 0.1 is used to make the in-
tensity decrease gradually with distance instead of an abrupt
decrease with distance.

Using the above function and the process is as described
in section 3.3 and depicted in Fig. 1, we create heatmaps. It
is to be noted that, by using a linear distribution, we discard
both the size of the faces and their position in space. We
train 3-ConvNN on these images.

4.2.2 Gaussian Distribution

Until now, the size of the face did not play a role in deter-
mining the group level emotion. However, as discussed in
[8], large size of faces with smiles play a role in determi-
nation of affect of a group. Keeping this in mind, we use
a bivariate Gaussian distribution to estimate the intensity of
emotion throughout the image. The function which is used
to calculate the intensity I at a point (x, y), is

I(x, y) = I0×exp(

−4 × ln(2) × 0.1 × [(x − x0)2 + (y − y0)2]
r

)

(3)
Where I0 is the intensity value obtained for a face,
(x0, y0) is the center of the face in the image and r is the ra-
dius of the face which is estimated by half the length of the
diagonal of the frame enclosing the face, obtained via face
detection. A scaling factor of 0.1 is again used, to make the
intensity decrease gradually in two dimensional Euclidean
space.

Using the heatmaps generated by using the above
methodology, we 3-ConvNN and AlexNet on the heatmaps.

I(x, y) = I0 ×

exp( −4×ln(2)×0.1×[(x−x0)2+(y−y0)2]
D((xf , yf ), (xc, yc))

r

)

(4)

Where D((xf , yf ), (xc, yc)) is the Euclidean distance
between the center of the face under consideration and the
center of the image, scaled by a factor of 0.01. (xf , yf ) are
the coordinates of the center of the face (estimated by the
center of the bounding box enclosing the face) in the image
and (xc, yc) are the coordinates of the center of the image.
Thus,

D((xf , yf ), (xc, yc)) = 0.01 ×

(xf − xc)2 + (yf − yc)2
(5)
We then train 3-ConvNN and AlexNet on heatmaps ob-

(cid:113)

tained via this method.

4.3. Training CNNs Directly on Images

We also trained the two CNNs described before in Sec-
tion 3.4 on raw images. 3-ConvNN gave a training accuracy
of 54.68% and a validation accuracy of 50.27%. AlexNet,
when directly trained on raw images gave us a training ac-
curacy of 49.57% and a validation accuracy of 44.98%.

Model

Baseline
Averaging
Random Forest
Linear Distrbution
Heatmaps (3-ConvNN)
Gaussian Heatmaps
(3-ConvNN)
Gaussian Heatmaps
(AlexNet)
Normalized Gaussians
(3-ConvNN)
Normalized Gaussians
(AlexNet)
Raw Images
(3-ConvNN)
Raw Images
(AlexNet)

Training
Accuracy
-
44.37%
99.08%

Validation
Accuracy
52.79%
42.38%
48.13%

35.59%

38.62%

56.73%

51.49%

57.81%

55.23%

56.89%

54.67%

54.51%

52.15%

54.68%

50.27%

49.57%

44.98%

Table 2. Performance of Different Models

4.2.3 Gaussians Normalized by Distance to Image

Center

We also investigate the effect of position of faces in the im-
age. In order to take position into account we divide the
intensity obtained at every point by using a Gaussian dis-
tribution by the distance of the center of the face from the
center of the image.

More speciﬁcally, the intensity at a point (x1, y1) is ob-

tained by the following relation:

5. Results and Discussion

Table 2 summarizes the results of various approaches we
used to predict group emotion. Averaging of face level pre-
dictions discards the information of face sizes and their rel-
ative positions in the image. Mean of face level predictions
discarding these context features and not working well is
also discussed in [4] and [21].

Random Forest classiﬁer (4.1.2) gave an accuracy of
99.08% on the training set and an accuracy of 48.13% on the
validation set. Though the Random Forest model performed
better than the previous approach. We were still behind the
baseline accuracy by 4.84%. The classiﬁer was able to cap-
ture complex interplay between various intensities of face
level predictions, but this approach, like the former ignores
face sizes and relative position of faces.

Using a linear distribution to create heatmaps (4.2.1) we
get an accuracy of 35.59% on the training set and 38.62%
on the validation set, when the heatmaps are trained on 3-
ConvNN. Heatmaps created using a Gaussian distribution
(4.2.2) takes the size of the face into consideration. When
using that to train 3-ConvNN, we obtain an accuracy of
56.73% on the training data and 51.49% on the validation
data. Training AlexNet on the same images gave an ac-
curacy of 57.81% and 55.23% on training and validation
datasets respectively.

When the heatmaps obtained by Gaussians normalized
by the distance from the center (4.2.3) are used to train 3-
ConvNN, we achieve an accuracy of 56.89% and 54.67%
respectively on training and validation sets. AlexNet gave
an accuracy of 54.51% and 52.15% respectively.
In this
method, both the faces and their positions from the center
of the image are considered.

Finally, we see that CNNs trained directly on images do

not perform as good as when trained on heatmaps.

6. Conclusion and Future Work

This paper presented a pipeline that was used to predict
the overall emotion of a group of people in an image for
EmotiW 2017 challenge dataset. Ours is a bottom-up ap-
proach. We create heatmaps using face-level predictions
and train ConvNets on them. We demonstrate that training
the CNNs on heatmaps performs better than training them
directly on raw images. We also investigate the effects of
face size and their position in the image and see that their
position does have an impact on the overall affect. Our best
model achieves a validation accuracy of 55.23% which is
2.44% above the baseline.

Our future work includes different combination methods
for heatmaps like the use of manifolds [10].
In addition
to that, We also intend to investigate the effect of relative
distances between faces in groups.

7. Acknowledgement

We thank Balaji Balasubramaniam, Abhishek Sainani
and the reviewers for their valuable comments and feed-
back, which greatly improved our manuscript.

References

[1] S. Barsade and D. Gibson. Group emotion: A view from top

and bottom. 1:81–102, 01 1998.

[2] V. Campos, B. Jou, and X. Gir´o i Nieto. From pixels to
sentiment: Fine-tuning cnns for visual sentiment prediction.
CoRR, abs/1604.03489, 2016.

[3] F. Chollet et al.

Keras.
fchollet/keras, 2015.

https://github.com/

[4] A. Dhall, R. Goecke, and T. Gedeon. Automatic group hap-
piness intensity analysis. IEEE Trans. Affective Computing,
6(1):13–26, 2015.

[5] A. Dhall, R. Goecke, S. Ghosh, J. Joshi, J. Hoey, and
T. Gedeon. From individual to group-level emotion recog-
nition: Emotiw 5.0. In Proceedings of the 19th ACM Inter-
national Conference on Multimodal Interaction, ICMI 2017,
pages 524–528, New York, NY, USA, 2017. ACM.

[6] A. Dhall, R. Goecke, J. Joshi, J. Hoey, and T. Gedeon.
Emotiw 2016: Video and group-level emotion recognition
challenges. In Proceedings of the 18th ACM International
Conference on Multimodal Interaction, ICMI 2016, pages
427–432. ACM, 2016.

[7] A. Dhall, R. Goecke, S. Lucey, and T. Gedeon. Collect-
ing large, richly annotated facial-expression databases from
movies. IEEE MultiMedia, 19(3):34–41, July 2012.

[8] A. Dhall, J. Joshi, K. Sikka, R. Goecke, and N. Sebe. The
more the merrier: Analysing the affect of a group of peo-
ple in images. In 11th IEEE International Conference and
Workshops on Automatic Face and Gesture Recognition, FG
2015, Ljubljana, Slovenia, May 4-8, 2015, pages 1–8, 2015.
[9] I. J. Goodfellow, D. Erhan, P. L. Carrier, A. Courville,
M. Mirza, B. Hamner, W. Cukierski, Y. Tang, D. Thaler,
D.-H. Lee, Y. Zhou, C. Ramaiah, F. Feng, R. Li, X. Wang,
D. Athanasakis, J. Shawe-Taylor, M. Milakov, J. Park,
R. Ionescu, M. Popescu, C. Grozea, J. Bergstra, J. Xie,
L. Romaszko, B. Xu, Z. Chuang, and Y. Bengio. Chal-
lenges in Representation Learning: A Report on Three Ma-
chine Learning Contests, pages 117–124. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

[10] J. Hamm and D. D. Lee. Grassmann discriminant analysis:
A unifying view on subspace-based learning. In Proceedings
of the 25th International Conference on Machine Learning,
ICML ’08, pages 376–383, 2008.

[11] G. B. Huang, M. Ramesh, T. Berg, and E. Learned-Miller.
Labeled faces in the wild: A database for studying face
recognition in unconstrained environments. Technical re-
port, Technical Report 07-49, University of Massachusetts,
Amherst, 2007.

[12] B.-K. Kim, H. Lee, J. Roh, and S.-Y. Lee. Hierarchical com-
mittee of deep cnns with exponentially-weighted decision fu-
sion for static facial expression recognition. In Proceedings
of the 2015 ACM on International Conference on Multimodal
Interaction, pages 427–434. ACM, 2015.

[13] D. E. King. Dlib-ml: A machine learning toolkit. Journal of

Machine Learning Research, 10:1755–1758, 2009.

[14] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. CoRR, abs/1412.6980, 2014.

[15] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,
editors, Advances in Neural Information Processing Systems
25, pages 1097–1105. Curran Associates, Inc., 2012.
[16] G. Levi and T. Hassner. Emotion recognition in the wild via
convolutional neural networks and mapped binary patterns.
In Proc. ACM International Conference on Multimodal In-
teraction (ICMI), November 2015.

[17] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler. Deep
learning for emotion recognition on small datasets using
In Proceedings of the 2015 ACM on In-
transfer learning.
ternational Conference on Multimodal Interaction, Seattle,
WA, USA, November 09 - 13, 2015, pages 443–449, 2015.

[18] T. Ojala, M. Pietik¨ainen, and D. Harwood. A comparative
study of texture measures with classiﬁcation based on fea-
In Pattern Recognition, pages 51–59,
tured distributions.
1996.

[19] T. Ojala, M. Pietik¨ainen, and T. M¨aenp¨a¨a. A generalized
local binary pattern operator for multiresolution gray scale
and rotation invariant texture classiﬁcation. In International
Conference on Advances in Pattern Recognition, pages 399–
408, 2001.

[20] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[21] V. Vonikakis, Y. Yazici, V. Nguyen, and S. Winkler. Group
happiness assessment using geometric features and dataset
In Proceedings of the 18th ACM International
balancing.
Conference on Multimodal Interaction, ICMI 2016, Tokyo,
Japan, November 12-16, 2016, pages 479–486, 2016.
[22] J. Wu and J. M. Rehg. Centrist: A visual descriptor for scene
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 33(8):1489–1501, Aug 2011.

[23] Z. Yu and C. Zhang.

Image based static facial expression
In Pro-
recognition with multiple deep network learning.
ceedings of the 2015 ACM on International Conference on
Multimodal Interaction, ICMI ’15, pages 435–442. ACM,
2015.

[24] L. Zhang, D. Tjondronegoro, and V. Chandran. Represen-
tation of facial expression categories in continuous arousal–
Image and Vision
valence space: feature and correlation.
Computing, 32(12):1067–1079, 2014.

Group Affect Prediction Using Multimodal Distributions

Saqib Nizam Shamsi
Aspiring Minds
shamsi.saqib@gmail.com

Bhanu Pratap Singh
Univeristy of Massachusetts, Amherst
bhanupratap.mnit@gmail.com

Manya Wadhwa
Johns Hopkins University
mwadhwa1@jhu.edu

8
1
0
2
 
r
a

M
 
2
1
 
 
]

V
C
.
s
c
[
 
 
2
v
6
1
2
1
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

We describe our approach towards building an efﬁcient
predictive model to detect emotions for a group of people in
an image. We have proposed that training a Convolutional
Neural Network (CNN) model on the emotion heatmaps ex-
tracted from the image, outperforms a CNN model trained
entirely on the raw images. The comparison of the mod-
els have been done on a recently published dataset of Emo-
tion Recognition in the Wild (EmotiW) challenge, 2017. The
proposed method 1 achieved validation accuracy of 55.23%
which is 2.44% above the baseline accuracy, provided by
the EmotiW organizers.

1. Introduction

Emotion categorization of a face has always been an in-
teresting problem and researchers have developed various
approaches to solve this problem effectively. Categorizing
the emotion of an image which contains multiple people
has also gained attention [6]. The images are of real-life
scenarios such as an image of a protest or of children play-
ing in a park or some friends sitting and having a discus-
sion. The problem becomes more difﬁcult than emotion
categorization of a facial image because one needs to ad-
dress multiple sub-problems. For instance, the backgrounds
of images might be starkly different from each other, the
faces of the people may be occluded or they might not be
facing the camera. Single-faced images are usually front-
facing images in which faces are easier to crop out from the
original image [9]. With more pictures being posted every
day on social media sites such as Instagram and Facebook,
this problem has interesting applications such as analyzing
the emotion of a group of people attending an event which
could prove helpful in tagging the pictures automatically.

In this paper, we discuss our approach for predicting the
emotion of a group of people in an image. The goal is to
build a model which could classify the emotion of a group
of people in an image into one of the three classes: positive,

1Code

is
approach
https://github.com/saqibns/cv-aal-2018

experiments

and

the

for

available

at:

negative and neutral. The dataset, also known as Group Af-
fect Database 2.0 [8], contains images from different social
events in all the three classes such as convocations, mar-
riages, meetings and funerals. The dataset was a part of a
challenge, which included different sub-problems from pre-
vious challenges. Like the 4th EmotiW challenge, where the
goal was to predict the happiness index of a group image,
this challenge dealt with group images. It was also similar
to the 3rd EmotiW challenge, where the goal was to predict
the emotion of a single face in an image. The difference
was that there were seven categories of emotions in the 3rd
EmotiW challenge. In this challenge there was a group of
people in an image and the emotion of the image was to be
classiﬁed into one of the three classes: Positive, Netural and
Negative.

Researchers have used many interesting approaches for
this problem, such as in [24], the researchers had tried a di-
mensional approach where facial expressions were treated
as a regression problem in the Arousal-Valence space. In
[17], a two-stage ﬁne-tuning was applied on deep CNN
while doing transfer learning. In [23], multiple deep net-
work training layers are utilized for emotion prediction for
the 3rd EmotiW challenge. It is interesting to see that all
the three winners of the 3rd EmotiW challenge utilized deep
learning networks in their techniques [23][17][12]. This in-
dicated that deep networks could be helpful for the dataset
of the 5th challenge as well. The main difference was in the
aggregation of emotions of multiple people from the image
to predict the mood/expression of the image in general.

In this paper, we use a bottom-up [1] approach for
emotion detection. We perform face level emotion detec-
tion. We then experiment with average estimations (section
4.1.1) but as discussed in [4], which is also mentioned in
[21], averaging is not a reliable measure to predict group
level emotion. We also train random forests (section 4.1.2)
but the performance leaves much to be desired. Next, we
use the face level detections and combine individual im-
ages by constructing heatmaps for emotion intensity. We
then train Convolutional Neural Networks on the heatmaps
(section 4.2). As mentioned in [8], large size of faces with
smiles play a role in determination of affect of a group. For

example, a face closer to the camera, thus having a bigger
size, would have more contribution towards the overall af-
fect of the image as compared to the one that is farther away
and is thus smaller. To that end, we create heatmaps which
are normalized by the distance to the center of the image and
use them to train CNNs (section 4.2.3). Finally, we demon-
strate that training CNNs on heatmaps gives better results
than training them on raw images (section 4.3).

2. Dataset

The group emotion recognition dataset [7] was provided
as a part of 5th EmotiW challenge [6]. The dataset was di-
vided into three parts: train, validation and test. However,
we use only the training and validation sets for the current
work. This is because the test set is unlabeled and was to
be used to judge submissions of the challenge. Since it was
unlabeled we could not use it to judge the performance of
our models.

Each set consists of three type of group images: images
with positive emotion such as of marriages and party, neu-
tral images such as of meetings and images with negative
emotion such as of protests and funerals. The distribution
of images in each of the sets is presented in table 1.

For training the networks, we divide the training set into
two parts out of which one is used for training the network
and the other is used as a hold-out set for model selection.
We use stratiﬁed sampling and pick 10% of the images from
the training set to create the hold-out set. We train mod-
els for 100 epochs and ﬁnally pick the one which performs
the best on the held out set. Finally, we see how various
models perform against the baseline of 52.79% [5] on the
validation set, provided by the challenge organizers. The
baseline was obtained by training a Support Vector Regres-
sion model with a non-linear Chi-square kernel on CENsus
TRansform hISTogram (CENTRIST) descriptor [22].

Emotion
Train
Validation

Positive Neutral Negative Total
3630
2065

1159
564

1272
773

1199
728

Table 1. 5th EmotiW Challenge Dataset

3. Pipeline

3.1. Face Detection and Cropping

In order to predict the emotion of an image, we need to
detect the emotion of each face in the image. The emotions
of individual faces in the image would aid us in predicting
the ﬁnal emotion of the image. We used a popular C++
toolkit, Dlib [13] for this purpose. Dlib toolkit contains pre-
trained models for face detection in an image. It provides
the coordinates of a rectangular frame that ﬁts the face. The
frame coordinates are then used to crop faces from images.

Figure 1. Image Preprocessing Pipeline. From the image, faces are
extracted (second row). For every face, all the three categories of
emotion are estimated. Gaussain kernels are centered on each face
(third, fourth and ﬁfth rows). The kernels for the three categories
are stacked to form an RGB image (sixth row) with the distribution
for Negative emotion forming the red channel (ﬁfth row) and the
distributions for Neutral and Positive emotions forming the green
and the blue channels respectively (fourth and third rows). The
middle image (sixth row) has a different color than the other two,
since the intensities of emotions predicted for the middle face dif-
fer from the other two. Note, that the third heatmap (rightmost) in
the sixth row is slightly bigger than the other two, since the face
in the image is larger. Finally, the RGB images obtained for each
face are added to get a combined heatmap (last row).

An example of face detection in an image via Dlib has been
shown in Fig 1

3.2. Emotion Detection For Individual Faces

3.3.2 Creation of Heatmap

The second step towards solving the problem is to detect
emotion of every face detected in section 3.1 above. Detec-
tion of emotion of a face is an open problem. To get the
predictions for every face, we use a pre-trained model by
Levi and Hassner [16]. The advantage of using this model
is that it is trained on Faces In The Wild dataset [11] so
it incorporates faces in different angles, tones, lighting con-
ditions, partially occluded faces etc. It is an ensemble of
ﬁve models. The models are VGG [20] networks which
have been trained on Local Binary Patterns [18] [19]. For
a given face, the ﬁve models give scores for the seven stan-
dard emotions, Anger, Disgust, Fear, Happy, Neutral, Sad
and Surprise. The resulting scores for the seven emotions
are obtained by averaging the predictions of all models. We
then use the values of Happy for Positive class, Neutral for
Neutral class and an average of Anger, Disgust, Fear and
Sad for the Negative class. The value for Surprise predicted
by the model was not used since it was difﬁcult to determine
which category it should belong to owing to its ambiguous
nature.

3.3. Inferring Group Emotions

Now we arrive at the core problem of this challenge,
which is to infer group emotion. We combine the predic-
tions obtained for individual faces, as obtained in section
3.2 to make predictions for the group of people in the image.
For this we use the concept of heatmaps which is described
in sections 3.3.1 and 3.3.2.

3.3.1 Interpolation

For the predicted value of emotion of each face in an image,
we construct its corresponding emotion heatmaps. We have
used linear distribution and bivariate Gaussian distribution
to create the heatmaps in our experiments. Each distribution
is created using the value of the emotion predicted in sec-
tion 3.2 as the value at center. For the bivariate Gaussian,
the radius of the face (approximated by calculating half the
length of the diagonal of the frame of the face, obtained
in section 3.1) becomes the Full Width at Half Maximum
(FWHM). Each heatmap represents intensity of emotion for
a face distributed in a 2D Euclidean space. The distribution
is centered at the face. The size of the 2D space in which
the heatmap is generated is same as the size of the image.
This technique of representing emotions is useful as it al-
lows us to easily combine the values obtained in section 3.2
for multiple faces, and also perform distance based compu-
tations as discussed later in the experiments section.

The distributions for each of the detected face are then com-
bined to form one ﬁnal image.
It is done in three steps.
First, we create three matrices (corresponding to each emo-
tion) using the method described in the previous section for
each face. The second step is to form a combined spatial
distribution for each of the three classes. This is done by
stacking the heatmap matrix on top of one another. The
three heatmaps form the red, green and blue channels of an
RGB image. For our experiments we have arbitrarily cho-
sen the red channel for the negative emotion, green channel
for neutral emotion and blue channel for positive emotion.
The ﬁnal step is to add the RGB image tensors obtained for
each face to form a combined RGB image. The entire ﬂow
of generating a heatmap for an image has been illustrated in
Figure 1.

Figure 2. 3-ConvNN architecture

3.4. Training Convolutional Neural Networks on

Heatmaps

The size of the images in the EmotiW dataset varies con-
siderably. We ﬁrst pre-process the images into heatmaps,
as described in 3.3, and then resize the images into 256 ×
256 × 3 using Python Imaging Library (PIL), since we
train Convolutional Neural Networks (CNNs), which re-
quire an input of ﬁxed size. We also perform data aug-
mentation/oversampling on the generated heatmaps using
Keras’[3] image pre-processing to deal with dataset bias[2].
The augmentations done are random rotations with a range
of 40 degrees, random horizontal shifts in the range of 20%
of the total width, random vertical shifts in the range of 20%
of the total height, rescaling the pixel values by a factor of
0.01, using a shear intensity and zoom intensity of 0.2, ran-
dom horizontal ﬂips and using the ”nearest” ﬁll mode.

Next, we train two different Convolutional Neural Net-
works, the ﬁrst of which contains four layers, three of which
are convolutional layers and the fourth is a fully connected
layer, as depicted in Figure 2. We shall refer to it as 3-
ConvNN throughout the paper. The ﬁrst layer of the net-
work takes in images of dimensions 256×256×3. The ﬁrst
layer consists of 32 ﬁlters with a kernel size of 3 × 3 × 3. It

is followed by a max pooling layer of size 2 × 2 × 3. The
second convolution layer is the same as the ﬁrst one. The
third layer consists of 64 ﬁlters with a kernel size of 3×3×3
followed by a 2 × 2 × 3 max pooling layer. The output of
this layer is then ﬂattened and fed to a fully connected layer
of size 3. We also use dropout with a rate of 0.5. All the
layers in the network use Rectiﬁer Linear Unit (ReLU) ac-
tivation. We use Adam [14] for model optimization. The
network minimizes categorical cross entropy loss.

Figure 3. AlexNet Architecture.

The second network is AlextNet as described in [15].
It takes input with dimensions 227 × 227 × 3. The ﬁrst
convolutional layer contains 96 ﬁlters and a kernel size of
11 × 11 × 3 and a stride of 4 pixels. It is followed by a max
pooling layer of size 3 × 3 × 3 with a stride of 2 pixels. We
then perform batch normalization. Next is a sequence of a
zero padding layer of 1 pixel followed by a convolutional
layer of 384 ﬁlters and a kernel size of 3 × 3 × 3 and a stride
of 1 pixel. This sequence is repeated again and is followed
by a zero padding layer of size 1 and a convolutional layer
of 256 ﬁlters, a kernel size of 3 × 3 × 3 with a stride of 1
pixel. Next, is a max pooling layer of size 3 × 3 × 3 and
a stride of 2 pixels. The output of the max pooling layer
is ﬂattened and is fed to a dense layer of 4096 units. A
dropout with a rate of 0.5 is used next. A dense layer of
4096 units follows next with which is again followed by a
dropout with a rate of 0.5. The ﬁnal layer is a softmax layer
with 3 units. All the previous laye rs use ReLU activation.
The architecture has been illustrated in the Figure 3. The
model minimizes categorical cross entropy loss. We use
Stochatic Gradient Descent (SGD) for model optimization
with a learning rate of 0.01, momentum of 0.9 and a weight
decay of 5 × 10−4.

The entire approach has been illustrated in Fig 4

Figure 4. Pipeline of our approach

4.1. Using Face Level Predictions Directly

4.1.1 Averaging

It is one of the simplest approaches that can be used. We
take average of 7-dimensional vectors obtained for all the
faces in the image. The emotion with the highest mean
value is used as the overall prediction. Anger, Disgust, Fear,
Sadness and Surprise as categorised as Negative, Neutral
and Happy are categorised as Neutral and Positive respec-
tively. However, as discussed in [4], which is also men-
tioned in [21], averaging is not a reliable measure to predict
group level emotion. Upon averaging the face level predic-
tions, we obtained an accuracy of 44.37% on the training
set and an accuracy of 42.38% on the validation set.

4.1.2 Random Forest

We next trained a Random Forest classiﬁer (15 estimators)
using the averaged 7-dimensional vector obtained for an im-
age. Using Random Forest classiﬁer we achieved an ac-
curacy of 99.08% on the training set and an accuracy of
48.13% on the validation set.

4.2. Training Convolutional Neural Networks on

Heatmaps

In this subsection we discuss our experiments using the
generated heatmaps. Converting images into heatmaps (as
discussed in section 3.3) based on face level predictions
served two purposes. Firstly, it allowed the ConvNets to
focus on isolated face level information by removing the
additional information present in the image like the overall
scene information. Secondly, it allowed us to perform ex-
periments by considering face sizes and position of faces in
space as variables. As we shall see later, taking these factors
into account affects the predictions.

4. Experimental Analysis

4.2.1 Linear Distribution

We now describe a series of experiments performed us-
ing raw images as well as the predictions obtained for every
face by running the pre-trained model [16]. The experi-
ments in sections 4.1 and 4.2 were done to obtain the group
level prediction using predictions for individual faces.

We ﬁrst use a linear distribution to create heatmaps. The
function used is

I(x, y) =

(cid:40)

I0
d((x,y),(x0,y0))
I0

d (cid:54)= 0

d = 0

(1)

Where I(x, y) is the intensity at the point (x, y) in the
image, I0 is the maximum intensity, which is at the cen-
ter of the face under consideration. This intensity is ob-
tained by using the methodology as described in section 3.2.
)) is the distance function that calculates the
d((x, y), (x
city block distance between the points (x, y) and (x
).
More speciﬁcally,

, y

, y

(cid:48)

(cid:48)

(cid:48)

(cid:48)

d((x, y), (x(cid:48), y(cid:48))) = 0.1 × (|x − x(cid:48)| + |y − y(cid:48)|)

(2)

A distance scaling factor of 0.1 is used to make the in-
tensity decrease gradually with distance instead of an abrupt
decrease with distance.

Using the above function and the process is as described
in section 3.3 and depicted in Fig. 1, we create heatmaps. It
is to be noted that, by using a linear distribution, we discard
both the size of the faces and their position in space. We
train 3-ConvNN on these images.

4.2.2 Gaussian Distribution

Until now, the size of the face did not play a role in deter-
mining the group level emotion. However, as discussed in
[8], large size of faces with smiles play a role in determi-
nation of affect of a group. Keeping this in mind, we use
a bivariate Gaussian distribution to estimate the intensity of
emotion throughout the image. The function which is used
to calculate the intensity I at a point (x, y), is

I(x, y) = I0×exp(

−4 × ln(2) × 0.1 × [(x − x0)2 + (y − y0)2]
r

)

(3)
Where I0 is the intensity value obtained for a face,
(x0, y0) is the center of the face in the image and r is the ra-
dius of the face which is estimated by half the length of the
diagonal of the frame enclosing the face, obtained via face
detection. A scaling factor of 0.1 is again used, to make the
intensity decrease gradually in two dimensional Euclidean
space.

Using the heatmaps generated by using the above
methodology, we 3-ConvNN and AlexNet on the heatmaps.

I(x, y) = I0 ×

exp( −4×ln(2)×0.1×[(x−x0)2+(y−y0)2]
D((xf , yf ), (xc, yc))

r

)

(4)

Where D((xf , yf ), (xc, yc)) is the Euclidean distance
between the center of the face under consideration and the
center of the image, scaled by a factor of 0.01. (xf , yf ) are
the coordinates of the center of the face (estimated by the
center of the bounding box enclosing the face) in the image
and (xc, yc) are the coordinates of the center of the image.
Thus,

D((xf , yf ), (xc, yc)) = 0.01 ×

(xf − xc)2 + (yf − yc)2
(5)
We then train 3-ConvNN and AlexNet on heatmaps ob-

(cid:113)

tained via this method.

4.3. Training CNNs Directly on Images

We also trained the two CNNs described before in Sec-
tion 3.4 on raw images. 3-ConvNN gave a training accuracy
of 54.68% and a validation accuracy of 50.27%. AlexNet,
when directly trained on raw images gave us a training ac-
curacy of 49.57% and a validation accuracy of 44.98%.

Model

Baseline
Averaging
Random Forest
Linear Distrbution
Heatmaps (3-ConvNN)
Gaussian Heatmaps
(3-ConvNN)
Gaussian Heatmaps
(AlexNet)
Normalized Gaussians
(3-ConvNN)
Normalized Gaussians
(AlexNet)
Raw Images
(3-ConvNN)
Raw Images
(AlexNet)

Training
Accuracy
-
44.37%
99.08%

Validation
Accuracy
52.79%
42.38%
48.13%

35.59%

38.62%

56.73%

51.49%

57.81%

55.23%

56.89%

54.67%

54.51%

52.15%

54.68%

50.27%

49.57%

44.98%

Table 2. Performance of Different Models

4.2.3 Gaussians Normalized by Distance to Image

Center

We also investigate the effect of position of faces in the im-
age. In order to take position into account we divide the
intensity obtained at every point by using a Gaussian dis-
tribution by the distance of the center of the face from the
center of the image.

More speciﬁcally, the intensity at a point (x1, y1) is ob-

tained by the following relation:

5. Results and Discussion

Table 2 summarizes the results of various approaches we
used to predict group emotion. Averaging of face level pre-
dictions discards the information of face sizes and their rel-
ative positions in the image. Mean of face level predictions
discarding these context features and not working well is
also discussed in [4] and [21].

Random Forest classiﬁer (4.1.2) gave an accuracy of
99.08% on the training set and an accuracy of 48.13% on the
validation set. Though the Random Forest model performed
better than the previous approach. We were still behind the
baseline accuracy by 4.84%. The classiﬁer was able to cap-
ture complex interplay between various intensities of face
level predictions, but this approach, like the former ignores
face sizes and relative position of faces.

Using a linear distribution to create heatmaps (4.2.1) we
get an accuracy of 35.59% on the training set and 38.62%
on the validation set, when the heatmaps are trained on 3-
ConvNN. Heatmaps created using a Gaussian distribution
(4.2.2) takes the size of the face into consideration. When
using that to train 3-ConvNN, we obtain an accuracy of
56.73% on the training data and 51.49% on the validation
data. Training AlexNet on the same images gave an ac-
curacy of 57.81% and 55.23% on training and validation
datasets respectively.

When the heatmaps obtained by Gaussians normalized
by the distance from the center (4.2.3) are used to train 3-
ConvNN, we achieve an accuracy of 56.89% and 54.67%
respectively on training and validation sets. AlexNet gave
an accuracy of 54.51% and 52.15% respectively.
In this
method, both the faces and their positions from the center
of the image are considered.

Finally, we see that CNNs trained directly on images do

not perform as good as when trained on heatmaps.

6. Conclusion and Future Work

This paper presented a pipeline that was used to predict
the overall emotion of a group of people in an image for
EmotiW 2017 challenge dataset. Ours is a bottom-up ap-
proach. We create heatmaps using face-level predictions
and train ConvNets on them. We demonstrate that training
the CNNs on heatmaps performs better than training them
directly on raw images. We also investigate the effects of
face size and their position in the image and see that their
position does have an impact on the overall affect. Our best
model achieves a validation accuracy of 55.23% which is
2.44% above the baseline.

Our future work includes different combination methods
for heatmaps like the use of manifolds [10].
In addition
to that, We also intend to investigate the effect of relative
distances between faces in groups.

7. Acknowledgement

We thank Balaji Balasubramaniam, Abhishek Sainani
and the reviewers for their valuable comments and feed-
back, which greatly improved our manuscript.

References

[1] S. Barsade and D. Gibson. Group emotion: A view from top

and bottom. 1:81–102, 01 1998.

[2] V. Campos, B. Jou, and X. Gir´o i Nieto. From pixels to
sentiment: Fine-tuning cnns for visual sentiment prediction.
CoRR, abs/1604.03489, 2016.

[3] F. Chollet et al.

Keras.
fchollet/keras, 2015.

https://github.com/

[4] A. Dhall, R. Goecke, and T. Gedeon. Automatic group hap-
piness intensity analysis. IEEE Trans. Affective Computing,
6(1):13–26, 2015.

[5] A. Dhall, R. Goecke, S. Ghosh, J. Joshi, J. Hoey, and
T. Gedeon. From individual to group-level emotion recog-
nition: Emotiw 5.0. In Proceedings of the 19th ACM Inter-
national Conference on Multimodal Interaction, ICMI 2017,
pages 524–528, New York, NY, USA, 2017. ACM.

[6] A. Dhall, R. Goecke, J. Joshi, J. Hoey, and T. Gedeon.
Emotiw 2016: Video and group-level emotion recognition
challenges. In Proceedings of the 18th ACM International
Conference on Multimodal Interaction, ICMI 2016, pages
427–432. ACM, 2016.

[7] A. Dhall, R. Goecke, S. Lucey, and T. Gedeon. Collect-
ing large, richly annotated facial-expression databases from
movies. IEEE MultiMedia, 19(3):34–41, July 2012.

[8] A. Dhall, J. Joshi, K. Sikka, R. Goecke, and N. Sebe. The
more the merrier: Analysing the affect of a group of peo-
ple in images. In 11th IEEE International Conference and
Workshops on Automatic Face and Gesture Recognition, FG
2015, Ljubljana, Slovenia, May 4-8, 2015, pages 1–8, 2015.
[9] I. J. Goodfellow, D. Erhan, P. L. Carrier, A. Courville,
M. Mirza, B. Hamner, W. Cukierski, Y. Tang, D. Thaler,
D.-H. Lee, Y. Zhou, C. Ramaiah, F. Feng, R. Li, X. Wang,
D. Athanasakis, J. Shawe-Taylor, M. Milakov, J. Park,
R. Ionescu, M. Popescu, C. Grozea, J. Bergstra, J. Xie,
L. Romaszko, B. Xu, Z. Chuang, and Y. Bengio. Chal-
lenges in Representation Learning: A Report on Three Ma-
chine Learning Contests, pages 117–124. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

[10] J. Hamm and D. D. Lee. Grassmann discriminant analysis:
A unifying view on subspace-based learning. In Proceedings
of the 25th International Conference on Machine Learning,
ICML ’08, pages 376–383, 2008.

[11] G. B. Huang, M. Ramesh, T. Berg, and E. Learned-Miller.
Labeled faces in the wild: A database for studying face
recognition in unconstrained environments. Technical re-
port, Technical Report 07-49, University of Massachusetts,
Amherst, 2007.

[12] B.-K. Kim, H. Lee, J. Roh, and S.-Y. Lee. Hierarchical com-
mittee of deep cnns with exponentially-weighted decision fu-
sion for static facial expression recognition. In Proceedings
of the 2015 ACM on International Conference on Multimodal
Interaction, pages 427–434. ACM, 2015.

[13] D. E. King. Dlib-ml: A machine learning toolkit. Journal of

Machine Learning Research, 10:1755–1758, 2009.

[14] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. CoRR, abs/1412.6980, 2014.

[15] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,
editors, Advances in Neural Information Processing Systems
25, pages 1097–1105. Curran Associates, Inc., 2012.
[16] G. Levi and T. Hassner. Emotion recognition in the wild via
convolutional neural networks and mapped binary patterns.
In Proc. ACM International Conference on Multimodal In-
teraction (ICMI), November 2015.

[17] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler. Deep
learning for emotion recognition on small datasets using
In Proceedings of the 2015 ACM on In-
transfer learning.
ternational Conference on Multimodal Interaction, Seattle,
WA, USA, November 09 - 13, 2015, pages 443–449, 2015.

[18] T. Ojala, M. Pietik¨ainen, and D. Harwood. A comparative
study of texture measures with classiﬁcation based on fea-
In Pattern Recognition, pages 51–59,
tured distributions.
1996.

[19] T. Ojala, M. Pietik¨ainen, and T. M¨aenp¨a¨a. A generalized
local binary pattern operator for multiresolution gray scale
and rotation invariant texture classiﬁcation. In International
Conference on Advances in Pattern Recognition, pages 399–
408, 2001.

[20] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[21] V. Vonikakis, Y. Yazici, V. Nguyen, and S. Winkler. Group
happiness assessment using geometric features and dataset
In Proceedings of the 18th ACM International
balancing.
Conference on Multimodal Interaction, ICMI 2016, Tokyo,
Japan, November 12-16, 2016, pages 479–486, 2016.
[22] J. Wu and J. M. Rehg. Centrist: A visual descriptor for scene
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 33(8):1489–1501, Aug 2011.

[23] Z. Yu and C. Zhang.

Image based static facial expression
In Pro-
recognition with multiple deep network learning.
ceedings of the 2015 ACM on International Conference on
Multimodal Interaction, ICMI ’15, pages 435–442. ACM,
2015.

[24] L. Zhang, D. Tjondronegoro, and V. Chandran. Represen-
tation of facial expression categories in continuous arousal–
Image and Vision
valence space: feature and correlation.
Computing, 32(12):1067–1079, 2014.

Group Affect Prediction Using Multimodal Distributions

Saqib Nizam Shamsi
Aspiring Minds
shamsi.saqib@gmail.com

Bhanu Pratap Singh
Univeristy of Massachusetts, Amherst
bhanupratap.mnit@gmail.com

Manya Wadhwa
Johns Hopkins University
mwadhwa1@jhu.edu

8
1
0
2
 
r
a

M
 
2
1
 
 
]

V
C
.
s
c
[
 
 
2
v
6
1
2
1
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

We describe our approach towards building an efﬁcient
predictive model to detect emotions for a group of people in
an image. We have proposed that training a Convolutional
Neural Network (CNN) model on the emotion heatmaps ex-
tracted from the image, outperforms a CNN model trained
entirely on the raw images. The comparison of the mod-
els have been done on a recently published dataset of Emo-
tion Recognition in the Wild (EmotiW) challenge, 2017. The
proposed method 1 achieved validation accuracy of 55.23%
which is 2.44% above the baseline accuracy, provided by
the EmotiW organizers.

1. Introduction

Emotion categorization of a face has always been an in-
teresting problem and researchers have developed various
approaches to solve this problem effectively. Categorizing
the emotion of an image which contains multiple people
has also gained attention [6]. The images are of real-life
scenarios such as an image of a protest or of children play-
ing in a park or some friends sitting and having a discus-
sion. The problem becomes more difﬁcult than emotion
categorization of a facial image because one needs to ad-
dress multiple sub-problems. For instance, the backgrounds
of images might be starkly different from each other, the
faces of the people may be occluded or they might not be
facing the camera. Single-faced images are usually front-
facing images in which faces are easier to crop out from the
original image [9]. With more pictures being posted every
day on social media sites such as Instagram and Facebook,
this problem has interesting applications such as analyzing
the emotion of a group of people attending an event which
could prove helpful in tagging the pictures automatically.

In this paper, we discuss our approach for predicting the
emotion of a group of people in an image. The goal is to
build a model which could classify the emotion of a group
of people in an image into one of the three classes: positive,

1Code

is
approach
https://github.com/saqibns/cv-aal-2018

experiments

and

the

for

available

at:

negative and neutral. The dataset, also known as Group Af-
fect Database 2.0 [8], contains images from different social
events in all the three classes such as convocations, mar-
riages, meetings and funerals. The dataset was a part of a
challenge, which included different sub-problems from pre-
vious challenges. Like the 4th EmotiW challenge, where the
goal was to predict the happiness index of a group image,
this challenge dealt with group images. It was also similar
to the 3rd EmotiW challenge, where the goal was to predict
the emotion of a single face in an image. The difference
was that there were seven categories of emotions in the 3rd
EmotiW challenge. In this challenge there was a group of
people in an image and the emotion of the image was to be
classiﬁed into one of the three classes: Positive, Netural and
Negative.

Researchers have used many interesting approaches for
this problem, such as in [24], the researchers had tried a di-
mensional approach where facial expressions were treated
as a regression problem in the Arousal-Valence space. In
[17], a two-stage ﬁne-tuning was applied on deep CNN
while doing transfer learning. In [23], multiple deep net-
work training layers are utilized for emotion prediction for
the 3rd EmotiW challenge. It is interesting to see that all
the three winners of the 3rd EmotiW challenge utilized deep
learning networks in their techniques [23][17][12]. This in-
dicated that deep networks could be helpful for the dataset
of the 5th challenge as well. The main difference was in the
aggregation of emotions of multiple people from the image
to predict the mood/expression of the image in general.

In this paper, we use a bottom-up [1] approach for
emotion detection. We perform face level emotion detec-
tion. We then experiment with average estimations (section
4.1.1) but as discussed in [4], which is also mentioned in
[21], averaging is not a reliable measure to predict group
level emotion. We also train random forests (section 4.1.2)
but the performance leaves much to be desired. Next, we
use the face level detections and combine individual im-
ages by constructing heatmaps for emotion intensity. We
then train Convolutional Neural Networks on the heatmaps
(section 4.2). As mentioned in [8], large size of faces with
smiles play a role in determination of affect of a group. For

example, a face closer to the camera, thus having a bigger
size, would have more contribution towards the overall af-
fect of the image as compared to the one that is farther away
and is thus smaller. To that end, we create heatmaps which
are normalized by the distance to the center of the image and
use them to train CNNs (section 4.2.3). Finally, we demon-
strate that training CNNs on heatmaps gives better results
than training them on raw images (section 4.3).

2. Dataset

The group emotion recognition dataset [7] was provided
as a part of 5th EmotiW challenge [6]. The dataset was di-
vided into three parts: train, validation and test. However,
we use only the training and validation sets for the current
work. This is because the test set is unlabeled and was to
be used to judge submissions of the challenge. Since it was
unlabeled we could not use it to judge the performance of
our models.

Each set consists of three type of group images: images
with positive emotion such as of marriages and party, neu-
tral images such as of meetings and images with negative
emotion such as of protests and funerals. The distribution
of images in each of the sets is presented in table 1.

For training the networks, we divide the training set into
two parts out of which one is used for training the network
and the other is used as a hold-out set for model selection.
We use stratiﬁed sampling and pick 10% of the images from
the training set to create the hold-out set. We train mod-
els for 100 epochs and ﬁnally pick the one which performs
the best on the held out set. Finally, we see how various
models perform against the baseline of 52.79% [5] on the
validation set, provided by the challenge organizers. The
baseline was obtained by training a Support Vector Regres-
sion model with a non-linear Chi-square kernel on CENsus
TRansform hISTogram (CENTRIST) descriptor [22].

Emotion
Train
Validation

Positive Neutral Negative Total
3630
2065

1159
564

1272
773

1199
728

Table 1. 5th EmotiW Challenge Dataset

3. Pipeline

3.1. Face Detection and Cropping

In order to predict the emotion of an image, we need to
detect the emotion of each face in the image. The emotions
of individual faces in the image would aid us in predicting
the ﬁnal emotion of the image. We used a popular C++
toolkit, Dlib [13] for this purpose. Dlib toolkit contains pre-
trained models for face detection in an image. It provides
the coordinates of a rectangular frame that ﬁts the face. The
frame coordinates are then used to crop faces from images.

Figure 1. Image Preprocessing Pipeline. From the image, faces are
extracted (second row). For every face, all the three categories of
emotion are estimated. Gaussain kernels are centered on each face
(third, fourth and ﬁfth rows). The kernels for the three categories
are stacked to form an RGB image (sixth row) with the distribution
for Negative emotion forming the red channel (ﬁfth row) and the
distributions for Neutral and Positive emotions forming the green
and the blue channels respectively (fourth and third rows). The
middle image (sixth row) has a different color than the other two,
since the intensities of emotions predicted for the middle face dif-
fer from the other two. Note, that the third heatmap (rightmost) in
the sixth row is slightly bigger than the other two, since the face
in the image is larger. Finally, the RGB images obtained for each
face are added to get a combined heatmap (last row).

An example of face detection in an image via Dlib has been
shown in Fig 1

3.2. Emotion Detection For Individual Faces

3.3.2 Creation of Heatmap

The second step towards solving the problem is to detect
emotion of every face detected in section 3.1 above. Detec-
tion of emotion of a face is an open problem. To get the
predictions for every face, we use a pre-trained model by
Levi and Hassner [16]. The advantage of using this model
is that it is trained on Faces In The Wild dataset [11] so
it incorporates faces in different angles, tones, lighting con-
ditions, partially occluded faces etc. It is an ensemble of
ﬁve models. The models are VGG [20] networks which
have been trained on Local Binary Patterns [18] [19]. For
a given face, the ﬁve models give scores for the seven stan-
dard emotions, Anger, Disgust, Fear, Happy, Neutral, Sad
and Surprise. The resulting scores for the seven emotions
are obtained by averaging the predictions of all models. We
then use the values of Happy for Positive class, Neutral for
Neutral class and an average of Anger, Disgust, Fear and
Sad for the Negative class. The value for Surprise predicted
by the model was not used since it was difﬁcult to determine
which category it should belong to owing to its ambiguous
nature.

3.3. Inferring Group Emotions

Now we arrive at the core problem of this challenge,
which is to infer group emotion. We combine the predic-
tions obtained for individual faces, as obtained in section
3.2 to make predictions for the group of people in the image.
For this we use the concept of heatmaps which is described
in sections 3.3.1 and 3.3.2.

3.3.1 Interpolation

For the predicted value of emotion of each face in an image,
we construct its corresponding emotion heatmaps. We have
used linear distribution and bivariate Gaussian distribution
to create the heatmaps in our experiments. Each distribution
is created using the value of the emotion predicted in sec-
tion 3.2 as the value at center. For the bivariate Gaussian,
the radius of the face (approximated by calculating half the
length of the diagonal of the frame of the face, obtained
in section 3.1) becomes the Full Width at Half Maximum
(FWHM). Each heatmap represents intensity of emotion for
a face distributed in a 2D Euclidean space. The distribution
is centered at the face. The size of the 2D space in which
the heatmap is generated is same as the size of the image.
This technique of representing emotions is useful as it al-
lows us to easily combine the values obtained in section 3.2
for multiple faces, and also perform distance based compu-
tations as discussed later in the experiments section.

The distributions for each of the detected face are then com-
bined to form one ﬁnal image.
It is done in three steps.
First, we create three matrices (corresponding to each emo-
tion) using the method described in the previous section for
each face. The second step is to form a combined spatial
distribution for each of the three classes. This is done by
stacking the heatmap matrix on top of one another. The
three heatmaps form the red, green and blue channels of an
RGB image. For our experiments we have arbitrarily cho-
sen the red channel for the negative emotion, green channel
for neutral emotion and blue channel for positive emotion.
The ﬁnal step is to add the RGB image tensors obtained for
each face to form a combined RGB image. The entire ﬂow
of generating a heatmap for an image has been illustrated in
Figure 1.

Figure 2. 3-ConvNN architecture

3.4. Training Convolutional Neural Networks on

Heatmaps

The size of the images in the EmotiW dataset varies con-
siderably. We ﬁrst pre-process the images into heatmaps,
as described in 3.3, and then resize the images into 256 ×
256 × 3 using Python Imaging Library (PIL), since we
train Convolutional Neural Networks (CNNs), which re-
quire an input of ﬁxed size. We also perform data aug-
mentation/oversampling on the generated heatmaps using
Keras’[3] image pre-processing to deal with dataset bias[2].
The augmentations done are random rotations with a range
of 40 degrees, random horizontal shifts in the range of 20%
of the total width, random vertical shifts in the range of 20%
of the total height, rescaling the pixel values by a factor of
0.01, using a shear intensity and zoom intensity of 0.2, ran-
dom horizontal ﬂips and using the ”nearest” ﬁll mode.

Next, we train two different Convolutional Neural Net-
works, the ﬁrst of which contains four layers, three of which
are convolutional layers and the fourth is a fully connected
layer, as depicted in Figure 2. We shall refer to it as 3-
ConvNN throughout the paper. The ﬁrst layer of the net-
work takes in images of dimensions 256×256×3. The ﬁrst
layer consists of 32 ﬁlters with a kernel size of 3 × 3 × 3. It

is followed by a max pooling layer of size 2 × 2 × 3. The
second convolution layer is the same as the ﬁrst one. The
third layer consists of 64 ﬁlters with a kernel size of 3×3×3
followed by a 2 × 2 × 3 max pooling layer. The output of
this layer is then ﬂattened and fed to a fully connected layer
of size 3. We also use dropout with a rate of 0.5. All the
layers in the network use Rectiﬁer Linear Unit (ReLU) ac-
tivation. We use Adam [14] for model optimization. The
network minimizes categorical cross entropy loss.

Figure 3. AlexNet Architecture.

The second network is AlextNet as described in [15].
It takes input with dimensions 227 × 227 × 3. The ﬁrst
convolutional layer contains 96 ﬁlters and a kernel size of
11 × 11 × 3 and a stride of 4 pixels. It is followed by a max
pooling layer of size 3 × 3 × 3 with a stride of 2 pixels. We
then perform batch normalization. Next is a sequence of a
zero padding layer of 1 pixel followed by a convolutional
layer of 384 ﬁlters and a kernel size of 3 × 3 × 3 and a stride
of 1 pixel. This sequence is repeated again and is followed
by a zero padding layer of size 1 and a convolutional layer
of 256 ﬁlters, a kernel size of 3 × 3 × 3 with a stride of 1
pixel. Next, is a max pooling layer of size 3 × 3 × 3 and
a stride of 2 pixels. The output of the max pooling layer
is ﬂattened and is fed to a dense layer of 4096 units. A
dropout with a rate of 0.5 is used next. A dense layer of
4096 units follows next with which is again followed by a
dropout with a rate of 0.5. The ﬁnal layer is a softmax layer
with 3 units. All the previous laye rs use ReLU activation.
The architecture has been illustrated in the Figure 3. The
model minimizes categorical cross entropy loss. We use
Stochatic Gradient Descent (SGD) for model optimization
with a learning rate of 0.01, momentum of 0.9 and a weight
decay of 5 × 10−4.

The entire approach has been illustrated in Fig 4

Figure 4. Pipeline of our approach

4.1. Using Face Level Predictions Directly

4.1.1 Averaging

It is one of the simplest approaches that can be used. We
take average of 7-dimensional vectors obtained for all the
faces in the image. The emotion with the highest mean
value is used as the overall prediction. Anger, Disgust, Fear,
Sadness and Surprise as categorised as Negative, Neutral
and Happy are categorised as Neutral and Positive respec-
tively. However, as discussed in [4], which is also men-
tioned in [21], averaging is not a reliable measure to predict
group level emotion. Upon averaging the face level predic-
tions, we obtained an accuracy of 44.37% on the training
set and an accuracy of 42.38% on the validation set.

4.1.2 Random Forest

We next trained a Random Forest classiﬁer (15 estimators)
using the averaged 7-dimensional vector obtained for an im-
age. Using Random Forest classiﬁer we achieved an ac-
curacy of 99.08% on the training set and an accuracy of
48.13% on the validation set.

4.2. Training Convolutional Neural Networks on

Heatmaps

In this subsection we discuss our experiments using the
generated heatmaps. Converting images into heatmaps (as
discussed in section 3.3) based on face level predictions
served two purposes. Firstly, it allowed the ConvNets to
focus on isolated face level information by removing the
additional information present in the image like the overall
scene information. Secondly, it allowed us to perform ex-
periments by considering face sizes and position of faces in
space as variables. As we shall see later, taking these factors
into account affects the predictions.

4. Experimental Analysis

4.2.1 Linear Distribution

We now describe a series of experiments performed us-
ing raw images as well as the predictions obtained for every
face by running the pre-trained model [16]. The experi-
ments in sections 4.1 and 4.2 were done to obtain the group
level prediction using predictions for individual faces.

We ﬁrst use a linear distribution to create heatmaps. The
function used is

I(x, y) =

(cid:40)

I0
d((x,y),(x0,y0))
I0

d (cid:54)= 0

d = 0

(1)

Where I(x, y) is the intensity at the point (x, y) in the
image, I0 is the maximum intensity, which is at the cen-
ter of the face under consideration. This intensity is ob-
tained by using the methodology as described in section 3.2.
)) is the distance function that calculates the
d((x, y), (x
city block distance between the points (x, y) and (x
).
More speciﬁcally,

, y

, y

(cid:48)

(cid:48)

(cid:48)

(cid:48)

d((x, y), (x(cid:48), y(cid:48))) = 0.1 × (|x − x(cid:48)| + |y − y(cid:48)|)

(2)

A distance scaling factor of 0.1 is used to make the in-
tensity decrease gradually with distance instead of an abrupt
decrease with distance.

Using the above function and the process is as described
in section 3.3 and depicted in Fig. 1, we create heatmaps. It
is to be noted that, by using a linear distribution, we discard
both the size of the faces and their position in space. We
train 3-ConvNN on these images.

4.2.2 Gaussian Distribution

Until now, the size of the face did not play a role in deter-
mining the group level emotion. However, as discussed in
[8], large size of faces with smiles play a role in determi-
nation of affect of a group. Keeping this in mind, we use
a bivariate Gaussian distribution to estimate the intensity of
emotion throughout the image. The function which is used
to calculate the intensity I at a point (x, y), is

I(x, y) = I0×exp(

−4 × ln(2) × 0.1 × [(x − x0)2 + (y − y0)2]
r

)

(3)
Where I0 is the intensity value obtained for a face,
(x0, y0) is the center of the face in the image and r is the ra-
dius of the face which is estimated by half the length of the
diagonal of the frame enclosing the face, obtained via face
detection. A scaling factor of 0.1 is again used, to make the
intensity decrease gradually in two dimensional Euclidean
space.

Using the heatmaps generated by using the above
methodology, we 3-ConvNN and AlexNet on the heatmaps.

I(x, y) = I0 ×

exp( −4×ln(2)×0.1×[(x−x0)2+(y−y0)2]
D((xf , yf ), (xc, yc))

r

)

(4)

Where D((xf , yf ), (xc, yc)) is the Euclidean distance
between the center of the face under consideration and the
center of the image, scaled by a factor of 0.01. (xf , yf ) are
the coordinates of the center of the face (estimated by the
center of the bounding box enclosing the face) in the image
and (xc, yc) are the coordinates of the center of the image.
Thus,

D((xf , yf ), (xc, yc)) = 0.01 ×

(xf − xc)2 + (yf − yc)2
(5)
We then train 3-ConvNN and AlexNet on heatmaps ob-

(cid:113)

tained via this method.

4.3. Training CNNs Directly on Images

We also trained the two CNNs described before in Sec-
tion 3.4 on raw images. 3-ConvNN gave a training accuracy
of 54.68% and a validation accuracy of 50.27%. AlexNet,
when directly trained on raw images gave us a training ac-
curacy of 49.57% and a validation accuracy of 44.98%.

Model

Baseline
Averaging
Random Forest
Linear Distrbution
Heatmaps (3-ConvNN)
Gaussian Heatmaps
(3-ConvNN)
Gaussian Heatmaps
(AlexNet)
Normalized Gaussians
(3-ConvNN)
Normalized Gaussians
(AlexNet)
Raw Images
(3-ConvNN)
Raw Images
(AlexNet)

Training
Accuracy
-
44.37%
99.08%

Validation
Accuracy
52.79%
42.38%
48.13%

35.59%

38.62%

56.73%

51.49%

57.81%

55.23%

56.89%

54.67%

54.51%

52.15%

54.68%

50.27%

49.57%

44.98%

Table 2. Performance of Different Models

4.2.3 Gaussians Normalized by Distance to Image

Center

We also investigate the effect of position of faces in the im-
age. In order to take position into account we divide the
intensity obtained at every point by using a Gaussian dis-
tribution by the distance of the center of the face from the
center of the image.

More speciﬁcally, the intensity at a point (x1, y1) is ob-

tained by the following relation:

5. Results and Discussion

Table 2 summarizes the results of various approaches we
used to predict group emotion. Averaging of face level pre-
dictions discards the information of face sizes and their rel-
ative positions in the image. Mean of face level predictions
discarding these context features and not working well is
also discussed in [4] and [21].

Random Forest classiﬁer (4.1.2) gave an accuracy of
99.08% on the training set and an accuracy of 48.13% on the
validation set. Though the Random Forest model performed
better than the previous approach. We were still behind the
baseline accuracy by 4.84%. The classiﬁer was able to cap-
ture complex interplay between various intensities of face
level predictions, but this approach, like the former ignores
face sizes and relative position of faces.

Using a linear distribution to create heatmaps (4.2.1) we
get an accuracy of 35.59% on the training set and 38.62%
on the validation set, when the heatmaps are trained on 3-
ConvNN. Heatmaps created using a Gaussian distribution
(4.2.2) takes the size of the face into consideration. When
using that to train 3-ConvNN, we obtain an accuracy of
56.73% on the training data and 51.49% on the validation
data. Training AlexNet on the same images gave an ac-
curacy of 57.81% and 55.23% on training and validation
datasets respectively.

When the heatmaps obtained by Gaussians normalized
by the distance from the center (4.2.3) are used to train 3-
ConvNN, we achieve an accuracy of 56.89% and 54.67%
respectively on training and validation sets. AlexNet gave
an accuracy of 54.51% and 52.15% respectively.
In this
method, both the faces and their positions from the center
of the image are considered.

Finally, we see that CNNs trained directly on images do

not perform as good as when trained on heatmaps.

6. Conclusion and Future Work

This paper presented a pipeline that was used to predict
the overall emotion of a group of people in an image for
EmotiW 2017 challenge dataset. Ours is a bottom-up ap-
proach. We create heatmaps using face-level predictions
and train ConvNets on them. We demonstrate that training
the CNNs on heatmaps performs better than training them
directly on raw images. We also investigate the effects of
face size and their position in the image and see that their
position does have an impact on the overall affect. Our best
model achieves a validation accuracy of 55.23% which is
2.44% above the baseline.

Our future work includes different combination methods
for heatmaps like the use of manifolds [10].
In addition
to that, We also intend to investigate the effect of relative
distances between faces in groups.

7. Acknowledgement

We thank Balaji Balasubramaniam, Abhishek Sainani
and the reviewers for their valuable comments and feed-
back, which greatly improved our manuscript.

References

[1] S. Barsade and D. Gibson. Group emotion: A view from top

and bottom. 1:81–102, 01 1998.

[2] V. Campos, B. Jou, and X. Gir´o i Nieto. From pixels to
sentiment: Fine-tuning cnns for visual sentiment prediction.
CoRR, abs/1604.03489, 2016.

[3] F. Chollet et al.

Keras.
fchollet/keras, 2015.

https://github.com/

[4] A. Dhall, R. Goecke, and T. Gedeon. Automatic group hap-
piness intensity analysis. IEEE Trans. Affective Computing,
6(1):13–26, 2015.

[5] A. Dhall, R. Goecke, S. Ghosh, J. Joshi, J. Hoey, and
T. Gedeon. From individual to group-level emotion recog-
nition: Emotiw 5.0. In Proceedings of the 19th ACM Inter-
national Conference on Multimodal Interaction, ICMI 2017,
pages 524–528, New York, NY, USA, 2017. ACM.

[6] A. Dhall, R. Goecke, J. Joshi, J. Hoey, and T. Gedeon.
Emotiw 2016: Video and group-level emotion recognition
challenges. In Proceedings of the 18th ACM International
Conference on Multimodal Interaction, ICMI 2016, pages
427–432. ACM, 2016.

[7] A. Dhall, R. Goecke, S. Lucey, and T. Gedeon. Collect-
ing large, richly annotated facial-expression databases from
movies. IEEE MultiMedia, 19(3):34–41, July 2012.

[8] A. Dhall, J. Joshi, K. Sikka, R. Goecke, and N. Sebe. The
more the merrier: Analysing the affect of a group of peo-
ple in images. In 11th IEEE International Conference and
Workshops on Automatic Face and Gesture Recognition, FG
2015, Ljubljana, Slovenia, May 4-8, 2015, pages 1–8, 2015.
[9] I. J. Goodfellow, D. Erhan, P. L. Carrier, A. Courville,
M. Mirza, B. Hamner, W. Cukierski, Y. Tang, D. Thaler,
D.-H. Lee, Y. Zhou, C. Ramaiah, F. Feng, R. Li, X. Wang,
D. Athanasakis, J. Shawe-Taylor, M. Milakov, J. Park,
R. Ionescu, M. Popescu, C. Grozea, J. Bergstra, J. Xie,
L. Romaszko, B. Xu, Z. Chuang, and Y. Bengio. Chal-
lenges in Representation Learning: A Report on Three Ma-
chine Learning Contests, pages 117–124. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

[10] J. Hamm and D. D. Lee. Grassmann discriminant analysis:
A unifying view on subspace-based learning. In Proceedings
of the 25th International Conference on Machine Learning,
ICML ’08, pages 376–383, 2008.

[11] G. B. Huang, M. Ramesh, T. Berg, and E. Learned-Miller.
Labeled faces in the wild: A database for studying face
recognition in unconstrained environments. Technical re-
port, Technical Report 07-49, University of Massachusetts,
Amherst, 2007.

[12] B.-K. Kim, H. Lee, J. Roh, and S.-Y. Lee. Hierarchical com-
mittee of deep cnns with exponentially-weighted decision fu-
sion for static facial expression recognition. In Proceedings
of the 2015 ACM on International Conference on Multimodal
Interaction, pages 427–434. ACM, 2015.

[13] D. E. King. Dlib-ml: A machine learning toolkit. Journal of

Machine Learning Research, 10:1755–1758, 2009.

[14] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. CoRR, abs/1412.6980, 2014.

[15] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,
editors, Advances in Neural Information Processing Systems
25, pages 1097–1105. Curran Associates, Inc., 2012.
[16] G. Levi and T. Hassner. Emotion recognition in the wild via
convolutional neural networks and mapped binary patterns.
In Proc. ACM International Conference on Multimodal In-
teraction (ICMI), November 2015.

[17] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler. Deep
learning for emotion recognition on small datasets using
In Proceedings of the 2015 ACM on In-
transfer learning.
ternational Conference on Multimodal Interaction, Seattle,
WA, USA, November 09 - 13, 2015, pages 443–449, 2015.

[18] T. Ojala, M. Pietik¨ainen, and D. Harwood. A comparative
study of texture measures with classiﬁcation based on fea-
In Pattern Recognition, pages 51–59,
tured distributions.
1996.

[19] T. Ojala, M. Pietik¨ainen, and T. M¨aenp¨a¨a. A generalized
local binary pattern operator for multiresolution gray scale
and rotation invariant texture classiﬁcation. In International
Conference on Advances in Pattern Recognition, pages 399–
408, 2001.

[20] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[21] V. Vonikakis, Y. Yazici, V. Nguyen, and S. Winkler. Group
happiness assessment using geometric features and dataset
In Proceedings of the 18th ACM International
balancing.
Conference on Multimodal Interaction, ICMI 2016, Tokyo,
Japan, November 12-16, 2016, pages 479–486, 2016.
[22] J. Wu and J. M. Rehg. Centrist: A visual descriptor for scene
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 33(8):1489–1501, Aug 2011.

[23] Z. Yu and C. Zhang.

Image based static facial expression
In Pro-
recognition with multiple deep network learning.
ceedings of the 2015 ACM on International Conference on
Multimodal Interaction, ICMI ’15, pages 435–442. ACM,
2015.

[24] L. Zhang, D. Tjondronegoro, and V. Chandran. Represen-
tation of facial expression categories in continuous arousal–
Image and Vision
valence space: feature and correlation.
Computing, 32(12):1067–1079, 2014.

Group Affect Prediction Using Multimodal Distributions

Saqib Nizam Shamsi
Aspiring Minds
shamsi.saqib@gmail.com

Bhanu Pratap Singh
Univeristy of Massachusetts, Amherst
bhanupratap.mnit@gmail.com

Manya Wadhwa
Johns Hopkins University
mwadhwa1@jhu.edu

8
1
0
2
 
r
a

M
 
2
1
 
 
]

V
C
.
s
c
[
 
 
2
v
6
1
2
1
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

We describe our approach towards building an efﬁcient
predictive model to detect emotions for a group of people in
an image. We have proposed that training a Convolutional
Neural Network (CNN) model on the emotion heatmaps ex-
tracted from the image, outperforms a CNN model trained
entirely on the raw images. The comparison of the mod-
els have been done on a recently published dataset of Emo-
tion Recognition in the Wild (EmotiW) challenge, 2017. The
proposed method 1 achieved validation accuracy of 55.23%
which is 2.44% above the baseline accuracy, provided by
the EmotiW organizers.

1. Introduction

Emotion categorization of a face has always been an in-
teresting problem and researchers have developed various
approaches to solve this problem effectively. Categorizing
the emotion of an image which contains multiple people
has also gained attention [6]. The images are of real-life
scenarios such as an image of a protest or of children play-
ing in a park or some friends sitting and having a discus-
sion. The problem becomes more difﬁcult than emotion
categorization of a facial image because one needs to ad-
dress multiple sub-problems. For instance, the backgrounds
of images might be starkly different from each other, the
faces of the people may be occluded or they might not be
facing the camera. Single-faced images are usually front-
facing images in which faces are easier to crop out from the
original image [9]. With more pictures being posted every
day on social media sites such as Instagram and Facebook,
this problem has interesting applications such as analyzing
the emotion of a group of people attending an event which
could prove helpful in tagging the pictures automatically.

In this paper, we discuss our approach for predicting the
emotion of a group of people in an image. The goal is to
build a model which could classify the emotion of a group
of people in an image into one of the three classes: positive,

1Code

is
approach
https://github.com/saqibns/cv-aal-2018

experiments

and

the

for

available

at:

negative and neutral. The dataset, also known as Group Af-
fect Database 2.0 [8], contains images from different social
events in all the three classes such as convocations, mar-
riages, meetings and funerals. The dataset was a part of a
challenge, which included different sub-problems from pre-
vious challenges. Like the 4th EmotiW challenge, where the
goal was to predict the happiness index of a group image,
this challenge dealt with group images. It was also similar
to the 3rd EmotiW challenge, where the goal was to predict
the emotion of a single face in an image. The difference
was that there were seven categories of emotions in the 3rd
EmotiW challenge. In this challenge there was a group of
people in an image and the emotion of the image was to be
classiﬁed into one of the three classes: Positive, Netural and
Negative.

Researchers have used many interesting approaches for
this problem, such as in [24], the researchers had tried a di-
mensional approach where facial expressions were treated
as a regression problem in the Arousal-Valence space. In
[17], a two-stage ﬁne-tuning was applied on deep CNN
while doing transfer learning. In [23], multiple deep net-
work training layers are utilized for emotion prediction for
the 3rd EmotiW challenge. It is interesting to see that all
the three winners of the 3rd EmotiW challenge utilized deep
learning networks in their techniques [23][17][12]. This in-
dicated that deep networks could be helpful for the dataset
of the 5th challenge as well. The main difference was in the
aggregation of emotions of multiple people from the image
to predict the mood/expression of the image in general.

In this paper, we use a bottom-up [1] approach for
emotion detection. We perform face level emotion detec-
tion. We then experiment with average estimations (section
4.1.1) but as discussed in [4], which is also mentioned in
[21], averaging is not a reliable measure to predict group
level emotion. We also train random forests (section 4.1.2)
but the performance leaves much to be desired. Next, we
use the face level detections and combine individual im-
ages by constructing heatmaps for emotion intensity. We
then train Convolutional Neural Networks on the heatmaps
(section 4.2). As mentioned in [8], large size of faces with
smiles play a role in determination of affect of a group. For

example, a face closer to the camera, thus having a bigger
size, would have more contribution towards the overall af-
fect of the image as compared to the one that is farther away
and is thus smaller. To that end, we create heatmaps which
are normalized by the distance to the center of the image and
use them to train CNNs (section 4.2.3). Finally, we demon-
strate that training CNNs on heatmaps gives better results
than training them on raw images (section 4.3).

2. Dataset

The group emotion recognition dataset [7] was provided
as a part of 5th EmotiW challenge [6]. The dataset was di-
vided into three parts: train, validation and test. However,
we use only the training and validation sets for the current
work. This is because the test set is unlabeled and was to
be used to judge submissions of the challenge. Since it was
unlabeled we could not use it to judge the performance of
our models.

Each set consists of three type of group images: images
with positive emotion such as of marriages and party, neu-
tral images such as of meetings and images with negative
emotion such as of protests and funerals. The distribution
of images in each of the sets is presented in table 1.

For training the networks, we divide the training set into
two parts out of which one is used for training the network
and the other is used as a hold-out set for model selection.
We use stratiﬁed sampling and pick 10% of the images from
the training set to create the hold-out set. We train mod-
els for 100 epochs and ﬁnally pick the one which performs
the best on the held out set. Finally, we see how various
models perform against the baseline of 52.79% [5] on the
validation set, provided by the challenge organizers. The
baseline was obtained by training a Support Vector Regres-
sion model with a non-linear Chi-square kernel on CENsus
TRansform hISTogram (CENTRIST) descriptor [22].

Emotion
Train
Validation

Positive Neutral Negative Total
3630
2065

1159
564

1272
773

1199
728

Table 1. 5th EmotiW Challenge Dataset

3. Pipeline

3.1. Face Detection and Cropping

In order to predict the emotion of an image, we need to
detect the emotion of each face in the image. The emotions
of individual faces in the image would aid us in predicting
the ﬁnal emotion of the image. We used a popular C++
toolkit, Dlib [13] for this purpose. Dlib toolkit contains pre-
trained models for face detection in an image. It provides
the coordinates of a rectangular frame that ﬁts the face. The
frame coordinates are then used to crop faces from images.

Figure 1. Image Preprocessing Pipeline. From the image, faces are
extracted (second row). For every face, all the three categories of
emotion are estimated. Gaussain kernels are centered on each face
(third, fourth and ﬁfth rows). The kernels for the three categories
are stacked to form an RGB image (sixth row) with the distribution
for Negative emotion forming the red channel (ﬁfth row) and the
distributions for Neutral and Positive emotions forming the green
and the blue channels respectively (fourth and third rows). The
middle image (sixth row) has a different color than the other two,
since the intensities of emotions predicted for the middle face dif-
fer from the other two. Note, that the third heatmap (rightmost) in
the sixth row is slightly bigger than the other two, since the face
in the image is larger. Finally, the RGB images obtained for each
face are added to get a combined heatmap (last row).

An example of face detection in an image via Dlib has been
shown in Fig 1

3.2. Emotion Detection For Individual Faces

3.3.2 Creation of Heatmap

The second step towards solving the problem is to detect
emotion of every face detected in section 3.1 above. Detec-
tion of emotion of a face is an open problem. To get the
predictions for every face, we use a pre-trained model by
Levi and Hassner [16]. The advantage of using this model
is that it is trained on Faces In The Wild dataset [11] so
it incorporates faces in different angles, tones, lighting con-
ditions, partially occluded faces etc. It is an ensemble of
ﬁve models. The models are VGG [20] networks which
have been trained on Local Binary Patterns [18] [19]. For
a given face, the ﬁve models give scores for the seven stan-
dard emotions, Anger, Disgust, Fear, Happy, Neutral, Sad
and Surprise. The resulting scores for the seven emotions
are obtained by averaging the predictions of all models. We
then use the values of Happy for Positive class, Neutral for
Neutral class and an average of Anger, Disgust, Fear and
Sad for the Negative class. The value for Surprise predicted
by the model was not used since it was difﬁcult to determine
which category it should belong to owing to its ambiguous
nature.

3.3. Inferring Group Emotions

Now we arrive at the core problem of this challenge,
which is to infer group emotion. We combine the predic-
tions obtained for individual faces, as obtained in section
3.2 to make predictions for the group of people in the image.
For this we use the concept of heatmaps which is described
in sections 3.3.1 and 3.3.2.

3.3.1 Interpolation

For the predicted value of emotion of each face in an image,
we construct its corresponding emotion heatmaps. We have
used linear distribution and bivariate Gaussian distribution
to create the heatmaps in our experiments. Each distribution
is created using the value of the emotion predicted in sec-
tion 3.2 as the value at center. For the bivariate Gaussian,
the radius of the face (approximated by calculating half the
length of the diagonal of the frame of the face, obtained
in section 3.1) becomes the Full Width at Half Maximum
(FWHM). Each heatmap represents intensity of emotion for
a face distributed in a 2D Euclidean space. The distribution
is centered at the face. The size of the 2D space in which
the heatmap is generated is same as the size of the image.
This technique of representing emotions is useful as it al-
lows us to easily combine the values obtained in section 3.2
for multiple faces, and also perform distance based compu-
tations as discussed later in the experiments section.

The distributions for each of the detected face are then com-
bined to form one ﬁnal image.
It is done in three steps.
First, we create three matrices (corresponding to each emo-
tion) using the method described in the previous section for
each face. The second step is to form a combined spatial
distribution for each of the three classes. This is done by
stacking the heatmap matrix on top of one another. The
three heatmaps form the red, green and blue channels of an
RGB image. For our experiments we have arbitrarily cho-
sen the red channel for the negative emotion, green channel
for neutral emotion and blue channel for positive emotion.
The ﬁnal step is to add the RGB image tensors obtained for
each face to form a combined RGB image. The entire ﬂow
of generating a heatmap for an image has been illustrated in
Figure 1.

Figure 2. 3-ConvNN architecture

3.4. Training Convolutional Neural Networks on

Heatmaps

The size of the images in the EmotiW dataset varies con-
siderably. We ﬁrst pre-process the images into heatmaps,
as described in 3.3, and then resize the images into 256 ×
256 × 3 using Python Imaging Library (PIL), since we
train Convolutional Neural Networks (CNNs), which re-
quire an input of ﬁxed size. We also perform data aug-
mentation/oversampling on the generated heatmaps using
Keras’[3] image pre-processing to deal with dataset bias[2].
The augmentations done are random rotations with a range
of 40 degrees, random horizontal shifts in the range of 20%
of the total width, random vertical shifts in the range of 20%
of the total height, rescaling the pixel values by a factor of
0.01, using a shear intensity and zoom intensity of 0.2, ran-
dom horizontal ﬂips and using the ”nearest” ﬁll mode.

Next, we train two different Convolutional Neural Net-
works, the ﬁrst of which contains four layers, three of which
are convolutional layers and the fourth is a fully connected
layer, as depicted in Figure 2. We shall refer to it as 3-
ConvNN throughout the paper. The ﬁrst layer of the net-
work takes in images of dimensions 256×256×3. The ﬁrst
layer consists of 32 ﬁlters with a kernel size of 3 × 3 × 3. It

is followed by a max pooling layer of size 2 × 2 × 3. The
second convolution layer is the same as the ﬁrst one. The
third layer consists of 64 ﬁlters with a kernel size of 3×3×3
followed by a 2 × 2 × 3 max pooling layer. The output of
this layer is then ﬂattened and fed to a fully connected layer
of size 3. We also use dropout with a rate of 0.5. All the
layers in the network use Rectiﬁer Linear Unit (ReLU) ac-
tivation. We use Adam [14] for model optimization. The
network minimizes categorical cross entropy loss.

Figure 3. AlexNet Architecture.

The second network is AlextNet as described in [15].
It takes input with dimensions 227 × 227 × 3. The ﬁrst
convolutional layer contains 96 ﬁlters and a kernel size of
11 × 11 × 3 and a stride of 4 pixels. It is followed by a max
pooling layer of size 3 × 3 × 3 with a stride of 2 pixels. We
then perform batch normalization. Next is a sequence of a
zero padding layer of 1 pixel followed by a convolutional
layer of 384 ﬁlters and a kernel size of 3 × 3 × 3 and a stride
of 1 pixel. This sequence is repeated again and is followed
by a zero padding layer of size 1 and a convolutional layer
of 256 ﬁlters, a kernel size of 3 × 3 × 3 with a stride of 1
pixel. Next, is a max pooling layer of size 3 × 3 × 3 and
a stride of 2 pixels. The output of the max pooling layer
is ﬂattened and is fed to a dense layer of 4096 units. A
dropout with a rate of 0.5 is used next. A dense layer of
4096 units follows next with which is again followed by a
dropout with a rate of 0.5. The ﬁnal layer is a softmax layer
with 3 units. All the previous laye rs use ReLU activation.
The architecture has been illustrated in the Figure 3. The
model minimizes categorical cross entropy loss. We use
Stochatic Gradient Descent (SGD) for model optimization
with a learning rate of 0.01, momentum of 0.9 and a weight
decay of 5 × 10−4.

The entire approach has been illustrated in Fig 4

Figure 4. Pipeline of our approach

4.1. Using Face Level Predictions Directly

4.1.1 Averaging

It is one of the simplest approaches that can be used. We
take average of 7-dimensional vectors obtained for all the
faces in the image. The emotion with the highest mean
value is used as the overall prediction. Anger, Disgust, Fear,
Sadness and Surprise as categorised as Negative, Neutral
and Happy are categorised as Neutral and Positive respec-
tively. However, as discussed in [4], which is also men-
tioned in [21], averaging is not a reliable measure to predict
group level emotion. Upon averaging the face level predic-
tions, we obtained an accuracy of 44.37% on the training
set and an accuracy of 42.38% on the validation set.

4.1.2 Random Forest

We next trained a Random Forest classiﬁer (15 estimators)
using the averaged 7-dimensional vector obtained for an im-
age. Using Random Forest classiﬁer we achieved an ac-
curacy of 99.08% on the training set and an accuracy of
48.13% on the validation set.

4.2. Training Convolutional Neural Networks on

Heatmaps

In this subsection we discuss our experiments using the
generated heatmaps. Converting images into heatmaps (as
discussed in section 3.3) based on face level predictions
served two purposes. Firstly, it allowed the ConvNets to
focus on isolated face level information by removing the
additional information present in the image like the overall
scene information. Secondly, it allowed us to perform ex-
periments by considering face sizes and position of faces in
space as variables. As we shall see later, taking these factors
into account affects the predictions.

4. Experimental Analysis

4.2.1 Linear Distribution

We now describe a series of experiments performed us-
ing raw images as well as the predictions obtained for every
face by running the pre-trained model [16]. The experi-
ments in sections 4.1 and 4.2 were done to obtain the group
level prediction using predictions for individual faces.

We ﬁrst use a linear distribution to create heatmaps. The
function used is

I(x, y) =

(cid:40)

I0
d((x,y),(x0,y0))
I0

d (cid:54)= 0

d = 0

(1)

Where I(x, y) is the intensity at the point (x, y) in the
image, I0 is the maximum intensity, which is at the cen-
ter of the face under consideration. This intensity is ob-
tained by using the methodology as described in section 3.2.
)) is the distance function that calculates the
d((x, y), (x
city block distance between the points (x, y) and (x
).
More speciﬁcally,

, y

, y

(cid:48)

(cid:48)

(cid:48)

(cid:48)

d((x, y), (x(cid:48), y(cid:48))) = 0.1 × (|x − x(cid:48)| + |y − y(cid:48)|)

(2)

A distance scaling factor of 0.1 is used to make the in-
tensity decrease gradually with distance instead of an abrupt
decrease with distance.

Using the above function and the process is as described
in section 3.3 and depicted in Fig. 1, we create heatmaps. It
is to be noted that, by using a linear distribution, we discard
both the size of the faces and their position in space. We
train 3-ConvNN on these images.

4.2.2 Gaussian Distribution

Until now, the size of the face did not play a role in deter-
mining the group level emotion. However, as discussed in
[8], large size of faces with smiles play a role in determi-
nation of affect of a group. Keeping this in mind, we use
a bivariate Gaussian distribution to estimate the intensity of
emotion throughout the image. The function which is used
to calculate the intensity I at a point (x, y), is

I(x, y) = I0×exp(

−4 × ln(2) × 0.1 × [(x − x0)2 + (y − y0)2]
r

)

(3)
Where I0 is the intensity value obtained for a face,
(x0, y0) is the center of the face in the image and r is the ra-
dius of the face which is estimated by half the length of the
diagonal of the frame enclosing the face, obtained via face
detection. A scaling factor of 0.1 is again used, to make the
intensity decrease gradually in two dimensional Euclidean
space.

Using the heatmaps generated by using the above
methodology, we 3-ConvNN and AlexNet on the heatmaps.

I(x, y) = I0 ×

exp( −4×ln(2)×0.1×[(x−x0)2+(y−y0)2]
D((xf , yf ), (xc, yc))

r

)

(4)

Where D((xf , yf ), (xc, yc)) is the Euclidean distance
between the center of the face under consideration and the
center of the image, scaled by a factor of 0.01. (xf , yf ) are
the coordinates of the center of the face (estimated by the
center of the bounding box enclosing the face) in the image
and (xc, yc) are the coordinates of the center of the image.
Thus,

D((xf , yf ), (xc, yc)) = 0.01 ×

(xf − xc)2 + (yf − yc)2
(5)
We then train 3-ConvNN and AlexNet on heatmaps ob-

(cid:113)

tained via this method.

4.3. Training CNNs Directly on Images

We also trained the two CNNs described before in Sec-
tion 3.4 on raw images. 3-ConvNN gave a training accuracy
of 54.68% and a validation accuracy of 50.27%. AlexNet,
when directly trained on raw images gave us a training ac-
curacy of 49.57% and a validation accuracy of 44.98%.

Model

Baseline
Averaging
Random Forest
Linear Distrbution
Heatmaps (3-ConvNN)
Gaussian Heatmaps
(3-ConvNN)
Gaussian Heatmaps
(AlexNet)
Normalized Gaussians
(3-ConvNN)
Normalized Gaussians
(AlexNet)
Raw Images
(3-ConvNN)
Raw Images
(AlexNet)

Training
Accuracy
-
44.37%
99.08%

Validation
Accuracy
52.79%
42.38%
48.13%

35.59%

38.62%

56.73%

51.49%

57.81%

55.23%

56.89%

54.67%

54.51%

52.15%

54.68%

50.27%

49.57%

44.98%

Table 2. Performance of Different Models

4.2.3 Gaussians Normalized by Distance to Image

Center

We also investigate the effect of position of faces in the im-
age. In order to take position into account we divide the
intensity obtained at every point by using a Gaussian dis-
tribution by the distance of the center of the face from the
center of the image.

More speciﬁcally, the intensity at a point (x1, y1) is ob-

tained by the following relation:

5. Results and Discussion

Table 2 summarizes the results of various approaches we
used to predict group emotion. Averaging of face level pre-
dictions discards the information of face sizes and their rel-
ative positions in the image. Mean of face level predictions
discarding these context features and not working well is
also discussed in [4] and [21].

Random Forest classiﬁer (4.1.2) gave an accuracy of
99.08% on the training set and an accuracy of 48.13% on the
validation set. Though the Random Forest model performed
better than the previous approach. We were still behind the
baseline accuracy by 4.84%. The classiﬁer was able to cap-
ture complex interplay between various intensities of face
level predictions, but this approach, like the former ignores
face sizes and relative position of faces.

Using a linear distribution to create heatmaps (4.2.1) we
get an accuracy of 35.59% on the training set and 38.62%
on the validation set, when the heatmaps are trained on 3-
ConvNN. Heatmaps created using a Gaussian distribution
(4.2.2) takes the size of the face into consideration. When
using that to train 3-ConvNN, we obtain an accuracy of
56.73% on the training data and 51.49% on the validation
data. Training AlexNet on the same images gave an ac-
curacy of 57.81% and 55.23% on training and validation
datasets respectively.

When the heatmaps obtained by Gaussians normalized
by the distance from the center (4.2.3) are used to train 3-
ConvNN, we achieve an accuracy of 56.89% and 54.67%
respectively on training and validation sets. AlexNet gave
an accuracy of 54.51% and 52.15% respectively.
In this
method, both the faces and their positions from the center
of the image are considered.

Finally, we see that CNNs trained directly on images do

not perform as good as when trained on heatmaps.

6. Conclusion and Future Work

This paper presented a pipeline that was used to predict
the overall emotion of a group of people in an image for
EmotiW 2017 challenge dataset. Ours is a bottom-up ap-
proach. We create heatmaps using face-level predictions
and train ConvNets on them. We demonstrate that training
the CNNs on heatmaps performs better than training them
directly on raw images. We also investigate the effects of
face size and their position in the image and see that their
position does have an impact on the overall affect. Our best
model achieves a validation accuracy of 55.23% which is
2.44% above the baseline.

Our future work includes different combination methods
for heatmaps like the use of manifolds [10].
In addition
to that, We also intend to investigate the effect of relative
distances between faces in groups.

7. Acknowledgement

We thank Balaji Balasubramaniam, Abhishek Sainani
and the reviewers for their valuable comments and feed-
back, which greatly improved our manuscript.

References

[1] S. Barsade and D. Gibson. Group emotion: A view from top

and bottom. 1:81–102, 01 1998.

[2] V. Campos, B. Jou, and X. Gir´o i Nieto. From pixels to
sentiment: Fine-tuning cnns for visual sentiment prediction.
CoRR, abs/1604.03489, 2016.

[3] F. Chollet et al.

Keras.
fchollet/keras, 2015.

https://github.com/

[4] A. Dhall, R. Goecke, and T. Gedeon. Automatic group hap-
piness intensity analysis. IEEE Trans. Affective Computing,
6(1):13–26, 2015.

[5] A. Dhall, R. Goecke, S. Ghosh, J. Joshi, J. Hoey, and
T. Gedeon. From individual to group-level emotion recog-
nition: Emotiw 5.0. In Proceedings of the 19th ACM Inter-
national Conference on Multimodal Interaction, ICMI 2017,
pages 524–528, New York, NY, USA, 2017. ACM.

[6] A. Dhall, R. Goecke, J. Joshi, J. Hoey, and T. Gedeon.
Emotiw 2016: Video and group-level emotion recognition
challenges. In Proceedings of the 18th ACM International
Conference on Multimodal Interaction, ICMI 2016, pages
427–432. ACM, 2016.

[7] A. Dhall, R. Goecke, S. Lucey, and T. Gedeon. Collect-
ing large, richly annotated facial-expression databases from
movies. IEEE MultiMedia, 19(3):34–41, July 2012.

[8] A. Dhall, J. Joshi, K. Sikka, R. Goecke, and N. Sebe. The
more the merrier: Analysing the affect of a group of peo-
ple in images. In 11th IEEE International Conference and
Workshops on Automatic Face and Gesture Recognition, FG
2015, Ljubljana, Slovenia, May 4-8, 2015, pages 1–8, 2015.
[9] I. J. Goodfellow, D. Erhan, P. L. Carrier, A. Courville,
M. Mirza, B. Hamner, W. Cukierski, Y. Tang, D. Thaler,
D.-H. Lee, Y. Zhou, C. Ramaiah, F. Feng, R. Li, X. Wang,
D. Athanasakis, J. Shawe-Taylor, M. Milakov, J. Park,
R. Ionescu, M. Popescu, C. Grozea, J. Bergstra, J. Xie,
L. Romaszko, B. Xu, Z. Chuang, and Y. Bengio. Chal-
lenges in Representation Learning: A Report on Three Ma-
chine Learning Contests, pages 117–124. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

[10] J. Hamm and D. D. Lee. Grassmann discriminant analysis:
A unifying view on subspace-based learning. In Proceedings
of the 25th International Conference on Machine Learning,
ICML ’08, pages 376–383, 2008.

[11] G. B. Huang, M. Ramesh, T. Berg, and E. Learned-Miller.
Labeled faces in the wild: A database for studying face
recognition in unconstrained environments. Technical re-
port, Technical Report 07-49, University of Massachusetts,
Amherst, 2007.

[12] B.-K. Kim, H. Lee, J. Roh, and S.-Y. Lee. Hierarchical com-
mittee of deep cnns with exponentially-weighted decision fu-
sion for static facial expression recognition. In Proceedings
of the 2015 ACM on International Conference on Multimodal
Interaction, pages 427–434. ACM, 2015.

[13] D. E. King. Dlib-ml: A machine learning toolkit. Journal of

Machine Learning Research, 10:1755–1758, 2009.

[14] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. CoRR, abs/1412.6980, 2014.

[15] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,
editors, Advances in Neural Information Processing Systems
25, pages 1097–1105. Curran Associates, Inc., 2012.
[16] G. Levi and T. Hassner. Emotion recognition in the wild via
convolutional neural networks and mapped binary patterns.
In Proc. ACM International Conference on Multimodal In-
teraction (ICMI), November 2015.

[17] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler. Deep
learning for emotion recognition on small datasets using
In Proceedings of the 2015 ACM on In-
transfer learning.
ternational Conference on Multimodal Interaction, Seattle,
WA, USA, November 09 - 13, 2015, pages 443–449, 2015.

[18] T. Ojala, M. Pietik¨ainen, and D. Harwood. A comparative
study of texture measures with classiﬁcation based on fea-
In Pattern Recognition, pages 51–59,
tured distributions.
1996.

[19] T. Ojala, M. Pietik¨ainen, and T. M¨aenp¨a¨a. A generalized
local binary pattern operator for multiresolution gray scale
and rotation invariant texture classiﬁcation. In International
Conference on Advances in Pattern Recognition, pages 399–
408, 2001.

[20] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[21] V. Vonikakis, Y. Yazici, V. Nguyen, and S. Winkler. Group
happiness assessment using geometric features and dataset
In Proceedings of the 18th ACM International
balancing.
Conference on Multimodal Interaction, ICMI 2016, Tokyo,
Japan, November 12-16, 2016, pages 479–486, 2016.
[22] J. Wu and J. M. Rehg. Centrist: A visual descriptor for scene
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 33(8):1489–1501, Aug 2011.

[23] Z. Yu and C. Zhang.

Image based static facial expression
In Pro-
recognition with multiple deep network learning.
ceedings of the 2015 ACM on International Conference on
Multimodal Interaction, ICMI ’15, pages 435–442. ACM,
2015.

[24] L. Zhang, D. Tjondronegoro, and V. Chandran. Represen-
tation of facial expression categories in continuous arousal–
Image and Vision
valence space: feature and correlation.
Computing, 32(12):1067–1079, 2014.

Group Affect Prediction Using Multimodal Distributions

Saqib Nizam Shamsi
Aspiring Minds
shamsi.saqib@gmail.com

Bhanu Pratap Singh
Univeristy of Massachusetts, Amherst
bhanupratap.mnit@gmail.com

Manya Wadhwa
Johns Hopkins University
mwadhwa1@jhu.edu

8
1
0
2
 
r
a

M
 
2
1
 
 
]

V
C
.
s
c
[
 
 
2
v
6
1
2
1
0
.
0
1
7
1
:
v
i
X
r
a

Abstract

We describe our approach towards building an efﬁcient
predictive model to detect emotions for a group of people in
an image. We have proposed that training a Convolutional
Neural Network (CNN) model on the emotion heatmaps ex-
tracted from the image, outperforms a CNN model trained
entirely on the raw images. The comparison of the mod-
els have been done on a recently published dataset of Emo-
tion Recognition in the Wild (EmotiW) challenge, 2017. The
proposed method 1 achieved validation accuracy of 55.23%
which is 2.44% above the baseline accuracy, provided by
the EmotiW organizers.

1. Introduction

Emotion categorization of a face has always been an in-
teresting problem and researchers have developed various
approaches to solve this problem effectively. Categorizing
the emotion of an image which contains multiple people
has also gained attention [6]. The images are of real-life
scenarios such as an image of a protest or of children play-
ing in a park or some friends sitting and having a discus-
sion. The problem becomes more difﬁcult than emotion
categorization of a facial image because one needs to ad-
dress multiple sub-problems. For instance, the backgrounds
of images might be starkly different from each other, the
faces of the people may be occluded or they might not be
facing the camera. Single-faced images are usually front-
facing images in which faces are easier to crop out from the
original image [9]. With more pictures being posted every
day on social media sites such as Instagram and Facebook,
this problem has interesting applications such as analyzing
the emotion of a group of people attending an event which
could prove helpful in tagging the pictures automatically.

In this paper, we discuss our approach for predicting the
emotion of a group of people in an image. The goal is to
build a model which could classify the emotion of a group
of people in an image into one of the three classes: positive,

1Code

is
approach
https://github.com/saqibns/cv-aal-2018

experiments

and

the

for

available

at:

negative and neutral. The dataset, also known as Group Af-
fect Database 2.0 [8], contains images from different social
events in all the three classes such as convocations, mar-
riages, meetings and funerals. The dataset was a part of a
challenge, which included different sub-problems from pre-
vious challenges. Like the 4th EmotiW challenge, where the
goal was to predict the happiness index of a group image,
this challenge dealt with group images. It was also similar
to the 3rd EmotiW challenge, where the goal was to predict
the emotion of a single face in an image. The difference
was that there were seven categories of emotions in the 3rd
EmotiW challenge. In this challenge there was a group of
people in an image and the emotion of the image was to be
classiﬁed into one of the three classes: Positive, Netural and
Negative.

Researchers have used many interesting approaches for
this problem, such as in [24], the researchers had tried a di-
mensional approach where facial expressions were treated
as a regression problem in the Arousal-Valence space. In
[17], a two-stage ﬁne-tuning was applied on deep CNN
while doing transfer learning. In [23], multiple deep net-
work training layers are utilized for emotion prediction for
the 3rd EmotiW challenge. It is interesting to see that all
the three winners of the 3rd EmotiW challenge utilized deep
learning networks in their techniques [23][17][12]. This in-
dicated that deep networks could be helpful for the dataset
of the 5th challenge as well. The main difference was in the
aggregation of emotions of multiple people from the image
to predict the mood/expression of the image in general.

In this paper, we use a bottom-up [1] approach for
emotion detection. We perform face level emotion detec-
tion. We then experiment with average estimations (section
4.1.1) but as discussed in [4], which is also mentioned in
[21], averaging is not a reliable measure to predict group
level emotion. We also train random forests (section 4.1.2)
but the performance leaves much to be desired. Next, we
use the face level detections and combine individual im-
ages by constructing heatmaps for emotion intensity. We
then train Convolutional Neural Networks on the heatmaps
(section 4.2). As mentioned in [8], large size of faces with
smiles play a role in determination of affect of a group. For

example, a face closer to the camera, thus having a bigger
size, would have more contribution towards the overall af-
fect of the image as compared to the one that is farther away
and is thus smaller. To that end, we create heatmaps which
are normalized by the distance to the center of the image and
use them to train CNNs (section 4.2.3). Finally, we demon-
strate that training CNNs on heatmaps gives better results
than training them on raw images (section 4.3).

2. Dataset

The group emotion recognition dataset [7] was provided
as a part of 5th EmotiW challenge [6]. The dataset was di-
vided into three parts: train, validation and test. However,
we use only the training and validation sets for the current
work. This is because the test set is unlabeled and was to
be used to judge submissions of the challenge. Since it was
unlabeled we could not use it to judge the performance of
our models.

Each set consists of three type of group images: images
with positive emotion such as of marriages and party, neu-
tral images such as of meetings and images with negative
emotion such as of protests and funerals. The distribution
of images in each of the sets is presented in table 1.

For training the networks, we divide the training set into
two parts out of which one is used for training the network
and the other is used as a hold-out set for model selection.
We use stratiﬁed sampling and pick 10% of the images from
the training set to create the hold-out set. We train mod-
els for 100 epochs and ﬁnally pick the one which performs
the best on the held out set. Finally, we see how various
models perform against the baseline of 52.79% [5] on the
validation set, provided by the challenge organizers. The
baseline was obtained by training a Support Vector Regres-
sion model with a non-linear Chi-square kernel on CENsus
TRansform hISTogram (CENTRIST) descriptor [22].

Emotion
Train
Validation

Positive Neutral Negative Total
3630
2065

1159
564

1272
773

1199
728

Table 1. 5th EmotiW Challenge Dataset

3. Pipeline

3.1. Face Detection and Cropping

In order to predict the emotion of an image, we need to
detect the emotion of each face in the image. The emotions
of individual faces in the image would aid us in predicting
the ﬁnal emotion of the image. We used a popular C++
toolkit, Dlib [13] for this purpose. Dlib toolkit contains pre-
trained models for face detection in an image. It provides
the coordinates of a rectangular frame that ﬁts the face. The
frame coordinates are then used to crop faces from images.

Figure 1. Image Preprocessing Pipeline. From the image, faces are
extracted (second row). For every face, all the three categories of
emotion are estimated. Gaussain kernels are centered on each face
(third, fourth and ﬁfth rows). The kernels for the three categories
are stacked to form an RGB image (sixth row) with the distribution
for Negative emotion forming the red channel (ﬁfth row) and the
distributions for Neutral and Positive emotions forming the green
and the blue channels respectively (fourth and third rows). The
middle image (sixth row) has a different color than the other two,
since the intensities of emotions predicted for the middle face dif-
fer from the other two. Note, that the third heatmap (rightmost) in
the sixth row is slightly bigger than the other two, since the face
in the image is larger. Finally, the RGB images obtained for each
face are added to get a combined heatmap (last row).

An example of face detection in an image via Dlib has been
shown in Fig 1

3.2. Emotion Detection For Individual Faces

3.3.2 Creation of Heatmap

The second step towards solving the problem is to detect
emotion of every face detected in section 3.1 above. Detec-
tion of emotion of a face is an open problem. To get the
predictions for every face, we use a pre-trained model by
Levi and Hassner [16]. The advantage of using this model
is that it is trained on Faces In The Wild dataset [11] so
it incorporates faces in different angles, tones, lighting con-
ditions, partially occluded faces etc. It is an ensemble of
ﬁve models. The models are VGG [20] networks which
have been trained on Local Binary Patterns [18] [19]. For
a given face, the ﬁve models give scores for the seven stan-
dard emotions, Anger, Disgust, Fear, Happy, Neutral, Sad
and Surprise. The resulting scores for the seven emotions
are obtained by averaging the predictions of all models. We
then use the values of Happy for Positive class, Neutral for
Neutral class and an average of Anger, Disgust, Fear and
Sad for the Negative class. The value for Surprise predicted
by the model was not used since it was difﬁcult to determine
which category it should belong to owing to its ambiguous
nature.

3.3. Inferring Group Emotions

Now we arrive at the core problem of this challenge,
which is to infer group emotion. We combine the predic-
tions obtained for individual faces, as obtained in section
3.2 to make predictions for the group of people in the image.
For this we use the concept of heatmaps which is described
in sections 3.3.1 and 3.3.2.

3.3.1 Interpolation

For the predicted value of emotion of each face in an image,
we construct its corresponding emotion heatmaps. We have
used linear distribution and bivariate Gaussian distribution
to create the heatmaps in our experiments. Each distribution
is created using the value of the emotion predicted in sec-
tion 3.2 as the value at center. For the bivariate Gaussian,
the radius of the face (approximated by calculating half the
length of the diagonal of the frame of the face, obtained
in section 3.1) becomes the Full Width at Half Maximum
(FWHM). Each heatmap represents intensity of emotion for
a face distributed in a 2D Euclidean space. The distribution
is centered at the face. The size of the 2D space in which
the heatmap is generated is same as the size of the image.
This technique of representing emotions is useful as it al-
lows us to easily combine the values obtained in section 3.2
for multiple faces, and also perform distance based compu-
tations as discussed later in the experiments section.

The distributions for each of the detected face are then com-
bined to form one ﬁnal image.
It is done in three steps.
First, we create three matrices (corresponding to each emo-
tion) using the method described in the previous section for
each face. The second step is to form a combined spatial
distribution for each of the three classes. This is done by
stacking the heatmap matrix on top of one another. The
three heatmaps form the red, green and blue channels of an
RGB image. For our experiments we have arbitrarily cho-
sen the red channel for the negative emotion, green channel
for neutral emotion and blue channel for positive emotion.
The ﬁnal step is to add the RGB image tensors obtained for
each face to form a combined RGB image. The entire ﬂow
of generating a heatmap for an image has been illustrated in
Figure 1.

Figure 2. 3-ConvNN architecture

3.4. Training Convolutional Neural Networks on

Heatmaps

The size of the images in the EmotiW dataset varies con-
siderably. We ﬁrst pre-process the images into heatmaps,
as described in 3.3, and then resize the images into 256 ×
256 × 3 using Python Imaging Library (PIL), since we
train Convolutional Neural Networks (CNNs), which re-
quire an input of ﬁxed size. We also perform data aug-
mentation/oversampling on the generated heatmaps using
Keras’[3] image pre-processing to deal with dataset bias[2].
The augmentations done are random rotations with a range
of 40 degrees, random horizontal shifts in the range of 20%
of the total width, random vertical shifts in the range of 20%
of the total height, rescaling the pixel values by a factor of
0.01, using a shear intensity and zoom intensity of 0.2, ran-
dom horizontal ﬂips and using the ”nearest” ﬁll mode.

Next, we train two different Convolutional Neural Net-
works, the ﬁrst of which contains four layers, three of which
are convolutional layers and the fourth is a fully connected
layer, as depicted in Figure 2. We shall refer to it as 3-
ConvNN throughout the paper. The ﬁrst layer of the net-
work takes in images of dimensions 256×256×3. The ﬁrst
layer consists of 32 ﬁlters with a kernel size of 3 × 3 × 3. It

is followed by a max pooling layer of size 2 × 2 × 3. The
second convolution layer is the same as the ﬁrst one. The
third layer consists of 64 ﬁlters with a kernel size of 3×3×3
followed by a 2 × 2 × 3 max pooling layer. The output of
this layer is then ﬂattened and fed to a fully connected layer
of size 3. We also use dropout with a rate of 0.5. All the
layers in the network use Rectiﬁer Linear Unit (ReLU) ac-
tivation. We use Adam [14] for model optimization. The
network minimizes categorical cross entropy loss.

Figure 3. AlexNet Architecture.

The second network is AlextNet as described in [15].
It takes input with dimensions 227 × 227 × 3. The ﬁrst
convolutional layer contains 96 ﬁlters and a kernel size of
11 × 11 × 3 and a stride of 4 pixels. It is followed by a max
pooling layer of size 3 × 3 × 3 with a stride of 2 pixels. We
then perform batch normalization. Next is a sequence of a
zero padding layer of 1 pixel followed by a convolutional
layer of 384 ﬁlters and a kernel size of 3 × 3 × 3 and a stride
of 1 pixel. This sequence is repeated again and is followed
by a zero padding layer of size 1 and a convolutional layer
of 256 ﬁlters, a kernel size of 3 × 3 × 3 with a stride of 1
pixel. Next, is a max pooling layer of size 3 × 3 × 3 and
a stride of 2 pixels. The output of the max pooling layer
is ﬂattened and is fed to a dense layer of 4096 units. A
dropout with a rate of 0.5 is used next. A dense layer of
4096 units follows next with which is again followed by a
dropout with a rate of 0.5. The ﬁnal layer is a softmax layer
with 3 units. All the previous laye rs use ReLU activation.
The architecture has been illustrated in the Figure 3. The
model minimizes categorical cross entropy loss. We use
Stochatic Gradient Descent (SGD) for model optimization
with a learning rate of 0.01, momentum of 0.9 and a weight
decay of 5 × 10−4.

The entire approach has been illustrated in Fig 4

Figure 4. Pipeline of our approach

4.1. Using Face Level Predictions Directly

4.1.1 Averaging

It is one of the simplest approaches that can be used. We
take average of 7-dimensional vectors obtained for all the
faces in the image. The emotion with the highest mean
value is used as the overall prediction. Anger, Disgust, Fear,
Sadness and Surprise as categorised as Negative, Neutral
and Happy are categorised as Neutral and Positive respec-
tively. However, as discussed in [4], which is also men-
tioned in [21], averaging is not a reliable measure to predict
group level emotion. Upon averaging the face level predic-
tions, we obtained an accuracy of 44.37% on the training
set and an accuracy of 42.38% on the validation set.

4.1.2 Random Forest

We next trained a Random Forest classiﬁer (15 estimators)
using the averaged 7-dimensional vector obtained for an im-
age. Using Random Forest classiﬁer we achieved an ac-
curacy of 99.08% on the training set and an accuracy of
48.13% on the validation set.

4.2. Training Convolutional Neural Networks on

Heatmaps

In this subsection we discuss our experiments using the
generated heatmaps. Converting images into heatmaps (as
discussed in section 3.3) based on face level predictions
served two purposes. Firstly, it allowed the ConvNets to
focus on isolated face level information by removing the
additional information present in the image like the overall
scene information. Secondly, it allowed us to perform ex-
periments by considering face sizes and position of faces in
space as variables. As we shall see later, taking these factors
into account affects the predictions.

4. Experimental Analysis

4.2.1 Linear Distribution

We now describe a series of experiments performed us-
ing raw images as well as the predictions obtained for every
face by running the pre-trained model [16]. The experi-
ments in sections 4.1 and 4.2 were done to obtain the group
level prediction using predictions for individual faces.

We ﬁrst use a linear distribution to create heatmaps. The
function used is

I(x, y) =

(cid:40)

I0
d((x,y),(x0,y0))
I0

d (cid:54)= 0

d = 0

(1)

Where I(x, y) is the intensity at the point (x, y) in the
image, I0 is the maximum intensity, which is at the cen-
ter of the face under consideration. This intensity is ob-
tained by using the methodology as described in section 3.2.
)) is the distance function that calculates the
d((x, y), (x
city block distance between the points (x, y) and (x
).
More speciﬁcally,

, y

, y

(cid:48)

(cid:48)

(cid:48)

(cid:48)

d((x, y), (x(cid:48), y(cid:48))) = 0.1 × (|x − x(cid:48)| + |y − y(cid:48)|)

(2)

A distance scaling factor of 0.1 is used to make the in-
tensity decrease gradually with distance instead of an abrupt
decrease with distance.

Using the above function and the process is as described
in section 3.3 and depicted in Fig. 1, we create heatmaps. It
is to be noted that, by using a linear distribution, we discard
both the size of the faces and their position in space. We
train 3-ConvNN on these images.

4.2.2 Gaussian Distribution

Until now, the size of the face did not play a role in deter-
mining the group level emotion. However, as discussed in
[8], large size of faces with smiles play a role in determi-
nation of affect of a group. Keeping this in mind, we use
a bivariate Gaussian distribution to estimate the intensity of
emotion throughout the image. The function which is used
to calculate the intensity I at a point (x, y), is

I(x, y) = I0×exp(

−4 × ln(2) × 0.1 × [(x − x0)2 + (y − y0)2]
r

)

(3)
Where I0 is the intensity value obtained for a face,
(x0, y0) is the center of the face in the image and r is the ra-
dius of the face which is estimated by half the length of the
diagonal of the frame enclosing the face, obtained via face
detection. A scaling factor of 0.1 is again used, to make the
intensity decrease gradually in two dimensional Euclidean
space.

Using the heatmaps generated by using the above
methodology, we 3-ConvNN and AlexNet on the heatmaps.

I(x, y) = I0 ×

exp( −4×ln(2)×0.1×[(x−x0)2+(y−y0)2]
D((xf , yf ), (xc, yc))

r

)

(4)

Where D((xf , yf ), (xc, yc)) is the Euclidean distance
between the center of the face under consideration and the
center of the image, scaled by a factor of 0.01. (xf , yf ) are
the coordinates of the center of the face (estimated by the
center of the bounding box enclosing the face) in the image
and (xc, yc) are the coordinates of the center of the image.
Thus,

D((xf , yf ), (xc, yc)) = 0.01 ×

(xf − xc)2 + (yf − yc)2
(5)
We then train 3-ConvNN and AlexNet on heatmaps ob-

(cid:113)

tained via this method.

4.3. Training CNNs Directly on Images

We also trained the two CNNs described before in Sec-
tion 3.4 on raw images. 3-ConvNN gave a training accuracy
of 54.68% and a validation accuracy of 50.27%. AlexNet,
when directly trained on raw images gave us a training ac-
curacy of 49.57% and a validation accuracy of 44.98%.

Model

Baseline
Averaging
Random Forest
Linear Distrbution
Heatmaps (3-ConvNN)
Gaussian Heatmaps
(3-ConvNN)
Gaussian Heatmaps
(AlexNet)
Normalized Gaussians
(3-ConvNN)
Normalized Gaussians
(AlexNet)
Raw Images
(3-ConvNN)
Raw Images
(AlexNet)

Training
Accuracy
-
44.37%
99.08%

Validation
Accuracy
52.79%
42.38%
48.13%

35.59%

38.62%

56.73%

51.49%

57.81%

55.23%

56.89%

54.67%

54.51%

52.15%

54.68%

50.27%

49.57%

44.98%

Table 2. Performance of Different Models

4.2.3 Gaussians Normalized by Distance to Image

Center

We also investigate the effect of position of faces in the im-
age. In order to take position into account we divide the
intensity obtained at every point by using a Gaussian dis-
tribution by the distance of the center of the face from the
center of the image.

More speciﬁcally, the intensity at a point (x1, y1) is ob-

tained by the following relation:

5. Results and Discussion

Table 2 summarizes the results of various approaches we
used to predict group emotion. Averaging of face level pre-
dictions discards the information of face sizes and their rel-
ative positions in the image. Mean of face level predictions
discarding these context features and not working well is
also discussed in [4] and [21].

Random Forest classiﬁer (4.1.2) gave an accuracy of
99.08% on the training set and an accuracy of 48.13% on the
validation set. Though the Random Forest model performed
better than the previous approach. We were still behind the
baseline accuracy by 4.84%. The classiﬁer was able to cap-
ture complex interplay between various intensities of face
level predictions, but this approach, like the former ignores
face sizes and relative position of faces.

Using a linear distribution to create heatmaps (4.2.1) we
get an accuracy of 35.59% on the training set and 38.62%
on the validation set, when the heatmaps are trained on 3-
ConvNN. Heatmaps created using a Gaussian distribution
(4.2.2) takes the size of the face into consideration. When
using that to train 3-ConvNN, we obtain an accuracy of
56.73% on the training data and 51.49% on the validation
data. Training AlexNet on the same images gave an ac-
curacy of 57.81% and 55.23% on training and validation
datasets respectively.

When the heatmaps obtained by Gaussians normalized
by the distance from the center (4.2.3) are used to train 3-
ConvNN, we achieve an accuracy of 56.89% and 54.67%
respectively on training and validation sets. AlexNet gave
an accuracy of 54.51% and 52.15% respectively.
In this
method, both the faces and their positions from the center
of the image are considered.

Finally, we see that CNNs trained directly on images do

not perform as good as when trained on heatmaps.

6. Conclusion and Future Work

This paper presented a pipeline that was used to predict
the overall emotion of a group of people in an image for
EmotiW 2017 challenge dataset. Ours is a bottom-up ap-
proach. We create heatmaps using face-level predictions
and train ConvNets on them. We demonstrate that training
the CNNs on heatmaps performs better than training them
directly on raw images. We also investigate the effects of
face size and their position in the image and see that their
position does have an impact on the overall affect. Our best
model achieves a validation accuracy of 55.23% which is
2.44% above the baseline.

Our future work includes different combination methods
for heatmaps like the use of manifolds [10].
In addition
to that, We also intend to investigate the effect of relative
distances between faces in groups.

7. Acknowledgement

We thank Balaji Balasubramaniam, Abhishek Sainani
and the reviewers for their valuable comments and feed-
back, which greatly improved our manuscript.

References

[1] S. Barsade and D. Gibson. Group emotion: A view from top

and bottom. 1:81–102, 01 1998.

[2] V. Campos, B. Jou, and X. Gir´o i Nieto. From pixels to
sentiment: Fine-tuning cnns for visual sentiment prediction.
CoRR, abs/1604.03489, 2016.

[3] F. Chollet et al.

Keras.
fchollet/keras, 2015.

https://github.com/

[4] A. Dhall, R. Goecke, and T. Gedeon. Automatic group hap-
piness intensity analysis. IEEE Trans. Affective Computing,
6(1):13–26, 2015.

[5] A. Dhall, R. Goecke, S. Ghosh, J. Joshi, J. Hoey, and
T. Gedeon. From individual to group-level emotion recog-
nition: Emotiw 5.0. In Proceedings of the 19th ACM Inter-
national Conference on Multimodal Interaction, ICMI 2017,
pages 524–528, New York, NY, USA, 2017. ACM.

[6] A. Dhall, R. Goecke, J. Joshi, J. Hoey, and T. Gedeon.
Emotiw 2016: Video and group-level emotion recognition
challenges. In Proceedings of the 18th ACM International
Conference on Multimodal Interaction, ICMI 2016, pages
427–432. ACM, 2016.

[7] A. Dhall, R. Goecke, S. Lucey, and T. Gedeon. Collect-
ing large, richly annotated facial-expression databases from
movies. IEEE MultiMedia, 19(3):34–41, July 2012.

[8] A. Dhall, J. Joshi, K. Sikka, R. Goecke, and N. Sebe. The
more the merrier: Analysing the affect of a group of peo-
ple in images. In 11th IEEE International Conference and
Workshops on Automatic Face and Gesture Recognition, FG
2015, Ljubljana, Slovenia, May 4-8, 2015, pages 1–8, 2015.
[9] I. J. Goodfellow, D. Erhan, P. L. Carrier, A. Courville,
M. Mirza, B. Hamner, W. Cukierski, Y. Tang, D. Thaler,
D.-H. Lee, Y. Zhou, C. Ramaiah, F. Feng, R. Li, X. Wang,
D. Athanasakis, J. Shawe-Taylor, M. Milakov, J. Park,
R. Ionescu, M. Popescu, C. Grozea, J. Bergstra, J. Xie,
L. Romaszko, B. Xu, Z. Chuang, and Y. Bengio. Chal-
lenges in Representation Learning: A Report on Three Ma-
chine Learning Contests, pages 117–124. Springer Berlin
Heidelberg, Berlin, Heidelberg, 2013.

[10] J. Hamm and D. D. Lee. Grassmann discriminant analysis:
A unifying view on subspace-based learning. In Proceedings
of the 25th International Conference on Machine Learning,
ICML ’08, pages 376–383, 2008.

[11] G. B. Huang, M. Ramesh, T. Berg, and E. Learned-Miller.
Labeled faces in the wild: A database for studying face
recognition in unconstrained environments. Technical re-
port, Technical Report 07-49, University of Massachusetts,
Amherst, 2007.

[12] B.-K. Kim, H. Lee, J. Roh, and S.-Y. Lee. Hierarchical com-
mittee of deep cnns with exponentially-weighted decision fu-
sion for static facial expression recognition. In Proceedings
of the 2015 ACM on International Conference on Multimodal
Interaction, pages 427–434. ACM, 2015.

[13] D. E. King. Dlib-ml: A machine learning toolkit. Journal of

Machine Learning Research, 10:1755–1758, 2009.

[14] D. P. Kingma and J. Ba. Adam: A method for stochastic

optimization. CoRR, abs/1412.6980, 2014.

[15] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
F. Pereira, C. J. C. Burges, L. Bottou, and K. Q. Weinberger,
editors, Advances in Neural Information Processing Systems
25, pages 1097–1105. Curran Associates, Inc., 2012.
[16] G. Levi and T. Hassner. Emotion recognition in the wild via
convolutional neural networks and mapped binary patterns.
In Proc. ACM International Conference on Multimodal In-
teraction (ICMI), November 2015.

[17] H. Ng, V. D. Nguyen, V. Vonikakis, and S. Winkler. Deep
learning for emotion recognition on small datasets using
In Proceedings of the 2015 ACM on In-
transfer learning.
ternational Conference on Multimodal Interaction, Seattle,
WA, USA, November 09 - 13, 2015, pages 443–449, 2015.

[18] T. Ojala, M. Pietik¨ainen, and D. Harwood. A comparative
study of texture measures with classiﬁcation based on fea-
In Pattern Recognition, pages 51–59,
tured distributions.
1996.

[19] T. Ojala, M. Pietik¨ainen, and T. M¨aenp¨a¨a. A generalized
local binary pattern operator for multiresolution gray scale
and rotation invariant texture classiﬁcation. In International
Conference on Advances in Pattern Recognition, pages 399–
408, 2001.

[20] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
abs/1409.1556, 2014.

[21] V. Vonikakis, Y. Yazici, V. Nguyen, and S. Winkler. Group
happiness assessment using geometric features and dataset
In Proceedings of the 18th ACM International
balancing.
Conference on Multimodal Interaction, ICMI 2016, Tokyo,
Japan, November 12-16, 2016, pages 479–486, 2016.
[22] J. Wu and J. M. Rehg. Centrist: A visual descriptor for scene
categorization. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 33(8):1489–1501, Aug 2011.

[23] Z. Yu and C. Zhang.

Image based static facial expression
In Pro-
recognition with multiple deep network learning.
ceedings of the 2015 ACM on International Conference on
Multimodal Interaction, ICMI ’15, pages 435–442. ACM,
2015.

[24] L. Zhang, D. Tjondronegoro, and V. Chandran. Represen-
tation of facial expression categories in continuous arousal–
Image and Vision
valence space: feature and correlation.
Computing, 32(12):1067–1079, 2014.

