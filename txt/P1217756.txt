7
1
0
2
 
v
o
N
 
5
1
 
 
]

G
L
.
s
c
[
 
 
5
v
0
6
6
6
0
.
1
1
5
1
:
v
i
X
r
a

Modeling the Temporal Nature of Human
Behavior for Demographics Prediction

Bjarke Felbo1,3, P˚al Sundsøy2, Alex ‘Sandy’ Pentland1, Sune Lehmann3, and
Yves-Alexandre de Montjoye1,4

1 Massachusetts Institute of Technology, MIT Media Lab
2 Telenor Research
3 Technical University of Denmark, DTU Compute
4 Imperial College London, Dept. of Computing and Data Science Institute

Abstract. Mobile phone metadata is increasingly used for humanitar-
ian purposes in developing countries as traditional data is scarce. Ba-
sic demographic information is however often absent from mobile phone
datasets, limiting the operational impact of the datasets. For these rea-
sons, there has been a growing interest in predicting demographic infor-
mation from mobile phone metadata. Previous work focused on creating
increasingly advanced features to be modeled with standard machine
learning algorithms. We here instead model the raw mobile phone meta-
data directly using deep learning, exploiting the temporal nature of the
patterns in the data. From high-level assumptions we design a data rep-
resentation and convolutional network architecture for modeling patterns
within a week. We then examine three strategies for aggregating patterns
across weeks and show that our method reaches state-of-the-art accuracy
on both age and gender prediction using only the temporal modality in
mobile metadata. We ﬁnally validate our method on low activity users
and evaluate the modeling assumptions.

Keywords: Call detail records, mobile phone metadata, temporal pat-
terns, user modeling, demographics prediction

1

Introduction

For the ﬁrst time last year, there were more active mobile phones in the world
than humans [17]. Every time one of these phones is being used to text or call,
it generates mobile phone metadata or CDR (Call Detail Records). Collected at
large scale this metadata – records of who calls or texts whom, for how long, and
from where – provide a unique lens into the behavior of humans and societies.
For instance, mobile phone metadata have been used to plan disaster response
and inform public health policy [2,24]. The potential of mobile phone metadata is
particularly high in developing countries where basic statistics such as population
density or mobility are often either missing or suﬀer from severe biases [21]. Last
year, an expert advisory group to the United Nations emphasized the importance
of mobile phone data in measuring and ultimately achieving the Sustainable
Development Goals [23].

2

Modeling the Temporal Nature of Human Behavior

Fig. 1. The mean number of outgoing calls averaged across the population. Diﬀerences
between workdays and weekends are clearly visible as well as diﬀerent times of the day.

The potential of mobile phone data in developing countries has, however,
been hindered by the absence of demographic information, such as age or gen-
der, associated with the data. This issue has caused a growing interest in pre-
dicting demographic information from mobile phone metadata. While previous
work has focused on developing increasingly complicated features, we here pro-
pose a novel way of modeling mobile phone metadata using deep learning. From
high-level assumptions regarding the nature of temporal patterns, we design
a data representation and convolutional network (ConvNet) architecture that
reach state-of-the-art accuracy inferring both age and gender using only the
temporal modality.

2 Related work

Previous work has relied heavily on hand-engineered features to predict demo-
graphics and other information from mobile phone metadata. Sarraute et al. [19]
and Herrera-Yage et al [8] both combined hand-engineered features with vari-
ous machine learning algorithms to predict gender from mobile phone metadata
while de Montjoye et al. used them to predict personality traits [15]. Martinez
et al. used an support vector machine (SVM) and random forest (RF) on similar
features as well as a custom algorithm based on k-means to predict gender [6].
Finally, Dong et al. used a double-dependent factor graph model to predict de-
mographic information in a mobile phone social graph [5]. While promising, the
graph-based approach requires demographic information about a large fraction
of the population to be known a priori, making it impractical in most coun-
tries where training data is not available at scale and must be collected through
surveys.

The current state of the art in predicting demographics from mobile phone
data is a recent paper by Jahani et al. [10] which relies on a large number of hand-
engineered features (1440) provided by the open-source bandicoot toolbox [16]
and a carefully tuned SVM with a radial basis function kernel. The features
used are divided into two categories (individual, spatial) and based on carefully
engineered deﬁnitions such as how to group together calls and text messages into
conversations or compute the churn rate of common locations.

Modeling the Temporal Nature of Human Behavior

3

3 Data and Assumptions

A mobile phone produces a record every time it sends or receives a text message
or makes or receives a phone call. These records (called mobile phone metadata,
or CDRs) are generated by the carrier’s infrastructure and are highly stan-
dardized. CDRs contain the type of interaction (text/call), direction (in/out),
timestamp (date and time), recipient ID, call duration (if call) and cell tower to
which the phone was connected to. The dataset we work with, provided by an
anonymous carrier, contains more than 250 million anonymized mobile phone
records for 150.000 people in a Western European country covering a period of
14 weeks.

We state the following three assumptions about the nature of the temporal

patterns in mobile phone metadata:

1. The day of the week and time of day of an observed pattern holds

predictive power

Previous work showed that increasing the temporal granularity of the hand-
engineered features in the bandicoot toolbox by diﬀerentiating between day-
time and nighttime activity yields a substantial accuracy boost [10]. For
instance, the percentage of initiated calls at night during the weekend was
one of the most useful features to predict gender. Consequently, we assume
that information on the speciﬁc time of the week that a pattern occurred
contains useful information to predict demographic attributes.

2. Temporal patterns are similar across days of the week

While the time of day matters (e.g. night vs. day), we furthermore assume
that such temporal patterns have similarities across days of the week which
could help predict demographic attributes. For instance, one could imagine
that a relevant temporal pattern on Friday night may help model a similar
pattern on Saturday night.

3. Local temporal patterns can be combined into predictive global

features

The current state-of-the-art approach relies on complex hand-engineered
(and non-linear) features such as the response rate within conversations,
churn between antennas, and entropy of contacts [10]. We assume that the
convolutional network (ConvNet) will be able to combine local temporal
patterns on the scale of hours to ﬁnd global features (i.e. on the scale of
days/weeks), thereby removing the need for such high-level hand-engineered
features. ConvNets have similarly been used in previous work to learn a
hierarchy of features directly from raw visual data [13].

4

Modeling the Temporal Nature of Human Behavior

4 Representation, Architecture

and Aggregation

4.1 Week-matrix representation

Assumption 1 and Assumption 2 from Sect. 3 are used to derive our data repre-
sentation for a week of mobile phone metadata. We represent the data as eight
matrices summarizing mobile phone usage on a given week with hours of the
day on the x-axis and the weekdays on the y-axis (see Figure 1). These eight
matrices are the number of unique contacts, calls, texts and the total duration
of calls for incoming and outgoing interactions respectively. Every cell in the
matrices represents the amount of activity for a given variable of interest in
that hour interval (e.g. between 2 and 3 pm). In this way, we eﬀectively bin any
number of interactions during the week. These eight matrices are combined into
a 3-dimensional matrix with a separate ‘channel’ for each of the 8 variables of
interest. This 3-dimensional matrix is named a ‘week-matrix’.

The week-matrix representation is a logical result of our Assumption 1 and
Assumption 2. Our ﬁrst assumption focuses on the importance of high temporal
granularity, which is why our data representation summarizes mobile phone us-
age for each hour, thereby splitting local patterns into separate bins such that
they may be captured by a suitable classiﬁcation algorithm. Our second assump-
tion focuses on the similarity of temporal patterns across weekdays, making it
logical to design the week-matrix to have the weekdays on the y-axis such that
similar patterns are located in neighboring cells in the matrix (see Figure 1 for
clear temporal patterns in mobile phone usage across weekdays). We shift the
time in the matrices by 4 hours such that it is easier to capture mobile phone
usage occurring across midnight (Figure 1 shows that there is especially a lot
of activity occurring the night between Saturday and Sunday). Each row in the
matrix thus contains data from 4am-4am instead of from midnight to midnight.
This shift also moves the low-activity (and potentially less informative) areas to
the borders of the matrix.

4.2 ConvNet architecture

We use our assumptions (see Sect. 3) to develop the ConvNet architecture used
to model a single week of mobile metadata. The choice of architecture is crucial
to ﬁnding predictive patterns and has been equated to a choice of prior [1].

Assumption 2 emphasizes the similarity of temporal patterns across week-
days. We therefore design an architecture consisting of ﬁve horizontal conv. layers
followed by a vertical conv. ﬁlter and a dense layer (see Table 1 and Figure 2).
The horizontal conv. layers learn to capture patterns within a single day, reusing
the same parameters across diﬀerent times of day and across the diﬀerent week-
days. For a 1D conv. ﬁlter with ﬁlter size four (as illustrated in Figure 2) the
value of a single neuron at the position k in the next layer is:

(cid:32)

(cid:33)

ok = σ

b +

wlik+l

,

3
(cid:88)

l=0

(1)

Modeling the Temporal Nature of Human Behavior

5

where wl is position l in the weight matrix for that ﬁlter and b is the bias [18].
The input is deﬁned as ik for position k in the previous layer. σ is a non-linear
activation function, which in this case is the leaky ReLU [14]. A single conv. layer
consists of multiple ﬁlters with the speciﬁed size, allowing the conv. layer to cap-
ture many diﬀerent patterns across the entire input using only a few parameters.
The intraday patterns captured by the horizontal conv. layers are then com-
bined using the vertical conv. layer across the diﬀerent weekdays to ﬁnd global
features. Lastly, the dense layer and the softmax layer combine these global
features to predict the demographic attribute (see Figure 2).

Assumption 1 and 3 emphasizes the importance of capturing information
about local temporal patterns. Consequently, we design an architecture that
does not use pooling layers, which would throw away information about the
location of the patterns in the week-matrix. Similarly, we make sure of a small
conv. ﬁlter size for the ﬁrst four conv. ﬁlter to focus on capturing local patterns.
There are many diﬀerent parameters that can be tuned when choosing the
architecture and the optimization procedure for training the ConvNet. Bayesian
optimization is used for tuning seven of these as proposed in [20], covering e.g.
the learning rate, L2 regularization, and the number of ﬁlters in the horizontal
conv. layers. The vertical conv. layer has a ﬁxed number of 400 ﬁlters. The dense
layer has 400 neurons, whereas the softmax layer has as many neurons as the
number of classes (two for gender and three for age).

4.3 Aggregation of patterns across weeks

The ConvNet architecture described models only a single week of data at a
time, whereas each user has multiple weeks of data that should all be utilized
when predicting a demographic attribute. Based on our three assumptions (see
Sect. 3) it makes sense to design the ConvNet architecture to model a single
week at a time, making it possible to reuse the same convolutional ﬁlters across
multiple weeks. There are several ways to aggregate the features captured by the
ConvNet for individual weeks, making our method utilize the data for multiple
weeks. We examine three diﬀerent approaches: averaging the predictions, adding
a long short-term memory (LSTM) module to the ConvNet and modeling the
features captured by the ConvNet with an SVM.

The most basic approach for modeling multiple weeks of data is to pass each
week-matrix through the ConvNet architecture and then average the probabili-
ties from the softmax layer. In this way, an overall prediction can be found across
all weeks of data for a given user. An issue with this averaging approach is that
it limits the contribution of a given week to the ﬁnal prediction.

Another way of modeling multiple weeks of data is by modifying the ConvNet
architecture to include a long short-term memory (LSTM) module [9]. The
LSTM is a specialized variant of the recurrent neural network (RNN), which uses
recurrent connections between the neurons to capture patterns in sequences of
inputs. We design a ConvNet-LSTM such that it has the same architecture for
ﬁnding patterns as our ConvNet architecture, but without the ﬁnal softmax layer
for classiﬁcation (i.e. conv1-dense7 as seen in Figure 2). This architecture is then

6

Modeling the Temporal Nature of Human Behavior

Table 1. Architecture for the convolutional network. The ﬁlter size describes the num-
ber of neurons in the previous layer that each neuron in the current conv. layer is
connected to. A ﬁlter with size Mx1 takes as input M neurons located side-by-side
horizontally, whereas a 1xN ﬁlter uses N neurons located side-by-side vertically.

Layer Name Conv. Filter Size

input
conv1
conv2
conv3
conv4
conv5
conv6
dense7
sof tmax8

-
4x1
4x1
4x1
4x1
12x1
1x7
-
-

Fig. 2. Illustration of the convolutional network architecture. The depth of a conv. layer
equals the number of ﬁlters in that layer. Dimensions are not to scale.

Modeling the Temporal Nature of Human Behavior

7

connected to a 2-layer LSTM module with 128 hidden units in each layer. In this
way, the week-matrices can be modeled with an end-to-end architecture that can
utilize convolutional layers to ﬁnd patterns within a week and recurrent layers to
ﬁnd patterns across weeks. It is trained using the default settings of the Adam
optimization method [12]. L2 regularization of 10−4 and recurrent dropout [7]
of 0.5 is used to avoid overﬁtting. The ConvNet-LSTM is implemented using
Keras [3] and Theano [22].

Lastly, we use an SVM with a radial basis function kernel to design a 2-step
model (ConvNet-SVM). The ConvNet is used to transform the raw data into
learned high-level features for each week with the SVM then modeling patterns
across weeks. Using ConvNets to ﬁnd good representations of raw data for mod-
eling with SVMs has previously been done for generic visual recognition [4], but
to our knowledge this is the ﬁrst time it is done for combining patterns across
individual observations in the dataset (i.e. weeks in this case). We extract the
feature activations for dense7 and sof tmax8 (see Figure 2. For each user we
compute the mean and standard deviation for these extracted feature activa-
tions across the diﬀerent weeks. A total of 800 + 2nc features are extracted this
way, where nc is the number of classes in the problem at hand (2 for gender,
3 for age). The number of features for the SVM is constant regardless of the
number of weeks for a given user.

5 Results

In line with previous work and potential applications, we demonstrate the ef-
fectiveness of our method on gender and age prediction. We consider a binary
gender variable (largest class: 56.3%) and an age variable discretized by the
data provider into three groups: [18 − 39],[40 − 49],[50+], splitting the dataset
almost equally (largest class: 35.7%). Our dataset contains data of approximately
150.000 people. We split it into training (100.000 people), validation (10.000 peo-
ple), and test set (40.000 people). We compare our results to a state-of-the-art
approach, Bandicoot-SVM [10], using an SVM on the bandicoot features trained
and tested on the same data as our method.

We report results using the three approaches for aggregating patterns across
weeks described in Sect. 4. Table 2 shows that our 2-step model (ConvNet-SVM),
which extracts the high-level features found using the ConvNet and models them
with an SVM yields the highest accuracy of the three approaches.

Our ConvNet-SVM method reaches state-of-the-art accuracy and slightly
outperforms it on both age and gender prediction (p < 10−5 with a one-tailed t-
test). Our method reaches the state-of-the-art using only the temporal modality
in mobile metadata, whereas the current state-of-the-art approach also exploits
patterns related to mobility (see Sect. 7).

Mobile phone usage in developing countries is still fairly low [17] making it
important for our method to perform well on low-activity users (see Figure 4 for
the distribution of interactions per user). To test the performance of our method,
we train and evaluate it on low-activity users (users with fewer interactions than

8

Modeling the Temporal Nature of Human Behavior

Table 2. Accuracy of classiﬁers on the test set when predicting age and gender.

Age Gender
35.7% 56.3%
Random
Bandicoot-SVM
61.6% 78.2%
ConvNet (averaging) 60.7% 78.3%
61.3% 78.4%
ConvNet-LSTM
63.1% 79.7%
ConvNet-SVM

Fig. 3. Accuracy on gender prediction
as a function of the number of inter-
actions (across all 14 weeks) visual-
ized using generalized additive model
(GAM) smoothing. The x-axis is con-
strained to contain roughly 50% of the
users. The black solid line is the base-
line accuracy when predicting everyone
as part of the majority class.

Fig. 4. Histogram of the distribution of
the number of interactions. The top 5%
users in terms of number of interactions
are not included.

Table 3. Accuracy on the original and the temporally randomized week-matrices.

Age Gender
Original 60.7 % 78.3%
Permuted 54.0 % 70.4%
-11.0% -10.1%
Change

the median) and show that our model reaches state-of-the-art and even slightly
outperforms it (p < 0.01 with a one-tailed t-test) with an accuracy of 76.9% vs.
75.7% for the Bandicoot-SVM. Figure 3 shows the accuracy of our method and
the Bandicoot-SVM as a function of the number of interactions (calls + texts)

Modeling the Temporal Nature of Human Behavior

9

when trained on all users showing that we perform particularly well on users
with few interactions.

6 Evaluating Assumptions

Designing a ConvNet architecture for a particular modeling task involves many
choices regarding ﬁlter sizes, layer types, etc. We derived many of our choices
from the three assumptions stated in Sect. 3. In this section we evaluate these
assumptions to qualify our choices.

Evaluating Assumption 1: The ﬁrst assumption states that the weekday
and time of day of an observed pattern holds predictive power. One way we
can evaluate this assumption is by comparing the performance of a ConvNet on
the original data with the performance of a ConvNet using the same hyperpa-
rameters and architecture but using data that has been temporally randomized.
We temporally randomize the dataset by assigning values to cells at random in
the week-matrix, thereby destroying potential temporal patterns in the week-
matrices while keeping the rest of the information intact (total activity, etc). To
quantify the impact of the temporal randomization independently of the SVM,
we evaluate the performance when averaging predictions across weeks. Table
3 shows temporally randomizing the week-matrices decreases accuracy by 11%
when predicting age and by 10.1% when predicting gender.

The importance of the time and day of the interactions is indicated by exam-
ining the week-matrices which our model is most conﬁdent belong to a man or
a woman. Figure 5 shows that the top “men” week-matrix has a higher number
of outgoing contacts during the hours from 7 am to 4 pm on workdays while the
top “female” week-matrix’s outgoing contacts are spread across the day.

Evaluating Assumption 2: The second assumption states that temporal pat-
terns are similar across weekdays. To evaluate our assumption, we examine the
performance of ConvNet architectures on a 1-dimensional representation of the
data. While this 1D representation contains the same information as the week-
matrix, the hours of the weekdays are arranged next to each other horizontally
instead of vertically (168 × 1 instead of 24 × 7, see Figure 1) therefore prevent-
ing the ConvNet to exploit similarity in patterns across days of the week. We
test multiple ConvNet architectures (examples in Table 4) that have the same
number of conv. layers as our ConvNet architecture and a comparable number
of parameters and show that all of these architectures yield a lower accuracy
than our ConvNet and the current state-of-the-art approach.

Evaluating Assumption 3: The third assumption states that local temporal
patterns captured by convolutional ﬁlters (see Eqn. 1) can be combined into
predictive global features, thereby eliminating the need for hand-engineered fea-
tures. To evaluate this assumption, we examine the global features learned with

10

Modeling the Temporal Nature of Human Behavior

Table 4. Examples of 1-dimensional ConvNet architectures that we have tested. These
contain convolutional, dense, max-pool and softmax layers as denoted by the preﬁx.
The ﬁlter size is shown in the suﬃx. The mark (s) means that the conv. layer has a
stride of 2. Padding is used such that only pooling and stride reduces the dimensions.

ConvNet 1 ConvNet 2
input

conv13
conv13
conv13(s)
conv13
conv13
conv13(s)

conv5
conv5
pool2
conv5
conv5
pool2
conv5
conv5

dense
sof tmax

Table 5. Top 5 bandicoot features captured by the neurons.

|r|
Features
0.786
Interevent time (call)
0.782
Number of contacts (text)
0.769
Interevent time (text)
Entropy of contacts (call)
0.764
Number of interactions (text) 0.761

Fig. 5. Visualization of a single channel, the number of unique outgoing contacts,
in the week-matrix most predictive of the male gender (top) and of female gender
(bottom). The week-matrix most predictive of male gender has a higher number of
outgoing contacts during the hours from 7am to 4pm on workdays while the “female”
week-matrix’s outgoing contacts are spread across the day.

Modeling the Temporal Nature of Human Behavior

11

our deep learning method by comparing the patterns captured by the neurons
of our ConvNet5 with the bandicoot features. We only consider the individual
bandicoot features as our ConvNet does not capture location and movement
information used for the mobility features.

Table 5 shows that the ConvNet captures information very similar to the
one encoded in high-level hand-engineered features such as interevent time and
entropy of contacts, suggesting that our deep learning model combines local
temporal patterns into global features.

7 Discussion

Our results (Table 2) show that the ConvNet-SVM outperforms the ConvNet-
LSTM despite the ConvNet-SVM not capturing the ordering of the week-matrices.
While an in-depth study is outside the scope of this paper, these results sug-
gest that there are no strong inter-week patterns that are crucial for predicting
demographic attributes.

The state-of-the-art approach found that two mobility features (percent in-
teractions at home and entropy of antennas) were among the top 5 most pre-
dictive features for one of their two benchmark datasets [10]. In contrast, our
ConvNet-SVM method reached state-of-the-art accuracy despite not using mo-
bility information at all. In future work, we would like to use deep learning
methods for modeling the other modalities in mobile phone metadata as well,
thereby likely increasing the prediction accuracy. Our weekmatrix representa-
tion have been added to bandicoot6 and our trained ConvNets for Caﬀe [11] are
available7.

References

1. Bengio, Y., Courville, A., Vincent, P.: Representation learning: A review and new

perspectives. TPAMI (2013)

2. Bengtsson, L., Lu, X., Thorson, A., Garﬁeld, R., Von Schreeb, J.: Improved re-
sponse to disasters and outbreaks by tracking population movements with mobile
phone network data: a post-earthquake geospatial study in haiti. PLoS medicine
(2011)

3. Chollet, F.: keras. https://github.com/fchollet/keras (2015)
4. Donahue, J., Jia, Y., Vinyals, O., Hoﬀman, J., Zhang, N., Tzeng, E., Darrell,
T.: Decaf: A deep convolutional activation feature for generic visual recognition.
PMLR (2013)

5. Dong, Y., Yang, Y., Tang, J., Yang, Y., Chawla, N.V.: Inferring user demographics

and social strategies in mobile social networks. ACM SIGKDD (2014)

6. Frias-Martinez, V., Frias-Martinez, E., Oliver, N.: A gender-centric analysis of
calling behavior in a developing economy using call detail records. AAAI Spring
Symposium: Artiﬁcial Intelligence for Development (2010)

5 For this comparison we use the mean activation of neurons in the F C7 layer.
6 Version ≥ 0.4 at http://bandicoot.mit.edu under bc.special.punchcard
7 https://github.com/yvesalexandre/convnet-metadata/

12

Modeling the Temporal Nature of Human Behavior

7. Gal, Y.: A theoretically grounded application of dropout in recurrent neural net-

works. NIPS (2016)

8. Herrera-Yag¨ue, C., Zuﬁria, P.J.: Prediction of telephone user attributes based on
network neighborhood information. International Workshop on Machine Learning
and Data Mining in Pattern Recognition (2012)

9. Hochreiter, S., Schmidhuber, J.: Long short-term memory. Neural computation

(1997)

10. Jahani, E., Sundsøy, P., Bjelland, J., Bengtsson, L., de Montjoye, Y.A., et al.:
Improving oﬃcial statistics in emerging markets using machine learning and mobile
phone data. EPJ Data Science 6(1), 3 (2017)

11. Jia, Y., Shelhamer, E., Donahue, J., Karayev, S., Long, J., Girshick, R., Guadar-
rama, S., Darrell, T.: Caﬀe: Convolutional architecture for fast feature embedding.
arXiv (2014)

12. Kingma, D., Ba, J.: Adam: A method for stochastic optimization. ICLR (2015)
13. LeCun, Y., Bengio, Y., Hinton, G.: Deep learning. Nature (2015)
14. Maas, A.L., Hannun, A.Y., Ng, A.Y.: Rectiﬁer nonlinearities improve neural net-

work acoustic models. ICML (2013)

15. de Montjoye, Y.A., Quoidbach, J., Robic, F., Pentland, A.S.: Predicting personal-
ity using novel mobile phone-based metrics. Social computing, behavioral-cultural
modeling and prediction (2013)

16. de Montjoye, Y.A., Rocher, L., Pentland, A.S.: bandicoot: a python toolbox for mo-
bile phone metadata. Journal of Machine Learning Research 17(175), 1–5 (2016),
http://jmlr.org/papers/v17/15-593.html

17. News, I.: Mobile subscriptions near the 7 billion mark - does almost everyone have

a phone? (2013), web. Accessed Jan 5 2016

18. Nielsen, M.A.: Neural Networks and Deep Learning. Determination Press (2015)
19. Sarraute, C., Blanc, P., Burroni, J.: A study of age and gender seen through mobile

phone usage patterns in mexico. ASONAM (2014)

20. Snoek, J., Larochelle, H., Adams, R.P.: Practical bayesian optimization of machine

21. Stuart, E., Samman, E., Avis, W., Berliner, T.: The data revolution (2015), over-

learning algorithms. NIPS (2012)

seas Development Institute

22. Theano Development Team: Theano: A Python framework for fast computation of

mathematical expressions. arXiv (2016)

23. United Nations, U.: A world that counts - mobilising the data revolution for sus-
tainable development (2014), uN Independent Expert Advisory Group on a Data
Revolution for Sustainable Development

24. Wesolowski, A., Qureshi, T., Boni, M.F., Sundsøy, P.R., Johansson, M.A., Rasheed,
S.B., Engø-Monsen, K., Buckee, C.O.: Impact of human mobility on the emergence
of dengue epidemics in pakistan. PNAS (2015)

7
1
0
2
 
v
o
N
 
5
1
 
 
]

G
L
.
s
c
[
 
 
5
v
0
6
6
6
0
.
1
1
5
1
:
v
i
X
r
a

Modeling the Temporal Nature of Human
Behavior for Demographics Prediction

Bjarke Felbo1,3, P˚al Sundsøy2, Alex ‘Sandy’ Pentland1, Sune Lehmann3, and
Yves-Alexandre de Montjoye1,4

1 Massachusetts Institute of Technology, MIT Media Lab
2 Telenor Research
3 Technical University of Denmark, DTU Compute
4 Imperial College London, Dept. of Computing and Data Science Institute

Abstract. Mobile phone metadata is increasingly used for humanitar-
ian purposes in developing countries as traditional data is scarce. Ba-
sic demographic information is however often absent from mobile phone
datasets, limiting the operational impact of the datasets. For these rea-
sons, there has been a growing interest in predicting demographic infor-
mation from mobile phone metadata. Previous work focused on creating
increasingly advanced features to be modeled with standard machine
learning algorithms. We here instead model the raw mobile phone meta-
data directly using deep learning, exploiting the temporal nature of the
patterns in the data. From high-level assumptions we design a data rep-
resentation and convolutional network architecture for modeling patterns
within a week. We then examine three strategies for aggregating patterns
across weeks and show that our method reaches state-of-the-art accuracy
on both age and gender prediction using only the temporal modality in
mobile metadata. We ﬁnally validate our method on low activity users
and evaluate the modeling assumptions.

Keywords: Call detail records, mobile phone metadata, temporal pat-
terns, user modeling, demographics prediction

1

Introduction

For the ﬁrst time last year, there were more active mobile phones in the world
than humans [17]. Every time one of these phones is being used to text or call,
it generates mobile phone metadata or CDR (Call Detail Records). Collected at
large scale this metadata – records of who calls or texts whom, for how long, and
from where – provide a unique lens into the behavior of humans and societies.
For instance, mobile phone metadata have been used to plan disaster response
and inform public health policy [2,24]. The potential of mobile phone metadata is
particularly high in developing countries where basic statistics such as population
density or mobility are often either missing or suﬀer from severe biases [21]. Last
year, an expert advisory group to the United Nations emphasized the importance
of mobile phone data in measuring and ultimately achieving the Sustainable
Development Goals [23].

2

Modeling the Temporal Nature of Human Behavior

Fig. 1. The mean number of outgoing calls averaged across the population. Diﬀerences
between workdays and weekends are clearly visible as well as diﬀerent times of the day.

The potential of mobile phone data in developing countries has, however,
been hindered by the absence of demographic information, such as age or gen-
der, associated with the data. This issue has caused a growing interest in pre-
dicting demographic information from mobile phone metadata. While previous
work has focused on developing increasingly complicated features, we here pro-
pose a novel way of modeling mobile phone metadata using deep learning. From
high-level assumptions regarding the nature of temporal patterns, we design
a data representation and convolutional network (ConvNet) architecture that
reach state-of-the-art accuracy inferring both age and gender using only the
temporal modality.

2 Related work

Previous work has relied heavily on hand-engineered features to predict demo-
graphics and other information from mobile phone metadata. Sarraute et al. [19]
and Herrera-Yage et al [8] both combined hand-engineered features with vari-
ous machine learning algorithms to predict gender from mobile phone metadata
while de Montjoye et al. used them to predict personality traits [15]. Martinez
et al. used an support vector machine (SVM) and random forest (RF) on similar
features as well as a custom algorithm based on k-means to predict gender [6].
Finally, Dong et al. used a double-dependent factor graph model to predict de-
mographic information in a mobile phone social graph [5]. While promising, the
graph-based approach requires demographic information about a large fraction
of the population to be known a priori, making it impractical in most coun-
tries where training data is not available at scale and must be collected through
surveys.

The current state of the art in predicting demographics from mobile phone
data is a recent paper by Jahani et al. [10] which relies on a large number of hand-
engineered features (1440) provided by the open-source bandicoot toolbox [16]
and a carefully tuned SVM with a radial basis function kernel. The features
used are divided into two categories (individual, spatial) and based on carefully
engineered deﬁnitions such as how to group together calls and text messages into
conversations or compute the churn rate of common locations.

Modeling the Temporal Nature of Human Behavior

3

3 Data and Assumptions

A mobile phone produces a record every time it sends or receives a text message
or makes or receives a phone call. These records (called mobile phone metadata,
or CDRs) are generated by the carrier’s infrastructure and are highly stan-
dardized. CDRs contain the type of interaction (text/call), direction (in/out),
timestamp (date and time), recipient ID, call duration (if call) and cell tower to
which the phone was connected to. The dataset we work with, provided by an
anonymous carrier, contains more than 250 million anonymized mobile phone
records for 150.000 people in a Western European country covering a period of
14 weeks.

We state the following three assumptions about the nature of the temporal

patterns in mobile phone metadata:

1. The day of the week and time of day of an observed pattern holds

predictive power

Previous work showed that increasing the temporal granularity of the hand-
engineered features in the bandicoot toolbox by diﬀerentiating between day-
time and nighttime activity yields a substantial accuracy boost [10]. For
instance, the percentage of initiated calls at night during the weekend was
one of the most useful features to predict gender. Consequently, we assume
that information on the speciﬁc time of the week that a pattern occurred
contains useful information to predict demographic attributes.

2. Temporal patterns are similar across days of the week

While the time of day matters (e.g. night vs. day), we furthermore assume
that such temporal patterns have similarities across days of the week which
could help predict demographic attributes. For instance, one could imagine
that a relevant temporal pattern on Friday night may help model a similar
pattern on Saturday night.

3. Local temporal patterns can be combined into predictive global

features

The current state-of-the-art approach relies on complex hand-engineered
(and non-linear) features such as the response rate within conversations,
churn between antennas, and entropy of contacts [10]. We assume that the
convolutional network (ConvNet) will be able to combine local temporal
patterns on the scale of hours to ﬁnd global features (i.e. on the scale of
days/weeks), thereby removing the need for such high-level hand-engineered
features. ConvNets have similarly been used in previous work to learn a
hierarchy of features directly from raw visual data [13].

4

Modeling the Temporal Nature of Human Behavior

4 Representation, Architecture

and Aggregation

4.1 Week-matrix representation

Assumption 1 and Assumption 2 from Sect. 3 are used to derive our data repre-
sentation for a week of mobile phone metadata. We represent the data as eight
matrices summarizing mobile phone usage on a given week with hours of the
day on the x-axis and the weekdays on the y-axis (see Figure 1). These eight
matrices are the number of unique contacts, calls, texts and the total duration
of calls for incoming and outgoing interactions respectively. Every cell in the
matrices represents the amount of activity for a given variable of interest in
that hour interval (e.g. between 2 and 3 pm). In this way, we eﬀectively bin any
number of interactions during the week. These eight matrices are combined into
a 3-dimensional matrix with a separate ‘channel’ for each of the 8 variables of
interest. This 3-dimensional matrix is named a ‘week-matrix’.

The week-matrix representation is a logical result of our Assumption 1 and
Assumption 2. Our ﬁrst assumption focuses on the importance of high temporal
granularity, which is why our data representation summarizes mobile phone us-
age for each hour, thereby splitting local patterns into separate bins such that
they may be captured by a suitable classiﬁcation algorithm. Our second assump-
tion focuses on the similarity of temporal patterns across weekdays, making it
logical to design the week-matrix to have the weekdays on the y-axis such that
similar patterns are located in neighboring cells in the matrix (see Figure 1 for
clear temporal patterns in mobile phone usage across weekdays). We shift the
time in the matrices by 4 hours such that it is easier to capture mobile phone
usage occurring across midnight (Figure 1 shows that there is especially a lot
of activity occurring the night between Saturday and Sunday). Each row in the
matrix thus contains data from 4am-4am instead of from midnight to midnight.
This shift also moves the low-activity (and potentially less informative) areas to
the borders of the matrix.

4.2 ConvNet architecture

We use our assumptions (see Sect. 3) to develop the ConvNet architecture used
to model a single week of mobile metadata. The choice of architecture is crucial
to ﬁnding predictive patterns and has been equated to a choice of prior [1].

Assumption 2 emphasizes the similarity of temporal patterns across week-
days. We therefore design an architecture consisting of ﬁve horizontal conv. layers
followed by a vertical conv. ﬁlter and a dense layer (see Table 1 and Figure 2).
The horizontal conv. layers learn to capture patterns within a single day, reusing
the same parameters across diﬀerent times of day and across the diﬀerent week-
days. For a 1D conv. ﬁlter with ﬁlter size four (as illustrated in Figure 2) the
value of a single neuron at the position k in the next layer is:

(cid:32)

(cid:33)

ok = σ

b +

wlik+l

,

3
(cid:88)

l=0

(1)

Modeling the Temporal Nature of Human Behavior

5

where wl is position l in the weight matrix for that ﬁlter and b is the bias [18].
The input is deﬁned as ik for position k in the previous layer. σ is a non-linear
activation function, which in this case is the leaky ReLU [14]. A single conv. layer
consists of multiple ﬁlters with the speciﬁed size, allowing the conv. layer to cap-
ture many diﬀerent patterns across the entire input using only a few parameters.
The intraday patterns captured by the horizontal conv. layers are then com-
bined using the vertical conv. layer across the diﬀerent weekdays to ﬁnd global
features. Lastly, the dense layer and the softmax layer combine these global
features to predict the demographic attribute (see Figure 2).

Assumption 1 and 3 emphasizes the importance of capturing information
about local temporal patterns. Consequently, we design an architecture that
does not use pooling layers, which would throw away information about the
location of the patterns in the week-matrix. Similarly, we make sure of a small
conv. ﬁlter size for the ﬁrst four conv. ﬁlter to focus on capturing local patterns.
There are many diﬀerent parameters that can be tuned when choosing the
architecture and the optimization procedure for training the ConvNet. Bayesian
optimization is used for tuning seven of these as proposed in [20], covering e.g.
the learning rate, L2 regularization, and the number of ﬁlters in the horizontal
conv. layers. The vertical conv. layer has a ﬁxed number of 400 ﬁlters. The dense
layer has 400 neurons, whereas the softmax layer has as many neurons as the
number of classes (two for gender and three for age).

4.3 Aggregation of patterns across weeks

The ConvNet architecture described models only a single week of data at a
time, whereas each user has multiple weeks of data that should all be utilized
when predicting a demographic attribute. Based on our three assumptions (see
Sect. 3) it makes sense to design the ConvNet architecture to model a single
week at a time, making it possible to reuse the same convolutional ﬁlters across
multiple weeks. There are several ways to aggregate the features captured by the
ConvNet for individual weeks, making our method utilize the data for multiple
weeks. We examine three diﬀerent approaches: averaging the predictions, adding
a long short-term memory (LSTM) module to the ConvNet and modeling the
features captured by the ConvNet with an SVM.

The most basic approach for modeling multiple weeks of data is to pass each
week-matrix through the ConvNet architecture and then average the probabili-
ties from the softmax layer. In this way, an overall prediction can be found across
all weeks of data for a given user. An issue with this averaging approach is that
it limits the contribution of a given week to the ﬁnal prediction.

Another way of modeling multiple weeks of data is by modifying the ConvNet
architecture to include a long short-term memory (LSTM) module [9]. The
LSTM is a specialized variant of the recurrent neural network (RNN), which uses
recurrent connections between the neurons to capture patterns in sequences of
inputs. We design a ConvNet-LSTM such that it has the same architecture for
ﬁnding patterns as our ConvNet architecture, but without the ﬁnal softmax layer
for classiﬁcation (i.e. conv1-dense7 as seen in Figure 2). This architecture is then

6

Modeling the Temporal Nature of Human Behavior

Table 1. Architecture for the convolutional network. The ﬁlter size describes the num-
ber of neurons in the previous layer that each neuron in the current conv. layer is
connected to. A ﬁlter with size Mx1 takes as input M neurons located side-by-side
horizontally, whereas a 1xN ﬁlter uses N neurons located side-by-side vertically.

Layer Name Conv. Filter Size

input
conv1
conv2
conv3
conv4
conv5
conv6
dense7
sof tmax8

-
4x1
4x1
4x1
4x1
12x1
1x7
-
-

Fig. 2. Illustration of the convolutional network architecture. The depth of a conv. layer
equals the number of ﬁlters in that layer. Dimensions are not to scale.

Modeling the Temporal Nature of Human Behavior

7

connected to a 2-layer LSTM module with 128 hidden units in each layer. In this
way, the week-matrices can be modeled with an end-to-end architecture that can
utilize convolutional layers to ﬁnd patterns within a week and recurrent layers to
ﬁnd patterns across weeks. It is trained using the default settings of the Adam
optimization method [12]. L2 regularization of 10−4 and recurrent dropout [7]
of 0.5 is used to avoid overﬁtting. The ConvNet-LSTM is implemented using
Keras [3] and Theano [22].

Lastly, we use an SVM with a radial basis function kernel to design a 2-step
model (ConvNet-SVM). The ConvNet is used to transform the raw data into
learned high-level features for each week with the SVM then modeling patterns
across weeks. Using ConvNets to ﬁnd good representations of raw data for mod-
eling with SVMs has previously been done for generic visual recognition [4], but
to our knowledge this is the ﬁrst time it is done for combining patterns across
individual observations in the dataset (i.e. weeks in this case). We extract the
feature activations for dense7 and sof tmax8 (see Figure 2. For each user we
compute the mean and standard deviation for these extracted feature activa-
tions across the diﬀerent weeks. A total of 800 + 2nc features are extracted this
way, where nc is the number of classes in the problem at hand (2 for gender,
3 for age). The number of features for the SVM is constant regardless of the
number of weeks for a given user.

5 Results

In line with previous work and potential applications, we demonstrate the ef-
fectiveness of our method on gender and age prediction. We consider a binary
gender variable (largest class: 56.3%) and an age variable discretized by the
data provider into three groups: [18 − 39],[40 − 49],[50+], splitting the dataset
almost equally (largest class: 35.7%). Our dataset contains data of approximately
150.000 people. We split it into training (100.000 people), validation (10.000 peo-
ple), and test set (40.000 people). We compare our results to a state-of-the-art
approach, Bandicoot-SVM [10], using an SVM on the bandicoot features trained
and tested on the same data as our method.

We report results using the three approaches for aggregating patterns across
weeks described in Sect. 4. Table 2 shows that our 2-step model (ConvNet-SVM),
which extracts the high-level features found using the ConvNet and models them
with an SVM yields the highest accuracy of the three approaches.

Our ConvNet-SVM method reaches state-of-the-art accuracy and slightly
outperforms it on both age and gender prediction (p < 10−5 with a one-tailed t-
test). Our method reaches the state-of-the-art using only the temporal modality
in mobile metadata, whereas the current state-of-the-art approach also exploits
patterns related to mobility (see Sect. 7).

Mobile phone usage in developing countries is still fairly low [17] making it
important for our method to perform well on low-activity users (see Figure 4 for
the distribution of interactions per user). To test the performance of our method,
we train and evaluate it on low-activity users (users with fewer interactions than

8

Modeling the Temporal Nature of Human Behavior

Table 2. Accuracy of classiﬁers on the test set when predicting age and gender.

Age Gender
35.7% 56.3%
Random
Bandicoot-SVM
61.6% 78.2%
ConvNet (averaging) 60.7% 78.3%
61.3% 78.4%
ConvNet-LSTM
63.1% 79.7%
ConvNet-SVM

Fig. 3. Accuracy on gender prediction
as a function of the number of inter-
actions (across all 14 weeks) visual-
ized using generalized additive model
(GAM) smoothing. The x-axis is con-
strained to contain roughly 50% of the
users. The black solid line is the base-
line accuracy when predicting everyone
as part of the majority class.

Fig. 4. Histogram of the distribution of
the number of interactions. The top 5%
users in terms of number of interactions
are not included.

Table 3. Accuracy on the original and the temporally randomized week-matrices.

Age Gender
Original 60.7 % 78.3%
Permuted 54.0 % 70.4%
-11.0% -10.1%
Change

the median) and show that our model reaches state-of-the-art and even slightly
outperforms it (p < 0.01 with a one-tailed t-test) with an accuracy of 76.9% vs.
75.7% for the Bandicoot-SVM. Figure 3 shows the accuracy of our method and
the Bandicoot-SVM as a function of the number of interactions (calls + texts)

Modeling the Temporal Nature of Human Behavior

9

when trained on all users showing that we perform particularly well on users
with few interactions.

6 Evaluating Assumptions

Designing a ConvNet architecture for a particular modeling task involves many
choices regarding ﬁlter sizes, layer types, etc. We derived many of our choices
from the three assumptions stated in Sect. 3. In this section we evaluate these
assumptions to qualify our choices.

Evaluating Assumption 1: The ﬁrst assumption states that the weekday
and time of day of an observed pattern holds predictive power. One way we
can evaluate this assumption is by comparing the performance of a ConvNet on
the original data with the performance of a ConvNet using the same hyperpa-
rameters and architecture but using data that has been temporally randomized.
We temporally randomize the dataset by assigning values to cells at random in
the week-matrix, thereby destroying potential temporal patterns in the week-
matrices while keeping the rest of the information intact (total activity, etc). To
quantify the impact of the temporal randomization independently of the SVM,
we evaluate the performance when averaging predictions across weeks. Table
3 shows temporally randomizing the week-matrices decreases accuracy by 11%
when predicting age and by 10.1% when predicting gender.

The importance of the time and day of the interactions is indicated by exam-
ining the week-matrices which our model is most conﬁdent belong to a man or
a woman. Figure 5 shows that the top “men” week-matrix has a higher number
of outgoing contacts during the hours from 7 am to 4 pm on workdays while the
top “female” week-matrix’s outgoing contacts are spread across the day.

Evaluating Assumption 2: The second assumption states that temporal pat-
terns are similar across weekdays. To evaluate our assumption, we examine the
performance of ConvNet architectures on a 1-dimensional representation of the
data. While this 1D representation contains the same information as the week-
matrix, the hours of the weekdays are arranged next to each other horizontally
instead of vertically (168 × 1 instead of 24 × 7, see Figure 1) therefore prevent-
ing the ConvNet to exploit similarity in patterns across days of the week. We
test multiple ConvNet architectures (examples in Table 4) that have the same
number of conv. layers as our ConvNet architecture and a comparable number
of parameters and show that all of these architectures yield a lower accuracy
than our ConvNet and the current state-of-the-art approach.

Evaluating Assumption 3: The third assumption states that local temporal
patterns captured by convolutional ﬁlters (see Eqn. 1) can be combined into
predictive global features, thereby eliminating the need for hand-engineered fea-
tures. To evaluate this assumption, we examine the global features learned with

10

Modeling the Temporal Nature of Human Behavior

Table 4. Examples of 1-dimensional ConvNet architectures that we have tested. These
contain convolutional, dense, max-pool and softmax layers as denoted by the preﬁx.
The ﬁlter size is shown in the suﬃx. The mark (s) means that the conv. layer has a
stride of 2. Padding is used such that only pooling and stride reduces the dimensions.

ConvNet 1 ConvNet 2
input

conv13
conv13
conv13(s)
conv13
conv13
conv13(s)

conv5
conv5
pool2
conv5
conv5
pool2
conv5
conv5

dense
sof tmax

Table 5. Top 5 bandicoot features captured by the neurons.

|r|
Features
0.786
Interevent time (call)
0.782
Number of contacts (text)
0.769
Interevent time (text)
Entropy of contacts (call)
0.764
Number of interactions (text) 0.761

Fig. 5. Visualization of a single channel, the number of unique outgoing contacts,
in the week-matrix most predictive of the male gender (top) and of female gender
(bottom). The week-matrix most predictive of male gender has a higher number of
outgoing contacts during the hours from 7am to 4pm on workdays while the “female”
week-matrix’s outgoing contacts are spread across the day.

Modeling the Temporal Nature of Human Behavior

11

our deep learning method by comparing the patterns captured by the neurons
of our ConvNet5 with the bandicoot features. We only consider the individual
bandicoot features as our ConvNet does not capture location and movement
information used for the mobility features.

Table 5 shows that the ConvNet captures information very similar to the
one encoded in high-level hand-engineered features such as interevent time and
entropy of contacts, suggesting that our deep learning model combines local
temporal patterns into global features.

7 Discussion

Our results (Table 2) show that the ConvNet-SVM outperforms the ConvNet-
LSTM despite the ConvNet-SVM not capturing the ordering of the week-matrices.
While an in-depth study is outside the scope of this paper, these results sug-
gest that there are no strong inter-week patterns that are crucial for predicting
demographic attributes.

The state-of-the-art approach found that two mobility features (percent in-
teractions at home and entropy of antennas) were among the top 5 most pre-
dictive features for one of their two benchmark datasets [10]. In contrast, our
ConvNet-SVM method reached state-of-the-art accuracy despite not using mo-
bility information at all. In future work, we would like to use deep learning
methods for modeling the other modalities in mobile phone metadata as well,
thereby likely increasing the prediction accuracy. Our weekmatrix representa-
tion have been added to bandicoot6 and our trained ConvNets for Caﬀe [11] are
available7.

References

1. Bengio, Y., Courville, A., Vincent, P.: Representation learning: A review and new

perspectives. TPAMI (2013)

2. Bengtsson, L., Lu, X., Thorson, A., Garﬁeld, R., Von Schreeb, J.: Improved re-
sponse to disasters and outbreaks by tracking population movements with mobile
phone network data: a post-earthquake geospatial study in haiti. PLoS medicine
(2011)

3. Chollet, F.: keras. https://github.com/fchollet/keras (2015)
4. Donahue, J., Jia, Y., Vinyals, O., Hoﬀman, J., Zhang, N., Tzeng, E., Darrell,
T.: Decaf: A deep convolutional activation feature for generic visual recognition.
PMLR (2013)

5. Dong, Y., Yang, Y., Tang, J., Yang, Y., Chawla, N.V.: Inferring user demographics

and social strategies in mobile social networks. ACM SIGKDD (2014)

6. Frias-Martinez, V., Frias-Martinez, E., Oliver, N.: A gender-centric analysis of
calling behavior in a developing economy using call detail records. AAAI Spring
Symposium: Artiﬁcial Intelligence for Development (2010)

5 For this comparison we use the mean activation of neurons in the F C7 layer.
6 Version ≥ 0.4 at http://bandicoot.mit.edu under bc.special.punchcard
7 https://github.com/yvesalexandre/convnet-metadata/

12

Modeling the Temporal Nature of Human Behavior

7. Gal, Y.: A theoretically grounded application of dropout in recurrent neural net-

works. NIPS (2016)

8. Herrera-Yag¨ue, C., Zuﬁria, P.J.: Prediction of telephone user attributes based on
network neighborhood information. International Workshop on Machine Learning
and Data Mining in Pattern Recognition (2012)

9. Hochreiter, S., Schmidhuber, J.: Long short-term memory. Neural computation

(1997)

10. Jahani, E., Sundsøy, P., Bjelland, J., Bengtsson, L., de Montjoye, Y.A., et al.:
Improving oﬃcial statistics in emerging markets using machine learning and mobile
phone data. EPJ Data Science 6(1), 3 (2017)

11. Jia, Y., Shelhamer, E., Donahue, J., Karayev, S., Long, J., Girshick, R., Guadar-
rama, S., Darrell, T.: Caﬀe: Convolutional architecture for fast feature embedding.
arXiv (2014)

12. Kingma, D., Ba, J.: Adam: A method for stochastic optimization. ICLR (2015)
13. LeCun, Y., Bengio, Y., Hinton, G.: Deep learning. Nature (2015)
14. Maas, A.L., Hannun, A.Y., Ng, A.Y.: Rectiﬁer nonlinearities improve neural net-

work acoustic models. ICML (2013)

15. de Montjoye, Y.A., Quoidbach, J., Robic, F., Pentland, A.S.: Predicting personal-
ity using novel mobile phone-based metrics. Social computing, behavioral-cultural
modeling and prediction (2013)

16. de Montjoye, Y.A., Rocher, L., Pentland, A.S.: bandicoot: a python toolbox for mo-
bile phone metadata. Journal of Machine Learning Research 17(175), 1–5 (2016),
http://jmlr.org/papers/v17/15-593.html

17. News, I.: Mobile subscriptions near the 7 billion mark - does almost everyone have

a phone? (2013), web. Accessed Jan 5 2016

18. Nielsen, M.A.: Neural Networks and Deep Learning. Determination Press (2015)
19. Sarraute, C., Blanc, P., Burroni, J.: A study of age and gender seen through mobile

phone usage patterns in mexico. ASONAM (2014)

20. Snoek, J., Larochelle, H., Adams, R.P.: Practical bayesian optimization of machine

21. Stuart, E., Samman, E., Avis, W., Berliner, T.: The data revolution (2015), over-

learning algorithms. NIPS (2012)

seas Development Institute

22. Theano Development Team: Theano: A Python framework for fast computation of

mathematical expressions. arXiv (2016)

23. United Nations, U.: A world that counts - mobilising the data revolution for sus-
tainable development (2014), uN Independent Expert Advisory Group on a Data
Revolution for Sustainable Development

24. Wesolowski, A., Qureshi, T., Boni, M.F., Sundsøy, P.R., Johansson, M.A., Rasheed,
S.B., Engø-Monsen, K., Buckee, C.O.: Impact of human mobility on the emergence
of dengue epidemics in pakistan. PNAS (2015)

7
1
0
2
 
v
o
N
 
5
1
 
 
]

G
L
.
s
c
[
 
 
5
v
0
6
6
6
0
.
1
1
5
1
:
v
i
X
r
a

Modeling the Temporal Nature of Human
Behavior for Demographics Prediction

Bjarke Felbo1,3, P˚al Sundsøy2, Alex ‘Sandy’ Pentland1, Sune Lehmann3, and
Yves-Alexandre de Montjoye1,4

1 Massachusetts Institute of Technology, MIT Media Lab
2 Telenor Research
3 Technical University of Denmark, DTU Compute
4 Imperial College London, Dept. of Computing and Data Science Institute

Abstract. Mobile phone metadata is increasingly used for humanitar-
ian purposes in developing countries as traditional data is scarce. Ba-
sic demographic information is however often absent from mobile phone
datasets, limiting the operational impact of the datasets. For these rea-
sons, there has been a growing interest in predicting demographic infor-
mation from mobile phone metadata. Previous work focused on creating
increasingly advanced features to be modeled with standard machine
learning algorithms. We here instead model the raw mobile phone meta-
data directly using deep learning, exploiting the temporal nature of the
patterns in the data. From high-level assumptions we design a data rep-
resentation and convolutional network architecture for modeling patterns
within a week. We then examine three strategies for aggregating patterns
across weeks and show that our method reaches state-of-the-art accuracy
on both age and gender prediction using only the temporal modality in
mobile metadata. We ﬁnally validate our method on low activity users
and evaluate the modeling assumptions.

Keywords: Call detail records, mobile phone metadata, temporal pat-
terns, user modeling, demographics prediction

1

Introduction

For the ﬁrst time last year, there were more active mobile phones in the world
than humans [17]. Every time one of these phones is being used to text or call,
it generates mobile phone metadata or CDR (Call Detail Records). Collected at
large scale this metadata – records of who calls or texts whom, for how long, and
from where – provide a unique lens into the behavior of humans and societies.
For instance, mobile phone metadata have been used to plan disaster response
and inform public health policy [2,24]. The potential of mobile phone metadata is
particularly high in developing countries where basic statistics such as population
density or mobility are often either missing or suﬀer from severe biases [21]. Last
year, an expert advisory group to the United Nations emphasized the importance
of mobile phone data in measuring and ultimately achieving the Sustainable
Development Goals [23].

2

Modeling the Temporal Nature of Human Behavior

Fig. 1. The mean number of outgoing calls averaged across the population. Diﬀerences
between workdays and weekends are clearly visible as well as diﬀerent times of the day.

The potential of mobile phone data in developing countries has, however,
been hindered by the absence of demographic information, such as age or gen-
der, associated with the data. This issue has caused a growing interest in pre-
dicting demographic information from mobile phone metadata. While previous
work has focused on developing increasingly complicated features, we here pro-
pose a novel way of modeling mobile phone metadata using deep learning. From
high-level assumptions regarding the nature of temporal patterns, we design
a data representation and convolutional network (ConvNet) architecture that
reach state-of-the-art accuracy inferring both age and gender using only the
temporal modality.

2 Related work

Previous work has relied heavily on hand-engineered features to predict demo-
graphics and other information from mobile phone metadata. Sarraute et al. [19]
and Herrera-Yage et al [8] both combined hand-engineered features with vari-
ous machine learning algorithms to predict gender from mobile phone metadata
while de Montjoye et al. used them to predict personality traits [15]. Martinez
et al. used an support vector machine (SVM) and random forest (RF) on similar
features as well as a custom algorithm based on k-means to predict gender [6].
Finally, Dong et al. used a double-dependent factor graph model to predict de-
mographic information in a mobile phone social graph [5]. While promising, the
graph-based approach requires demographic information about a large fraction
of the population to be known a priori, making it impractical in most coun-
tries where training data is not available at scale and must be collected through
surveys.

The current state of the art in predicting demographics from mobile phone
data is a recent paper by Jahani et al. [10] which relies on a large number of hand-
engineered features (1440) provided by the open-source bandicoot toolbox [16]
and a carefully tuned SVM with a radial basis function kernel. The features
used are divided into two categories (individual, spatial) and based on carefully
engineered deﬁnitions such as how to group together calls and text messages into
conversations or compute the churn rate of common locations.

Modeling the Temporal Nature of Human Behavior

3

3 Data and Assumptions

A mobile phone produces a record every time it sends or receives a text message
or makes or receives a phone call. These records (called mobile phone metadata,
or CDRs) are generated by the carrier’s infrastructure and are highly stan-
dardized. CDRs contain the type of interaction (text/call), direction (in/out),
timestamp (date and time), recipient ID, call duration (if call) and cell tower to
which the phone was connected to. The dataset we work with, provided by an
anonymous carrier, contains more than 250 million anonymized mobile phone
records for 150.000 people in a Western European country covering a period of
14 weeks.

We state the following three assumptions about the nature of the temporal

patterns in mobile phone metadata:

1. The day of the week and time of day of an observed pattern holds

predictive power

Previous work showed that increasing the temporal granularity of the hand-
engineered features in the bandicoot toolbox by diﬀerentiating between day-
time and nighttime activity yields a substantial accuracy boost [10]. For
instance, the percentage of initiated calls at night during the weekend was
one of the most useful features to predict gender. Consequently, we assume
that information on the speciﬁc time of the week that a pattern occurred
contains useful information to predict demographic attributes.

2. Temporal patterns are similar across days of the week

While the time of day matters (e.g. night vs. day), we furthermore assume
that such temporal patterns have similarities across days of the week which
could help predict demographic attributes. For instance, one could imagine
that a relevant temporal pattern on Friday night may help model a similar
pattern on Saturday night.

3. Local temporal patterns can be combined into predictive global

features

The current state-of-the-art approach relies on complex hand-engineered
(and non-linear) features such as the response rate within conversations,
churn between antennas, and entropy of contacts [10]. We assume that the
convolutional network (ConvNet) will be able to combine local temporal
patterns on the scale of hours to ﬁnd global features (i.e. on the scale of
days/weeks), thereby removing the need for such high-level hand-engineered
features. ConvNets have similarly been used in previous work to learn a
hierarchy of features directly from raw visual data [13].

4

Modeling the Temporal Nature of Human Behavior

4 Representation, Architecture

and Aggregation

4.1 Week-matrix representation

Assumption 1 and Assumption 2 from Sect. 3 are used to derive our data repre-
sentation for a week of mobile phone metadata. We represent the data as eight
matrices summarizing mobile phone usage on a given week with hours of the
day on the x-axis and the weekdays on the y-axis (see Figure 1). These eight
matrices are the number of unique contacts, calls, texts and the total duration
of calls for incoming and outgoing interactions respectively. Every cell in the
matrices represents the amount of activity for a given variable of interest in
that hour interval (e.g. between 2 and 3 pm). In this way, we eﬀectively bin any
number of interactions during the week. These eight matrices are combined into
a 3-dimensional matrix with a separate ‘channel’ for each of the 8 variables of
interest. This 3-dimensional matrix is named a ‘week-matrix’.

The week-matrix representation is a logical result of our Assumption 1 and
Assumption 2. Our ﬁrst assumption focuses on the importance of high temporal
granularity, which is why our data representation summarizes mobile phone us-
age for each hour, thereby splitting local patterns into separate bins such that
they may be captured by a suitable classiﬁcation algorithm. Our second assump-
tion focuses on the similarity of temporal patterns across weekdays, making it
logical to design the week-matrix to have the weekdays on the y-axis such that
similar patterns are located in neighboring cells in the matrix (see Figure 1 for
clear temporal patterns in mobile phone usage across weekdays). We shift the
time in the matrices by 4 hours such that it is easier to capture mobile phone
usage occurring across midnight (Figure 1 shows that there is especially a lot
of activity occurring the night between Saturday and Sunday). Each row in the
matrix thus contains data from 4am-4am instead of from midnight to midnight.
This shift also moves the low-activity (and potentially less informative) areas to
the borders of the matrix.

4.2 ConvNet architecture

We use our assumptions (see Sect. 3) to develop the ConvNet architecture used
to model a single week of mobile metadata. The choice of architecture is crucial
to ﬁnding predictive patterns and has been equated to a choice of prior [1].

Assumption 2 emphasizes the similarity of temporal patterns across week-
days. We therefore design an architecture consisting of ﬁve horizontal conv. layers
followed by a vertical conv. ﬁlter and a dense layer (see Table 1 and Figure 2).
The horizontal conv. layers learn to capture patterns within a single day, reusing
the same parameters across diﬀerent times of day and across the diﬀerent week-
days. For a 1D conv. ﬁlter with ﬁlter size four (as illustrated in Figure 2) the
value of a single neuron at the position k in the next layer is:

(cid:32)

(cid:33)

ok = σ

b +

wlik+l

,

3
(cid:88)

l=0

(1)

Modeling the Temporal Nature of Human Behavior

5

where wl is position l in the weight matrix for that ﬁlter and b is the bias [18].
The input is deﬁned as ik for position k in the previous layer. σ is a non-linear
activation function, which in this case is the leaky ReLU [14]. A single conv. layer
consists of multiple ﬁlters with the speciﬁed size, allowing the conv. layer to cap-
ture many diﬀerent patterns across the entire input using only a few parameters.
The intraday patterns captured by the horizontal conv. layers are then com-
bined using the vertical conv. layer across the diﬀerent weekdays to ﬁnd global
features. Lastly, the dense layer and the softmax layer combine these global
features to predict the demographic attribute (see Figure 2).

Assumption 1 and 3 emphasizes the importance of capturing information
about local temporal patterns. Consequently, we design an architecture that
does not use pooling layers, which would throw away information about the
location of the patterns in the week-matrix. Similarly, we make sure of a small
conv. ﬁlter size for the ﬁrst four conv. ﬁlter to focus on capturing local patterns.
There are many diﬀerent parameters that can be tuned when choosing the
architecture and the optimization procedure for training the ConvNet. Bayesian
optimization is used for tuning seven of these as proposed in [20], covering e.g.
the learning rate, L2 regularization, and the number of ﬁlters in the horizontal
conv. layers. The vertical conv. layer has a ﬁxed number of 400 ﬁlters. The dense
layer has 400 neurons, whereas the softmax layer has as many neurons as the
number of classes (two for gender and three for age).

4.3 Aggregation of patterns across weeks

The ConvNet architecture described models only a single week of data at a
time, whereas each user has multiple weeks of data that should all be utilized
when predicting a demographic attribute. Based on our three assumptions (see
Sect. 3) it makes sense to design the ConvNet architecture to model a single
week at a time, making it possible to reuse the same convolutional ﬁlters across
multiple weeks. There are several ways to aggregate the features captured by the
ConvNet for individual weeks, making our method utilize the data for multiple
weeks. We examine three diﬀerent approaches: averaging the predictions, adding
a long short-term memory (LSTM) module to the ConvNet and modeling the
features captured by the ConvNet with an SVM.

The most basic approach for modeling multiple weeks of data is to pass each
week-matrix through the ConvNet architecture and then average the probabili-
ties from the softmax layer. In this way, an overall prediction can be found across
all weeks of data for a given user. An issue with this averaging approach is that
it limits the contribution of a given week to the ﬁnal prediction.

Another way of modeling multiple weeks of data is by modifying the ConvNet
architecture to include a long short-term memory (LSTM) module [9]. The
LSTM is a specialized variant of the recurrent neural network (RNN), which uses
recurrent connections between the neurons to capture patterns in sequences of
inputs. We design a ConvNet-LSTM such that it has the same architecture for
ﬁnding patterns as our ConvNet architecture, but without the ﬁnal softmax layer
for classiﬁcation (i.e. conv1-dense7 as seen in Figure 2). This architecture is then

6

Modeling the Temporal Nature of Human Behavior

Table 1. Architecture for the convolutional network. The ﬁlter size describes the num-
ber of neurons in the previous layer that each neuron in the current conv. layer is
connected to. A ﬁlter with size Mx1 takes as input M neurons located side-by-side
horizontally, whereas a 1xN ﬁlter uses N neurons located side-by-side vertically.

Layer Name Conv. Filter Size

input
conv1
conv2
conv3
conv4
conv5
conv6
dense7
sof tmax8

-
4x1
4x1
4x1
4x1
12x1
1x7
-
-

Fig. 2. Illustration of the convolutional network architecture. The depth of a conv. layer
equals the number of ﬁlters in that layer. Dimensions are not to scale.

Modeling the Temporal Nature of Human Behavior

7

connected to a 2-layer LSTM module with 128 hidden units in each layer. In this
way, the week-matrices can be modeled with an end-to-end architecture that can
utilize convolutional layers to ﬁnd patterns within a week and recurrent layers to
ﬁnd patterns across weeks. It is trained using the default settings of the Adam
optimization method [12]. L2 regularization of 10−4 and recurrent dropout [7]
of 0.5 is used to avoid overﬁtting. The ConvNet-LSTM is implemented using
Keras [3] and Theano [22].

Lastly, we use an SVM with a radial basis function kernel to design a 2-step
model (ConvNet-SVM). The ConvNet is used to transform the raw data into
learned high-level features for each week with the SVM then modeling patterns
across weeks. Using ConvNets to ﬁnd good representations of raw data for mod-
eling with SVMs has previously been done for generic visual recognition [4], but
to our knowledge this is the ﬁrst time it is done for combining patterns across
individual observations in the dataset (i.e. weeks in this case). We extract the
feature activations for dense7 and sof tmax8 (see Figure 2. For each user we
compute the mean and standard deviation for these extracted feature activa-
tions across the diﬀerent weeks. A total of 800 + 2nc features are extracted this
way, where nc is the number of classes in the problem at hand (2 for gender,
3 for age). The number of features for the SVM is constant regardless of the
number of weeks for a given user.

5 Results

In line with previous work and potential applications, we demonstrate the ef-
fectiveness of our method on gender and age prediction. We consider a binary
gender variable (largest class: 56.3%) and an age variable discretized by the
data provider into three groups: [18 − 39],[40 − 49],[50+], splitting the dataset
almost equally (largest class: 35.7%). Our dataset contains data of approximately
150.000 people. We split it into training (100.000 people), validation (10.000 peo-
ple), and test set (40.000 people). We compare our results to a state-of-the-art
approach, Bandicoot-SVM [10], using an SVM on the bandicoot features trained
and tested on the same data as our method.

We report results using the three approaches for aggregating patterns across
weeks described in Sect. 4. Table 2 shows that our 2-step model (ConvNet-SVM),
which extracts the high-level features found using the ConvNet and models them
with an SVM yields the highest accuracy of the three approaches.

Our ConvNet-SVM method reaches state-of-the-art accuracy and slightly
outperforms it on both age and gender prediction (p < 10−5 with a one-tailed t-
test). Our method reaches the state-of-the-art using only the temporal modality
in mobile metadata, whereas the current state-of-the-art approach also exploits
patterns related to mobility (see Sect. 7).

Mobile phone usage in developing countries is still fairly low [17] making it
important for our method to perform well on low-activity users (see Figure 4 for
the distribution of interactions per user). To test the performance of our method,
we train and evaluate it on low-activity users (users with fewer interactions than

8

Modeling the Temporal Nature of Human Behavior

Table 2. Accuracy of classiﬁers on the test set when predicting age and gender.

Age Gender
35.7% 56.3%
Random
Bandicoot-SVM
61.6% 78.2%
ConvNet (averaging) 60.7% 78.3%
61.3% 78.4%
ConvNet-LSTM
63.1% 79.7%
ConvNet-SVM

Fig. 3. Accuracy on gender prediction
as a function of the number of inter-
actions (across all 14 weeks) visual-
ized using generalized additive model
(GAM) smoothing. The x-axis is con-
strained to contain roughly 50% of the
users. The black solid line is the base-
line accuracy when predicting everyone
as part of the majority class.

Fig. 4. Histogram of the distribution of
the number of interactions. The top 5%
users in terms of number of interactions
are not included.

Table 3. Accuracy on the original and the temporally randomized week-matrices.

Age Gender
Original 60.7 % 78.3%
Permuted 54.0 % 70.4%
-11.0% -10.1%
Change

the median) and show that our model reaches state-of-the-art and even slightly
outperforms it (p < 0.01 with a one-tailed t-test) with an accuracy of 76.9% vs.
75.7% for the Bandicoot-SVM. Figure 3 shows the accuracy of our method and
the Bandicoot-SVM as a function of the number of interactions (calls + texts)

Modeling the Temporal Nature of Human Behavior

9

when trained on all users showing that we perform particularly well on users
with few interactions.

6 Evaluating Assumptions

Designing a ConvNet architecture for a particular modeling task involves many
choices regarding ﬁlter sizes, layer types, etc. We derived many of our choices
from the three assumptions stated in Sect. 3. In this section we evaluate these
assumptions to qualify our choices.

Evaluating Assumption 1: The ﬁrst assumption states that the weekday
and time of day of an observed pattern holds predictive power. One way we
can evaluate this assumption is by comparing the performance of a ConvNet on
the original data with the performance of a ConvNet using the same hyperpa-
rameters and architecture but using data that has been temporally randomized.
We temporally randomize the dataset by assigning values to cells at random in
the week-matrix, thereby destroying potential temporal patterns in the week-
matrices while keeping the rest of the information intact (total activity, etc). To
quantify the impact of the temporal randomization independently of the SVM,
we evaluate the performance when averaging predictions across weeks. Table
3 shows temporally randomizing the week-matrices decreases accuracy by 11%
when predicting age and by 10.1% when predicting gender.

The importance of the time and day of the interactions is indicated by exam-
ining the week-matrices which our model is most conﬁdent belong to a man or
a woman. Figure 5 shows that the top “men” week-matrix has a higher number
of outgoing contacts during the hours from 7 am to 4 pm on workdays while the
top “female” week-matrix’s outgoing contacts are spread across the day.

Evaluating Assumption 2: The second assumption states that temporal pat-
terns are similar across weekdays. To evaluate our assumption, we examine the
performance of ConvNet architectures on a 1-dimensional representation of the
data. While this 1D representation contains the same information as the week-
matrix, the hours of the weekdays are arranged next to each other horizontally
instead of vertically (168 × 1 instead of 24 × 7, see Figure 1) therefore prevent-
ing the ConvNet to exploit similarity in patterns across days of the week. We
test multiple ConvNet architectures (examples in Table 4) that have the same
number of conv. layers as our ConvNet architecture and a comparable number
of parameters and show that all of these architectures yield a lower accuracy
than our ConvNet and the current state-of-the-art approach.

Evaluating Assumption 3: The third assumption states that local temporal
patterns captured by convolutional ﬁlters (see Eqn. 1) can be combined into
predictive global features, thereby eliminating the need for hand-engineered fea-
tures. To evaluate this assumption, we examine the global features learned with

10

Modeling the Temporal Nature of Human Behavior

Table 4. Examples of 1-dimensional ConvNet architectures that we have tested. These
contain convolutional, dense, max-pool and softmax layers as denoted by the preﬁx.
The ﬁlter size is shown in the suﬃx. The mark (s) means that the conv. layer has a
stride of 2. Padding is used such that only pooling and stride reduces the dimensions.

ConvNet 1 ConvNet 2
input

conv13
conv13
conv13(s)
conv13
conv13
conv13(s)

conv5
conv5
pool2
conv5
conv5
pool2
conv5
conv5

dense
sof tmax

Table 5. Top 5 bandicoot features captured by the neurons.

|r|
Features
0.786
Interevent time (call)
0.782
Number of contacts (text)
0.769
Interevent time (text)
Entropy of contacts (call)
0.764
Number of interactions (text) 0.761

Fig. 5. Visualization of a single channel, the number of unique outgoing contacts,
in the week-matrix most predictive of the male gender (top) and of female gender
(bottom). The week-matrix most predictive of male gender has a higher number of
outgoing contacts during the hours from 7am to 4pm on workdays while the “female”
week-matrix’s outgoing contacts are spread across the day.

Modeling the Temporal Nature of Human Behavior

11

our deep learning method by comparing the patterns captured by the neurons
of our ConvNet5 with the bandicoot features. We only consider the individual
bandicoot features as our ConvNet does not capture location and movement
information used for the mobility features.

Table 5 shows that the ConvNet captures information very similar to the
one encoded in high-level hand-engineered features such as interevent time and
entropy of contacts, suggesting that our deep learning model combines local
temporal patterns into global features.

7 Discussion

Our results (Table 2) show that the ConvNet-SVM outperforms the ConvNet-
LSTM despite the ConvNet-SVM not capturing the ordering of the week-matrices.
While an in-depth study is outside the scope of this paper, these results sug-
gest that there are no strong inter-week patterns that are crucial for predicting
demographic attributes.

The state-of-the-art approach found that two mobility features (percent in-
teractions at home and entropy of antennas) were among the top 5 most pre-
dictive features for one of their two benchmark datasets [10]. In contrast, our
ConvNet-SVM method reached state-of-the-art accuracy despite not using mo-
bility information at all. In future work, we would like to use deep learning
methods for modeling the other modalities in mobile phone metadata as well,
thereby likely increasing the prediction accuracy. Our weekmatrix representa-
tion have been added to bandicoot6 and our trained ConvNets for Caﬀe [11] are
available7.

References

1. Bengio, Y., Courville, A., Vincent, P.: Representation learning: A review and new

perspectives. TPAMI (2013)

2. Bengtsson, L., Lu, X., Thorson, A., Garﬁeld, R., Von Schreeb, J.: Improved re-
sponse to disasters and outbreaks by tracking population movements with mobile
phone network data: a post-earthquake geospatial study in haiti. PLoS medicine
(2011)

3. Chollet, F.: keras. https://github.com/fchollet/keras (2015)
4. Donahue, J., Jia, Y., Vinyals, O., Hoﬀman, J., Zhang, N., Tzeng, E., Darrell,
T.: Decaf: A deep convolutional activation feature for generic visual recognition.
PMLR (2013)

5. Dong, Y., Yang, Y., Tang, J., Yang, Y., Chawla, N.V.: Inferring user demographics

and social strategies in mobile social networks. ACM SIGKDD (2014)

6. Frias-Martinez, V., Frias-Martinez, E., Oliver, N.: A gender-centric analysis of
calling behavior in a developing economy using call detail records. AAAI Spring
Symposium: Artiﬁcial Intelligence for Development (2010)

5 For this comparison we use the mean activation of neurons in the F C7 layer.
6 Version ≥ 0.4 at http://bandicoot.mit.edu under bc.special.punchcard
7 https://github.com/yvesalexandre/convnet-metadata/

12

Modeling the Temporal Nature of Human Behavior

7. Gal, Y.: A theoretically grounded application of dropout in recurrent neural net-

works. NIPS (2016)

8. Herrera-Yag¨ue, C., Zuﬁria, P.J.: Prediction of telephone user attributes based on
network neighborhood information. International Workshop on Machine Learning
and Data Mining in Pattern Recognition (2012)

9. Hochreiter, S., Schmidhuber, J.: Long short-term memory. Neural computation

(1997)

10. Jahani, E., Sundsøy, P., Bjelland, J., Bengtsson, L., de Montjoye, Y.A., et al.:
Improving oﬃcial statistics in emerging markets using machine learning and mobile
phone data. EPJ Data Science 6(1), 3 (2017)

11. Jia, Y., Shelhamer, E., Donahue, J., Karayev, S., Long, J., Girshick, R., Guadar-
rama, S., Darrell, T.: Caﬀe: Convolutional architecture for fast feature embedding.
arXiv (2014)

12. Kingma, D., Ba, J.: Adam: A method for stochastic optimization. ICLR (2015)
13. LeCun, Y., Bengio, Y., Hinton, G.: Deep learning. Nature (2015)
14. Maas, A.L., Hannun, A.Y., Ng, A.Y.: Rectiﬁer nonlinearities improve neural net-

work acoustic models. ICML (2013)

15. de Montjoye, Y.A., Quoidbach, J., Robic, F., Pentland, A.S.: Predicting personal-
ity using novel mobile phone-based metrics. Social computing, behavioral-cultural
modeling and prediction (2013)

16. de Montjoye, Y.A., Rocher, L., Pentland, A.S.: bandicoot: a python toolbox for mo-
bile phone metadata. Journal of Machine Learning Research 17(175), 1–5 (2016),
http://jmlr.org/papers/v17/15-593.html

17. News, I.: Mobile subscriptions near the 7 billion mark - does almost everyone have

a phone? (2013), web. Accessed Jan 5 2016

18. Nielsen, M.A.: Neural Networks and Deep Learning. Determination Press (2015)
19. Sarraute, C., Blanc, P., Burroni, J.: A study of age and gender seen through mobile

phone usage patterns in mexico. ASONAM (2014)

20. Snoek, J., Larochelle, H., Adams, R.P.: Practical bayesian optimization of machine

21. Stuart, E., Samman, E., Avis, W., Berliner, T.: The data revolution (2015), over-

learning algorithms. NIPS (2012)

seas Development Institute

22. Theano Development Team: Theano: A Python framework for fast computation of

mathematical expressions. arXiv (2016)

23. United Nations, U.: A world that counts - mobilising the data revolution for sus-
tainable development (2014), uN Independent Expert Advisory Group on a Data
Revolution for Sustainable Development

24. Wesolowski, A., Qureshi, T., Boni, M.F., Sundsøy, P.R., Johansson, M.A., Rasheed,
S.B., Engø-Monsen, K., Buckee, C.O.: Impact of human mobility on the emergence
of dengue epidemics in pakistan. PNAS (2015)

7
1
0
2
 
v
o
N
 
5
1
 
 
]

G
L
.
s
c
[
 
 
5
v
0
6
6
6
0
.
1
1
5
1
:
v
i
X
r
a

Modeling the Temporal Nature of Human
Behavior for Demographics Prediction

Bjarke Felbo1,3, P˚al Sundsøy2, Alex ‘Sandy’ Pentland1, Sune Lehmann3, and
Yves-Alexandre de Montjoye1,4

1 Massachusetts Institute of Technology, MIT Media Lab
2 Telenor Research
3 Technical University of Denmark, DTU Compute
4 Imperial College London, Dept. of Computing and Data Science Institute

Abstract. Mobile phone metadata is increasingly used for humanitar-
ian purposes in developing countries as traditional data is scarce. Ba-
sic demographic information is however often absent from mobile phone
datasets, limiting the operational impact of the datasets. For these rea-
sons, there has been a growing interest in predicting demographic infor-
mation from mobile phone metadata. Previous work focused on creating
increasingly advanced features to be modeled with standard machine
learning algorithms. We here instead model the raw mobile phone meta-
data directly using deep learning, exploiting the temporal nature of the
patterns in the data. From high-level assumptions we design a data rep-
resentation and convolutional network architecture for modeling patterns
within a week. We then examine three strategies for aggregating patterns
across weeks and show that our method reaches state-of-the-art accuracy
on both age and gender prediction using only the temporal modality in
mobile metadata. We ﬁnally validate our method on low activity users
and evaluate the modeling assumptions.

Keywords: Call detail records, mobile phone metadata, temporal pat-
terns, user modeling, demographics prediction

1

Introduction

For the ﬁrst time last year, there were more active mobile phones in the world
than humans [17]. Every time one of these phones is being used to text or call,
it generates mobile phone metadata or CDR (Call Detail Records). Collected at
large scale this metadata – records of who calls or texts whom, for how long, and
from where – provide a unique lens into the behavior of humans and societies.
For instance, mobile phone metadata have been used to plan disaster response
and inform public health policy [2,24]. The potential of mobile phone metadata is
particularly high in developing countries where basic statistics such as population
density or mobility are often either missing or suﬀer from severe biases [21]. Last
year, an expert advisory group to the United Nations emphasized the importance
of mobile phone data in measuring and ultimately achieving the Sustainable
Development Goals [23].

2

Modeling the Temporal Nature of Human Behavior

Fig. 1. The mean number of outgoing calls averaged across the population. Diﬀerences
between workdays and weekends are clearly visible as well as diﬀerent times of the day.

The potential of mobile phone data in developing countries has, however,
been hindered by the absence of demographic information, such as age or gen-
der, associated with the data. This issue has caused a growing interest in pre-
dicting demographic information from mobile phone metadata. While previous
work has focused on developing increasingly complicated features, we here pro-
pose a novel way of modeling mobile phone metadata using deep learning. From
high-level assumptions regarding the nature of temporal patterns, we design
a data representation and convolutional network (ConvNet) architecture that
reach state-of-the-art accuracy inferring both age and gender using only the
temporal modality.

2 Related work

Previous work has relied heavily on hand-engineered features to predict demo-
graphics and other information from mobile phone metadata. Sarraute et al. [19]
and Herrera-Yage et al [8] both combined hand-engineered features with vari-
ous machine learning algorithms to predict gender from mobile phone metadata
while de Montjoye et al. used them to predict personality traits [15]. Martinez
et al. used an support vector machine (SVM) and random forest (RF) on similar
features as well as a custom algorithm based on k-means to predict gender [6].
Finally, Dong et al. used a double-dependent factor graph model to predict de-
mographic information in a mobile phone social graph [5]. While promising, the
graph-based approach requires demographic information about a large fraction
of the population to be known a priori, making it impractical in most coun-
tries where training data is not available at scale and must be collected through
surveys.

The current state of the art in predicting demographics from mobile phone
data is a recent paper by Jahani et al. [10] which relies on a large number of hand-
engineered features (1440) provided by the open-source bandicoot toolbox [16]
and a carefully tuned SVM with a radial basis function kernel. The features
used are divided into two categories (individual, spatial) and based on carefully
engineered deﬁnitions such as how to group together calls and text messages into
conversations or compute the churn rate of common locations.

Modeling the Temporal Nature of Human Behavior

3

3 Data and Assumptions

A mobile phone produces a record every time it sends or receives a text message
or makes or receives a phone call. These records (called mobile phone metadata,
or CDRs) are generated by the carrier’s infrastructure and are highly stan-
dardized. CDRs contain the type of interaction (text/call), direction (in/out),
timestamp (date and time), recipient ID, call duration (if call) and cell tower to
which the phone was connected to. The dataset we work with, provided by an
anonymous carrier, contains more than 250 million anonymized mobile phone
records for 150.000 people in a Western European country covering a period of
14 weeks.

We state the following three assumptions about the nature of the temporal

patterns in mobile phone metadata:

1. The day of the week and time of day of an observed pattern holds

predictive power

Previous work showed that increasing the temporal granularity of the hand-
engineered features in the bandicoot toolbox by diﬀerentiating between day-
time and nighttime activity yields a substantial accuracy boost [10]. For
instance, the percentage of initiated calls at night during the weekend was
one of the most useful features to predict gender. Consequently, we assume
that information on the speciﬁc time of the week that a pattern occurred
contains useful information to predict demographic attributes.

2. Temporal patterns are similar across days of the week

While the time of day matters (e.g. night vs. day), we furthermore assume
that such temporal patterns have similarities across days of the week which
could help predict demographic attributes. For instance, one could imagine
that a relevant temporal pattern on Friday night may help model a similar
pattern on Saturday night.

3. Local temporal patterns can be combined into predictive global

features

The current state-of-the-art approach relies on complex hand-engineered
(and non-linear) features such as the response rate within conversations,
churn between antennas, and entropy of contacts [10]. We assume that the
convolutional network (ConvNet) will be able to combine local temporal
patterns on the scale of hours to ﬁnd global features (i.e. on the scale of
days/weeks), thereby removing the need for such high-level hand-engineered
features. ConvNets have similarly been used in previous work to learn a
hierarchy of features directly from raw visual data [13].

4

Modeling the Temporal Nature of Human Behavior

4 Representation, Architecture

and Aggregation

4.1 Week-matrix representation

Assumption 1 and Assumption 2 from Sect. 3 are used to derive our data repre-
sentation for a week of mobile phone metadata. We represent the data as eight
matrices summarizing mobile phone usage on a given week with hours of the
day on the x-axis and the weekdays on the y-axis (see Figure 1). These eight
matrices are the number of unique contacts, calls, texts and the total duration
of calls for incoming and outgoing interactions respectively. Every cell in the
matrices represents the amount of activity for a given variable of interest in
that hour interval (e.g. between 2 and 3 pm). In this way, we eﬀectively bin any
number of interactions during the week. These eight matrices are combined into
a 3-dimensional matrix with a separate ‘channel’ for each of the 8 variables of
interest. This 3-dimensional matrix is named a ‘week-matrix’.

The week-matrix representation is a logical result of our Assumption 1 and
Assumption 2. Our ﬁrst assumption focuses on the importance of high temporal
granularity, which is why our data representation summarizes mobile phone us-
age for each hour, thereby splitting local patterns into separate bins such that
they may be captured by a suitable classiﬁcation algorithm. Our second assump-
tion focuses on the similarity of temporal patterns across weekdays, making it
logical to design the week-matrix to have the weekdays on the y-axis such that
similar patterns are located in neighboring cells in the matrix (see Figure 1 for
clear temporal patterns in mobile phone usage across weekdays). We shift the
time in the matrices by 4 hours such that it is easier to capture mobile phone
usage occurring across midnight (Figure 1 shows that there is especially a lot
of activity occurring the night between Saturday and Sunday). Each row in the
matrix thus contains data from 4am-4am instead of from midnight to midnight.
This shift also moves the low-activity (and potentially less informative) areas to
the borders of the matrix.

4.2 ConvNet architecture

We use our assumptions (see Sect. 3) to develop the ConvNet architecture used
to model a single week of mobile metadata. The choice of architecture is crucial
to ﬁnding predictive patterns and has been equated to a choice of prior [1].

Assumption 2 emphasizes the similarity of temporal patterns across week-
days. We therefore design an architecture consisting of ﬁve horizontal conv. layers
followed by a vertical conv. ﬁlter and a dense layer (see Table 1 and Figure 2).
The horizontal conv. layers learn to capture patterns within a single day, reusing
the same parameters across diﬀerent times of day and across the diﬀerent week-
days. For a 1D conv. ﬁlter with ﬁlter size four (as illustrated in Figure 2) the
value of a single neuron at the position k in the next layer is:

(cid:32)

(cid:33)

ok = σ

b +

wlik+l

,

3
(cid:88)

l=0

(1)

Modeling the Temporal Nature of Human Behavior

5

where wl is position l in the weight matrix for that ﬁlter and b is the bias [18].
The input is deﬁned as ik for position k in the previous layer. σ is a non-linear
activation function, which in this case is the leaky ReLU [14]. A single conv. layer
consists of multiple ﬁlters with the speciﬁed size, allowing the conv. layer to cap-
ture many diﬀerent patterns across the entire input using only a few parameters.
The intraday patterns captured by the horizontal conv. layers are then com-
bined using the vertical conv. layer across the diﬀerent weekdays to ﬁnd global
features. Lastly, the dense layer and the softmax layer combine these global
features to predict the demographic attribute (see Figure 2).

Assumption 1 and 3 emphasizes the importance of capturing information
about local temporal patterns. Consequently, we design an architecture that
does not use pooling layers, which would throw away information about the
location of the patterns in the week-matrix. Similarly, we make sure of a small
conv. ﬁlter size for the ﬁrst four conv. ﬁlter to focus on capturing local patterns.
There are many diﬀerent parameters that can be tuned when choosing the
architecture and the optimization procedure for training the ConvNet. Bayesian
optimization is used for tuning seven of these as proposed in [20], covering e.g.
the learning rate, L2 regularization, and the number of ﬁlters in the horizontal
conv. layers. The vertical conv. layer has a ﬁxed number of 400 ﬁlters. The dense
layer has 400 neurons, whereas the softmax layer has as many neurons as the
number of classes (two for gender and three for age).

4.3 Aggregation of patterns across weeks

The ConvNet architecture described models only a single week of data at a
time, whereas each user has multiple weeks of data that should all be utilized
when predicting a demographic attribute. Based on our three assumptions (see
Sect. 3) it makes sense to design the ConvNet architecture to model a single
week at a time, making it possible to reuse the same convolutional ﬁlters across
multiple weeks. There are several ways to aggregate the features captured by the
ConvNet for individual weeks, making our method utilize the data for multiple
weeks. We examine three diﬀerent approaches: averaging the predictions, adding
a long short-term memory (LSTM) module to the ConvNet and modeling the
features captured by the ConvNet with an SVM.

The most basic approach for modeling multiple weeks of data is to pass each
week-matrix through the ConvNet architecture and then average the probabili-
ties from the softmax layer. In this way, an overall prediction can be found across
all weeks of data for a given user. An issue with this averaging approach is that
it limits the contribution of a given week to the ﬁnal prediction.

Another way of modeling multiple weeks of data is by modifying the ConvNet
architecture to include a long short-term memory (LSTM) module [9]. The
LSTM is a specialized variant of the recurrent neural network (RNN), which uses
recurrent connections between the neurons to capture patterns in sequences of
inputs. We design a ConvNet-LSTM such that it has the same architecture for
ﬁnding patterns as our ConvNet architecture, but without the ﬁnal softmax layer
for classiﬁcation (i.e. conv1-dense7 as seen in Figure 2). This architecture is then

6

Modeling the Temporal Nature of Human Behavior

Table 1. Architecture for the convolutional network. The ﬁlter size describes the num-
ber of neurons in the previous layer that each neuron in the current conv. layer is
connected to. A ﬁlter with size Mx1 takes as input M neurons located side-by-side
horizontally, whereas a 1xN ﬁlter uses N neurons located side-by-side vertically.

Layer Name Conv. Filter Size

input
conv1
conv2
conv3
conv4
conv5
conv6
dense7
sof tmax8

-
4x1
4x1
4x1
4x1
12x1
1x7
-
-

Fig. 2. Illustration of the convolutional network architecture. The depth of a conv. layer
equals the number of ﬁlters in that layer. Dimensions are not to scale.

Modeling the Temporal Nature of Human Behavior

7

connected to a 2-layer LSTM module with 128 hidden units in each layer. In this
way, the week-matrices can be modeled with an end-to-end architecture that can
utilize convolutional layers to ﬁnd patterns within a week and recurrent layers to
ﬁnd patterns across weeks. It is trained using the default settings of the Adam
optimization method [12]. L2 regularization of 10−4 and recurrent dropout [7]
of 0.5 is used to avoid overﬁtting. The ConvNet-LSTM is implemented using
Keras [3] and Theano [22].

Lastly, we use an SVM with a radial basis function kernel to design a 2-step
model (ConvNet-SVM). The ConvNet is used to transform the raw data into
learned high-level features for each week with the SVM then modeling patterns
across weeks. Using ConvNets to ﬁnd good representations of raw data for mod-
eling with SVMs has previously been done for generic visual recognition [4], but
to our knowledge this is the ﬁrst time it is done for combining patterns across
individual observations in the dataset (i.e. weeks in this case). We extract the
feature activations for dense7 and sof tmax8 (see Figure 2. For each user we
compute the mean and standard deviation for these extracted feature activa-
tions across the diﬀerent weeks. A total of 800 + 2nc features are extracted this
way, where nc is the number of classes in the problem at hand (2 for gender,
3 for age). The number of features for the SVM is constant regardless of the
number of weeks for a given user.

5 Results

In line with previous work and potential applications, we demonstrate the ef-
fectiveness of our method on gender and age prediction. We consider a binary
gender variable (largest class: 56.3%) and an age variable discretized by the
data provider into three groups: [18 − 39],[40 − 49],[50+], splitting the dataset
almost equally (largest class: 35.7%). Our dataset contains data of approximately
150.000 people. We split it into training (100.000 people), validation (10.000 peo-
ple), and test set (40.000 people). We compare our results to a state-of-the-art
approach, Bandicoot-SVM [10], using an SVM on the bandicoot features trained
and tested on the same data as our method.

We report results using the three approaches for aggregating patterns across
weeks described in Sect. 4. Table 2 shows that our 2-step model (ConvNet-SVM),
which extracts the high-level features found using the ConvNet and models them
with an SVM yields the highest accuracy of the three approaches.

Our ConvNet-SVM method reaches state-of-the-art accuracy and slightly
outperforms it on both age and gender prediction (p < 10−5 with a one-tailed t-
test). Our method reaches the state-of-the-art using only the temporal modality
in mobile metadata, whereas the current state-of-the-art approach also exploits
patterns related to mobility (see Sect. 7).

Mobile phone usage in developing countries is still fairly low [17] making it
important for our method to perform well on low-activity users (see Figure 4 for
the distribution of interactions per user). To test the performance of our method,
we train and evaluate it on low-activity users (users with fewer interactions than

8

Modeling the Temporal Nature of Human Behavior

Table 2. Accuracy of classiﬁers on the test set when predicting age and gender.

Age Gender
35.7% 56.3%
Random
Bandicoot-SVM
61.6% 78.2%
ConvNet (averaging) 60.7% 78.3%
61.3% 78.4%
ConvNet-LSTM
63.1% 79.7%
ConvNet-SVM

Fig. 3. Accuracy on gender prediction
as a function of the number of inter-
actions (across all 14 weeks) visual-
ized using generalized additive model
(GAM) smoothing. The x-axis is con-
strained to contain roughly 50% of the
users. The black solid line is the base-
line accuracy when predicting everyone
as part of the majority class.

Fig. 4. Histogram of the distribution of
the number of interactions. The top 5%
users in terms of number of interactions
are not included.

Table 3. Accuracy on the original and the temporally randomized week-matrices.

Age Gender
Original 60.7 % 78.3%
Permuted 54.0 % 70.4%
-11.0% -10.1%
Change

the median) and show that our model reaches state-of-the-art and even slightly
outperforms it (p < 0.01 with a one-tailed t-test) with an accuracy of 76.9% vs.
75.7% for the Bandicoot-SVM. Figure 3 shows the accuracy of our method and
the Bandicoot-SVM as a function of the number of interactions (calls + texts)

Modeling the Temporal Nature of Human Behavior

9

when trained on all users showing that we perform particularly well on users
with few interactions.

6 Evaluating Assumptions

Designing a ConvNet architecture for a particular modeling task involves many
choices regarding ﬁlter sizes, layer types, etc. We derived many of our choices
from the three assumptions stated in Sect. 3. In this section we evaluate these
assumptions to qualify our choices.

Evaluating Assumption 1: The ﬁrst assumption states that the weekday
and time of day of an observed pattern holds predictive power. One way we
can evaluate this assumption is by comparing the performance of a ConvNet on
the original data with the performance of a ConvNet using the same hyperpa-
rameters and architecture but using data that has been temporally randomized.
We temporally randomize the dataset by assigning values to cells at random in
the week-matrix, thereby destroying potential temporal patterns in the week-
matrices while keeping the rest of the information intact (total activity, etc). To
quantify the impact of the temporal randomization independently of the SVM,
we evaluate the performance when averaging predictions across weeks. Table
3 shows temporally randomizing the week-matrices decreases accuracy by 11%
when predicting age and by 10.1% when predicting gender.

The importance of the time and day of the interactions is indicated by exam-
ining the week-matrices which our model is most conﬁdent belong to a man or
a woman. Figure 5 shows that the top “men” week-matrix has a higher number
of outgoing contacts during the hours from 7 am to 4 pm on workdays while the
top “female” week-matrix’s outgoing contacts are spread across the day.

Evaluating Assumption 2: The second assumption states that temporal pat-
terns are similar across weekdays. To evaluate our assumption, we examine the
performance of ConvNet architectures on a 1-dimensional representation of the
data. While this 1D representation contains the same information as the week-
matrix, the hours of the weekdays are arranged next to each other horizontally
instead of vertically (168 × 1 instead of 24 × 7, see Figure 1) therefore prevent-
ing the ConvNet to exploit similarity in patterns across days of the week. We
test multiple ConvNet architectures (examples in Table 4) that have the same
number of conv. layers as our ConvNet architecture and a comparable number
of parameters and show that all of these architectures yield a lower accuracy
than our ConvNet and the current state-of-the-art approach.

Evaluating Assumption 3: The third assumption states that local temporal
patterns captured by convolutional ﬁlters (see Eqn. 1) can be combined into
predictive global features, thereby eliminating the need for hand-engineered fea-
tures. To evaluate this assumption, we examine the global features learned with

10

Modeling the Temporal Nature of Human Behavior

Table 4. Examples of 1-dimensional ConvNet architectures that we have tested. These
contain convolutional, dense, max-pool and softmax layers as denoted by the preﬁx.
The ﬁlter size is shown in the suﬃx. The mark (s) means that the conv. layer has a
stride of 2. Padding is used such that only pooling and stride reduces the dimensions.

ConvNet 1 ConvNet 2
input

conv13
conv13
conv13(s)
conv13
conv13
conv13(s)

conv5
conv5
pool2
conv5
conv5
pool2
conv5
conv5

dense
sof tmax

Table 5. Top 5 bandicoot features captured by the neurons.

|r|
Features
0.786
Interevent time (call)
0.782
Number of contacts (text)
0.769
Interevent time (text)
Entropy of contacts (call)
0.764
Number of interactions (text) 0.761

Fig. 5. Visualization of a single channel, the number of unique outgoing contacts,
in the week-matrix most predictive of the male gender (top) and of female gender
(bottom). The week-matrix most predictive of male gender has a higher number of
outgoing contacts during the hours from 7am to 4pm on workdays while the “female”
week-matrix’s outgoing contacts are spread across the day.

Modeling the Temporal Nature of Human Behavior

11

our deep learning method by comparing the patterns captured by the neurons
of our ConvNet5 with the bandicoot features. We only consider the individual
bandicoot features as our ConvNet does not capture location and movement
information used for the mobility features.

Table 5 shows that the ConvNet captures information very similar to the
one encoded in high-level hand-engineered features such as interevent time and
entropy of contacts, suggesting that our deep learning model combines local
temporal patterns into global features.

7 Discussion

Our results (Table 2) show that the ConvNet-SVM outperforms the ConvNet-
LSTM despite the ConvNet-SVM not capturing the ordering of the week-matrices.
While an in-depth study is outside the scope of this paper, these results sug-
gest that there are no strong inter-week patterns that are crucial for predicting
demographic attributes.

The state-of-the-art approach found that two mobility features (percent in-
teractions at home and entropy of antennas) were among the top 5 most pre-
dictive features for one of their two benchmark datasets [10]. In contrast, our
ConvNet-SVM method reached state-of-the-art accuracy despite not using mo-
bility information at all. In future work, we would like to use deep learning
methods for modeling the other modalities in mobile phone metadata as well,
thereby likely increasing the prediction accuracy. Our weekmatrix representa-
tion have been added to bandicoot6 and our trained ConvNets for Caﬀe [11] are
available7.

References

1. Bengio, Y., Courville, A., Vincent, P.: Representation learning: A review and new

perspectives. TPAMI (2013)

2. Bengtsson, L., Lu, X., Thorson, A., Garﬁeld, R., Von Schreeb, J.: Improved re-
sponse to disasters and outbreaks by tracking population movements with mobile
phone network data: a post-earthquake geospatial study in haiti. PLoS medicine
(2011)

3. Chollet, F.: keras. https://github.com/fchollet/keras (2015)
4. Donahue, J., Jia, Y., Vinyals, O., Hoﬀman, J., Zhang, N., Tzeng, E., Darrell,
T.: Decaf: A deep convolutional activation feature for generic visual recognition.
PMLR (2013)

5. Dong, Y., Yang, Y., Tang, J., Yang, Y., Chawla, N.V.: Inferring user demographics

and social strategies in mobile social networks. ACM SIGKDD (2014)

6. Frias-Martinez, V., Frias-Martinez, E., Oliver, N.: A gender-centric analysis of
calling behavior in a developing economy using call detail records. AAAI Spring
Symposium: Artiﬁcial Intelligence for Development (2010)

5 For this comparison we use the mean activation of neurons in the F C7 layer.
6 Version ≥ 0.4 at http://bandicoot.mit.edu under bc.special.punchcard
7 https://github.com/yvesalexandre/convnet-metadata/

12

Modeling the Temporal Nature of Human Behavior

7. Gal, Y.: A theoretically grounded application of dropout in recurrent neural net-

works. NIPS (2016)

8. Herrera-Yag¨ue, C., Zuﬁria, P.J.: Prediction of telephone user attributes based on
network neighborhood information. International Workshop on Machine Learning
and Data Mining in Pattern Recognition (2012)

9. Hochreiter, S., Schmidhuber, J.: Long short-term memory. Neural computation

(1997)

10. Jahani, E., Sundsøy, P., Bjelland, J., Bengtsson, L., de Montjoye, Y.A., et al.:
Improving oﬃcial statistics in emerging markets using machine learning and mobile
phone data. EPJ Data Science 6(1), 3 (2017)

11. Jia, Y., Shelhamer, E., Donahue, J., Karayev, S., Long, J., Girshick, R., Guadar-
rama, S., Darrell, T.: Caﬀe: Convolutional architecture for fast feature embedding.
arXiv (2014)

12. Kingma, D., Ba, J.: Adam: A method for stochastic optimization. ICLR (2015)
13. LeCun, Y., Bengio, Y., Hinton, G.: Deep learning. Nature (2015)
14. Maas, A.L., Hannun, A.Y., Ng, A.Y.: Rectiﬁer nonlinearities improve neural net-

work acoustic models. ICML (2013)

15. de Montjoye, Y.A., Quoidbach, J., Robic, F., Pentland, A.S.: Predicting personal-
ity using novel mobile phone-based metrics. Social computing, behavioral-cultural
modeling and prediction (2013)

16. de Montjoye, Y.A., Rocher, L., Pentland, A.S.: bandicoot: a python toolbox for mo-
bile phone metadata. Journal of Machine Learning Research 17(175), 1–5 (2016),
http://jmlr.org/papers/v17/15-593.html

17. News, I.: Mobile subscriptions near the 7 billion mark - does almost everyone have

a phone? (2013), web. Accessed Jan 5 2016

18. Nielsen, M.A.: Neural Networks and Deep Learning. Determination Press (2015)
19. Sarraute, C., Blanc, P., Burroni, J.: A study of age and gender seen through mobile

phone usage patterns in mexico. ASONAM (2014)

20. Snoek, J., Larochelle, H., Adams, R.P.: Practical bayesian optimization of machine

21. Stuart, E., Samman, E., Avis, W., Berliner, T.: The data revolution (2015), over-

learning algorithms. NIPS (2012)

seas Development Institute

22. Theano Development Team: Theano: A Python framework for fast computation of

mathematical expressions. arXiv (2016)

23. United Nations, U.: A world that counts - mobilising the data revolution for sus-
tainable development (2014), uN Independent Expert Advisory Group on a Data
Revolution for Sustainable Development

24. Wesolowski, A., Qureshi, T., Boni, M.F., Sundsøy, P.R., Johansson, M.A., Rasheed,
S.B., Engø-Monsen, K., Buckee, C.O.: Impact of human mobility on the emergence
of dengue epidemics in pakistan. PNAS (2015)

