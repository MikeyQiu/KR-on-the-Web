Bilingual dictionaries for all EU languages

Ahmet Aker, Monica Lestari Paramita, M¯arcis Pinnis∗, Robert Gaizauskas
Department of Computer Science, University of Shefﬁeld, UK
∗Tilde, Vienibas gatve 75a, Riga, Latvia, LV-1004
Email: a.aker@dcs.shef.ac.uk, m.paramita@shefﬁeld.ac.uk
marcis.pinnis@tilde.lv, r.gaizauskas@dcs.shef.ac.uk

Abstract
Bilingual dictionaries can be automatically generated using the GIZA++ tool. However, these dictionaries contain a lot of noise, because
of which the qualities of outputs of tools relying on the dictionaries are negatively affected. In this work, we present three different
methods for cleaning noise from automatically generated bilingual dictionaries: LLR, pivot and transliteration based approach. We have
applied these approaches on the GIZA++ dictionaries – dictionaries covering ofﬁcial EU languages – in order to remove noise. Our
evaluation showed that all methods help to reduce noise. However, the best performance is achieved using the transliteration based
approach. We provide all bilingual dictionaries (the original GIZA++ dictionaries and the cleaned ones) free for download. We also
provide the cleaning tools and scripts for free download.

Keywords: : GIZA++ dictionaries, EU languages, dictionary cleaning

1.

Introduction

Bilingual dictionaries are important for various applica-
tions of human language technologies, including cross-
language information search and retrieval, machine trans-
lation and computer-aided assistance to human translators.
The GIZA++ (Och and Ney, 2000; Och and Ney, 2003) tool
provides an automated way to construct bilingual dictio-
naries from parallel corpora. However, there are two main
problems using this tool to create such bilingual dictionar-
ies.
The ﬁrst problem is that the tool is hard to use and in-
put data preparation is difﬁcult.
For technically non-
sophisticated users, installing and running GIZA++ is not
at all straightforward. Depending on the level of technical
ability of the installer, setting the tool up can take several
weeks to ﬁnish successfully. Additionally, preparation of
parallel data to be input to the tool is also time consum-
ing, as any input to GIZA++ must be pre-processed to sat-
isfy certain conditions. Data preparation time is increased
if the aim is to generate bilingual dictionaries for many lan-
guages.
The second problem has to do with noise in the automated
bilingual dictionaries. GIZA++ treats every word in the
source language as a possible translation for every word in
the target language and assigns the pairs probabilities indi-
cating the likelihood of the translations. A word pair with
lower probability can be regarded as an “incorrect” transla-
tion and a word pair with higher probability as a “correct”
translation. However, this is an ideal situation and is not al-
ways the case in GIZA++ as pairs of words with high trans-
lation probabilities may still be wrong. Due to this prob-
lem, any application that makes use of word pair transla-
tions only above a probability value threshold is still served
with noise. Aker et al. (2012), for instance, use GIZA++
dictionaries as a feature when extracting parallel phrases
from comparable corpora and report mistranslated pairs of
phrases mainly due to noise in the statistical dictionaries.
Although the authors clean their dictionaries by removing
every entries that have lower probability values than a man-

ually determined threshold, their results show that better
cleaning is required. The best way to do this would be to
manually ﬁlter out all wrong translations. However, this
is a labour intensive task, which is not feasible to perform
for many language pairs. Another alternative would be an
automated approach that, unlike Aker et al. (2012), does
not trivially delete all dictionary entries below a probabil-
ity threshold but instead aims to ﬁlter out mistranslations
independently from any manually set threshold.
In this paper we address both problems. To address the ﬁrst
problem, we pre-generate bilingual dictionaries for all ofﬁ-
cial European languages except Irish and Croatian and pro-
vide them for free download. To address the second prob-
lem, we describe three different cleaning techniques, two
of which are novel. We apply these cleaning techniques on
the statistical dictionaries in order to reduce noise. Thus the
data we offer for downloading contains several versions of
the same bilingual dictionaries – the original GIZA++ out-
put and multiple cleaned versions. We also provide access
to our cleaning methods in the form of open source tools
for natural language processing-based system developers.
In the remainder of the paper, we ﬁrst describe the data we
use to generate the bilingual dictionaries (Section 2). Next,
we introduce our cleaning methods (Section 3). In Section
4, we describe our evaluation set-up and provide results that
were acquired by performing a manual quality evaluation
of the cleaning processes. Section 5 lists the resources that
are available for download. Finally, we conclude the paper
with Section 6.

2. Bilingual dictionaries
To obtain the original GIZA++ dictionaries we used the
freely available DGT-TM parallel corpus (Steinberger et al.,
2012), which provides data for ofﬁcial languages of the Eu-
ropean Union. The number of sentence pairs available for
each language pair is shown in Table 1.
As shown in Table 1, the number of sentence pairs avail-
able in the DGT-TM corpora varies between language pairs,
ranging from under 1.8M for RO-EN to over 3.7M for the

2839

Language Pair
EN-BG
EN-CS
EN-DA
EN-DE
EN-EL
EN-ES
EN-ET
EN-FI
EN-FR
EN-HU
EN-IT
EN-LT
EN-LV
EN-MT
EN-NL
EN-PL
EN-PT
EN-RO
EN-SK
EN-SL
EN-SV

Sentence Pairs
1,810,612
3,633,782
3,179,359
3,207,458
3,016,402
3,175,608
3,652,963
3,135,651
3,692,787
3,789,650
3,221,060
3,736,907
3,722,517
2,130,282
3,164,924
3,665,112
3,620,006
1,781,306
3,721,620
3,689,972
3,248,207

Table 1: DGT-TM parallel data statistics

following language pairs: EN-HU, EN-LT, EN-LV and EN-
SK. On average, each language pair contains 3.2M sentence
pairs. Using these data, we created bilingual dictionaries
for 21 language pairs. We exclude English-Irish because
the amount of parallel data available in DGT-TM is very
small. We exclude also English-Croatian, because DGT-
TM does not cover Croatian.
Each bilingual dictionary entry has the form (cid:104)s, ti, pi(cid:105),
where s is a source word, ti is the i-th translation of s in
the dictionary and pi is the probability that s is translated to
ti, the pi’s summing to 1 for each s in the dictionary.
We use these original dictionaries and run our cleaning
methods on them to remove noise. These methods are the
subject of the next section.

3. Methods

To clean the GIZA++ dictionaries described in Section 2,
we apply three different methods as described below.

3.1. Statistical approach

The ﬁrst method we implement is similar to the one re-
ported in Munteanu and Marcu (2006). The method uses
LogLikelihood-Ratio (LLR) (Dunning, 1993) as a test to
decide whether a pair of source and target words are cor-
rect or incorrect translations of each other. Any pair not
passing the test is ﬁltered from the dictionary.
To do this, we ﬁrst align the parallel sentence pairs using
the GIZA++ toolkit (Och and Ney, 2000; Och and Ney,
2003) in both directions and then reﬁne the alignments us-
ing a “grow-diag-ﬁnal-and” strategy. The grow-diag-ﬁnal-
and entails for each sentence pair the alignment information
between the words. Based on this alignment ﬁle we con-
struct the co-occurrence matrix used to compute the LLR:

2840

Co − occurenceM atrix =

T (cid:48)
T
S k11 k12
S(cid:48)
k21 k22
where S is the source word and T is the target word. The
aim is to assess whether S and T are translations of each
other. S(cid:48) and T (cid:48) represent source and target words other
than S and T . The entry k11 is the number of times S and T
occurred together (aligned to each other), k12 is the number
of times T occurred with S(cid:48), k21 is the number of times S
occurred with T (cid:48), and k22 is the number of times S(cid:48) and
T (cid:48) occurred together. We ﬁlter out any pair in the GIZA++
dictionary whose LLR value was below 10.83 (p < 0.001)
by looking at the χ2 signiﬁcance table.
Note that we also skip dictionary entries which start or end
with punctuations or symbols. Furthermore, we also delete
any dictionary entry whose GIZA++ probability is below
0.001. These ﬁlters are applied regardless of the χ2 statis-
tics.

3.2. Transliteration based approach
The second method we have investigated tries to use a
transliteration-based approach on ﬁltering the dictionaries.
The idea is that simply applying thresholds on probabilis-
tic dictionaries will ﬁlter out also good translation equiva-
lents. However, identiﬁcation of translation equivalents that
can be transliterated from one language to the other may
allow identifying good pairs below the applied thresholds
and thus keep them in the ﬁltered dictionaries. The method
ﬁlters dictionary entries using the following 7 steps:

1. The ﬁrst step performs dictionary entry structural val-
idation in order to remove obvious noise. At ﬁrst,
we remove all entries that contain invalid character
sequences on either source or target side. Character
sequences are considered invalid if according to the
Unicode character table they contain control symbols,
surrogate symbols or only whitespace symbols. In this
step we also identify mismatching character sequences
by comparing the source and target sides of a dictio-
nary entry. At ﬁrst we verify that the source and target
token letters are equally capitalised (with an excep-
tion of the ﬁrst letter, which in some languages, e.g.,
for nouns in German or days of a week in English,
is capitalised). Further, we verify whether the letters
contained in the source and target sides belong to the
source and target language alphabets and whether both
tokens contain equal numbers of digits, punctuation
marks, and symbols, and whether they are located in
similar positions in the source and target words. As the
GIZA++ probabilistic dictionaries are statistical rep-
resentations of token alignments in a parallel corpus,
the alignments contain also easily detectable mistakes,
such as, words paired with punctuations, incorrectly
tokenized strings paired with words, etc. By apply-
ing character-based validation rules on the source and
target language words we can easily ﬁlter out such ob-
vious mistakes in the probabilistic dictionaries.

2. The second step identiﬁes dictionary entries that are
transliterations. We apply two different transliter-
ation methods: 1) the language independent (how-

Target Token

GIZA++ Probability

Filtering Step

Source
Token
.
standards
a
proven
regulatory
navigational

94/65/ek.
standarts
aprob¯et
gazprom
energoregulatora
dodamos

0.50
0.02
0.50
0.08
0.50
1.00

Structural validation (1) - wrong entries
Transliteration identiﬁcation (2) - correct entries
IDF score-based ﬁlter (3) - wrong entries
Threshold ﬁlter (4) - wrong entries
Partial containment and transliteration ﬁlter (5) - wrong entries
Heuristic ﬁlters (6) - wrong entries

Table 2: English-Latvian dictionary entries identiﬁed according to different ﬁltering steps

ever, ﬁxed to the Latin, Greek, and Cyrillic alphabets)
rule-based transliteration method proposed by Pinnis
(2013), which transliterates words into English using
simple letter substitution rules, and 2) the character-
based statistical machine translation method also pro-
posed by Pinnis (2013). While the ﬁrst transliteration
method is fast, it is not able to capture morphologi-
cal variations in different languages and it treats each
character independently of the context. The second
method, however, takes context (character n-grams)
into account and is able to transliterate words not
only into English, but also to other languages, thus
transliterated word identiﬁcation can be performed bi-
directionally (from source to target and from target
to source). In order to identify transliterated words,
the transliterations (e.g., the source word transliter-
ated into the target language) are compared with the
other sides word (e.g., the target language word) using
a string similarity measure based on the Levenshtein
If the maximum sim-
distance (Levenshtein, 1966).
ilarity score using any of the transliteration methods
and directions (source-to-target or target-to-source) is
higher than 0.7 (identiﬁed as an acceptable threshold
through empirical analysis) and the source and tar-
get words are not equal (because such pairs are of-
ten wrong language pairs), we consider the dictio-
nary entry as transliterated and we pass it through to
the ﬁltered dictionary (the further ﬁltering steps are
skipped).

3. In the third step we analyse the remaining pairs using
reference corpora based inverse document frequency
(IDF) scores (Jones, 1972) of the source and target
words. We remove all pairs that have a difference
of word IDF scores greater than 0.9 (also empiri-
cally identiﬁed). Such pairs often indicate of func-
tional word (or stop-word) miss-alignment with con-
tent words (e.g., in the dictionaries the English “a”
is usually paired with almost everything else and the
IDF-based ﬁlter reliably removes such entries).

4. In the fourth step we apply a translation probability
value threshold that is differentiated for (source lan-
guage) words that were already containing transliter-
ation pairs (i.e., if a dictionary entry containing the
source word was identiﬁed as a transliteration, then
all other translation candidates for the source word are
required to have a high probability in order to be ac-
cepted as translation equivalents).

5. Then, we remove all pairs that partially contain
transliterations.
For instance, consider the dictio-
nary entry “monopoly” (in English) and “monopols”
(in Latvian). The entry is a transliteration,
thus,
“monopolsitu¯acij¯a” (translated as “in the case of a
monopoly” would be ﬁltered out as it contains fully
the transliterated part.

6. We apply also several heuristic ﬁlters that have shown
to remove further noise (e.g., rare words miss-aligned
with a probability of one if a source word already con-
tains multiple translation hypotheses, equal source and
target words if the source word already contains mul-
tiple translation hypotheses, etc.).

7. Finally, the pairs that have passed all ﬁlter tests are

written to the ﬁltered dictionary.

Examples of dictionary entries that were identiﬁed us-
ing the different ﬁltering steps from the English-Latvian
GIZA++ dictionary are given in Table 2.

3.3. Pivot language based approach
The pivot language based approach uses the idea of inter-
mediate languages to clean noise from the bilingual dictio-
naries. The idea of a pivot language is used in related work
to overcome the problem of unavailable bilingual dictio-
naries such as in cross lingual information retrieval (CLIR)
(Gollins and Sanderson, 2001; Ballesteros, 2002), in sta-
tistical machine translation (Wu and Wang, 2007; Wu and
Wang, 2009) and bilingual dictionary generation (Paik et
al., 2001; Seo and Kim, 2013). However, our approach
differs from related work by adopting the idea of pivot lan-
guages to clean noise from existing dictionaries instead of
using it for translation purposes. This means that we aim
at cleaning an existing dictionary such as for the English-
German language pair using intermediate dictionaries such
as German-French and French-English.
In this case, the
pivot language is French.
Our approach uses the bilingual dictionary that has to
this is
be cleaned as the starting point.
the English-German (EN-DE) GIZA++ dictionary. We
distinguish between one pivot language and several par-
allel pivot languages approach.
In the one pivot lan-
guage approach (shown as the blue arrow in Figure 1),
our method takes for every source language (i.e., English)
word enW its translations in the target (i.e., German) lan-
guage (deW1, ..., deWn).
In the next step, using a DE-
FR GIZA++ dictionary, each such German word, deWi,
is then translated into French leading to French words

In Figure 1,

2841

Figure 1: Pivot language based approach.

Figure 2: Evaluation sets.

f rWi1, ..., f rWim. Each such French word, f rWij, is then
looked up in an FR-EN GIZA++ dictionary leading to pos-
sible translations in English (enWij1, ..., enWijp). If none
of the English words enWij1, ..., enWijp matches enW
then the pair < enW, deWi > is removed from the EN-DE
dictionary.
Our early experiments showed that using the one pivot lan-
guage approach many entries from the EN-DE dictionary
are removed because the pivot dictionary (DE-FR) does
not contain entries for the German words. To overcome
this problem we also introduce the several parallel pivot
languages approach (shown as the red arrows in Figure 1)
where instead of using one pivot language, we perform the
cleaning with two pivot dictionaries at the same time. That
means when we perform the cleaning of EN-DE using DE-
FR-EN (as described in the one pivot language approach),
we also perform in parallel the cleaning using another pivot
dictionary, such as DE-IT-EN. In Figure 1 the two parallel
pivot languages approach is shown using DE-FR-EN and
DE-IT-EN. If at least one of these returns an English word
enWijp equal to enW we keep the entry < enW, deWi >
in the EN-DE dictionary otherwise the entry is removed.
By performing two parallel checks we reduce the chance
that the entry < enW, deWi > is removed from the dictio-
nary because of missing entries.
Note that similarly to the LLR method within this approach
we also skip –independently from the pivot language dic-
tionary look-ups– dictionary entries which contain punctu-
ations or symbols and also entries whose dictionary proba-
bility values are below 0.001.

4. Evaluation

To assess the performance of the different cleaning methods
we performed a manual evaluation task by asking humans
to judge the translation quality of the remaining dictionary
entries. In the evaluation we randomly selected dictionary
entries from 8 different sets to assess. The sets are shown
in Figure 2. The ﬁrst set contains all entries from the orig-
inal GIZA++ dictionary, which do not appear in any of the
other 7 sets (i.e. they are not retrieved by any of the three
approaches). This set is used to understand whether the

Figure 3: Number of entries in each set for
English-German.

cleaning methods do miss good data or not. The next four
sets are the entries in the intersections between the results of
the three methods, I-1, I-2, I-3 and All. The All set contains
only entries which are also found in the other results. The
other intersection sets contain entries between two meth-
ods. Finally, we have the LLR, Pivot and Transliteration
sets, which do not share any entry with the intersection sets.
Figure 3 shows the number of dictionary entries in each of
the 8 sets for the English-German language pair. For in-
stance, the Pivot method outputs for the English-German
dictionary in total 277,703 entries. However, we divide
this set into 4 parts: portion within All intersection (8,987
entries), portion of entries which intersects with the LLR
method (I-1, in total 91,924 entries), portion intersecting
with the Transliteration based method (I-3, in total 20,605
entries) and ﬁnally what is distinct within the Pivot result
set (in total 156,187 entries).
From each of the 8 sets, we randomly selected 40 entries
leading to total 320 entries and showed them to human as-
sessors. Each assessor judged all 320 entries. In the assess-
ment, similar to Aker et al. (2013), we asked human asses-

2842

sors to categorize each presented dictionary entry into one
of the categories shown in Figure 4. Two German and two
Latvian native speakers who were ﬂuent in English took
part in this evaluation task. Note that in the evaluation we
only used the English to X (i.e. German and Latvian) dic-
tionaries. However, we also provide cleaned version of the
dictionaries from language X to English.

4.1. Results
The results of the evaluation are shown in Table 3 for
English-German and Table 4 for English-Latvian.
From the results we can see that the dictionary entries from
the original GIZA++ dictionary are very noisy. Only 2%-
6% of the entries contain correct translations. Note that
these entries are not included in any of the cleaned sets.
This means that the cleaning methods are good ﬁlters to
skip such noisy entries. Furthermore, the results show that
the transliteration method performs best compared to the
other two cleaning methods for both English-German and
English-Latvian language pairs. According to the man-
ual assessors this method achieves around 55%-61% pre-
cision. The pivot approach achieves around 40%-42% for
both language pairs. The LLR method gets for English-
German only 20%, but for the English-Latvian language
pair it achieves a similar ﬁgure as the pivot approach. How-
ever, these ﬁgures are based on the entries not included in
If we look at the intersection sets
the intersection sets.
If All inter-
we see that the precision ﬁgures go higher.
sections are considered then the precision results are just
below 90% for both English-German and English-Latvian
language pairs. Among the intersection sets the lowest pre-
cision results are achieved when the pivot method is inter-
sected with the LLR approach (set I-1). The high precision
scores in the intersection sets show that the cleaning meth-
ods commonly identify “good” translations and the high-
est ﬁgure in the All set suggests to combine the different
cleaning methods and apply them together on the original
GIZA++ dictionaries.
We also computed the agreement rates between the asses-
sors. The German assessors had an agreement in 79.69%
of all evaluated dictionary entries and the Latvian assessors
agreed in 80.31% of all entries. We computed the agree-
ment based on the number of agreed votes over the three
categories and the 8 sets (see the second half of the Tables
3 and 4) divided by the total number of votes (in this case
320).

5. Resources for download
We have prepared the dictionaries as well as the cleaning
methods for download:

• Original GIZA++ dictionaries: These are the dic-
tionaries we obtained using the GIZA++ alignment
tool. We do not apply any cleaning technique on these
statistical dictionaries. The dictionaries can be found
here: http://www.taas-project.eu/. For the purpose of
the pivot approach we also created GIZA++ dictionar-
ies for DE-XX and FR-XX where XX represents any
of the other languages. These dictionaries can also be
downloaded from the same link.

• Cleaned bilingual dictionaries:

These are the
cleaned versions of the original dictionaries. These
dictionaries are also available through the same link
as the original ones.

• Tools and scripts for cleaning: The LLR and
the pivot approaches can be downloaded from:
http://staffwww.dcs.shef.ac.uk/people/A.Aker/
activityNLPProjects2.html. The transliteration-based
cleaning tool’s source code can be downloaded from:
https://github.com/pmarcis/dict-ﬁltering.

6. Conclusion
In this paper we have described three different methods
for cleaning bilingual dictionaries: LLR, pivot, and the
transliteration based approach. We have applied these
methods on GIZA++ dictionaries covering 22 ofﬁcial EU
languages. We also performed manual evaluation using
English-German and English-Latvian dictionaries. Our
evaluation shows that all methods help reducing noise, i.e.,
the dictionary entries not taken by the three methods are
mainly judged by the assessors as noise. The best per-
formance is achieved using the transliteration approach.
We have also seen that the results in the intersection sets
were higher than in the other sets. This showed that the
cleaning methods do commonly identify what is a correct
translation. We provide all bilingual dictionaries (the origi-
nal GIZA++ dictionaries and the cleaned versions) free for
download. We also provide the cleaning tools and scripts
for free download.
For future work we aim to combine the different approaches
using some machine learning techniques and apply them
together on the cleaning task. Furthermore, we plan to work
on other language pairs where English is not involved and
provide them for free download. We plan to upload any
additional dictionary to http://www.taas-project.eu/.

7. Acknowledgments
The research within the project TaaS leading to these results
has received funding from the European Union Seventh
Framework Programme (FP7/2007-2013), Grant Agree-
ment no 296312. We would like to thank the assessors who
took part in our manual evaluation.

8. References
Aker, A., Feng, Y., and Gaizauskas, R. (2012). Automatic
bilingual phrase extraction from comparable corpora. In
24th International Conference on Computational Lin-
guistics (COLING 2012), IIT Bombay, Mumbai, India,
2012. Association for Computational Linguistics.

Aker, A., Paramita, M., and Gaizauskas, R. (2013). Ex-
tracting bilingual terminologies from comparable cor-
pora. In The 51st Annual Meeting of the Association for
Computational Linguistics, Soﬁa, Bulgaria). Association
for Computational Linguistics.

Ballesteros, L. A.

(2002). Cross-language retrieval via
In Advances in information re-

transitive translation.
trieval, pages 203–234. Springer.

Dunning, T. (1993). Accurate methods for the statistics
of surprise and coincidence. Computational linguistics,
19(1):61–74.

2843

Figure 4: Bilingual dictionary evaluation set-up.

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
38
65
53
45
32
16
2

Cont. Wrong
6
26
6
10
7
22
28
26

3
16
9
17
28
26
36
52

Precision
88.75%
47.50%
81.25%
66.25%
56.25%
40.00%
20.00%
2.50%

Eq.
35
15
30
21
19
12
5
0

Cont.
2
12
2
2
2
7
11
10

Wrong
0
4
2
4
11
10
15
24

Precision
94.59%
48.39%
88.24%
77.78%
59.38%
41.38%
16.13%
0.00%

Table 3: Results of the EN-DE manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Gollins, T. and Sanderson, M. (2001). Improving cross
language retrieval with triangulated translation. In Pro-
ceedings of the 24th annual international ACM SIGIR
conference on Research and development in information
retrieval, pages 90–95. ACM.

Jones, K. S. (1972). A statistical interpretation of term
speciﬁcity and its application in retrieval. Journal of
documentation, 28(1):11–21.

Levenshtein, V. I. (1966). Binary codes capable of correct-
ing deletions, insertions and reversals. In Soviet physics
doklady, volume 10, page 707.

Munteanu, D. S. and Marcu, D. (2006). Extracting parallel
sub-sentential fragments from non-parallel corpora. In
ACL-44: Proceedings of the 21st International Confer-
ence on Computational Linguistics and the 44th annual
meeting of the Association for Computational Linguis-
tics, pages 81–88, Morristown, NJ, USA. Association for

Computational Linguistics.

Och, F. J. and Ney, H. (2000). A comparison of alignment
models for statistical machine translation. In Proceed-
ings of the 18th conference on Computational linguis-
tics, pages 1086–1090, Morristown, NJ, USA. Associa-
tion for Computational Linguistics.

Och, F. J. O. and Ney, H. (2003). A systematic comparison
of various statistical alignment models. Computational
Linguistics, 29(1):19–51.

Paik, K., Bond, F., and Satoshi, S. (2001). Using multi-
ple pivots to align korean and japanese lexical resources.
In Proc. of the NLPRS-2001 Workshop on Language Re-
sources in Asia, pages 63–70.

Pinnis, M.

(2013). Context Independent Term Mapper
for European Languages. In Proceedings of Recent Ad-
vances in Natural Language Processing (RANLP 2013),
pages 562—-570, Hissar, Bulgaria.

2844

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
55
62
56
49
34
34
5

Cont. Wrong
2
5
4
7
4
11
4
3

7
20
14
17
27
35
42
72

Precision
88.75%
68.75%
77.50%
70.00%
61.25%
42.50%
42.50%
6.25%

Eq.
33
25
25
25
21
14
15
0

Cont.
0
2
0
1
0
2
1
0

Wrong
1
7
3
6
11
14
19
32

Precision
97.06%
73.53%
89.29%
78.13%
65.63%
46.67%
42.86%
0%

Table 4: Results of the EN-LV manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Seo, H.-S. K. H.-W. and Kim, J.-H. (2013). Bilingual lex-
icon extraction via pivot language and word alignment
tool. ACL 2013, page 11.

Steinberger, R., Eisele, A., Klocek, S., Pilos, S., and
Schlter, P. (2012). Dgt-tm: A freely available transla-
tion memory in 22 languages. In Proceedings of LREC,
pages 454–459.

Wu, H. and Wang, H. (2007). Pivot language approach for
phrase-based statistical machine translation. Machine
Translation, 21(3):165–181.

Wu, H. and Wang, H. (2009). Revisiting pivot language
approach for machine translation. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the ACL
and the 4th International Joint Conference on Natural
Language Processing of the AFNLP: Volume 1-Volume
1, pages 154–162. Association for Computational Lin-
guistics.

2845

Bilingual dictionaries for all EU languages

Ahmet Aker, Monica Lestari Paramita, M¯arcis Pinnis∗, Robert Gaizauskas
Department of Computer Science, University of Shefﬁeld, UK
∗Tilde, Vienibas gatve 75a, Riga, Latvia, LV-1004
Email: a.aker@dcs.shef.ac.uk, m.paramita@shefﬁeld.ac.uk
marcis.pinnis@tilde.lv, r.gaizauskas@dcs.shef.ac.uk

Abstract
Bilingual dictionaries can be automatically generated using the GIZA++ tool. However, these dictionaries contain a lot of noise, because
of which the qualities of outputs of tools relying on the dictionaries are negatively affected. In this work, we present three different
methods for cleaning noise from automatically generated bilingual dictionaries: LLR, pivot and transliteration based approach. We have
applied these approaches on the GIZA++ dictionaries – dictionaries covering ofﬁcial EU languages – in order to remove noise. Our
evaluation showed that all methods help to reduce noise. However, the best performance is achieved using the transliteration based
approach. We provide all bilingual dictionaries (the original GIZA++ dictionaries and the cleaned ones) free for download. We also
provide the cleaning tools and scripts for free download.

Keywords: : GIZA++ dictionaries, EU languages, dictionary cleaning

1.

Introduction

Bilingual dictionaries are important for various applica-
tions of human language technologies, including cross-
language information search and retrieval, machine trans-
lation and computer-aided assistance to human translators.
The GIZA++ (Och and Ney, 2000; Och and Ney, 2003) tool
provides an automated way to construct bilingual dictio-
naries from parallel corpora. However, there are two main
problems using this tool to create such bilingual dictionar-
ies.
The ﬁrst problem is that the tool is hard to use and in-
put data preparation is difﬁcult.
For technically non-
sophisticated users, installing and running GIZA++ is not
at all straightforward. Depending on the level of technical
ability of the installer, setting the tool up can take several
weeks to ﬁnish successfully. Additionally, preparation of
parallel data to be input to the tool is also time consum-
ing, as any input to GIZA++ must be pre-processed to sat-
isfy certain conditions. Data preparation time is increased
if the aim is to generate bilingual dictionaries for many lan-
guages.
The second problem has to do with noise in the automated
bilingual dictionaries. GIZA++ treats every word in the
source language as a possible translation for every word in
the target language and assigns the pairs probabilities indi-
cating the likelihood of the translations. A word pair with
lower probability can be regarded as an “incorrect” transla-
tion and a word pair with higher probability as a “correct”
translation. However, this is an ideal situation and is not al-
ways the case in GIZA++ as pairs of words with high trans-
lation probabilities may still be wrong. Due to this prob-
lem, any application that makes use of word pair transla-
tions only above a probability value threshold is still served
with noise. Aker et al. (2012), for instance, use GIZA++
dictionaries as a feature when extracting parallel phrases
from comparable corpora and report mistranslated pairs of
phrases mainly due to noise in the statistical dictionaries.
Although the authors clean their dictionaries by removing
every entries that have lower probability values than a man-

ually determined threshold, their results show that better
cleaning is required. The best way to do this would be to
manually ﬁlter out all wrong translations. However, this
is a labour intensive task, which is not feasible to perform
for many language pairs. Another alternative would be an
automated approach that, unlike Aker et al. (2012), does
not trivially delete all dictionary entries below a probabil-
ity threshold but instead aims to ﬁlter out mistranslations
independently from any manually set threshold.
In this paper we address both problems. To address the ﬁrst
problem, we pre-generate bilingual dictionaries for all ofﬁ-
cial European languages except Irish and Croatian and pro-
vide them for free download. To address the second prob-
lem, we describe three different cleaning techniques, two
of which are novel. We apply these cleaning techniques on
the statistical dictionaries in order to reduce noise. Thus the
data we offer for downloading contains several versions of
the same bilingual dictionaries – the original GIZA++ out-
put and multiple cleaned versions. We also provide access
to our cleaning methods in the form of open source tools
for natural language processing-based system developers.
In the remainder of the paper, we ﬁrst describe the data we
use to generate the bilingual dictionaries (Section 2). Next,
we introduce our cleaning methods (Section 3). In Section
4, we describe our evaluation set-up and provide results that
were acquired by performing a manual quality evaluation
of the cleaning processes. Section 5 lists the resources that
are available for download. Finally, we conclude the paper
with Section 6.

2. Bilingual dictionaries
To obtain the original GIZA++ dictionaries we used the
freely available DGT-TM parallel corpus (Steinberger et al.,
2012), which provides data for ofﬁcial languages of the Eu-
ropean Union. The number of sentence pairs available for
each language pair is shown in Table 1.
As shown in Table 1, the number of sentence pairs avail-
able in the DGT-TM corpora varies between language pairs,
ranging from under 1.8M for RO-EN to over 3.7M for the

2839

Language Pair
EN-BG
EN-CS
EN-DA
EN-DE
EN-EL
EN-ES
EN-ET
EN-FI
EN-FR
EN-HU
EN-IT
EN-LT
EN-LV
EN-MT
EN-NL
EN-PL
EN-PT
EN-RO
EN-SK
EN-SL
EN-SV

Sentence Pairs
1,810,612
3,633,782
3,179,359
3,207,458
3,016,402
3,175,608
3,652,963
3,135,651
3,692,787
3,789,650
3,221,060
3,736,907
3,722,517
2,130,282
3,164,924
3,665,112
3,620,006
1,781,306
3,721,620
3,689,972
3,248,207

Table 1: DGT-TM parallel data statistics

following language pairs: EN-HU, EN-LT, EN-LV and EN-
SK. On average, each language pair contains 3.2M sentence
pairs. Using these data, we created bilingual dictionaries
for 21 language pairs. We exclude English-Irish because
the amount of parallel data available in DGT-TM is very
small. We exclude also English-Croatian, because DGT-
TM does not cover Croatian.
Each bilingual dictionary entry has the form (cid:104)s, ti, pi(cid:105),
where s is a source word, ti is the i-th translation of s in
the dictionary and pi is the probability that s is translated to
ti, the pi’s summing to 1 for each s in the dictionary.
We use these original dictionaries and run our cleaning
methods on them to remove noise. These methods are the
subject of the next section.

3. Methods

To clean the GIZA++ dictionaries described in Section 2,
we apply three different methods as described below.

3.1. Statistical approach

The ﬁrst method we implement is similar to the one re-
ported in Munteanu and Marcu (2006). The method uses
LogLikelihood-Ratio (LLR) (Dunning, 1993) as a test to
decide whether a pair of source and target words are cor-
rect or incorrect translations of each other. Any pair not
passing the test is ﬁltered from the dictionary.
To do this, we ﬁrst align the parallel sentence pairs using
the GIZA++ toolkit (Och and Ney, 2000; Och and Ney,
2003) in both directions and then reﬁne the alignments us-
ing a “grow-diag-ﬁnal-and” strategy. The grow-diag-ﬁnal-
and entails for each sentence pair the alignment information
between the words. Based on this alignment ﬁle we con-
struct the co-occurrence matrix used to compute the LLR:

2840

Co − occurenceM atrix =

T (cid:48)
T
S k11 k12
S(cid:48)
k21 k22
where S is the source word and T is the target word. The
aim is to assess whether S and T are translations of each
other. S(cid:48) and T (cid:48) represent source and target words other
than S and T . The entry k11 is the number of times S and T
occurred together (aligned to each other), k12 is the number
of times T occurred with S(cid:48), k21 is the number of times S
occurred with T (cid:48), and k22 is the number of times S(cid:48) and
T (cid:48) occurred together. We ﬁlter out any pair in the GIZA++
dictionary whose LLR value was below 10.83 (p < 0.001)
by looking at the χ2 signiﬁcance table.
Note that we also skip dictionary entries which start or end
with punctuations or symbols. Furthermore, we also delete
any dictionary entry whose GIZA++ probability is below
0.001. These ﬁlters are applied regardless of the χ2 statis-
tics.

3.2. Transliteration based approach
The second method we have investigated tries to use a
transliteration-based approach on ﬁltering the dictionaries.
The idea is that simply applying thresholds on probabilis-
tic dictionaries will ﬁlter out also good translation equiva-
lents. However, identiﬁcation of translation equivalents that
can be transliterated from one language to the other may
allow identifying good pairs below the applied thresholds
and thus keep them in the ﬁltered dictionaries. The method
ﬁlters dictionary entries using the following 7 steps:

1. The ﬁrst step performs dictionary entry structural val-
idation in order to remove obvious noise. At ﬁrst,
we remove all entries that contain invalid character
sequences on either source or target side. Character
sequences are considered invalid if according to the
Unicode character table they contain control symbols,
surrogate symbols or only whitespace symbols. In this
step we also identify mismatching character sequences
by comparing the source and target sides of a dictio-
nary entry. At ﬁrst we verify that the source and target
token letters are equally capitalised (with an excep-
tion of the ﬁrst letter, which in some languages, e.g.,
for nouns in German or days of a week in English,
is capitalised). Further, we verify whether the letters
contained in the source and target sides belong to the
source and target language alphabets and whether both
tokens contain equal numbers of digits, punctuation
marks, and symbols, and whether they are located in
similar positions in the source and target words. As the
GIZA++ probabilistic dictionaries are statistical rep-
resentations of token alignments in a parallel corpus,
the alignments contain also easily detectable mistakes,
such as, words paired with punctuations, incorrectly
tokenized strings paired with words, etc. By apply-
ing character-based validation rules on the source and
target language words we can easily ﬁlter out such ob-
vious mistakes in the probabilistic dictionaries.

2. The second step identiﬁes dictionary entries that are
transliterations. We apply two different transliter-
ation methods: 1) the language independent (how-

Target Token

GIZA++ Probability

Filtering Step

Source
Token
.
standards
a
proven
regulatory
navigational

94/65/ek.
standarts
aprob¯et
gazprom
energoregulatora
dodamos

0.50
0.02
0.50
0.08
0.50
1.00

Structural validation (1) - wrong entries
Transliteration identiﬁcation (2) - correct entries
IDF score-based ﬁlter (3) - wrong entries
Threshold ﬁlter (4) - wrong entries
Partial containment and transliteration ﬁlter (5) - wrong entries
Heuristic ﬁlters (6) - wrong entries

Table 2: English-Latvian dictionary entries identiﬁed according to different ﬁltering steps

ever, ﬁxed to the Latin, Greek, and Cyrillic alphabets)
rule-based transliteration method proposed by Pinnis
(2013), which transliterates words into English using
simple letter substitution rules, and 2) the character-
based statistical machine translation method also pro-
posed by Pinnis (2013). While the ﬁrst transliteration
method is fast, it is not able to capture morphologi-
cal variations in different languages and it treats each
character independently of the context. The second
method, however, takes context (character n-grams)
into account and is able to transliterate words not
only into English, but also to other languages, thus
transliterated word identiﬁcation can be performed bi-
directionally (from source to target and from target
to source). In order to identify transliterated words,
the transliterations (e.g., the source word transliter-
ated into the target language) are compared with the
other sides word (e.g., the target language word) using
a string similarity measure based on the Levenshtein
If the maximum sim-
distance (Levenshtein, 1966).
ilarity score using any of the transliteration methods
and directions (source-to-target or target-to-source) is
higher than 0.7 (identiﬁed as an acceptable threshold
through empirical analysis) and the source and tar-
get words are not equal (because such pairs are of-
ten wrong language pairs), we consider the dictio-
nary entry as transliterated and we pass it through to
the ﬁltered dictionary (the further ﬁltering steps are
skipped).

3. In the third step we analyse the remaining pairs using
reference corpora based inverse document frequency
(IDF) scores (Jones, 1972) of the source and target
words. We remove all pairs that have a difference
of word IDF scores greater than 0.9 (also empiri-
cally identiﬁed). Such pairs often indicate of func-
tional word (or stop-word) miss-alignment with con-
tent words (e.g., in the dictionaries the English “a”
is usually paired with almost everything else and the
IDF-based ﬁlter reliably removes such entries).

4. In the fourth step we apply a translation probability
value threshold that is differentiated for (source lan-
guage) words that were already containing transliter-
ation pairs (i.e., if a dictionary entry containing the
source word was identiﬁed as a transliteration, then
all other translation candidates for the source word are
required to have a high probability in order to be ac-
cepted as translation equivalents).

5. Then, we remove all pairs that partially contain
transliterations.
For instance, consider the dictio-
nary entry “monopoly” (in English) and “monopols”
(in Latvian). The entry is a transliteration,
thus,
“monopolsitu¯acij¯a” (translated as “in the case of a
monopoly” would be ﬁltered out as it contains fully
the transliterated part.

6. We apply also several heuristic ﬁlters that have shown
to remove further noise (e.g., rare words miss-aligned
with a probability of one if a source word already con-
tains multiple translation hypotheses, equal source and
target words if the source word already contains mul-
tiple translation hypotheses, etc.).

7. Finally, the pairs that have passed all ﬁlter tests are

written to the ﬁltered dictionary.

Examples of dictionary entries that were identiﬁed us-
ing the different ﬁltering steps from the English-Latvian
GIZA++ dictionary are given in Table 2.

3.3. Pivot language based approach
The pivot language based approach uses the idea of inter-
mediate languages to clean noise from the bilingual dictio-
naries. The idea of a pivot language is used in related work
to overcome the problem of unavailable bilingual dictio-
naries such as in cross lingual information retrieval (CLIR)
(Gollins and Sanderson, 2001; Ballesteros, 2002), in sta-
tistical machine translation (Wu and Wang, 2007; Wu and
Wang, 2009) and bilingual dictionary generation (Paik et
al., 2001; Seo and Kim, 2013). However, our approach
differs from related work by adopting the idea of pivot lan-
guages to clean noise from existing dictionaries instead of
using it for translation purposes. This means that we aim
at cleaning an existing dictionary such as for the English-
German language pair using intermediate dictionaries such
as German-French and French-English.
In this case, the
pivot language is French.
Our approach uses the bilingual dictionary that has to
this is
be cleaned as the starting point.
the English-German (EN-DE) GIZA++ dictionary. We
distinguish between one pivot language and several par-
allel pivot languages approach.
In the one pivot lan-
guage approach (shown as the blue arrow in Figure 1),
our method takes for every source language (i.e., English)
word enW its translations in the target (i.e., German) lan-
guage (deW1, ..., deWn).
In the next step, using a DE-
FR GIZA++ dictionary, each such German word, deWi,
is then translated into French leading to French words

In Figure 1,

2841

Figure 1: Pivot language based approach.

Figure 2: Evaluation sets.

f rWi1, ..., f rWim. Each such French word, f rWij, is then
looked up in an FR-EN GIZA++ dictionary leading to pos-
sible translations in English (enWij1, ..., enWijp). If none
of the English words enWij1, ..., enWijp matches enW
then the pair < enW, deWi > is removed from the EN-DE
dictionary.
Our early experiments showed that using the one pivot lan-
guage approach many entries from the EN-DE dictionary
are removed because the pivot dictionary (DE-FR) does
not contain entries for the German words. To overcome
this problem we also introduce the several parallel pivot
languages approach (shown as the red arrows in Figure 1)
where instead of using one pivot language, we perform the
cleaning with two pivot dictionaries at the same time. That
means when we perform the cleaning of EN-DE using DE-
FR-EN (as described in the one pivot language approach),
we also perform in parallel the cleaning using another pivot
dictionary, such as DE-IT-EN. In Figure 1 the two parallel
pivot languages approach is shown using DE-FR-EN and
DE-IT-EN. If at least one of these returns an English word
enWijp equal to enW we keep the entry < enW, deWi >
in the EN-DE dictionary otherwise the entry is removed.
By performing two parallel checks we reduce the chance
that the entry < enW, deWi > is removed from the dictio-
nary because of missing entries.
Note that similarly to the LLR method within this approach
we also skip –independently from the pivot language dic-
tionary look-ups– dictionary entries which contain punctu-
ations or symbols and also entries whose dictionary proba-
bility values are below 0.001.

4. Evaluation

To assess the performance of the different cleaning methods
we performed a manual evaluation task by asking humans
to judge the translation quality of the remaining dictionary
entries. In the evaluation we randomly selected dictionary
entries from 8 different sets to assess. The sets are shown
in Figure 2. The ﬁrst set contains all entries from the orig-
inal GIZA++ dictionary, which do not appear in any of the
other 7 sets (i.e. they are not retrieved by any of the three
approaches). This set is used to understand whether the

Figure 3: Number of entries in each set for
English-German.

cleaning methods do miss good data or not. The next four
sets are the entries in the intersections between the results of
the three methods, I-1, I-2, I-3 and All. The All set contains
only entries which are also found in the other results. The
other intersection sets contain entries between two meth-
ods. Finally, we have the LLR, Pivot and Transliteration
sets, which do not share any entry with the intersection sets.
Figure 3 shows the number of dictionary entries in each of
the 8 sets for the English-German language pair. For in-
stance, the Pivot method outputs for the English-German
dictionary in total 277,703 entries. However, we divide
this set into 4 parts: portion within All intersection (8,987
entries), portion of entries which intersects with the LLR
method (I-1, in total 91,924 entries), portion intersecting
with the Transliteration based method (I-3, in total 20,605
entries) and ﬁnally what is distinct within the Pivot result
set (in total 156,187 entries).
From each of the 8 sets, we randomly selected 40 entries
leading to total 320 entries and showed them to human as-
sessors. Each assessor judged all 320 entries. In the assess-
ment, similar to Aker et al. (2013), we asked human asses-

2842

sors to categorize each presented dictionary entry into one
of the categories shown in Figure 4. Two German and two
Latvian native speakers who were ﬂuent in English took
part in this evaluation task. Note that in the evaluation we
only used the English to X (i.e. German and Latvian) dic-
tionaries. However, we also provide cleaned version of the
dictionaries from language X to English.

4.1. Results
The results of the evaluation are shown in Table 3 for
English-German and Table 4 for English-Latvian.
From the results we can see that the dictionary entries from
the original GIZA++ dictionary are very noisy. Only 2%-
6% of the entries contain correct translations. Note that
these entries are not included in any of the cleaned sets.
This means that the cleaning methods are good ﬁlters to
skip such noisy entries. Furthermore, the results show that
the transliteration method performs best compared to the
other two cleaning methods for both English-German and
English-Latvian language pairs. According to the man-
ual assessors this method achieves around 55%-61% pre-
cision. The pivot approach achieves around 40%-42% for
both language pairs. The LLR method gets for English-
German only 20%, but for the English-Latvian language
pair it achieves a similar ﬁgure as the pivot approach. How-
ever, these ﬁgures are based on the entries not included in
If we look at the intersection sets
the intersection sets.
If All inter-
we see that the precision ﬁgures go higher.
sections are considered then the precision results are just
below 90% for both English-German and English-Latvian
language pairs. Among the intersection sets the lowest pre-
cision results are achieved when the pivot method is inter-
sected with the LLR approach (set I-1). The high precision
scores in the intersection sets show that the cleaning meth-
ods commonly identify “good” translations and the high-
est ﬁgure in the All set suggests to combine the different
cleaning methods and apply them together on the original
GIZA++ dictionaries.
We also computed the agreement rates between the asses-
sors. The German assessors had an agreement in 79.69%
of all evaluated dictionary entries and the Latvian assessors
agreed in 80.31% of all entries. We computed the agree-
ment based on the number of agreed votes over the three
categories and the 8 sets (see the second half of the Tables
3 and 4) divided by the total number of votes (in this case
320).

5. Resources for download
We have prepared the dictionaries as well as the cleaning
methods for download:

• Original GIZA++ dictionaries: These are the dic-
tionaries we obtained using the GIZA++ alignment
tool. We do not apply any cleaning technique on these
statistical dictionaries. The dictionaries can be found
here: http://www.taas-project.eu/. For the purpose of
the pivot approach we also created GIZA++ dictionar-
ies for DE-XX and FR-XX where XX represents any
of the other languages. These dictionaries can also be
downloaded from the same link.

• Cleaned bilingual dictionaries:

These are the
cleaned versions of the original dictionaries. These
dictionaries are also available through the same link
as the original ones.

• Tools and scripts for cleaning: The LLR and
the pivot approaches can be downloaded from:
http://staffwww.dcs.shef.ac.uk/people/A.Aker/
activityNLPProjects2.html. The transliteration-based
cleaning tool’s source code can be downloaded from:
https://github.com/pmarcis/dict-ﬁltering.

6. Conclusion
In this paper we have described three different methods
for cleaning bilingual dictionaries: LLR, pivot, and the
transliteration based approach. We have applied these
methods on GIZA++ dictionaries covering 22 ofﬁcial EU
languages. We also performed manual evaluation using
English-German and English-Latvian dictionaries. Our
evaluation shows that all methods help reducing noise, i.e.,
the dictionary entries not taken by the three methods are
mainly judged by the assessors as noise. The best per-
formance is achieved using the transliteration approach.
We have also seen that the results in the intersection sets
were higher than in the other sets. This showed that the
cleaning methods do commonly identify what is a correct
translation. We provide all bilingual dictionaries (the origi-
nal GIZA++ dictionaries and the cleaned versions) free for
download. We also provide the cleaning tools and scripts
for free download.
For future work we aim to combine the different approaches
using some machine learning techniques and apply them
together on the cleaning task. Furthermore, we plan to work
on other language pairs where English is not involved and
provide them for free download. We plan to upload any
additional dictionary to http://www.taas-project.eu/.

7. Acknowledgments
The research within the project TaaS leading to these results
has received funding from the European Union Seventh
Framework Programme (FP7/2007-2013), Grant Agree-
ment no 296312. We would like to thank the assessors who
took part in our manual evaluation.

8. References
Aker, A., Feng, Y., and Gaizauskas, R. (2012). Automatic
bilingual phrase extraction from comparable corpora. In
24th International Conference on Computational Lin-
guistics (COLING 2012), IIT Bombay, Mumbai, India,
2012. Association for Computational Linguistics.

Aker, A., Paramita, M., and Gaizauskas, R. (2013). Ex-
tracting bilingual terminologies from comparable cor-
pora. In The 51st Annual Meeting of the Association for
Computational Linguistics, Soﬁa, Bulgaria). Association
for Computational Linguistics.

Ballesteros, L. A.

(2002). Cross-language retrieval via
In Advances in information re-

transitive translation.
trieval, pages 203–234. Springer.

Dunning, T. (1993). Accurate methods for the statistics
of surprise and coincidence. Computational linguistics,
19(1):61–74.

2843

Figure 4: Bilingual dictionary evaluation set-up.

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
38
65
53
45
32
16
2

Cont. Wrong
6
26
6
10
7
22
28
26

3
16
9
17
28
26
36
52

Precision
88.75%
47.50%
81.25%
66.25%
56.25%
40.00%
20.00%
2.50%

Eq.
35
15
30
21
19
12
5
0

Cont.
2
12
2
2
2
7
11
10

Wrong
0
4
2
4
11
10
15
24

Precision
94.59%
48.39%
88.24%
77.78%
59.38%
41.38%
16.13%
0.00%

Table 3: Results of the EN-DE manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Gollins, T. and Sanderson, M. (2001). Improving cross
language retrieval with triangulated translation. In Pro-
ceedings of the 24th annual international ACM SIGIR
conference on Research and development in information
retrieval, pages 90–95. ACM.

Jones, K. S. (1972). A statistical interpretation of term
speciﬁcity and its application in retrieval. Journal of
documentation, 28(1):11–21.

Levenshtein, V. I. (1966). Binary codes capable of correct-
ing deletions, insertions and reversals. In Soviet physics
doklady, volume 10, page 707.

Munteanu, D. S. and Marcu, D. (2006). Extracting parallel
sub-sentential fragments from non-parallel corpora. In
ACL-44: Proceedings of the 21st International Confer-
ence on Computational Linguistics and the 44th annual
meeting of the Association for Computational Linguis-
tics, pages 81–88, Morristown, NJ, USA. Association for

Computational Linguistics.

Och, F. J. and Ney, H. (2000). A comparison of alignment
models for statistical machine translation. In Proceed-
ings of the 18th conference on Computational linguis-
tics, pages 1086–1090, Morristown, NJ, USA. Associa-
tion for Computational Linguistics.

Och, F. J. O. and Ney, H. (2003). A systematic comparison
of various statistical alignment models. Computational
Linguistics, 29(1):19–51.

Paik, K., Bond, F., and Satoshi, S. (2001). Using multi-
ple pivots to align korean and japanese lexical resources.
In Proc. of the NLPRS-2001 Workshop on Language Re-
sources in Asia, pages 63–70.

Pinnis, M.

(2013). Context Independent Term Mapper
for European Languages. In Proceedings of Recent Ad-
vances in Natural Language Processing (RANLP 2013),
pages 562—-570, Hissar, Bulgaria.

2844

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
55
62
56
49
34
34
5

Cont. Wrong
2
5
4
7
4
11
4
3

7
20
14
17
27
35
42
72

Precision
88.75%
68.75%
77.50%
70.00%
61.25%
42.50%
42.50%
6.25%

Eq.
33
25
25
25
21
14
15
0

Cont.
0
2
0
1
0
2
1
0

Wrong
1
7
3
6
11
14
19
32

Precision
97.06%
73.53%
89.29%
78.13%
65.63%
46.67%
42.86%
0%

Table 4: Results of the EN-LV manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Seo, H.-S. K. H.-W. and Kim, J.-H. (2013). Bilingual lex-
icon extraction via pivot language and word alignment
tool. ACL 2013, page 11.

Steinberger, R., Eisele, A., Klocek, S., Pilos, S., and
Schlter, P. (2012). Dgt-tm: A freely available transla-
tion memory in 22 languages. In Proceedings of LREC,
pages 454–459.

Wu, H. and Wang, H. (2007). Pivot language approach for
phrase-based statistical machine translation. Machine
Translation, 21(3):165–181.

Wu, H. and Wang, H. (2009). Revisiting pivot language
approach for machine translation. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the ACL
and the 4th International Joint Conference on Natural
Language Processing of the AFNLP: Volume 1-Volume
1, pages 154–162. Association for Computational Lin-
guistics.

2845

Bilingual dictionaries for all EU languages

Ahmet Aker, Monica Lestari Paramita, M¯arcis Pinnis∗, Robert Gaizauskas
Department of Computer Science, University of Shefﬁeld, UK
∗Tilde, Vienibas gatve 75a, Riga, Latvia, LV-1004
Email: a.aker@dcs.shef.ac.uk, m.paramita@shefﬁeld.ac.uk
marcis.pinnis@tilde.lv, r.gaizauskas@dcs.shef.ac.uk

Abstract
Bilingual dictionaries can be automatically generated using the GIZA++ tool. However, these dictionaries contain a lot of noise, because
of which the qualities of outputs of tools relying on the dictionaries are negatively affected. In this work, we present three different
methods for cleaning noise from automatically generated bilingual dictionaries: LLR, pivot and transliteration based approach. We have
applied these approaches on the GIZA++ dictionaries – dictionaries covering ofﬁcial EU languages – in order to remove noise. Our
evaluation showed that all methods help to reduce noise. However, the best performance is achieved using the transliteration based
approach. We provide all bilingual dictionaries (the original GIZA++ dictionaries and the cleaned ones) free for download. We also
provide the cleaning tools and scripts for free download.

Keywords: : GIZA++ dictionaries, EU languages, dictionary cleaning

1.

Introduction

Bilingual dictionaries are important for various applica-
tions of human language technologies, including cross-
language information search and retrieval, machine trans-
lation and computer-aided assistance to human translators.
The GIZA++ (Och and Ney, 2000; Och and Ney, 2003) tool
provides an automated way to construct bilingual dictio-
naries from parallel corpora. However, there are two main
problems using this tool to create such bilingual dictionar-
ies.
The ﬁrst problem is that the tool is hard to use and in-
put data preparation is difﬁcult.
For technically non-
sophisticated users, installing and running GIZA++ is not
at all straightforward. Depending on the level of technical
ability of the installer, setting the tool up can take several
weeks to ﬁnish successfully. Additionally, preparation of
parallel data to be input to the tool is also time consum-
ing, as any input to GIZA++ must be pre-processed to sat-
isfy certain conditions. Data preparation time is increased
if the aim is to generate bilingual dictionaries for many lan-
guages.
The second problem has to do with noise in the automated
bilingual dictionaries. GIZA++ treats every word in the
source language as a possible translation for every word in
the target language and assigns the pairs probabilities indi-
cating the likelihood of the translations. A word pair with
lower probability can be regarded as an “incorrect” transla-
tion and a word pair with higher probability as a “correct”
translation. However, this is an ideal situation and is not al-
ways the case in GIZA++ as pairs of words with high trans-
lation probabilities may still be wrong. Due to this prob-
lem, any application that makes use of word pair transla-
tions only above a probability value threshold is still served
with noise. Aker et al. (2012), for instance, use GIZA++
dictionaries as a feature when extracting parallel phrases
from comparable corpora and report mistranslated pairs of
phrases mainly due to noise in the statistical dictionaries.
Although the authors clean their dictionaries by removing
every entries that have lower probability values than a man-

ually determined threshold, their results show that better
cleaning is required. The best way to do this would be to
manually ﬁlter out all wrong translations. However, this
is a labour intensive task, which is not feasible to perform
for many language pairs. Another alternative would be an
automated approach that, unlike Aker et al. (2012), does
not trivially delete all dictionary entries below a probabil-
ity threshold but instead aims to ﬁlter out mistranslations
independently from any manually set threshold.
In this paper we address both problems. To address the ﬁrst
problem, we pre-generate bilingual dictionaries for all ofﬁ-
cial European languages except Irish and Croatian and pro-
vide them for free download. To address the second prob-
lem, we describe three different cleaning techniques, two
of which are novel. We apply these cleaning techniques on
the statistical dictionaries in order to reduce noise. Thus the
data we offer for downloading contains several versions of
the same bilingual dictionaries – the original GIZA++ out-
put and multiple cleaned versions. We also provide access
to our cleaning methods in the form of open source tools
for natural language processing-based system developers.
In the remainder of the paper, we ﬁrst describe the data we
use to generate the bilingual dictionaries (Section 2). Next,
we introduce our cleaning methods (Section 3). In Section
4, we describe our evaluation set-up and provide results that
were acquired by performing a manual quality evaluation
of the cleaning processes. Section 5 lists the resources that
are available for download. Finally, we conclude the paper
with Section 6.

2. Bilingual dictionaries
To obtain the original GIZA++ dictionaries we used the
freely available DGT-TM parallel corpus (Steinberger et al.,
2012), which provides data for ofﬁcial languages of the Eu-
ropean Union. The number of sentence pairs available for
each language pair is shown in Table 1.
As shown in Table 1, the number of sentence pairs avail-
able in the DGT-TM corpora varies between language pairs,
ranging from under 1.8M for RO-EN to over 3.7M for the

2839

Language Pair
EN-BG
EN-CS
EN-DA
EN-DE
EN-EL
EN-ES
EN-ET
EN-FI
EN-FR
EN-HU
EN-IT
EN-LT
EN-LV
EN-MT
EN-NL
EN-PL
EN-PT
EN-RO
EN-SK
EN-SL
EN-SV

Sentence Pairs
1,810,612
3,633,782
3,179,359
3,207,458
3,016,402
3,175,608
3,652,963
3,135,651
3,692,787
3,789,650
3,221,060
3,736,907
3,722,517
2,130,282
3,164,924
3,665,112
3,620,006
1,781,306
3,721,620
3,689,972
3,248,207

Table 1: DGT-TM parallel data statistics

following language pairs: EN-HU, EN-LT, EN-LV and EN-
SK. On average, each language pair contains 3.2M sentence
pairs. Using these data, we created bilingual dictionaries
for 21 language pairs. We exclude English-Irish because
the amount of parallel data available in DGT-TM is very
small. We exclude also English-Croatian, because DGT-
TM does not cover Croatian.
Each bilingual dictionary entry has the form (cid:104)s, ti, pi(cid:105),
where s is a source word, ti is the i-th translation of s in
the dictionary and pi is the probability that s is translated to
ti, the pi’s summing to 1 for each s in the dictionary.
We use these original dictionaries and run our cleaning
methods on them to remove noise. These methods are the
subject of the next section.

3. Methods

To clean the GIZA++ dictionaries described in Section 2,
we apply three different methods as described below.

3.1. Statistical approach

The ﬁrst method we implement is similar to the one re-
ported in Munteanu and Marcu (2006). The method uses
LogLikelihood-Ratio (LLR) (Dunning, 1993) as a test to
decide whether a pair of source and target words are cor-
rect or incorrect translations of each other. Any pair not
passing the test is ﬁltered from the dictionary.
To do this, we ﬁrst align the parallel sentence pairs using
the GIZA++ toolkit (Och and Ney, 2000; Och and Ney,
2003) in both directions and then reﬁne the alignments us-
ing a “grow-diag-ﬁnal-and” strategy. The grow-diag-ﬁnal-
and entails for each sentence pair the alignment information
between the words. Based on this alignment ﬁle we con-
struct the co-occurrence matrix used to compute the LLR:

2840

Co − occurenceM atrix =

T (cid:48)
T
S k11 k12
S(cid:48)
k21 k22
where S is the source word and T is the target word. The
aim is to assess whether S and T are translations of each
other. S(cid:48) and T (cid:48) represent source and target words other
than S and T . The entry k11 is the number of times S and T
occurred together (aligned to each other), k12 is the number
of times T occurred with S(cid:48), k21 is the number of times S
occurred with T (cid:48), and k22 is the number of times S(cid:48) and
T (cid:48) occurred together. We ﬁlter out any pair in the GIZA++
dictionary whose LLR value was below 10.83 (p < 0.001)
by looking at the χ2 signiﬁcance table.
Note that we also skip dictionary entries which start or end
with punctuations or symbols. Furthermore, we also delete
any dictionary entry whose GIZA++ probability is below
0.001. These ﬁlters are applied regardless of the χ2 statis-
tics.

3.2. Transliteration based approach
The second method we have investigated tries to use a
transliteration-based approach on ﬁltering the dictionaries.
The idea is that simply applying thresholds on probabilis-
tic dictionaries will ﬁlter out also good translation equiva-
lents. However, identiﬁcation of translation equivalents that
can be transliterated from one language to the other may
allow identifying good pairs below the applied thresholds
and thus keep them in the ﬁltered dictionaries. The method
ﬁlters dictionary entries using the following 7 steps:

1. The ﬁrst step performs dictionary entry structural val-
idation in order to remove obvious noise. At ﬁrst,
we remove all entries that contain invalid character
sequences on either source or target side. Character
sequences are considered invalid if according to the
Unicode character table they contain control symbols,
surrogate symbols or only whitespace symbols. In this
step we also identify mismatching character sequences
by comparing the source and target sides of a dictio-
nary entry. At ﬁrst we verify that the source and target
token letters are equally capitalised (with an excep-
tion of the ﬁrst letter, which in some languages, e.g.,
for nouns in German or days of a week in English,
is capitalised). Further, we verify whether the letters
contained in the source and target sides belong to the
source and target language alphabets and whether both
tokens contain equal numbers of digits, punctuation
marks, and symbols, and whether they are located in
similar positions in the source and target words. As the
GIZA++ probabilistic dictionaries are statistical rep-
resentations of token alignments in a parallel corpus,
the alignments contain also easily detectable mistakes,
such as, words paired with punctuations, incorrectly
tokenized strings paired with words, etc. By apply-
ing character-based validation rules on the source and
target language words we can easily ﬁlter out such ob-
vious mistakes in the probabilistic dictionaries.

2. The second step identiﬁes dictionary entries that are
transliterations. We apply two different transliter-
ation methods: 1) the language independent (how-

Target Token

GIZA++ Probability

Filtering Step

Source
Token
.
standards
a
proven
regulatory
navigational

94/65/ek.
standarts
aprob¯et
gazprom
energoregulatora
dodamos

0.50
0.02
0.50
0.08
0.50
1.00

Structural validation (1) - wrong entries
Transliteration identiﬁcation (2) - correct entries
IDF score-based ﬁlter (3) - wrong entries
Threshold ﬁlter (4) - wrong entries
Partial containment and transliteration ﬁlter (5) - wrong entries
Heuristic ﬁlters (6) - wrong entries

Table 2: English-Latvian dictionary entries identiﬁed according to different ﬁltering steps

ever, ﬁxed to the Latin, Greek, and Cyrillic alphabets)
rule-based transliteration method proposed by Pinnis
(2013), which transliterates words into English using
simple letter substitution rules, and 2) the character-
based statistical machine translation method also pro-
posed by Pinnis (2013). While the ﬁrst transliteration
method is fast, it is not able to capture morphologi-
cal variations in different languages and it treats each
character independently of the context. The second
method, however, takes context (character n-grams)
into account and is able to transliterate words not
only into English, but also to other languages, thus
transliterated word identiﬁcation can be performed bi-
directionally (from source to target and from target
to source). In order to identify transliterated words,
the transliterations (e.g., the source word transliter-
ated into the target language) are compared with the
other sides word (e.g., the target language word) using
a string similarity measure based on the Levenshtein
If the maximum sim-
distance (Levenshtein, 1966).
ilarity score using any of the transliteration methods
and directions (source-to-target or target-to-source) is
higher than 0.7 (identiﬁed as an acceptable threshold
through empirical analysis) and the source and tar-
get words are not equal (because such pairs are of-
ten wrong language pairs), we consider the dictio-
nary entry as transliterated and we pass it through to
the ﬁltered dictionary (the further ﬁltering steps are
skipped).

3. In the third step we analyse the remaining pairs using
reference corpora based inverse document frequency
(IDF) scores (Jones, 1972) of the source and target
words. We remove all pairs that have a difference
of word IDF scores greater than 0.9 (also empiri-
cally identiﬁed). Such pairs often indicate of func-
tional word (or stop-word) miss-alignment with con-
tent words (e.g., in the dictionaries the English “a”
is usually paired with almost everything else and the
IDF-based ﬁlter reliably removes such entries).

4. In the fourth step we apply a translation probability
value threshold that is differentiated for (source lan-
guage) words that were already containing transliter-
ation pairs (i.e., if a dictionary entry containing the
source word was identiﬁed as a transliteration, then
all other translation candidates for the source word are
required to have a high probability in order to be ac-
cepted as translation equivalents).

5. Then, we remove all pairs that partially contain
transliterations.
For instance, consider the dictio-
nary entry “monopoly” (in English) and “monopols”
(in Latvian). The entry is a transliteration,
thus,
“monopolsitu¯acij¯a” (translated as “in the case of a
monopoly” would be ﬁltered out as it contains fully
the transliterated part.

6. We apply also several heuristic ﬁlters that have shown
to remove further noise (e.g., rare words miss-aligned
with a probability of one if a source word already con-
tains multiple translation hypotheses, equal source and
target words if the source word already contains mul-
tiple translation hypotheses, etc.).

7. Finally, the pairs that have passed all ﬁlter tests are

written to the ﬁltered dictionary.

Examples of dictionary entries that were identiﬁed us-
ing the different ﬁltering steps from the English-Latvian
GIZA++ dictionary are given in Table 2.

3.3. Pivot language based approach
The pivot language based approach uses the idea of inter-
mediate languages to clean noise from the bilingual dictio-
naries. The idea of a pivot language is used in related work
to overcome the problem of unavailable bilingual dictio-
naries such as in cross lingual information retrieval (CLIR)
(Gollins and Sanderson, 2001; Ballesteros, 2002), in sta-
tistical machine translation (Wu and Wang, 2007; Wu and
Wang, 2009) and bilingual dictionary generation (Paik et
al., 2001; Seo and Kim, 2013). However, our approach
differs from related work by adopting the idea of pivot lan-
guages to clean noise from existing dictionaries instead of
using it for translation purposes. This means that we aim
at cleaning an existing dictionary such as for the English-
German language pair using intermediate dictionaries such
as German-French and French-English.
In this case, the
pivot language is French.
Our approach uses the bilingual dictionary that has to
this is
be cleaned as the starting point.
the English-German (EN-DE) GIZA++ dictionary. We
distinguish between one pivot language and several par-
allel pivot languages approach.
In the one pivot lan-
guage approach (shown as the blue arrow in Figure 1),
our method takes for every source language (i.e., English)
word enW its translations in the target (i.e., German) lan-
guage (deW1, ..., deWn).
In the next step, using a DE-
FR GIZA++ dictionary, each such German word, deWi,
is then translated into French leading to French words

In Figure 1,

2841

Figure 1: Pivot language based approach.

Figure 2: Evaluation sets.

f rWi1, ..., f rWim. Each such French word, f rWij, is then
looked up in an FR-EN GIZA++ dictionary leading to pos-
sible translations in English (enWij1, ..., enWijp). If none
of the English words enWij1, ..., enWijp matches enW
then the pair < enW, deWi > is removed from the EN-DE
dictionary.
Our early experiments showed that using the one pivot lan-
guage approach many entries from the EN-DE dictionary
are removed because the pivot dictionary (DE-FR) does
not contain entries for the German words. To overcome
this problem we also introduce the several parallel pivot
languages approach (shown as the red arrows in Figure 1)
where instead of using one pivot language, we perform the
cleaning with two pivot dictionaries at the same time. That
means when we perform the cleaning of EN-DE using DE-
FR-EN (as described in the one pivot language approach),
we also perform in parallel the cleaning using another pivot
dictionary, such as DE-IT-EN. In Figure 1 the two parallel
pivot languages approach is shown using DE-FR-EN and
DE-IT-EN. If at least one of these returns an English word
enWijp equal to enW we keep the entry < enW, deWi >
in the EN-DE dictionary otherwise the entry is removed.
By performing two parallel checks we reduce the chance
that the entry < enW, deWi > is removed from the dictio-
nary because of missing entries.
Note that similarly to the LLR method within this approach
we also skip –independently from the pivot language dic-
tionary look-ups– dictionary entries which contain punctu-
ations or symbols and also entries whose dictionary proba-
bility values are below 0.001.

4. Evaluation

To assess the performance of the different cleaning methods
we performed a manual evaluation task by asking humans
to judge the translation quality of the remaining dictionary
entries. In the evaluation we randomly selected dictionary
entries from 8 different sets to assess. The sets are shown
in Figure 2. The ﬁrst set contains all entries from the orig-
inal GIZA++ dictionary, which do not appear in any of the
other 7 sets (i.e. they are not retrieved by any of the three
approaches). This set is used to understand whether the

Figure 3: Number of entries in each set for
English-German.

cleaning methods do miss good data or not. The next four
sets are the entries in the intersections between the results of
the three methods, I-1, I-2, I-3 and All. The All set contains
only entries which are also found in the other results. The
other intersection sets contain entries between two meth-
ods. Finally, we have the LLR, Pivot and Transliteration
sets, which do not share any entry with the intersection sets.
Figure 3 shows the number of dictionary entries in each of
the 8 sets for the English-German language pair. For in-
stance, the Pivot method outputs for the English-German
dictionary in total 277,703 entries. However, we divide
this set into 4 parts: portion within All intersection (8,987
entries), portion of entries which intersects with the LLR
method (I-1, in total 91,924 entries), portion intersecting
with the Transliteration based method (I-3, in total 20,605
entries) and ﬁnally what is distinct within the Pivot result
set (in total 156,187 entries).
From each of the 8 sets, we randomly selected 40 entries
leading to total 320 entries and showed them to human as-
sessors. Each assessor judged all 320 entries. In the assess-
ment, similar to Aker et al. (2013), we asked human asses-

2842

sors to categorize each presented dictionary entry into one
of the categories shown in Figure 4. Two German and two
Latvian native speakers who were ﬂuent in English took
part in this evaluation task. Note that in the evaluation we
only used the English to X (i.e. German and Latvian) dic-
tionaries. However, we also provide cleaned version of the
dictionaries from language X to English.

4.1. Results
The results of the evaluation are shown in Table 3 for
English-German and Table 4 for English-Latvian.
From the results we can see that the dictionary entries from
the original GIZA++ dictionary are very noisy. Only 2%-
6% of the entries contain correct translations. Note that
these entries are not included in any of the cleaned sets.
This means that the cleaning methods are good ﬁlters to
skip such noisy entries. Furthermore, the results show that
the transliteration method performs best compared to the
other two cleaning methods for both English-German and
English-Latvian language pairs. According to the man-
ual assessors this method achieves around 55%-61% pre-
cision. The pivot approach achieves around 40%-42% for
both language pairs. The LLR method gets for English-
German only 20%, but for the English-Latvian language
pair it achieves a similar ﬁgure as the pivot approach. How-
ever, these ﬁgures are based on the entries not included in
If we look at the intersection sets
the intersection sets.
If All inter-
we see that the precision ﬁgures go higher.
sections are considered then the precision results are just
below 90% for both English-German and English-Latvian
language pairs. Among the intersection sets the lowest pre-
cision results are achieved when the pivot method is inter-
sected with the LLR approach (set I-1). The high precision
scores in the intersection sets show that the cleaning meth-
ods commonly identify “good” translations and the high-
est ﬁgure in the All set suggests to combine the different
cleaning methods and apply them together on the original
GIZA++ dictionaries.
We also computed the agreement rates between the asses-
sors. The German assessors had an agreement in 79.69%
of all evaluated dictionary entries and the Latvian assessors
agreed in 80.31% of all entries. We computed the agree-
ment based on the number of agreed votes over the three
categories and the 8 sets (see the second half of the Tables
3 and 4) divided by the total number of votes (in this case
320).

5. Resources for download
We have prepared the dictionaries as well as the cleaning
methods for download:

• Original GIZA++ dictionaries: These are the dic-
tionaries we obtained using the GIZA++ alignment
tool. We do not apply any cleaning technique on these
statistical dictionaries. The dictionaries can be found
here: http://www.taas-project.eu/. For the purpose of
the pivot approach we also created GIZA++ dictionar-
ies for DE-XX and FR-XX where XX represents any
of the other languages. These dictionaries can also be
downloaded from the same link.

• Cleaned bilingual dictionaries:

These are the
cleaned versions of the original dictionaries. These
dictionaries are also available through the same link
as the original ones.

• Tools and scripts for cleaning: The LLR and
the pivot approaches can be downloaded from:
http://staffwww.dcs.shef.ac.uk/people/A.Aker/
activityNLPProjects2.html. The transliteration-based
cleaning tool’s source code can be downloaded from:
https://github.com/pmarcis/dict-ﬁltering.

6. Conclusion
In this paper we have described three different methods
for cleaning bilingual dictionaries: LLR, pivot, and the
transliteration based approach. We have applied these
methods on GIZA++ dictionaries covering 22 ofﬁcial EU
languages. We also performed manual evaluation using
English-German and English-Latvian dictionaries. Our
evaluation shows that all methods help reducing noise, i.e.,
the dictionary entries not taken by the three methods are
mainly judged by the assessors as noise. The best per-
formance is achieved using the transliteration approach.
We have also seen that the results in the intersection sets
were higher than in the other sets. This showed that the
cleaning methods do commonly identify what is a correct
translation. We provide all bilingual dictionaries (the origi-
nal GIZA++ dictionaries and the cleaned versions) free for
download. We also provide the cleaning tools and scripts
for free download.
For future work we aim to combine the different approaches
using some machine learning techniques and apply them
together on the cleaning task. Furthermore, we plan to work
on other language pairs where English is not involved and
provide them for free download. We plan to upload any
additional dictionary to http://www.taas-project.eu/.

7. Acknowledgments
The research within the project TaaS leading to these results
has received funding from the European Union Seventh
Framework Programme (FP7/2007-2013), Grant Agree-
ment no 296312. We would like to thank the assessors who
took part in our manual evaluation.

8. References
Aker, A., Feng, Y., and Gaizauskas, R. (2012). Automatic
bilingual phrase extraction from comparable corpora. In
24th International Conference on Computational Lin-
guistics (COLING 2012), IIT Bombay, Mumbai, India,
2012. Association for Computational Linguistics.

Aker, A., Paramita, M., and Gaizauskas, R. (2013). Ex-
tracting bilingual terminologies from comparable cor-
pora. In The 51st Annual Meeting of the Association for
Computational Linguistics, Soﬁa, Bulgaria). Association
for Computational Linguistics.

Ballesteros, L. A.

(2002). Cross-language retrieval via
In Advances in information re-

transitive translation.
trieval, pages 203–234. Springer.

Dunning, T. (1993). Accurate methods for the statistics
of surprise and coincidence. Computational linguistics,
19(1):61–74.

2843

Figure 4: Bilingual dictionary evaluation set-up.

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
38
65
53
45
32
16
2

Cont. Wrong
6
26
6
10
7
22
28
26

3
16
9
17
28
26
36
52

Precision
88.75%
47.50%
81.25%
66.25%
56.25%
40.00%
20.00%
2.50%

Eq.
35
15
30
21
19
12
5
0

Cont.
2
12
2
2
2
7
11
10

Wrong
0
4
2
4
11
10
15
24

Precision
94.59%
48.39%
88.24%
77.78%
59.38%
41.38%
16.13%
0.00%

Table 3: Results of the EN-DE manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Gollins, T. and Sanderson, M. (2001). Improving cross
language retrieval with triangulated translation. In Pro-
ceedings of the 24th annual international ACM SIGIR
conference on Research and development in information
retrieval, pages 90–95. ACM.

Jones, K. S. (1972). A statistical interpretation of term
speciﬁcity and its application in retrieval. Journal of
documentation, 28(1):11–21.

Levenshtein, V. I. (1966). Binary codes capable of correct-
ing deletions, insertions and reversals. In Soviet physics
doklady, volume 10, page 707.

Munteanu, D. S. and Marcu, D. (2006). Extracting parallel
sub-sentential fragments from non-parallel corpora. In
ACL-44: Proceedings of the 21st International Confer-
ence on Computational Linguistics and the 44th annual
meeting of the Association for Computational Linguis-
tics, pages 81–88, Morristown, NJ, USA. Association for

Computational Linguistics.

Och, F. J. and Ney, H. (2000). A comparison of alignment
models for statistical machine translation. In Proceed-
ings of the 18th conference on Computational linguis-
tics, pages 1086–1090, Morristown, NJ, USA. Associa-
tion for Computational Linguistics.

Och, F. J. O. and Ney, H. (2003). A systematic comparison
of various statistical alignment models. Computational
Linguistics, 29(1):19–51.

Paik, K., Bond, F., and Satoshi, S. (2001). Using multi-
ple pivots to align korean and japanese lexical resources.
In Proc. of the NLPRS-2001 Workshop on Language Re-
sources in Asia, pages 63–70.

Pinnis, M.

(2013). Context Independent Term Mapper
for European Languages. In Proceedings of Recent Ad-
vances in Natural Language Processing (RANLP 2013),
pages 562—-570, Hissar, Bulgaria.

2844

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
55
62
56
49
34
34
5

Cont. Wrong
2
5
4
7
4
11
4
3

7
20
14
17
27
35
42
72

Precision
88.75%
68.75%
77.50%
70.00%
61.25%
42.50%
42.50%
6.25%

Eq.
33
25
25
25
21
14
15
0

Cont.
0
2
0
1
0
2
1
0

Wrong
1
7
3
6
11
14
19
32

Precision
97.06%
73.53%
89.29%
78.13%
65.63%
46.67%
42.86%
0%

Table 4: Results of the EN-LV manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Seo, H.-S. K. H.-W. and Kim, J.-H. (2013). Bilingual lex-
icon extraction via pivot language and word alignment
tool. ACL 2013, page 11.

Steinberger, R., Eisele, A., Klocek, S., Pilos, S., and
Schlter, P. (2012). Dgt-tm: A freely available transla-
tion memory in 22 languages. In Proceedings of LREC,
pages 454–459.

Wu, H. and Wang, H. (2007). Pivot language approach for
phrase-based statistical machine translation. Machine
Translation, 21(3):165–181.

Wu, H. and Wang, H. (2009). Revisiting pivot language
approach for machine translation. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the ACL
and the 4th International Joint Conference on Natural
Language Processing of the AFNLP: Volume 1-Volume
1, pages 154–162. Association for Computational Lin-
guistics.

2845

Bilingual dictionaries for all EU languages

Ahmet Aker, Monica Lestari Paramita, M¯arcis Pinnis∗, Robert Gaizauskas
Department of Computer Science, University of Shefﬁeld, UK
∗Tilde, Vienibas gatve 75a, Riga, Latvia, LV-1004
Email: a.aker@dcs.shef.ac.uk, m.paramita@shefﬁeld.ac.uk
marcis.pinnis@tilde.lv, r.gaizauskas@dcs.shef.ac.uk

Abstract
Bilingual dictionaries can be automatically generated using the GIZA++ tool. However, these dictionaries contain a lot of noise, because
of which the qualities of outputs of tools relying on the dictionaries are negatively affected. In this work, we present three different
methods for cleaning noise from automatically generated bilingual dictionaries: LLR, pivot and transliteration based approach. We have
applied these approaches on the GIZA++ dictionaries – dictionaries covering ofﬁcial EU languages – in order to remove noise. Our
evaluation showed that all methods help to reduce noise. However, the best performance is achieved using the transliteration based
approach. We provide all bilingual dictionaries (the original GIZA++ dictionaries and the cleaned ones) free for download. We also
provide the cleaning tools and scripts for free download.

Keywords: : GIZA++ dictionaries, EU languages, dictionary cleaning

1.

Introduction

Bilingual dictionaries are important for various applica-
tions of human language technologies, including cross-
language information search and retrieval, machine trans-
lation and computer-aided assistance to human translators.
The GIZA++ (Och and Ney, 2000; Och and Ney, 2003) tool
provides an automated way to construct bilingual dictio-
naries from parallel corpora. However, there are two main
problems using this tool to create such bilingual dictionar-
ies.
The ﬁrst problem is that the tool is hard to use and in-
put data preparation is difﬁcult.
For technically non-
sophisticated users, installing and running GIZA++ is not
at all straightforward. Depending on the level of technical
ability of the installer, setting the tool up can take several
weeks to ﬁnish successfully. Additionally, preparation of
parallel data to be input to the tool is also time consum-
ing, as any input to GIZA++ must be pre-processed to sat-
isfy certain conditions. Data preparation time is increased
if the aim is to generate bilingual dictionaries for many lan-
guages.
The second problem has to do with noise in the automated
bilingual dictionaries. GIZA++ treats every word in the
source language as a possible translation for every word in
the target language and assigns the pairs probabilities indi-
cating the likelihood of the translations. A word pair with
lower probability can be regarded as an “incorrect” transla-
tion and a word pair with higher probability as a “correct”
translation. However, this is an ideal situation and is not al-
ways the case in GIZA++ as pairs of words with high trans-
lation probabilities may still be wrong. Due to this prob-
lem, any application that makes use of word pair transla-
tions only above a probability value threshold is still served
with noise. Aker et al. (2012), for instance, use GIZA++
dictionaries as a feature when extracting parallel phrases
from comparable corpora and report mistranslated pairs of
phrases mainly due to noise in the statistical dictionaries.
Although the authors clean their dictionaries by removing
every entries that have lower probability values than a man-

ually determined threshold, their results show that better
cleaning is required. The best way to do this would be to
manually ﬁlter out all wrong translations. However, this
is a labour intensive task, which is not feasible to perform
for many language pairs. Another alternative would be an
automated approach that, unlike Aker et al. (2012), does
not trivially delete all dictionary entries below a probabil-
ity threshold but instead aims to ﬁlter out mistranslations
independently from any manually set threshold.
In this paper we address both problems. To address the ﬁrst
problem, we pre-generate bilingual dictionaries for all ofﬁ-
cial European languages except Irish and Croatian and pro-
vide them for free download. To address the second prob-
lem, we describe three different cleaning techniques, two
of which are novel. We apply these cleaning techniques on
the statistical dictionaries in order to reduce noise. Thus the
data we offer for downloading contains several versions of
the same bilingual dictionaries – the original GIZA++ out-
put and multiple cleaned versions. We also provide access
to our cleaning methods in the form of open source tools
for natural language processing-based system developers.
In the remainder of the paper, we ﬁrst describe the data we
use to generate the bilingual dictionaries (Section 2). Next,
we introduce our cleaning methods (Section 3). In Section
4, we describe our evaluation set-up and provide results that
were acquired by performing a manual quality evaluation
of the cleaning processes. Section 5 lists the resources that
are available for download. Finally, we conclude the paper
with Section 6.

2. Bilingual dictionaries
To obtain the original GIZA++ dictionaries we used the
freely available DGT-TM parallel corpus (Steinberger et al.,
2012), which provides data for ofﬁcial languages of the Eu-
ropean Union. The number of sentence pairs available for
each language pair is shown in Table 1.
As shown in Table 1, the number of sentence pairs avail-
able in the DGT-TM corpora varies between language pairs,
ranging from under 1.8M for RO-EN to over 3.7M for the

2839

Language Pair
EN-BG
EN-CS
EN-DA
EN-DE
EN-EL
EN-ES
EN-ET
EN-FI
EN-FR
EN-HU
EN-IT
EN-LT
EN-LV
EN-MT
EN-NL
EN-PL
EN-PT
EN-RO
EN-SK
EN-SL
EN-SV

Sentence Pairs
1,810,612
3,633,782
3,179,359
3,207,458
3,016,402
3,175,608
3,652,963
3,135,651
3,692,787
3,789,650
3,221,060
3,736,907
3,722,517
2,130,282
3,164,924
3,665,112
3,620,006
1,781,306
3,721,620
3,689,972
3,248,207

Table 1: DGT-TM parallel data statistics

following language pairs: EN-HU, EN-LT, EN-LV and EN-
SK. On average, each language pair contains 3.2M sentence
pairs. Using these data, we created bilingual dictionaries
for 21 language pairs. We exclude English-Irish because
the amount of parallel data available in DGT-TM is very
small. We exclude also English-Croatian, because DGT-
TM does not cover Croatian.
Each bilingual dictionary entry has the form (cid:104)s, ti, pi(cid:105),
where s is a source word, ti is the i-th translation of s in
the dictionary and pi is the probability that s is translated to
ti, the pi’s summing to 1 for each s in the dictionary.
We use these original dictionaries and run our cleaning
methods on them to remove noise. These methods are the
subject of the next section.

3. Methods

To clean the GIZA++ dictionaries described in Section 2,
we apply three different methods as described below.

3.1. Statistical approach

The ﬁrst method we implement is similar to the one re-
ported in Munteanu and Marcu (2006). The method uses
LogLikelihood-Ratio (LLR) (Dunning, 1993) as a test to
decide whether a pair of source and target words are cor-
rect or incorrect translations of each other. Any pair not
passing the test is ﬁltered from the dictionary.
To do this, we ﬁrst align the parallel sentence pairs using
the GIZA++ toolkit (Och and Ney, 2000; Och and Ney,
2003) in both directions and then reﬁne the alignments us-
ing a “grow-diag-ﬁnal-and” strategy. The grow-diag-ﬁnal-
and entails for each sentence pair the alignment information
between the words. Based on this alignment ﬁle we con-
struct the co-occurrence matrix used to compute the LLR:

2840

Co − occurenceM atrix =

T (cid:48)
T
S k11 k12
S(cid:48)
k21 k22
where S is the source word and T is the target word. The
aim is to assess whether S and T are translations of each
other. S(cid:48) and T (cid:48) represent source and target words other
than S and T . The entry k11 is the number of times S and T
occurred together (aligned to each other), k12 is the number
of times T occurred with S(cid:48), k21 is the number of times S
occurred with T (cid:48), and k22 is the number of times S(cid:48) and
T (cid:48) occurred together. We ﬁlter out any pair in the GIZA++
dictionary whose LLR value was below 10.83 (p < 0.001)
by looking at the χ2 signiﬁcance table.
Note that we also skip dictionary entries which start or end
with punctuations or symbols. Furthermore, we also delete
any dictionary entry whose GIZA++ probability is below
0.001. These ﬁlters are applied regardless of the χ2 statis-
tics.

3.2. Transliteration based approach
The second method we have investigated tries to use a
transliteration-based approach on ﬁltering the dictionaries.
The idea is that simply applying thresholds on probabilis-
tic dictionaries will ﬁlter out also good translation equiva-
lents. However, identiﬁcation of translation equivalents that
can be transliterated from one language to the other may
allow identifying good pairs below the applied thresholds
and thus keep them in the ﬁltered dictionaries. The method
ﬁlters dictionary entries using the following 7 steps:

1. The ﬁrst step performs dictionary entry structural val-
idation in order to remove obvious noise. At ﬁrst,
we remove all entries that contain invalid character
sequences on either source or target side. Character
sequences are considered invalid if according to the
Unicode character table they contain control symbols,
surrogate symbols or only whitespace symbols. In this
step we also identify mismatching character sequences
by comparing the source and target sides of a dictio-
nary entry. At ﬁrst we verify that the source and target
token letters are equally capitalised (with an excep-
tion of the ﬁrst letter, which in some languages, e.g.,
for nouns in German or days of a week in English,
is capitalised). Further, we verify whether the letters
contained in the source and target sides belong to the
source and target language alphabets and whether both
tokens contain equal numbers of digits, punctuation
marks, and symbols, and whether they are located in
similar positions in the source and target words. As the
GIZA++ probabilistic dictionaries are statistical rep-
resentations of token alignments in a parallel corpus,
the alignments contain also easily detectable mistakes,
such as, words paired with punctuations, incorrectly
tokenized strings paired with words, etc. By apply-
ing character-based validation rules on the source and
target language words we can easily ﬁlter out such ob-
vious mistakes in the probabilistic dictionaries.

2. The second step identiﬁes dictionary entries that are
transliterations. We apply two different transliter-
ation methods: 1) the language independent (how-

Target Token

GIZA++ Probability

Filtering Step

Source
Token
.
standards
a
proven
regulatory
navigational

94/65/ek.
standarts
aprob¯et
gazprom
energoregulatora
dodamos

0.50
0.02
0.50
0.08
0.50
1.00

Structural validation (1) - wrong entries
Transliteration identiﬁcation (2) - correct entries
IDF score-based ﬁlter (3) - wrong entries
Threshold ﬁlter (4) - wrong entries
Partial containment and transliteration ﬁlter (5) - wrong entries
Heuristic ﬁlters (6) - wrong entries

Table 2: English-Latvian dictionary entries identiﬁed according to different ﬁltering steps

ever, ﬁxed to the Latin, Greek, and Cyrillic alphabets)
rule-based transliteration method proposed by Pinnis
(2013), which transliterates words into English using
simple letter substitution rules, and 2) the character-
based statistical machine translation method also pro-
posed by Pinnis (2013). While the ﬁrst transliteration
method is fast, it is not able to capture morphologi-
cal variations in different languages and it treats each
character independently of the context. The second
method, however, takes context (character n-grams)
into account and is able to transliterate words not
only into English, but also to other languages, thus
transliterated word identiﬁcation can be performed bi-
directionally (from source to target and from target
to source). In order to identify transliterated words,
the transliterations (e.g., the source word transliter-
ated into the target language) are compared with the
other sides word (e.g., the target language word) using
a string similarity measure based on the Levenshtein
If the maximum sim-
distance (Levenshtein, 1966).
ilarity score using any of the transliteration methods
and directions (source-to-target or target-to-source) is
higher than 0.7 (identiﬁed as an acceptable threshold
through empirical analysis) and the source and tar-
get words are not equal (because such pairs are of-
ten wrong language pairs), we consider the dictio-
nary entry as transliterated and we pass it through to
the ﬁltered dictionary (the further ﬁltering steps are
skipped).

3. In the third step we analyse the remaining pairs using
reference corpora based inverse document frequency
(IDF) scores (Jones, 1972) of the source and target
words. We remove all pairs that have a difference
of word IDF scores greater than 0.9 (also empiri-
cally identiﬁed). Such pairs often indicate of func-
tional word (or stop-word) miss-alignment with con-
tent words (e.g., in the dictionaries the English “a”
is usually paired with almost everything else and the
IDF-based ﬁlter reliably removes such entries).

4. In the fourth step we apply a translation probability
value threshold that is differentiated for (source lan-
guage) words that were already containing transliter-
ation pairs (i.e., if a dictionary entry containing the
source word was identiﬁed as a transliteration, then
all other translation candidates for the source word are
required to have a high probability in order to be ac-
cepted as translation equivalents).

5. Then, we remove all pairs that partially contain
transliterations.
For instance, consider the dictio-
nary entry “monopoly” (in English) and “monopols”
(in Latvian). The entry is a transliteration,
thus,
“monopolsitu¯acij¯a” (translated as “in the case of a
monopoly” would be ﬁltered out as it contains fully
the transliterated part.

6. We apply also several heuristic ﬁlters that have shown
to remove further noise (e.g., rare words miss-aligned
with a probability of one if a source word already con-
tains multiple translation hypotheses, equal source and
target words if the source word already contains mul-
tiple translation hypotheses, etc.).

7. Finally, the pairs that have passed all ﬁlter tests are

written to the ﬁltered dictionary.

Examples of dictionary entries that were identiﬁed us-
ing the different ﬁltering steps from the English-Latvian
GIZA++ dictionary are given in Table 2.

3.3. Pivot language based approach
The pivot language based approach uses the idea of inter-
mediate languages to clean noise from the bilingual dictio-
naries. The idea of a pivot language is used in related work
to overcome the problem of unavailable bilingual dictio-
naries such as in cross lingual information retrieval (CLIR)
(Gollins and Sanderson, 2001; Ballesteros, 2002), in sta-
tistical machine translation (Wu and Wang, 2007; Wu and
Wang, 2009) and bilingual dictionary generation (Paik et
al., 2001; Seo and Kim, 2013). However, our approach
differs from related work by adopting the idea of pivot lan-
guages to clean noise from existing dictionaries instead of
using it for translation purposes. This means that we aim
at cleaning an existing dictionary such as for the English-
German language pair using intermediate dictionaries such
as German-French and French-English.
In this case, the
pivot language is French.
Our approach uses the bilingual dictionary that has to
this is
be cleaned as the starting point.
the English-German (EN-DE) GIZA++ dictionary. We
distinguish between one pivot language and several par-
allel pivot languages approach.
In the one pivot lan-
guage approach (shown as the blue arrow in Figure 1),
our method takes for every source language (i.e., English)
word enW its translations in the target (i.e., German) lan-
guage (deW1, ..., deWn).
In the next step, using a DE-
FR GIZA++ dictionary, each such German word, deWi,
is then translated into French leading to French words

In Figure 1,

2841

Figure 1: Pivot language based approach.

Figure 2: Evaluation sets.

f rWi1, ..., f rWim. Each such French word, f rWij, is then
looked up in an FR-EN GIZA++ dictionary leading to pos-
sible translations in English (enWij1, ..., enWijp). If none
of the English words enWij1, ..., enWijp matches enW
then the pair < enW, deWi > is removed from the EN-DE
dictionary.
Our early experiments showed that using the one pivot lan-
guage approach many entries from the EN-DE dictionary
are removed because the pivot dictionary (DE-FR) does
not contain entries for the German words. To overcome
this problem we also introduce the several parallel pivot
languages approach (shown as the red arrows in Figure 1)
where instead of using one pivot language, we perform the
cleaning with two pivot dictionaries at the same time. That
means when we perform the cleaning of EN-DE using DE-
FR-EN (as described in the one pivot language approach),
we also perform in parallel the cleaning using another pivot
dictionary, such as DE-IT-EN. In Figure 1 the two parallel
pivot languages approach is shown using DE-FR-EN and
DE-IT-EN. If at least one of these returns an English word
enWijp equal to enW we keep the entry < enW, deWi >
in the EN-DE dictionary otherwise the entry is removed.
By performing two parallel checks we reduce the chance
that the entry < enW, deWi > is removed from the dictio-
nary because of missing entries.
Note that similarly to the LLR method within this approach
we also skip –independently from the pivot language dic-
tionary look-ups– dictionary entries which contain punctu-
ations or symbols and also entries whose dictionary proba-
bility values are below 0.001.

4. Evaluation

To assess the performance of the different cleaning methods
we performed a manual evaluation task by asking humans
to judge the translation quality of the remaining dictionary
entries. In the evaluation we randomly selected dictionary
entries from 8 different sets to assess. The sets are shown
in Figure 2. The ﬁrst set contains all entries from the orig-
inal GIZA++ dictionary, which do not appear in any of the
other 7 sets (i.e. they are not retrieved by any of the three
approaches). This set is used to understand whether the

Figure 3: Number of entries in each set for
English-German.

cleaning methods do miss good data or not. The next four
sets are the entries in the intersections between the results of
the three methods, I-1, I-2, I-3 and All. The All set contains
only entries which are also found in the other results. The
other intersection sets contain entries between two meth-
ods. Finally, we have the LLR, Pivot and Transliteration
sets, which do not share any entry with the intersection sets.
Figure 3 shows the number of dictionary entries in each of
the 8 sets for the English-German language pair. For in-
stance, the Pivot method outputs for the English-German
dictionary in total 277,703 entries. However, we divide
this set into 4 parts: portion within All intersection (8,987
entries), portion of entries which intersects with the LLR
method (I-1, in total 91,924 entries), portion intersecting
with the Transliteration based method (I-3, in total 20,605
entries) and ﬁnally what is distinct within the Pivot result
set (in total 156,187 entries).
From each of the 8 sets, we randomly selected 40 entries
leading to total 320 entries and showed them to human as-
sessors. Each assessor judged all 320 entries. In the assess-
ment, similar to Aker et al. (2013), we asked human asses-

2842

sors to categorize each presented dictionary entry into one
of the categories shown in Figure 4. Two German and two
Latvian native speakers who were ﬂuent in English took
part in this evaluation task. Note that in the evaluation we
only used the English to X (i.e. German and Latvian) dic-
tionaries. However, we also provide cleaned version of the
dictionaries from language X to English.

4.1. Results
The results of the evaluation are shown in Table 3 for
English-German and Table 4 for English-Latvian.
From the results we can see that the dictionary entries from
the original GIZA++ dictionary are very noisy. Only 2%-
6% of the entries contain correct translations. Note that
these entries are not included in any of the cleaned sets.
This means that the cleaning methods are good ﬁlters to
skip such noisy entries. Furthermore, the results show that
the transliteration method performs best compared to the
other two cleaning methods for both English-German and
English-Latvian language pairs. According to the man-
ual assessors this method achieves around 55%-61% pre-
cision. The pivot approach achieves around 40%-42% for
both language pairs. The LLR method gets for English-
German only 20%, but for the English-Latvian language
pair it achieves a similar ﬁgure as the pivot approach. How-
ever, these ﬁgures are based on the entries not included in
If we look at the intersection sets
the intersection sets.
If All inter-
we see that the precision ﬁgures go higher.
sections are considered then the precision results are just
below 90% for both English-German and English-Latvian
language pairs. Among the intersection sets the lowest pre-
cision results are achieved when the pivot method is inter-
sected with the LLR approach (set I-1). The high precision
scores in the intersection sets show that the cleaning meth-
ods commonly identify “good” translations and the high-
est ﬁgure in the All set suggests to combine the different
cleaning methods and apply them together on the original
GIZA++ dictionaries.
We also computed the agreement rates between the asses-
sors. The German assessors had an agreement in 79.69%
of all evaluated dictionary entries and the Latvian assessors
agreed in 80.31% of all entries. We computed the agree-
ment based on the number of agreed votes over the three
categories and the 8 sets (see the second half of the Tables
3 and 4) divided by the total number of votes (in this case
320).

5. Resources for download
We have prepared the dictionaries as well as the cleaning
methods for download:

• Original GIZA++ dictionaries: These are the dic-
tionaries we obtained using the GIZA++ alignment
tool. We do not apply any cleaning technique on these
statistical dictionaries. The dictionaries can be found
here: http://www.taas-project.eu/. For the purpose of
the pivot approach we also created GIZA++ dictionar-
ies for DE-XX and FR-XX where XX represents any
of the other languages. These dictionaries can also be
downloaded from the same link.

• Cleaned bilingual dictionaries:

These are the
cleaned versions of the original dictionaries. These
dictionaries are also available through the same link
as the original ones.

• Tools and scripts for cleaning: The LLR and
the pivot approaches can be downloaded from:
http://staffwww.dcs.shef.ac.uk/people/A.Aker/
activityNLPProjects2.html. The transliteration-based
cleaning tool’s source code can be downloaded from:
https://github.com/pmarcis/dict-ﬁltering.

6. Conclusion
In this paper we have described three different methods
for cleaning bilingual dictionaries: LLR, pivot, and the
transliteration based approach. We have applied these
methods on GIZA++ dictionaries covering 22 ofﬁcial EU
languages. We also performed manual evaluation using
English-German and English-Latvian dictionaries. Our
evaluation shows that all methods help reducing noise, i.e.,
the dictionary entries not taken by the three methods are
mainly judged by the assessors as noise. The best per-
formance is achieved using the transliteration approach.
We have also seen that the results in the intersection sets
were higher than in the other sets. This showed that the
cleaning methods do commonly identify what is a correct
translation. We provide all bilingual dictionaries (the origi-
nal GIZA++ dictionaries and the cleaned versions) free for
download. We also provide the cleaning tools and scripts
for free download.
For future work we aim to combine the different approaches
using some machine learning techniques and apply them
together on the cleaning task. Furthermore, we plan to work
on other language pairs where English is not involved and
provide them for free download. We plan to upload any
additional dictionary to http://www.taas-project.eu/.

7. Acknowledgments
The research within the project TaaS leading to these results
has received funding from the European Union Seventh
Framework Programme (FP7/2007-2013), Grant Agree-
ment no 296312. We would like to thank the assessors who
took part in our manual evaluation.

8. References
Aker, A., Feng, Y., and Gaizauskas, R. (2012). Automatic
bilingual phrase extraction from comparable corpora. In
24th International Conference on Computational Lin-
guistics (COLING 2012), IIT Bombay, Mumbai, India,
2012. Association for Computational Linguistics.

Aker, A., Paramita, M., and Gaizauskas, R. (2013). Ex-
tracting bilingual terminologies from comparable cor-
pora. In The 51st Annual Meeting of the Association for
Computational Linguistics, Soﬁa, Bulgaria). Association
for Computational Linguistics.

Ballesteros, L. A.

(2002). Cross-language retrieval via
In Advances in information re-

transitive translation.
trieval, pages 203–234. Springer.

Dunning, T. (1993). Accurate methods for the statistics
of surprise and coincidence. Computational linguistics,
19(1):61–74.

2843

Figure 4: Bilingual dictionary evaluation set-up.

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
38
65
53
45
32
16
2

Cont. Wrong
6
26
6
10
7
22
28
26

3
16
9
17
28
26
36
52

Precision
88.75%
47.50%
81.25%
66.25%
56.25%
40.00%
20.00%
2.50%

Eq.
35
15
30
21
19
12
5
0

Cont.
2
12
2
2
2
7
11
10

Wrong
0
4
2
4
11
10
15
24

Precision
94.59%
48.39%
88.24%
77.78%
59.38%
41.38%
16.13%
0.00%

Table 3: Results of the EN-DE manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Gollins, T. and Sanderson, M. (2001). Improving cross
language retrieval with triangulated translation. In Pro-
ceedings of the 24th annual international ACM SIGIR
conference on Research and development in information
retrieval, pages 90–95. ACM.

Jones, K. S. (1972). A statistical interpretation of term
speciﬁcity and its application in retrieval. Journal of
documentation, 28(1):11–21.

Levenshtein, V. I. (1966). Binary codes capable of correct-
ing deletions, insertions and reversals. In Soviet physics
doklady, volume 10, page 707.

Munteanu, D. S. and Marcu, D. (2006). Extracting parallel
sub-sentential fragments from non-parallel corpora. In
ACL-44: Proceedings of the 21st International Confer-
ence on Computational Linguistics and the 44th annual
meeting of the Association for Computational Linguis-
tics, pages 81–88, Morristown, NJ, USA. Association for

Computational Linguistics.

Och, F. J. and Ney, H. (2000). A comparison of alignment
models for statistical machine translation. In Proceed-
ings of the 18th conference on Computational linguis-
tics, pages 1086–1090, Morristown, NJ, USA. Associa-
tion for Computational Linguistics.

Och, F. J. O. and Ney, H. (2003). A systematic comparison
of various statistical alignment models. Computational
Linguistics, 29(1):19–51.

Paik, K., Bond, F., and Satoshi, S. (2001). Using multi-
ple pivots to align korean and japanese lexical resources.
In Proc. of the NLPRS-2001 Workshop on Language Re-
sources in Asia, pages 63–70.

Pinnis, M.

(2013). Context Independent Term Mapper
for European Languages. In Proceedings of Recent Ad-
vances in Natural Language Processing (RANLP 2013),
pages 562—-570, Hissar, Bulgaria.

2844

SetName
All
I-1
I-2
I-3
Transliteration
Pivot
LLR
Original

Eq.
71
55
62
56
49
34
34
5

Cont. Wrong
2
5
4
7
4
11
4
3

7
20
14
17
27
35
42
72

Precision
88.75%
68.75%
77.50%
70.00%
61.25%
42.50%
42.50%
6.25%

Eq.
33
25
25
25
21
14
15
0

Cont.
0
2
0
1
0
2
1
0

Wrong
1
7
3
6
11
14
19
32

Precision
97.06%
73.53%
89.29%
78.13%
65.63%
46.67%
42.86%
0%

Table 4: Results of the EN-LV manual evaluation by two annotators. The second half of the table shows ﬁgures where we ignored the
cases for which there was a disagreement. The precision ﬁgure in each row is computed by dividing the ﬁgure in column Eq with the
sum of the ﬁgures of the columns Eq to Wrong of that row.

Seo, H.-S. K. H.-W. and Kim, J.-H. (2013). Bilingual lex-
icon extraction via pivot language and word alignment
tool. ACL 2013, page 11.

Steinberger, R., Eisele, A., Klocek, S., Pilos, S., and
Schlter, P. (2012). Dgt-tm: A freely available transla-
tion memory in 22 languages. In Proceedings of LREC,
pages 454–459.

Wu, H. and Wang, H. (2007). Pivot language approach for
phrase-based statistical machine translation. Machine
Translation, 21(3):165–181.

Wu, H. and Wang, H. (2009). Revisiting pivot language
approach for machine translation. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the ACL
and the 4th International Joint Conference on Natural
Language Processing of the AFNLP: Volume 1-Volume
1, pages 154–162. Association for Computational Lin-
guistics.

2845

