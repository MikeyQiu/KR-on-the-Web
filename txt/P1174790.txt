Controlling Perceptual Factors in Neural Style Transfer

Leon A. Gatys1 Alexander S. Ecker1 Matthias Bethge1 Aaron Hertzmann2 Eli Shechtman2

1University of T¨ubingen

2Adobe Research

7
1
0
2
 
y
a
M
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
5
6
8
7
0
.
1
1
6
1
:
v
i
X
r
a

Figure 1: Overview of our control methods. (a) Content image, with spatial mask inset. (b) Spatial Control. The sky is stylised using the
sky of Style II from Fig. 2(c). The ground is stylised using Style I from Fig. 4(b). (c) Colour Control. The colour of the content image
is preserved using luminance-only style transfer described in Section 5.1. (d) Scale Control. The ﬁne scale is stylised using using Style I
from Fig. 4(b) and the coarse scale is stylised using Style III from Fig. 4(b). Colour is preserved using the colour matching described in
section 5.2.

Abstract

Neural Style Transfer has shown very exciting results en-
abling new forms of image manipulation. Here we extend
the existing method to introduce control over spatial lo-
cation, colour information and across spatial scale12. We
demonstrate how this enhances the method by allowing
high-resolution controlled stylisation and helps to alleviate
common failure cases such as applying ground textures to
sky regions. Furthermore, by decomposing style into these
perceptual factors we enable the combination of style infor-
mation from multiple sources to generate new, perceptually
appealing styles from existing ones. We also describe how
these methods can be used to more efﬁciently produce large
size, high-quality stylisation. Finally we show how the in-
troduced control measures can be applied in recent methods
for Fast Neural Style Transfer.

1. Introduction

Example-based style transfer is a major way to create
new, perceptually appealing images from existing ones. It
takes two images xS and xC as input, and produces a new
image ˆx applying the style of xS to the content of xC. The
concepts of “style” and “content” are both expressed in
terms of image statistics; for example, two images are said

1Code: github.com/leongatys/NeuralImageSynthesis
2Supplement: bethgelab.org/media/uploads/stylecontrol/supplement/

to have the same style if they embody the same correlations
of speciﬁc image features. To provide intuitive control over
this process, one must identify ways to access perceptual
factors in these statistics.

In order to identify these factors, we observe some of the
different ways that one might describe an artwork such as
Vincent van Gogh’s A Wheatﬁeld with Cypresses (Fig. 2(c)).
First, one might separately describe different styles in dif-
ferent regions, such as in the sky as compared to the ground.
Second, one might describe the colour palette, and how
it relates to the underlying scene, separately from factors
like image composition or brush stroke texture. Third, one
might describe ﬁne-scale spatial structures, such as brush
stroke shape and texture, separately from coarse-scale struc-
tures like the arrangements of strokes and the swirly struc-
ture in the sky of the painting. These observation motivates
our hypothesis: image style can be perceptually factorised
into style in different spatial regions, colour and luminance
information, and across spatial scales, making them mean-
ingful control dimensions for image stylisation.

Here we build on this hypothesis to introduce meaning-
ful control to a recent image stylisation method known as
Neural Style Transfer [8] in which the image statistics that
capture content and style are deﬁned on feature responses in
a Convolutional Neural Network (CNN) [22]. Namely, we
introduce methods for controlling image stylisation inde-
pendently in different spatial regions (Fig. 1(b)), for colour
and luminance information (Fig. 1(c)) as well as on different
spatial scales (Fig. 1(d)). We show how they can be applied

1

to improve Neural Style Transfer and to alleviate some of its
common failure cases. Moreover, we demonstrate how the
factorisation of style into these aspects can gracefully com-
bine style information from multiple images and thus en-
able the creation of new, perceptually interesting styles. We
also show a method for efﬁciently rendering high-resolution
stylisations using a coarse-to-ﬁne approach that reduced op-
timisation time by an approximate factor of 2.5. Finally,
we show that in addition to the original optimisation-based
style transfer, these control methods can also be applied to
recent fast approximations of Neural Style Transfer [13, 23]

2. Related Work

There is a large body of work on image stylisation
techniques. The ﬁrst example-based technique was Image
Analogies [12], which built on patch-based texture synthe-
sis techniques [4, 26]. This method introduced stylisation
based on an example painting, as well as ways to preserve
colour, and to control stylisation of different regions sep-
arately. The method used a coarse-to-ﬁne texture synthe-
sis procedure for speed [26]. Since then, improvements
to the optimisation method and new applications [20, 6]
have been proposed. Patch-based methods have also been
used with CNN features [16, 2], leading to improved tex-
ture representations and stylisation results. Scale control
has been developed for patch-based texture synthesis [9]
and many other techniques have been developed for trans-
ferring colour style [5]. There are also many procedural
stylisation techniques that provide extensive user control in
the non-photorealistic rendering literature, e.g., [1, 15, 18].
These procedural methods provide separate controls for ad-
justing spatial variation in styles, colour transformation, and
brush stroke style, but cannot work from training data.

More recently, Neural Style Transfer [8] has demon-
strated impressive results in example-based image stylisa-
tion. The method is based on a parametric texture model
[14, 10, 19] deﬁned by summary statistics on CNN re-
sponses [7] and appears to have several advantages over
patch-based synthesis. Most prominently, during the styli-
sation it displays a greater ﬂexibility to create new image
structures that are not already present in the source images
[16].

However, the representation of image style within the
parametric neural texture model [7] allows far less intuitive
control over the stylisation outcome than patch-based meth-
ods. The texture parameters can be used to inﬂuence the
stylisation but their interplay is extremely complex due to
the complexity of the deep representations they are deﬁned
on. Therefore it is difﬁcult to predict their perceptual effect
on the stylisation result. Our main goal in this work is to
introduce intuitive ways to control Neural Style Transfer to
combine the advantages of that method with the more ﬁne-
grained user control of earlier stylisation methods. Note

that concurrent work [27] independently developed a simi-
lar approach for spatial control as presented here.

3. Neural Style Transfer

The Neural Style Transfer method [8] works as follows.
We deﬁne a content image xC and a style image xS with
corresponding feature representations F(cid:96)(xC) and F(cid:96)(xS) in
layer (cid:96) of a CNN. Each column of F(cid:96)(x) is a vectorised fea-
ture map and thus F(cid:96) ∈ RM(cid:96)(x)×N(cid:96) where N(cid:96) is the number
of feature maps in layer (cid:96) and M(cid:96)(x) = H(cid:96)(x) × W(cid:96)(x) is
the product of height and width of each feature map. Note
that while N(cid:96) is independent of the input image, M(cid:96)(x) de-
pends on the size of the input image.

Neural Style Transfer generates a new image ˆx that de-
picts the content of image xC in the style of image xS by
minimising following loss function with respect to ˆx

Ltotal = αLcontent + βLstyle

(1)

where the content term compares feature maps at a single
layer (cid:96)C:

Lcontent =

1
N(cid:96)cM(cid:96)c(xC)

(cid:88)

ij

(F(cid:96)c (ˆx) − F(cid:96)c(xC))2

ij

(2)

and the style term compares a set of summary statistics:

Lstyle =

w(cid:96)E(cid:96)

(cid:88)

(cid:96)
1
4N 2
(cid:96)

(cid:88)

ij

E(cid:96) =

(G(cid:96)(ˆx) − G(cid:96)(xS))2
ij

(3)

(4)

1

M(cid:96)(x) F(cid:96)(x)T F(cid:96)(x) is the Gram Ma-
where G(cid:96)(x) =
trix of the feature maps in layer (cid:96) in response to im-
age x.
As in the original work [8], we use the
VGG-19 Network and include “conv4 2” as the layer
(cid:96)C for the image content and Gram Matrices from lay-
ers “conv1 1”,“conv2 1”,“conv3 1”,“conv4 1”,“conv5 1”
as the image statistics that model style.

4. Spatial Control

We ﬁrst introduce ways to spatially control Neural Style
Transfer. Our goal is to control which region of the style
image is used to stylise each region in the content image.
For example, we would like to apply one style to the sky re-
gion and another to the ground region of an image to either
avoid artefacts (Fig. 2(d),(e)) or to generate new combina-
tions of styles from multiple sources (Fig. 2(f)). We take
as input R spatial guidance channels Tr for both the con-
tent and style image (small insets in (Fig. 2(a)-(c)). Each of
these is an image map of values in [0, 1] specifying which
styles should be applied where: regions where the rth con-
tent guidance channel is equal to 1 should get the style from

regions where the rth style guidance channel is 1. When
there are multiple style images, the regions index over all
the example images. The guidance channels are propagated
to the CNN to produce guidance channels Tr
(cid:96) for each layer.
This can be done by simple re-sampling or more involved
methods as we explain later in this section. We ﬁrst discuss
algorithms for synthesis given the guidance maps.

4.1. Guided Gram Matrices

In the ﬁrst method we propose, we multiply the feature
maps of each layer included in the style features with R
guidance channels Tr
(cid:96) and compute one spatially guided
Gram Matrix for each of the R regions in the style image.
Formally we deﬁne a spatially guided feature map as

Fr
(cid:96) (x)[:,i] = Tr

(cid:96) ◦ F(cid:96)(x)[:,i]

(5)

(cid:96) (x)[:,i] is the ith column vector of Fr

Here Fr
(cid:96) (x), r ∈ R and ◦
denotes element-wise multiplication. The guidance channel
Tr
(cid:96) is vectorised and can be either a binary mask for hard
guidance or real-valued for soft guidance. We normalise Tr
(cid:96)
such that (cid:80)

i = 1. The guided Gram Matrix is then

(cid:96) )2

i(Tr

Gr

(cid:96) (x) = Fr

(cid:96) (x)T Fr

(cid:96) (x)

(6)

Each guided Gram Matrix is used as the optimisation tar-
get for the corresponding region of the content image. The
contribution of layer (cid:96) to the style loss is then:

E(cid:96) =

1
4N 2
(cid:96)

R
(cid:88)

(cid:88)

r=1

ij

λr (Gr

(cid:96) (ˆx) − Gr

(cid:96) (xS))2

ij

(7)

where λr is a weighting factor that controls the stylisation
strength in the corresponding region r.

An important use for guidance channels is to ensure that
style is transferred between regions of similar scene con-
tent in the content and style image. For example, Figure 2
shows an example in which the sky in the content image has
bright clouds, whereas the sky in the style image has grey-
ish clouds; as a result, the original style transfer stylises the
sky with a bright part of the ground that does not match the
appearance of the sky. We address this by dividing both
images into a sky and a ground region (Fig. 2(a),(b) small
insets) and require that the sky and ground regions from the
painting are used to stylise the respective regions in the pho-
tograph (Fig. 2(e)).

Given the input guidance channel Tr, we need to ﬁrst
propagate this channel to produce guidance channels Tr
(cid:96) for
each layer. The most obvious approach would be to down-
sample Tr to the dimensions of each layer’s feature map.
However, we often ﬁnd that doing so fails to keep the de-
sired separation of styles by region, e.g., ground texture still
appears in the sky. This is because neurons near the bound-
aries of a guidance region can have large receptive ﬁelds

Figure 2: Spatial guidance in Neural Style Transfer. (a) Content
image. (b) Style image I. (c) Style image II. Spatial mask separat-
ing the image in sky and ground is shown in the top right corner.
(d) Output from Neural Style Transfer without spatial control [8].
The clouds are stylised with image structures from the ground. (e)
Output with spatial guidance. (f) Output from spatially combining
the the ground-style from (b) and the sky-style from (c).

that overlap into the other region. Instead we use an eroded
version of the spatial guiding channels. We enforce spa-
tial guidance only on the neurons whose receptive ﬁeld is
entirely inside the guidance region and add another global
guidance channel that is constant over the entire image. We
found that this soft spatial guidance usually yields better re-
sults. For further details on the creation of guidance chan-
nels, see the Supplementary Material, section 1.1.

Another application of this method is to generate a new
style by combining the styles from multiple example im-
ages. Figure 2(f) shows an example in which the region
guidance is used to use the sky style from one image and
the ground style from another. This example demonstrates
the potential of spatial guidance to combine many example
styles together to produce new stylisations.

4.2. Guided Sums

(cid:96) , T2

Alternatively, instead of computing a Gram Matrix for
each guidance channel, we can also just stack the guid-
ance channels with the feature maps as it
is done in
[2] to spatially guide neural patches [16]. The feature
representation of image x in layer (cid:96) is then F(cid:48)
(cid:96)(x) =
(cid:3) and F(cid:48)
(cid:2)F(cid:96)(x), T1
(cid:96) , ..., TR
(cid:96)(x) ∈ R(N(cid:96)+R)×M(cid:96)(x). Now
(cid:96)
the Gram Matrix G(cid:48)
M(cid:96)(x) F(cid:48)
(cid:96)(x) = 1
(cid:96)(x) includes cor-
relations of the image features with the non-zero entries of
the guidance channels and therefore encourages that the fea-
tures in region r of the style image are used to stylise region
r in the content image. The contribution of layer (cid:96) to the
style loss is simply

(cid:96)(x)T F(cid:48)

E(cid:96) =

1
4N 2
(cid:96)

(cid:88)

ij

(cid:0)G(cid:48)

(cid:96)(ˆx) − G(cid:48)

(cid:96)(xS)(cid:1)2

ij

(8)

This is clearly more efﬁcient than the method presented in
Section 4.1. Instead of computing and matching R Gram
Matrices one only has to compute one Gram Matrix with R
additional channels. Nevertheless, this gain in efﬁciency
comes at the expense of texture quality. The additional
channels in the new Gram Matrix are the sums over each
feature map spatially weighted by the guidance channel.

G(cid:48)

(cid:96)(xS)i,N(cid:96)+r =

(cid:88)

(cid:0)Tr

(cid:96) ◦ F(cid:96)(xS)[:,i]

(cid:1)

j

(9)

j

Hence this method actually interpolates between matching
the original global Gram Matrix stylisation and the spatially
weighted sums over the feature maps. While the feature
map sums also give a non-trivial texture model, their ca-
pacity to model complex textures is limited [7]. In practice
we ﬁnd that this method can often give decent results but
also does not quite capture the texture of the style image –
as would be expected from the inferior texture model. Re-
sults and comparisons can be found in the Supplementary
Material, section 1.2.

5. Colour Control

The colour information of an image is an important per-
ceptual aspect of its style. At the same time it is largely
independent of other style aspects such as the type of brush
strokes used or dominating geometric shapes. Therefore it
is desirable to independently control the colour information
in Neural Style Transfer. A prominent use case for such
control is colour preservation during style transfer. When
stylising an image using Neural Style Transfer, the output
also copies the colour distribution of the style image, which
might be undesirable in many cases (Fig. 3(c)). For exam-
ple, the stylised farmhouse has the colours of the original
van Gogh painting (Fig. 3(c)), whereas one might prefer
the output painting to preserve the colours of the farmhouse
photograph. In particular, one might imagine that the artist
would have used the colours of the scene if they were to
paint the farmhouse. Here we present two simple methods
to preserve the colours of the source image during Neural
Style Transfer — in other words, to transfer the style with-
out transferring the colours. We compare two different ap-
proaches to colour preservation: colour histogram matching
and luminance-only transfer (Fig. 3(d,e)).

5.1. Luminance-only transfer

In the ﬁrst method we perform style transfer only in the
luminance channel, as done in Image Analogies [12]. This
is motivated by the observation that visual perception is far
more sensitive to changes in luminance than in colour [25].
The modiﬁcation is simple. The luminance channels LS
and LC are ﬁrst extracted from the style and content im-
ages. Then the Neural Style Transfer algorithm is applied
to these images to produce an output luminance image ˆL.
Using a colour space that separates luminance and colour
information, the colour information of the content image is
combined with ˆL to produce the ﬁnal colour output image
(Fig. 3(d)).

If there is a substantial mismatch between the luminance
histogram of the style and the content image, it can be help-
ful to match the histogram of the style luminance channel
LS to that of the content image LC before transferring the
style. For that we simply match mean and variance of the
content luminance. Let µS and µC be the mean luminances
of the two images, and σS and σC be their standard de-
viations. Then each luminance pixel in the style image is
updated as:

Ls(cid:48) =

(LS − µS) + µC

(10)

σC
σS

5.2. Colour histogram matching

The second method we present works as follows. Given
the style image xS, and the content image xC, the style im-
age’s colours are transformed to match the colours of the

as:

p(cid:48)
S = ApS + b

(11)

where A is a 3 × 3 matrix and b is a 3-vector. This trans-
formation is chosen so that the mean and covariance of
the RGB values in the new style image p(cid:48)
S match those of
p(cid:48)
C [11] (Appendix B). In general, we ﬁnd that the colour
matching method works reasonably well with Neural Style
Transfer (Fig. 3(e)), whereas gave poor synthesis results for
Image Analogies [11]. Furthermore, the colour histogram
matching method can also be used to better preserve the
colours of the style image. This can substantially improve
results for cases in which there is a strong mismatch in
colour but one rather wants to keep the colour distribution
of the style image (for example with pencil drawings or line
art styles). Examples of this application can be found in the
Supplementary Material, section 2.2.

5.3. Comparison

In conclusion,

both methods give perceptually-
interesting results but have different advantages and
disadvantages. The colour-matching method is naturally
limited by how well the colour transfer from the content
image onto the style image works. The colour distribution
often cannot be matched perfectly, leading to a mismatch
between the colours of the output image and that of the
content image.
In contrast,

the luminance-only transfer method pre-
serves the colours of the content image perfectly. However,
dependencies between the luminance and the colour chan-
nels are lost in the output image. While we found that this is
usually very difﬁcult to spot, it can be a problem for styles
with prominent brushstrokes since a single brushstroke can
change colour in an unnatural way. In comparison, when
using full style transfer and colour matching, the output im-
age really consists of strokes which are blotches of paint,
not just variations of light and dark. For a more detailed
discussion of colour preservation in Neural Style Transfer
we refer the reader to the Supplementary Material, section
2.1.

6. Scale Control

In this section, we describe methods for mixing differ-
ent styles at different scales and efﬁciently generating high-
resolution output with style at desired scales.

6.1. Scale control for style mixing

First we introduce a method to control the stylisation
independently on different spatial scales. Our goal is to
pick separate styles for different scales. For example, we
want to combine the ﬁne-scale brushstrokes of one painting
(Fig. 4(b), Style I) with the coarse-scale angular geometric
shapes of another image (Fig. 4(b), Style II).

Figure 3: Colour preservation in Neural Style Transfer. (a) Con-
tent image. (b) Style image. (c) Output from Neural Style Trans-
fer [8]. The colour scheme is copied from the painting. (d) Output
using style transfer in luminance domain to preserve colours. (e)
Output using colour transfer to preserve colours.

content image. This produces a new style image x(cid:48)
S that re-
places xS as input to the Neural Style Transfer algorithm.
The algorithm is otherwise unchanged.

The one choice to be made is the colour transfer proce-
dure. There are many colour transformation algorithms to
choose from; see [5] for a survey. Here we use linear meth-
ods, which are simple and effective for colour style transfer.
Given the style image, each RGB pixel pS is transformed

We deﬁne the style of an image at a certain scale as the
distribution of image structures in image neighbourhoods of
a certain size f . In that sense, the colour separation intro-
duced in the previous section can be thought of a special
case of scale separation, since image colours are “struc-
tures” on one-pixel neighbourhoods. To model image style
on larger scales, we use the Gram Matrices from different
layers in the CNN. In particular, a Gram Matrix at layer (cid:96)
represents the second-order statistics of image neighbour-
hoods of size corresponding to the receptive ﬁeld size f(cid:96).

Unfortunately, this representation is not factorised over
In general, a Gram Matrix G(cid:96)(x) at a given spa-
scale.
tial scale also captures much of the image information on
smaller spatial scales and thus shares a lot of information
with the Gram Matrix G(cid:96)−k(x) at a lower layer in the CNN
(see Supplementary Material, section 3.1 for more details).
Therefore, simply combining Gram Matrices from different
scales of different images does not give independent control
over the different scales.

Here we show a way to combine scales that avoids this
problem. We ﬁrst create a new style image that combines
ﬁne-scale information from one image with coarse scale in-
formation from another (Fig. 4(c)). We then use the new
style image in the original Neural Style Transfer. We do
this by applying Neural Style Transfer from the ﬁne-scale
style image to the coarse-scale style image, using only the
Gram Matrices from lower layers in the CNN (e.g., only
layer “conv1 1” and “conv2 1” in Fig. 4). We initialise
the optimisation procedure with the coarse-style image and
omit the content loss entirely, so that the ﬁne-scale texture
from the coarse-style image will be fully replaced. This is
based on the observation that the optimisation leaves im-
ages structures intact when they are of larger scale than the
style features. While this is not guaranteed, as it depends
on the optimiser, we empirically ﬁnd it to be effective for
the L-BFGS method typically used in Neural Style Trans-
fer. The resulting images (Fig. 4(c)) are used as the input to
the original Neural Style Transfer to generate a new styli-
sations of the cityscape photograph. For example, we com-
bine the ﬁne scale of Style I with the coarse scale of Style
II to re-paint the angular cubistic shapes in Fig. 4(d) with
pronounced brushstrokes (Fig. 4(e)). Or we combine the
ﬁne scale of Style II with the coarse scale of Style III to
replace the angular shapes by round structures, giving the
image a completely different “feel” (compare Fig. 4(d) with
Fig. 4(f)).

This method enables the creation of a large set of percep-
tually appealing, new styles by recombining existing ones
in a principled way. It also allows for interesting new ways
to interpolate between styles by interpolating across spatial
scales. For more examples of new styles and results of in-
terpolating between styles, we refer the reader to the Sup-
plementary Material, sections 3.2 and 3.3.

Figure 4: Scale control in Neural Style Transfer. (a) Content im-
(b) Collection of styles used. Style I has dominant brush
age.
strokes on the ﬁne scale. Style II has dominant angular shapes
on the coarse scale. Style III has dominant round shapes on the
coarse scale. (c) New styles obtained from combining coarse and
ﬁne scales of existing styles. Style IV combines ﬁne scale of Style
I with coarse scale of Style II. Style V combines ﬁne scale of Style
II with coarse scale of Style III. (d) Output using original Style II.
(e) Output using the new Style IV. (f) Output using the new Style
V. All stylisations preserve the colour of the photograph using the
colour matching method described in section 5.2

optimisation. We also noticed that this technique effectively
removes low-level noise that is typical for neural image syn-
thesis. In fact, all ﬁgures shown in this paper, except for
Fig. 6, were enhanced to high-resolution in that way. The
low/high-resolution pairs can be found in the Supplement.
Applying this technique iteratively also enables the genera-
tion of very high-resolution images that is only limited by
the size of the input images and available memory.

7. Controlling Fast Neural Style Transfer

A major drawback of Neural Style Transfer is that im-
age generation is relatively slow. Recently, a number of
works have shown that one can train a feed-forward CNN
to perform stylisation [13, 23, 17]. We now show how to ap-
ply the spatial and colour control described above to these
Fast Neural Style Transfer methods. Applying scale con-
trol to Fast Neural Style Transfer is trivial, as it entails sim-
ply training on the new style image that combines multi-
ple scales. We use Johnson’s excellent publicly-available
implementation of Fast Neural Style Transfer [13]3. The
networks we train all use the well-tuned default parame-
ters in that implementation including Instance Normaliza-
tion [24] (for details see Supplementary Material, section
4). For comparability and to stay in the domain of styles
that give good results with Fast Neural Style Transfer, we
use the styles published with that implementation.

7.1. Colour control

The simplest way to preserve the colour of the input im-
age is to just use an existing feed-forward stylisation net-
work [13], and then combine the luminance channel of the
stylisation with the colour channels of the content image
(Fig. 6(c)). An alternative is to train the feed-forward net-
work exclusively with the luminance channel of the style
and content images. This network then produces a lumi-
nance image that can be combined with the colour channels
from the input content image (Fig. 6(d)). For both methods
we match the mean luminance of the output image to that of
the content image. In general, we ﬁnd that colour preserva-
tion with the luminance network better combines stylisation
with structures in the content image (Fig. 6(c),(d)).

7.2. Spatial control

We now describe training a feed-forward network to ap-
ply different styles to different regions. We show that this
can be done with a surprisingly small modiﬁcation to John-
son’s training procedure [13], which we illustrate with the
following example. We create the style image by verti-
cally concatenating the Candy and Feathers images shown
in Fig. 6(b). Two additional binary guidance channels are
added to the style image, i.e., one for the top of the image

3github.com/jcjohnson/fast-neural-style

Figure 5: Neural Style Transfer in high resolution. (a) Content
and style images. (b) Output in low-resolution with total number
of pixels equal to 4502 (c) Output in high-resolution generated in
a coarse-to-ﬁne fashion from (b). (d) Output in high-resolution
without coarse-to-ﬁne procedure. For both high-resolution images
the total number of pixels is 30002 and they can be found in the
Supplemental Material.

6.2. Scale control for efﬁcient high resolution

The existing Neural Style Transfer method does not work
well for high-resolution outputs. Since the receptive ﬁelds
in a CNN have a ﬁxed size, the stylisation outcome depends
on the resolution of the input images: stylisation happens
only up to the scale of the receptive ﬁelds in the output. In
practice, we ﬁnd that for the VGG-19 network, there is a
sweet spot around 5002 pixels for the size of the input im-
ages, such that the stylisation is appealing but the content
is well-preserved (Fig. 5(b)). For a high-resolution image,
however, the receptive ﬁelds are typically very small com-
pared to the image, and so only very small-scale structures
are stylised (Fig. 5 (d)).

Here we show that the same scale separation principle
from the previous section can be used in order to produce
high-resolution outputs with large-scale stylisation. We are
given high-resolution content and style images xC and xS,
both having the same size with N 2 pixels in total. We down-
sample each image by a factor k such that N/k corresponds
to the desired stylisation resolution, e.g., 5002 for VGG, and
then perform stylisation. The output is now low-resolution
of size N/k. We can then produce high-resolution output
from this image by up-sampling the low-resolution output
to N 2 pixels, and use this as initialisation for Neural Style
Transfer with the original input images xC and xS. The
style features now capture and can ﬁll-in the high-resolution
information from the style image while leaving the coarse-
scale stylisation intact (Fig. 5(c)).

This coarse-to-ﬁne procedure has the additional advan-
tage of requiring fewer iterations in the high-resolution opti-
misation and thus increasing efﬁciency. In our experiments
we used 2.5 times fewer iterations for the high-resolution

and one for the bottom. The style loss function is based
on the guided Gram Matrices (Eq. 7). During training, the
feed-forward network takes as input the content image and
two guidance channels. The input guidance channels are
passed to the loss network to evaluate the spatially-guided
losses. Surprisingly, we ﬁnd that the guidance channels
can be kept constant during training: during training we re-
quired the feed-forward network to always stylise the lower
half of the image with one style and the upper half with an-
other. However, the network robustly learns the correspon-
dence between guidance channels and styles, so that at test
time we can pass arbitrary masks to the feed-forward net-
work to spatially guide the stylisation (Fig. 6(f)-(h)). By
providing an automatically-generated ﬁgure-ground seg-
mentation [21] we can create an algorithm that performs fast
spatially-varying stylisation automatically. (Fig. 6(g),(h))

8. Discussion

In this work, we introduce intuitive ways to control Neu-
ral Style Transfer. We hypothesise that image style includes
factors of space, colour, and scale, and present ways to ac-
cess these factors during stylisation to substantially improve
the quality and ﬂexibility of the existing method.

One application of the control methods we present is to
combine styles in an interpretable fashion. This contrasts
with the alternative approach of combining styles by lin-
early interpolating in the style representation as, for exam-
ple, is done in the concurrent work of Dumoulin et al. [3].
A possible concern with that approach is that if the direc-
tions in the style representation do not correspond to per-
ceptual variables, it becomes difﬁcult to generate appealing
new styles. Still, even with our methods the selection of
which inputs to combine for aesthetically pleasing results
can be challenging. An exciting open research question is
to predict what combinations of styles will combine nicely
into new, perceptually pleasing styles.

Neural Style Transfer is particularly appealing because
it can create new image structures based on the source im-
ages. This ﬂexibility arises from the representation of style
in terms of spatial summary statistics, in contrast to patch-
based methods [12, 20, 6]. However, because it is not clear
how the perceptual aspects of style are represented in the
summary statistics, it is hard to achieve meaningful para-
metric control over the stylisation. For that it may be nec-
essary to encourage appropriate factorisations of the CNN
representations during network training, for example, to
learn representations that factorise the image information
over spatial scales. In fact, this touches a fundamental re-
search question in machine vision: to obtain interpretable
yet powerful image representations that decompose images
into the independent factors of human visual perception.

(a) Content image.

(b) Styles Candy and Feathers.

Figure 6: Colour and spatial control in Fast Neural Style Trans-
(c)
fer.
Outputs from [13], trained with styles shown in (b). (d) Simple
colour preservation. Luminance channel from (c) is combined
with colour channels from (a). (e) Colour preservation with lu-
minance network. Output from luminance network is combined
with colour channels from (a). (f) Vertical separation of styles.
(g) Horizontal separation of styles. (h) Separation of styles into
person and background using [21].

[19] J. Portilla and E. P. Simoncelli. A Parametric Texture Model
Based on Joint Statistics of Complex Wavelet Coefﬁcients.
International Journal of Computer Vision, 40(1):49–70, Oct.
2000.

[20] G. Ramanarayanan and K. Bala. Constrained texture synthe-

sis via energy minimization. IEEE TVCG, 2007.

[21] X. Shen, A. Hertzmann, J. Jia, S. Paris, B. Price, E. Shecht-
man, and I. Sachs. Automatic portrait segmentation for im-
age stylization. Computer Graphics Forum, 35(2):93–102,
2016.

[22] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In Proc. ICLR,
2015.

[23] D. Ulyanov, V. Lebedev, A. Vedaldi, and V. Lempitsky. Tex-
ture Networks: Feed-forward Synthesis of Textures and Styl-
ized Images. arXiv:1603.03417 [cs], Mar. 2016.
arXiv:
1603.03417.

[24] D. Ulyanov, A. Vedaldi, and V. Lempitsky.

Instance Nor-
malization: The Missing Ingredient for Fast Stylization.
arXiv:1607.08022 [cs], July 2016. arXiv: 1607.08022.
[25] B. Wandell. Foundations of Vision. Sinauer Associates Inc.,

1995.

[26] L.-Y. Wei and M. Levoy. Fast texture synthesis using tree-

structured vector quantization. In Proc. SIGGRAPH, 2000.

[27] P. Wilmot, E. Risser, and C. Barnes. Stable and Control-
lable Neural Texture Synthesis and Style Transfer Using His-
togram Losses. arXiv preprint arXiv:1701.08893, 2017.

References

[1] L. Benedetti, Winnem¨oller, M. H., Corsini, and R. Scopigno.
Painting with bob: Assisted creativity for novices.
In
Proc. UIST, 2014.

[2] A. J. Champandard. Semantic Style Transfer and Turning
arXiv:1603.01768

Two-Bit Doodles into Fine Artworks.
[cs], Mar. 2016. arXiv: 1603.01768.

[3] V. Dumoulin, J. Shlens, and M. Kudlur. A learned represen-

tation for artistic style. In Proc. ICLR, 2017.

[4] A. A. Efros and T. K. Leung. Texture synthesis by non-

parametric sampling. In Proc. ICCV, 1999.

[5] H. S. Faridul, T. Pouli, C. Chamaret, J. Stauder, E. Reinhard,
D. Kuzovkin, and A. Tremeau. Colour mapping: A review
of recent methods, extensions and applications. Computer
Graphics Forum, 35(1):59–88, 2016.

[6] J. Fiˇser, O. Jamriˇska, M. Luk´aˇc, E. Shechtman, P. Asente,
J. Lu, and D. S´ykora. Stylit: Illumination-guided example-
based stylization of 3d renderings. ACM Trans. Graph.,
35(4), July 2016.

[7] L. A. Gatys, A. S. Ecker, and M. Bethge. Texture Synthe-
sis Using Convolutional Neural Networks. In Advances in
Neural Information Processing Systems 28, 2015.

[8] L. A. Gatys, A. S. Ecker, and M. Bethge. Image Style Trans-
fer Using Convolutional Neural Networks. In Proc. CVPR,
2016.

[9] C. Han, E. Risser, R. Ramamoorthi, and E. Grinspun. Multi-

scale texture synthesis. ACM TOG, 27(3):51:1–51:8, 2008.

[10] D. J. Heeger and J. R. Bergen. Pyramid-based Texture Anal-
In Proceedings of the 22Nd Annual Con-
ysis/Synthesis.
ference on Computer Graphics and Interactive Techniques,
SIGGRAPH ’95, pages 229–238, New York, NY, USA,
1995. ACM.

[11] A. Hertzmann. Algorithms for Rendering in Artistic Styles.

PhD thesis, New York University, 2001.

[12] A. Hertzmann, C. E. Jacobs, N. Oliver, B. Curless, and D. H.
Salesin. Image Analogies. In Proc. SIGGRAPH, 2001.
[13] J. Johnson, A. Alahi, and L. Fei-Fei. Perceptual Losses for
Real-Time Style Transfer and Super-Resolution. In B. Leibe,
J. Matas, N. Sebe, and M. Welling, editors, Computer Vision
– ECCV 2016, number 9906 in Lecture Notes in Computer
Science, pages 694–711. Springer International Publishing,
Oct. 2016. DOI: 10.1007/978-3-319-46475-6 43.

[14] B. Julesz. Visual Pattern Discrimination. IRE Transactions

on Information Theory, 8(2), Feb. 1962.

[15] R. D. Kalnins, L. Markosian, B. J. Meier, M. A. Kowal-
ski, J. C. Lee, P. L. Davidson, M. Webb, J. F. Hughes, and
A. Finkelstein. Wysiwyg npr: Drawing strokes directly on
3d models. ACM Trans. Graph., 21(3), July 2002.

[16] C. Li and M. Wand. Combining markov random ﬁelds
and convolutional neural networks for image synthesis. In
Proc. CVPR, 2016.

[17] C. Li and M. Wand. Precomputed real-time texture syn-
thesis with markovian generative adversarial networks.
In
Proc. ECCV, 2016.

[18] P. O’Donovan and A. Hertzmann. Anipaint:

Interactive

painterly animation from video. IEEE TVCG, 18(3), 2012.

Controlling Perceptual Factors in Neural Style Transfer

Leon A. Gatys1 Alexander S. Ecker1 Matthias Bethge1 Aaron Hertzmann2 Eli Shechtman2

1University of T¨ubingen

2Adobe Research

7
1
0
2
 
y
a
M
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
5
6
8
7
0
.
1
1
6
1
:
v
i
X
r
a

Figure 1: Overview of our control methods. (a) Content image, with spatial mask inset. (b) Spatial Control. The sky is stylised using the
sky of Style II from Fig. 2(c). The ground is stylised using Style I from Fig. 4(b). (c) Colour Control. The colour of the content image
is preserved using luminance-only style transfer described in Section 5.1. (d) Scale Control. The ﬁne scale is stylised using using Style I
from Fig. 4(b) and the coarse scale is stylised using Style III from Fig. 4(b). Colour is preserved using the colour matching described in
section 5.2.

Abstract

Neural Style Transfer has shown very exciting results en-
abling new forms of image manipulation. Here we extend
the existing method to introduce control over spatial lo-
cation, colour information and across spatial scale12. We
demonstrate how this enhances the method by allowing
high-resolution controlled stylisation and helps to alleviate
common failure cases such as applying ground textures to
sky regions. Furthermore, by decomposing style into these
perceptual factors we enable the combination of style infor-
mation from multiple sources to generate new, perceptually
appealing styles from existing ones. We also describe how
these methods can be used to more efﬁciently produce large
size, high-quality stylisation. Finally we show how the in-
troduced control measures can be applied in recent methods
for Fast Neural Style Transfer.

1. Introduction

Example-based style transfer is a major way to create
new, perceptually appealing images from existing ones. It
takes two images xS and xC as input, and produces a new
image ˆx applying the style of xS to the content of xC. The
concepts of “style” and “content” are both expressed in
terms of image statistics; for example, two images are said

1Code: github.com/leongatys/NeuralImageSynthesis
2Supplement: bethgelab.org/media/uploads/stylecontrol/supplement/

to have the same style if they embody the same correlations
of speciﬁc image features. To provide intuitive control over
this process, one must identify ways to access perceptual
factors in these statistics.

In order to identify these factors, we observe some of the
different ways that one might describe an artwork such as
Vincent van Gogh’s A Wheatﬁeld with Cypresses (Fig. 2(c)).
First, one might separately describe different styles in dif-
ferent regions, such as in the sky as compared to the ground.
Second, one might describe the colour palette, and how
it relates to the underlying scene, separately from factors
like image composition or brush stroke texture. Third, one
might describe ﬁne-scale spatial structures, such as brush
stroke shape and texture, separately from coarse-scale struc-
tures like the arrangements of strokes and the swirly struc-
ture in the sky of the painting. These observation motivates
our hypothesis: image style can be perceptually factorised
into style in different spatial regions, colour and luminance
information, and across spatial scales, making them mean-
ingful control dimensions for image stylisation.

Here we build on this hypothesis to introduce meaning-
ful control to a recent image stylisation method known as
Neural Style Transfer [8] in which the image statistics that
capture content and style are deﬁned on feature responses in
a Convolutional Neural Network (CNN) [22]. Namely, we
introduce methods for controlling image stylisation inde-
pendently in different spatial regions (Fig. 1(b)), for colour
and luminance information (Fig. 1(c)) as well as on different
spatial scales (Fig. 1(d)). We show how they can be applied

1

to improve Neural Style Transfer and to alleviate some of its
common failure cases. Moreover, we demonstrate how the
factorisation of style into these aspects can gracefully com-
bine style information from multiple images and thus en-
able the creation of new, perceptually interesting styles. We
also show a method for efﬁciently rendering high-resolution
stylisations using a coarse-to-ﬁne approach that reduced op-
timisation time by an approximate factor of 2.5. Finally,
we show that in addition to the original optimisation-based
style transfer, these control methods can also be applied to
recent fast approximations of Neural Style Transfer [13, 23]

2. Related Work

There is a large body of work on image stylisation
techniques. The ﬁrst example-based technique was Image
Analogies [12], which built on patch-based texture synthe-
sis techniques [4, 26]. This method introduced stylisation
based on an example painting, as well as ways to preserve
colour, and to control stylisation of different regions sep-
arately. The method used a coarse-to-ﬁne texture synthe-
sis procedure for speed [26]. Since then, improvements
to the optimisation method and new applications [20, 6]
have been proposed. Patch-based methods have also been
used with CNN features [16, 2], leading to improved tex-
ture representations and stylisation results. Scale control
has been developed for patch-based texture synthesis [9]
and many other techniques have been developed for trans-
ferring colour style [5]. There are also many procedural
stylisation techniques that provide extensive user control in
the non-photorealistic rendering literature, e.g., [1, 15, 18].
These procedural methods provide separate controls for ad-
justing spatial variation in styles, colour transformation, and
brush stroke style, but cannot work from training data.

More recently, Neural Style Transfer [8] has demon-
strated impressive results in example-based image stylisa-
tion. The method is based on a parametric texture model
[14, 10, 19] deﬁned by summary statistics on CNN re-
sponses [7] and appears to have several advantages over
patch-based synthesis. Most prominently, during the styli-
sation it displays a greater ﬂexibility to create new image
structures that are not already present in the source images
[16].

However, the representation of image style within the
parametric neural texture model [7] allows far less intuitive
control over the stylisation outcome than patch-based meth-
ods. The texture parameters can be used to inﬂuence the
stylisation but their interplay is extremely complex due to
the complexity of the deep representations they are deﬁned
on. Therefore it is difﬁcult to predict their perceptual effect
on the stylisation result. Our main goal in this work is to
introduce intuitive ways to control Neural Style Transfer to
combine the advantages of that method with the more ﬁne-
grained user control of earlier stylisation methods. Note

that concurrent work [27] independently developed a simi-
lar approach for spatial control as presented here.

3. Neural Style Transfer

The Neural Style Transfer method [8] works as follows.
We deﬁne a content image xC and a style image xS with
corresponding feature representations F(cid:96)(xC) and F(cid:96)(xS) in
layer (cid:96) of a CNN. Each column of F(cid:96)(x) is a vectorised fea-
ture map and thus F(cid:96) ∈ RM(cid:96)(x)×N(cid:96) where N(cid:96) is the number
of feature maps in layer (cid:96) and M(cid:96)(x) = H(cid:96)(x) × W(cid:96)(x) is
the product of height and width of each feature map. Note
that while N(cid:96) is independent of the input image, M(cid:96)(x) de-
pends on the size of the input image.

Neural Style Transfer generates a new image ˆx that de-
picts the content of image xC in the style of image xS by
minimising following loss function with respect to ˆx

Ltotal = αLcontent + βLstyle

(1)

where the content term compares feature maps at a single
layer (cid:96)C:

Lcontent =

1
N(cid:96)cM(cid:96)c(xC)

(cid:88)

ij

(F(cid:96)c (ˆx) − F(cid:96)c(xC))2

ij

(2)

and the style term compares a set of summary statistics:

Lstyle =

w(cid:96)E(cid:96)

(cid:88)

(cid:96)
1
4N 2
(cid:96)

(cid:88)

ij

E(cid:96) =

(G(cid:96)(ˆx) − G(cid:96)(xS))2
ij

(3)

(4)

1

M(cid:96)(x) F(cid:96)(x)T F(cid:96)(x) is the Gram Ma-
where G(cid:96)(x) =
trix of the feature maps in layer (cid:96) in response to im-
age x.
As in the original work [8], we use the
VGG-19 Network and include “conv4 2” as the layer
(cid:96)C for the image content and Gram Matrices from lay-
ers “conv1 1”,“conv2 1”,“conv3 1”,“conv4 1”,“conv5 1”
as the image statistics that model style.

4. Spatial Control

We ﬁrst introduce ways to spatially control Neural Style
Transfer. Our goal is to control which region of the style
image is used to stylise each region in the content image.
For example, we would like to apply one style to the sky re-
gion and another to the ground region of an image to either
avoid artefacts (Fig. 2(d),(e)) or to generate new combina-
tions of styles from multiple sources (Fig. 2(f)). We take
as input R spatial guidance channels Tr for both the con-
tent and style image (small insets in (Fig. 2(a)-(c)). Each of
these is an image map of values in [0, 1] specifying which
styles should be applied where: regions where the rth con-
tent guidance channel is equal to 1 should get the style from

regions where the rth style guidance channel is 1. When
there are multiple style images, the regions index over all
the example images. The guidance channels are propagated
to the CNN to produce guidance channels Tr
(cid:96) for each layer.
This can be done by simple re-sampling or more involved
methods as we explain later in this section. We ﬁrst discuss
algorithms for synthesis given the guidance maps.

4.1. Guided Gram Matrices

In the ﬁrst method we propose, we multiply the feature
maps of each layer included in the style features with R
guidance channels Tr
(cid:96) and compute one spatially guided
Gram Matrix for each of the R regions in the style image.
Formally we deﬁne a spatially guided feature map as

Fr
(cid:96) (x)[:,i] = Tr

(cid:96) ◦ F(cid:96)(x)[:,i]

(5)

(cid:96) (x)[:,i] is the ith column vector of Fr

Here Fr
(cid:96) (x), r ∈ R and ◦
denotes element-wise multiplication. The guidance channel
Tr
(cid:96) is vectorised and can be either a binary mask for hard
guidance or real-valued for soft guidance. We normalise Tr
(cid:96)
such that (cid:80)

i = 1. The guided Gram Matrix is then

(cid:96) )2

i(Tr

Gr

(cid:96) (x) = Fr

(cid:96) (x)T Fr

(cid:96) (x)

(6)

Each guided Gram Matrix is used as the optimisation tar-
get for the corresponding region of the content image. The
contribution of layer (cid:96) to the style loss is then:

E(cid:96) =

1
4N 2
(cid:96)

R
(cid:88)

(cid:88)

r=1

ij

λr (Gr

(cid:96) (ˆx) − Gr

(cid:96) (xS))2

ij

(7)

where λr is a weighting factor that controls the stylisation
strength in the corresponding region r.

An important use for guidance channels is to ensure that
style is transferred between regions of similar scene con-
tent in the content and style image. For example, Figure 2
shows an example in which the sky in the content image has
bright clouds, whereas the sky in the style image has grey-
ish clouds; as a result, the original style transfer stylises the
sky with a bright part of the ground that does not match the
appearance of the sky. We address this by dividing both
images into a sky and a ground region (Fig. 2(a),(b) small
insets) and require that the sky and ground regions from the
painting are used to stylise the respective regions in the pho-
tograph (Fig. 2(e)).

Given the input guidance channel Tr, we need to ﬁrst
propagate this channel to produce guidance channels Tr
(cid:96) for
each layer. The most obvious approach would be to down-
sample Tr to the dimensions of each layer’s feature map.
However, we often ﬁnd that doing so fails to keep the de-
sired separation of styles by region, e.g., ground texture still
appears in the sky. This is because neurons near the bound-
aries of a guidance region can have large receptive ﬁelds

Figure 2: Spatial guidance in Neural Style Transfer. (a) Content
image. (b) Style image I. (c) Style image II. Spatial mask separat-
ing the image in sky and ground is shown in the top right corner.
(d) Output from Neural Style Transfer without spatial control [8].
The clouds are stylised with image structures from the ground. (e)
Output with spatial guidance. (f) Output from spatially combining
the the ground-style from (b) and the sky-style from (c).

that overlap into the other region. Instead we use an eroded
version of the spatial guiding channels. We enforce spa-
tial guidance only on the neurons whose receptive ﬁeld is
entirely inside the guidance region and add another global
guidance channel that is constant over the entire image. We
found that this soft spatial guidance usually yields better re-
sults. For further details on the creation of guidance chan-
nels, see the Supplementary Material, section 1.1.

Another application of this method is to generate a new
style by combining the styles from multiple example im-
ages. Figure 2(f) shows an example in which the region
guidance is used to use the sky style from one image and
the ground style from another. This example demonstrates
the potential of spatial guidance to combine many example
styles together to produce new stylisations.

4.2. Guided Sums

(cid:96) , T2

Alternatively, instead of computing a Gram Matrix for
each guidance channel, we can also just stack the guid-
ance channels with the feature maps as it
is done in
[2] to spatially guide neural patches [16]. The feature
representation of image x in layer (cid:96) is then F(cid:48)
(cid:96)(x) =
(cid:3) and F(cid:48)
(cid:2)F(cid:96)(x), T1
(cid:96) , ..., TR
(cid:96)(x) ∈ R(N(cid:96)+R)×M(cid:96)(x). Now
(cid:96)
the Gram Matrix G(cid:48)
M(cid:96)(x) F(cid:48)
(cid:96)(x) = 1
(cid:96)(x) includes cor-
relations of the image features with the non-zero entries of
the guidance channels and therefore encourages that the fea-
tures in region r of the style image are used to stylise region
r in the content image. The contribution of layer (cid:96) to the
style loss is simply

(cid:96)(x)T F(cid:48)

E(cid:96) =

1
4N 2
(cid:96)

(cid:88)

ij

(cid:0)G(cid:48)

(cid:96)(ˆx) − G(cid:48)

(cid:96)(xS)(cid:1)2

ij

(8)

This is clearly more efﬁcient than the method presented in
Section 4.1. Instead of computing and matching R Gram
Matrices one only has to compute one Gram Matrix with R
additional channels. Nevertheless, this gain in efﬁciency
comes at the expense of texture quality. The additional
channels in the new Gram Matrix are the sums over each
feature map spatially weighted by the guidance channel.

G(cid:48)

(cid:96)(xS)i,N(cid:96)+r =

(cid:88)

(cid:0)Tr

(cid:96) ◦ F(cid:96)(xS)[:,i]

(cid:1)

j

(9)

j

Hence this method actually interpolates between matching
the original global Gram Matrix stylisation and the spatially
weighted sums over the feature maps. While the feature
map sums also give a non-trivial texture model, their ca-
pacity to model complex textures is limited [7]. In practice
we ﬁnd that this method can often give decent results but
also does not quite capture the texture of the style image –
as would be expected from the inferior texture model. Re-
sults and comparisons can be found in the Supplementary
Material, section 1.2.

5. Colour Control

The colour information of an image is an important per-
ceptual aspect of its style. At the same time it is largely
independent of other style aspects such as the type of brush
strokes used or dominating geometric shapes. Therefore it
is desirable to independently control the colour information
in Neural Style Transfer. A prominent use case for such
control is colour preservation during style transfer. When
stylising an image using Neural Style Transfer, the output
also copies the colour distribution of the style image, which
might be undesirable in many cases (Fig. 3(c)). For exam-
ple, the stylised farmhouse has the colours of the original
van Gogh painting (Fig. 3(c)), whereas one might prefer
the output painting to preserve the colours of the farmhouse
photograph. In particular, one might imagine that the artist
would have used the colours of the scene if they were to
paint the farmhouse. Here we present two simple methods
to preserve the colours of the source image during Neural
Style Transfer — in other words, to transfer the style with-
out transferring the colours. We compare two different ap-
proaches to colour preservation: colour histogram matching
and luminance-only transfer (Fig. 3(d,e)).

5.1. Luminance-only transfer

In the ﬁrst method we perform style transfer only in the
luminance channel, as done in Image Analogies [12]. This
is motivated by the observation that visual perception is far
more sensitive to changes in luminance than in colour [25].
The modiﬁcation is simple. The luminance channels LS
and LC are ﬁrst extracted from the style and content im-
ages. Then the Neural Style Transfer algorithm is applied
to these images to produce an output luminance image ˆL.
Using a colour space that separates luminance and colour
information, the colour information of the content image is
combined with ˆL to produce the ﬁnal colour output image
(Fig. 3(d)).

If there is a substantial mismatch between the luminance
histogram of the style and the content image, it can be help-
ful to match the histogram of the style luminance channel
LS to that of the content image LC before transferring the
style. For that we simply match mean and variance of the
content luminance. Let µS and µC be the mean luminances
of the two images, and σS and σC be their standard de-
viations. Then each luminance pixel in the style image is
updated as:

Ls(cid:48) =

(LS − µS) + µC

(10)

σC
σS

5.2. Colour histogram matching

The second method we present works as follows. Given
the style image xS, and the content image xC, the style im-
age’s colours are transformed to match the colours of the

as:

p(cid:48)
S = ApS + b

(11)

where A is a 3 × 3 matrix and b is a 3-vector. This trans-
formation is chosen so that the mean and covariance of
the RGB values in the new style image p(cid:48)
S match those of
p(cid:48)
C [11] (Appendix B). In general, we ﬁnd that the colour
matching method works reasonably well with Neural Style
Transfer (Fig. 3(e)), whereas gave poor synthesis results for
Image Analogies [11]. Furthermore, the colour histogram
matching method can also be used to better preserve the
colours of the style image. This can substantially improve
results for cases in which there is a strong mismatch in
colour but one rather wants to keep the colour distribution
of the style image (for example with pencil drawings or line
art styles). Examples of this application can be found in the
Supplementary Material, section 2.2.

5.3. Comparison

In conclusion,

both methods give perceptually-
interesting results but have different advantages and
disadvantages. The colour-matching method is naturally
limited by how well the colour transfer from the content
image onto the style image works. The colour distribution
often cannot be matched perfectly, leading to a mismatch
between the colours of the output image and that of the
content image.
In contrast,

the luminance-only transfer method pre-
serves the colours of the content image perfectly. However,
dependencies between the luminance and the colour chan-
nels are lost in the output image. While we found that this is
usually very difﬁcult to spot, it can be a problem for styles
with prominent brushstrokes since a single brushstroke can
change colour in an unnatural way. In comparison, when
using full style transfer and colour matching, the output im-
age really consists of strokes which are blotches of paint,
not just variations of light and dark. For a more detailed
discussion of colour preservation in Neural Style Transfer
we refer the reader to the Supplementary Material, section
2.1.

6. Scale Control

In this section, we describe methods for mixing differ-
ent styles at different scales and efﬁciently generating high-
resolution output with style at desired scales.

6.1. Scale control for style mixing

First we introduce a method to control the stylisation
independently on different spatial scales. Our goal is to
pick separate styles for different scales. For example, we
want to combine the ﬁne-scale brushstrokes of one painting
(Fig. 4(b), Style I) with the coarse-scale angular geometric
shapes of another image (Fig. 4(b), Style II).

Figure 3: Colour preservation in Neural Style Transfer. (a) Con-
tent image. (b) Style image. (c) Output from Neural Style Trans-
fer [8]. The colour scheme is copied from the painting. (d) Output
using style transfer in luminance domain to preserve colours. (e)
Output using colour transfer to preserve colours.

content image. This produces a new style image x(cid:48)
S that re-
places xS as input to the Neural Style Transfer algorithm.
The algorithm is otherwise unchanged.

The one choice to be made is the colour transfer proce-
dure. There are many colour transformation algorithms to
choose from; see [5] for a survey. Here we use linear meth-
ods, which are simple and effective for colour style transfer.
Given the style image, each RGB pixel pS is transformed

We deﬁne the style of an image at a certain scale as the
distribution of image structures in image neighbourhoods of
a certain size f . In that sense, the colour separation intro-
duced in the previous section can be thought of a special
case of scale separation, since image colours are “struc-
tures” on one-pixel neighbourhoods. To model image style
on larger scales, we use the Gram Matrices from different
layers in the CNN. In particular, a Gram Matrix at layer (cid:96)
represents the second-order statistics of image neighbour-
hoods of size corresponding to the receptive ﬁeld size f(cid:96).

Unfortunately, this representation is not factorised over
In general, a Gram Matrix G(cid:96)(x) at a given spa-
scale.
tial scale also captures much of the image information on
smaller spatial scales and thus shares a lot of information
with the Gram Matrix G(cid:96)−k(x) at a lower layer in the CNN
(see Supplementary Material, section 3.1 for more details).
Therefore, simply combining Gram Matrices from different
scales of different images does not give independent control
over the different scales.

Here we show a way to combine scales that avoids this
problem. We ﬁrst create a new style image that combines
ﬁne-scale information from one image with coarse scale in-
formation from another (Fig. 4(c)). We then use the new
style image in the original Neural Style Transfer. We do
this by applying Neural Style Transfer from the ﬁne-scale
style image to the coarse-scale style image, using only the
Gram Matrices from lower layers in the CNN (e.g., only
layer “conv1 1” and “conv2 1” in Fig. 4). We initialise
the optimisation procedure with the coarse-style image and
omit the content loss entirely, so that the ﬁne-scale texture
from the coarse-style image will be fully replaced. This is
based on the observation that the optimisation leaves im-
ages structures intact when they are of larger scale than the
style features. While this is not guaranteed, as it depends
on the optimiser, we empirically ﬁnd it to be effective for
the L-BFGS method typically used in Neural Style Trans-
fer. The resulting images (Fig. 4(c)) are used as the input to
the original Neural Style Transfer to generate a new styli-
sations of the cityscape photograph. For example, we com-
bine the ﬁne scale of Style I with the coarse scale of Style
II to re-paint the angular cubistic shapes in Fig. 4(d) with
pronounced brushstrokes (Fig. 4(e)). Or we combine the
ﬁne scale of Style II with the coarse scale of Style III to
replace the angular shapes by round structures, giving the
image a completely different “feel” (compare Fig. 4(d) with
Fig. 4(f)).

This method enables the creation of a large set of percep-
tually appealing, new styles by recombining existing ones
in a principled way. It also allows for interesting new ways
to interpolate between styles by interpolating across spatial
scales. For more examples of new styles and results of in-
terpolating between styles, we refer the reader to the Sup-
plementary Material, sections 3.2 and 3.3.

Figure 4: Scale control in Neural Style Transfer. (a) Content im-
(b) Collection of styles used. Style I has dominant brush
age.
strokes on the ﬁne scale. Style II has dominant angular shapes
on the coarse scale. Style III has dominant round shapes on the
coarse scale. (c) New styles obtained from combining coarse and
ﬁne scales of existing styles. Style IV combines ﬁne scale of Style
I with coarse scale of Style II. Style V combines ﬁne scale of Style
II with coarse scale of Style III. (d) Output using original Style II.
(e) Output using the new Style IV. (f) Output using the new Style
V. All stylisations preserve the colour of the photograph using the
colour matching method described in section 5.2

optimisation. We also noticed that this technique effectively
removes low-level noise that is typical for neural image syn-
thesis. In fact, all ﬁgures shown in this paper, except for
Fig. 6, were enhanced to high-resolution in that way. The
low/high-resolution pairs can be found in the Supplement.
Applying this technique iteratively also enables the genera-
tion of very high-resolution images that is only limited by
the size of the input images and available memory.

7. Controlling Fast Neural Style Transfer

A major drawback of Neural Style Transfer is that im-
age generation is relatively slow. Recently, a number of
works have shown that one can train a feed-forward CNN
to perform stylisation [13, 23, 17]. We now show how to ap-
ply the spatial and colour control described above to these
Fast Neural Style Transfer methods. Applying scale con-
trol to Fast Neural Style Transfer is trivial, as it entails sim-
ply training on the new style image that combines multi-
ple scales. We use Johnson’s excellent publicly-available
implementation of Fast Neural Style Transfer [13]3. The
networks we train all use the well-tuned default parame-
ters in that implementation including Instance Normaliza-
tion [24] (for details see Supplementary Material, section
4). For comparability and to stay in the domain of styles
that give good results with Fast Neural Style Transfer, we
use the styles published with that implementation.

7.1. Colour control

The simplest way to preserve the colour of the input im-
age is to just use an existing feed-forward stylisation net-
work [13], and then combine the luminance channel of the
stylisation with the colour channels of the content image
(Fig. 6(c)). An alternative is to train the feed-forward net-
work exclusively with the luminance channel of the style
and content images. This network then produces a lumi-
nance image that can be combined with the colour channels
from the input content image (Fig. 6(d)). For both methods
we match the mean luminance of the output image to that of
the content image. In general, we ﬁnd that colour preserva-
tion with the luminance network better combines stylisation
with structures in the content image (Fig. 6(c),(d)).

7.2. Spatial control

We now describe training a feed-forward network to ap-
ply different styles to different regions. We show that this
can be done with a surprisingly small modiﬁcation to John-
son’s training procedure [13], which we illustrate with the
following example. We create the style image by verti-
cally concatenating the Candy and Feathers images shown
in Fig. 6(b). Two additional binary guidance channels are
added to the style image, i.e., one for the top of the image

3github.com/jcjohnson/fast-neural-style

Figure 5: Neural Style Transfer in high resolution. (a) Content
and style images. (b) Output in low-resolution with total number
of pixels equal to 4502 (c) Output in high-resolution generated in
a coarse-to-ﬁne fashion from (b). (d) Output in high-resolution
without coarse-to-ﬁne procedure. For both high-resolution images
the total number of pixels is 30002 and they can be found in the
Supplemental Material.

6.2. Scale control for efﬁcient high resolution

The existing Neural Style Transfer method does not work
well for high-resolution outputs. Since the receptive ﬁelds
in a CNN have a ﬁxed size, the stylisation outcome depends
on the resolution of the input images: stylisation happens
only up to the scale of the receptive ﬁelds in the output. In
practice, we ﬁnd that for the VGG-19 network, there is a
sweet spot around 5002 pixels for the size of the input im-
ages, such that the stylisation is appealing but the content
is well-preserved (Fig. 5(b)). For a high-resolution image,
however, the receptive ﬁelds are typically very small com-
pared to the image, and so only very small-scale structures
are stylised (Fig. 5 (d)).

Here we show that the same scale separation principle
from the previous section can be used in order to produce
high-resolution outputs with large-scale stylisation. We are
given high-resolution content and style images xC and xS,
both having the same size with N 2 pixels in total. We down-
sample each image by a factor k such that N/k corresponds
to the desired stylisation resolution, e.g., 5002 for VGG, and
then perform stylisation. The output is now low-resolution
of size N/k. We can then produce high-resolution output
from this image by up-sampling the low-resolution output
to N 2 pixels, and use this as initialisation for Neural Style
Transfer with the original input images xC and xS. The
style features now capture and can ﬁll-in the high-resolution
information from the style image while leaving the coarse-
scale stylisation intact (Fig. 5(c)).

This coarse-to-ﬁne procedure has the additional advan-
tage of requiring fewer iterations in the high-resolution opti-
misation and thus increasing efﬁciency. In our experiments
we used 2.5 times fewer iterations for the high-resolution

and one for the bottom. The style loss function is based
on the guided Gram Matrices (Eq. 7). During training, the
feed-forward network takes as input the content image and
two guidance channels. The input guidance channels are
passed to the loss network to evaluate the spatially-guided
losses. Surprisingly, we ﬁnd that the guidance channels
can be kept constant during training: during training we re-
quired the feed-forward network to always stylise the lower
half of the image with one style and the upper half with an-
other. However, the network robustly learns the correspon-
dence between guidance channels and styles, so that at test
time we can pass arbitrary masks to the feed-forward net-
work to spatially guide the stylisation (Fig. 6(f)-(h)). By
providing an automatically-generated ﬁgure-ground seg-
mentation [21] we can create an algorithm that performs fast
spatially-varying stylisation automatically. (Fig. 6(g),(h))

8. Discussion

In this work, we introduce intuitive ways to control Neu-
ral Style Transfer. We hypothesise that image style includes
factors of space, colour, and scale, and present ways to ac-
cess these factors during stylisation to substantially improve
the quality and ﬂexibility of the existing method.

One application of the control methods we present is to
combine styles in an interpretable fashion. This contrasts
with the alternative approach of combining styles by lin-
early interpolating in the style representation as, for exam-
ple, is done in the concurrent work of Dumoulin et al. [3].
A possible concern with that approach is that if the direc-
tions in the style representation do not correspond to per-
ceptual variables, it becomes difﬁcult to generate appealing
new styles. Still, even with our methods the selection of
which inputs to combine for aesthetically pleasing results
can be challenging. An exciting open research question is
to predict what combinations of styles will combine nicely
into new, perceptually pleasing styles.

Neural Style Transfer is particularly appealing because
it can create new image structures based on the source im-
ages. This ﬂexibility arises from the representation of style
in terms of spatial summary statistics, in contrast to patch-
based methods [12, 20, 6]. However, because it is not clear
how the perceptual aspects of style are represented in the
summary statistics, it is hard to achieve meaningful para-
metric control over the stylisation. For that it may be nec-
essary to encourage appropriate factorisations of the CNN
representations during network training, for example, to
learn representations that factorise the image information
over spatial scales. In fact, this touches a fundamental re-
search question in machine vision: to obtain interpretable
yet powerful image representations that decompose images
into the independent factors of human visual perception.

(a) Content image.

(b) Styles Candy and Feathers.

Figure 6: Colour and spatial control in Fast Neural Style Trans-
(c)
fer.
Outputs from [13], trained with styles shown in (b). (d) Simple
colour preservation. Luminance channel from (c) is combined
with colour channels from (a). (e) Colour preservation with lu-
minance network. Output from luminance network is combined
with colour channels from (a). (f) Vertical separation of styles.
(g) Horizontal separation of styles. (h) Separation of styles into
person and background using [21].

[19] J. Portilla and E. P. Simoncelli. A Parametric Texture Model
Based on Joint Statistics of Complex Wavelet Coefﬁcients.
International Journal of Computer Vision, 40(1):49–70, Oct.
2000.

[20] G. Ramanarayanan and K. Bala. Constrained texture synthe-

sis via energy minimization. IEEE TVCG, 2007.

[21] X. Shen, A. Hertzmann, J. Jia, S. Paris, B. Price, E. Shecht-
man, and I. Sachs. Automatic portrait segmentation for im-
age stylization. Computer Graphics Forum, 35(2):93–102,
2016.

[22] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In Proc. ICLR,
2015.

[23] D. Ulyanov, V. Lebedev, A. Vedaldi, and V. Lempitsky. Tex-
ture Networks: Feed-forward Synthesis of Textures and Styl-
ized Images. arXiv:1603.03417 [cs], Mar. 2016.
arXiv:
1603.03417.

[24] D. Ulyanov, A. Vedaldi, and V. Lempitsky.

Instance Nor-
malization: The Missing Ingredient for Fast Stylization.
arXiv:1607.08022 [cs], July 2016. arXiv: 1607.08022.
[25] B. Wandell. Foundations of Vision. Sinauer Associates Inc.,

1995.

[26] L.-Y. Wei and M. Levoy. Fast texture synthesis using tree-

structured vector quantization. In Proc. SIGGRAPH, 2000.

[27] P. Wilmot, E. Risser, and C. Barnes. Stable and Control-
lable Neural Texture Synthesis and Style Transfer Using His-
togram Losses. arXiv preprint arXiv:1701.08893, 2017.

References

[1] L. Benedetti, Winnem¨oller, M. H., Corsini, and R. Scopigno.
Painting with bob: Assisted creativity for novices.
In
Proc. UIST, 2014.

[2] A. J. Champandard. Semantic Style Transfer and Turning
arXiv:1603.01768

Two-Bit Doodles into Fine Artworks.
[cs], Mar. 2016. arXiv: 1603.01768.

[3] V. Dumoulin, J. Shlens, and M. Kudlur. A learned represen-

tation for artistic style. In Proc. ICLR, 2017.

[4] A. A. Efros and T. K. Leung. Texture synthesis by non-

parametric sampling. In Proc. ICCV, 1999.

[5] H. S. Faridul, T. Pouli, C. Chamaret, J. Stauder, E. Reinhard,
D. Kuzovkin, and A. Tremeau. Colour mapping: A review
of recent methods, extensions and applications. Computer
Graphics Forum, 35(1):59–88, 2016.

[6] J. Fiˇser, O. Jamriˇska, M. Luk´aˇc, E. Shechtman, P. Asente,
J. Lu, and D. S´ykora. Stylit: Illumination-guided example-
based stylization of 3d renderings. ACM Trans. Graph.,
35(4), July 2016.

[7] L. A. Gatys, A. S. Ecker, and M. Bethge. Texture Synthe-
sis Using Convolutional Neural Networks. In Advances in
Neural Information Processing Systems 28, 2015.

[8] L. A. Gatys, A. S. Ecker, and M. Bethge. Image Style Trans-
fer Using Convolutional Neural Networks. In Proc. CVPR,
2016.

[9] C. Han, E. Risser, R. Ramamoorthi, and E. Grinspun. Multi-

scale texture synthesis. ACM TOG, 27(3):51:1–51:8, 2008.

[10] D. J. Heeger and J. R. Bergen. Pyramid-based Texture Anal-
In Proceedings of the 22Nd Annual Con-
ysis/Synthesis.
ference on Computer Graphics and Interactive Techniques,
SIGGRAPH ’95, pages 229–238, New York, NY, USA,
1995. ACM.

[11] A. Hertzmann. Algorithms for Rendering in Artistic Styles.

PhD thesis, New York University, 2001.

[12] A. Hertzmann, C. E. Jacobs, N. Oliver, B. Curless, and D. H.
Salesin. Image Analogies. In Proc. SIGGRAPH, 2001.
[13] J. Johnson, A. Alahi, and L. Fei-Fei. Perceptual Losses for
Real-Time Style Transfer and Super-Resolution. In B. Leibe,
J. Matas, N. Sebe, and M. Welling, editors, Computer Vision
– ECCV 2016, number 9906 in Lecture Notes in Computer
Science, pages 694–711. Springer International Publishing,
Oct. 2016. DOI: 10.1007/978-3-319-46475-6 43.

[14] B. Julesz. Visual Pattern Discrimination. IRE Transactions

on Information Theory, 8(2), Feb. 1962.

[15] R. D. Kalnins, L. Markosian, B. J. Meier, M. A. Kowal-
ski, J. C. Lee, P. L. Davidson, M. Webb, J. F. Hughes, and
A. Finkelstein. Wysiwyg npr: Drawing strokes directly on
3d models. ACM Trans. Graph., 21(3), July 2002.

[16] C. Li and M. Wand. Combining markov random ﬁelds
and convolutional neural networks for image synthesis. In
Proc. CVPR, 2016.

[17] C. Li and M. Wand. Precomputed real-time texture syn-
thesis with markovian generative adversarial networks.
In
Proc. ECCV, 2016.

[18] P. O’Donovan and A. Hertzmann. Anipaint:

Interactive

painterly animation from video. IEEE TVCG, 18(3), 2012.

Controlling Perceptual Factors in Neural Style Transfer

Leon A. Gatys1 Alexander S. Ecker1 Matthias Bethge1 Aaron Hertzmann2 Eli Shechtman2

1University of T¨ubingen

2Adobe Research

7
1
0
2
 
y
a
M
 
1
1
 
 
]

V
C
.
s
c
[
 
 
2
v
5
6
8
7
0
.
1
1
6
1
:
v
i
X
r
a

Figure 1: Overview of our control methods. (a) Content image, with spatial mask inset. (b) Spatial Control. The sky is stylised using the
sky of Style II from Fig. 2(c). The ground is stylised using Style I from Fig. 4(b). (c) Colour Control. The colour of the content image
is preserved using luminance-only style transfer described in Section 5.1. (d) Scale Control. The ﬁne scale is stylised using using Style I
from Fig. 4(b) and the coarse scale is stylised using Style III from Fig. 4(b). Colour is preserved using the colour matching described in
section 5.2.

Abstract

Neural Style Transfer has shown very exciting results en-
abling new forms of image manipulation. Here we extend
the existing method to introduce control over spatial lo-
cation, colour information and across spatial scale12. We
demonstrate how this enhances the method by allowing
high-resolution controlled stylisation and helps to alleviate
common failure cases such as applying ground textures to
sky regions. Furthermore, by decomposing style into these
perceptual factors we enable the combination of style infor-
mation from multiple sources to generate new, perceptually
appealing styles from existing ones. We also describe how
these methods can be used to more efﬁciently produce large
size, high-quality stylisation. Finally we show how the in-
troduced control measures can be applied in recent methods
for Fast Neural Style Transfer.

1. Introduction

Example-based style transfer is a major way to create
new, perceptually appealing images from existing ones. It
takes two images xS and xC as input, and produces a new
image ˆx applying the style of xS to the content of xC. The
concepts of “style” and “content” are both expressed in
terms of image statistics; for example, two images are said

1Code: github.com/leongatys/NeuralImageSynthesis
2Supplement: bethgelab.org/media/uploads/stylecontrol/supplement/

to have the same style if they embody the same correlations
of speciﬁc image features. To provide intuitive control over
this process, one must identify ways to access perceptual
factors in these statistics.

In order to identify these factors, we observe some of the
different ways that one might describe an artwork such as
Vincent van Gogh’s A Wheatﬁeld with Cypresses (Fig. 2(c)).
First, one might separately describe different styles in dif-
ferent regions, such as in the sky as compared to the ground.
Second, one might describe the colour palette, and how
it relates to the underlying scene, separately from factors
like image composition or brush stroke texture. Third, one
might describe ﬁne-scale spatial structures, such as brush
stroke shape and texture, separately from coarse-scale struc-
tures like the arrangements of strokes and the swirly struc-
ture in the sky of the painting. These observation motivates
our hypothesis: image style can be perceptually factorised
into style in different spatial regions, colour and luminance
information, and across spatial scales, making them mean-
ingful control dimensions for image stylisation.

Here we build on this hypothesis to introduce meaning-
ful control to a recent image stylisation method known as
Neural Style Transfer [8] in which the image statistics that
capture content and style are deﬁned on feature responses in
a Convolutional Neural Network (CNN) [22]. Namely, we
introduce methods for controlling image stylisation inde-
pendently in different spatial regions (Fig. 1(b)), for colour
and luminance information (Fig. 1(c)) as well as on different
spatial scales (Fig. 1(d)). We show how they can be applied

1

to improve Neural Style Transfer and to alleviate some of its
common failure cases. Moreover, we demonstrate how the
factorisation of style into these aspects can gracefully com-
bine style information from multiple images and thus en-
able the creation of new, perceptually interesting styles. We
also show a method for efﬁciently rendering high-resolution
stylisations using a coarse-to-ﬁne approach that reduced op-
timisation time by an approximate factor of 2.5. Finally,
we show that in addition to the original optimisation-based
style transfer, these control methods can also be applied to
recent fast approximations of Neural Style Transfer [13, 23]

2. Related Work

There is a large body of work on image stylisation
techniques. The ﬁrst example-based technique was Image
Analogies [12], which built on patch-based texture synthe-
sis techniques [4, 26]. This method introduced stylisation
based on an example painting, as well as ways to preserve
colour, and to control stylisation of different regions sep-
arately. The method used a coarse-to-ﬁne texture synthe-
sis procedure for speed [26]. Since then, improvements
to the optimisation method and new applications [20, 6]
have been proposed. Patch-based methods have also been
used with CNN features [16, 2], leading to improved tex-
ture representations and stylisation results. Scale control
has been developed for patch-based texture synthesis [9]
and many other techniques have been developed for trans-
ferring colour style [5]. There are also many procedural
stylisation techniques that provide extensive user control in
the non-photorealistic rendering literature, e.g., [1, 15, 18].
These procedural methods provide separate controls for ad-
justing spatial variation in styles, colour transformation, and
brush stroke style, but cannot work from training data.

More recently, Neural Style Transfer [8] has demon-
strated impressive results in example-based image stylisa-
tion. The method is based on a parametric texture model
[14, 10, 19] deﬁned by summary statistics on CNN re-
sponses [7] and appears to have several advantages over
patch-based synthesis. Most prominently, during the styli-
sation it displays a greater ﬂexibility to create new image
structures that are not already present in the source images
[16].

However, the representation of image style within the
parametric neural texture model [7] allows far less intuitive
control over the stylisation outcome than patch-based meth-
ods. The texture parameters can be used to inﬂuence the
stylisation but their interplay is extremely complex due to
the complexity of the deep representations they are deﬁned
on. Therefore it is difﬁcult to predict their perceptual effect
on the stylisation result. Our main goal in this work is to
introduce intuitive ways to control Neural Style Transfer to
combine the advantages of that method with the more ﬁne-
grained user control of earlier stylisation methods. Note

that concurrent work [27] independently developed a simi-
lar approach for spatial control as presented here.

3. Neural Style Transfer

The Neural Style Transfer method [8] works as follows.
We deﬁne a content image xC and a style image xS with
corresponding feature representations F(cid:96)(xC) and F(cid:96)(xS) in
layer (cid:96) of a CNN. Each column of F(cid:96)(x) is a vectorised fea-
ture map and thus F(cid:96) ∈ RM(cid:96)(x)×N(cid:96) where N(cid:96) is the number
of feature maps in layer (cid:96) and M(cid:96)(x) = H(cid:96)(x) × W(cid:96)(x) is
the product of height and width of each feature map. Note
that while N(cid:96) is independent of the input image, M(cid:96)(x) de-
pends on the size of the input image.

Neural Style Transfer generates a new image ˆx that de-
picts the content of image xC in the style of image xS by
minimising following loss function with respect to ˆx

Ltotal = αLcontent + βLstyle

(1)

where the content term compares feature maps at a single
layer (cid:96)C:

Lcontent =

1
N(cid:96)cM(cid:96)c(xC)

(cid:88)

ij

(F(cid:96)c (ˆx) − F(cid:96)c(xC))2

ij

(2)

and the style term compares a set of summary statistics:

Lstyle =

w(cid:96)E(cid:96)

(cid:88)

(cid:96)
1
4N 2
(cid:96)

(cid:88)

ij

E(cid:96) =

(G(cid:96)(ˆx) − G(cid:96)(xS))2
ij

(3)

(4)

1

M(cid:96)(x) F(cid:96)(x)T F(cid:96)(x) is the Gram Ma-
where G(cid:96)(x) =
trix of the feature maps in layer (cid:96) in response to im-
age x.
As in the original work [8], we use the
VGG-19 Network and include “conv4 2” as the layer
(cid:96)C for the image content and Gram Matrices from lay-
ers “conv1 1”,“conv2 1”,“conv3 1”,“conv4 1”,“conv5 1”
as the image statistics that model style.

4. Spatial Control

We ﬁrst introduce ways to spatially control Neural Style
Transfer. Our goal is to control which region of the style
image is used to stylise each region in the content image.
For example, we would like to apply one style to the sky re-
gion and another to the ground region of an image to either
avoid artefacts (Fig. 2(d),(e)) or to generate new combina-
tions of styles from multiple sources (Fig. 2(f)). We take
as input R spatial guidance channels Tr for both the con-
tent and style image (small insets in (Fig. 2(a)-(c)). Each of
these is an image map of values in [0, 1] specifying which
styles should be applied where: regions where the rth con-
tent guidance channel is equal to 1 should get the style from

regions where the rth style guidance channel is 1. When
there are multiple style images, the regions index over all
the example images. The guidance channels are propagated
to the CNN to produce guidance channels Tr
(cid:96) for each layer.
This can be done by simple re-sampling or more involved
methods as we explain later in this section. We ﬁrst discuss
algorithms for synthesis given the guidance maps.

4.1. Guided Gram Matrices

In the ﬁrst method we propose, we multiply the feature
maps of each layer included in the style features with R
guidance channels Tr
(cid:96) and compute one spatially guided
Gram Matrix for each of the R regions in the style image.
Formally we deﬁne a spatially guided feature map as

Fr
(cid:96) (x)[:,i] = Tr

(cid:96) ◦ F(cid:96)(x)[:,i]

(5)

(cid:96) (x)[:,i] is the ith column vector of Fr

Here Fr
(cid:96) (x), r ∈ R and ◦
denotes element-wise multiplication. The guidance channel
Tr
(cid:96) is vectorised and can be either a binary mask for hard
guidance or real-valued for soft guidance. We normalise Tr
(cid:96)
such that (cid:80)

i = 1. The guided Gram Matrix is then

(cid:96) )2

i(Tr

Gr

(cid:96) (x) = Fr

(cid:96) (x)T Fr

(cid:96) (x)

(6)

Each guided Gram Matrix is used as the optimisation tar-
get for the corresponding region of the content image. The
contribution of layer (cid:96) to the style loss is then:

E(cid:96) =

1
4N 2
(cid:96)

R
(cid:88)

(cid:88)

r=1

ij

λr (Gr

(cid:96) (ˆx) − Gr

(cid:96) (xS))2

ij

(7)

where λr is a weighting factor that controls the stylisation
strength in the corresponding region r.

An important use for guidance channels is to ensure that
style is transferred between regions of similar scene con-
tent in the content and style image. For example, Figure 2
shows an example in which the sky in the content image has
bright clouds, whereas the sky in the style image has grey-
ish clouds; as a result, the original style transfer stylises the
sky with a bright part of the ground that does not match the
appearance of the sky. We address this by dividing both
images into a sky and a ground region (Fig. 2(a),(b) small
insets) and require that the sky and ground regions from the
painting are used to stylise the respective regions in the pho-
tograph (Fig. 2(e)).

Given the input guidance channel Tr, we need to ﬁrst
propagate this channel to produce guidance channels Tr
(cid:96) for
each layer. The most obvious approach would be to down-
sample Tr to the dimensions of each layer’s feature map.
However, we often ﬁnd that doing so fails to keep the de-
sired separation of styles by region, e.g., ground texture still
appears in the sky. This is because neurons near the bound-
aries of a guidance region can have large receptive ﬁelds

Figure 2: Spatial guidance in Neural Style Transfer. (a) Content
image. (b) Style image I. (c) Style image II. Spatial mask separat-
ing the image in sky and ground is shown in the top right corner.
(d) Output from Neural Style Transfer without spatial control [8].
The clouds are stylised with image structures from the ground. (e)
Output with spatial guidance. (f) Output from spatially combining
the the ground-style from (b) and the sky-style from (c).

that overlap into the other region. Instead we use an eroded
version of the spatial guiding channels. We enforce spa-
tial guidance only on the neurons whose receptive ﬁeld is
entirely inside the guidance region and add another global
guidance channel that is constant over the entire image. We
found that this soft spatial guidance usually yields better re-
sults. For further details on the creation of guidance chan-
nels, see the Supplementary Material, section 1.1.

Another application of this method is to generate a new
style by combining the styles from multiple example im-
ages. Figure 2(f) shows an example in which the region
guidance is used to use the sky style from one image and
the ground style from another. This example demonstrates
the potential of spatial guidance to combine many example
styles together to produce new stylisations.

4.2. Guided Sums

(cid:96) , T2

Alternatively, instead of computing a Gram Matrix for
each guidance channel, we can also just stack the guid-
ance channels with the feature maps as it
is done in
[2] to spatially guide neural patches [16]. The feature
representation of image x in layer (cid:96) is then F(cid:48)
(cid:96)(x) =
(cid:3) and F(cid:48)
(cid:2)F(cid:96)(x), T1
(cid:96) , ..., TR
(cid:96)(x) ∈ R(N(cid:96)+R)×M(cid:96)(x). Now
(cid:96)
the Gram Matrix G(cid:48)
M(cid:96)(x) F(cid:48)
(cid:96)(x) = 1
(cid:96)(x) includes cor-
relations of the image features with the non-zero entries of
the guidance channels and therefore encourages that the fea-
tures in region r of the style image are used to stylise region
r in the content image. The contribution of layer (cid:96) to the
style loss is simply

(cid:96)(x)T F(cid:48)

E(cid:96) =

1
4N 2
(cid:96)

(cid:88)

ij

(cid:0)G(cid:48)

(cid:96)(ˆx) − G(cid:48)

(cid:96)(xS)(cid:1)2

ij

(8)

This is clearly more efﬁcient than the method presented in
Section 4.1. Instead of computing and matching R Gram
Matrices one only has to compute one Gram Matrix with R
additional channels. Nevertheless, this gain in efﬁciency
comes at the expense of texture quality. The additional
channels in the new Gram Matrix are the sums over each
feature map spatially weighted by the guidance channel.

G(cid:48)

(cid:96)(xS)i,N(cid:96)+r =

(cid:88)

(cid:0)Tr

(cid:96) ◦ F(cid:96)(xS)[:,i]

(cid:1)

j

(9)

j

Hence this method actually interpolates between matching
the original global Gram Matrix stylisation and the spatially
weighted sums over the feature maps. While the feature
map sums also give a non-trivial texture model, their ca-
pacity to model complex textures is limited [7]. In practice
we ﬁnd that this method can often give decent results but
also does not quite capture the texture of the style image –
as would be expected from the inferior texture model. Re-
sults and comparisons can be found in the Supplementary
Material, section 1.2.

5. Colour Control

The colour information of an image is an important per-
ceptual aspect of its style. At the same time it is largely
independent of other style aspects such as the type of brush
strokes used or dominating geometric shapes. Therefore it
is desirable to independently control the colour information
in Neural Style Transfer. A prominent use case for such
control is colour preservation during style transfer. When
stylising an image using Neural Style Transfer, the output
also copies the colour distribution of the style image, which
might be undesirable in many cases (Fig. 3(c)). For exam-
ple, the stylised farmhouse has the colours of the original
van Gogh painting (Fig. 3(c)), whereas one might prefer
the output painting to preserve the colours of the farmhouse
photograph. In particular, one might imagine that the artist
would have used the colours of the scene if they were to
paint the farmhouse. Here we present two simple methods
to preserve the colours of the source image during Neural
Style Transfer — in other words, to transfer the style with-
out transferring the colours. We compare two different ap-
proaches to colour preservation: colour histogram matching
and luminance-only transfer (Fig. 3(d,e)).

5.1. Luminance-only transfer

In the ﬁrst method we perform style transfer only in the
luminance channel, as done in Image Analogies [12]. This
is motivated by the observation that visual perception is far
more sensitive to changes in luminance than in colour [25].
The modiﬁcation is simple. The luminance channels LS
and LC are ﬁrst extracted from the style and content im-
ages. Then the Neural Style Transfer algorithm is applied
to these images to produce an output luminance image ˆL.
Using a colour space that separates luminance and colour
information, the colour information of the content image is
combined with ˆL to produce the ﬁnal colour output image
(Fig. 3(d)).

If there is a substantial mismatch between the luminance
histogram of the style and the content image, it can be help-
ful to match the histogram of the style luminance channel
LS to that of the content image LC before transferring the
style. For that we simply match mean and variance of the
content luminance. Let µS and µC be the mean luminances
of the two images, and σS and σC be their standard de-
viations. Then each luminance pixel in the style image is
updated as:

Ls(cid:48) =

(LS − µS) + µC

(10)

σC
σS

5.2. Colour histogram matching

The second method we present works as follows. Given
the style image xS, and the content image xC, the style im-
age’s colours are transformed to match the colours of the

as:

p(cid:48)
S = ApS + b

(11)

where A is a 3 × 3 matrix and b is a 3-vector. This trans-
formation is chosen so that the mean and covariance of
the RGB values in the new style image p(cid:48)
S match those of
p(cid:48)
C [11] (Appendix B). In general, we ﬁnd that the colour
matching method works reasonably well with Neural Style
Transfer (Fig. 3(e)), whereas gave poor synthesis results for
Image Analogies [11]. Furthermore, the colour histogram
matching method can also be used to better preserve the
colours of the style image. This can substantially improve
results for cases in which there is a strong mismatch in
colour but one rather wants to keep the colour distribution
of the style image (for example with pencil drawings or line
art styles). Examples of this application can be found in the
Supplementary Material, section 2.2.

5.3. Comparison

In conclusion,

both methods give perceptually-
interesting results but have different advantages and
disadvantages. The colour-matching method is naturally
limited by how well the colour transfer from the content
image onto the style image works. The colour distribution
often cannot be matched perfectly, leading to a mismatch
between the colours of the output image and that of the
content image.
In contrast,

the luminance-only transfer method pre-
serves the colours of the content image perfectly. However,
dependencies between the luminance and the colour chan-
nels are lost in the output image. While we found that this is
usually very difﬁcult to spot, it can be a problem for styles
with prominent brushstrokes since a single brushstroke can
change colour in an unnatural way. In comparison, when
using full style transfer and colour matching, the output im-
age really consists of strokes which are blotches of paint,
not just variations of light and dark. For a more detailed
discussion of colour preservation in Neural Style Transfer
we refer the reader to the Supplementary Material, section
2.1.

6. Scale Control

In this section, we describe methods for mixing differ-
ent styles at different scales and efﬁciently generating high-
resolution output with style at desired scales.

6.1. Scale control for style mixing

First we introduce a method to control the stylisation
independently on different spatial scales. Our goal is to
pick separate styles for different scales. For example, we
want to combine the ﬁne-scale brushstrokes of one painting
(Fig. 4(b), Style I) with the coarse-scale angular geometric
shapes of another image (Fig. 4(b), Style II).

Figure 3: Colour preservation in Neural Style Transfer. (a) Con-
tent image. (b) Style image. (c) Output from Neural Style Trans-
fer [8]. The colour scheme is copied from the painting. (d) Output
using style transfer in luminance domain to preserve colours. (e)
Output using colour transfer to preserve colours.

content image. This produces a new style image x(cid:48)
S that re-
places xS as input to the Neural Style Transfer algorithm.
The algorithm is otherwise unchanged.

The one choice to be made is the colour transfer proce-
dure. There are many colour transformation algorithms to
choose from; see [5] for a survey. Here we use linear meth-
ods, which are simple and effective for colour style transfer.
Given the style image, each RGB pixel pS is transformed

We deﬁne the style of an image at a certain scale as the
distribution of image structures in image neighbourhoods of
a certain size f . In that sense, the colour separation intro-
duced in the previous section can be thought of a special
case of scale separation, since image colours are “struc-
tures” on one-pixel neighbourhoods. To model image style
on larger scales, we use the Gram Matrices from different
layers in the CNN. In particular, a Gram Matrix at layer (cid:96)
represents the second-order statistics of image neighbour-
hoods of size corresponding to the receptive ﬁeld size f(cid:96).

Unfortunately, this representation is not factorised over
In general, a Gram Matrix G(cid:96)(x) at a given spa-
scale.
tial scale also captures much of the image information on
smaller spatial scales and thus shares a lot of information
with the Gram Matrix G(cid:96)−k(x) at a lower layer in the CNN
(see Supplementary Material, section 3.1 for more details).
Therefore, simply combining Gram Matrices from different
scales of different images does not give independent control
over the different scales.

Here we show a way to combine scales that avoids this
problem. We ﬁrst create a new style image that combines
ﬁne-scale information from one image with coarse scale in-
formation from another (Fig. 4(c)). We then use the new
style image in the original Neural Style Transfer. We do
this by applying Neural Style Transfer from the ﬁne-scale
style image to the coarse-scale style image, using only the
Gram Matrices from lower layers in the CNN (e.g., only
layer “conv1 1” and “conv2 1” in Fig. 4). We initialise
the optimisation procedure with the coarse-style image and
omit the content loss entirely, so that the ﬁne-scale texture
from the coarse-style image will be fully replaced. This is
based on the observation that the optimisation leaves im-
ages structures intact when they are of larger scale than the
style features. While this is not guaranteed, as it depends
on the optimiser, we empirically ﬁnd it to be effective for
the L-BFGS method typically used in Neural Style Trans-
fer. The resulting images (Fig. 4(c)) are used as the input to
the original Neural Style Transfer to generate a new styli-
sations of the cityscape photograph. For example, we com-
bine the ﬁne scale of Style I with the coarse scale of Style
II to re-paint the angular cubistic shapes in Fig. 4(d) with
pronounced brushstrokes (Fig. 4(e)). Or we combine the
ﬁne scale of Style II with the coarse scale of Style III to
replace the angular shapes by round structures, giving the
image a completely different “feel” (compare Fig. 4(d) with
Fig. 4(f)).

This method enables the creation of a large set of percep-
tually appealing, new styles by recombining existing ones
in a principled way. It also allows for interesting new ways
to interpolate between styles by interpolating across spatial
scales. For more examples of new styles and results of in-
terpolating between styles, we refer the reader to the Sup-
plementary Material, sections 3.2 and 3.3.

Figure 4: Scale control in Neural Style Transfer. (a) Content im-
(b) Collection of styles used. Style I has dominant brush
age.
strokes on the ﬁne scale. Style II has dominant angular shapes
on the coarse scale. Style III has dominant round shapes on the
coarse scale. (c) New styles obtained from combining coarse and
ﬁne scales of existing styles. Style IV combines ﬁne scale of Style
I with coarse scale of Style II. Style V combines ﬁne scale of Style
II with coarse scale of Style III. (d) Output using original Style II.
(e) Output using the new Style IV. (f) Output using the new Style
V. All stylisations preserve the colour of the photograph using the
colour matching method described in section 5.2

optimisation. We also noticed that this technique effectively
removes low-level noise that is typical for neural image syn-
thesis. In fact, all ﬁgures shown in this paper, except for
Fig. 6, were enhanced to high-resolution in that way. The
low/high-resolution pairs can be found in the Supplement.
Applying this technique iteratively also enables the genera-
tion of very high-resolution images that is only limited by
the size of the input images and available memory.

7. Controlling Fast Neural Style Transfer

A major drawback of Neural Style Transfer is that im-
age generation is relatively slow. Recently, a number of
works have shown that one can train a feed-forward CNN
to perform stylisation [13, 23, 17]. We now show how to ap-
ply the spatial and colour control described above to these
Fast Neural Style Transfer methods. Applying scale con-
trol to Fast Neural Style Transfer is trivial, as it entails sim-
ply training on the new style image that combines multi-
ple scales. We use Johnson’s excellent publicly-available
implementation of Fast Neural Style Transfer [13]3. The
networks we train all use the well-tuned default parame-
ters in that implementation including Instance Normaliza-
tion [24] (for details see Supplementary Material, section
4). For comparability and to stay in the domain of styles
that give good results with Fast Neural Style Transfer, we
use the styles published with that implementation.

7.1. Colour control

The simplest way to preserve the colour of the input im-
age is to just use an existing feed-forward stylisation net-
work [13], and then combine the luminance channel of the
stylisation with the colour channels of the content image
(Fig. 6(c)). An alternative is to train the feed-forward net-
work exclusively with the luminance channel of the style
and content images. This network then produces a lumi-
nance image that can be combined with the colour channels
from the input content image (Fig. 6(d)). For both methods
we match the mean luminance of the output image to that of
the content image. In general, we ﬁnd that colour preserva-
tion with the luminance network better combines stylisation
with structures in the content image (Fig. 6(c),(d)).

7.2. Spatial control

We now describe training a feed-forward network to ap-
ply different styles to different regions. We show that this
can be done with a surprisingly small modiﬁcation to John-
son’s training procedure [13], which we illustrate with the
following example. We create the style image by verti-
cally concatenating the Candy and Feathers images shown
in Fig. 6(b). Two additional binary guidance channels are
added to the style image, i.e., one for the top of the image

3github.com/jcjohnson/fast-neural-style

Figure 5: Neural Style Transfer in high resolution. (a) Content
and style images. (b) Output in low-resolution with total number
of pixels equal to 4502 (c) Output in high-resolution generated in
a coarse-to-ﬁne fashion from (b). (d) Output in high-resolution
without coarse-to-ﬁne procedure. For both high-resolution images
the total number of pixels is 30002 and they can be found in the
Supplemental Material.

6.2. Scale control for efﬁcient high resolution

The existing Neural Style Transfer method does not work
well for high-resolution outputs. Since the receptive ﬁelds
in a CNN have a ﬁxed size, the stylisation outcome depends
on the resolution of the input images: stylisation happens
only up to the scale of the receptive ﬁelds in the output. In
practice, we ﬁnd that for the VGG-19 network, there is a
sweet spot around 5002 pixels for the size of the input im-
ages, such that the stylisation is appealing but the content
is well-preserved (Fig. 5(b)). For a high-resolution image,
however, the receptive ﬁelds are typically very small com-
pared to the image, and so only very small-scale structures
are stylised (Fig. 5 (d)).

Here we show that the same scale separation principle
from the previous section can be used in order to produce
high-resolution outputs with large-scale stylisation. We are
given high-resolution content and style images xC and xS,
both having the same size with N 2 pixels in total. We down-
sample each image by a factor k such that N/k corresponds
to the desired stylisation resolution, e.g., 5002 for VGG, and
then perform stylisation. The output is now low-resolution
of size N/k. We can then produce high-resolution output
from this image by up-sampling the low-resolution output
to N 2 pixels, and use this as initialisation for Neural Style
Transfer with the original input images xC and xS. The
style features now capture and can ﬁll-in the high-resolution
information from the style image while leaving the coarse-
scale stylisation intact (Fig. 5(c)).

This coarse-to-ﬁne procedure has the additional advan-
tage of requiring fewer iterations in the high-resolution opti-
misation and thus increasing efﬁciency. In our experiments
we used 2.5 times fewer iterations for the high-resolution

and one for the bottom. The style loss function is based
on the guided Gram Matrices (Eq. 7). During training, the
feed-forward network takes as input the content image and
two guidance channels. The input guidance channels are
passed to the loss network to evaluate the spatially-guided
losses. Surprisingly, we ﬁnd that the guidance channels
can be kept constant during training: during training we re-
quired the feed-forward network to always stylise the lower
half of the image with one style and the upper half with an-
other. However, the network robustly learns the correspon-
dence between guidance channels and styles, so that at test
time we can pass arbitrary masks to the feed-forward net-
work to spatially guide the stylisation (Fig. 6(f)-(h)). By
providing an automatically-generated ﬁgure-ground seg-
mentation [21] we can create an algorithm that performs fast
spatially-varying stylisation automatically. (Fig. 6(g),(h))

8. Discussion

In this work, we introduce intuitive ways to control Neu-
ral Style Transfer. We hypothesise that image style includes
factors of space, colour, and scale, and present ways to ac-
cess these factors during stylisation to substantially improve
the quality and ﬂexibility of the existing method.

One application of the control methods we present is to
combine styles in an interpretable fashion. This contrasts
with the alternative approach of combining styles by lin-
early interpolating in the style representation as, for exam-
ple, is done in the concurrent work of Dumoulin et al. [3].
A possible concern with that approach is that if the direc-
tions in the style representation do not correspond to per-
ceptual variables, it becomes difﬁcult to generate appealing
new styles. Still, even with our methods the selection of
which inputs to combine for aesthetically pleasing results
can be challenging. An exciting open research question is
to predict what combinations of styles will combine nicely
into new, perceptually pleasing styles.

Neural Style Transfer is particularly appealing because
it can create new image structures based on the source im-
ages. This ﬂexibility arises from the representation of style
in terms of spatial summary statistics, in contrast to patch-
based methods [12, 20, 6]. However, because it is not clear
how the perceptual aspects of style are represented in the
summary statistics, it is hard to achieve meaningful para-
metric control over the stylisation. For that it may be nec-
essary to encourage appropriate factorisations of the CNN
representations during network training, for example, to
learn representations that factorise the image information
over spatial scales. In fact, this touches a fundamental re-
search question in machine vision: to obtain interpretable
yet powerful image representations that decompose images
into the independent factors of human visual perception.

(a) Content image.

(b) Styles Candy and Feathers.

Figure 6: Colour and spatial control in Fast Neural Style Trans-
(c)
fer.
Outputs from [13], trained with styles shown in (b). (d) Simple
colour preservation. Luminance channel from (c) is combined
with colour channels from (a). (e) Colour preservation with lu-
minance network. Output from luminance network is combined
with colour channels from (a). (f) Vertical separation of styles.
(g) Horizontal separation of styles. (h) Separation of styles into
person and background using [21].

[19] J. Portilla and E. P. Simoncelli. A Parametric Texture Model
Based on Joint Statistics of Complex Wavelet Coefﬁcients.
International Journal of Computer Vision, 40(1):49–70, Oct.
2000.

[20] G. Ramanarayanan and K. Bala. Constrained texture synthe-

sis via energy minimization. IEEE TVCG, 2007.

[21] X. Shen, A. Hertzmann, J. Jia, S. Paris, B. Price, E. Shecht-
man, and I. Sachs. Automatic portrait segmentation for im-
age stylization. Computer Graphics Forum, 35(2):93–102,
2016.

[22] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In Proc. ICLR,
2015.

[23] D. Ulyanov, V. Lebedev, A. Vedaldi, and V. Lempitsky. Tex-
ture Networks: Feed-forward Synthesis of Textures and Styl-
ized Images. arXiv:1603.03417 [cs], Mar. 2016.
arXiv:
1603.03417.

[24] D. Ulyanov, A. Vedaldi, and V. Lempitsky.

Instance Nor-
malization: The Missing Ingredient for Fast Stylization.
arXiv:1607.08022 [cs], July 2016. arXiv: 1607.08022.
[25] B. Wandell. Foundations of Vision. Sinauer Associates Inc.,

1995.

[26] L.-Y. Wei and M. Levoy. Fast texture synthesis using tree-

structured vector quantization. In Proc. SIGGRAPH, 2000.

[27] P. Wilmot, E. Risser, and C. Barnes. Stable and Control-
lable Neural Texture Synthesis and Style Transfer Using His-
togram Losses. arXiv preprint arXiv:1701.08893, 2017.

References

[1] L. Benedetti, Winnem¨oller, M. H., Corsini, and R. Scopigno.
Painting with bob: Assisted creativity for novices.
In
Proc. UIST, 2014.

[2] A. J. Champandard. Semantic Style Transfer and Turning
arXiv:1603.01768

Two-Bit Doodles into Fine Artworks.
[cs], Mar. 2016. arXiv: 1603.01768.

[3] V. Dumoulin, J. Shlens, and M. Kudlur. A learned represen-

tation for artistic style. In Proc. ICLR, 2017.

[4] A. A. Efros and T. K. Leung. Texture synthesis by non-

parametric sampling. In Proc. ICCV, 1999.

[5] H. S. Faridul, T. Pouli, C. Chamaret, J. Stauder, E. Reinhard,
D. Kuzovkin, and A. Tremeau. Colour mapping: A review
of recent methods, extensions and applications. Computer
Graphics Forum, 35(1):59–88, 2016.

[6] J. Fiˇser, O. Jamriˇska, M. Luk´aˇc, E. Shechtman, P. Asente,
J. Lu, and D. S´ykora. Stylit: Illumination-guided example-
based stylization of 3d renderings. ACM Trans. Graph.,
35(4), July 2016.

[7] L. A. Gatys, A. S. Ecker, and M. Bethge. Texture Synthe-
sis Using Convolutional Neural Networks. In Advances in
Neural Information Processing Systems 28, 2015.

[8] L. A. Gatys, A. S. Ecker, and M. Bethge. Image Style Trans-
fer Using Convolutional Neural Networks. In Proc. CVPR,
2016.

[9] C. Han, E. Risser, R. Ramamoorthi, and E. Grinspun. Multi-

scale texture synthesis. ACM TOG, 27(3):51:1–51:8, 2008.

[10] D. J. Heeger and J. R. Bergen. Pyramid-based Texture Anal-
In Proceedings of the 22Nd Annual Con-
ysis/Synthesis.
ference on Computer Graphics and Interactive Techniques,
SIGGRAPH ’95, pages 229–238, New York, NY, USA,
1995. ACM.

[11] A. Hertzmann. Algorithms for Rendering in Artistic Styles.

PhD thesis, New York University, 2001.

[12] A. Hertzmann, C. E. Jacobs, N. Oliver, B. Curless, and D. H.
Salesin. Image Analogies. In Proc. SIGGRAPH, 2001.
[13] J. Johnson, A. Alahi, and L. Fei-Fei. Perceptual Losses for
Real-Time Style Transfer and Super-Resolution. In B. Leibe,
J. Matas, N. Sebe, and M. Welling, editors, Computer Vision
– ECCV 2016, number 9906 in Lecture Notes in Computer
Science, pages 694–711. Springer International Publishing,
Oct. 2016. DOI: 10.1007/978-3-319-46475-6 43.

[14] B. Julesz. Visual Pattern Discrimination. IRE Transactions

on Information Theory, 8(2), Feb. 1962.

[15] R. D. Kalnins, L. Markosian, B. J. Meier, M. A. Kowal-
ski, J. C. Lee, P. L. Davidson, M. Webb, J. F. Hughes, and
A. Finkelstein. Wysiwyg npr: Drawing strokes directly on
3d models. ACM Trans. Graph., 21(3), July 2002.

[16] C. Li and M. Wand. Combining markov random ﬁelds
and convolutional neural networks for image synthesis. In
Proc. CVPR, 2016.

[17] C. Li and M. Wand. Precomputed real-time texture syn-
thesis with markovian generative adversarial networks.
In
Proc. ECCV, 2016.

[18] P. O’Donovan and A. Hertzmann. Anipaint:

Interactive

painterly animation from video. IEEE TVCG, 18(3), 2012.

