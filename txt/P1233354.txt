A Knowledge-Grounded Neural Conversation Model*

Marjan Ghazvininejad1† Chris Brockett2 Ming-Wei Chang2‡
Jianfeng Gao2 Wen-tau Yih2§ Michel Galley2
Bill Dolan2

1Information Sciences Institute, USC
2Microsoft Research
ghazvini@fb.com, mgalley@microsoft.com

8
1
0
2
 
v
o
N
 
5
1
 
 
]
L
C
.
s
c
[
 
 
2
v
2
3
9
1
0
.
2
0
7
1
:
v
i
X
r
a

Abstract

Neural network models are capable of generating extremely
natural sounding conversational interactions. However, these
models have been mostly applied to casual scenarios (e.g.,
as “chatbots”) and have yet to demonstrate they can serve in
more useful conversational applications. This paper presents
a novel, fully data-driven, and knowledge-grounded neu-
ral conversation model aimed at producing more content-
ful responses. We generalize the widely-used Sequence-to-
Sequence (SEQ2SEQ) approach by conditioning responses
on both conversation history and external “facts”, allowing
the model to be versatile and applicable in an open-domain
setting. Our approach yields signiﬁcant improvements over
a competitive SEQ2SEQ baseline. Human judges found that
our outputs are signiﬁcantly more informative.

Introduction
Recent work has shown that conversational chatbot mod-
els can be trained in an end-to-end and completely data-
driven fashion, without hand-coding (Ritter, Cherry, and
Dolan 2011; Sordoni et al. 2015; Shang, Lu, and Li 2015;
Vinyals and Le 2015; Serban et al. 2016, inter alia). How-
ever, fully data-driven systems still lack grounding in the
real world and do not have access to external knowledge
(textual or structured), which makes it challenging for such
systems to respond substantively. Fig. 1 illustrates the difﬁ-
culty: while an ideal response would directly reﬂect on the
entities mentioned in the query (user input), neural models
produce responses that, while conversationally appropriate,
seldom include factual content. This contrasts with tradi-
tional dialog systems, which can readily inject entities and
facts into responses, but often at the cost of signiﬁcant hand-
coding. Slot-ﬁller dialog systems are hard put to come up
with a natural sounding utterance like the second response
in Fig. 1 in a manner that is generalizable and scalable.

The goal of this work is to beneﬁt from the versatility and
scalability of fully data-driven models, while simultaneously

*This work was conducted at Microsoft Research.
†Now at Facebook AI Research.
‡Now at Google AI Language.
§Now at Allen Institute for Artiﬁcial Intelligence.
Copyright c(cid:13) 2018, Association for the Advancement of Artiﬁcial
Intelligence (www.aaai.org). All rights reserved.

User input: Going to Kusakabe tonight.
Neural model: Have a great time!
Human: You’ll love it! Try omasake, the best in town.

Figure 1: Responses of fully data-driven conversation mod-
els are often appropriate, but generally lack content charac-
teristic of human responses.

seeking to produce models that are usefully grounded in ex-
ternal knowledge, permitting them to be deployed in, for ex-
ample, recommendation systems (e.g., for restaurants), and
to adapt quickly and easily to new domains. The objective
here is not task completion as in traditional dialog systems,
but the ability to engage a user in a relevant and informative
conversation. The tie to external data is critical, as the requi-
site knowledge is often not stored in conversational corpora.
Much of this information is not found in structured databases
either, but is textual, and can be mined from online resources
such as Wikipedia, book reviews on Goodreads, and restau-
rant reviews on Foursquare.

This paper presents a novel, fully data-driven, knowledge-
grounded neural conversation model aimed at produc-
ing contentful responses. Our framework generalizes the
Sequence-to-Sequence (SEQ2SEQ) approach (Hochreiter
and Schmidhuber 1997; Sutskever, Vinyals, and Le 2014)
of previous neural conversation models, as it naturally com-
bines conversational and non-conversational data via tech-
niques such as multi-task learning (Caruana 1997; Liu et
al. 2015). The key idea is that we can condition responses
not only based on conversation history (Sordoni et al. 2015),
but also on external “facts” that are relevant to the current

A: Looking forward to trying @pizzalibretto tonight! my expectations are high.
B: Get the rocco salad. Can you eat calamari?

A: Anyone in Chi have a dentist ofﬁce they recommend? I’m never going back to [...] and would love a reco!
B: Really looved Ora in Wicker Park.

A: I’m at California Academy of Sciences
B: Make sure you catch the show at the Planetarium. Tickets are usually limited.

A: I’m at New Wave Cafe.
B: Try to get to Dmitri’s for dinner. Their pan fried scallops and shrimp scampi are to die for.

A: I just bought: [...] 4.3-inch portable GPS navigator for my wife, shh, don’t tell her.
B: I heard this brand loses battery power.

Figure 2: Social media datasets include many contentful and useful exchanges, e.g., here recommendation dialog excerpts
extracted from real tweets. While previous models (e.g., SEQ2SEQ) succeed in learning the backbone of conversations, they
have difﬁculty modeling and producing contentful words such as named entities, which are sparsely represented in conversation
data. To help solve this issue, we rely on non-conversational texts, which represent such entities much more exhaustively.

context (for example, Foursquare entries as in Fig. 1). Our
approach only requires a way to infuse external information
based on conversation context (e.g., via simple entity name
matching), which makes it highly versatile and applicable
in an open-domain setting. Using this framework, we have
trained systems at a large scale using 23M general-domain
conversations from Twitter and 1.1M Foursquare tips, show-
ing signiﬁcant improvements in terms of informativeness
(human evaluation) over a competitive large-scale SEQ2SEQ
model baseline. To the best of our knowledge, this is the ﬁrst
large-scale, fully data-driven neural conversation model that
effectively exploits external knowledge.

Related Work
The present work situates itself within the data-driven
paradigm of conversation generation, in which statistical and
neural machine translation models are derived from con-
versational data (Ritter, Cherry, and Dolan 2011; Sordoni
et al. 2015; Serban et al. 2016; Shang, Lu, and Li 2015;
Vinyals and Le 2015; Li et al. 2016a). The introduction of
contextual models by (Sordoni et al. 2015) was an important
advance within this framework, and we extend their basic
approach by injecting side information from textual data. In-
troduction of side information has been shown to be beneﬁ-
cial to machine translation (Hoang, Cohn, and Haffari 2016),
as has also the incorporation of images into multi-modal
translation (Huang et al. 2016; Delbrouck, Dupont, and Sed-
dati 2017). Similarly, (He et al. 2017) employ a knowl-
edge graph to embed side information into dialog systems.
Multi-task learning can be helpful in tasks ranging from
query classiﬁcation to machine translation (Caruana 1997;
Dong et al. 2015; Liu et al. 2015; Luong et al. 2016). We
adopt this approach in order to implicitly encode relevant
external knowledge from textual data.

This work should be seen as distinct from more goal-
directed neural dialog modeling in which question-answer
slots are explicitly learned from small amounts of crowd-
sourced data, customer support logs, or user data (Wen et al.
2015; Wen et al. 2016; Wen et al. 2017; Zhao et al. 2017).
In many respects, that paradigm can be characterized as

the neural extension of conventional dialog models with or
without statistical modeling, e.g., (Oh and Rudnicky 2000;
Ratnaparkhi 2002; Banchs and Li 2012; Ameixa et al. 2014).
Our purpose is to explore the space of less clearly goal-
directed, but nonetheless informative (i.e., informational)
conversation that does not demand explicit slot-ﬁlling.

Also relevant is (Bordes and Weston 2017), who employ
memory networks to handle restaurant reservations, using a
small number of keywords to handle entity types in a struc-
tured knowledge base. Similarly (Liu and Perez 2017) use
memory networks to manage dialog state.

These works utilize datasets that are relatively small, and
unlikely to scale, whereas we leverage free-form text to draw
on datasets that are several orders of magnitude larger, al-
lowing us to cover a greater diversity of domains and forms
and thereby learn a more robust conversational backbone.

Grounded Response Generation
A primary challenge in building fully data-driven conver-
sation models is that most of the world’s knowledge is not
represented in any existing conversational datasets. While
these datasets (Serban et al. 2015) have grown dramatically
in size thanks in particular to social media (Ritter, Cherry,
and Dolan 2011), such datasets are still very far from con-
taining discussions of every entry in Wikipedia, Foursquare,
Goodreads, or IMDB. This problem considerably limits the
appeal of existing data-driven conversation models, as they
are bound to respond evasively or deﬂectively as in Fig. 1,
especially with regard to those entities that are poorly repre-
sented in the conversational training data. On the other hand,
even where conversational data representing most entities of
interest may exist, we would still face challenges as such
huge dataset would be difﬁcult to apply in model training,
and many conversational patterns exhibited in the data (e.g.,
for similar entities) would be redundant.

Our approach aims to avoid redundancy and attempts to
better generalize from existing conversational data, as illus-
trated in Fig. 2. While the conversations in the ﬁgure are
about speciﬁc venues, products, and services, conversational
patterns are general and equally applicable to other entities.

hi, how are you). More speciﬁcally, our multi-task setup con-
tains two types of tasks:
(1) one purely conversational, where we expose the model
without fact encoder to (S, R) training examples, S rep-
resenting the conversation history and R the response;

(2) the

other

task

exposes

the

full model with

({f1, . . . , fk, S}, R) training examples.

This decoupling of the two training conditions offers sev-
eral advantages, including: First, it allows us to pre-train
the conversation-only dataset separately, and start multi-task
training (warm start) with a dialog encoder and decoder that
already learned the backbone of conversations. Second, it
gives us the ﬂexibility to expose different kinds of conver-
sational data in the two tasks. Finally, one interesting option
is to replace the response in task (2) with one of the facts
(R = fi), which makes task (2) similar to an autoencoder
and helps produce responses that are even more contentful.

Dialog Encoder and Decoder
The dialog encoder and response decoder form together
a sequence-to-sequence (SEQ2SEQ model (Hochreiter and
Schmidhuber 1997; Sutskever, Vinyals, and Le 2014), which
has been successfully used in building end-to-end conversa-
tional systems (Sordoni et al. 2015; Vinyals and Le 2015;
Li et al. 2016a). Both encoder and decoder are recurrent neu-
ral network (RNN) models: an RNN that encodes a variable-
length input string into a ﬁxed-length vector representation
and an RNN that decodes the vector representation into a
variable-length output string. This part of our model is al-
most identical to prior conversational SEQ2SEQ models, ex-
cept that we use gated recurrent units (GRU) (Chung et al.
2014) instead of LSTM (Hochreiter and Schmidhuber 1997)
cells. Encoders and decoders in the present model do not
share weights or word embeddings.

Facts Encoder
The Facts Encoder of Fig. 3 is similar to the Memory Net-
work model ﬁrst proposed by (Weston, Chopra, and Bordes
2015; Sukhbaatar et al. 2015). It uses an associative mem-
ory for modeling the facts relevant to a particular problem—
in our case, an entity mentioned in a conversation–then re-
trieves and weights these facts based on the user input and
conversation history to generate an answer. Memory net-
work models have been successfully used in Question An-
swering to make inferences based on the facts saved in the
memory (Weston et al. 2016).

In our adaptation of memory networks, we use an RNN
encoder to turn the input sequence (conversation history)
into a vector, instead of a bag of words representation as used
in the original memory network models. This enables us
to better exploit interlexical dependencies between different
parts of the input, and makes this memory network model
(facts encoder) more directly comparable to a SEQ2SEQ
model.

More formally, we are given an input sentence S =
{s1, s2, ..., sn}, and a fact set F = {f1, f2, ..., fk} that are
relevant to the conversation history. The RNN encoder reads
the input string word by word and updates its hidden state.

Figure 3: Knowledge-grounded model architecture.

The learned conversational behaviors could be used to, e.g.,
recommend other products and services. A traditional dia-
log system would use predeﬁned slots to ﬁll conversational
backbone (bold text) with content; here, we present a more
robust and scalable approach.

In order to infuse the response with factual informa-
tion relevant
to the conversational context, we propose
the knowledge-grounded model architecture depicted in
Fig. 3. First, we have available a large collection of world
facts,1 which is a large collection of raw text entries (e.g.,
Foursquare, Wikipedia, or Amazon reviews) indexed by
named entities as keys. Then, given a conversational his-
tory or source sequence S, we identify the “focus” in S,
which is the text span (one or more entities) based on which
we form a query to link to the facts. This focus can ei-
ther be identiﬁed using keyword matching (e.g., a venue,
city, or product name), or detected using more advanced
methods such as entity linking or named entity recognition.
The query is then used to retrieve all contextually relevant
facts: F = {f1, ..., fk}.2 Finally, both conversation history
and relevant facts are fed into a neural architecture that fea-
tures distinct encoders for conversation history and facts. We
will detail this architecture in the subsections below.

This knowledge-grounded approach is more general than
SEQ2SEQ response generation, as it avoids the need to learn
the same conversational pattern for each distinct entity that
we care about. In fact, even if a given entity (e.g., @pizza-
libretto in Fig. 2) is not part of our conversational training
data and is therefore out-of-vocabulary, our approach is still
able to rely on retrieved facts to generate an appropriate re-
sponse. This also implies that we can enrich our system with
new facts without the need to retrain the full system.

We train our system using multi-task learning (Caruana
1997; Luong et al. 2016) as a way of combining conver-
sational data that is naturally associated with external data
(e.g., discussions about restaurants and other businesses as
in Fig. 2), and less informal exchanges (e.g., a response to

1For presentation purposes, we refer to these items as “facts”,
but a “fact” here is simply any snippet of authored text, which may
contain subjective or inaccurate information.

2In our work, we use a simple keyword-based IR engine to re-
trieve relevant facts from the full collection (see Datasets section).

After reading the whole input sentence the hidden state of
the RNN encoder, u is the summary of the input sentence.
By using an RNN encoder, we have a rich representation for
a source sentence.

Let us assume u is a d dimensional vector and ri is the
bag of words representation of fi with dimension v. Based
on (Sukhbaatar et al. 2015) we have:

mi = Ari
ci = Cri
pi = softmax(uT mi)

k
(cid:88)

o =

pici

i=1
ˆu = o + u

(1)
(2)

(3)

(4)

(5)
Where A, C ∈ Rd×v are the parameters of the memory net-
work. Then, unlike the original version of the memory net-
work, we use an RNN decoder that is good for generating the
response. The hidden state of the RNN is initialized with ˆu
which is a symmetrization of input sentence and the external
facts, to predict the response sentence R word by word.

As alternatives to summing up facts and dialog encod-
ings in equation 5, we also experimented with other opera-
tions such as concatenation, but summation seemed to yield
the best results. The memory network model of (Weston,
Chopra, and Bordes 2015) can be deﬁned as a multi-layer
structure. In this task, however, 1-layer memory network
was used, since multi-hop induction was not needed.

Datasets
The approach we describe above is quite general, and is ap-
plicable to any dataset that allows us to map named entities
to free-form text (e.g., Wikipedia, IMDB, TripAdvisor, etc.).
For experimental purposes, we utilize datasets derived from
two popular social media services: Twitter (conversational
data) and Foursquare (non-conversational data).

Foursquare: Foursquare tips are comments left by cus-
tomers about restaurants and other, usually commercial, es-
tablishments. A large proportion of these describe aspects of
the establishment, and provide recommendations about what
the customer enjoyed (or otherwise) We extracted from the
web 1.1M tips relating to establishments in North America.
This was achieved by identifying a set of 11 likely “foodie”
cities and then collecting tip data associated with zipcodes
near the city centers. While we targeted foodie cities, the
dataset is very general and contains tips applicable to many
types of local businesses (restaurants, theaters, museums,
stores, etc.) In the interests of manageability for experi-
mental purposes, we ignored establishments associated with
fewer than 10 tips, but other experiments with up to 50 tips
per venue yield comparable results. We limited the tips to
those for which Twitter handles were found in the Twitter
conversation data.

Twitter: We collected a 23M general dataset of 3-turn
conversations. This serves as a background dataset not asso-

ciated with facts, and its massive size is key to learning the
conversational structure or backbone.

Separately, on the basis of Twitter handles found in the
Foursquare tip data, we collected approximately 1 mil-
lion two-turn conversations that contain entities that tie to
Foursquare. We refer to this as the 1M grounded dataset.
Speciﬁcally, we identify conversation pairs in which the ﬁrst
turn contained either a handle of the business name (pre-
ceded by the “@” symbol) or a hashtag that matched a han-
dle.3 Because we are interested in conversations among real
users (as opposed to customer service agents), we removed
conversations where the response was generated by a user
with a handle found in the Foursquare data.

Grounded Conversation Datasets
We augment the 1M grounded dataset with facts (here
Foursquare tips) relevant to each conversation history. The
number of contextually relevant tips for some handles can
sometimes be enormous, up to 10k. To ﬁlter them for rele-
vance to the input, the system vectorizes the input (as tf-idf
weighted word counts) and each of the retrieved facts, and
calculates cosine similarity between the input sentence and
each of the tips and retains 10 tips with the highest score.

Furthermore, for a signiﬁcant portion of the 1M Twitter
conversations collected using handles found on Foursquare,
the last turn was not particularly informative, e.g., when it
provides a purely socializing response (e.g., have fun there).
As one of our goals is to evaluate conversational systems on
their ability to produce contentful responses, we select a dev
and test set (4k conversations in total) designed to contain
responses that are informative and useful.

For each handle, we created two scoring functions:

• Perplexity according to a 1-gram LM trained on all the

tips containing that handle.

• χ-square score, which measures how much content each
token bears in relation to the handle. Each tweet is then
scored according to the average content score of its terms.
In this manner, we selected 15k top-ranked conversations
using the LM score and 15k using the chi-square score.
A further 15k conversations were randomly sampled. We
then randomly sampled 10k conversations from these 45K
conversations. Crowdsourced human judges were then pre-
sented with these 10K sampled conversations and asked to
determine whether the response contained actionable infor-
mation, i.e., did they contain information that would permit
the respondents to decide, e.g., whether or not they should
patronize an establishment. From this, we selected the top-
ranked 4k conversations to be held out as validation set and
test set; these were removed from our training data.

Experimental Setup

Multi-Task Learning
We use multi-task learning with these tasks:

3This mechanism of linking conversations to facts using exact
match on the handle is high precision but low recall, but low re-
call seems reasonable as we are far from exhausting all available
Twitter and Foursquare data.

• FACTS

task: We

expose

the

full model

to

({f1, ..., fn, S}, R) training examples.

• NOFACTS task: We expose the model without fact en-

coder to (S, R) examples.

• AUTOENCODER task: This is similar to the FACTS task,
except that we replace the response with each of the facts,
i.e., this model is trained on ({f1, ..., fn, S}, fi) exam-
ples. There are n times many samples for this task than
for the FACTS task.4

The tasks FACTS and NOFACTS are representative of how
our model is intended to work, but we found that the AU-
TOENCODER tasks helps inject more factual content into the
response. The different variants of our multi-task learned
system exploit these tasks as follows:

• SEQ2SEQ: Trained on task NOFACTS with the 23M gen-
eral conversation dataset. Since there is only one task, it
is not per se a multi-task setting.

• MTASK: Trained on two instances of the NOFACTS
task, respectively with the 23M general dataset and 1M
grounded dataset (but without the facts). While not an in-
teresting system in itself, we include it to assess the effect
of multi-task learning separately from facts.

• MTASK-R: Trained on the NOFACTS task with the 23M
dataset, and the FACTS task with the 1M grounded
dataset.

• MTASK-F: Trained on the NOFACTS task with the 23M
dataset, and the AUTOENCODER task with the 1M dataset.

• MTASK-RF: Blends MTASK-F and MTASK-R, as it
incorporates 3 tasks: NOFACTS with the 23M general
dataset, FACTS with the 1M grounded dataset, and AU-
TOENCODER again with the 1M dataset.

We trained a one-layer memory network structure with
two-layer SEQ2SEQ models. More speciﬁcally, we used 2-
layer GRU models with 512 hidden cells for each layer
for encoder and decoder, the dimensionality of word em-
beddings is set to 512, and the size of input/output mem-
ory representation is 1024. We used the Adam optimizer
with a ﬁxed learning rate of 0.1. Batch size is set to 128.
All parameters are initialized from a uniform distribution in
[−(cid:112)3/d, (cid:112)3/d], where d is the dimension of the parameter.
Gradients are clipped at 5 to avoid gradient explosion.

Encoder and decoder use different sets of parameters. The
top 50k frequent types from conversation data is used as
vocabulary which is shared between both conversation and
non-conversation data. We use the same learning technique
as (Luong et al. 2016) for multi-task learning. In each batch,
all training data is sampled from one task only. For task i
we deﬁne its mixing ratio value of αi, and for each batch we
select randomly a new task i with probability of αi/(cid:80)
j αj
and train the system by its training data.

4This is akin to an autoencoder as the fact fi is represented both
in the input and output, but is of course not strictly an autoencoder.

Perplexity
General Data Grounded Data

Model

SEQ2SEQ
SEQ2SEQ-S

MTASK
MTASK-R
MTASK-F
MTASK-RF

55.0
125.7

57.2
55.1
77.3
67.2

214.4
82.6

82.5
77.6
448.8
97.7

Table 1: Perplexity of different models. SEQ2SEQ-S is a
SEQ2SEQ model that is trained on the NOFACTS task with
1M grounded dataset (without the facts).

Decoding and Reranking
We use a beam-search decoder similar to (Sutskever,
Vinyals, and Le 2014) with beam size of 200, and maxi-
mum response length of 30. Following (Li et al. 2016a), we
generate N -best lists containing three features: (1) the log-
likelihood log P (R|S, F ) according to the decoder; (2) word
count; (3) the log-likelihood log P (S|R) of the source given
the response. The third feature is added to deal with the is-
sue of generating commonplace and generic responses such
as I don’t know, which is discussed in detail in (Li et al.
2016a). Our models often do not need the third feature to
be effective, but—since our baseline needs it to avoid com-
monplace responses—we include this feature in all systems.
This yields the following reranking score:

log P (R|S, F ) + λ log P (S|R) + γ|R|

λ and γ are free parameters, which we tune on our devel-
opment N -best lists using MERT (Och 2003) by optimiz-
ing BLEU. To estimate P (S|R) we train a Sequence-to-
sequence model by swapping messages and responses. In
this model we do not use any facts.

Evaluation Metrics
Following (Sordoni et al. 2015; Li et al. 2016a; Wen et al.
2017), we use BLEU automatic evaluation. While (Liu et
al. 2016) suggest that BLEU correlates poorly with human
judgment at the sentence-level,5 we use instead corpus-level
BLEU, which is known to better correlate with human judg-
ments (Przybocki, Peterson, and Bronsart 2008), including
for response generation (Galley et al. 2015). We also report
perplexity and lexical diversity, the latter as a raw yet auto-
matic measure of informativeness and diversity. Automatic
evaluation is augmented with human judgments of appropri-
ateness and informativeness.

Results
Automatic Evaluation: We computed perplexity and
BLEU (Papineni et al. 2002) for each system. These are
shown in Tables 1 and 2 respectively. We notice that the

5This corroborates earlier ﬁndings that accurate sentence-level
automatic evaluation is indeed difﬁcult, even for Machine Transla-
tion (Graham, Baldwin, and Mathur 2015), as BLEU and related
metrics were originally designed as corpus-level metrics.

Diversity

Model

BLEU 1-gram 2-gram

SEQ2SEQ
MTASK

MTASK-F
MTASK-R
MTASK-RF

0.55
0.80

0.48
1.08
0.58

4.14% 14.4%
5.9%
2.35%

9.23% 26.6%
7.08% 21.9%
8.71% 26.0%

Table 2: BLEU-4 and lexical diversity.

SEQ2SEQ model speciﬁcally trained on general data has
high perplexity on grounded data.6 We observe that the per-
plexity of MTASK and MTASK-R models on both general
and grounded data is as low as the SEQ2SEQ models that
are trained speciﬁcally on general and grounded data respec-
tively. As expected, injecting more factual content into the
response in MTASK-F and MTASK-RF increased the per-
plexity especially on grounded data.

BLEU scores are low, but this is not untypical of con-
versational systems (e.g., (Li et al. 2016a; Li et al. 2016b)).
Table 2 shows that the MTASK-R model yields a signiﬁcant
performance boost, with a BLEU score increase of 96% and
71% jump in 1-gram diversity compared to the competitive
SEQ2SEQ baseline. In terms of BLEU scores, MTASK-RF
improvements is not signiﬁcant, but it generates the highest
1-gram and 2-gram diversity among all models.

Human Evaluation: We crowdsourced human evalua-
tions. We had annotators judge 500 randomly-interleaved
paired conversations, asking them which was better on two
parameters: appropriateness to the context, and informative-
ness. The crowd workers were instructed to: Decide which
response is more appropriate, i.e., which is the best conver-
sational ﬁt with what was said. Then decide which of the
two is more informative (i.e., knowledgeable, helpful, spe-
ciﬁc) about the establishment under discussion. Judges were
asked to select among Clearly#1, Maybe #Number 1, About
the Same, Maybe #2, and Clearly #2. These were converted
to scores between 1 and 0, and assigned to the pair mem-
bers depending on the order in which the pair was presented.
Seven judges were assigned to each pair.7

The results of annotation are shown in Table 3. Our pri-
mary system MTASK-R, which performed best on BLEU,
signiﬁcantly outperforms the SEQ2SEQ baseline on In-
formativeness (p = 0.003) and shows a small, but non-
statistically-signiﬁcant gain with respect Appropriateness.
Other systems are included in the table for completeness.
The “vanilla” MTASK shows no signiﬁcant gain in Infor-
mativeness. MTASK-F performed signiﬁcantly better than
baseline (p = 0.005) on Informativeness, but was signif-
icantly worse on Appropriateness. MTASK-RF came in
slightly better than baseline on Informativeness but worse

6Training the system on just 1M grounded data with FACTS
doesn’t solve this problem, as its perplexity on general data is also
high (not in table).

7Annotators whose variance fell greater than two standard de-

viations from the mean variance were dropped.

Figure 4: Judge preference counts (appropriateness) for
MTASK-R versus SEQ2SEQ.

Figure 5: Judge preference counts (informativeness) for
MTASK-R versus SEQ2SEQ.

on Appropriateness, though in neither case is the differ-
ence statistically signiﬁcant by the conventional standard of
α = 0.05. In sum, our best performing MTASK-R system
appears to have successfully balanced the needs of informa-
tiveness and maintaining contextual appropriateness.

The narrow differences in averages in Table 3 tend to ob-
fuscate the judges’ voting trends. To clarify the picture, we
translated the scores into the ratio of judges who preferred
that system and binned the counts. Figs. 4 and 5 compare
MTASK-R with the SEQ2SEQ baseline. Bin 7 on the left
corresponds to the case where all 7 judges “voted” for the
system, bin 6 to that where 6 out of 7 judges “voted” for the
system, and so on.8 Other bins are not shown since these are
a mirror image of bins 7 through 4. The distributions in Fig.
5 are sharper and more distinctive than in Fig. 4. indicating
that judge preference for the MTASK-R model is relatively
stronger when it comes to informativeness.

Discussion
Figure 6 presents examples from the MTASK-RF model,
and illustrates that our responses are generally both ap-
propriate and informative. First, we note that our models
preserve the ability of earlier work (Sordoni et al. 2015;
Vinyals and Le 2015) to respond contextually and appro-
priately on a variety of topics, with responses such as me too
(1) and have a safe ﬂight (2). Second, our grounded models

8Partial scores were rounded up, affecting both systems equally.

Comparison

Informativeness

Appropriateness

SEQ2SEQ vs MTASK
SEQ2SEQ vs MTASK-F
SEQ2SEQ vs MTASK-RF

0.501 ±0.016
0.478 ±0.015
0.492 ±0.013

0.499 ±0.015
0.522 ±0.015
0.508 ±0.013

0.530 ±0.017
0.537 ±0.016
0.502 ±0.015

0.470 ±0.017
0.463 ±0.017
0.498 ±0.014

SEQ2SEQ vs MTASK-R (*)

0.479 ±0.017

0.521 ±0.013

0.495 ±0.015

0.505 ±0.015

Table 3: Mean differences in judgments in human evaluation, together with 95% conﬁdence intervals. Differences sum to 1.0.
Boldface items are signiﬁcantly better (p <0.05) than their comparator. (*): Main system, pre-selected on the basis of BLEU.

A: I would give ALMOST anything for some [Mexican restaurant] right now.
B: Me too. Creamy jalapeno sauce is really good.

A: Visiting the celebs at Los Angeles International Airport (LAX) - [...] w/ 70 others
B: Nice airport terminal. Have a safe ﬂight.

A: Obsessed with [jewelry company] :-*
B: oh my gosh obsessed with their bracelets and the meaning behind them !

A: Live right now on [FM radio] Tune in!!!!!
B: Listen to Lisa Paige

A: Is that [...] in your photos? It’s on my list of places to visit in NYC.
B: Don’t forget to check out the 5th ﬂoor, while you are here, it’s a great view.

A: Are you [coworking community] today or tomorrow?
B: I think so. Try the cookies and coffee.

A: Cant wait for my [pizzeria] tonight
B: Order bacon n pepperoni thin crust pizza.

1

2

3

4

5

6

7

8

9

A: So [...] is down to one copy of Pound Foolish. I’m curious to see if they are re-ordering it.
B: Check out the video feed on 6 and take a picture of the Simpsons on the 3rd ﬂoor.

A: I wish [...] would introduce another vegetarian option besides the shroomburger. It’s delicious but kind of ridiculous.
B: This is the best j.crew in the world. Try the lemonade!

10 A: Just had an awesome dinner at [restaurant] Great recommendation [person]

B: One of my favorite places I’ve ever been to in NYC. The food is great and the service is lackluster.

Figure 6: Responses produced by our neural response generation system MTASK-RF. Entities marked [...] are anonymized.

often incorporate information emerging from “facts”, while
usually keeping the responses contextually appropriate. For
example in (3), those facts revolve mostly around jewelry
such as bracelets, which leads the system to respond ob-
sessed with their bracelets and the meaning behind them,
while meaning behind them does not belong to any of the
facts and is instead “inferred” by the model (which asso-
ciates jewelry with sentimental value). Responses inﬂuenced
mostly by facts may occasionally contain a single unedited
fact (4-5), but otherwise generally combine text from dif-
ferent facts (6-8).9 Examples 9 and 10 are negative exam-
ples that illustrate the two main causes of system errors: the
presence of an irrelevant fact (e.g., j.crew in example 9),
and the system combining self-contradictory facts (10). De-
spite such errors, judges found that our best grounded sys-
tem is generally on par with the SEQ2SEQ system in terms
of appropriateness, while signiﬁcantly improving informa-

9Facts: grab a cup of coffee and get productive and try the cook-
ies in the vending machine of local food (6); sit with and take a
picture of the Simpsons on the 3rd ﬂoor and Check out the video
feed on 6 and Simpsons/billiards on 3! (8).

tiveness (Table 3).

Conclusions
We have presented a novel knowledge-grounded conversa-
tion engine that could serve as the core component of a
multi-turn recommendation or conversational QA system.
The model is a large-scale, scalable, fully data-driven neural
conversation model that effectively exploits external knowl-
edge, and does so without explicit slot ﬁlling. It generalizes
the SEQ2SEQ approach to neural conversation models by
naturally combining conversational and non-conversational
data through multi-task learning. Our simple entity match-
ing approach to grounding external information based on
conversation context makes for a model that is informative,
versatile and applicable in open-domain systems.

Acknowledgements
We thank Xuetao Yin and Leon Xu for helping us obtain
Foursquare data, and Kevin Knight, Chris Quirk, Nebojsa
Jojic, Lucy Vanderwende, Vighnesh Shiv, Yi Luan, John Wi-
eting, Alan Ritter, Donald Brinkman, and Puneet Agrawal.

2014.

References
[Ameixa et al. 2014] Ameixa, D.; Coheur, L.; Fialho, P.; and
Quaresma, P. 2014. Luke, I am your father: dealing with out-
of-domain requests by using movies subtitles. In Intelligent
Virtual Agents.
[Banchs and Li 2012] Banchs, R. E., and Li, H. 2012. IRIS:
a chat-oriented dialogue system based on the vector space
model. ACL.
[Bordes and Weston 2017] Bordes, A., and Weston, J. 2017.
Learning end-to-end goal-oriented dialog. ICLR 2017.
[Caruana 1997] Caruana, R. 1997. Multitask learning. Ma-
chine Learning 28(1):41–75.
[Chung et al. 2014] Chung, J.; G¨ulc¸ehre, C¸ .; Cho, K.; and
Bengio, Y.
Empirical evaluation of gated re-
current neural networks on sequence modeling. CoRR
abs/1412.3555.
J.-B.;
[Delbrouck, Dupont, and Seddati 2017] Delbrouck,
Dupont, S.; and Seddati, O.
2017. Visually grounded
word embeddings and richer visual features for improving
In Grounding
multimodal neural machine translation.
Language Understanding workshop.
[Dong et al. 2015] Dong, D.; Wu, H.; He, W.; Yu, D.; and
Wang, H. 2015. Multi-task learning for multiple language
translation. ACL.
[Galley et al. 2015] Galley, M.; Brockett, C.; Sordoni, A.; Ji,
Y.; Auli, M.; Quirk, C.; Mitchell, M.; Gao, J.; and Dolan, B.
2015. deltaBLEU: A discriminative metric for generation
tasks with intrinsically diverse targets. ACL-IJCNLP.
[Graham, Baldwin, and Mathur 2015] Graham, Y.; Baldwin,
T.; and Mathur, N. 2015. Accurate evaluation of segment-
level machine translation metrics. NAACL.
[He et al. 2017] He, H.; Balakrishnan, A.; Eric, M.; and
Liang, P. 2017. Learning symmetric collaborative dialogue
agents with dynamic knowledge graph embeddings. ACL.
[Hoang, Cohn, and Haffari 2016] Hoang, C. D. V.; Cohn, T.;
and Haffari, G. 2016. Incorporating side information into
recurrent neural network language models. NAACL-HLT.
[Hochreiter and Schmidhuber 1997] Hochreiter,
and
Schmidhuber, J. 1997. Long short-term memory. Neural
computation 9(8):1735–1780.
[Huang et al. 2016] Huang, P.-Y.; Liu, F.; Shiang, S.-R.; Oh,
J.; and Dyer, C. 2016. Attention-based multimodal neural
machine translation. WMT.
[Li et al. 2016a] Li, J.; Galley, M.; Brockett, C.; Gao, J.; and
Dolan, B. 2016a. A diversity-promoting objective function
for neural conversation models. NAACL-HLT.
[Li et al. 2016b] Li, J.; Galley, M.; Brockett, C.; Gao, J.; and
Dolan, B. 2016b. A persona-based neural conversation
model. ACL.
[Liu and Perez 2017] Liu, F., and Perez, J. 2017. Dialog
state tracking, a machine reading approach using memory
network. EACL.
[Liu et al. 2015] Liu, X.; Gao, J.; He, X.; Deng, L.; Duh, K.;
and Wang, Y.-Y. 2015. Representation learning using multi-

S.,

task deep neural networks for semantic classiﬁcation and in-
formation retrieval. NAACL-HLT.
[Liu et al. 2016] Liu, C.-W.; Lowe, R.; Serban, I.; Nosewor-
thy, M.; Charlin, L.; and Pineau, J. 2016. How NOT to eval-
uate your dialogue system: An empirical study of unsuper-
vised evaluation metrics for dialogue response generation.
EMNLP.
[Luong et al. 2016] Luong, M.-T.; Le, Q. V.; Sutskever, I.;
Vinyals, O.; and Kaiser, L. 2016. Multi-task sequence to
sequence learning. ICLR.
[Och 2003] Och, F. J. 2003. Minimum error rate training in
statistical machine translation. ACL.
[Oh and Rudnicky 2000] Oh, A. H., and Rudnicky, A. I.
2000. Stochastic language generation for spoken dialogue
systems. ANLP/NAACL Workshop on Conversational sys-
tems.
[Papineni et al. 2002] Papineni, K.; Roukos, S.; Ward, T.;
and Zhu, W.-J. 2002. BLEU: a method for automatic evalu-
ation of machine translation. ACL.
[Przybocki, Peterson, and Bronsart 2008] Przybocki, M.;
Peterson, K.; and Bronsart, S. 2008. Ofﬁcial results of the
NIST 2008 metrics for machine translation challenge.
In
MetricsMATR08 workshop.
[Ratnaparkhi 2002] Ratnaparkhi, A. 2002. Trainable ap-
proaches to surface natural language generation and their
application to conversational dialog systems. Computer
Speech & Language 16(3):435–455.
[Ritter, Cherry, and Dolan 2011] Ritter, A.; Cherry, C.; and
Dolan, W. B. 2011. Data-driven response generation in so-
cial media. EMNLP.
[Serban et al. 2015] Serban, I. V.; Lowe, R.; Charlin, L.; and
Pineau, J. 2015. A survey of available corpora for building
data-driven dialogue systems. CoRR abs/1512.05742.
[Serban et al. 2016] Serban, I. V.; Sordoni, A.; Bengio, Y.;
Courville, A.; and Pineau, J. 2016. Building end-to-end dia-
logue systems using generative hierarchical neural network
models. AAAI.
[Shang, Lu, and Li 2015] Shang, L.; Lu, Z.; and Li, H. 2015.
Neural responding machine for short-text conversation.
ACL-IJCNLP.
[Sordoni et al. 2015] Sordoni, A.; Galley, M.; Auli, M.;
Brockett, C.; Ji, Y.; Mitchell, M.; Nie, J.-Y.; Gao, J.; and
Dolan, B. 2015. A neural network approach to context-
sensitive generation of conversational responses. NAACL-
HLT.
[Sukhbaatar et al. 2015] Sukhbaatar, S.; Weston, J.; Fergus,
R.; et al. 2015. End-to-end memory networks. NIPS.
[Sutskever, Vinyals, and Le 2014] Sutskever, I.; Vinyals, O.;
and Le, Q. V. 2014. Sequence to sequence learning with
neural networks. NIPS.
[Vinyals and Le 2015] Vinyals, O., and Le, Q. 2015. A neu-
ral conversational model. ICML Deep Learning Workshop.
[Wen et al. 2015] Wen, T.-H.; Gasic, M.; Mrkˇsi´c, N.; Su, P.-
H.; Vandyke, D.; and Young, S. 2015. Semantically condi-

tioned LSTM-based natural language generation for spoken
dialogue systems. EMNLP.
[Wen et al. 2016] Wen, T.-H.; Gaˇsi´c, M.; Mrkˇsi´c, N.; Rojas-
Barahona, L. M.; Su, P.-H.; Vandyke, D.; and Young, S.
2016. Multi-domain neural network language generation for
spoken dialogue systems. NAACL-HLT.
[Wen et al. 2017] Wen, T.-H.; Miao, Y.; Blunsom, P.; and
Young, S. 2017. Latent intent dialog models. ICML.
[Weston et al. 2016] Weston, J.; Bordes, A.; Chopra, S.;
Rush, A. M.; van Merri¨enboer, B.; Joulin, A.; and Mikolov,
T. 2016. Towards AI-complete question answering: A set of
prerequisite toy tasks. ICLR.
[Weston, Chopra, and Bordes 2015] Weston, J.; Chopra, S.;
and Bordes, A. 2015. Memory networks. ICLR.
[Zhao et al. 2017] Zhao, T.; Lu, A.; Lee, K.; and Eskenazi,
M. 2017. Generative encoder-decoder models for task-
oriented spoken dialog systems with chatting capability.
ACL.

