Variational Sequential Monte Carlo

8
1
0
2
 
b
e
F
 
1
2
 
 
]
L
M

.
t
a
t
s
[
 
 
2
v
0
4
1
1
1
.
5
0
7
1
:
v
i
X
r
a

Christian A. Naesseth
Linköping University

Scott W. Linderman
Columbia University

Rajesh Ranganath
New York University

David M. Blei
Columbia University

Abstract

Many recent advances in large scale probabilistic
inference rely on variational methods. The suc-
cess of variational approaches depends on (i) for-
mulating a ﬂexible parametric family of distri-
butions, and (ii) optimizing the parameters to
ﬁnd the member of this family that most closely
approximates the exact posterior. In this paper
we present a new approximating family of distri-
butions, the variational sequential Monte Carlo
(VSMC) family, and show how to optimize it in
variational inference. VSMC melds variational in-
ference (VI) and sequential Monte Carlo (SMC),
providing practitioners with ﬂexible, accurate,
and powerful Bayesian inference. The VSMC fam-
ily is a variational family that can approximate
the posterior arbitrarily well, while still allow-
ing for efﬁcient optimization of its parameters.
We demonstrate its utility on state space models,
stochastic volatility models for ﬁnancial data, and
deep Markov models of brain neural circuits.

1

Introduction

Complex data like natural images, text, and medical records
require sophisticated models and algorithms. Recent ad-
vances in these challenging domains have relied upon varia-
tional inference (VI) [Kingma and Welling, 2014, Hoffman
et al., 2013, Ranganath et al., 2016a]. Variational infer-
ence excels in quickly approximating the model posterior,
yet these approximations are only useful insofar as they
are accurate. The challenge is to balance faithful posterior
approximation and fast optimization.

We present a new approximating family of distributions
called variational sequential Monte Carlo (VSMC). VSMC
blends VI and sequential Monte Carlo (SMC) [Stewart and
McCarty, 1992, Gordon et al., 1993, Kitagawa, 1996], pro-

Proceedings of the 21st International Conference on Artiﬁcial Intel-
ligence and Statistics (AISTATS) 2018, Lanzarote, Spain. PMLR:
Volume 84. Copyright 2018 by the author(s).

viding practitioners with a ﬂexible, accurate, and powerful
approximate Bayesian inference algorithm. VSMC is an efﬁ-
cient algorithm that can approximate the posterior arbitrarily
well.

Standard SMC approximates a posterior distribution of latent
variables with N weighted particles iteratively drawn from
a proposal distribution. The idea behind variational SMC is
to view the parameters of the proposal as indexing a family
of distributions over latent variables. Each distribution in
this variational family corresponds to a particular choice of
proposal; to sample the distribution, we run SMC to generate
a set of particles and then randomly select one with proba-
bility proportional to its weight. Unlike typical variational
families, the VSMC family trades off ﬁdelity to the posterior
with computational complexity: its accuracy increases with
the number of particles N , but so does its computational
cost.

We develop the VSMC approximating family, derive its cor-
responding variational lower bound, and design a stochastic
gradient ascent algorithm to optimize its parameters. We
connect VSMC to the importance weighted auto-encoder
(IWAE) [Burda et al., 2016] and show that the IWAE lower
bound is a special case of the VSMC bound. As an illustra-
tion, consider approximating the following posterior with
latent variables x1:T and observations y1:T ,

p(x1:T | y1:T ) =

N (xt ; 0, 1) N (yt ; x2

t , 1)/p(y1:T ).

T
(cid:89)

t=1

This is a toy Gaussian state space model (SSM) where the
observed value at each time step depends on the square
of the latent state. Figure 1c shows the approximating
power of VSMC versus that of the IWAE and of standard
variational Bayes (VB). As the length of the sequence T
increases, naïve importance sampling effectively collapses
to use only a single particle. VSMC on the other hand main-
tains a diverse set of particles and thereby achieves a signif-
icantly tighter lower bound of the log-marginal likelihood
log p(y1:T ).

We focus on inference in state space and time series models,
but emphasize that VSMC applies to any sequence of prob-
abilistic models, just like standard SMC [Del Moral et al.,
2006, Doucet and Johansen, 2009, Naesseth et al., 2014].

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

Figure 1: Comparing VSMC and the IWAE. (a) VSMC constructs a weighted set of particle trajectories using SMC and then
samples one according to the ﬁnal weight. Here, the size of the dot is proportional to the weight, wi
t; the gray arrows denote
the ancestors, ai
t−1; and the blue arrows denote the chosen path, b1:T . (b) IWAE does the same, but without resampling. This
leads to particle degeneracy as time increases—only one particle has nonneglible weight at time T . (c) The ELBO suffers
from this degeneracy: all are comparable when T is small, but as time increases the IWAE provides minimal improvement
over standard VB, whereas VSMC still achieves nearly the true marginal likelihood.

In Section 5, we demonstrate the advantages of VSMC on
both simulated and real data. First, we show on simulated
linear Gaussian SSM data that VSMC can outperform the
(locally) optimal proposal [Doucet et al., 2001, Doucet and
Johansen, 2009]. Then we compare VSMC with IWAE for
a stochastic volatility model on exchange rates from ﬁnan-
cial markets. We ﬁnd that VSMC achieves better posterior
inferences and learns more efﬁcient proposals. Finally, we
study recordings of macaque monkey neurons using a prob-
abilistic model based on recurrent neural networks. VSMC
reaches the same accuracy as IWAE, but does so with less
computation.

Related Work Much effort has been dedicated to learn-
ing good proposals for SMC [Cornebise, 2009]. Guarniero
et al. [2017] adapt proposals through iterative reﬁnement.
Naesseth et al. [2015] uses a Monte Carlo approximation
to the (locally) optimal proposal [Doucet and Johansen,
2009]. Gu et al. [2015] learn proposals by minimizing the
Kullback-Leibler (KL) from the posterior to proposal using
SMC samples; this strategy can suffer from high variance
when the initial SMC proposal is poor. Paige and Wood
[2016] learn proposals by forward simulating and inverting
the model. In contrast to all these methods, VSMC optimizes
the proposal directly with respect to KL divergence from
the SMC sampling process to the posterior.

VSMC uses auxillary variables in a posterior approximation.
This relates to work in VI, such as Hamiltonian VI [Sal-
imans et al., 2015], variational Gaussian processes [Tran
et al., 2016], hierarchical variational models [Ranganath
et al., 2016b], and deep auxiliary variational auto-encoders
[Maaløe et al., 2016]. Another approach uses a sequence of
invertible functions to transform a simple variational approx-
imation to a complex one [Rezende and Mohamed, 2015,
Dinh et al., 2014]. All of these rich approximations can be
embedded inside VSMC to build more ﬂexible proposals.

Archer et al. [2015], Johnson et al. [2016] develop varia-
tional inference for state space models with conjugate dy-
namics, while Krishnan et al. [2017] develop variational
approximations for models with nonlinear dynamics and
additive Gaussian noise. In contrast, VSMC is agnostic to
the distributional choices in the dynamics and noise.

Importance weighted auto-encoders [Burda et al., 2016]
obtain the same lower bound as variational importance sam-
pling (VIS), a special case of VSMC. However, VIS provides
a new interpretation that enables a more accurate variational
approximation; this relates to another interpretation of IWAE
by Cremer et al. [2017], Bachman and Precup [2015]. Vari-
ational particle approximations [Saeedi et al., 2014] also
provide variational approximation that improve with the
number of particles, but they are restricted to discrete latent
variables.

Finally, the log-marginal likelihood lower bound (6) was
developed concurrently and independently by Maddison
et al. [2017] and Le et al. [2017]. The difference with our
work lies in how we derive the bound and the implications
we explore. Maddison et al. [2017], Le et al. [2017] derive
the bound using Jensen’s inequality on the SMC expected
log-marginal likelihood estimate, focusing on approximate
marginal likelihood estimation of model parameters. Rather,
we derive (6) as a tractable lower bound to the exact evi-
dence lower bound (ELBO) for the new variational family
VSMC. In addition to a lower bound on the log-marginal like-
lihood, this view provides a new variational approximation
to the posterior.

2 Background

We begin by introducing the foundation for variational se-
quential Monte Carlo (VSMC). Let p(x1:t, y1:t) be a se-
quence of probabilistic models for latent (unobserved) x1:t

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

and data y1:t, with t = 1, . . . , T .
In Bayesian infer-
ence, we are interested in computing the posterior distri-
bution p(x1:T | y1:T ). Two concrete examples, both from
the time-series literature, are hidden Markov models and
state space models [Cappé et al., 2005]. In both cases, the
joint density factorizes as

p(x1:T , y1:T ) = f (x1)

f (xt | xt−1)

g(yt | xt),

T
(cid:89)

t=2

T
(cid:89)

t=1

where f is the prior on x, and g is the observation (data)
distribution. For most models computing the posterior
p(x1:T | y1:T ) is computationally intractable, and we need
approximations such as VI and SMC. Here we construct
posterior approximations that combine these two ideas.

In the following sections, we review variational inference
and sequential Monte Carlo, develop a variational approxi-
mation based on the samples generated by SMC, and develop
a tractable objective to improve the quality of the SMC vari-
ational approximation. For concreteness, we focus on the
state space model above. But we emphasize that VSMC
applies to any sequence of probabilistic models, just like
standard SMC [Del Moral et al., 2006, Doucet and Johansen,
2009, Naesseth et al., 2014].

Variational Inference
In variational inference we postu-
late an approximating family of distributions with varia-
tional parameters λ, q(x1:T ; λ). Then we minimize a diver-
gence, often the KL divergence, between the approximating
family and the posterior so that q(x1:T ; λ) ≈ p(x1:T | y1:T ).
This minimization is equivalent to maximizing the ELBO
[Jordan et al., 1999],

L(λ) = Eq(x1:T ;λ) [log p(x1:T , y1:T ) − log q(x1:T ; λ)] .

(1)

VI turns posterior inference into an optimization problem.

Sequential Monte Carlo
SMC is a sampling method
designed to approximate a sequence of distributions,
p(x1:t | y1:t) for t = 1 . . . T with special emphasis on the
posterior p(x1:T | y1:T ). For a thorough introduction to SMC
see Doucet and Johansen [2009], Doucet et al. [2001], Schön
et al. [2015].

To approximate p(x1:t | y1:t) SMC uses weighted samples,

p(x1:t | y1:t) ≈ (cid:98)p(x1:t | y1:t) (cid:44)

δxi

1:t

,

(2)

N
(cid:88)

i=1

wi
t
(cid:96) w(cid:96)
t

(cid:80)

where δX is the Dirac measure at X.

We construct the weighted set of particles sequentially for
t = 1, . . . , T . At time t = 1 we use standard importance
sampling xi
1 ∼ r(x1). For t > 1, we start each step by
resampling auxiliary ancestor variables ai
t−1 ∈ {1, . . . , N }

with probability proportional to the importance weights
wj
t−1; next we propose new values, append them to the end
of the trajectory, and reweight as follows:

t−1/(cid:80)

(cid:96) w(cid:96)

t−1)

resample

propose

append

reweight

ai
t−1 ∼ Categorical(wj
xi
t ∼ r(xt | x

t−1

ai
t−1 ),
ai
1:t−1, xi
ai
t−1 ) g(yt | xi

t),

t−1

t−1

t | x

xi
1:t = (x

wi

t = f (xi

t)/r(xi

t | x

ai
t−1 ).

t−1

We refer to the ﬁnal particles (samples) xi
1:T as trajectories.
Panels (a) and (b) of Figure 1 show sets of weighted trajecto-
ries. The size of the dots represents the weights wi
t and the
arrows represent the ancestors ai
t−1. Importance sampling
omits the resampling step, so each ancestor is given by the
corresponding particle for the preceding time step.

1:T and weights wi
The trajectories xi
T deﬁne the SMC ap-
proximation to the posterior. Critically, as we increase the
number of particles, the posterior approximation becomes
arbitrarily accurate. SMC also yields an unbiased estimate
of the marginal likelihood,

(cid:98)p(y1:T ) =

T
(cid:89)

N
(cid:88)

1
N

t=1

i=1

wi
t.

(3)

This estimate will play an important role in the VSMC ob-
jective.

The proposal distribution r(xt | xt−1) is the key design
choice. A common choice is the model prior f —it is known
as the bootstrap particle ﬁlter (BPF) [Gordon et al., 1993].
However, proposing from the prior often leads to a poor
approximation for a small number of particles, especially
if xt is high-dimensional. Variational SMC addresses this
shortcoming; it learns parameterized proposal distributions
for efﬁcient inference.

3 Variational Sequential Monte Carlo

We develop VSMC, a new class of variational approxima-
tions based on SMC. We ﬁrst deﬁne how to sample from the
VSMC family and then derive its distribution. Though gener-
ating samples is straightforward, the density is intractable.
To this end, we derive a tractable objective, a new lower
bound to the ELBO, that is amenable to stochastic optimiza-
tion. Then, we present an algorithm to ﬁt the variational
parameters. Finally, we explore how to learn model parame-
ters using variational expectation-maximization.

To sample from the VSMC family, we run SMC (with the
proposals parameterized by variational parameters λ) and
then sample once from the empirical approximation of the
posterior (2). Because the proposals r(xt | xt−1 ; λ) depend
on λ, so does the SMC empirical approximation. Algorithm 1
summarizes the generative process for the VSMC family.

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

Algorithm 1 Variational Sequential Monte Carlo

Require: Targets p(x1:t, y1:t), proposals r(xt | xt−1 ; λ),

and number of particles N .

1 from r(x1 ; λ)
1) g(y1 | xi
1)/r(xi

1 ;λ)

1: for i = 1 . . . N do
Simulate xi
2:
Set wi
3:
4: end for
5: for t = 2 . . . T do
6:

1 = f (xi

for i = 1 . . . N do
Simulate ai

7:

8:

9:

wj
t−1
(cid:96) w(cid:96)

(cid:80)

t−1

t−1 with Pr(ai
t−1 = j) =
ai
t−1 ; λ)

t−1

t−1

t from r(xt | x
ai
1:t−1, xi
t)
ai
t−1 ) g(yt | xi
t | x

t−1

Simulate xi
Set xi

1:t = (x
t = f (xi

t)/r(xi

t | x

ai
t−1
t−1 ;λ)

Set wi
end for

10:
11:
12: end for
13: Simulate bT with Pr(bT = j) = wj
14: return x1:T (cid:44) xbT
1:T

T/(cid:80)

(cid:96) w(cid:96)

T

The variational distribution q(x1:T ; λ) marginalizes out all
the variables produced in the sampling process, save for the
output sample x1:T . This marginal comes from the joint
distribution of all variables generated by VSMC,

(cid:101)φ(x1:N

1:T , a1:N

1:T −1, bT ; λ) =

r(xi

1 ; λ)

·

(cid:20) N
(cid:89)

i=1

(cid:124)

(cid:123)(cid:122)
step 2

(cid:21)

(cid:125)

T
(cid:89)

N
(cid:89)

·

t=2

i=1

(cid:20) w
(cid:80)

ai
t−1
t−1
(cid:96) w(cid:96)
(cid:123)(cid:122)
step 7

(cid:124)

t−1
(cid:125)

(cid:124)

r(xi

t | x

t−1

(cid:21)
ai
t−1 ; λ)
(cid:123)(cid:122)
step 8

(cid:125)

(cid:20) wbT
T
(cid:80)
(cid:96) w(cid:96)
T
(cid:123)(cid:122)
step 13

(cid:124)

(cid:21)

(cid:125)

.

(4)

(We have annotated this equation with the steps from the
algorithm.) In this joint, the ﬁnal output sample is deﬁned by
extracting the bT -th trajectory x1:T = xbT
1:T . Note that the
data y1:T enter via the weights and (optionally) the proposal
distribution. This joint density is easy to calculate, but
for variational inference we need the marginal distribution
of x1:T . We derive this next.
Let bt (cid:44) abt+1
for t ≤ T − 1 denote the ancestors for
the trajectory x1:T returned by Algorithm 1. Furthermore,
let ¬b1:T be all particle indices not equal to (b1, . . . , bT ),
i.e. exactly all the particles that were not returned by Algo-
rithm 1. Then the marginal distribution of x1:T = xb1:T
1:T =
(xb1
T ) is given by the following proposition.

2 , . . . , xbT

1 , xb2

t

Proposition 1. The VSMC approximation on x1:T is

q(x1:T | y1:T ; λ)
= p(x1:T , y1:T ) E
(cid:101)φ

(cid:16)

x¬b1:T
1:T

,a

¬b1:T −1
1:T −1

(cid:98)p(y1:T )−1(cid:3) . (5)
(cid:2)

(cid:17)

;λ

Proof. See the supplementary material A.1.

This has an intuitive form: the density of the variational pos-
terior is equal to the exact joint times the expected inverse
of the normalization constant (c.f. (3)). While we can esti-
mate this expectation with Monte Carlo, it yields a biased
estimate of log q(x1:T | y1:T ; λ) and the ELBO (1).

The surrogate ELBO. To derive a tractable objective, we
develop a lower bound to the ELBO that is also amenable to
stochastic optimization. It is

(cid:101)L(λ) (cid:44)

T
(cid:88)

E

t=1

(cid:101)φ(x1:N

1:t ,a1:N

1:t−1 ;λ)

(cid:34)

(cid:32)

log

(cid:33)(cid:35)

1
N

N
(cid:88)

i=1

wi
t

= E [log (cid:98)p(y1:T )]

(6)

We call (cid:101)L(λ) the surrogate ELBO. It is a lower bound to the
true ELBO for VSMC or, equivalently, an upper bound on the
KL divergence. The following theorem formalizes this fact:

Theorem 1 (Surrogate ELBO). The surrogate ELBO (6), is
a lower bound to the ELBO (1) when q is deﬁned by (5), i.e.

log p(y1:T ) ≥ L(λ) ≥ (cid:101)L(λ).

Proof. See the supplementary material A.2.

The surrogate ELBO is the expected SMC log-marginal likeli-
hood estimate. We can estimate it unbiasedly as a byproduct
of sampling from the VSMC variational approximation (Al-
gorithm 1). We run the algorithm and use the estimate to
perform stochastic optimization of the surrogate ELBO.

Stochastic Optimization. While the expectations in the
surrogate ELBO are still not available in closed form, we can
estimate it and its gradients with Monte Carlo. This admits
a stochastic optimization algorithm for ﬁnding the optimal
variational parameters of the VSMC family.

We assume the proposals r(xt | xt−1; λ) are reparam-
i.e., we can simulate from r by set-
eterizable,
ting xt = h(xt−1, εt ; λ), εt ∼ s(εt) for some distribution
s not a function of λ. With this assumption, rewrite the gra-
dient of (6) by using the reparameterization trick [Kingma
and Welling, 2014, Rezende et al., 2014],

∇ (cid:101)L(λ) = grep + gscore

grep = E [∇ log (cid:98)p(y1:T )] ,
gscore = E

(cid:104)

log (cid:98)p(y1:T )∇ log (cid:101)φ(a1:N

1:T −1 | ε1:N

1:T ; λ)

(7)

(cid:105)

.

This expansion follows from the product rule, just as in
the generalized reparameterizations of Ruiz et al. [2016]
and Naesseth et al. [2017]. Note that all xi
t, implicit in the
weights wi
t and (cid:98)p(y1:T ) are now replaced with their reparam-
eterizations h(· ; λ). The ancestor variables are discrete and
cannot be reparameterized—this can lead to high variance
in the score function term, gscore from (7).

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

In Section 5, we empirically assess the impact of ignoring
gscore for optimization. We empirically study optimizing
with and without the score function term for a small state
space model where standard variance reduction techniques,
explained below, are sufﬁcient. We lower the variance using
Rao-Blackwellization [Robert and Casella, 2004, Ranganath
et al., 2014], noting that the ancestor variables at−1 have no
effect on weights prior to time t,

gscore =

log (cid:98)p(y1:T )
(cid:98)p(y1:t−1)

T
(cid:88)

t=2

E





N
(cid:88)

i=1

∇ log

ai
t−1
w
t−1
(cid:80)
(cid:96) w(cid:96)

t−1







 .

(8)

use

we
function
Furthermore,
∇ log (cid:101)φ(a1:N
1:T −1 | ε1:N
1:T ; λ) with an estimate of the fu-
ture log average weights as a control variate [Ranganath
et al., 2014].

score

the

We found that ignoring the score function term gscore (8)
from the ancestor variables, leads to faster convergence and
very little difference in ﬁnal ELBO. This corresponds to
approximating the gradient of (cid:101)L by

∇ (cid:101)L(λ) ≈ E [∇ log (cid:98)p(y1:T )] = grep.
This is the gradient we propose to use for optimizing the
variational parameters of VSMC. See the supplementary ma-
terial A.3 for more details, where we also provide a general
score function-like estimator and the control variates.

(9)

Algorithm. We now describe the full algorithm to opti-
mize the VSMC variational approximation. We form stochas-
tic gradients (cid:98)∇ (cid:101)L(λ) by estimating (9) using a single sample
from s(·) (cid:101)φ(· | · ; λ). The sample is obtained as a byproduct
of sampling VSMC (Algorithm 1). We use the step-size
sequence Adam [Kingma and Ba, 2015] or ρn proposed by
Kucukelbir et al. [2017],

ρn = η · n−1/2+δ ·

1 +

sn

,

(cid:16)

√

(cid:17)−1

(cid:16)

(cid:17)2

sn = t

(cid:98)∇ (cid:101)L(λn)

+ (1 − t)sn−1,

(10)

where n is the iteration number. We set δ = 10−16 and
t = 0.1, and we try different values for η. Algorithm 2
summarizes this optimization algorithm.1

Variational Expectation Maximization. Suppose the
target distribution of interest p(x1:T | y1:T ; θ) has a set of
unknown parameters θ. We can ﬁt the parameters using vari-
ational expectation-maximization (VEM) [Beal and Ghahra-
mani, 2003]. The surrogate ELBO is updated accordingly

log p(y1:T ; θ) ≥ ˜L(λ, θ)

(11)

1Reference implementation using Adam is available at

github.com/blei-lab/variational-smc.

Algorithm 2 Stochastic Optimization for VSMC

Require: Data y1:T , model p(x1:T , y1:T ), proposals

r(xt | xt−1 ; λ), number of particles N

Ensure: Variational parameters λ(cid:63)
1: repeat
2:
3:
4:
5: until convergence

Estimate the gradient (cid:98)∇ (cid:101)L(λn) given by (9)
Compute stepsize ρn with (10)
Update λn+1 = λn + ρn (cid:98)∇ (cid:101)L(λn)

where the normalization constant p(y1:T ; θ) is now a func-
tion of the parameters θ. Note that the expression for ˜L(λ, θ)
is exactly the same as (6), but where the weights (and po-
tentially proposals) now include a dependence on the model
parameters θ. Analogously, the reparameterization gradi-
ents have the same form as (9). We can maximize (11), with
respect to both θ and λ, using stochastic optimization. With
data subsampling, VSMC extends to large-scale datasets of
conditionally independent sequences [Hoffman et al., 2013,
Titsias and Lázaro-Gredilla, 2014].

4 Perspectives on Variational SMC

We give some perspectives on VSMC. First, we consider
the VSMC special cases of N = 1 and T = 1. For N = 1,
VSMC reduces to a structured variational approximation:
there is no resampling and the variational distribution is
exactly the proposal. For T = 1, VSMC leads to a special
case we call variational importance sampling, and a reinter-
pretation of the IWAE [Burda et al., 2016], which we explore
further in the ﬁrst half of this section.

Then, we think of sampling from VSMC as sampling a highly
optimized SMC approximation. This means many of the
theoretical SMC results developed over the past 25 years can
be adapted for VSMC. We explore some examples in the
second half of this section.

Variational Importance Sampling (VIS). The case
where T = 1 is SMC without any resampling, i.e., impor-
tance sampling. The corresponding special case of VSMC
is VIS. The surrogate ELBO for VIS is exactly equal to the
IWAE lower bound [Burda et al., 2016].

This equivalence provides new intuition behind the IWAE’s
variational approximation on the latent variables. If we want
to make use of the approximation q(x1:T ; λ(cid:63)) learned with
the IWAE lower bound, samples from the latent variables
should be generated with Algorithm 1, i.e. VIS. For VIS it is
possible to show that the surrogate ELBO is always tighter
than the one obtained by standard VB (equivalent to VIS
with N = 1) [Burda et al., 2016]. This result does not carry
over to VSMC, i.e. we can ﬁnd cases when the resampling
creates a looser bound compared to standard VB or VIS.
However, in practice the VSMC lower bound outperforms

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

Bérard et al.

VSMC and T . Like SMC, variational sequential Monte
Carlo scales well with T .
[2014]
show a central limit theorem for the SMC approxima-
tion log (cid:98)p(y1:T ) − log p(y1:T ) with N = bT , where b > 0,
as T → ∞. Under the same conditions as in that work, and
assuming that log (cid:98)p(y1:T ) is uniformly integrable, we can
show that

(cid:16)

KL

q(x1:T ; λ)

(cid:13)
(cid:17)
(cid:13)
(cid:13) p(x1:T | y1:T )

≤ −E

(cid:21)

(cid:20)
log (cid:98)p(y1:T )
p(y1:T )

−−−−→
T →∞

σ2(λ)
2b

,

0 < σ2(λ) < ∞.

The implication for VSMC is signiﬁcant. We can make
the variational approximation arbitrarily accurate by set-
ting N ∝ T , even as T goes to inﬁnity. The supplement
shows that this holds in practice; see A.4 for the toy example
from Figure 1. We emphasize that neither standard VB nor
IWAE (VIS) have this property.

5 Empirical Study

Linear Gaussian State Space Model The linear Gaus-
sian SSM is a ubiquitous model of time series data that
enjoys efﬁcient algorithms for computing the exact poste-
rior. We use this model to study the convergence properties
and impact of biased gradients for VSMC. We further use
it to conﬁrm that we learn good proposals. We compare to
the bootstrap particle ﬁlter (BPF), which uses the prior as
a proposal, and the (locally) optimal proposal that tilts the
prior with the likelihood.

The model is

xt = Axt−1 + vt,
yt = Cxt + et,

where vt ∼ N (0, Q), et ∼ N (0, R), and x1 ∼ N (0, I).
The log-marginal likelihood log p(y1:T ) can be computed
using the Kalman ﬁlter.

We study the impact of the biased gradient (9) for optimizing
the surrogate ELBO (6). First, consider a simple scalar model
with A = 0.5, Q = 1, C = 1, R = 1, and T = 2. For the
proposal we use r(xt | xt−1 ; λ) = N (xt ; λ + 0.5xt−1, 1),
with x0 ≡ 0. Figure 3 (left) shows the mean and spread
of estimates of gscore (8), with control variates, and grep (9),
as a function of λ for four randomly generated datasets.
The optimal setting of λ is where the sum of the means is
equal to zero. Ignoring the score function term gscore (8)
will lead to a perturbation of the optimal λ. However, even
for this simple model, the variance of the score function
term (red) is several orders of magnitude higher than that
of the reparameterization term (blue), despite the variance
reduction techniques of Section 3. This variance has a
signiﬁcant impact on the convergence speed of the stochastic
optimization.

Figure 2: Example of VIS q(x ; λ) approximating a multi-
modal p(x | y) with a Gaussian proposal r(x ; λ).

the VIS lower bound.

Figure 2 provides a simple example of VIS applied to a
multimodal p(x | y) ∝ N (x ; 0, 1) N (y ; x2/2, ex/2) with a
normal proposal r(x ; λ) = N (x ; µ, σ2) and a kernel den-
sity estimate of the corresponding variational approximation
q(x ; λ). The number of particles is N = 10. Standard VB
with a Gaussian approximation only captures one of the two
modes; which one depends on the initialization. We see that
even a simple proposal can lead to a very ﬂexible posterior
approximation. This property is also inherited by the more
general T > 1 case, VSMC.

Theoretical Properties. The normalization constant esti-
mate of the SMC sampler, (cid:98)p(y1:T ), is unbiased [Del Moral,
2004, Pitt et al., 2012, Naesseth et al., 2014]. This, to-
gether with Jensen’s inequality, implies that the surro-
gate ELBO E[log (cid:98)p(y1:T )] is a lower bound to log p(y1:T ).
If log (cid:98)p(y1:T ) is uniformly integrable it follows [Del Moral,
2004], as N → ∞, that

(cid:101)L(λ) = L(λ) = log p(y1:T ).

This fact means that the gap in Theorem 1 disappears and
the distribution of the trajectory returned by VSMC will tend
to the true target distribution p(x1:T | y1:T ). A bound on the
KL divergence gives us the rate

(cid:16)

KL

q(x1:T ; λ)

(cid:13)
(cid:17)
(cid:13)
(cid:13) p(x1:T | y1:T )

≤

c(λ)
N

,

for some constant c(λ) < ∞. This is a special case of a
“propagation of chaos” result from Del Moral [2004, Theo-
rem 8.3.2].

We can arrive at this result informally by studying (5): as
the number of particles increases, the marginal likelihood
estimate will converge to the true marginal likelihood and
the variational posterior will converge to the true posterior.
Huggins and Roy [2017] provide further bounds on vari-
ous divergences and metrics between SMC and the target
distribution.

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

dx = 10, dy = 1, C sparse

dx = 25, dy = 1, C dense

dx = 10, dy = 3, C dense

dx = 25, dy = 25, C sparse

Figure 3: (Left) Mean and spread of the stochastic gradient components gscore (8) and grep (9), for the scalar linear Gaussian
model on four randomly generated datasets, where the number of particles is N = 2. (Right) Log-marginal likelihood
(log p(y1:T )) and ELBO as a function of iterations for VSMC with biased gradients (blue) or unbiased gradients (red). Results
for four different linear Gaussian models.

Next, we study the magnitude of the perturbation, and its ef-
fect on the surrogate ELBO. We generate data with T = 10,
(A)ij = α|i−j|+1 for α = 0.42, Q = I, and R = I. We ex-
plored several settings of dx = dim(xt), dy = dim(yt), and
C. Sparse C measures the ﬁrst dy components of xt, and
dense C has randomly generated elements Cij ∼ N (0, 1).
Figure 3 (right) shows the true log-marginal likelihood and
ELBO as a function of iteration. It shows VSMC with biased
gradients (blue) and unbiased gradients (red). We choose
the proposal
r(xt | xt−1 ; λ) = N (cid:0)xt | µt + diag(βt)Axt−1, diag(σ2
with λ = (cid:8)µt, βt, σ2
(cid:9)T
t=1, and set the number of particles
to N = 4. Note that while the gradients are biased, the
resulting ELBO is not. We can see that the ﬁnal VSMC
ELBO values are very similar, regardless of whether we
train with biased or unbiased gradients. However, biased
gradients converge faster. Thus, we use biased gradients in
the remainder of our experiments.

t

Next, we study the effect of learning the proposal using
VSMC compared with standard proposals in the SMC litera-
ture. The most commonly used is the BPF, sampling from
the prior f . We also consider the so-called optimal proposal,
r ∝ f · g, which minimizes the variance of the incremen-
tal importance weights [Doucet and Johansen, 2009]. Ta-
ble 1 shows results for a linear Gaussian SSM when T = 25,
Q = 0.12I, R = 1, dx = 10, and dy = 1. Because of the
relatively high-dimensional state, BPF exhibits signiﬁcant
bias whereas the optimal proposal SMC performs much bet-
ter. VSMC outperforms them both, learning an accurate
proposal that results in an ELBO only 0.9 nats lower than

Table 1: ELBO for BPF, SMC with (locally) optimal proposal,
and VSMC. The true log-marginal likelihood is given by
log p(y1:T ) = −236.9.

BPF

ELBO −6701.4

Optimal SMC
−253.4

VSMC
−237.8

the true log-marginal likelihood. We further emphasize that
the optimal proposal is unavailable for most models.

t )(cid:1) .

Stochastic Volatility A common model
in ﬁnancial
econometrics is the (multivariate) stochastic volatility
model [Chib et al., 2009]. The model is

(cid:17)

et,

yt = β exp

xt = µ + φ(xt−1 − µ) + vt,
(cid:16) xt
2
where vt ∼ N (0, Q), et ∼ N (0, I), x1 ∼ N (µ, Q), and
θ = (µ, φ, Q, β). (In the multivariate case, multiplication is
element-wise.) Computing log p(y1:T ; θ) and its gradients
for this model is intractable, we study the VEM approxima-
tion to ﬁnd the unknown parameters θ. We compare VSMC
with IWAE and structured VI. For the proposal in VSMC and
IWAE we choose

r(xt | xt−1 ; λ, θ) ∝ f (xt | xt−1 ; θ) N (xt ; µt, Σt),

with variational parameters λ = (µ1, . . . , µT , Σ1, . . . , ΣT ).
We deﬁne the variational approximation for structured VI to
be q(x1:T ; λ, θ) = (cid:81)T
We study 10 years of monthly returns (9/2007 to 8/2017)
for the exchange rate of 22 international currencies with

t=1 r(xt | xt−1 ; λ, θ).

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

Table 2: ELBO for the stochastic volatility model with
T = 119 on exchange rate data. We compare VSMC (this
paper) with IWAE and structured VI.

Method

Structured VI
IWAE
VSMC

IWAE
VSMC

IWAE
VSMC

ELBO

6905.1
6911.2
6921.6
6912.4
6935.8
6913.3
6936.6

N = 4

N = 8

N = 16

respect to US dollars. The data is from the Federal Reserve
System. Table 2 reports the optimized ELBO (higher is bet-
ter) for different settings of the number of particles/samples
N = {4, 8, 16}. VSMC outperforms the competing methods
with almost 0.2 nats per time-step.

In theory we can improve the bound of both IWAE and VSMC
by increasing the number of samples N . This means we
can ﬁrst learn proposals using only a few particles N , for
computational efﬁciency. Then, at test time, we can increase
N as needed for improved accuracy. We study the impact of
increasing the number of samples for VSMC and IWAE using
ﬁx θ(cid:63) and λ(cid:63) optimized with N = 16. Figure 4 shows that
the gain for IWAE is limited, whereas for VSMC it can be
signiﬁcant.

Figure 5: The estimated ELBO of the neural population test
data as a function of iterations for VSMC (this paper) and
IWAE, for dx = {3, 5, 10} and T = 21.

ics and observations. The model is

xt = µθ(xt−1) + exp (σθ(xt−1)/2) vt,
yt ∼ Poisson (exp (ηθ(xt))) ,

where vt ∼ N (0, I), x0 ≡ 0, and µ, σ, η are neural net-
works parameterized by θ. The multiplication in the tran-
sition dynamics is element-wise. This is a deep Markov
model [Krishnan et al., 2017].

For inference we use the following proposal for both VSMC
and IWAE,

r(xt | xt−1, yt ; λ) ∝ N (xt ; µx
× N (xt ; µy

λ(xt−1), exp (σx
λ(yt), exp (σy

λ(yt))) ,

λ(xt−1)))

where µx, σx, µy, σy are neural networks parameterized
by λ, and the proposal factorizes over the components
of xt. Figure 5 illustrates the result for dx = {3, 5, 10}
with N = 8. VSMC gets to the same ELBO faster.

6 Conclusions

We introduced the variational sequential Monte Carlo
(VSMC) family, a new variational approximating family that
provides practitioners with a ﬂexible, accurate, and power-
ful approximate Bayesian inference algorithm. VSMC melds
variational inference (VI) and sequential Monte Carlo (SMC).
This results in a variational approximation that lets us trade-
off ﬁdelity to the posterior with computational complexity.

Figure 4: The estimated ELBO for VSMC (this paper) and
IWAE , with conﬁdence bands, as a function of the number
of particles N for ﬁx θ(cid:63), λ(cid:63).

Deep Markov Model An important problem in neuro-
science is understanding dynamics of neural circuits. We
study a population of 105 motor cortex neurons simulta-
neously recorded in a macaque monkey as it performed
reaching movements [c.f. Gao et al., 2016]. In each trial,
the monkey reached toward one of fourteen targets; each
trial is T = 21 time steps long. We train on 700 trials and
test on 84.

We use recurrent neural networks to model both the dynam-

Acknowledgements

Christian A. Naesseth is supported by CADICS, a Linnaeus
Center, funded by the Swedish Research Council (VR).
Scott W. Linderman is supported by the Simons Foundation
SCGB-418011. This work is supported by ONR N00014-
11-1-0651, DARPA PPAML FA8750-14-2-0009, the Alfred
P. Sloan Foundation, and the John Simon Guggenheim Foun-
dation.

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

References

E. Archer, I. Memming Park, L. Buesing, J. Cunningham,
and L. Paninski. Black box variational inference for state
space models. arXiv:1511.07367, Nov. 2015.

P. Bachman and D. Precup. Training deep generative models:
Variations on a theme. In NIPS Approximate Inference
Workshop, 2015.

M. J. Beal and Z. Ghahramani. The variational Bayesian
EM algorithm for incomplete data: with application to
scoring graphical model structures. Bayesian statistics,
2003.

Y. Burda, R. Grosse, and R. Salakhutdinov. Importance
weighted autoencoders. In International Conference on
Learning Representations, 2016.

J. Bérard, P. Del Moral, and A. Doucet. A lognormal central
limit theorem for particle approximations of normalizing
constants. Electronic Journal of Probability, 2014.

O. Cappé, E. Moulines, and T. Rydén. Inference in Hidden

Markov Models. Springer-Verlag New York, 2005.

S. Chib, Y. Omori, and M. Asai. Multivariate Stochastic
Volatility, pages 365–400. Springer Berlin Heidelberg,
Berlin, Heidelberg, 2009.

J. Cornebise. Adaptive Sequential Monte Carlo Methods.
PhD thesis, University Pierre and Marie Curie–Paris 6,
2009.

C. Cremer, Q. Morris, and D. Duvenaud. Reinterpreting
importance-weighted autoencoders. arXiv:1704.02916,
Apr. 2017.

P. Del Moral. Feynman-Kac Formulae: Genealogical and
interacting particle systems with applications. Springer-
Verlag New York, 2004.

P. Del Moral, A. Doucet, and A. Jasra. Sequential monte
carlo samplers. Journal of the Royal Statistical Society:
Series B (Statistical Methodology), 2006.

L. Dinh, D. Krueger, and Y. Bengio. Nice: Non-linear
independent components estimation. arXiv:1410.8516,
2014.

A. Doucet and A. M. Johansen. A tutorial on particle ﬁl-
tering and smoothing: Fifteen years later. Handbook of
nonlinear ﬁltering, 12(656-704):3, 2009.

A. Doucet, N. De Freitas, and N. Gordon. An introduction
to sequential Monte Carlo methods. In Sequential Monte
Carlo methods in practice. Springer-Verlag New York,
2001.

Y. Gao, E. W. Archer, L. Paninski, and J. P. Cunningham.
Linear dynamical neural population models through non-
linear embeddings. In Advances in Neural Information
Processing Systems, 2016.

N. J. Gordon, D. J. Salmond, and A. F. M. Smith. Novel
approach to nonlinear/non-Gaussian Bayesian state esti-
mation. Radar and Signal Processing, IEE Proceedings
F, 140(2):107 –113, Apr. 1993.

S. Gu, Z. Ghahramani, and R. E. Turner. Neural adaptive se-
quential Monte Carlo. In Advances in Neural Information
Processing Systems, 2015.

P. Guarniero, A. M. Johansen, and A. Lee. The iterated aux-
iliary particle ﬁlter. Journal of the American Statistical
Association, 112(520):1636–1647, 2017.

M. D. Hoffman, D. M. Blei, C. Wang, and J. Paisley.
Stochastic variational inference. Journal of Machine
Learning Research, 14:1303–1347, May 2013.

J. H. Huggins and D. M. Roy. Sequential Monte Carlo
as approximate sampling: bounds, adaptive resam-
pling via ∞-ESS, and an application to particle Gibbs.
arXiv:1503.00966v2, Mar. 2017.

M. Johnson, D. K. Duvenaud, A. Wiltschko, R. P. Adams,
and S. R. Datta. Composing graphical models with neural
networks for structured representations and fast inference.
In Advances in Neural Information Processing Systems,
2016.

M. I. Jordan, Z. Ghahramani, T. S. Jaakkola, and L. K.
Saul. An introduction to variational methods for graphical
models. Machine Learning, 37(2):183–233, Nov. 1999.

D. P. Kingma and J. Ba. Adam: A method for stochastic
optimization. In International Conference on Learning
Representations, 2015.

D. P. Kingma and M. Welling. Auto-encoding variational
Bayes. In International Conference on Learning Repre-
sentations, 2014.

G. Kitagawa. Monte Carlo ﬁlter and smoother for non-
Gaussian nonlinear state space models. Journal of com-
putational and graphical statistics, 5(1):1–25, 1996.

R. Krishnan, U. Shalit, and D. Sontag. Structured inference
networks for nonlinear state space models. In Thirty-First
AAAI Conference on Artiﬁcial Intelligence, 2017.

A. Kucukelbir, D. Tran, R. Ranganath, A. Gelman, and
D. M. Blei. Automatic differentiation variational infer-
ence. Journal of Machine Learning Research, 18(1):
430–474, Jan. 2017. ISSN 1532-4435.

T. A. Le, M. Igl, T. Jin, T. Rainforth, and F. Wood. Auto-
Encoding Sequential Monte Carlo. arXiv:1705.10306,
May 2017.

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

L. Maaløe, C. K. Sønderby, S. K. Sønderby, and O. Winther.
Auxiliary deep generative models. In International Con-
ference on Machine Learning, 2016.

A. Saeedi, T. D. Kulkarni, V. Mansinghka, and S. Gersh-
man. Variational particle approximations. arXiv preprint
arXiv:1402.5715, 2014.

T. Salimans, D. P. Kingma, and M. Welling. Markov chain
Monte Carlo and variational inference: Bridging the gap.
In International Conference on Machine Learning, 2015.

T. B. Schön, F. Lindsten, J. Dahlin, J. Wågberg, C. A. Naes-
seth, A. Svensson, and L. Dai. Sequential Monte Carlo
methods for system identiﬁcation. In Proceedings of the
17th IFAC Symposium on System Identiﬁcation (SYSID),
Oct 2015.

L. Stewart and P. McCarty, Jr. Use of Bayesian belief net-
works to fuse continuous and discrete information for
target recognition, tracking, and situation assessment. In
Proc. SPIE, volume 1699, pages 177–185, 1992.

M. Titsias and M. Lázaro-Gredilla. Doubly stochastic varia-
tional Bayes for non-conjugate inference. In Proceedings
of the 31st International Conference on Machine Learn-
ing, 2014.

D. Tran, R. Ranganath, and D. M. Blei. The variational
Gaussian process. In International Conference on Learn-
ing Representations, 2016.

C. J. Maddison, D. Lawson, G. Tucker, N. Heess,
M. Norouzi, A. Mnih, A. Doucet, and Y. Whye Teh.
Filtering variational objectives. In Advances in Neural
Information Processing Systems, 2017.

C. A. Naesseth, F. Lindsten, and T. B. Schön. Sequential
Monte Carlo for graphical models. In Advances in Neural
Information Processing Systems, 2014.

C. A. Naesseth, F. Lindsten, and T. B. Schön. Nested sequen-
tial Monte Carlo methods. In International Conference
on Machine Learning, 2015.

C. A. Naesseth, F. J. R. Ruiz, S. W. Linderman, and D. M.
Blei. Reparameterization gradients through acceptance-
rejection sampling algorithms. In Proceedings of the 20th
International Conference on Artiﬁcial Intelligence and
Statistics, 2017.

B. Paige and F. Wood. Inference networks for sequential
Monte Carlo in graphical models. In International Con-
ference on Machine Learning, 2016.

M. K. Pitt, R. dos Santos Silva, P. Giordani, and R. Kohn.
On some properties of Markov chain Monte Carlo sim-
ulation methods based on the particle ﬁlter. Journal of
Econometrics, 2012.

R. Ranganath, S. Gerrish, and D. M. Blei. Black box varia-
tional inference. In Artiﬁcial Intelligence and Statistics,
2014.

R. Ranganath, A. Perotte, N. Elhadad, and D. Blei. Deep sur-
vival analysis. In Proceedings of the 1st Machine Learn-
ing for Healthcare Conference, pages 101–114, 2016a.

R. Ranganath, D. Tran, and D. M. Blei. Hierarchical varia-
tional models. In International Conference on Machine
Learning, 2016b.

D. J. Rezende and S. Mohamed. Variational inference with
normalizing ﬂows. In International Conference on Ma-
chine Learning, 2015.

D. J. Rezende, S. Mohamed, and D. Wierstra. Stochastic
backpropagation and approximate inference in deep gen-
erative models. In International Conference on Machine
Learning, 2014.

C. Robert and G. Casella. Monte Carlo Statistical Methods.

Springer Texts in Statistics. Springer, 2004.

F. J. R. Ruiz, M. K. Titsias, and D. M. Blei. The general-
ized reparameterization gradient. In Advances in Neural
Information Processing Systems, 2016.

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

A Variational Sequential Monte Carlo – Supplementary Material

A.1 Proof of Proposition 1

We start by noting that the distribution of all random variables generated by the VSMC algorithm is given by

(cid:101)φ(x1:N

1:T , a1:N

1:T −1, bT ; λ) =

r(xi

1 ; λ) ·

wbT
T
(cid:96) w(cid:96)
T

(cid:80)

N
(cid:89)

i=1

T
(cid:89)

N
(cid:89)

t=2

i=1

ai
t−1
w
t−1
(cid:80)
(cid:96) w(cid:96)

t−1

r(xi

t|x

t−1

ai
t−1 ; λ).

(12)

We are interested in the marginal distribution q(x1:T ; λ) (cid:44) (cid:101)φ(x1:T ; λ) = Eb1:T [ (cid:101)φ(xb1:T
1:T , b1:T ; λ)]. A key observation is
that the distribution of b1:T | x1:T , the conditional distribution of the ancestral path of the returned particle, is uniform on
{1, . . . , N }T . Thus we get

q(x1:T ; λ) =

(cid:101)φ(xb1:T
1:T , b1:T ; λ)
(cid:101)φ(b1:T | x1:T ; λ)

=

1
N −T

(cid:88)

(cid:90)

a

−b1:T −1
1:T −1

(cid:101)φ(xb1:T

1:T , x¬b1:T

1:T , a¬b1:T −1

1:T −1

; λ) dx¬b1:T
1:T ,

(13)

where

1
N −T (cid:101)φ(xb1:T
= N T wb1
1
(cid:80)
(cid:96) w(cid:96)
1

1:T , x¬b1:T

1:T , a¬b1:T −1

1:T −1

; λ)

r(xb1

1 ; λ)

T
(cid:89)

t=2

wbt
t
(cid:96) w(cid:96)
t

(cid:80)

r(xbt
t

| xbt−1

t−1 ; λ) ·

r(xi

1 ; λ) ·

N
(cid:89)

i=1
i(cid:54)=b1

T
(cid:89)

N
(cid:89)

t=2

i=1
i(cid:54)=bt

ai
t−1
w
t−1
(cid:80)
(cid:96) w(cid:96)

t−1

r(xi

t|x

t−1

ai
t−1 ; λ)

= p(xb1

1 , y1)

T
(cid:89)

t=2

p(xb1:t
1:t , y1:t)
p(xb1:t−1
1:t−1 , y1:t−1)

T
(cid:89)

t=1

1
(cid:80)
(cid:96) w(cid:96)
t

·

1
N

r(xi

1 ; λ) ·

N
(cid:89)

i=1
i(cid:54)=b1

T
(cid:89)

N
(cid:89)

t=2

i=1
i(cid:54)=bt

ai
t−1
w
t−1
(cid:80)
(cid:96) w(cid:96)

t−1

r(xi

t|x

t−1

ai
t−1 ; λ)

= p(xb1:T

1:T , y1:T )

· (cid:101)φ(x¬b1:T

1:T , a¬b1:T −1

1:T −1

; λ).

T
(cid:89)

t=1

1
(cid:80)
(cid:96) w(cid:96)
t

1
N

We insert the above expression in (13) and we get

q(x1:T ; λ) = p(xb1:T

1:T , y1:T )

· (cid:101)φ(x¬b1:T

1:T , a¬b1:T −1

1:T −1

; λ) dx¬b1:T

1:T

(cid:88)

(cid:90) (cid:32) T
(cid:89)

(cid:33)−1

N
(cid:88)

wi
t

1
N

t=1

i=1

a

¬b1:T −1
1:T −1

= p(xb1:T

1:T , y1:T )E

(cid:101)φ(x¬b1:T

1:T

,a

¬b1:T −1
1:T −1

;λ)

(cid:32) T
(cid:89)





1
N

N
(cid:88)

(cid:33)−1
 .

wi
t

t=1

i=1

(14)

(cid:3)

A.2 Proof of Theorem 1

The evidence lower bound (ELBO), using the above result about the distribution of q(x1:T ; λ), is given by

L(λ) = Eq(x1:T ;λ) [log p(x1:T , y1:T ) − log q(x1:T ; λ)]

(cid:90) (cid:40)

= −

p(xb1:T

1:T , y1:T )E

(cid:101)φ(x¬b1:T

1:T

,a

¬b1:T −1
1:T −1

;λ)

(cid:81)T

t=1

1
N

(cid:34)

(cid:35)

·

1
(cid:80)N

i=1 wi
t
(cid:35)(cid:41)

(cid:34)

1
(cid:80)N

i=1 wi
t

(cid:81)T

t=1

1
N

· log E

(cid:101)φ(x¬b1:T

1:T

,a

¬b1:T −1
1:T −1

;λ)

dxb1:T
1:T .

(15)

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

Note that −t log t is a concave function for t > 0, this means by the conditional Jensen’s inequality we have −E[t] log E[t] ≥
−E[t log t]. If we apply this to (15) we get

(cid:90)

E

L(λ) ≥

(cid:101)φ(x¬b1:T

1:T

,a

¬b1:T −1
1:T −1

;λ)

(cid:81)T

(cid:34)

p(xb1:T
1:T , y1:T )
(cid:80)N
1
N
N
(cid:88)

i=1 wi
t
(cid:33)(cid:35)

t=1

(cid:32)

1
N

i=1

(cid:34) T

(cid:88)

t=1

log

wi
t

= (cid:101)L(λ),

(cid:32)

log

T
(cid:88)

t=1

1
N

N
(cid:88)

i=1

wi
t

(cid:33)(cid:35)

dxb1:T
1:T

= E

(cid:101)φ(x1:N

1:T ,a1:N

1:T −1 ;λ)

where the last step follows because q(x1:T ; λ) is the marginal of (cid:101)φ(x1:N

1:T , a1:N

1:T −1 ; λ).

(cid:3)

A.3 Stochastic Optimization

For the control variates we use

T
(cid:88)

t=2

ctE

s(·) (cid:101)φ(·|· ;λ)

(cid:34) N
(cid:88)

i=1

∇ log w

t−1

ai
t−1 −

N
(cid:88)

(cid:96)=1

w(cid:96)
t−1
m wm
t−1

(cid:80)

(cid:35)

∇ log w(cid:96)

t−1

ct = E

s(·) (cid:101)φ(·|· ;λ)

(cid:34) T

(cid:88)

t(cid:48)=t

log

(cid:32)

1
N

N
(cid:88)

i=1

(cid:33)(cid:35)

wi
t(cid:48)

.

where

with

and

In practice we use a stochastic estimate of ct.

For T = 2 we can use a leave-one-out estimator of the ancestor variable score function gradient

N
(cid:88)

E

i=1

s(·) (cid:101)φ(·|· ;λ)

(cid:34)

(cid:32)

log

N − 1
N

(cid:80)N

(cid:80)

(cid:96)=1 w(cid:96)
2
j(cid:54)=i wj

2

(cid:33) (cid:32)

∇ log wai

1

1 −

N
(cid:88)

(cid:96)=1

w(cid:96)
1
m wm
1

(cid:80)

(cid:33)(cid:35)

∇ log w(cid:96)
1

.

Score Function Gradient Below we provide the derivation of a score function-like estimator that is applicable in very
general settings. However, we have found that in practice the variance tends to be quite high.

∇ (cid:101)L(λ) = ∇E

(cid:101)φ(x1:N

1:T ,a1:N

1:T −1 ;λ) [log (cid:98)p(y1:T )]

= E

(cid:101)φ(x1:N

1:T ,a1:N

1:T −1 ;λ)

(cid:104)
∇ log (cid:98)p(y1:T ) + log (cid:98)p(y1:T )∇ log (cid:101)φ(x1:N

1:T , a1:N

1:T −1 ; λ)

(cid:105)

,

∇ log (cid:98)p(y1:T ) = ∇

log

T
(cid:88)

t=1

(cid:32)

1
N

N
(cid:88)

i=1

(cid:33)

wi
t

=

T
(cid:88)

N
(cid:88)

t=1

i=1

wi
t
(cid:96) w(cid:96)
t

(cid:80)

∇ log wi
t,

1:T , a1:N

1:T −1 ; λ)

∇ log (cid:101)φ(x1:N
(cid:34)
N
(cid:88)

=

i=1

(cid:34)

T
(cid:88)

t=2

∇ log r(xi

1 ; λ) +

∇ log r(xi

t|x

t−1

ai
t−1 ; λ) + ∇ log w

t−1

ai
t−1 −

¯w(cid:96)

t−1∇ log w(cid:96)

t−1

.

(cid:35)(cid:35)

N
(cid:88)

(cid:96)=1

A.4 Scaling With Dimension

In this section we study how the methods compare on a simple toy model deﬁned by

p(x1:T , y1:T ) =

N (xt ; 0, 1)N (yt ; x2

t , 1).

T
(cid:89)

t=1

Christian A. Naesseth, Scott W. Linderman, Rajesh Ranganath, David M. Blei

(a) λIWAE = λ(cid:63)

VB

(b) λIWAE = λ(cid:63)

VSMC

Figure 6: ELBO, for standard VB, IWAE, and VSMC, as a function of the dimension T of a toy problem. Here we set the
number of samples in IWAE and VSMC to be N = 2T .

We study the data set yt = 3, ∀t. Figure 6 shows the result when we let the number of samples in importance weighted
auto-encoder (IWAE) (variational importance sampling (VIS)) and VSMC grow with the dimension N = 2T . For low T
the optimal parameters for IWAE are close to λ(cid:63)
VSMC. On the other hand for high T , the optimal parameters for IWAE are
close to those of standard variational Bayes (VB), i.e. λ(cid:63)
VB. Figure 6 indicates that just by letting N ∝ T , VSMC can achieve
arbitrarily good approximation of p(x1:T | y1:T ) even if T → ∞. This holds, under some regularity conditions, even if
p(x1:T , y1:T ) is a state space model [Bérard et al., 2014]. This asymptotic approximation property is not satisﬁed by VIS,
we see in Figure 6 that the approximation deteriorates as T increases. Note that this does not hold if the dimension of the
latent space, i.e. dim(xt), tends to inﬁnity rather than the number of time points T .

