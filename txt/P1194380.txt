Template Matching with Deformable Diversity Similarity

Itamar Talmi∗
Technion
titamar@campus.technion.ac.il

Roey Mechrez∗
Technion
roey@tx.technion.ac.il

Lihi Zelnik-Manor
Technion
lihi@ee.technion.ac.il

7
1
0
2
 
r
p
A
 
8
1
 
 
]

V
C
.
s
c
[
 
 
2
v
0
9
1
2
0
.
2
1
6
1
:
v
i
X
r
a

Abstract

We propose a novel measure for template matching
named Deformable Diversity Similarity – based on the di-
versity of feature matches between a target image window
and the template. We rely on both local appearance and
geometric information that jointly lead to a powerful ap-
proach for matching. Our key contribution is a similarity
measure, that is robust to complex deformations, signiﬁcant
background clutter, and occlusions. Empirical evaluation
on the most up-to-date benchmark shows that our method
outperforms the current state-of-the-art in its detection ac-
curacy while improving computational complexity.

1. Introduction

Template Matching is a key component in many com-
puter vision applications such as object detection, tracking,
surveillance, medical imaging and image stitching. Our in-
terest is in Template Matching “in the wild” [4], i.e., when
no prior information is available on the target image. An
example application is to identify the same object in differ-
ent cameras of a surveillance system [1]. Another use case
is in video tracking, where Template Matching is used to
detect drifts and relocate the object after losing it [9]. This
is a challenging task when the transformation between the
template and the target in the image is complex, non-rigid,
or contains occlusions, as illustrated in Figure 1.

Traditional template matching approaches, such as Sum-
of-Squared-Distances or Normalized Cross-Correlation, do
not handle well these complex cases. This is largely be-
cause they penalize all pixels of the template, which re-
sults in false detections when occlusions or large deforma-
tions occur. To overcome this limitation the Best-Buddies-
Similarity (BBS) measure was proposed in [4, 18]. BBS is
based on properties of the Nearest-Neighbor (NN) matches
beween features of the target and features of the template.
It relies only on a subset of the points in the template, thus
hoping to latch on to the relevant features that correspond
between the template and the target. This makes BBS more
robust than previous methods.

∗Authors contributed equally

Figure 1: Template Matching challenges: Template
Matching results of the proposed Deformable Diversity
Similarity (DDIS). (Top) The Miami Heats logo on Lebron
James’s shirt, is marked as template (in green). (Bottom)
Best matches found by DDIS in four target images (in ma-
genta). Different challenges are evident: the ball occludes
the logo, Lebron moves non-rigidly with out-of-plane rota-
tion and complex deformation of the shirt.

In this paper we adopt the feature-based, parameter-free,
approach of BBS and propose a novel similarity measure
for template matching named DDIS: Deformable Diversity
Similarity. DDIS is based on two properties of the Near-
est Neighbor ﬁeld of matches between points of a target
window and the template. The ﬁrst is that the diversity
of NN matches forms a strong cue for template matching.
This idea is supported by observations in [11], where patch
diversity was used to match objects for texture synthesis.
We propose formulas for measuring the NN ﬁeld diversity
and further provide theoretical analysis as well as empirical
evaluations that show the strength of these measures.

The second key idea behind DDIS is to explicitly con-
sider the deformation implied by the NN ﬁeld. As was
shown by the seminal work of [7] on Deformable Part Mod-
els, allowing deformations while accounting for them in the

1

matching measure is highly advantageous for object detec-
tion. DDIS incorporates similar ideas for template matching
leading to a signiﬁcant improvement in template detection
accuracy in comparison to the state-of-the-art.

A beneﬁt of DDIS with respect to BBS [4, 18] is re-
duced computational complexity. Both measures rely on
NN matches, however, BBS is formulated in a way that re-
quires heavier computations. DDIS is more efﬁcient while
providing statistical properties similar to BBS.

To summarize, in this paper we introduce DDIS, a mea-
sure for template matching in the wild that relies on two ob-
servations: (i) The diversity of NN matches between tem-
plate points and target points is indicative of the similar-
ity between them. (ii) The deformation implied by the NN
ﬁeld should be explicitly accounted for. DDIS is robust and
parameter free, it operates in unconstrained environments
and shows improved accuracy compared to previous meth-
ods on a real challenging data-set. Our code is available at
https://github.com/roimehrez/DDIS

2. Related Work

The similarity measure between the template and a sub-
window of the target image is the core part of template
matching. A good review is given in [19]. The commonly
used methods are pixel-wise, e.g., Sum of Squared dif-
ferences (SSD), Sum of Absolute Differences (SAD) and
Normalized Cross-Correlation (NCC), all of which assume
only translation between the template and target. They
could be combined with tone mapping to handle illumina-
tion changes [8] or with asymmetric correlation to handle
noise [6]. To increase robustness to noise pixel-wise mea-
sures such as M-estimators [2, 23] or Hamming-based dis-
tances [22, 20] have been proposed.

More general geometric transformation such as afﬁne are
addressed by [27, 12]. In [13] parametric transformations
are handled by approximating the global optimum of the
parametric model. In [26] non-rigid transformations are ad-
dressed via parametric estimation of the distortion. All of
these methods work very well when their underlying geo-
metric assumptions hold, however, they fail in the presence
of complex deformations, occlusions and clutter.

A second group of methods consider a global proba-
bilistic property of the template. For example in [3, 21]
color Histogram Matching is used (for tracking). This does
not restrict the geometric transformation, however, in many
cases the color histogram is not a good representation, e.g.,
in the presence of background clutter and occlusions. Other
methods combine geometric cues with appearance cues.
For example, a probabilistic solution was suggested in [16],
where geometric and color cues are used to represent the
image in the location-intensity space. Oron et al. [17] ex-
tend this idea by measuring one-to-one distance in xyRGB
space. These methods all make various assumptions that do

not hold in complex scenarios.

A more robust approach, that can handle complex cases
has been recently suggested in [4, 18]. Their approach,
named the Best-Buddies-Similarity (BBS) is based on the
Bi-Directional Similarity (BDS) concept of [24]. They
compute the similarity between a template and a target win-
dow by considering matches between their patches. The
matches are computed in both directions providing robust-
ness to outliers. A similar idea was suggested in [5] by
replacing the max operator of the Hausdorff distance [10]
with a sum. The BBS of [4, 18] lead to a signiﬁcant im-
provement in template matching accuracy over prior meth-
ods.
In this paper we propose a different measure, that
shares with BBS its robustness properties, while yielding
even better detection results.

3. Diversity as a Similarity Measure

To measure similarity between a target window and a
template we ﬁrst ﬁnd for every target patch its Nearest
Neighbor (NN), in terms of appearance, in the template.
Our key idea is that the similarity between the target and
the template is captured by two properties of the implied
NN ﬁeld. First, as shown in Figure 2d, when the target
and template correspond, most target patches have a unique
NN match in the template. This implies that the NN ﬁeld
is highly diverse, pointing to many different patches in the
template. Conversely, as shown in Figure 2e, for arbitrary
targets most patches do NOT have a good match, and the
NNs converge to a small number of template points that
happen to be somewhat similar to the target patches. Sec-
ond, we note that arbitrary matches typically imply a large
deformation, indicated by long arrows in Figure 2e.

Next, we propose two ways for quantifying the amount
of diversity and deformation of the NN ﬁeld. The ﬁrst is
more intuitive and allows elegant statistical analysis. The
second is slightly more sophisticated and more robust.

3.1. Diversity Similarity (DIS)

Let points pi, qj ∈ Rd represent patches of the tem-
plate and target, respectively. Our goal is to measure the
similarity between two sets of points, the template points
i=1 and the target points Q = {qj}M
P = {pi}N
j=1. We
require ﬁnding the NN in P for every point q∈Q, s.t.,
NN(q, P ) = argminp∈P d(q, p) for some given distance
function d(q, p). The ﬁrst property our measures are based
on is the diversity of points p∈P that were found as NNs.

An intuitive way to measure diversity is to count the
number of unique NNs. We deﬁne the Diversity Similar-
ity (DIS) as:

DIS
Q→P

= c |{pi ∈ P : ∃ qj ∈ Q, NN(qj, P ) = pi}|

(1)

where c = 1/min {M, N } is a normalization factor and |{·}|

(a)

(b)

(c)

(d)

(e)

Figure 2: Deformable Diversity: A face template (c),
marked in green (a), is searched in a target image (b). The
face undergoes a complex transformation: background clut-
ter, out of plain rotation, and non-rigid deformation. We
zoom on a bad target window (e) and on the best target win-
dow (d), both are also marked by color in (b). The blue
arrows are samples of the NN ﬁeld: their start point marks
a target patch while the end point marks the position of its
NN in the template. The bad target (e), shows low diversity
of NN patches with large deformation (long arrows). Con-
versely, the best target (d) shows high diversity and small
deformation (short arrows). Best viewed on screen.

denotes group size.

To provide further intuition as to why DIS captures the
similarity between two sets of points we provide an illustra-
tion in 2D in Figure 5. Figure 5a demonstrates that when the
distributions of points in P and Q are similar, most of the
points q∈Q have a unique NN p∈P implying a high DIS
value. Conversely, when P and Q are distributed differ-
ently, as illustrated in Figure 5b, DIS is low. This is since
in areas where Q is sparse while P is dense most of the
points in P are not NN of any q. In addition, in areas where
Q is dense while P is sparse most of the points in Q share
the same NNs. In both cases, since the number of points is
ﬁnite, the overall contribution to DIS is low.

3.2. Deformable Diversity Similarity (DDIS)

While capturing well diversity, DIS does not explicitly
consider the deformation ﬁeld. Accounting for the amount
of deformation is important since while non-rigid transfor-
mations should be allowed, they should also be restricted to
give preference to plausible deformations of real objects.

In order to integrate a penalty on large deformations we
make two modiﬁcations to the way we measure diversity.
First, to obtain an explicit representation of the deformation
ﬁeld we distinguish between the appearance and the posi-

tion of each patch and treat them separately. Second, we
propose a different way to measure diversity, that enables
considering the deformation amount.

Let pa denote the appearance and pl the location of
patch p (and similarly for q). We ﬁnd the appearance
based NN pi for every point qj s.t. pi = NNa(qj, P ) =
argminp∈P d(qa
j , pa) for some given distance d(qa, pa).
The location distance between a point qj and its NNa is de-
noted by rj = d(ql
i). To quantify the amount of diversity
as a function of the NN ﬁeld we deﬁne κ(pi) as the number
of patches q∈Q whose NNa is pi:

j, pl

κ(pi) = |{q ∈ Q : NNa(q, P ) = pi}|

(2)

Finally, we deﬁne the Deformable Diversity Similarity
(DDIS) by aiming for high diversity and small deformation:

DDIS
Q→P

= c

(cid:88)

qj ∈Q

1
rj +1

(cid:18)

(cid:19)

· exp

1 − κ(NNa(qj, P ))

(3)

where c = 1/min {M, N } is a normalization factor.

This deﬁnition can be viewed as a sum of contributions
over the points qj. When a point qj has a unique NN, then
κ(NNa(qj, P )) = 1 and the exponent reaches its maximum
value of 1. Conversely, when the NN of qj is shared by
many other points, then κ(NNa(qj, P )) is large, the expo-
nent value is low and the overall contribution of qj to the
similarity is low. In addition, the contribution of every point
is inversely weighted by the length rj of its implied defor-
mation vector.

DDIS possesses several properties that make it attractive:
(1) it relies mostly on a subset of matches, i.e., points that
have distinct NNs. Points that share NNs will have less in-
ﬂuence on the score. (2) DDIS does not require any prior
knowledge on the data or its underlying deformation. (3)
DDIS analyses the NN ﬁeld, rather than using the actual
distance values. These properties allow DDIS to overcome
challenges such as background clutter, occlusions, and non-
rigid deformations.

3.3. DIS as simpliﬁed DDIS

DIS and DDIS capture diversity in two different ways.
DIS simply counts unique matches in P , while DDIS mea-
sures exponentially the distinctiveness of each NN match
of patches in Q. Nonetheless, we next show that DIS and
DDIS are highly related.

We start by ignoring the deformations by setting rj = 0
in (3) and simplifying (without loss of generality) by assum-
ing M = N . We denote by 1/k the fraction of points p∈P
that are NNs of at least one point in Q. Both DIS and DDIS
reach their maximum value of 1 when k = 1, i.e., when
κ(pi) = 1 ∀pi∈P . When k = N , i.e., all q∈Q share a single
NN, both scores reach their minimum value, DIS=1/N and
DDIS=exp(1 − N ).

(a) E[SSD]

(b) E[BBS]

(c) E[DIS]

Figure 3: DIS as simpliﬁed DDIS: Plots of DIS and DDIS
(with rj = 0, M = N ) as a function of k, where N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
Both DIS and DDIS are maximal at k = 1 and decrease
monotonically, reaching their minimal value when k = N .

Further intuition can be derived from the case of uniform
distribution of NN matches, i.e., when only N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
In this case DIS = (N/k)/N = 1/k, and DDIS =
1/N (cid:80)
qj ∈Q exp(1 − k) = exp(1 − k). Both measures share
extrema points between which they drop monotonically as
a function of k, with DDIS decreasing faster due to its ex-
ponential nature. This is illustrated in Figure 3.

3.4. Statistical Analysis

To further cement our assertions that diversity captures
the similarity between two distributions, we provide statis-
tical analysis, similar to that presented in [4, 18]. Our goal
is to show that the expectation of DIS and DDIS is maximal
when the points in both sets are drawn from the same dis-
tribution, and drops sharply as the distance between the two
distributions increases. We do that via a simple 1D mathe-
matical model, in which an image window is modeled as a
set of points drawn from a general distribution.

Appendix A presents derivations of E[DIS] (Expected
value of DIS) when the points are drawn from two given
distributions. The expression for E[DIS] does not have a
closed form solution, but it can be solved numerically for
selected underlying distributions. Therefore, we adopt the
same setup as [4] where P and Q are assumed to be Gaus-
sian distributions, which are often used as simple statistical
models of image patches. We then use Monte-Carlo inte-
gration to approximate the Expectation for discrete choices
of parameters µQ and σQ. For BBS and SSD we adopt the
derivations in [4], where E[BBS] was also approximated
via Monte-Carlo integration and E[SSD] is normalized.

Figure 4 presents the resulting approximated expected
values. It can be seen that DIS is likely to be maximized
when the distributions are the same, and falls rapidly when
In addition it is
the distributions differ from each other.
evident that DIS and BBS present highly similar behaviors.
Finally, similar to [4], one can show that this holds also for
the multi-dimensional case.

For DDIS we cannot derive nice expressions for its Ex-
pectation E[DDIS]. Instead, we use simulations to approx-
imate it. The simulation needs to consider also locations

(d) E[DDIS]
small deformation

(e) E[DDIS]
large deformation

(f) E[DDIS]
ignore deformation

Figure 4: Expected behavior in the 1D Gaussian case:
Following [4] two point sets, P and Q, are generated
by sampling N = M = 100 points from N (0; 1), and
N (µQ; σQ), respectively, with [µQ, σQ]∈[0, 10]. (Top) The
approximated expectation of SSD (a), BBS (b) and DIS (c)
as a function of µQ and σQ suggest that BBS and DIS be-
have similarly and drop much more rapidly than SSD as
the distributions move apart. (Bottom) The approximated
expectation of DDIS when the mean deformation is small
(d), large (e), and ignored (f) ((d) and (e) are color scaled
jointly). It can be seen that small deformation ﬁelds corre-
spond to a sharper peak in the expectation, while for large
deformations the similarity is always low.

to quantify the amount of deformation, rj, in (3). When
rj = 0 the expectation is similar to that of BBS and DIS.
For rj (cid:54)= 0 we simulate two cases: (i) Small deformation:
We sort the points in each set based on their appearance co-
ordinate, and take as position their index in the sorted list.
When the distributions are different the diversity is very low
anyhow. But when the distributions are similar, the sorting
results in points and their NN having a similar index, which
corresponds to small deformation. (ii) Large deformation:
We sort the points of one set in descending order and the
other set in ascending order, again taking as position their
index in the sorted list. When the distributions are similar,
the sorting results in points and their NN having a different
index, which corresponds to large deformation. Figure 4
shows that for small deformation E[DDIS] drops sharply
as the distributions become more different. For large defor-
mations it is always low, as desired, since even when the ap-
pearances are similar, if the geometric deformation is large
the overall similarity between the point sets is low.

4. Comparison to BBS

Our measures bare resemblance to BBS – all rely on NN
matches between two sets of points. There are, however,

(a) similar distributions

(b) different distributions

Figure 5: Intuition for DIS and BBS: For each point q∈Q
we draw a red arrow pointing at its NN p ∈ P . If q and p are
also best-buddies-pair (BBP, see section 4.1), we change
the red arrow to a green line. DIS counts blue triangles
that are pointed to by either a red arrow or a green line.
(a) P and Q are similarly dis-
BBS counts green lines.
tributed, hence, many p’s are NN of some q and there are
many BBPs. Here DIS = BBS = 8. (b) P and Q have
different distributions. A single q among dense p’s or a sin-
gle p among dense q’s contribute 1 to both DIS and BBS.
Occasionally, there is a unique NN match between Q and
P that is not a BBP. Since the distributions of P and Q are
different both DIS and BBS are relatively low, DIS = 3 and
BBS = 2.

two key differences: (i) the way in which similarity between
the two sets is measured, and, (ii) the penalty on the amount
of spatial deformation. We next analyze the implications of
these differences.

4.1. You Only Need One Direction

The key idea behind the bi-directional similarity ap-
proaches of [4, 18, 24] is that robust matching requires bi-
directional feature correspondences. Our unilateral mea-
sures contradict this claim. In fact, an observation we make
is that, Diversity provides a good approximation to BBS.
The analysis we present is for DIS, since it is simpler than
DDIS and does not incorporate deformation, making the
comparison to BBS more fair and direct.

Recall that BBS counts the number of bi-directional NN
matches between the target and template. A pair of points
pi∈P and qj∈Q are considered a best-buddies-pair (BBP)
if pi is the NN of qj, and qj is the NN of pi. BBS counts the
number of BBPs as a measure of similarity between P and
Q. Clearly, the bilateral nature of BBS is wasteful in terms
of computations, compared to the unilateral DDIS and DIS.
DIS and BBS are deﬁned differently, however, since the
number of patches in both target and template is ﬁnite, DIS
provides a good approximation to BBS. As illustrated in
Figure 5a when the distributions of points in P and Q are
similar, many of the NN relations are bi-directional. This
implies that the values of BBS and DIS are very similar. In
the extreme case when the template and target are identical,
every point q has a unique NN p = q and they form a BBP.
In this case DIS=BBS exactly.

DIS and BBS behave similarly also when the distribu-
tions are different, as illustrated in Figure 5b. In areas where

P is sparse and Q is dense we get multiple points q∈Q that
share the same NN p∈P . At most one of them forms a BBP
and their joint contribution to both DIS and BBS is 1. Since
the number of points in P and Q is ﬁnite, this implies that
there are other areas where P is dense and Q is sparse. In
these areas there are many points in P that are not NN of
any q∈Q, and have zero contribution to both DIS and BBS.
Our observations are in line with the Expectation anal-
ysis of Figure 4.
In addition, our experiments (Sec-
tion 7) show that DIS and BBS achieve comparable tem-
plate matching accuracy.

4.2. Explicit vs. Implicit Deformation Modeling

The need to penalize large deformations was noted
in [4, 18]. This was done implicitly by adding the xy coor-
dinates to the feature vectors when searching for NNs. The
distance between a pair of points is taken as a weighted lin-
ear combination of their appearance and position difference.
This is different from DDIS that considers only appearance
for NN matching and explicitly penalizes the deformation
in the obtained NN ﬁeld. Our approach has two beneﬁts: (i)
improved runtime, and (ii) higher detection accuracy.

Using only appearance for NN matching signiﬁcantly re-
duces runtime since while every image patch is shared by
many sub-windows, its xy coordinates are different in each
of them. This implies that the NN ﬁeld needs to be com-
puted for each image sub-window separately. Conversely,
working in appearance space allows us to perform a single
NN search per image patch. In Section 6 we analyze the
beneﬁts in terms of computational complexity.

Separating between appearance and position also leads
to more accurate template localization. Overlapping target
windows with very similar appearance could lead to very
similar similarity scores. DDIS chooses the window imply-
ing less deformations. Our experiments indicated that this
is important and improves the localization accuracy.

5. Implementation

To utilize DDIS for template matching in images, we fol-
low the traditional raster scan approach. Our algorithm gets
as input a target image S and a template T . Its output is a
frame placing T within S. We denote the width of T by Tw
and its height Th, similarly for S. Each template sized sub-
window W ∈S is compared to T . We extract from T and
W feature vectors, as described below, yielding sets P and
Q respectively. We use the Euclidean distance (L2) to com-
pare appearance features pa and qa. The deformation length
rj is the Euclidean distance between the xy coordinates pl
and ql. Our implementation consists of 4 phases:

0. Feature extraction: We experimented with two forms
of appearance feature, color and deep-features. As color
features we set pa and qa as vectorized RGB pixel values
of 3×3 overlapping patches. To obtain deep-features we

used the popular VGG-Deep-Net [25]. More speciﬁcally,
we take feature maps from layers conv1 2, conv3 4 and
conv4 4 (akin to the suggestion in [14] for object tracking).
We forsake the higher layers since we found the low spatial
resolution inaccurate. The features maps were normalized
to zero mean and unit standard deviation, and then upscaled,
via bi-linear interpolation, to reach the original image size.
1. NN search: We ﬁnd for each feature vector in S, its
approximate NN in the template T . We use TreeCANN [15]
with PCA dimensionality reduction to 9 dimensions, kd-tree
approximation parameter (cid:15) = 2, dense search (gS = gT =
1), and window parameter wS = 3, wT = 5.

2. Similarity map calculation: For each target image
pixel (ignoring boundary pixels) we compute the similarity
between its surrounding sub-window W and the template
T . For each W , we ﬁrst compute κ(pi), ∀pi∈P as deﬁned
in (2). Since subsequent windows have many overlaps, the
computation of κ needs only update the removed and added
features with respect to the previous sub-window. We then
calculate DDIS as deﬁned in (3).

3. Target localization: Finally, the template location is
that with maximum score. Before taking the maximum, we
smooth the similarity map with a uniform kernel of size
3 × Th
Tw

3 , to remove spurious isolated peaks.

6. Complexity

The sets P and Q consist of features from all locations in
T and W , receptively. This implies |P |= |Q|= Tw · Th (cid:44) l.
The number of possible sub-windows1 is Sw·Sh (cid:44) L. Re-
call that d denotes the feature vectors length. For color
features d equals the size of the patch ×3 while for deep-
features it is determined by the feature map dimension.
Next, we analyze the complexity of steps (1-3).

1. NN search: TreeCANN consists of two stages.
In
the ﬁrst, the dimension of all template points is reduced
from d to d(cid:48) in O(dl) and a k-d tree is built in O(d(cid:48)llogl).
The second stage performs the queries. Each query con-
sists of dimensionality reduction O(d), a search in the k-d
tree O(logl) (on average), and a propagation phase which
leverages spatial coherency O(d). The overall complexity
for ﬁnding the Approximate NN for all the features in the
target image S is O(d(cid:48)llogl + L(d + logl)) on average. The
memory consumption is O(l).

√

√

l, the update of κ(p) takes O(

2. Similarity map calculation: Assuming for simplicity
that Tw = Th =
l) op-
erations, for any W except for the ﬁrst one. Next, DDIS
is calculated with O(l) operations. Given that the over-
all number of sub-windows is L this step’s complexity is
O
. The memory consumption for this
stage is O(l) which is the size of a table holding κ(p).

L(l +

≡O

Ll

√

l)

(cid:16)

(cid:16)

(cid:17)

(cid:17)

1In practice, we exclude patches that are not fully inside the template

or the sub-window, but these are negligible for our complexity analysis.

3. Target localization: Averaging the similarity map is
done efﬁciently using an integral image in O(L). To ﬁnd the
maxima location another swipe over the image is needed,
which takes O(L).

Putting it all together, we get that the overall complexity
of Template Matching with DDIS is O(d(cid:48)llogl + Ll) where
we omitted O(L(d + logl)) since d and l are expected to be
of the same order for small T and d(cid:28)l for large T .

Comparison to BBS One of the beneﬁts of DDIS with
respect to BBS is that it requires only unilateral matches.
The beneﬁt in terms of complexity can now be made clear.
According to [18], the BBS complexity using deep features
is O(Ll4d) and for color features it is O(Ll2d) on aver-
age. The latter case uses heavy caching which consumes
O(l2

L) memory (assuming Sw = Sh =

L).

√

√

7. Empirical Evaluation

Our experimental setup follows that of [18] that created
a benchmark by sampling frames from video sequences an-
notated with bounding-boxes for object tracking [28]. The
videos present a variety of challenges: complex deforma-
tions, luminance changes, scale differences, out-of-plane
rotations, occlusion and more. The benchmark consists
of three data-sets, generated by sampling {270, 270, 254}
pairs of frames with a constant frame (time) difference
dF rame = {25, 50, 100}, producing increasingly challeng-
ing data-sets, and overall, a challenging benchmark for tem-
plate matching.

For each pair of frames, one is used to deﬁne the template
as the annotated ground-truth box, while the second is used
as a target image. As commonly done in object tracking, the
overlap between the detection result and the ground-truth
annotation of the target is taken as a measure of accuracy:
Accuracy = |Rest∩Rtruth|
|Rest∪Rtruth| where |·| counts the number of
pixels in a region and Rtruth and Rest are the ground truth
and estimated rectangles, locating T in S.

Quantitative Evaluation: We compare DDIS and DIS
to BBS, BDS, SSD, SAD and NCC with both color and
deep features. For BBS and DIS we use the exact same
setup as in [18], that is, 3×3 non-overlapping patches rep-
resented in xyHSV space. In Figure 6 we plot for each
data-set and method a success rate curve.
It can be seen
from the Area-Under-Curve (AUC) scores in Table 6d that
DDIS is signiﬁcantly more successful than all previous
methods. Furthermore, DDIS with our simplistic color
features outperforms all other methods with either color
or deep features. When using Deep features, DDIS im-
proves over BBS with margins of ≈ 11%, 15%, 8% for the
three data-sets. When using color features the margins are
≈ 10%, 16%, 21%.

Qualitative Evaluation: Figure 8 displays several de-
tection results on challenging examples, taken from the

Method

Dataset
50

25

100

Mean

DDIS - D 0.679 0.583 0.571 0.611
DDIS - C 0.650 0.590 0.540 0.593
DIS - D
0.630 0.549 0.518 0.566
BBS - D 0.598 0.514 0.532 0.548
SSD - D 0.584 0.512 0.519 0.538
SAD - D 0.582 0.507 0.513 0.534
NCC - D 0.581 0.509 0.491 0.527
BBS - C 0.590 0.505 0.445 0.513
DIS - C
0.561 0.501 0.446 0.503
BDS - C 0.564 0.471 0.425 0.486
BDS - D 0.513 0.447 0.401 0.454
SAD - C 0.516 0.412 0.365 0.431
NCC - C 0.483 0.398 0.359 0.413
0.427 0.363 0.308 0.366
SSD - C
D=deep features
C=color space

(a) dF rame = 25

(b) dF rame = 50

(c) dF rame = 100

(d) AUC results

Figure 6: Template matching accuracy: Evaluation on the benchmark of [18]: 270 template-image pairs with dF rame ∈
{25, 50, 100}. DDIS outperforms competing methods as can be seen in the ROC curves (a)-(c) showing the fraction of
image-pairs with Accuracy > T hreshold∈[0, 1]. The corresponding Area-under-curve (AUC) scores are presented in the
table in (d). For all methods D stands for deep features while C stands for color. DDIS with deep features provides the best
results. DDIS with color features comes in second, outperforming other methods even when they use deep-features.

that

web,
include occlusions, signiﬁcant deformations,
background clutter and blur. We compare DDIS and DIS
to BBS – the current state-of-the-art. It is evident from the
detection likelihood maps that DIS and BBS share a similar
behavior, supporting our suggestion that unilateral match-
ing sufﬁces to capture similarity. DDIS, on the other hand,
accounts also for deformations, hence, it presents cleaner
maps, with fewer distractors.

Runtime: Our implementation is in MATLAB/c++ and
all experiments were performed on a 32GB RAM, Intel i7
quad-core machine. The average(std) runtime for an image-
pair in the benchmark, using color features is 0.86s(0.59),
depending on the template size. For comparison, the av-
erage(std) time for BBS is orders of magnitude longer:
35.47s(80.36). The max and min runtimes of DDIS are
3.44s and 0.06s, respectively, and for BBS are 493s and
0.14s, respectively. Detailed results for dF rame = 25 are
presented in Figure 7. This matches our complexity analy-
sis that showed that DDIS is less affected by the template

Figure 7: Runtime: Each point in the scatter plot marks
the runtime for one of the 270 image-pairs in the dataset
(dF rame = 25). For DDIS the runtime is always small
while for BBS it becomes very long as the template and
image size increase.

size, while BBS dependence on l is polynomial.

8. Conclusions

We introduced a new approach for template matching in
the wild, based on properties of the NN ﬁeld of matches
between target and template features. Our method suggests
not only improvement in terms of detection accuracy, but
also in terms of computational complexity. A drawback of
our algorithm is not dealing with signiﬁcant scale change
of the object. This could possibly be addressed, by com-
puting the likelihood maps over multiple scales. A future
research direction is to explore consideration of more than
the ﬁrst NN for each patch. This could be beneﬁcial to han-
dle repetitive textures.

An important observation, our analysis makes, is that one
does not necessarily need bi-directional matches to compute
similarity. This raises questions regarding the celebrated bi-
directional-similarity approach, which provided excellent
results, but was heavy to compute.

Acknowledgements This research was supported by the
Israel Science Foundation Grant 1089/16 and by the Ollen-
dorf foundation.

A. Appendix: DIS Expectation Term

In this appendix we develop mathematical expressions
for the expectation of DIS in R1. We start by rewriting DIS
in a form convenient for our derivations:

DIS
Q→P

=

1
N

·

N
(cid:88)

i=1

disi(Q, P )

disi(Q, P ) = I [{qj ∈ Q : NN(qj, P ) = pi} (cid:54)= ∅]

Figure 8: Qualitative assessment: The template marked in green (a), is detected in the target image (b) using three Template
Matching methods: BBS, DIS and DDIS (all using the RGB features). (c-e) The corresponding detection likelihood maps
show that DDIS yields more peaked maps that more robustly identify the template. Going over the rows from top to bottom:
(1) BBS prefers a target location where the background matches the template over the location where the motorcycle is at.
This happens because the motorcycle deforms and hence there are few bi-directional correspondences between its template
appearance and target appearance. DIS and DDIS use more information – they consider all the one-directional correspon-
dences. Therefore, they locate the motorcycle correctly. (2) The trophy won by the band One Direction is fully seen in the
template, but occluded in the target. Nonetheless, DDIS ﬁnds it (as Section 4.1 said, we only need one direction...). (3)
Complex deformations together with occlusion confuse both DIS and BBS, but not DDIS.

where I is an indicator function and disi(Q, P ) indicates
whether pi is chosen as a NN match at least once.

We proceed with the expectation:

Proof: Given a known set of samples P, the probability that
the NN match for a sampled q∼Q is NOT pi is:

E [disi(Q, P )] = E [disk(Q, P )]

Pr {NN(q, P )(cid:54)=pi|P } =

I [NN(q, P )(cid:54)=pi] fQ(q)dq

(cid:20)

E

DIS
Q→P

(cid:21)

=

1
N

N
(cid:88)

i=1

(4)
where the last step is since samples Q and P are drawn in-
dependently, so all indexes behave alike and we can choose
some arbitrary index k. Continuing with the expectation of
the indicator function, we have:

E [disk(Q, P )] = Pr {disk(Q, P ) = 1}

= 1 − Pr {disk(Q, P ) = 0}

(5)

Claim:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

=

· · ·

p1

pN

(FQ(p−

i ) + 1 − FQ(p+

i ))N ·

fP (pk)dpk

N
(cid:89)

k=1

where FQ(x) = Pr {q ≤ x} and FP (x) = Pr {p ≤ x} are
the CDF’s of Q and P, respectively. p+
i are deﬁned by:

i , p−

|pk − pi|/2

p+
i = pi +

p−
i = pi −

min
pk∈P ∪{+∞}
pk>pi
min
pk∈P ∪{−∞}
pk<pi

|pk − pi|/2

(7)

(cid:90) ∞

−∞

(cid:90) ∞

(cid:90) p−

i

=

fQ(q)dq +

fQ(q)dq

−∞
= FQ(p−

p+
i
i ) + 1 − FQ(p+
i )

where we split R into two ranges where the indicator is not
zero. Since Q consists of N independently sampled points,
the probability that pi is not a NN match for any q∈Q when
Q is sampled and P is known, is:

Pr {disi(Q, P ) = 0|P } =

Pr {NN(q, P )(cid:54)=pi|P }

(cid:104)

(6)

Finally, since all of the points are sampled independently,
we have:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

p1

pN

=

· · ·

Pr {disi(Q, P ) = 0|P } ·

fP (pk)dpk

N
(cid:89)

k=1

Substituting equations (8) and (9) in (10) results in (6). (cid:4)

(8)

(cid:105)N

(9)

(10)

[15] I. Olonetsky and S. Avidan. TreeCANN-kd tree coher-
ence approximate nearest neighbor algorithm. In European
Conference on Computer Vision (ECCV), pages 602–615.
Springer, 2012. 6

[16] C. F. Olson. Maximum-likelihood image matching.

IEEE
Transactions on Pattern Analysis and Machine Intelligence,
24(6):853–857, 2002. 2

[17] S. Oron, A. Bar-Hillel, D. Levi, and S. Avidan. Locally or-
derless tracking. International Journal of Computer Vision,
111(2):213–228, 2015. 2

[18] S. Oron, T. Dekel, T. Xue, W. T. Freeman, and S. Avidan.
Best-buddies similarity-robust template matching using mu-
tual nearest neighbors. arXiv preprint arXiv:1609.01571,
2016. 1, 2, 4, 5, 6, 7

[19] W. Ouyang, F. Tombari, S. Mattoccia, L. Di Stefano, and W.-
K. Cham. Performance evaluation of full search equivalent
pattern matching algorithms. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 34(1):127–143, 2012. 2
[20] O. Pele and M. Werman. Robust real-time pattern match-
IEEE
ing using bayesian sequential hypothesis testing.
Transactions on Pattern Analysis and Machine Intelligence,
30(8):1427–1443, 2008. 2

[21] P. P´erez, C. Hue, J. Vermaak, and M. Gangnet. Color-based
probabilistic tracking. In European Conference on Computer
Vision (ECCV), pages 661–675. Springer, 2002. 2

[22] B. G. Shin, S.-Y. Park, and J. J. Lee. Fast and robust template
matching algorithm in noisy image. In International Confer-
ence on Control, Automation and Systems., pages 6–9. IEEE,
2007. 2

[23] A. Sibiryakov. Fast and high-performance template matching
method. In The IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 1417–1424, 2011. 2
[24] D. Simakov, Y. Caspi, E. Shechtman, and M. Irani. Sum-
In The
marizing visual data using bidirectional similarity.
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 1–8, 2008. 2, 5

[25] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 6

[26] Y. Tian and S. G. Narasimhan. Globally optimal estimation
of nonrigid image distortion. International Journal of Com-
puter Vision, 98(3):279–302, 2012. 2

[27] D.-M. Tsai and C.-H. Chiang. Rotation-invariant pattern
matching using wavelet decomposition. Pattern Recognition
Letters, 23(1):191–201, 2002. 2

[28] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In The IEEE Conference on Computer Vision
benchmark.
and Pattern Recognition (CVPR), pages 2411–2418, 2013. 6

References

[1] S. M. Assari, H. Idrees, and M. Shah.

Human re-
identiﬁcation in crowd videos using personal, social and en-
vironmental constraints. In European Conference on Com-
puter Vision, pages 119–136. Springer, 2016. 1

[2] J.-H. Chen, C.-S. Chen, and Y.-S. Chen. Fast algorithm for
robust template matching with m-estimators. IEEE Transac-
tions on Signal Processing, 51(1):230–243, 2003. 2

[3] D. Comaniciu, V. Ramesh, and P. Meer. Real-time tracking
of non-rigid objects using mean shift. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
volume 2, pages 142–149, 2000. 2

[4] T. Dekel, S. Oron, M. Rubinstein, S. Avidan, and W. T. Free-
man. Best-buddies similarity for robust template matching.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 2021–2029, 2015. 1, 2, 4, 5
[5] M. P. Dubuisson and A. K. Jain. A modiﬁed hausdorff dis-
tance for object matching. In Proceedings of the 12th IAPR
International Conference on Pattern Recognition, volume 1,
pages 566–568, Oct 1994. 2

[6] E. Elboher and M. Werman. Asymmetric correlation: A
noise robust similarity measure for template matching. IEEE
Transactions on Image Processing, 22(8):3062–3073, 2013.
2

[7] P. F. Felzenszwalb, R. B. Girshick, D. McAllester, and D. Ra-
manan. Object detection with discriminatively trained part-
based models. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 32(9):1627–1645, 2010. 1

[8] Y. Hel-Or, H. Hel-Or, and E. David. Matching by tone
IEEE
mapping: Photometric invariant template matching.
Transactions on Pattern Analysis and Machine Intelligence,
36(2):317–330, 2014. 2

[9] Z. Hong, Z. Chen, C. Wang, X. Mei, D. Prokhorov, and
D. Tao. Multi-store tracker (muster): A cognitive psychology
inspired approach to object tracking. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 749–758, 2015. 1

[10] D. P. Huttenlocher, G. A. Klanderman, and W. J. Ruck-
lidge. Comparing images using the hausdorff distance. IEEE
Transactions on Pattern Analysis and Machine Intelligence,
15(9):850–863, 1993. 2

[11] O. Jamriˇska, J. Fiˇser, P. Asente, J. Lu, E. Shechtman, and
D. S`ykora. LazyFluids: appearance transfer for ﬂuid ani-
mations. ACM Transactions on Graphics (TOG), 34(4):92,
2015. 1

[12] H. Y. Kim and S. A. De Ara´ujo. Grayscale template-
matching invariant to rotation, scale, translation, brightness
and contrast. In Paciﬁc-Rim Symposium on Image and Video
Technology, pages 100–113. Springer, 2007. 2

[13] S. Korman, D. Reichman, G. Tsur, and S. Avidan. Fast-
match: Fast afﬁne template matching. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2331–2338, 2013. 2

[14] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchi-
In IEEE In-
cal convolutional features for visual tracking.
ternational Conference on Computer Vision (ICCV), pages
3074–3082, 2015. 6

Template Matching with Deformable Diversity Similarity

Itamar Talmi∗
Technion
titamar@campus.technion.ac.il

Roey Mechrez∗
Technion
roey@tx.technion.ac.il

Lihi Zelnik-Manor
Technion
lihi@ee.technion.ac.il

7
1
0
2
 
r
p
A
 
8
1
 
 
]

V
C
.
s
c
[
 
 
2
v
0
9
1
2
0
.
2
1
6
1
:
v
i
X
r
a

Abstract

We propose a novel measure for template matching
named Deformable Diversity Similarity – based on the di-
versity of feature matches between a target image window
and the template. We rely on both local appearance and
geometric information that jointly lead to a powerful ap-
proach for matching. Our key contribution is a similarity
measure, that is robust to complex deformations, signiﬁcant
background clutter, and occlusions. Empirical evaluation
on the most up-to-date benchmark shows that our method
outperforms the current state-of-the-art in its detection ac-
curacy while improving computational complexity.

1. Introduction

Template Matching is a key component in many com-
puter vision applications such as object detection, tracking,
surveillance, medical imaging and image stitching. Our in-
terest is in Template Matching “in the wild” [4], i.e., when
no prior information is available on the target image. An
example application is to identify the same object in differ-
ent cameras of a surveillance system [1]. Another use case
is in video tracking, where Template Matching is used to
detect drifts and relocate the object after losing it [9]. This
is a challenging task when the transformation between the
template and the target in the image is complex, non-rigid,
or contains occlusions, as illustrated in Figure 1.

Traditional template matching approaches, such as Sum-
of-Squared-Distances or Normalized Cross-Correlation, do
not handle well these complex cases. This is largely be-
cause they penalize all pixels of the template, which re-
sults in false detections when occlusions or large deforma-
tions occur. To overcome this limitation the Best-Buddies-
Similarity (BBS) measure was proposed in [4, 18]. BBS is
based on properties of the Nearest-Neighbor (NN) matches
beween features of the target and features of the template.
It relies only on a subset of the points in the template, thus
hoping to latch on to the relevant features that correspond
between the template and the target. This makes BBS more
robust than previous methods.

∗Authors contributed equally

Figure 1: Template Matching challenges: Template
Matching results of the proposed Deformable Diversity
Similarity (DDIS). (Top) The Miami Heats logo on Lebron
James’s shirt, is marked as template (in green). (Bottom)
Best matches found by DDIS in four target images (in ma-
genta). Different challenges are evident: the ball occludes
the logo, Lebron moves non-rigidly with out-of-plane rota-
tion and complex deformation of the shirt.

In this paper we adopt the feature-based, parameter-free,
approach of BBS and propose a novel similarity measure
for template matching named DDIS: Deformable Diversity
Similarity. DDIS is based on two properties of the Near-
est Neighbor ﬁeld of matches between points of a target
window and the template. The ﬁrst is that the diversity
of NN matches forms a strong cue for template matching.
This idea is supported by observations in [11], where patch
diversity was used to match objects for texture synthesis.
We propose formulas for measuring the NN ﬁeld diversity
and further provide theoretical analysis as well as empirical
evaluations that show the strength of these measures.

The second key idea behind DDIS is to explicitly con-
sider the deformation implied by the NN ﬁeld. As was
shown by the seminal work of [7] on Deformable Part Mod-
els, allowing deformations while accounting for them in the

1

matching measure is highly advantageous for object detec-
tion. DDIS incorporates similar ideas for template matching
leading to a signiﬁcant improvement in template detection
accuracy in comparison to the state-of-the-art.

A beneﬁt of DDIS with respect to BBS [4, 18] is re-
duced computational complexity. Both measures rely on
NN matches, however, BBS is formulated in a way that re-
quires heavier computations. DDIS is more efﬁcient while
providing statistical properties similar to BBS.

To summarize, in this paper we introduce DDIS, a mea-
sure for template matching in the wild that relies on two ob-
servations: (i) The diversity of NN matches between tem-
plate points and target points is indicative of the similar-
ity between them. (ii) The deformation implied by the NN
ﬁeld should be explicitly accounted for. DDIS is robust and
parameter free, it operates in unconstrained environments
and shows improved accuracy compared to previous meth-
ods on a real challenging data-set. Our code is available at
https://github.com/roimehrez/DDIS

2. Related Work

The similarity measure between the template and a sub-
window of the target image is the core part of template
matching. A good review is given in [19]. The commonly
used methods are pixel-wise, e.g., Sum of Squared dif-
ferences (SSD), Sum of Absolute Differences (SAD) and
Normalized Cross-Correlation (NCC), all of which assume
only translation between the template and target. They
could be combined with tone mapping to handle illumina-
tion changes [8] or with asymmetric correlation to handle
noise [6]. To increase robustness to noise pixel-wise mea-
sures such as M-estimators [2, 23] or Hamming-based dis-
tances [22, 20] have been proposed.

More general geometric transformation such as afﬁne are
addressed by [27, 12]. In [13] parametric transformations
are handled by approximating the global optimum of the
parametric model. In [26] non-rigid transformations are ad-
dressed via parametric estimation of the distortion. All of
these methods work very well when their underlying geo-
metric assumptions hold, however, they fail in the presence
of complex deformations, occlusions and clutter.

A second group of methods consider a global proba-
bilistic property of the template. For example in [3, 21]
color Histogram Matching is used (for tracking). This does
not restrict the geometric transformation, however, in many
cases the color histogram is not a good representation, e.g.,
in the presence of background clutter and occlusions. Other
methods combine geometric cues with appearance cues.
For example, a probabilistic solution was suggested in [16],
where geometric and color cues are used to represent the
image in the location-intensity space. Oron et al. [17] ex-
tend this idea by measuring one-to-one distance in xyRGB
space. These methods all make various assumptions that do

not hold in complex scenarios.

A more robust approach, that can handle complex cases
has been recently suggested in [4, 18]. Their approach,
named the Best-Buddies-Similarity (BBS) is based on the
Bi-Directional Similarity (BDS) concept of [24]. They
compute the similarity between a template and a target win-
dow by considering matches between their patches. The
matches are computed in both directions providing robust-
ness to outliers. A similar idea was suggested in [5] by
replacing the max operator of the Hausdorff distance [10]
with a sum. The BBS of [4, 18] lead to a signiﬁcant im-
provement in template matching accuracy over prior meth-
ods.
In this paper we propose a different measure, that
shares with BBS its robustness properties, while yielding
even better detection results.

3. Diversity as a Similarity Measure

To measure similarity between a target window and a
template we ﬁrst ﬁnd for every target patch its Nearest
Neighbor (NN), in terms of appearance, in the template.
Our key idea is that the similarity between the target and
the template is captured by two properties of the implied
NN ﬁeld. First, as shown in Figure 2d, when the target
and template correspond, most target patches have a unique
NN match in the template. This implies that the NN ﬁeld
is highly diverse, pointing to many different patches in the
template. Conversely, as shown in Figure 2e, for arbitrary
targets most patches do NOT have a good match, and the
NNs converge to a small number of template points that
happen to be somewhat similar to the target patches. Sec-
ond, we note that arbitrary matches typically imply a large
deformation, indicated by long arrows in Figure 2e.

Next, we propose two ways for quantifying the amount
of diversity and deformation of the NN ﬁeld. The ﬁrst is
more intuitive and allows elegant statistical analysis. The
second is slightly more sophisticated and more robust.

3.1. Diversity Similarity (DIS)

Let points pi, qj ∈ Rd represent patches of the tem-
plate and target, respectively. Our goal is to measure the
similarity between two sets of points, the template points
i=1 and the target points Q = {qj}M
P = {pi}N
j=1. We
require ﬁnding the NN in P for every point q∈Q, s.t.,
NN(q, P ) = argminp∈P d(q, p) for some given distance
function d(q, p). The ﬁrst property our measures are based
on is the diversity of points p∈P that were found as NNs.

An intuitive way to measure diversity is to count the
number of unique NNs. We deﬁne the Diversity Similar-
ity (DIS) as:

DIS
Q→P

= c |{pi ∈ P : ∃ qj ∈ Q, NN(qj, P ) = pi}|

(1)

where c = 1/min {M, N } is a normalization factor and |{·}|

(a)

(b)

(c)

(d)

(e)

Figure 2: Deformable Diversity: A face template (c),
marked in green (a), is searched in a target image (b). The
face undergoes a complex transformation: background clut-
ter, out of plain rotation, and non-rigid deformation. We
zoom on a bad target window (e) and on the best target win-
dow (d), both are also marked by color in (b). The blue
arrows are samples of the NN ﬁeld: their start point marks
a target patch while the end point marks the position of its
NN in the template. The bad target (e), shows low diversity
of NN patches with large deformation (long arrows). Con-
versely, the best target (d) shows high diversity and small
deformation (short arrows). Best viewed on screen.

denotes group size.

To provide further intuition as to why DIS captures the
similarity between two sets of points we provide an illustra-
tion in 2D in Figure 5. Figure 5a demonstrates that when the
distributions of points in P and Q are similar, most of the
points q∈Q have a unique NN p∈P implying a high DIS
value. Conversely, when P and Q are distributed differ-
ently, as illustrated in Figure 5b, DIS is low. This is since
in areas where Q is sparse while P is dense most of the
points in P are not NN of any q. In addition, in areas where
Q is dense while P is sparse most of the points in Q share
the same NNs. In both cases, since the number of points is
ﬁnite, the overall contribution to DIS is low.

3.2. Deformable Diversity Similarity (DDIS)

While capturing well diversity, DIS does not explicitly
consider the deformation ﬁeld. Accounting for the amount
of deformation is important since while non-rigid transfor-
mations should be allowed, they should also be restricted to
give preference to plausible deformations of real objects.

In order to integrate a penalty on large deformations we
make two modiﬁcations to the way we measure diversity.
First, to obtain an explicit representation of the deformation
ﬁeld we distinguish between the appearance and the posi-

tion of each patch and treat them separately. Second, we
propose a different way to measure diversity, that enables
considering the deformation amount.

Let pa denote the appearance and pl the location of
patch p (and similarly for q). We ﬁnd the appearance
based NN pi for every point qj s.t. pi = NNa(qj, P ) =
argminp∈P d(qa
j , pa) for some given distance d(qa, pa).
The location distance between a point qj and its NNa is de-
noted by rj = d(ql
i). To quantify the amount of diversity
as a function of the NN ﬁeld we deﬁne κ(pi) as the number
of patches q∈Q whose NNa is pi:

j, pl

κ(pi) = |{q ∈ Q : NNa(q, P ) = pi}|

(2)

Finally, we deﬁne the Deformable Diversity Similarity
(DDIS) by aiming for high diversity and small deformation:

DDIS
Q→P

= c

(cid:88)

qj ∈Q

1
rj +1

(cid:18)

(cid:19)

· exp

1 − κ(NNa(qj, P ))

(3)

where c = 1/min {M, N } is a normalization factor.

This deﬁnition can be viewed as a sum of contributions
over the points qj. When a point qj has a unique NN, then
κ(NNa(qj, P )) = 1 and the exponent reaches its maximum
value of 1. Conversely, when the NN of qj is shared by
many other points, then κ(NNa(qj, P )) is large, the expo-
nent value is low and the overall contribution of qj to the
similarity is low. In addition, the contribution of every point
is inversely weighted by the length rj of its implied defor-
mation vector.

DDIS possesses several properties that make it attractive:
(1) it relies mostly on a subset of matches, i.e., points that
have distinct NNs. Points that share NNs will have less in-
ﬂuence on the score. (2) DDIS does not require any prior
knowledge on the data or its underlying deformation. (3)
DDIS analyses the NN ﬁeld, rather than using the actual
distance values. These properties allow DDIS to overcome
challenges such as background clutter, occlusions, and non-
rigid deformations.

3.3. DIS as simpliﬁed DDIS

DIS and DDIS capture diversity in two different ways.
DIS simply counts unique matches in P , while DDIS mea-
sures exponentially the distinctiveness of each NN match
of patches in Q. Nonetheless, we next show that DIS and
DDIS are highly related.

We start by ignoring the deformations by setting rj = 0
in (3) and simplifying (without loss of generality) by assum-
ing M = N . We denote by 1/k the fraction of points p∈P
that are NNs of at least one point in Q. Both DIS and DDIS
reach their maximum value of 1 when k = 1, i.e., when
κ(pi) = 1 ∀pi∈P . When k = N , i.e., all q∈Q share a single
NN, both scores reach their minimum value, DIS=1/N and
DDIS=exp(1 − N ).

(a) E[SSD]

(b) E[BBS]

(c) E[DIS]

Figure 3: DIS as simpliﬁed DDIS: Plots of DIS and DDIS
(with rj = 0, M = N ) as a function of k, where N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
Both DIS and DDIS are maximal at k = 1 and decrease
monotonically, reaching their minimal value when k = N .

Further intuition can be derived from the case of uniform
distribution of NN matches, i.e., when only N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
In this case DIS = (N/k)/N = 1/k, and DDIS =
1/N (cid:80)
qj ∈Q exp(1 − k) = exp(1 − k). Both measures share
extrema points between which they drop monotonically as
a function of k, with DDIS decreasing faster due to its ex-
ponential nature. This is illustrated in Figure 3.

3.4. Statistical Analysis

To further cement our assertions that diversity captures
the similarity between two distributions, we provide statis-
tical analysis, similar to that presented in [4, 18]. Our goal
is to show that the expectation of DIS and DDIS is maximal
when the points in both sets are drawn from the same dis-
tribution, and drops sharply as the distance between the two
distributions increases. We do that via a simple 1D mathe-
matical model, in which an image window is modeled as a
set of points drawn from a general distribution.

Appendix A presents derivations of E[DIS] (Expected
value of DIS) when the points are drawn from two given
distributions. The expression for E[DIS] does not have a
closed form solution, but it can be solved numerically for
selected underlying distributions. Therefore, we adopt the
same setup as [4] where P and Q are assumed to be Gaus-
sian distributions, which are often used as simple statistical
models of image patches. We then use Monte-Carlo inte-
gration to approximate the Expectation for discrete choices
of parameters µQ and σQ. For BBS and SSD we adopt the
derivations in [4], where E[BBS] was also approximated
via Monte-Carlo integration and E[SSD] is normalized.

Figure 4 presents the resulting approximated expected
values. It can be seen that DIS is likely to be maximized
when the distributions are the same, and falls rapidly when
In addition it is
the distributions differ from each other.
evident that DIS and BBS present highly similar behaviors.
Finally, similar to [4], one can show that this holds also for
the multi-dimensional case.

For DDIS we cannot derive nice expressions for its Ex-
pectation E[DDIS]. Instead, we use simulations to approx-
imate it. The simulation needs to consider also locations

(d) E[DDIS]
small deformation

(e) E[DDIS]
large deformation

(f) E[DDIS]
ignore deformation

Figure 4: Expected behavior in the 1D Gaussian case:
Following [4] two point sets, P and Q, are generated
by sampling N = M = 100 points from N (0; 1), and
N (µQ; σQ), respectively, with [µQ, σQ]∈[0, 10]. (Top) The
approximated expectation of SSD (a), BBS (b) and DIS (c)
as a function of µQ and σQ suggest that BBS and DIS be-
have similarly and drop much more rapidly than SSD as
the distributions move apart. (Bottom) The approximated
expectation of DDIS when the mean deformation is small
(d), large (e), and ignored (f) ((d) and (e) are color scaled
jointly). It can be seen that small deformation ﬁelds corre-
spond to a sharper peak in the expectation, while for large
deformations the similarity is always low.

to quantify the amount of deformation, rj, in (3). When
rj = 0 the expectation is similar to that of BBS and DIS.
For rj (cid:54)= 0 we simulate two cases: (i) Small deformation:
We sort the points in each set based on their appearance co-
ordinate, and take as position their index in the sorted list.
When the distributions are different the diversity is very low
anyhow. But when the distributions are similar, the sorting
results in points and their NN having a similar index, which
corresponds to small deformation. (ii) Large deformation:
We sort the points of one set in descending order and the
other set in ascending order, again taking as position their
index in the sorted list. When the distributions are similar,
the sorting results in points and their NN having a different
index, which corresponds to large deformation. Figure 4
shows that for small deformation E[DDIS] drops sharply
as the distributions become more different. For large defor-
mations it is always low, as desired, since even when the ap-
pearances are similar, if the geometric deformation is large
the overall similarity between the point sets is low.

4. Comparison to BBS

Our measures bare resemblance to BBS – all rely on NN
matches between two sets of points. There are, however,

(a) similar distributions

(b) different distributions

Figure 5: Intuition for DIS and BBS: For each point q∈Q
we draw a red arrow pointing at its NN p ∈ P . If q and p are
also best-buddies-pair (BBP, see section 4.1), we change
the red arrow to a green line. DIS counts blue triangles
that are pointed to by either a red arrow or a green line.
(a) P and Q are similarly dis-
BBS counts green lines.
tributed, hence, many p’s are NN of some q and there are
many BBPs. Here DIS = BBS = 8. (b) P and Q have
different distributions. A single q among dense p’s or a sin-
gle p among dense q’s contribute 1 to both DIS and BBS.
Occasionally, there is a unique NN match between Q and
P that is not a BBP. Since the distributions of P and Q are
different both DIS and BBS are relatively low, DIS = 3 and
BBS = 2.

two key differences: (i) the way in which similarity between
the two sets is measured, and, (ii) the penalty on the amount
of spatial deformation. We next analyze the implications of
these differences.

4.1. You Only Need One Direction

The key idea behind the bi-directional similarity ap-
proaches of [4, 18, 24] is that robust matching requires bi-
directional feature correspondences. Our unilateral mea-
sures contradict this claim. In fact, an observation we make
is that, Diversity provides a good approximation to BBS.
The analysis we present is for DIS, since it is simpler than
DDIS and does not incorporate deformation, making the
comparison to BBS more fair and direct.

Recall that BBS counts the number of bi-directional NN
matches between the target and template. A pair of points
pi∈P and qj∈Q are considered a best-buddies-pair (BBP)
if pi is the NN of qj, and qj is the NN of pi. BBS counts the
number of BBPs as a measure of similarity between P and
Q. Clearly, the bilateral nature of BBS is wasteful in terms
of computations, compared to the unilateral DDIS and DIS.
DIS and BBS are deﬁned differently, however, since the
number of patches in both target and template is ﬁnite, DIS
provides a good approximation to BBS. As illustrated in
Figure 5a when the distributions of points in P and Q are
similar, many of the NN relations are bi-directional. This
implies that the values of BBS and DIS are very similar. In
the extreme case when the template and target are identical,
every point q has a unique NN p = q and they form a BBP.
In this case DIS=BBS exactly.

DIS and BBS behave similarly also when the distribu-
tions are different, as illustrated in Figure 5b. In areas where

P is sparse and Q is dense we get multiple points q∈Q that
share the same NN p∈P . At most one of them forms a BBP
and their joint contribution to both DIS and BBS is 1. Since
the number of points in P and Q is ﬁnite, this implies that
there are other areas where P is dense and Q is sparse. In
these areas there are many points in P that are not NN of
any q∈Q, and have zero contribution to both DIS and BBS.
Our observations are in line with the Expectation anal-
ysis of Figure 4.
In addition, our experiments (Sec-
tion 7) show that DIS and BBS achieve comparable tem-
plate matching accuracy.

4.2. Explicit vs. Implicit Deformation Modeling

The need to penalize large deformations was noted
in [4, 18]. This was done implicitly by adding the xy coor-
dinates to the feature vectors when searching for NNs. The
distance between a pair of points is taken as a weighted lin-
ear combination of their appearance and position difference.
This is different from DDIS that considers only appearance
for NN matching and explicitly penalizes the deformation
in the obtained NN ﬁeld. Our approach has two beneﬁts: (i)
improved runtime, and (ii) higher detection accuracy.

Using only appearance for NN matching signiﬁcantly re-
duces runtime since while every image patch is shared by
many sub-windows, its xy coordinates are different in each
of them. This implies that the NN ﬁeld needs to be com-
puted for each image sub-window separately. Conversely,
working in appearance space allows us to perform a single
NN search per image patch. In Section 6 we analyze the
beneﬁts in terms of computational complexity.

Separating between appearance and position also leads
to more accurate template localization. Overlapping target
windows with very similar appearance could lead to very
similar similarity scores. DDIS chooses the window imply-
ing less deformations. Our experiments indicated that this
is important and improves the localization accuracy.

5. Implementation

To utilize DDIS for template matching in images, we fol-
low the traditional raster scan approach. Our algorithm gets
as input a target image S and a template T . Its output is a
frame placing T within S. We denote the width of T by Tw
and its height Th, similarly for S. Each template sized sub-
window W ∈S is compared to T . We extract from T and
W feature vectors, as described below, yielding sets P and
Q respectively. We use the Euclidean distance (L2) to com-
pare appearance features pa and qa. The deformation length
rj is the Euclidean distance between the xy coordinates pl
and ql. Our implementation consists of 4 phases:

0. Feature extraction: We experimented with two forms
of appearance feature, color and deep-features. As color
features we set pa and qa as vectorized RGB pixel values
of 3×3 overlapping patches. To obtain deep-features we

used the popular VGG-Deep-Net [25]. More speciﬁcally,
we take feature maps from layers conv1 2, conv3 4 and
conv4 4 (akin to the suggestion in [14] for object tracking).
We forsake the higher layers since we found the low spatial
resolution inaccurate. The features maps were normalized
to zero mean and unit standard deviation, and then upscaled,
via bi-linear interpolation, to reach the original image size.
1. NN search: We ﬁnd for each feature vector in S, its
approximate NN in the template T . We use TreeCANN [15]
with PCA dimensionality reduction to 9 dimensions, kd-tree
approximation parameter (cid:15) = 2, dense search (gS = gT =
1), and window parameter wS = 3, wT = 5.

2. Similarity map calculation: For each target image
pixel (ignoring boundary pixels) we compute the similarity
between its surrounding sub-window W and the template
T . For each W , we ﬁrst compute κ(pi), ∀pi∈P as deﬁned
in (2). Since subsequent windows have many overlaps, the
computation of κ needs only update the removed and added
features with respect to the previous sub-window. We then
calculate DDIS as deﬁned in (3).

3. Target localization: Finally, the template location is
that with maximum score. Before taking the maximum, we
smooth the similarity map with a uniform kernel of size
3 × Th
Tw

3 , to remove spurious isolated peaks.

6. Complexity

The sets P and Q consist of features from all locations in
T and W , receptively. This implies |P |= |Q|= Tw · Th (cid:44) l.
The number of possible sub-windows1 is Sw·Sh (cid:44) L. Re-
call that d denotes the feature vectors length. For color
features d equals the size of the patch ×3 while for deep-
features it is determined by the feature map dimension.
Next, we analyze the complexity of steps (1-3).

1. NN search: TreeCANN consists of two stages.
In
the ﬁrst, the dimension of all template points is reduced
from d to d(cid:48) in O(dl) and a k-d tree is built in O(d(cid:48)llogl).
The second stage performs the queries. Each query con-
sists of dimensionality reduction O(d), a search in the k-d
tree O(logl) (on average), and a propagation phase which
leverages spatial coherency O(d). The overall complexity
for ﬁnding the Approximate NN for all the features in the
target image S is O(d(cid:48)llogl + L(d + logl)) on average. The
memory consumption is O(l).

√

√

l, the update of κ(p) takes O(

2. Similarity map calculation: Assuming for simplicity
that Tw = Th =
l) op-
erations, for any W except for the ﬁrst one. Next, DDIS
is calculated with O(l) operations. Given that the over-
all number of sub-windows is L this step’s complexity is
O
. The memory consumption for this
stage is O(l) which is the size of a table holding κ(p).

L(l +

≡O

Ll

√

l)

(cid:16)

(cid:17)

(cid:16)

(cid:17)

1In practice, we exclude patches that are not fully inside the template

or the sub-window, but these are negligible for our complexity analysis.

3. Target localization: Averaging the similarity map is
done efﬁciently using an integral image in O(L). To ﬁnd the
maxima location another swipe over the image is needed,
which takes O(L).

Putting it all together, we get that the overall complexity
of Template Matching with DDIS is O(d(cid:48)llogl + Ll) where
we omitted O(L(d + logl)) since d and l are expected to be
of the same order for small T and d(cid:28)l for large T .

Comparison to BBS One of the beneﬁts of DDIS with
respect to BBS is that it requires only unilateral matches.
The beneﬁt in terms of complexity can now be made clear.
According to [18], the BBS complexity using deep features
is O(Ll4d) and for color features it is O(Ll2d) on aver-
age. The latter case uses heavy caching which consumes
O(l2

L) memory (assuming Sw = Sh =

L).

√

√

7. Empirical Evaluation

Our experimental setup follows that of [18] that created
a benchmark by sampling frames from video sequences an-
notated with bounding-boxes for object tracking [28]. The
videos present a variety of challenges: complex deforma-
tions, luminance changes, scale differences, out-of-plane
rotations, occlusion and more. The benchmark consists
of three data-sets, generated by sampling {270, 270, 254}
pairs of frames with a constant frame (time) difference
dF rame = {25, 50, 100}, producing increasingly challeng-
ing data-sets, and overall, a challenging benchmark for tem-
plate matching.

For each pair of frames, one is used to deﬁne the template
as the annotated ground-truth box, while the second is used
as a target image. As commonly done in object tracking, the
overlap between the detection result and the ground-truth
annotation of the target is taken as a measure of accuracy:
Accuracy = |Rest∩Rtruth|
|Rest∪Rtruth| where |·| counts the number of
pixels in a region and Rtruth and Rest are the ground truth
and estimated rectangles, locating T in S.

Quantitative Evaluation: We compare DDIS and DIS
to BBS, BDS, SSD, SAD and NCC with both color and
deep features. For BBS and DIS we use the exact same
setup as in [18], that is, 3×3 non-overlapping patches rep-
resented in xyHSV space. In Figure 6 we plot for each
data-set and method a success rate curve.
It can be seen
from the Area-Under-Curve (AUC) scores in Table 6d that
DDIS is signiﬁcantly more successful than all previous
methods. Furthermore, DDIS with our simplistic color
features outperforms all other methods with either color
or deep features. When using Deep features, DDIS im-
proves over BBS with margins of ≈ 11%, 15%, 8% for the
three data-sets. When using color features the margins are
≈ 10%, 16%, 21%.

Qualitative Evaluation: Figure 8 displays several de-
tection results on challenging examples, taken from the

Method

Dataset
50

25

100

Mean

DDIS - D 0.679 0.583 0.571 0.611
DDIS - C 0.650 0.590 0.540 0.593
DIS - D
0.630 0.549 0.518 0.566
BBS - D 0.598 0.514 0.532 0.548
SSD - D 0.584 0.512 0.519 0.538
SAD - D 0.582 0.507 0.513 0.534
NCC - D 0.581 0.509 0.491 0.527
BBS - C 0.590 0.505 0.445 0.513
DIS - C
0.561 0.501 0.446 0.503
BDS - C 0.564 0.471 0.425 0.486
BDS - D 0.513 0.447 0.401 0.454
SAD - C 0.516 0.412 0.365 0.431
NCC - C 0.483 0.398 0.359 0.413
0.427 0.363 0.308 0.366
SSD - C
D=deep features
C=color space

(a) dF rame = 25

(b) dF rame = 50

(c) dF rame = 100

(d) AUC results

Figure 6: Template matching accuracy: Evaluation on the benchmark of [18]: 270 template-image pairs with dF rame ∈
{25, 50, 100}. DDIS outperforms competing methods as can be seen in the ROC curves (a)-(c) showing the fraction of
image-pairs with Accuracy > T hreshold∈[0, 1]. The corresponding Area-under-curve (AUC) scores are presented in the
table in (d). For all methods D stands for deep features while C stands for color. DDIS with deep features provides the best
results. DDIS with color features comes in second, outperforming other methods even when they use deep-features.

that

web,
include occlusions, signiﬁcant deformations,
background clutter and blur. We compare DDIS and DIS
to BBS – the current state-of-the-art. It is evident from the
detection likelihood maps that DIS and BBS share a similar
behavior, supporting our suggestion that unilateral match-
ing sufﬁces to capture similarity. DDIS, on the other hand,
accounts also for deformations, hence, it presents cleaner
maps, with fewer distractors.

Runtime: Our implementation is in MATLAB/c++ and
all experiments were performed on a 32GB RAM, Intel i7
quad-core machine. The average(std) runtime for an image-
pair in the benchmark, using color features is 0.86s(0.59),
depending on the template size. For comparison, the av-
erage(std) time for BBS is orders of magnitude longer:
35.47s(80.36). The max and min runtimes of DDIS are
3.44s and 0.06s, respectively, and for BBS are 493s and
0.14s, respectively. Detailed results for dF rame = 25 are
presented in Figure 7. This matches our complexity analy-
sis that showed that DDIS is less affected by the template

Figure 7: Runtime: Each point in the scatter plot marks
the runtime for one of the 270 image-pairs in the dataset
(dF rame = 25). For DDIS the runtime is always small
while for BBS it becomes very long as the template and
image size increase.

size, while BBS dependence on l is polynomial.

8. Conclusions

We introduced a new approach for template matching in
the wild, based on properties of the NN ﬁeld of matches
between target and template features. Our method suggests
not only improvement in terms of detection accuracy, but
also in terms of computational complexity. A drawback of
our algorithm is not dealing with signiﬁcant scale change
of the object. This could possibly be addressed, by com-
puting the likelihood maps over multiple scales. A future
research direction is to explore consideration of more than
the ﬁrst NN for each patch. This could be beneﬁcial to han-
dle repetitive textures.

An important observation, our analysis makes, is that one
does not necessarily need bi-directional matches to compute
similarity. This raises questions regarding the celebrated bi-
directional-similarity approach, which provided excellent
results, but was heavy to compute.

Acknowledgements This research was supported by the
Israel Science Foundation Grant 1089/16 and by the Ollen-
dorf foundation.

A. Appendix: DIS Expectation Term

In this appendix we develop mathematical expressions
for the expectation of DIS in R1. We start by rewriting DIS
in a form convenient for our derivations:

DIS
Q→P

=

1
N

·

N
(cid:88)

i=1

disi(Q, P )

disi(Q, P ) = I [{qj ∈ Q : NN(qj, P ) = pi} (cid:54)= ∅]

Figure 8: Qualitative assessment: The template marked in green (a), is detected in the target image (b) using three Template
Matching methods: BBS, DIS and DDIS (all using the RGB features). (c-e) The corresponding detection likelihood maps
show that DDIS yields more peaked maps that more robustly identify the template. Going over the rows from top to bottom:
(1) BBS prefers a target location where the background matches the template over the location where the motorcycle is at.
This happens because the motorcycle deforms and hence there are few bi-directional correspondences between its template
appearance and target appearance. DIS and DDIS use more information – they consider all the one-directional correspon-
dences. Therefore, they locate the motorcycle correctly. (2) The trophy won by the band One Direction is fully seen in the
template, but occluded in the target. Nonetheless, DDIS ﬁnds it (as Section 4.1 said, we only need one direction...). (3)
Complex deformations together with occlusion confuse both DIS and BBS, but not DDIS.

where I is an indicator function and disi(Q, P ) indicates
whether pi is chosen as a NN match at least once.

We proceed with the expectation:

Proof: Given a known set of samples P, the probability that
the NN match for a sampled q∼Q is NOT pi is:

E [disi(Q, P )] = E [disk(Q, P )]

Pr {NN(q, P )(cid:54)=pi|P } =

I [NN(q, P )(cid:54)=pi] fQ(q)dq

(cid:20)

E

DIS
Q→P

(cid:21)

=

1
N

N
(cid:88)

i=1

(4)
where the last step is since samples Q and P are drawn in-
dependently, so all indexes behave alike and we can choose
some arbitrary index k. Continuing with the expectation of
the indicator function, we have:

E [disk(Q, P )] = Pr {disk(Q, P ) = 1}

= 1 − Pr {disk(Q, P ) = 0}

(5)

Claim:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

=

· · ·

p1

pN

(FQ(p−

i ) + 1 − FQ(p+

i ))N ·

fP (pk)dpk

N
(cid:89)

k=1

where FQ(x) = Pr {q ≤ x} and FP (x) = Pr {p ≤ x} are
the CDF’s of Q and P, respectively. p+
i are deﬁned by:

i , p−

|pk − pi|/2

p+
i = pi +

p−
i = pi −

min
pk∈P ∪{+∞}
pk>pi
min
pk∈P ∪{−∞}
pk<pi

|pk − pi|/2

(7)

(cid:90) ∞

−∞

(cid:90) ∞

(cid:90) p−

i

=

fQ(q)dq +

fQ(q)dq

−∞
= FQ(p−

p+
i
i ) + 1 − FQ(p+
i )

where we split R into two ranges where the indicator is not
zero. Since Q consists of N independently sampled points,
the probability that pi is not a NN match for any q∈Q when
Q is sampled and P is known, is:

Pr {disi(Q, P ) = 0|P } =

Pr {NN(q, P )(cid:54)=pi|P }

(cid:104)

(6)

Finally, since all of the points are sampled independently,
we have:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

p1

pN

=

· · ·

Pr {disi(Q, P ) = 0|P } ·

fP (pk)dpk

N
(cid:89)

k=1

Substituting equations (8) and (9) in (10) results in (6). (cid:4)

(8)

(cid:105)N

(9)

(10)

[15] I. Olonetsky and S. Avidan. TreeCANN-kd tree coher-
ence approximate nearest neighbor algorithm. In European
Conference on Computer Vision (ECCV), pages 602–615.
Springer, 2012. 6

[16] C. F. Olson. Maximum-likelihood image matching.

IEEE
Transactions on Pattern Analysis and Machine Intelligence,
24(6):853–857, 2002. 2

[17] S. Oron, A. Bar-Hillel, D. Levi, and S. Avidan. Locally or-
derless tracking. International Journal of Computer Vision,
111(2):213–228, 2015. 2

[18] S. Oron, T. Dekel, T. Xue, W. T. Freeman, and S. Avidan.
Best-buddies similarity-robust template matching using mu-
tual nearest neighbors. arXiv preprint arXiv:1609.01571,
2016. 1, 2, 4, 5, 6, 7

[19] W. Ouyang, F. Tombari, S. Mattoccia, L. Di Stefano, and W.-
K. Cham. Performance evaluation of full search equivalent
pattern matching algorithms. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 34(1):127–143, 2012. 2
[20] O. Pele and M. Werman. Robust real-time pattern match-
IEEE
ing using bayesian sequential hypothesis testing.
Transactions on Pattern Analysis and Machine Intelligence,
30(8):1427–1443, 2008. 2

[21] P. P´erez, C. Hue, J. Vermaak, and M. Gangnet. Color-based
probabilistic tracking. In European Conference on Computer
Vision (ECCV), pages 661–675. Springer, 2002. 2

[22] B. G. Shin, S.-Y. Park, and J. J. Lee. Fast and robust template
matching algorithm in noisy image. In International Confer-
ence on Control, Automation and Systems., pages 6–9. IEEE,
2007. 2

[23] A. Sibiryakov. Fast and high-performance template matching
method. In The IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 1417–1424, 2011. 2
[24] D. Simakov, Y. Caspi, E. Shechtman, and M. Irani. Sum-
In The
marizing visual data using bidirectional similarity.
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 1–8, 2008. 2, 5

[25] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 6

[26] Y. Tian and S. G. Narasimhan. Globally optimal estimation
of nonrigid image distortion. International Journal of Com-
puter Vision, 98(3):279–302, 2012. 2

[27] D.-M. Tsai and C.-H. Chiang. Rotation-invariant pattern
matching using wavelet decomposition. Pattern Recognition
Letters, 23(1):191–201, 2002. 2

[28] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In The IEEE Conference on Computer Vision
benchmark.
and Pattern Recognition (CVPR), pages 2411–2418, 2013. 6

References

[1] S. M. Assari, H. Idrees, and M. Shah.

Human re-
identiﬁcation in crowd videos using personal, social and en-
vironmental constraints. In European Conference on Com-
puter Vision, pages 119–136. Springer, 2016. 1

[2] J.-H. Chen, C.-S. Chen, and Y.-S. Chen. Fast algorithm for
robust template matching with m-estimators. IEEE Transac-
tions on Signal Processing, 51(1):230–243, 2003. 2

[3] D. Comaniciu, V. Ramesh, and P. Meer. Real-time tracking
of non-rigid objects using mean shift. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
volume 2, pages 142–149, 2000. 2

[4] T. Dekel, S. Oron, M. Rubinstein, S. Avidan, and W. T. Free-
man. Best-buddies similarity for robust template matching.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 2021–2029, 2015. 1, 2, 4, 5
[5] M. P. Dubuisson and A. K. Jain. A modiﬁed hausdorff dis-
tance for object matching. In Proceedings of the 12th IAPR
International Conference on Pattern Recognition, volume 1,
pages 566–568, Oct 1994. 2

[6] E. Elboher and M. Werman. Asymmetric correlation: A
noise robust similarity measure for template matching. IEEE
Transactions on Image Processing, 22(8):3062–3073, 2013.
2

[7] P. F. Felzenszwalb, R. B. Girshick, D. McAllester, and D. Ra-
manan. Object detection with discriminatively trained part-
based models. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 32(9):1627–1645, 2010. 1

[8] Y. Hel-Or, H. Hel-Or, and E. David. Matching by tone
IEEE
mapping: Photometric invariant template matching.
Transactions on Pattern Analysis and Machine Intelligence,
36(2):317–330, 2014. 2

[9] Z. Hong, Z. Chen, C. Wang, X. Mei, D. Prokhorov, and
D. Tao. Multi-store tracker (muster): A cognitive psychology
inspired approach to object tracking. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 749–758, 2015. 1

[10] D. P. Huttenlocher, G. A. Klanderman, and W. J. Ruck-
lidge. Comparing images using the hausdorff distance. IEEE
Transactions on Pattern Analysis and Machine Intelligence,
15(9):850–863, 1993. 2

[11] O. Jamriˇska, J. Fiˇser, P. Asente, J. Lu, E. Shechtman, and
D. S`ykora. LazyFluids: appearance transfer for ﬂuid ani-
mations. ACM Transactions on Graphics (TOG), 34(4):92,
2015. 1

[12] H. Y. Kim and S. A. De Ara´ujo. Grayscale template-
matching invariant to rotation, scale, translation, brightness
and contrast. In Paciﬁc-Rim Symposium on Image and Video
Technology, pages 100–113. Springer, 2007. 2

[13] S. Korman, D. Reichman, G. Tsur, and S. Avidan. Fast-
match: Fast afﬁne template matching. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2331–2338, 2013. 2

[14] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchi-
In IEEE In-
cal convolutional features for visual tracking.
ternational Conference on Computer Vision (ICCV), pages
3074–3082, 2015. 6

Template Matching with Deformable Diversity Similarity

Itamar Talmi∗
Technion
titamar@campus.technion.ac.il

Roey Mechrez∗
Technion
roey@tx.technion.ac.il

Lihi Zelnik-Manor
Technion
lihi@ee.technion.ac.il

7
1
0
2
 
r
p
A
 
8
1
 
 
]

V
C
.
s
c
[
 
 
2
v
0
9
1
2
0
.
2
1
6
1
:
v
i
X
r
a

Abstract

We propose a novel measure for template matching
named Deformable Diversity Similarity – based on the di-
versity of feature matches between a target image window
and the template. We rely on both local appearance and
geometric information that jointly lead to a powerful ap-
proach for matching. Our key contribution is a similarity
measure, that is robust to complex deformations, signiﬁcant
background clutter, and occlusions. Empirical evaluation
on the most up-to-date benchmark shows that our method
outperforms the current state-of-the-art in its detection ac-
curacy while improving computational complexity.

1. Introduction

Template Matching is a key component in many com-
puter vision applications such as object detection, tracking,
surveillance, medical imaging and image stitching. Our in-
terest is in Template Matching “in the wild” [4], i.e., when
no prior information is available on the target image. An
example application is to identify the same object in differ-
ent cameras of a surveillance system [1]. Another use case
is in video tracking, where Template Matching is used to
detect drifts and relocate the object after losing it [9]. This
is a challenging task when the transformation between the
template and the target in the image is complex, non-rigid,
or contains occlusions, as illustrated in Figure 1.

Traditional template matching approaches, such as Sum-
of-Squared-Distances or Normalized Cross-Correlation, do
not handle well these complex cases. This is largely be-
cause they penalize all pixels of the template, which re-
sults in false detections when occlusions or large deforma-
tions occur. To overcome this limitation the Best-Buddies-
Similarity (BBS) measure was proposed in [4, 18]. BBS is
based on properties of the Nearest-Neighbor (NN) matches
beween features of the target and features of the template.
It relies only on a subset of the points in the template, thus
hoping to latch on to the relevant features that correspond
between the template and the target. This makes BBS more
robust than previous methods.

∗Authors contributed equally

Figure 1: Template Matching challenges: Template
Matching results of the proposed Deformable Diversity
Similarity (DDIS). (Top) The Miami Heats logo on Lebron
James’s shirt, is marked as template (in green). (Bottom)
Best matches found by DDIS in four target images (in ma-
genta). Different challenges are evident: the ball occludes
the logo, Lebron moves non-rigidly with out-of-plane rota-
tion and complex deformation of the shirt.

In this paper we adopt the feature-based, parameter-free,
approach of BBS and propose a novel similarity measure
for template matching named DDIS: Deformable Diversity
Similarity. DDIS is based on two properties of the Near-
est Neighbor ﬁeld of matches between points of a target
window and the template. The ﬁrst is that the diversity
of NN matches forms a strong cue for template matching.
This idea is supported by observations in [11], where patch
diversity was used to match objects for texture synthesis.
We propose formulas for measuring the NN ﬁeld diversity
and further provide theoretical analysis as well as empirical
evaluations that show the strength of these measures.

The second key idea behind DDIS is to explicitly con-
sider the deformation implied by the NN ﬁeld. As was
shown by the seminal work of [7] on Deformable Part Mod-
els, allowing deformations while accounting for them in the

1

matching measure is highly advantageous for object detec-
tion. DDIS incorporates similar ideas for template matching
leading to a signiﬁcant improvement in template detection
accuracy in comparison to the state-of-the-art.

A beneﬁt of DDIS with respect to BBS [4, 18] is re-
duced computational complexity. Both measures rely on
NN matches, however, BBS is formulated in a way that re-
quires heavier computations. DDIS is more efﬁcient while
providing statistical properties similar to BBS.

To summarize, in this paper we introduce DDIS, a mea-
sure for template matching in the wild that relies on two ob-
servations: (i) The diversity of NN matches between tem-
plate points and target points is indicative of the similar-
ity between them. (ii) The deformation implied by the NN
ﬁeld should be explicitly accounted for. DDIS is robust and
parameter free, it operates in unconstrained environments
and shows improved accuracy compared to previous meth-
ods on a real challenging data-set. Our code is available at
https://github.com/roimehrez/DDIS

2. Related Work

The similarity measure between the template and a sub-
window of the target image is the core part of template
matching. A good review is given in [19]. The commonly
used methods are pixel-wise, e.g., Sum of Squared dif-
ferences (SSD), Sum of Absolute Differences (SAD) and
Normalized Cross-Correlation (NCC), all of which assume
only translation between the template and target. They
could be combined with tone mapping to handle illumina-
tion changes [8] or with asymmetric correlation to handle
noise [6]. To increase robustness to noise pixel-wise mea-
sures such as M-estimators [2, 23] or Hamming-based dis-
tances [22, 20] have been proposed.

More general geometric transformation such as afﬁne are
addressed by [27, 12]. In [13] parametric transformations
are handled by approximating the global optimum of the
parametric model. In [26] non-rigid transformations are ad-
dressed via parametric estimation of the distortion. All of
these methods work very well when their underlying geo-
metric assumptions hold, however, they fail in the presence
of complex deformations, occlusions and clutter.

A second group of methods consider a global proba-
bilistic property of the template. For example in [3, 21]
color Histogram Matching is used (for tracking). This does
not restrict the geometric transformation, however, in many
cases the color histogram is not a good representation, e.g.,
in the presence of background clutter and occlusions. Other
methods combine geometric cues with appearance cues.
For example, a probabilistic solution was suggested in [16],
where geometric and color cues are used to represent the
image in the location-intensity space. Oron et al. [17] ex-
tend this idea by measuring one-to-one distance in xyRGB
space. These methods all make various assumptions that do

not hold in complex scenarios.

A more robust approach, that can handle complex cases
has been recently suggested in [4, 18]. Their approach,
named the Best-Buddies-Similarity (BBS) is based on the
Bi-Directional Similarity (BDS) concept of [24]. They
compute the similarity between a template and a target win-
dow by considering matches between their patches. The
matches are computed in both directions providing robust-
ness to outliers. A similar idea was suggested in [5] by
replacing the max operator of the Hausdorff distance [10]
with a sum. The BBS of [4, 18] lead to a signiﬁcant im-
provement in template matching accuracy over prior meth-
ods.
In this paper we propose a different measure, that
shares with BBS its robustness properties, while yielding
even better detection results.

3. Diversity as a Similarity Measure

To measure similarity between a target window and a
template we ﬁrst ﬁnd for every target patch its Nearest
Neighbor (NN), in terms of appearance, in the template.
Our key idea is that the similarity between the target and
the template is captured by two properties of the implied
NN ﬁeld. First, as shown in Figure 2d, when the target
and template correspond, most target patches have a unique
NN match in the template. This implies that the NN ﬁeld
is highly diverse, pointing to many different patches in the
template. Conversely, as shown in Figure 2e, for arbitrary
targets most patches do NOT have a good match, and the
NNs converge to a small number of template points that
happen to be somewhat similar to the target patches. Sec-
ond, we note that arbitrary matches typically imply a large
deformation, indicated by long arrows in Figure 2e.

Next, we propose two ways for quantifying the amount
of diversity and deformation of the NN ﬁeld. The ﬁrst is
more intuitive and allows elegant statistical analysis. The
second is slightly more sophisticated and more robust.

3.1. Diversity Similarity (DIS)

Let points pi, qj ∈ Rd represent patches of the tem-
plate and target, respectively. Our goal is to measure the
similarity between two sets of points, the template points
i=1 and the target points Q = {qj}M
P = {pi}N
j=1. We
require ﬁnding the NN in P for every point q∈Q, s.t.,
NN(q, P ) = argminp∈P d(q, p) for some given distance
function d(q, p). The ﬁrst property our measures are based
on is the diversity of points p∈P that were found as NNs.

An intuitive way to measure diversity is to count the
number of unique NNs. We deﬁne the Diversity Similar-
ity (DIS) as:

DIS
Q→P

= c |{pi ∈ P : ∃ qj ∈ Q, NN(qj, P ) = pi}|

(1)

where c = 1/min {M, N } is a normalization factor and |{·}|

(a)

(b)

(c)

(d)

(e)

Figure 2: Deformable Diversity: A face template (c),
marked in green (a), is searched in a target image (b). The
face undergoes a complex transformation: background clut-
ter, out of plain rotation, and non-rigid deformation. We
zoom on a bad target window (e) and on the best target win-
dow (d), both are also marked by color in (b). The blue
arrows are samples of the NN ﬁeld: their start point marks
a target patch while the end point marks the position of its
NN in the template. The bad target (e), shows low diversity
of NN patches with large deformation (long arrows). Con-
versely, the best target (d) shows high diversity and small
deformation (short arrows). Best viewed on screen.

denotes group size.

To provide further intuition as to why DIS captures the
similarity between two sets of points we provide an illustra-
tion in 2D in Figure 5. Figure 5a demonstrates that when the
distributions of points in P and Q are similar, most of the
points q∈Q have a unique NN p∈P implying a high DIS
value. Conversely, when P and Q are distributed differ-
ently, as illustrated in Figure 5b, DIS is low. This is since
in areas where Q is sparse while P is dense most of the
points in P are not NN of any q. In addition, in areas where
Q is dense while P is sparse most of the points in Q share
the same NNs. In both cases, since the number of points is
ﬁnite, the overall contribution to DIS is low.

3.2. Deformable Diversity Similarity (DDIS)

While capturing well diversity, DIS does not explicitly
consider the deformation ﬁeld. Accounting for the amount
of deformation is important since while non-rigid transfor-
mations should be allowed, they should also be restricted to
give preference to plausible deformations of real objects.

In order to integrate a penalty on large deformations we
make two modiﬁcations to the way we measure diversity.
First, to obtain an explicit representation of the deformation
ﬁeld we distinguish between the appearance and the posi-

tion of each patch and treat them separately. Second, we
propose a different way to measure diversity, that enables
considering the deformation amount.

Let pa denote the appearance and pl the location of
patch p (and similarly for q). We ﬁnd the appearance
based NN pi for every point qj s.t. pi = NNa(qj, P ) =
argminp∈P d(qa
j , pa) for some given distance d(qa, pa).
The location distance between a point qj and its NNa is de-
noted by rj = d(ql
i). To quantify the amount of diversity
as a function of the NN ﬁeld we deﬁne κ(pi) as the number
of patches q∈Q whose NNa is pi:

j, pl

κ(pi) = |{q ∈ Q : NNa(q, P ) = pi}|

(2)

Finally, we deﬁne the Deformable Diversity Similarity
(DDIS) by aiming for high diversity and small deformation:

DDIS
Q→P

= c

(cid:88)

qj ∈Q

1
rj +1

(cid:18)

(cid:19)

· exp

1 − κ(NNa(qj, P ))

(3)

where c = 1/min {M, N } is a normalization factor.

This deﬁnition can be viewed as a sum of contributions
over the points qj. When a point qj has a unique NN, then
κ(NNa(qj, P )) = 1 and the exponent reaches its maximum
value of 1. Conversely, when the NN of qj is shared by
many other points, then κ(NNa(qj, P )) is large, the expo-
nent value is low and the overall contribution of qj to the
similarity is low. In addition, the contribution of every point
is inversely weighted by the length rj of its implied defor-
mation vector.

DDIS possesses several properties that make it attractive:
(1) it relies mostly on a subset of matches, i.e., points that
have distinct NNs. Points that share NNs will have less in-
ﬂuence on the score. (2) DDIS does not require any prior
knowledge on the data or its underlying deformation. (3)
DDIS analyses the NN ﬁeld, rather than using the actual
distance values. These properties allow DDIS to overcome
challenges such as background clutter, occlusions, and non-
rigid deformations.

3.3. DIS as simpliﬁed DDIS

DIS and DDIS capture diversity in two different ways.
DIS simply counts unique matches in P , while DDIS mea-
sures exponentially the distinctiveness of each NN match
of patches in Q. Nonetheless, we next show that DIS and
DDIS are highly related.

We start by ignoring the deformations by setting rj = 0
in (3) and simplifying (without loss of generality) by assum-
ing M = N . We denote by 1/k the fraction of points p∈P
that are NNs of at least one point in Q. Both DIS and DDIS
reach their maximum value of 1 when k = 1, i.e., when
κ(pi) = 1 ∀pi∈P . When k = N , i.e., all q∈Q share a single
NN, both scores reach their minimum value, DIS=1/N and
DDIS=exp(1 − N ).

(a) E[SSD]

(b) E[BBS]

(c) E[DIS]

Figure 3: DIS as simpliﬁed DDIS: Plots of DIS and DDIS
(with rj = 0, M = N ) as a function of k, where N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
Both DIS and DDIS are maximal at k = 1 and decrease
monotonically, reaching their minimal value when k = N .

Further intuition can be derived from the case of uniform
distribution of NN matches, i.e., when only N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
In this case DIS = (N/k)/N = 1/k, and DDIS =
1/N (cid:80)
qj ∈Q exp(1 − k) = exp(1 − k). Both measures share
extrema points between which they drop monotonically as
a function of k, with DDIS decreasing faster due to its ex-
ponential nature. This is illustrated in Figure 3.

3.4. Statistical Analysis

To further cement our assertions that diversity captures
the similarity between two distributions, we provide statis-
tical analysis, similar to that presented in [4, 18]. Our goal
is to show that the expectation of DIS and DDIS is maximal
when the points in both sets are drawn from the same dis-
tribution, and drops sharply as the distance between the two
distributions increases. We do that via a simple 1D mathe-
matical model, in which an image window is modeled as a
set of points drawn from a general distribution.

Appendix A presents derivations of E[DIS] (Expected
value of DIS) when the points are drawn from two given
distributions. The expression for E[DIS] does not have a
closed form solution, but it can be solved numerically for
selected underlying distributions. Therefore, we adopt the
same setup as [4] where P and Q are assumed to be Gaus-
sian distributions, which are often used as simple statistical
models of image patches. We then use Monte-Carlo inte-
gration to approximate the Expectation for discrete choices
of parameters µQ and σQ. For BBS and SSD we adopt the
derivations in [4], where E[BBS] was also approximated
via Monte-Carlo integration and E[SSD] is normalized.

Figure 4 presents the resulting approximated expected
values. It can be seen that DIS is likely to be maximized
when the distributions are the same, and falls rapidly when
In addition it is
the distributions differ from each other.
evident that DIS and BBS present highly similar behaviors.
Finally, similar to [4], one can show that this holds also for
the multi-dimensional case.

For DDIS we cannot derive nice expressions for its Ex-
pectation E[DDIS]. Instead, we use simulations to approx-
imate it. The simulation needs to consider also locations

(d) E[DDIS]
small deformation

(e) E[DDIS]
large deformation

(f) E[DDIS]
ignore deformation

Figure 4: Expected behavior in the 1D Gaussian case:
Following [4] two point sets, P and Q, are generated
by sampling N = M = 100 points from N (0; 1), and
N (µQ; σQ), respectively, with [µQ, σQ]∈[0, 10]. (Top) The
approximated expectation of SSD (a), BBS (b) and DIS (c)
as a function of µQ and σQ suggest that BBS and DIS be-
have similarly and drop much more rapidly than SSD as
the distributions move apart. (Bottom) The approximated
expectation of DDIS when the mean deformation is small
(d), large (e), and ignored (f) ((d) and (e) are color scaled
jointly). It can be seen that small deformation ﬁelds corre-
spond to a sharper peak in the expectation, while for large
deformations the similarity is always low.

to quantify the amount of deformation, rj, in (3). When
rj = 0 the expectation is similar to that of BBS and DIS.
For rj (cid:54)= 0 we simulate two cases: (i) Small deformation:
We sort the points in each set based on their appearance co-
ordinate, and take as position their index in the sorted list.
When the distributions are different the diversity is very low
anyhow. But when the distributions are similar, the sorting
results in points and their NN having a similar index, which
corresponds to small deformation. (ii) Large deformation:
We sort the points of one set in descending order and the
other set in ascending order, again taking as position their
index in the sorted list. When the distributions are similar,
the sorting results in points and their NN having a different
index, which corresponds to large deformation. Figure 4
shows that for small deformation E[DDIS] drops sharply
as the distributions become more different. For large defor-
mations it is always low, as desired, since even when the ap-
pearances are similar, if the geometric deformation is large
the overall similarity between the point sets is low.

4. Comparison to BBS

Our measures bare resemblance to BBS – all rely on NN
matches between two sets of points. There are, however,

(a) similar distributions

(b) different distributions

Figure 5: Intuition for DIS and BBS: For each point q∈Q
we draw a red arrow pointing at its NN p ∈ P . If q and p are
also best-buddies-pair (BBP, see section 4.1), we change
the red arrow to a green line. DIS counts blue triangles
that are pointed to by either a red arrow or a green line.
(a) P and Q are similarly dis-
BBS counts green lines.
tributed, hence, many p’s are NN of some q and there are
many BBPs. Here DIS = BBS = 8. (b) P and Q have
different distributions. A single q among dense p’s or a sin-
gle p among dense q’s contribute 1 to both DIS and BBS.
Occasionally, there is a unique NN match between Q and
P that is not a BBP. Since the distributions of P and Q are
different both DIS and BBS are relatively low, DIS = 3 and
BBS = 2.

two key differences: (i) the way in which similarity between
the two sets is measured, and, (ii) the penalty on the amount
of spatial deformation. We next analyze the implications of
these differences.

4.1. You Only Need One Direction

The key idea behind the bi-directional similarity ap-
proaches of [4, 18, 24] is that robust matching requires bi-
directional feature correspondences. Our unilateral mea-
sures contradict this claim. In fact, an observation we make
is that, Diversity provides a good approximation to BBS.
The analysis we present is for DIS, since it is simpler than
DDIS and does not incorporate deformation, making the
comparison to BBS more fair and direct.

Recall that BBS counts the number of bi-directional NN
matches between the target and template. A pair of points
pi∈P and qj∈Q are considered a best-buddies-pair (BBP)
if pi is the NN of qj, and qj is the NN of pi. BBS counts the
number of BBPs as a measure of similarity between P and
Q. Clearly, the bilateral nature of BBS is wasteful in terms
of computations, compared to the unilateral DDIS and DIS.
DIS and BBS are deﬁned differently, however, since the
number of patches in both target and template is ﬁnite, DIS
provides a good approximation to BBS. As illustrated in
Figure 5a when the distributions of points in P and Q are
similar, many of the NN relations are bi-directional. This
implies that the values of BBS and DIS are very similar. In
the extreme case when the template and target are identical,
every point q has a unique NN p = q and they form a BBP.
In this case DIS=BBS exactly.

DIS and BBS behave similarly also when the distribu-
tions are different, as illustrated in Figure 5b. In areas where

P is sparse and Q is dense we get multiple points q∈Q that
share the same NN p∈P . At most one of them forms a BBP
and their joint contribution to both DIS and BBS is 1. Since
the number of points in P and Q is ﬁnite, this implies that
there are other areas where P is dense and Q is sparse. In
these areas there are many points in P that are not NN of
any q∈Q, and have zero contribution to both DIS and BBS.
Our observations are in line with the Expectation anal-
ysis of Figure 4.
In addition, our experiments (Sec-
tion 7) show that DIS and BBS achieve comparable tem-
plate matching accuracy.

4.2. Explicit vs. Implicit Deformation Modeling

The need to penalize large deformations was noted
in [4, 18]. This was done implicitly by adding the xy coor-
dinates to the feature vectors when searching for NNs. The
distance between a pair of points is taken as a weighted lin-
ear combination of their appearance and position difference.
This is different from DDIS that considers only appearance
for NN matching and explicitly penalizes the deformation
in the obtained NN ﬁeld. Our approach has two beneﬁts: (i)
improved runtime, and (ii) higher detection accuracy.

Using only appearance for NN matching signiﬁcantly re-
duces runtime since while every image patch is shared by
many sub-windows, its xy coordinates are different in each
of them. This implies that the NN ﬁeld needs to be com-
puted for each image sub-window separately. Conversely,
working in appearance space allows us to perform a single
NN search per image patch. In Section 6 we analyze the
beneﬁts in terms of computational complexity.

Separating between appearance and position also leads
to more accurate template localization. Overlapping target
windows with very similar appearance could lead to very
similar similarity scores. DDIS chooses the window imply-
ing less deformations. Our experiments indicated that this
is important and improves the localization accuracy.

5. Implementation

To utilize DDIS for template matching in images, we fol-
low the traditional raster scan approach. Our algorithm gets
as input a target image S and a template T . Its output is a
frame placing T within S. We denote the width of T by Tw
and its height Th, similarly for S. Each template sized sub-
window W ∈S is compared to T . We extract from T and
W feature vectors, as described below, yielding sets P and
Q respectively. We use the Euclidean distance (L2) to com-
pare appearance features pa and qa. The deformation length
rj is the Euclidean distance between the xy coordinates pl
and ql. Our implementation consists of 4 phases:

0. Feature extraction: We experimented with two forms
of appearance feature, color and deep-features. As color
features we set pa and qa as vectorized RGB pixel values
of 3×3 overlapping patches. To obtain deep-features we

used the popular VGG-Deep-Net [25]. More speciﬁcally,
we take feature maps from layers conv1 2, conv3 4 and
conv4 4 (akin to the suggestion in [14] for object tracking).
We forsake the higher layers since we found the low spatial
resolution inaccurate. The features maps were normalized
to zero mean and unit standard deviation, and then upscaled,
via bi-linear interpolation, to reach the original image size.
1. NN search: We ﬁnd for each feature vector in S, its
approximate NN in the template T . We use TreeCANN [15]
with PCA dimensionality reduction to 9 dimensions, kd-tree
approximation parameter (cid:15) = 2, dense search (gS = gT =
1), and window parameter wS = 3, wT = 5.

2. Similarity map calculation: For each target image
pixel (ignoring boundary pixels) we compute the similarity
between its surrounding sub-window W and the template
T . For each W , we ﬁrst compute κ(pi), ∀pi∈P as deﬁned
in (2). Since subsequent windows have many overlaps, the
computation of κ needs only update the removed and added
features with respect to the previous sub-window. We then
calculate DDIS as deﬁned in (3).

3. Target localization: Finally, the template location is
that with maximum score. Before taking the maximum, we
smooth the similarity map with a uniform kernel of size
3 × Th
Tw

3 , to remove spurious isolated peaks.

6. Complexity

The sets P and Q consist of features from all locations in
T and W , receptively. This implies |P |= |Q|= Tw · Th (cid:44) l.
The number of possible sub-windows1 is Sw·Sh (cid:44) L. Re-
call that d denotes the feature vectors length. For color
features d equals the size of the patch ×3 while for deep-
features it is determined by the feature map dimension.
Next, we analyze the complexity of steps (1-3).

1. NN search: TreeCANN consists of two stages.
In
the ﬁrst, the dimension of all template points is reduced
from d to d(cid:48) in O(dl) and a k-d tree is built in O(d(cid:48)llogl).
The second stage performs the queries. Each query con-
sists of dimensionality reduction O(d), a search in the k-d
tree O(logl) (on average), and a propagation phase which
leverages spatial coherency O(d). The overall complexity
for ﬁnding the Approximate NN for all the features in the
target image S is O(d(cid:48)llogl + L(d + logl)) on average. The
memory consumption is O(l).

√

√

l, the update of κ(p) takes O(

2. Similarity map calculation: Assuming for simplicity
that Tw = Th =
l) op-
erations, for any W except for the ﬁrst one. Next, DDIS
is calculated with O(l) operations. Given that the over-
all number of sub-windows is L this step’s complexity is
O
. The memory consumption for this
stage is O(l) which is the size of a table holding κ(p).

L(l +

≡O

Ll

√

l)

(cid:16)

(cid:17)

(cid:16)

(cid:17)

1In practice, we exclude patches that are not fully inside the template

or the sub-window, but these are negligible for our complexity analysis.

3. Target localization: Averaging the similarity map is
done efﬁciently using an integral image in O(L). To ﬁnd the
maxima location another swipe over the image is needed,
which takes O(L).

Putting it all together, we get that the overall complexity
of Template Matching with DDIS is O(d(cid:48)llogl + Ll) where
we omitted O(L(d + logl)) since d and l are expected to be
of the same order for small T and d(cid:28)l for large T .

Comparison to BBS One of the beneﬁts of DDIS with
respect to BBS is that it requires only unilateral matches.
The beneﬁt in terms of complexity can now be made clear.
According to [18], the BBS complexity using deep features
is O(Ll4d) and for color features it is O(Ll2d) on aver-
age. The latter case uses heavy caching which consumes
O(l2

L) memory (assuming Sw = Sh =

L).

√

√

7. Empirical Evaluation

Our experimental setup follows that of [18] that created
a benchmark by sampling frames from video sequences an-
notated with bounding-boxes for object tracking [28]. The
videos present a variety of challenges: complex deforma-
tions, luminance changes, scale differences, out-of-plane
rotations, occlusion and more. The benchmark consists
of three data-sets, generated by sampling {270, 270, 254}
pairs of frames with a constant frame (time) difference
dF rame = {25, 50, 100}, producing increasingly challeng-
ing data-sets, and overall, a challenging benchmark for tem-
plate matching.

For each pair of frames, one is used to deﬁne the template
as the annotated ground-truth box, while the second is used
as a target image. As commonly done in object tracking, the
overlap between the detection result and the ground-truth
annotation of the target is taken as a measure of accuracy:
Accuracy = |Rest∩Rtruth|
|Rest∪Rtruth| where |·| counts the number of
pixels in a region and Rtruth and Rest are the ground truth
and estimated rectangles, locating T in S.

Quantitative Evaluation: We compare DDIS and DIS
to BBS, BDS, SSD, SAD and NCC with both color and
deep features. For BBS and DIS we use the exact same
setup as in [18], that is, 3×3 non-overlapping patches rep-
resented in xyHSV space. In Figure 6 we plot for each
data-set and method a success rate curve.
It can be seen
from the Area-Under-Curve (AUC) scores in Table 6d that
DDIS is signiﬁcantly more successful than all previous
methods. Furthermore, DDIS with our simplistic color
features outperforms all other methods with either color
or deep features. When using Deep features, DDIS im-
proves over BBS with margins of ≈ 11%, 15%, 8% for the
three data-sets. When using color features the margins are
≈ 10%, 16%, 21%.

Qualitative Evaluation: Figure 8 displays several de-
tection results on challenging examples, taken from the

Method

Dataset
50

25

100

Mean

DDIS - D 0.679 0.583 0.571 0.611
DDIS - C 0.650 0.590 0.540 0.593
DIS - D
0.630 0.549 0.518 0.566
BBS - D 0.598 0.514 0.532 0.548
SSD - D 0.584 0.512 0.519 0.538
SAD - D 0.582 0.507 0.513 0.534
NCC - D 0.581 0.509 0.491 0.527
BBS - C 0.590 0.505 0.445 0.513
DIS - C
0.561 0.501 0.446 0.503
BDS - C 0.564 0.471 0.425 0.486
BDS - D 0.513 0.447 0.401 0.454
SAD - C 0.516 0.412 0.365 0.431
NCC - C 0.483 0.398 0.359 0.413
0.427 0.363 0.308 0.366
SSD - C
D=deep features
C=color space

(a) dF rame = 25

(b) dF rame = 50

(c) dF rame = 100

(d) AUC results

Figure 6: Template matching accuracy: Evaluation on the benchmark of [18]: 270 template-image pairs with dF rame ∈
{25, 50, 100}. DDIS outperforms competing methods as can be seen in the ROC curves (a)-(c) showing the fraction of
image-pairs with Accuracy > T hreshold∈[0, 1]. The corresponding Area-under-curve (AUC) scores are presented in the
table in (d). For all methods D stands for deep features while C stands for color. DDIS with deep features provides the best
results. DDIS with color features comes in second, outperforming other methods even when they use deep-features.

that

web,
include occlusions, signiﬁcant deformations,
background clutter and blur. We compare DDIS and DIS
to BBS – the current state-of-the-art. It is evident from the
detection likelihood maps that DIS and BBS share a similar
behavior, supporting our suggestion that unilateral match-
ing sufﬁces to capture similarity. DDIS, on the other hand,
accounts also for deformations, hence, it presents cleaner
maps, with fewer distractors.

Runtime: Our implementation is in MATLAB/c++ and
all experiments were performed on a 32GB RAM, Intel i7
quad-core machine. The average(std) runtime for an image-
pair in the benchmark, using color features is 0.86s(0.59),
depending on the template size. For comparison, the av-
erage(std) time for BBS is orders of magnitude longer:
35.47s(80.36). The max and min runtimes of DDIS are
3.44s and 0.06s, respectively, and for BBS are 493s and
0.14s, respectively. Detailed results for dF rame = 25 are
presented in Figure 7. This matches our complexity analy-
sis that showed that DDIS is less affected by the template

Figure 7: Runtime: Each point in the scatter plot marks
the runtime for one of the 270 image-pairs in the dataset
(dF rame = 25). For DDIS the runtime is always small
while for BBS it becomes very long as the template and
image size increase.

size, while BBS dependence on l is polynomial.

8. Conclusions

We introduced a new approach for template matching in
the wild, based on properties of the NN ﬁeld of matches
between target and template features. Our method suggests
not only improvement in terms of detection accuracy, but
also in terms of computational complexity. A drawback of
our algorithm is not dealing with signiﬁcant scale change
of the object. This could possibly be addressed, by com-
puting the likelihood maps over multiple scales. A future
research direction is to explore consideration of more than
the ﬁrst NN for each patch. This could be beneﬁcial to han-
dle repetitive textures.

An important observation, our analysis makes, is that one
does not necessarily need bi-directional matches to compute
similarity. This raises questions regarding the celebrated bi-
directional-similarity approach, which provided excellent
results, but was heavy to compute.

Acknowledgements This research was supported by the
Israel Science Foundation Grant 1089/16 and by the Ollen-
dorf foundation.

A. Appendix: DIS Expectation Term

In this appendix we develop mathematical expressions
for the expectation of DIS in R1. We start by rewriting DIS
in a form convenient for our derivations:

DIS
Q→P

=

1
N

·

N
(cid:88)

i=1

disi(Q, P )

disi(Q, P ) = I [{qj ∈ Q : NN(qj, P ) = pi} (cid:54)= ∅]

Figure 8: Qualitative assessment: The template marked in green (a), is detected in the target image (b) using three Template
Matching methods: BBS, DIS and DDIS (all using the RGB features). (c-e) The corresponding detection likelihood maps
show that DDIS yields more peaked maps that more robustly identify the template. Going over the rows from top to bottom:
(1) BBS prefers a target location where the background matches the template over the location where the motorcycle is at.
This happens because the motorcycle deforms and hence there are few bi-directional correspondences between its template
appearance and target appearance. DIS and DDIS use more information – they consider all the one-directional correspon-
dences. Therefore, they locate the motorcycle correctly. (2) The trophy won by the band One Direction is fully seen in the
template, but occluded in the target. Nonetheless, DDIS ﬁnds it (as Section 4.1 said, we only need one direction...). (3)
Complex deformations together with occlusion confuse both DIS and BBS, but not DDIS.

where I is an indicator function and disi(Q, P ) indicates
whether pi is chosen as a NN match at least once.

We proceed with the expectation:

Proof: Given a known set of samples P, the probability that
the NN match for a sampled q∼Q is NOT pi is:

E [disi(Q, P )] = E [disk(Q, P )]

Pr {NN(q, P )(cid:54)=pi|P } =

I [NN(q, P )(cid:54)=pi] fQ(q)dq

(cid:20)

E

DIS
Q→P

(cid:21)

=

1
N

N
(cid:88)

i=1

(4)
where the last step is since samples Q and P are drawn in-
dependently, so all indexes behave alike and we can choose
some arbitrary index k. Continuing with the expectation of
the indicator function, we have:

E [disk(Q, P )] = Pr {disk(Q, P ) = 1}

= 1 − Pr {disk(Q, P ) = 0}

(5)

Claim:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

=

· · ·

p1

pN

(FQ(p−

i ) + 1 − FQ(p+

i ))N ·

fP (pk)dpk

N
(cid:89)

k=1

where FQ(x) = Pr {q ≤ x} and FP (x) = Pr {p ≤ x} are
the CDF’s of Q and P, respectively. p+
i are deﬁned by:

i , p−

|pk − pi|/2

p+
i = pi +

p−
i = pi −

min
pk∈P ∪{+∞}
pk>pi
min
pk∈P ∪{−∞}
pk<pi

|pk − pi|/2

(7)

(cid:90) ∞

−∞

(cid:90) ∞

(cid:90) p−

i

=

fQ(q)dq +

fQ(q)dq

−∞
= FQ(p−

p+
i
i ) + 1 − FQ(p+
i )

where we split R into two ranges where the indicator is not
zero. Since Q consists of N independently sampled points,
the probability that pi is not a NN match for any q∈Q when
Q is sampled and P is known, is:

Pr {disi(Q, P ) = 0|P } =

Pr {NN(q, P )(cid:54)=pi|P }

(cid:104)

(6)

Finally, since all of the points are sampled independently,
we have:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

p1

pN

=

· · ·

Pr {disi(Q, P ) = 0|P } ·

fP (pk)dpk

N
(cid:89)

k=1

Substituting equations (8) and (9) in (10) results in (6). (cid:4)

(8)

(cid:105)N

(9)

(10)

[15] I. Olonetsky and S. Avidan. TreeCANN-kd tree coher-
ence approximate nearest neighbor algorithm. In European
Conference on Computer Vision (ECCV), pages 602–615.
Springer, 2012. 6

[16] C. F. Olson. Maximum-likelihood image matching.

IEEE
Transactions on Pattern Analysis and Machine Intelligence,
24(6):853–857, 2002. 2

[17] S. Oron, A. Bar-Hillel, D. Levi, and S. Avidan. Locally or-
derless tracking. International Journal of Computer Vision,
111(2):213–228, 2015. 2

[18] S. Oron, T. Dekel, T. Xue, W. T. Freeman, and S. Avidan.
Best-buddies similarity-robust template matching using mu-
tual nearest neighbors. arXiv preprint arXiv:1609.01571,
2016. 1, 2, 4, 5, 6, 7

[19] W. Ouyang, F. Tombari, S. Mattoccia, L. Di Stefano, and W.-
K. Cham. Performance evaluation of full search equivalent
pattern matching algorithms. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 34(1):127–143, 2012. 2
[20] O. Pele and M. Werman. Robust real-time pattern match-
IEEE
ing using bayesian sequential hypothesis testing.
Transactions on Pattern Analysis and Machine Intelligence,
30(8):1427–1443, 2008. 2

[21] P. P´erez, C. Hue, J. Vermaak, and M. Gangnet. Color-based
probabilistic tracking. In European Conference on Computer
Vision (ECCV), pages 661–675. Springer, 2002. 2

[22] B. G. Shin, S.-Y. Park, and J. J. Lee. Fast and robust template
matching algorithm in noisy image. In International Confer-
ence on Control, Automation and Systems., pages 6–9. IEEE,
2007. 2

[23] A. Sibiryakov. Fast and high-performance template matching
method. In The IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 1417–1424, 2011. 2
[24] D. Simakov, Y. Caspi, E. Shechtman, and M. Irani. Sum-
In The
marizing visual data using bidirectional similarity.
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 1–8, 2008. 2, 5

[25] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 6

[26] Y. Tian and S. G. Narasimhan. Globally optimal estimation
of nonrigid image distortion. International Journal of Com-
puter Vision, 98(3):279–302, 2012. 2

[27] D.-M. Tsai and C.-H. Chiang. Rotation-invariant pattern
matching using wavelet decomposition. Pattern Recognition
Letters, 23(1):191–201, 2002. 2

[28] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In The IEEE Conference on Computer Vision
benchmark.
and Pattern Recognition (CVPR), pages 2411–2418, 2013. 6

References

[1] S. M. Assari, H. Idrees, and M. Shah.

Human re-
identiﬁcation in crowd videos using personal, social and en-
vironmental constraints. In European Conference on Com-
puter Vision, pages 119–136. Springer, 2016. 1

[2] J.-H. Chen, C.-S. Chen, and Y.-S. Chen. Fast algorithm for
robust template matching with m-estimators. IEEE Transac-
tions on Signal Processing, 51(1):230–243, 2003. 2

[3] D. Comaniciu, V. Ramesh, and P. Meer. Real-time tracking
of non-rigid objects using mean shift. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
volume 2, pages 142–149, 2000. 2

[4] T. Dekel, S. Oron, M. Rubinstein, S. Avidan, and W. T. Free-
man. Best-buddies similarity for robust template matching.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 2021–2029, 2015. 1, 2, 4, 5
[5] M. P. Dubuisson and A. K. Jain. A modiﬁed hausdorff dis-
tance for object matching. In Proceedings of the 12th IAPR
International Conference on Pattern Recognition, volume 1,
pages 566–568, Oct 1994. 2

[6] E. Elboher and M. Werman. Asymmetric correlation: A
noise robust similarity measure for template matching. IEEE
Transactions on Image Processing, 22(8):3062–3073, 2013.
2

[7] P. F. Felzenszwalb, R. B. Girshick, D. McAllester, and D. Ra-
manan. Object detection with discriminatively trained part-
based models. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 32(9):1627–1645, 2010. 1

[8] Y. Hel-Or, H. Hel-Or, and E. David. Matching by tone
IEEE
mapping: Photometric invariant template matching.
Transactions on Pattern Analysis and Machine Intelligence,
36(2):317–330, 2014. 2

[9] Z. Hong, Z. Chen, C. Wang, X. Mei, D. Prokhorov, and
D. Tao. Multi-store tracker (muster): A cognitive psychology
inspired approach to object tracking. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 749–758, 2015. 1

[10] D. P. Huttenlocher, G. A. Klanderman, and W. J. Ruck-
lidge. Comparing images using the hausdorff distance. IEEE
Transactions on Pattern Analysis and Machine Intelligence,
15(9):850–863, 1993. 2

[11] O. Jamriˇska, J. Fiˇser, P. Asente, J. Lu, E. Shechtman, and
D. S`ykora. LazyFluids: appearance transfer for ﬂuid ani-
mations. ACM Transactions on Graphics (TOG), 34(4):92,
2015. 1

[12] H. Y. Kim and S. A. De Ara´ujo. Grayscale template-
matching invariant to rotation, scale, translation, brightness
and contrast. In Paciﬁc-Rim Symposium on Image and Video
Technology, pages 100–113. Springer, 2007. 2

[13] S. Korman, D. Reichman, G. Tsur, and S. Avidan. Fast-
match: Fast afﬁne template matching. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2331–2338, 2013. 2

[14] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchi-
In IEEE In-
cal convolutional features for visual tracking.
ternational Conference on Computer Vision (ICCV), pages
3074–3082, 2015. 6

Template Matching with Deformable Diversity Similarity

Itamar Talmi∗
Technion
titamar@campus.technion.ac.il

Roey Mechrez∗
Technion
roey@tx.technion.ac.il

Lihi Zelnik-Manor
Technion
lihi@ee.technion.ac.il

7
1
0
2
 
r
p
A
 
8
1
 
 
]

V
C
.
s
c
[
 
 
2
v
0
9
1
2
0
.
2
1
6
1
:
v
i
X
r
a

Abstract

We propose a novel measure for template matching
named Deformable Diversity Similarity – based on the di-
versity of feature matches between a target image window
and the template. We rely on both local appearance and
geometric information that jointly lead to a powerful ap-
proach for matching. Our key contribution is a similarity
measure, that is robust to complex deformations, signiﬁcant
background clutter, and occlusions. Empirical evaluation
on the most up-to-date benchmark shows that our method
outperforms the current state-of-the-art in its detection ac-
curacy while improving computational complexity.

1. Introduction

Template Matching is a key component in many com-
puter vision applications such as object detection, tracking,
surveillance, medical imaging and image stitching. Our in-
terest is in Template Matching “in the wild” [4], i.e., when
no prior information is available on the target image. An
example application is to identify the same object in differ-
ent cameras of a surveillance system [1]. Another use case
is in video tracking, where Template Matching is used to
detect drifts and relocate the object after losing it [9]. This
is a challenging task when the transformation between the
template and the target in the image is complex, non-rigid,
or contains occlusions, as illustrated in Figure 1.

Traditional template matching approaches, such as Sum-
of-Squared-Distances or Normalized Cross-Correlation, do
not handle well these complex cases. This is largely be-
cause they penalize all pixels of the template, which re-
sults in false detections when occlusions or large deforma-
tions occur. To overcome this limitation the Best-Buddies-
Similarity (BBS) measure was proposed in [4, 18]. BBS is
based on properties of the Nearest-Neighbor (NN) matches
beween features of the target and features of the template.
It relies only on a subset of the points in the template, thus
hoping to latch on to the relevant features that correspond
between the template and the target. This makes BBS more
robust than previous methods.

∗Authors contributed equally

Figure 1: Template Matching challenges: Template
Matching results of the proposed Deformable Diversity
Similarity (DDIS). (Top) The Miami Heats logo on Lebron
James’s shirt, is marked as template (in green). (Bottom)
Best matches found by DDIS in four target images (in ma-
genta). Different challenges are evident: the ball occludes
the logo, Lebron moves non-rigidly with out-of-plane rota-
tion and complex deformation of the shirt.

In this paper we adopt the feature-based, parameter-free,
approach of BBS and propose a novel similarity measure
for template matching named DDIS: Deformable Diversity
Similarity. DDIS is based on two properties of the Near-
est Neighbor ﬁeld of matches between points of a target
window and the template. The ﬁrst is that the diversity
of NN matches forms a strong cue for template matching.
This idea is supported by observations in [11], where patch
diversity was used to match objects for texture synthesis.
We propose formulas for measuring the NN ﬁeld diversity
and further provide theoretical analysis as well as empirical
evaluations that show the strength of these measures.

The second key idea behind DDIS is to explicitly con-
sider the deformation implied by the NN ﬁeld. As was
shown by the seminal work of [7] on Deformable Part Mod-
els, allowing deformations while accounting for them in the

1

matching measure is highly advantageous for object detec-
tion. DDIS incorporates similar ideas for template matching
leading to a signiﬁcant improvement in template detection
accuracy in comparison to the state-of-the-art.

A beneﬁt of DDIS with respect to BBS [4, 18] is re-
duced computational complexity. Both measures rely on
NN matches, however, BBS is formulated in a way that re-
quires heavier computations. DDIS is more efﬁcient while
providing statistical properties similar to BBS.

To summarize, in this paper we introduce DDIS, a mea-
sure for template matching in the wild that relies on two ob-
servations: (i) The diversity of NN matches between tem-
plate points and target points is indicative of the similar-
ity between them. (ii) The deformation implied by the NN
ﬁeld should be explicitly accounted for. DDIS is robust and
parameter free, it operates in unconstrained environments
and shows improved accuracy compared to previous meth-
ods on a real challenging data-set. Our code is available at
https://github.com/roimehrez/DDIS

2. Related Work

The similarity measure between the template and a sub-
window of the target image is the core part of template
matching. A good review is given in [19]. The commonly
used methods are pixel-wise, e.g., Sum of Squared dif-
ferences (SSD), Sum of Absolute Differences (SAD) and
Normalized Cross-Correlation (NCC), all of which assume
only translation between the template and target. They
could be combined with tone mapping to handle illumina-
tion changes [8] or with asymmetric correlation to handle
noise [6]. To increase robustness to noise pixel-wise mea-
sures such as M-estimators [2, 23] or Hamming-based dis-
tances [22, 20] have been proposed.

More general geometric transformation such as afﬁne are
addressed by [27, 12]. In [13] parametric transformations
are handled by approximating the global optimum of the
parametric model. In [26] non-rigid transformations are ad-
dressed via parametric estimation of the distortion. All of
these methods work very well when their underlying geo-
metric assumptions hold, however, they fail in the presence
of complex deformations, occlusions and clutter.

A second group of methods consider a global proba-
bilistic property of the template. For example in [3, 21]
color Histogram Matching is used (for tracking). This does
not restrict the geometric transformation, however, in many
cases the color histogram is not a good representation, e.g.,
in the presence of background clutter and occlusions. Other
methods combine geometric cues with appearance cues.
For example, a probabilistic solution was suggested in [16],
where geometric and color cues are used to represent the
image in the location-intensity space. Oron et al. [17] ex-
tend this idea by measuring one-to-one distance in xyRGB
space. These methods all make various assumptions that do

not hold in complex scenarios.

A more robust approach, that can handle complex cases
has been recently suggested in [4, 18]. Their approach,
named the Best-Buddies-Similarity (BBS) is based on the
Bi-Directional Similarity (BDS) concept of [24]. They
compute the similarity between a template and a target win-
dow by considering matches between their patches. The
matches are computed in both directions providing robust-
ness to outliers. A similar idea was suggested in [5] by
replacing the max operator of the Hausdorff distance [10]
with a sum. The BBS of [4, 18] lead to a signiﬁcant im-
provement in template matching accuracy over prior meth-
ods.
In this paper we propose a different measure, that
shares with BBS its robustness properties, while yielding
even better detection results.

3. Diversity as a Similarity Measure

To measure similarity between a target window and a
template we ﬁrst ﬁnd for every target patch its Nearest
Neighbor (NN), in terms of appearance, in the template.
Our key idea is that the similarity between the target and
the template is captured by two properties of the implied
NN ﬁeld. First, as shown in Figure 2d, when the target
and template correspond, most target patches have a unique
NN match in the template. This implies that the NN ﬁeld
is highly diverse, pointing to many different patches in the
template. Conversely, as shown in Figure 2e, for arbitrary
targets most patches do NOT have a good match, and the
NNs converge to a small number of template points that
happen to be somewhat similar to the target patches. Sec-
ond, we note that arbitrary matches typically imply a large
deformation, indicated by long arrows in Figure 2e.

Next, we propose two ways for quantifying the amount
of diversity and deformation of the NN ﬁeld. The ﬁrst is
more intuitive and allows elegant statistical analysis. The
second is slightly more sophisticated and more robust.

3.1. Diversity Similarity (DIS)

Let points pi, qj ∈ Rd represent patches of the tem-
plate and target, respectively. Our goal is to measure the
similarity between two sets of points, the template points
i=1 and the target points Q = {qj}M
P = {pi}N
j=1. We
require ﬁnding the NN in P for every point q∈Q, s.t.,
NN(q, P ) = argminp∈P d(q, p) for some given distance
function d(q, p). The ﬁrst property our measures are based
on is the diversity of points p∈P that were found as NNs.

An intuitive way to measure diversity is to count the
number of unique NNs. We deﬁne the Diversity Similar-
ity (DIS) as:

DIS
Q→P

= c |{pi ∈ P : ∃ qj ∈ Q, NN(qj, P ) = pi}|

(1)

where c = 1/min {M, N } is a normalization factor and |{·}|

(a)

(b)

(c)

(d)

(e)

Figure 2: Deformable Diversity: A face template (c),
marked in green (a), is searched in a target image (b). The
face undergoes a complex transformation: background clut-
ter, out of plain rotation, and non-rigid deformation. We
zoom on a bad target window (e) and on the best target win-
dow (d), both are also marked by color in (b). The blue
arrows are samples of the NN ﬁeld: their start point marks
a target patch while the end point marks the position of its
NN in the template. The bad target (e), shows low diversity
of NN patches with large deformation (long arrows). Con-
versely, the best target (d) shows high diversity and small
deformation (short arrows). Best viewed on screen.

denotes group size.

To provide further intuition as to why DIS captures the
similarity between two sets of points we provide an illustra-
tion in 2D in Figure 5. Figure 5a demonstrates that when the
distributions of points in P and Q are similar, most of the
points q∈Q have a unique NN p∈P implying a high DIS
value. Conversely, when P and Q are distributed differ-
ently, as illustrated in Figure 5b, DIS is low. This is since
in areas where Q is sparse while P is dense most of the
points in P are not NN of any q. In addition, in areas where
Q is dense while P is sparse most of the points in Q share
the same NNs. In both cases, since the number of points is
ﬁnite, the overall contribution to DIS is low.

3.2. Deformable Diversity Similarity (DDIS)

While capturing well diversity, DIS does not explicitly
consider the deformation ﬁeld. Accounting for the amount
of deformation is important since while non-rigid transfor-
mations should be allowed, they should also be restricted to
give preference to plausible deformations of real objects.

In order to integrate a penalty on large deformations we
make two modiﬁcations to the way we measure diversity.
First, to obtain an explicit representation of the deformation
ﬁeld we distinguish between the appearance and the posi-

tion of each patch and treat them separately. Second, we
propose a different way to measure diversity, that enables
considering the deformation amount.

Let pa denote the appearance and pl the location of
patch p (and similarly for q). We ﬁnd the appearance
based NN pi for every point qj s.t. pi = NNa(qj, P ) =
argminp∈P d(qa
j , pa) for some given distance d(qa, pa).
The location distance between a point qj and its NNa is de-
noted by rj = d(ql
i). To quantify the amount of diversity
as a function of the NN ﬁeld we deﬁne κ(pi) as the number
of patches q∈Q whose NNa is pi:

j, pl

κ(pi) = |{q ∈ Q : NNa(q, P ) = pi}|

(2)

Finally, we deﬁne the Deformable Diversity Similarity
(DDIS) by aiming for high diversity and small deformation:

DDIS
Q→P

= c

(cid:88)

qj ∈Q

1
rj +1

(cid:18)

(cid:19)

· exp

1 − κ(NNa(qj, P ))

(3)

where c = 1/min {M, N } is a normalization factor.

This deﬁnition can be viewed as a sum of contributions
over the points qj. When a point qj has a unique NN, then
κ(NNa(qj, P )) = 1 and the exponent reaches its maximum
value of 1. Conversely, when the NN of qj is shared by
many other points, then κ(NNa(qj, P )) is large, the expo-
nent value is low and the overall contribution of qj to the
similarity is low. In addition, the contribution of every point
is inversely weighted by the length rj of its implied defor-
mation vector.

DDIS possesses several properties that make it attractive:
(1) it relies mostly on a subset of matches, i.e., points that
have distinct NNs. Points that share NNs will have less in-
ﬂuence on the score. (2) DDIS does not require any prior
knowledge on the data or its underlying deformation. (3)
DDIS analyses the NN ﬁeld, rather than using the actual
distance values. These properties allow DDIS to overcome
challenges such as background clutter, occlusions, and non-
rigid deformations.

3.3. DIS as simpliﬁed DDIS

DIS and DDIS capture diversity in two different ways.
DIS simply counts unique matches in P , while DDIS mea-
sures exponentially the distinctiveness of each NN match
of patches in Q. Nonetheless, we next show that DIS and
DDIS are highly related.

We start by ignoring the deformations by setting rj = 0
in (3) and simplifying (without loss of generality) by assum-
ing M = N . We denote by 1/k the fraction of points p∈P
that are NNs of at least one point in Q. Both DIS and DDIS
reach their maximum value of 1 when k = 1, i.e., when
κ(pi) = 1 ∀pi∈P . When k = N , i.e., all q∈Q share a single
NN, both scores reach their minimum value, DIS=1/N and
DDIS=exp(1 − N ).

(a) E[SSD]

(b) E[BBS]

(c) E[DIS]

Figure 3: DIS as simpliﬁed DDIS: Plots of DIS and DDIS
(with rj = 0, M = N ) as a function of k, where N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
Both DIS and DDIS are maximal at k = 1 and decrease
monotonically, reaching their minimal value when k = N .

Further intuition can be derived from the case of uniform
distribution of NN matches, i.e., when only N/k points
in P are NNs of some q, and for all of them κ(pi) = k.
In this case DIS = (N/k)/N = 1/k, and DDIS =
1/N (cid:80)
qj ∈Q exp(1 − k) = exp(1 − k). Both measures share
extrema points between which they drop monotonically as
a function of k, with DDIS decreasing faster due to its ex-
ponential nature. This is illustrated in Figure 3.

3.4. Statistical Analysis

To further cement our assertions that diversity captures
the similarity between two distributions, we provide statis-
tical analysis, similar to that presented in [4, 18]. Our goal
is to show that the expectation of DIS and DDIS is maximal
when the points in both sets are drawn from the same dis-
tribution, and drops sharply as the distance between the two
distributions increases. We do that via a simple 1D mathe-
matical model, in which an image window is modeled as a
set of points drawn from a general distribution.

Appendix A presents derivations of E[DIS] (Expected
value of DIS) when the points are drawn from two given
distributions. The expression for E[DIS] does not have a
closed form solution, but it can be solved numerically for
selected underlying distributions. Therefore, we adopt the
same setup as [4] where P and Q are assumed to be Gaus-
sian distributions, which are often used as simple statistical
models of image patches. We then use Monte-Carlo inte-
gration to approximate the Expectation for discrete choices
of parameters µQ and σQ. For BBS and SSD we adopt the
derivations in [4], where E[BBS] was also approximated
via Monte-Carlo integration and E[SSD] is normalized.

Figure 4 presents the resulting approximated expected
values. It can be seen that DIS is likely to be maximized
when the distributions are the same, and falls rapidly when
In addition it is
the distributions differ from each other.
evident that DIS and BBS present highly similar behaviors.
Finally, similar to [4], one can show that this holds also for
the multi-dimensional case.

For DDIS we cannot derive nice expressions for its Ex-
pectation E[DDIS]. Instead, we use simulations to approx-
imate it. The simulation needs to consider also locations

(d) E[DDIS]
small deformation

(e) E[DDIS]
large deformation

(f) E[DDIS]
ignore deformation

Figure 4: Expected behavior in the 1D Gaussian case:
Following [4] two point sets, P and Q, are generated
by sampling N = M = 100 points from N (0; 1), and
N (µQ; σQ), respectively, with [µQ, σQ]∈[0, 10]. (Top) The
approximated expectation of SSD (a), BBS (b) and DIS (c)
as a function of µQ and σQ suggest that BBS and DIS be-
have similarly and drop much more rapidly than SSD as
the distributions move apart. (Bottom) The approximated
expectation of DDIS when the mean deformation is small
(d), large (e), and ignored (f) ((d) and (e) are color scaled
jointly). It can be seen that small deformation ﬁelds corre-
spond to a sharper peak in the expectation, while for large
deformations the similarity is always low.

to quantify the amount of deformation, rj, in (3). When
rj = 0 the expectation is similar to that of BBS and DIS.
For rj (cid:54)= 0 we simulate two cases: (i) Small deformation:
We sort the points in each set based on their appearance co-
ordinate, and take as position their index in the sorted list.
When the distributions are different the diversity is very low
anyhow. But when the distributions are similar, the sorting
results in points and their NN having a similar index, which
corresponds to small deformation. (ii) Large deformation:
We sort the points of one set in descending order and the
other set in ascending order, again taking as position their
index in the sorted list. When the distributions are similar,
the sorting results in points and their NN having a different
index, which corresponds to large deformation. Figure 4
shows that for small deformation E[DDIS] drops sharply
as the distributions become more different. For large defor-
mations it is always low, as desired, since even when the ap-
pearances are similar, if the geometric deformation is large
the overall similarity between the point sets is low.

4. Comparison to BBS

Our measures bare resemblance to BBS – all rely on NN
matches between two sets of points. There are, however,

(a) similar distributions

(b) different distributions

Figure 5: Intuition for DIS and BBS: For each point q∈Q
we draw a red arrow pointing at its NN p ∈ P . If q and p are
also best-buddies-pair (BBP, see section 4.1), we change
the red arrow to a green line. DIS counts blue triangles
that are pointed to by either a red arrow or a green line.
(a) P and Q are similarly dis-
BBS counts green lines.
tributed, hence, many p’s are NN of some q and there are
many BBPs. Here DIS = BBS = 8. (b) P and Q have
different distributions. A single q among dense p’s or a sin-
gle p among dense q’s contribute 1 to both DIS and BBS.
Occasionally, there is a unique NN match between Q and
P that is not a BBP. Since the distributions of P and Q are
different both DIS and BBS are relatively low, DIS = 3 and
BBS = 2.

two key differences: (i) the way in which similarity between
the two sets is measured, and, (ii) the penalty on the amount
of spatial deformation. We next analyze the implications of
these differences.

4.1. You Only Need One Direction

The key idea behind the bi-directional similarity ap-
proaches of [4, 18, 24] is that robust matching requires bi-
directional feature correspondences. Our unilateral mea-
sures contradict this claim. In fact, an observation we make
is that, Diversity provides a good approximation to BBS.
The analysis we present is for DIS, since it is simpler than
DDIS and does not incorporate deformation, making the
comparison to BBS more fair and direct.

Recall that BBS counts the number of bi-directional NN
matches between the target and template. A pair of points
pi∈P and qj∈Q are considered a best-buddies-pair (BBP)
if pi is the NN of qj, and qj is the NN of pi. BBS counts the
number of BBPs as a measure of similarity between P and
Q. Clearly, the bilateral nature of BBS is wasteful in terms
of computations, compared to the unilateral DDIS and DIS.
DIS and BBS are deﬁned differently, however, since the
number of patches in both target and template is ﬁnite, DIS
provides a good approximation to BBS. As illustrated in
Figure 5a when the distributions of points in P and Q are
similar, many of the NN relations are bi-directional. This
implies that the values of BBS and DIS are very similar. In
the extreme case when the template and target are identical,
every point q has a unique NN p = q and they form a BBP.
In this case DIS=BBS exactly.

DIS and BBS behave similarly also when the distribu-
tions are different, as illustrated in Figure 5b. In areas where

P is sparse and Q is dense we get multiple points q∈Q that
share the same NN p∈P . At most one of them forms a BBP
and their joint contribution to both DIS and BBS is 1. Since
the number of points in P and Q is ﬁnite, this implies that
there are other areas where P is dense and Q is sparse. In
these areas there are many points in P that are not NN of
any q∈Q, and have zero contribution to both DIS and BBS.
Our observations are in line with the Expectation anal-
ysis of Figure 4.
In addition, our experiments (Sec-
tion 7) show that DIS and BBS achieve comparable tem-
plate matching accuracy.

4.2. Explicit vs. Implicit Deformation Modeling

The need to penalize large deformations was noted
in [4, 18]. This was done implicitly by adding the xy coor-
dinates to the feature vectors when searching for NNs. The
distance between a pair of points is taken as a weighted lin-
ear combination of their appearance and position difference.
This is different from DDIS that considers only appearance
for NN matching and explicitly penalizes the deformation
in the obtained NN ﬁeld. Our approach has two beneﬁts: (i)
improved runtime, and (ii) higher detection accuracy.

Using only appearance for NN matching signiﬁcantly re-
duces runtime since while every image patch is shared by
many sub-windows, its xy coordinates are different in each
of them. This implies that the NN ﬁeld needs to be com-
puted for each image sub-window separately. Conversely,
working in appearance space allows us to perform a single
NN search per image patch. In Section 6 we analyze the
beneﬁts in terms of computational complexity.

Separating between appearance and position also leads
to more accurate template localization. Overlapping target
windows with very similar appearance could lead to very
similar similarity scores. DDIS chooses the window imply-
ing less deformations. Our experiments indicated that this
is important and improves the localization accuracy.

5. Implementation

To utilize DDIS for template matching in images, we fol-
low the traditional raster scan approach. Our algorithm gets
as input a target image S and a template T . Its output is a
frame placing T within S. We denote the width of T by Tw
and its height Th, similarly for S. Each template sized sub-
window W ∈S is compared to T . We extract from T and
W feature vectors, as described below, yielding sets P and
Q respectively. We use the Euclidean distance (L2) to com-
pare appearance features pa and qa. The deformation length
rj is the Euclidean distance between the xy coordinates pl
and ql. Our implementation consists of 4 phases:

0. Feature extraction: We experimented with two forms
of appearance feature, color and deep-features. As color
features we set pa and qa as vectorized RGB pixel values
of 3×3 overlapping patches. To obtain deep-features we

used the popular VGG-Deep-Net [25]. More speciﬁcally,
we take feature maps from layers conv1 2, conv3 4 and
conv4 4 (akin to the suggestion in [14] for object tracking).
We forsake the higher layers since we found the low spatial
resolution inaccurate. The features maps were normalized
to zero mean and unit standard deviation, and then upscaled,
via bi-linear interpolation, to reach the original image size.
1. NN search: We ﬁnd for each feature vector in S, its
approximate NN in the template T . We use TreeCANN [15]
with PCA dimensionality reduction to 9 dimensions, kd-tree
approximation parameter (cid:15) = 2, dense search (gS = gT =
1), and window parameter wS = 3, wT = 5.

2. Similarity map calculation: For each target image
pixel (ignoring boundary pixels) we compute the similarity
between its surrounding sub-window W and the template
T . For each W , we ﬁrst compute κ(pi), ∀pi∈P as deﬁned
in (2). Since subsequent windows have many overlaps, the
computation of κ needs only update the removed and added
features with respect to the previous sub-window. We then
calculate DDIS as deﬁned in (3).

3. Target localization: Finally, the template location is
that with maximum score. Before taking the maximum, we
smooth the similarity map with a uniform kernel of size
3 × Th
Tw

3 , to remove spurious isolated peaks.

6. Complexity

The sets P and Q consist of features from all locations in
T and W , receptively. This implies |P |= |Q|= Tw · Th (cid:44) l.
The number of possible sub-windows1 is Sw·Sh (cid:44) L. Re-
call that d denotes the feature vectors length. For color
features d equals the size of the patch ×3 while for deep-
features it is determined by the feature map dimension.
Next, we analyze the complexity of steps (1-3).

1. NN search: TreeCANN consists of two stages.
In
the ﬁrst, the dimension of all template points is reduced
from d to d(cid:48) in O(dl) and a k-d tree is built in O(d(cid:48)llogl).
The second stage performs the queries. Each query con-
sists of dimensionality reduction O(d), a search in the k-d
tree O(logl) (on average), and a propagation phase which
leverages spatial coherency O(d). The overall complexity
for ﬁnding the Approximate NN for all the features in the
target image S is O(d(cid:48)llogl + L(d + logl)) on average. The
memory consumption is O(l).

√

√

l, the update of κ(p) takes O(

2. Similarity map calculation: Assuming for simplicity
that Tw = Th =
l) op-
erations, for any W except for the ﬁrst one. Next, DDIS
is calculated with O(l) operations. Given that the over-
all number of sub-windows is L this step’s complexity is
O
. The memory consumption for this
stage is O(l) which is the size of a table holding κ(p).

L(l +

≡O

Ll

√

l)

(cid:16)

(cid:17)

(cid:16)

(cid:17)

1In practice, we exclude patches that are not fully inside the template

or the sub-window, but these are negligible for our complexity analysis.

3. Target localization: Averaging the similarity map is
done efﬁciently using an integral image in O(L). To ﬁnd the
maxima location another swipe over the image is needed,
which takes O(L).

Putting it all together, we get that the overall complexity
of Template Matching with DDIS is O(d(cid:48)llogl + Ll) where
we omitted O(L(d + logl)) since d and l are expected to be
of the same order for small T and d(cid:28)l for large T .

Comparison to BBS One of the beneﬁts of DDIS with
respect to BBS is that it requires only unilateral matches.
The beneﬁt in terms of complexity can now be made clear.
According to [18], the BBS complexity using deep features
is O(Ll4d) and for color features it is O(Ll2d) on aver-
age. The latter case uses heavy caching which consumes
O(l2

L) memory (assuming Sw = Sh =

L).

√

√

7. Empirical Evaluation

Our experimental setup follows that of [18] that created
a benchmark by sampling frames from video sequences an-
notated with bounding-boxes for object tracking [28]. The
videos present a variety of challenges: complex deforma-
tions, luminance changes, scale differences, out-of-plane
rotations, occlusion and more. The benchmark consists
of three data-sets, generated by sampling {270, 270, 254}
pairs of frames with a constant frame (time) difference
dF rame = {25, 50, 100}, producing increasingly challeng-
ing data-sets, and overall, a challenging benchmark for tem-
plate matching.

For each pair of frames, one is used to deﬁne the template
as the annotated ground-truth box, while the second is used
as a target image. As commonly done in object tracking, the
overlap between the detection result and the ground-truth
annotation of the target is taken as a measure of accuracy:
Accuracy = |Rest∩Rtruth|
|Rest∪Rtruth| where |·| counts the number of
pixels in a region and Rtruth and Rest are the ground truth
and estimated rectangles, locating T in S.

Quantitative Evaluation: We compare DDIS and DIS
to BBS, BDS, SSD, SAD and NCC with both color and
deep features. For BBS and DIS we use the exact same
setup as in [18], that is, 3×3 non-overlapping patches rep-
resented in xyHSV space. In Figure 6 we plot for each
data-set and method a success rate curve.
It can be seen
from the Area-Under-Curve (AUC) scores in Table 6d that
DDIS is signiﬁcantly more successful than all previous
methods. Furthermore, DDIS with our simplistic color
features outperforms all other methods with either color
or deep features. When using Deep features, DDIS im-
proves over BBS with margins of ≈ 11%, 15%, 8% for the
three data-sets. When using color features the margins are
≈ 10%, 16%, 21%.

Qualitative Evaluation: Figure 8 displays several de-
tection results on challenging examples, taken from the

Method

Dataset
50

25

100

Mean

DDIS - D 0.679 0.583 0.571 0.611
DDIS - C 0.650 0.590 0.540 0.593
DIS - D
0.630 0.549 0.518 0.566
BBS - D 0.598 0.514 0.532 0.548
SSD - D 0.584 0.512 0.519 0.538
SAD - D 0.582 0.507 0.513 0.534
NCC - D 0.581 0.509 0.491 0.527
BBS - C 0.590 0.505 0.445 0.513
DIS - C
0.561 0.501 0.446 0.503
BDS - C 0.564 0.471 0.425 0.486
BDS - D 0.513 0.447 0.401 0.454
SAD - C 0.516 0.412 0.365 0.431
NCC - C 0.483 0.398 0.359 0.413
0.427 0.363 0.308 0.366
SSD - C
D=deep features
C=color space

(a) dF rame = 25

(b) dF rame = 50

(c) dF rame = 100

(d) AUC results

Figure 6: Template matching accuracy: Evaluation on the benchmark of [18]: 270 template-image pairs with dF rame ∈
{25, 50, 100}. DDIS outperforms competing methods as can be seen in the ROC curves (a)-(c) showing the fraction of
image-pairs with Accuracy > T hreshold∈[0, 1]. The corresponding Area-under-curve (AUC) scores are presented in the
table in (d). For all methods D stands for deep features while C stands for color. DDIS with deep features provides the best
results. DDIS with color features comes in second, outperforming other methods even when they use deep-features.

that

web,
include occlusions, signiﬁcant deformations,
background clutter and blur. We compare DDIS and DIS
to BBS – the current state-of-the-art. It is evident from the
detection likelihood maps that DIS and BBS share a similar
behavior, supporting our suggestion that unilateral match-
ing sufﬁces to capture similarity. DDIS, on the other hand,
accounts also for deformations, hence, it presents cleaner
maps, with fewer distractors.

Runtime: Our implementation is in MATLAB/c++ and
all experiments were performed on a 32GB RAM, Intel i7
quad-core machine. The average(std) runtime for an image-
pair in the benchmark, using color features is 0.86s(0.59),
depending on the template size. For comparison, the av-
erage(std) time for BBS is orders of magnitude longer:
35.47s(80.36). The max and min runtimes of DDIS are
3.44s and 0.06s, respectively, and for BBS are 493s and
0.14s, respectively. Detailed results for dF rame = 25 are
presented in Figure 7. This matches our complexity analy-
sis that showed that DDIS is less affected by the template

Figure 7: Runtime: Each point in the scatter plot marks
the runtime for one of the 270 image-pairs in the dataset
(dF rame = 25). For DDIS the runtime is always small
while for BBS it becomes very long as the template and
image size increase.

size, while BBS dependence on l is polynomial.

8. Conclusions

We introduced a new approach for template matching in
the wild, based on properties of the NN ﬁeld of matches
between target and template features. Our method suggests
not only improvement in terms of detection accuracy, but
also in terms of computational complexity. A drawback of
our algorithm is not dealing with signiﬁcant scale change
of the object. This could possibly be addressed, by com-
puting the likelihood maps over multiple scales. A future
research direction is to explore consideration of more than
the ﬁrst NN for each patch. This could be beneﬁcial to han-
dle repetitive textures.

An important observation, our analysis makes, is that one
does not necessarily need bi-directional matches to compute
similarity. This raises questions regarding the celebrated bi-
directional-similarity approach, which provided excellent
results, but was heavy to compute.

Acknowledgements This research was supported by the
Israel Science Foundation Grant 1089/16 and by the Ollen-
dorf foundation.

A. Appendix: DIS Expectation Term

In this appendix we develop mathematical expressions
for the expectation of DIS in R1. We start by rewriting DIS
in a form convenient for our derivations:

DIS
Q→P

=

1
N

·

N
(cid:88)

i=1

disi(Q, P )

disi(Q, P ) = I [{qj ∈ Q : NN(qj, P ) = pi} (cid:54)= ∅]

Figure 8: Qualitative assessment: The template marked in green (a), is detected in the target image (b) using three Template
Matching methods: BBS, DIS and DDIS (all using the RGB features). (c-e) The corresponding detection likelihood maps
show that DDIS yields more peaked maps that more robustly identify the template. Going over the rows from top to bottom:
(1) BBS prefers a target location where the background matches the template over the location where the motorcycle is at.
This happens because the motorcycle deforms and hence there are few bi-directional correspondences between its template
appearance and target appearance. DIS and DDIS use more information – they consider all the one-directional correspon-
dences. Therefore, they locate the motorcycle correctly. (2) The trophy won by the band One Direction is fully seen in the
template, but occluded in the target. Nonetheless, DDIS ﬁnds it (as Section 4.1 said, we only need one direction...). (3)
Complex deformations together with occlusion confuse both DIS and BBS, but not DDIS.

where I is an indicator function and disi(Q, P ) indicates
whether pi is chosen as a NN match at least once.

We proceed with the expectation:

Proof: Given a known set of samples P, the probability that
the NN match for a sampled q∼Q is NOT pi is:

E [disi(Q, P )] = E [disk(Q, P )]

Pr {NN(q, P )(cid:54)=pi|P } =

I [NN(q, P )(cid:54)=pi] fQ(q)dq

(cid:20)

E

DIS
Q→P

(cid:21)

=

1
N

N
(cid:88)

i=1

(4)
where the last step is since samples Q and P are drawn in-
dependently, so all indexes behave alike and we can choose
some arbitrary index k. Continuing with the expectation of
the indicator function, we have:

E [disk(Q, P )] = Pr {disk(Q, P ) = 1}

= 1 − Pr {disk(Q, P ) = 0}

(5)

Claim:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

=

· · ·

p1

pN

(FQ(p−

i ) + 1 − FQ(p+

i ))N ·

fP (pk)dpk

N
(cid:89)

k=1

where FQ(x) = Pr {q ≤ x} and FP (x) = Pr {p ≤ x} are
the CDF’s of Q and P, respectively. p+
i are deﬁned by:

i , p−

|pk − pi|/2

p+
i = pi +

p−
i = pi −

min
pk∈P ∪{+∞}
pk>pi
min
pk∈P ∪{−∞}
pk<pi

|pk − pi|/2

(7)

(cid:90) ∞

−∞

(cid:90) ∞

(cid:90) p−

i

=

fQ(q)dq +

fQ(q)dq

−∞
= FQ(p−

p+
i
i ) + 1 − FQ(p+
i )

where we split R into two ranges where the indicator is not
zero. Since Q consists of N independently sampled points,
the probability that pi is not a NN match for any q∈Q when
Q is sampled and P is known, is:

Pr {disi(Q, P ) = 0|P } =

Pr {NN(q, P )(cid:54)=pi|P }

(cid:104)

(6)

Finally, since all of the points are sampled independently,
we have:

Pr {disi(Q, P ) = 0} =
(cid:90)

(cid:90)

p1

pN

=

· · ·

Pr {disi(Q, P ) = 0|P } ·

fP (pk)dpk

N
(cid:89)

k=1

Substituting equations (8) and (9) in (10) results in (6). (cid:4)

(8)

(cid:105)N

(9)

(10)

[15] I. Olonetsky and S. Avidan. TreeCANN-kd tree coher-
ence approximate nearest neighbor algorithm. In European
Conference on Computer Vision (ECCV), pages 602–615.
Springer, 2012. 6

[16] C. F. Olson. Maximum-likelihood image matching.

IEEE
Transactions on Pattern Analysis and Machine Intelligence,
24(6):853–857, 2002. 2

[17] S. Oron, A. Bar-Hillel, D. Levi, and S. Avidan. Locally or-
derless tracking. International Journal of Computer Vision,
111(2):213–228, 2015. 2

[18] S. Oron, T. Dekel, T. Xue, W. T. Freeman, and S. Avidan.
Best-buddies similarity-robust template matching using mu-
tual nearest neighbors. arXiv preprint arXiv:1609.01571,
2016. 1, 2, 4, 5, 6, 7

[19] W. Ouyang, F. Tombari, S. Mattoccia, L. Di Stefano, and W.-
K. Cham. Performance evaluation of full search equivalent
pattern matching algorithms. IEEE Transactions on Pattern
Analysis and Machine Intelligence, 34(1):127–143, 2012. 2
[20] O. Pele and M. Werman. Robust real-time pattern match-
IEEE
ing using bayesian sequential hypothesis testing.
Transactions on Pattern Analysis and Machine Intelligence,
30(8):1427–1443, 2008. 2

[21] P. P´erez, C. Hue, J. Vermaak, and M. Gangnet. Color-based
probabilistic tracking. In European Conference on Computer
Vision (ECCV), pages 661–675. Springer, 2002. 2

[22] B. G. Shin, S.-Y. Park, and J. J. Lee. Fast and robust template
matching algorithm in noisy image. In International Confer-
ence on Control, Automation and Systems., pages 6–9. IEEE,
2007. 2

[23] A. Sibiryakov. Fast and high-performance template matching
method. In The IEEE Conference on Computer Vision and
Pattern Recognition (CVPR), pages 1417–1424, 2011. 2
[24] D. Simakov, Y. Caspi, E. Shechtman, and M. Irani. Sum-
In The
marizing visual data using bidirectional similarity.
IEEE Conference on Computer Vision and Pattern Recogni-
tion (CVPR), pages 1–8, 2008. 2, 5

[25] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. In International
Conference on Learning Representations, 2015. 6

[26] Y. Tian and S. G. Narasimhan. Globally optimal estimation
of nonrigid image distortion. International Journal of Com-
puter Vision, 98(3):279–302, 2012. 2

[27] D.-M. Tsai and C.-H. Chiang. Rotation-invariant pattern
matching using wavelet decomposition. Pattern Recognition
Letters, 23(1):191–201, 2002. 2

[28] Y. Wu, J. Lim, and M.-H. Yang. Online object tracking: A
In The IEEE Conference on Computer Vision
benchmark.
and Pattern Recognition (CVPR), pages 2411–2418, 2013. 6

References

[1] S. M. Assari, H. Idrees, and M. Shah.

Human re-
identiﬁcation in crowd videos using personal, social and en-
vironmental constraints. In European Conference on Com-
puter Vision, pages 119–136. Springer, 2016. 1

[2] J.-H. Chen, C.-S. Chen, and Y.-S. Chen. Fast algorithm for
robust template matching with m-estimators. IEEE Transac-
tions on Signal Processing, 51(1):230–243, 2003. 2

[3] D. Comaniciu, V. Ramesh, and P. Meer. Real-time tracking
of non-rigid objects using mean shift. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
volume 2, pages 142–149, 2000. 2

[4] T. Dekel, S. Oron, M. Rubinstein, S. Avidan, and W. T. Free-
man. Best-buddies similarity for robust template matching.
In The IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 2021–2029, 2015. 1, 2, 4, 5
[5] M. P. Dubuisson and A. K. Jain. A modiﬁed hausdorff dis-
tance for object matching. In Proceedings of the 12th IAPR
International Conference on Pattern Recognition, volume 1,
pages 566–568, Oct 1994. 2

[6] E. Elboher and M. Werman. Asymmetric correlation: A
noise robust similarity measure for template matching. IEEE
Transactions on Image Processing, 22(8):3062–3073, 2013.
2

[7] P. F. Felzenszwalb, R. B. Girshick, D. McAllester, and D. Ra-
manan. Object detection with discriminatively trained part-
based models. IEEE Transactions on Pattern Analysis and
Machine Intelligence, 32(9):1627–1645, 2010. 1

[8] Y. Hel-Or, H. Hel-Or, and E. David. Matching by tone
IEEE
mapping: Photometric invariant template matching.
Transactions on Pattern Analysis and Machine Intelligence,
36(2):317–330, 2014. 2

[9] Z. Hong, Z. Chen, C. Wang, X. Mei, D. Prokhorov, and
D. Tao. Multi-store tracker (muster): A cognitive psychology
inspired approach to object tracking. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 749–758, 2015. 1

[10] D. P. Huttenlocher, G. A. Klanderman, and W. J. Ruck-
lidge. Comparing images using the hausdorff distance. IEEE
Transactions on Pattern Analysis and Machine Intelligence,
15(9):850–863, 1993. 2

[11] O. Jamriˇska, J. Fiˇser, P. Asente, J. Lu, E. Shechtman, and
D. S`ykora. LazyFluids: appearance transfer for ﬂuid ani-
mations. ACM Transactions on Graphics (TOG), 34(4):92,
2015. 1

[12] H. Y. Kim and S. A. De Ara´ujo. Grayscale template-
matching invariant to rotation, scale, translation, brightness
and contrast. In Paciﬁc-Rim Symposium on Image and Video
Technology, pages 100–113. Springer, 2007. 2

[13] S. Korman, D. Reichman, G. Tsur, and S. Avidan. Fast-
match: Fast afﬁne template matching. In The IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2331–2338, 2013. 2

[14] C. Ma, J.-B. Huang, X. Yang, and M.-H. Yang. Hierarchi-
In IEEE In-
cal convolutional features for visual tracking.
ternational Conference on Computer Vision (ICCV), pages
3074–3082, 2015. 6

