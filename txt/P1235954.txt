8
1
0
2
 
v
o
N
 
4
1
 
 
]

V
C
.
s
c
[
 
 
5
v
5
6
4
9
0
.
7
0
7
1
:
v
i
X
r
a

Curriculum Domain Adaptation for Semantic Segmentation of Urban Scenes

Yang Zhang1, Philip David2, and Boqing Gong1

1 Center for Research in Computer Vision, University of Central Florida
2 Computational and Information Sciences Directorate, U.S. Army Research Laboratory
yangzhang@knights.ucf.edu, philip.j.david4.civ@mail.mil, bgong@crcv.ucf.edu

Abstract

During the last half decade, convolutional neural net-
works (CNNs) have triumphed over semantic segmentation,
which is a core task of various emerging industrial appli-
cations such as autonomous driving and medical imaging.
However, to train CNNs requires a huge amount of data,
which is difﬁcult to collect and laborious to annotate. Re-
cent advances in computer graphics make it possible to
train CNN models on photo-realistic synthetic data with
computer-generated annotations. Despite this, the domain
mismatch between the real images and the synthetic data
signiﬁcantly decreases the models’ performance. Hence we
propose a curriculum-style learning approach to minimize
the domain gap in semantic segmentation. The curriculum
domain adaptation solves easy tasks ﬁrst in order to infer
some necessary properties about the target domain; in par-
ticular, the ﬁrst task is to learn global label distributions
over images and local distributions over landmark super-
pixels. These are easy to estimate because images of urban
trafﬁc scenes have strong idiosyncrasies (e.g., the size and
spatial relations of buildings, streets, cars, etc.). We then
train the segmentation network in such a way that the net-
work predictions in the target domain follow those inferred
properties.
In experiments, our method signiﬁcantly out-
performs the baselines as well as the only known existing
approach to the same problem.

1. Introduction

This paper is concerned with domain adaptation for se-
mantic image segmentation of urban scenes, i.e., assigning a
category label to every pixel of an image or video frame [6].
Our interest in this problem is partially due to the exciting
vision of autonomous driving, where understanding com-
plex inner-city trafﬁc scenes is an essential module and se-

For better reproducibility, the code is available at:

https://github.com/YangZhang4065/AdaptationSeg.

mantic segmentation is one of its key constituents [12, 19].
Machine learning methods for automatic semantic seg-
mentation require massive amounts of high-quality anno-
tated imagery in order to produce effective classiﬁers that
generalize well to novel scenes. However, annotating train-
ing imagery for semantic segmentation is a very cumber-
some task for humans. Cordts et al. report that the annota-
tion and quality control take more than 1.5 hours on a single
image of the Cityscapes dataset [12]. Besides, it is very dif-
ﬁcult and time-consuming to collect imagery that depicts
the large number of variabilities possible of urban scenes in
different countries, seasons, and lighting conditions, etc.

To overcome both shortcomings, simulated urban en-
vironments may be used to automatically generate large
amounts of annotated training imagery. This, however, in-
troduces a new problem, that of domain mismatch between
the source (simulated) domain and the target (real) domain.
Figure 2 illustrates some examples drawn from the synthetic
SYNTHIA [48] dataset and the real Cityscapes [12] dataset.
It is readily apparent that there are signiﬁcant visual differ-
ences between the two datasets. Domain adaptation tech-
niques [48, 53, 27] may be used by machine learning meth-
ods to bridge this gap between the two domains.

In computer vision, learning domain-invariant features
has been a prevalent and successful strategy to tackle the
discrepancy between two domains, mainly for classiﬁcation
and regression problems [41, 43]. The core idea is to infer
a new feature space such that the marginal distributions of
the source domain (S) and the target domain (T) are about
the same, i.e., PS(Z) ≈ PT (Z). Furthermore, the predic-
tion function P (Y |Z) from that space is assumed to be the
same across the domains so that one can leverage the rich
labeled data in the source domain to train classiﬁers that
generalize well to the target.
It is hard to verify the as-
sumption, but the work along this line is rich and has led
to impressive practical results regardless, such as the algo-
rithms using linear transformation [22, 23, 15, 55], kernel
methods [40, 20, 2, 31], and the recent deep learning meth-

1

ods that directly extract domain-invariant features from raw
input images [62, 36, 61, 18, 17].

In contrast to prior arts, the semantic segmentation we
study in this paper is a highly structured prediction problem,
for which domain adaptation is only sparsely explored in
the literature [66, 27]. Under structured prediction, can we
still achieve good domain adaptation results by following
the above principles? Our intuition and experimental stud-
ies (cf. Section 4) tell us no. Learning a decision function
for structured prediction is more involved than classiﬁcation
because it has to resolve the predictions in an exponentially
large label space. As a result, the assumption that the source
and target domains share the same prediction function be-
comes less likely to hold. Besides, some discriminative cues
in the data would be suppressed if one matches the feature
representations of the two domains without taking careful
account of the structured labels. Finally, data instances are
the proxy to measure the domain difference [25, 17, 18].
However, it is not immediately clear what comprises the in-
stances in semantic segmentation [27], especially given that
the top-performing segmentation methods are built upon
deep neural networks [35, 44, 39, 10]. Hoffman et al.
take each spatial unit in the fully convolutional network
(FCN) [35] as an instance [27]. We contend that such in-
stances are actually non-i.i.d. in either individual domain,
as their receptive ﬁelds overlap with each other.

How can we avoid the assumption that the source and
target domains share the same prediction function in a trans-
formed domain-invariant feature space? Our proposed so-
lution draws on two key observations. One is that the ur-
ban trafﬁc scene images have strong idiosyncrasies (e.g.,
the size and spatial relations of buildings, streets, cars, etc.).
Therefore, some tasks are “easy” and, more importantly,
suffer less because of the domain discrepancy. Second, the
structured output in semantic segmentation enables conve-
nient posterior regularization [16], as opposed to the popu-
lar (e.g., (cid:96)2) regularization over model parameters.

Accordingly, we propose a curriculum-style [4] domain
adaptation approach. Recall that, in domain adaptation,
only the source domain supplies many labeled data while
there are no or only scarce labels from the target. The cur-
riculum domain adaptation begins with the easy tasks, in
order to gain some high-level properties about the unknown
pixel-level labels for each target image. It then learns a se-
mantic segmentation network — the hard task, whose pre-
dictions over the target images are forced to follow those
necessary properties as much as possible.

To develop the easy tasks in the curriculum, we consider
label distributions over both holistic images and some land-
mark superpixels of the target domain. Take the former for
instance. The label distribution of an image indicates the
percentage of pixels that belong to each category, respec-
tively. We argue that such tasks are easier, despite the do-

main mismatch, than assigning pixel-wise labels. Indeed,
we may directly estimate the label distributions without in-
ferring the pixel-wise labels. Moreover, the relative sizes
of road, vehicle, pedestrian, etc. constrain the shape of the
distributions, effectively reducing the search space. Finally,
models to estimate the label distributions over superpixels
may beneﬁt from the urban scenes’ canonical layout that
transcends domains, e.g., buildings stand beside streets.

Why and when are the seemingly simple label distribu-
tions useful for the domain adaptation of semantic segmen-
tation? In our experiments, we ﬁnd that the segmentation
networks trained on the source domain perform poorly on
many target images, giving rise to disproportionate label
assignments (e.g., many more pixels are classiﬁed to side-
walks than to streets). To rectify this, the image-level label
distribution informs the segmentation network how to up-
date the predictions while the label distributions of the land-
mark superpixels tell the network where to update. Jointly,
they guide the adaptation of the networks to the target do-
main to, at least, generate proportional label predictions.
Note that additional “easy tasks” can be conveniently in-
corporated into our framework in the future.

Our main contribution is on the proposed curriculum-
style domain adaptation for the semantic segmentation of
urban scenes. We select into the curriculum the easy and
useful tasks of inferring label distributions for the target im-
ages and landmark superpixels, in order to gain some nec-
essary properties about the target domain. Built upon these,
we learn a pixel-wise discriminative segmentation network
from the labeled source data and, meanwhile, conduct a
“sanity check” to ensure the network behavior is consistent
with the previously learned knowledge about the target do-
main. Our approach effectively eludes the assumption about
the existence of a common prediction function for both do-
mains in a transformed feature space. It readily applies to
different segmentation networks, as it does not change the
network architecture or tax any intermediate layers.

2. Related work

We discuss some related work on domain adaptation and
semantic segmentation, with special focus on that transfer-
ring knowledge from virtual images to real photos.
Domain adaptation. Conventional machine learning al-
gorithms rely on the assumption that the training and test
data are drawn i.i.d. from the same underlying distribution.
However, it is often the case that there exists some discrep-
ancy from the training to the test stage. Domain adaptation
aims to rectify this mismatch and tune the models toward
better generalization at testing [60, 59, 21, 30, 25].

The existing work on domain adaptation mostly focuses
on classiﬁcation and regression problems [43, 41], e.g.,
learning from online commercial images to classify real-
world objects [50, 22], and, more recently, aims to improve

the adaptability of deep neural networks [36, 18, 17, 61, 7,
37]. Among them, the most relevant work to ours is that
exploring simulated data [56, 65, 48, 63, 27, 45, 53]. Sun
and Saenko train generic object detectors from the synthetic
images [56], while Vazquez et al. use the virtual images to
improve pedestrian detections in real environment [63]. The
other way around, i.e., how to improve the quality of the
simulated images using the real ones, is studied in [53, 45].

Semantic segmentation. Semantic segmentation is the
task of assigning an object label to each pixel of an im-
age. Traditional methods [52, 58, 68] rely on local im-
age features manually designed by domain experts. After
the pioneering work [10, 35] that introduced the convo-
lutional neural network (CNN) [32] to semantic segmen-
tation, most recent top-performing methods are built on
CNNs [64, 49, 3, 69, 39, 13].

An enormous amount of labor-intensive work is required
to annotate the many images that are needed to obtain accu-
rate segmentation models. The PASCAL VOC2012 Chal-
lenge [14] contains nearly 10,000 annotated images for
the segmentation competition, and the MS COCO Chal-
lenge [34] includes over 200,000 annotated images. Ac-
cording to [47], it took about 60 minutes to manually seg-
ment each image in [8] and about 90 minutes for each in
[12]. A plausible approach to reducing the human workload
is to utilize weakly supervised information such as image
labels and bounding boxes [44, 28, 42, 46].

We instead explore the use of almost effortlessly labeled
virtual images for training high-quality segmentation net-
works. In [47], annotating a synthetic image took only 7
seconds on average through a computer game. For the urban
scenes, we use the SYNTHIA [48] dataset which contains
images of a virtual city.

Domain adaptation for semantic segmentation. Upon
observing the obvious mismatch between virtual and real
data [51, 47, 48], we expect domain adaptation to enhance
the segmentation performance on real images by networks
trained on virtual ones. To the best of our knowledge, the
only attempt to algorithmically address this problem is [27].
While it regularizes the intermediate layers and constrains
the output of the network, we propose a different curriculum
domain adaptation strategy. We solve the easy task ﬁrst and
then use the learned knowledge about the target domain to
regularize the network predictions.

3. Approach

In this section, we present the details of the proposed
curriculum domain adaptation for semantic segmentation of
urban scene images. Unlike previous work [43, 27] that
aligns the domains via an intermediate feature space and
thereby implicitly assumes the existence of the same deci-
sion function for the two domains, it is our intuition that,

for structured prediction (i.e., semantic segmentation here),
the cross-domain generalization of machine learning mod-
els can be more efﬁciently improved if we avoid this as-
sumption and instead train them subject to necessary prop-
erties they should retain in the target domain.

Preliminaries.
In particular, the properties are about the
pixel-wise category labels Yt ∈ RW ×H×C of an arbitrary
image It ∈ RW ×H from the target domain, where W and H
are the width and height of the image, respectively, and C is
the number of categories. We use one-hot vector encoding
for the groundtruth labels, i.e., Yt(i, j, c) takes the value of
0 or 1 and the latter means that the c-th label is assigned by
a human annotator to the pixel at (i, j). Correspondingly,
the prediction (cid:98)Yt(i, j, c) ∈ [0, 1] by a segmentation network
is realized by a softmax function per pixel.

We express each target property in the form of a distribu-
tion pt ∈ ∆ over the C categories, where pt(c) represents
the occupancy proportion of the category c over the t-th tar-
get image or a superpixel of the image. Therefore, one can
immediately calculate the distribution pt given the human
annotations Yt to the image. For instance, the image level
label distribution is expressed by

pt(c) =

Yt(i, j, c),

∀c.

(1)

1
W H

W
(cid:88)

H
(cid:88)

i=1

j=1

Similarly, we can compute the target property/distribution
from the network predictions (cid:98)Yt and denote it by (cid:98)pt.
3.1. Domain adaptation using the target properties

Ideally, we would like to have a segmentation network to
imitate human annotators on the target domain. Therefore,
necessarily, the properties of their annotation results should
be the same too. We capture this notion by minimizing the
cross entropy C(pt, (cid:98)pt) = H(pt) + KL(pt, (cid:98)pt) at training,
where the ﬁrst term of the right-hand side is the entropy and
the second is the KL-divergence.

Given a mini-batch consisting of both source images (S)
and target images (T ), the overall objective function for
training the cross-domain generalizing segmentation net-
work is,

min

γ
|S|

(cid:88)

(cid:16)

(cid:17)

L

Ys, (cid:98)Ys

+

s∈S

1 − γ
|T |

(cid:88)

(cid:88)

t∈T

k

(cid:16)

C

t , (cid:98)pk
pk

t

(cid:17)

(2)

where L is the pixel-wise cross-entropy loss deﬁned over
the sufﬁciently labeled source domain images, enforcing the
network to have the pixel level discriminative capabilities,
and the second term is over the unlabeled target domain im-
ages, hinting the network what necessary properties its pre-
dictions should have in the target domain. We use γ ∈ [0, 1]
to balance the two strengths in training and superscript k to
index different types of label distributions.

Note that in the domain adaptation context, we actually
cannot directly compute the label distribution pk
t from the
groundtruth annotations of the target domain. Nonetheless,
estimating them using the labeled source data is easier than
assigning labels to every single pixel of the target images.
We present the details in the next section.

Remarks. Mathematically, the objective function has a
similar form as in model compression [9, 26]. We thus
borrow some concepts to gain more intuitive understanding
about our domain adaptation procedure. The “student” net-
work follows a curriculum to learn simple knowledge about
the target domain before it addresses the hard one of seman-
tically segmenting images. The models inferring the target
properties act like “teachers”, as they hint what label dis-
tributions the ﬁnal solution (image annotation) may have in
the target domain at the image and superpixel levels.

Another perspective is to understand the target prop-
erties as a posterior regularization [16] for the network.
The posterior regularization can conveniently encode a pri-
ori knowledge into the objective function. Some applica-
tions include weakly supervised segmentation [44, 49] and
detection [5], and rule-regularized training of neural net-
works [29]. In addition to the domain adaptation setting and
novel target properties, another key distinction of our work
is that we decouple the label distributions from the network
predictions and thus avoid the EM type of optimizations.
Our approach learns the segmentation network with almost
effortless changes to the popular deep learning tools.

3.2. Inferring the target properties

Thus far we have presented the “hard” task in the cur-
riculum domain adaptation. In this section, we describe the
“easy” ones, i.e., how to infer the target properties without
accessing the image annotations of the target domain. Our
contributions also include selecting the particular property
of label distributions to constitute the simple tasks.

3.2.1 Global label distributions of images

Due to the domain disparity, a baseline segmentation net-
work trained on the source domain (i.e., using the ﬁrst term
of eq. (2)) could be easily crippled given the target images.
In our experiments, we ﬁnd that our baseline network con-
stantly mistakes streets for sidewalks and/or cars (cf. Fig-
ure 2). Consequently, the predicted labels for the pixels are
highly disproportionate.

To rectify this, we employ the label distribution pt over
the global image as our ﬁrst property (cf. eq. (1)). Without
access to the target labels, we have to train machine learn-
ing models from the labeled source images to estimate the
label distribution pt for the target image. Nonetheless, we
argue that this is less challenging than generating the per-
pixel predictions despite that both tasks are inﬂuenced by
the domain mismatch.

In our experiments, we examine different approaches to
this task. We extract image features using the Inception-
Resnet-v2 [57] as the input to the following models.

Logistic regression. Although multinomial logistic regres-
sion (LR) is mainly used for classiﬁcation, its output is
actually a valid distribution over the categories. For
our purpose, we thus train it by replacing the one-hot
vectors in the cross-entropy loss with the groundtruth
label distribution ps, which is calculated using eq. (1)
and the available human labels of the source domain.
Given a target image, we directly take the LR’s output
as the predicted label distribution.

Mean of nearest neighbors. We also test a nonparamet-
ric method by simply retrieving the nearest neighbors
(NNs) for a target image and then transferring the
mean of the NNs’ label distributions to the target im-
age. We use the (cid:96)2 distance for the NN retrieval.

Finally, we include two dumb predictions as the control
experiment. One is, for any target image, to output the mean
of all the label distributions in the source domain (source
mean), and the other is to output a uniform distribution.

3.2.2 Local label distributions of landmark superpixels

The image level label distribution globally penalizes poten-
tially disproportional segmentation output on the target do-
main, and yet is inadequate in providing spatial constraints.
In this section, we consider the use of label distributions
over some superpixels as the anchors to drive the network
towards spatially desired target properties.

Note that it is not necessary, and is even harmful, to
use all of the superpixels in a target image to regularize
the segmentation network, because that would be too strong
a force and may overrule the pixel-wise discriminativeness
revealed by the labeled source images, especially when the
label distributions are not inferred accurately enough.

In order to have the dual effect of both estimating the la-
bel distributions of superpixels and ﬁltering the superpixels,
we simplify the problem and employ a linear SVM in this
work. In particular, we segment each image into 100 super-
pixels using linear spectral clustering [33]. For the super-
pixels of the source domain, we are able to assign a single
dominant label to each of them, and then use the labels and
the corresponding features extracted from the superpixels to
train a multi-class SVM. Given a test superpixel of a target
image, the multi-class SVM returns a class label as well as a
decision value, which is interpreted as the conﬁdence score
about classifying this superpixel. We keep the top 60% su-
perpixels, called landmark superpixels, in the target domain
and calculate their label distributions as the second type of
In particular, the class label of a landmark
“easy” tasks.
superpixel is encoded into a one-hot vector, which serves
as a valid distribution about the categories in the landmark

ers with VGG-19 [54], and then train it using the AdaDelta
optimizer [67] with default parameters. Each mini-batch is
comprised of ﬁve source images and ﬁve randomly chosen
target images. When we train the baseline network with no
adaptation, however, we try to use the largest possible mini-
batch that includes 15 source images. The network is im-
plemented in Keras [11] and Theano [1]. We train different
versions of the network on a single Tesla K40 GPU.

Unlike the existing deep domain adaptation methods [17,
18, 36, 27] which introduce regularization to the intermedi-
ate layers, we only revise the loss function over the output.
Hence, our curriculum domain adaptation can be readily ap-
plied to other segmentation networks (e.g., [39, 10]).

4.2. Datasets and evaluation

We use the publicly available Cityscpaes [12] and SYN-

THIA [48] datasets in our experiments.

Cityscapes is a real-world, vehicle-egocentric image
dataset collected in 50 cities in Germany and nearby coun-
tries. It provides four disjoint subsets: 2,993 training im-
ages, 503 validation image, 1,531 test images, and 20,021
auxiliary images. All the training, validation, and test im-
ages are accurately annotated with per pixel category labels,
while the auxiliary set is coarsely labeled. There are 34 dis-
tinct categories in the dataset.

SYNTHIA [48] is a large dataset of synthetic images
and provides a particular subset, called SYNTHIA-RAND-
CITYSCAPES, to pair with Cityscapes. This subset con-
tains 9,400 images that are automatically annotated with
12 object categories, one void class, and some unnamed
classes. Note that the virtual city used to generate the syn-
thetic images does not correspond to any of the real cities
covered by Cityscapes. We abbreviate SYNTHIA-RAND-
CITYSCAPES to SYNTHIA hereon.

Domain idiosyncrasies. Although both datasets depict
urban scenes, and SYNTHIA is created to be as photo-
realistic as possible, they are mismatched domains in sev-
eral ways. The most noticeable difference is probably the
coarse-grained textures in SYNTHIA; very similar texture
patterns repeat in a regular manner across different im-
ages.
In contrast, the Cityscapes images are captured by
high-quality dash-cameras. Another major distinction is
the variability in view angles. Since Cityscapes images are
recorded by the dash cameras mounted on a moving car,
they are viewed from almost a constant angle that is about
parallel to the ground. More diverse view angles are em-
ployed by SYNTHIA — it seems like some cameras are
placed on the buildings that are signiﬁcantly higher than a
bus. Finally, some of the SYNTHIA images are severely
shadowed by extreme lighting conditions, while we ﬁnd no
such conditions in the Cityscapes images. These combined
factors, among others, make domain adaptation from SYN-
THIA to Cityscapes a very challenging problem.

Figure 1: The overall framework of curriculum domain
adaptation for semantic segmentation of urban scenes.

superpixel. Albeit simple, we ﬁnd this method works very
well in our experiments.

We encode both visual and contextual information to
represent a superpixel. First, we use the FCN-8s [35] pre-
trained on the PASCAL CONTEXT [38] dataset, which has
59 distinct classes, to obtain 59 detection scores for each
pixel. We then average them within each superpixel. Fi-
nally, we represent a superpixel by the concatenation of the
59D vectors of itself, its left and right superpixels, as well
as the two respectively above and below it.

3.3. Curriculum domain adaptation: recapitulation

We recap the proposed curriculum domain adaptation us-
ing Figure 1 before presenting the experiments in the next
section. Our main idea is to execute the domain adaptation
step by step, starting from the easy tasks that are less sensi-
tive to the domain discrepancy than the semantic segmenta-
tion. We choose the labels distributions over global images
and local landmark superpixels in this work; more tasks will
be explored in the future. The solutions to them provide
useful gradients originating from the target domain (cf. the
arrows with brown color in Figure 1), while the source do-
main feeds the network with well-labeled images and seg-
mentation masks (cf. the dark blue arrows in Figure 1).

4. Experiments

In this section, we describe the experimental setup and
compare the results of our approach, its variations, and
some existing baseline methods.

4.1. Segmentation network and optimization

In our experiments, we use FCN-8s [35] as our semantic
segmentation network. We initialize its convolutional lay-

t
s
e
r
a
e
n
s
t
i
e
v
e
i
r
t
e
r
e
w

,

n
m
u
l
o
c
t
s
r
ﬁ
e
h
t
n
i
e
g
a
m

i

t
e
g
r
a
t
h
c
a
e
r
o
F

.
)
n
i
a
m
o
d
t
e
g
r
a
t
(

]
8
4
[

t
e
s
a
t
a
d
s
e
p
a
c
s
y
t
i

C
e
h
t
n
o
s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
c
i
t
n
a
m
e
s
e
v
i
t
a
t
i
l
a
u
Q

:
2
e
r
u
g
i
F

,

n
o
i
t
a
t
o
n
n
a

c
i
t
n
a
m
e
s

e
s
i
w

-
l
e
x
i
p
h
t
u
r
t
d
n
u
o
r
g
e
h
t
o
t

e
u
d
s
n
o
i
t
u
b
i
r
t
s
i
d
l
e
b
a
l

e
h
t

s
t
o
l
p
n
m
u
l
o
c
d
r
i
h
t

e
h
T

.
)
n
i
a
m
o
d
e
c
r
u
o
s
(

t
e
s
a
t
a
d
]
2
1
[

I

A
H
T
N
Y
S
e
h
t

m
o
r
f

r
o
b
h
g
i
e
n

s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
e
h
t
e
r
a
s
n
m
u
l
o
c
e
e
r
h
t

t
s
a
l
e
h
T

.

n
o
i
s
s
e
r
g
e
r
c
i
t
s
i
g
o
l
y
b
n
o
i
t
u
b
i
r
t
s
i
d
d
e
r
r
e
f
n
i
e
h
t
d
n
a

,
n
o
i
t
a
t
p
a
d
a
o
n
h
t
i

w
k
r
o
w
t
e
n
e
n
i
l
e
s
a
b
e
h
t
y
b
s
n
o
i
t
c
i
d
e
r
p
e
h
t

.
s
r
o
t
a
t
o
n
n
a

n
a
m
u
h

d
n
a

,
h
c
a
o
r
p
p
a

n
o
i
t
a
t
p
a
d
a
n
i
a
m
o
d
r
u
o

,

k
r
o
w
t
e
n

e
n
i
l
e
s
a
b
e
h
t
y
b

Table 1: The χ2 distances between the groundtruth label
distributions and those predicted by different methods.

Method
χ2 Distance

Uniform NoAdapt

1.13

0.65

Src mean NN
0.33

0.44

LR
0.27

Figure 2 shows some example images from both
datasets. We pair each Cityscpaes image with its nearest
neighbor in SYNTHIA, retrieved by the Inception-Resnet-
v2 [57] features. However, the cross-dataset nearest neigh-
bors are visually very different from the query images, ver-
ifying the dramatic disparity between the two domains.

Experiment setup. Since our ultimate goal is to solve the
semantic segmentation problem for real images of urban
scenes, we take Cityscapes as the target domain and SYN-
THIA as the source domain. The Cityscapes validation set
is used as our test set. We split 500 images out of the Citysc-
paes training set for the validation purpose (e.g., to monitor
the convergence of the networks). In training, we randomly
sample mini-batches from both the images (and their labels)
of SYNTHIA and the remaining images of Cityscapes yet
with no labels.

As in [27], we manually ﬁnd 16 common classes be-
tween the two datasets: sky, building, road, sidewalk, fence,
vegetation, pole, car, trafﬁc sign, person, bicycle, motorcy-
cle, trafﬁc light, bus, wall, and rider. The last four are un-
named and yet labeled in SYNTHIA.

TP

Evaluation. We use the evaluation code released along
with the Cityscapes dataset to evaluate our results. It calcu-
lates the PASCAL VOC intersection-over-union, i.e., IoU =
TP+FP+FN [14], where TP, FP, and FN are the numbers of
true positive, false positive, and false negative pixels, re-
spectively, determined over the whole test set. Since we
have to resize the images before feeding them to the seg-
mentation network, we resize the output segmentation mask
back to the original image size before running the evaluation
against the groundtruth annotations.

4.3. Results of inferring global label distributions

Before presenting the ﬁnal semantic segmentation re-
sults, we ﬁrst compare the different approaches to inferring
the global label distributions of the target images (cf. Sec-
tion 3.2.1). We report the results on the held-out validation
images of Cityscapes in this experiment, and then select the
best method for the remaining experiments.

In Table 1, we compare the estimated label distributions
with the groundtruth ones using the χ2 distance, the smaller
the better. We see that the baseline network (NoAdapt),
which is directly learned from the source domain without
any adaptation methods, outperforms the dumb uniform dis-
tribution (Uniform) and yet no other methods. This con-
ﬁrms that the baseline network gives rise to severely dis-
proportionate predictions over the target domain.

Another dumb prediction (Src mean),

i.e., using the
mean of all label distributions over the source domain as
the prediction for the target images, however, performs rea-
sonably well. To some extent, this indicates the value of
the simulated source domain for the semantic segmentation
task of urban scenes.

Finally, the nearest neighbors (NN) based method and
the multinomial logistic regression (LR) (cf. Section 3.2.1)
perform the best. We use the output of LR on the target
domain in our remaining experiments.

4.4. Comparison results

We report the ﬁnal semantic segmentation results on the
test data of the target domain in this section. We compare
our approach to the following competing methods.

No adaptation (NoAdapt). We directly train the FCN-8s
model on SYNTHIA without applying any domain
adaptation methods. This is the most basic baseline
for our experiments.

Superpixel classiﬁcation (SP). Recall

have
trained a multi-class SVM using the dominant labels
of the superpixels in the source domain. We then use
them to classify the target superpixels.

that we

Landmark superpixels (SP Lndmk). Since we keep the
top 60% most conﬁdently classiﬁed superpixels as the
landmarks to regularize our segmentation network dur-
ing training (cf. Section 3.2.2), it is also interesting to
examine the classiﬁcation results of these superpixels.
We run the evaluation after assigning the void class la-
bel to the other pixels of the images.

In addition to the IoU, we have also evaluated the clas-
siﬁcation results of the superpixels by accuracy. We
ﬁnd that the classiﬁcation accuracy is 71% for all the
superpixels of the target domain, while for the selected
60% landmark superpixels, the classiﬁcation accuracy
is more than 88%.

FCNs in the wild (FCN Wld). Hoffman et al.’s work [27]
is the only existing one addressing the same problem
as ours, to the best of our knowledge. They introduce
a pixel-level adversarial loss to the intermediate lay-
ers of the network and impose constraints to the net-
work output. Their experimental setup is about identi-
cal to ours except that they do not specify which part
of Cityscapes is considered as the test set. Nonethe-
less, we include their results for comparison to put our
work in a better perspective.

The comparison results are shown in Table 2. Immedi-
ately, we note that all our domain adaptation results are sig-
niﬁcantly better than those without adaptation (NoAdapt).

Table 2: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from SYNTHIA [48].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
SP Lndmk
SP
Ours (SP)
Ours (I+SP)

17.4
20.2
22.0
25.5
23.0
25.6
28.1
29.0

e
k
i
b

0.0
0.6
18.0
16.7
0.0
0.0
10.2
13.1

e
c
n
e
f

0.0
0.0
0.5
0.8
0.0
0.0
0.4
0.5

l
l
a
w

1.2
4.4
0.8
2.3
0.0
0.0
0.1
0.1

n
g
i
s
-
t

7.2
11.7
5.3
6.4
0.0
0.0
2.7
3.0

e
l
o
p

15.1
20.3
21.5
21.7
0.0
0.0
8.1
10.7

e
k
i
b
m

0.1
0.2
0.5
1.0
0.0
0.0
0.8
0.7

t
h
g
i
l
-
t

0.0
0.1
8.0
9.9
0.0
0.0
3.7
3.7

y
k
s

66.8
68.7
75.6
59.6
83.1
80.5
68.7
70.6

s
u
b

3.9
3.2
4.5
12.1
26.1
22.1
21.4
20.7

r
e
d
i
r

1.5
3.8
9.0
7.9
0.0
0.0
7.9
8.2

g
e
v

30.3
42.3
72.4
70.2
73.1
71.9
75.5
76.1

g
d
l
b

29.7
30.8
59.6
67.5
67.7
69.3
74.6
74.9

r
a
c

47.3
54.0
23.6
32.0
41.1
45.9
42.9
43.2

n
o
s
r
e
p

51.1
51.2
35.1
29.3
5.8
24.6
47.3
47.1

k
l
a
w
e
d
i
s

17.7
19.6
11.2
18.1
10.6
19.8
23.9
26.1

d
a
o
r

6.4
11.5
5.6
51.9
60.8
75.0
61.8
65.2

We denote by (Ours (I)) the network trained using the
global label distributions over the target images (and the la-
beled source images). Although one may wonder that the
image-wise label distributions are too high-level to super-
vise the pixel-wise discriminative network, the gain is ac-
tually signiﬁcant. They are able to correct some obvious
errors of the baseline network, such as the disproportional
predictions about road and sidewalk (cf. the results of Ours
(I) vs. NoAdapt in the last two columns).

It is interesting to see that both superpixel classiﬁcation-
based segmentation results (SP and SP Lndmk) are also bet-
ter than the baseline network (NoAdapt). The label distribu-
tions obtained over the landmark superpixels boost the seg-
mentation network (Ours (SP)) to the mean IoU of 28.1%,
which is better than those by either superpixel classiﬁcation
or the baseline network individually. We have also tried to
use the label distributions over all the superpixels to train
the network, and observe little improvement over NoAdapt.
This is probably because it is too forceful to regularize the
network output at every single superpixel especially when
the estimated label distributions are not accurate enough.

The superpixel-based methods, including Ours (SP),
miss small objects such as fences, trafﬁc lights (t-light), and
trafﬁc signs (t-sign), and instead are very accurate for cat-
egories like the sky, road, and building, that typically oc-
cupy larger image regions. On the contrary, the label dis-
tributions on the images give rise to a network (Ours (I))
that performs better on the small objects than Ours (SP).
In other words, they mutually complement to some extent.
Re-training the network by using the label distributions over
both global images and local landmark superpixels (Ours
(I+SP)), we achieve the best semantic segmentation results
on the target domain. In the future work, it is worth explor-
ing other target properties, perhaps still in the form of label
distributions, that handle the small objects well, in order to
further complement the superpixel-level label distributions.

Comparison with FCNs in the wild [27]. Although we
use the same segmentation network (FCN-8s) as [27], our
baseline results (NoAdapt) are better than those reported

in [27]. This may be due to subtle differences in terms of
implementation or experimental setup. Although our own
baseline results are superior, we gain larger improvements
(7%) over them than the performance gain of [27] (3%) over
the seemingly underperforming baseline network there.

Comparison with learning domain-invariant features.
At our ﬁrst attempt to solve the domain adaptation problem
for the semantic segmentation of urban scenes, we tried to
learn domain invariant features following the deep domain
adaptation methods [36] for classiﬁcation. In particular, we
impose the maximum mean discrepancy [24] over the layer
before the output. We name such network layer the feature
layer. Since there are virtually three output layers in FCN-
8s, we experiment with all the three feature layers corre-
spondingly. We have also tested the domain adaptation by
reversing the gradients of a domain classiﬁer [17]. How-
ever, none of these efforts lead to any noticeable gain over
the baseline network so the results are omitted.

5. Conclusion

In this paper, we address domain adaptation for the se-
mantic segmentation of urban scenes. We propose a cur-
riculum style approach to this problem. We learn to esti-
mate the global label distributions of the images and local
label distributions of the landmark superpixels of the target
domain. Such tasks are easier to solve than the pixel-wise
label assignment. Therefore, we use their results to effec-
tively regularize our training of the semantic segmentation
network such that its predictions meet the inferred label dis-
tributions over the target domain. Our method outperforms
several competing methods that do domain adaptation from
simulated images to real photos of urban trafﬁc scenes. In
future work, we will explore more target properties that can
be conveniently inferred to enrich our curriculum domain
adaptation framework.

Acknowledgements. This work is supported by the NSF
award IIS #1566511, a gift from Adobe Systems Inc., and
a GPU from NVIDIA. We thank the anonymous reviewers
and area chairs for their insightful comments.

References

[1] R. Al-Rfou, G. Alain, A. Almahairi, C. Angermueller,
D. Bahdanau, N. Ballas, F. Bastien, J. Bayer, A. Belikov,
A. Belopolsky, and others. Theano: A Python framework
for fast computation of mathematical expressions. arXiv
preprint arXiv:1605.02688, 2016. 5

[2] R. Aljundi, R. Emonet, D. Muselet, and M. Sebban.
Landmarks-based kernelized subspace alignment for unsu-
pervised domain adaptation. In IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), pages 56–63,
2015. 1

[3] V. Badrinarayanan, A. Kendall, and R. Cipolla. Segnet: A
deep convolutional encoder-decoder architecture for image
segmentation. arXiv preprint arXiv:1511.00561, 2015. 3
[4] Y. Bengio, J. Louradour, R. Collobert, and J. Weston. Cur-
riculum learning. In Proceedings of the 26th annual interna-
tional conference on machine learning, pages 41–48. ACM,
2009. 2

[5] H. Bilen, M. Pedersoli, and T. Tuytelaars. Weakly supervised
In BMVA

object detection with posterior regularization.
British Machine Vision Conference (BMVC), 2014. 4

[6] E. Borenstein and S. Ullman. Class-speciﬁc, top-down seg-
In European conference on computer vision,

mentation.
pages 109–122. Springer, 2002. 1

[7] K. Bousmalis, N. Silberman, D. Dohan, D. Erhan, and
D. Krishnan. Unsupervised pixel-level domain adapta-
tion with generative adversarial networks. arXiv preprint
arXiv:1612.05424, 2016. 3

[8] G. J. Brostow, J. Fauqueur, and R. Cipolla. Semantic object
classes in video: A high-deﬁnition ground truth database.
Pattern Recognition Letters, 30(2):88–97, 2009. 3

[9] C. Bucilu, R. Caruana, and A. Niculescu-Mizil. Model com-
pression. In Proceedings of the 12th ACM SIGKDD interna-
tional conference on Knowledge discovery and data mining,
pages 535–541. ACM, 2006. 4

[10] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
arXiv preprint
volutional nets and fully connected crfs.
arXiv:1412.7062, 2014. 2, 3, 5

[11] F. Chollet. keras. https://github.com/fchollet/

keras, 2015. 5

[12] M. Cordts, M. Omran, S. Ramos, T. Rehfeld, M. Enzweiler,
R. Benenson, U. Franke, S. Roth, and B. Schiele. The
cityscapes dataset for semantic urban scene understanding.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 3213–3223, 2016. 1, 3, 5, 6,
8, 12

[13] J. Dai, K. He, and J. Sun. Instance-aware semantic segmen-
tation via multi-task network cascades. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3150–3158, 2016. 3

[14] M. Everingham, S. A. Eslami, L. Van Gool, C. K. Williams,
J. Winn, and A. Zisserman. The pascal visual object classes
International Journal of Com-
challenge: A retrospective.
puter Vision, 111(1):98–136, 2015. 3, 7

[15] B. Fernando, A. Habrard, M. Sebban, and T. Tuytelaars. Un-
supervised visual domain adaptation using subspace align-

ment. In IEEE International Conference on Computer Vision
(ICCV), pages 2960–2967, 2013. 1

[16] K. Ganchev, J. Gillenwater, B. Taskar, et al. Posterior reg-
ularization for structured latent variable models. Journal of
Machine Learning Research, 11(Jul):2001–2049, 2010. 2, 4
[17] Y. Ganin and V. Lempitsky. Unsupervised domain adapta-
In International Conference on
tion by backpropagation.
Machine Learning (ICML), pages 1180–1189, 2015. 2, 3,
5, 8

[18] Y. Ganin, E. Ustinova, H. Ajakan, P. Germain, H. Larochelle,
F. Laviolette, M. Marchand,
and V. S. Lempitsky.
Domain-adversarial training of neural networks. CoRR,
arXiv:1505.07818, 2015. 2, 3, 5

[19] A. Geiger, P. Lenz, C. Stiller, and R. Urtasun. Vision meets
robotics: The kitti dataset. The International Journal of
Robotics Research, 32(11):1231–1237, 2013. 1

[20] B. Gong, K. Grauman, and F. Sha. Connecting the dots with
landmarks: Discriminatively learning domain invariant fea-
tures for unsupervised domain adaptation. In International
Conference on Machine Learning (ICML), pages 222–230,
2013. 1

[21] B. Gong, F. Sha, and K. Grauman. Overcoming dataset
bias: An unsupervised domain adaptation approach. In NIPS
Workshop on Large Scale Visual Recognition and Retrieval
(LSVRR), 2012. 2

[22] B. Gong, Y. Shi, F. Sha, and K. Grauman. Geodesic ﬂow
kernel for unsupervised domain adaptation. In IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2066–2073, 2012. 1, 2

[23] R. Gopalan, R. Li, and R. Chellappa. Domain adaptation
for object recognition: An unsupervised approach. In IEEE
International Conference on Computer Vision (ICCV), pages
999–1006, 2011. 1

[24] A. Gretton, K. M. Borgwardt, M. J. Rasch, B. Sch¨olkopf, and
A. Smola. A kernel two-sample test. Journal of Machine
Learning Research, 13(Mar):723–773, 2012. 8

[25] A. Gretton, A. Smola, J. Huang, M. Schmittfull, K. Borg-
wardt, and B. Sch¨olkopf. Covariate shift by kernel mean
In J. Qui ˜A±onero-Candela, M. Sugiyama,
matching.
A. Schwaighofer, and N. D. Lawrence, editors, Dataset Shift
in Machine Learning. The MIT Press, 2008. 2

[26] G. Hinton, O. Vinyals, and J. Dean. Distilling the knowledge
in a neural network. arXiv preprint arXiv:1503.02531, 2015.
4

[27] J. Hoffman, D. Wang, F. Yu, and T. Darrell. FCNs in the
Wild: Pixel-level Adversarial and Constraint-based Adapta-
tion. arXiv preprint arXiv:1612.02649, 2016. 1, 2, 3, 5, 7, 8,
12

[28] S. Hong, J. Oh, H. Lee, and B. Han. Learning transferrable
knowledge for semantic segmentation with deep convolu-
In Proceedings of the IEEE Con-
tional neural network.
ference on Computer Vision and Pattern Recognition, pages
3204–3212, 2016. 3

[29] Z. Hu, X. Ma, Z. Liu, E. Hovy, and E. Xing. Harness-
ing deep neural networks with logic rules. arXiv preprint
arXiv:1603.06318, 2016. 4

[30] A. Khosla, T. Zhou, T. Malisiewicz, A. A. Efros, and A. Tor-
ralba. Undoing the damage of dataset bias. In European Con-
ference on Computer Vision (ECCV), pages 158–171, 2012.
2

[31] B. Kulis, K. Saenko, and T. Darrell. What you saw is not
what you get: Domain adaptation using asymmetric kernel
In IEEE Conference on Computer Vision and
transforms.
Pattern Recognition (CVPR), 2011. 1

[32] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-
based learning applied to document recognition. Proceed-
ings of the IEEE, 86(11):2278–2324, 1998. 3

[33] Z. Li and J. Chen. Superpixel segmentation using linear
spectral clustering. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1356–
1363, 2015. 4

[34] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Dollr, and C. L. Zitnick. Microsoft coco: Common
objects in context. In European Conference on Computer Vi-
sion, pages 740–755. Springer, 2014. 3

[35] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3431–3440, 2015. 2, 3, 5

[36] M. Long, Y. Cao, J. Wang, and M. I. Jordan. Learning trans-
ferable features with deep adaptation networks. In Interna-
tional Conference on Machine Learning (ICML), 2015. 2, 3,
5, 8

[37] A. M. L´opez, J. Xu, J. L. Gomez, D. V´azquez, and
G. Ros. From virtual to real world visual perception us-
ing domain adaptation–the dpm as example. arXiv preprint
arXiv:1612.09134, 2016. 3

[38] R. Mottaghi, X. Chen, X. Liu, N.-G. Cho, S.-W. Lee, S. Fi-
dler, R. Urtasun, and A. Yuille. The role of context for object
detection and semantic segmentation in the wild. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 891–898, 2014. 5

[39] H. Noh, S. Hong, and B. Han. Learning deconvolution
network for semantic segmentation. In IEEE International
Conference on Computer Vision (ICCV), pages 1520–1528,
2015. 2, 3, 5

[40] S. J. Pan, J. T. Tsang, Ivor W.and Kwok, and Q. Yang. Do-
main adaptation via transfer component analysis. Transac-
tions on Neural Networks, 22(2):199 – 210, 2011. 1

[41] S. J. Pan and Q. Yang. A survey on transfer learning. Trans-
actions on Knowledge and Data Engineering, 22(10):1345–
1359, 2010. 1, 2

[42] G. Papandreou, L.-C. Chen, K. P. Murphy, and A. L. Yuille.
Weakly-and semi-supervised learning of a deep convolu-
In Pro-
tional network for semantic image segmentation.
ceedings of the IEEE International Conference on Computer
Vision, pages 1742–1750, 2015. 3

[43] V. M. Patel, R. Gopalan, R. Li, and R. Chellappa. Visual do-
main adaptation: A survey of recent advances. Signal Pro-
cessing Magazine, 32(3):53–69, 2015. 1, 2, 3

[44] D. Pathak, P. Krahenbuhl, and T. Darrell. Constrained con-
volutional neural networks for weakly supervised segmenta-
tion. In Proceedings of the IEEE International Conference
on Computer Vision, pages 1796–1804, 2015. 2, 3, 4

[45] X. Peng and K. Saenko.

Synthetic to real adaptation
with deep generative correlation alignment networks. arXiv
preprint arXiv:1701.05524, 2017. 3

[46] P. O. Pinheiro and R. Collobert. From image-level to pixel-
level labeling with convolutional networks. In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1713–1721, 2015. 3

[47] S. R. Richter, V. Vineet, S. Roth, and V. Koltun. Playing
for data: Ground truth from computer games. In European
Conference on Computer Vision, pages 102–118. Springer,
2016. 3, 11, 12

[48] G. Ros, L. Sellart, J. Materzynska, D. Vazquez, and A. M.
Lopez. The synthia dataset: A large collection of synthetic
images for semantic segmentation of urban scenes. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 3234–3243, 2016. 1, 3, 5, 6, 8

[49] G. Ros, S. Stent, P. F. Alcantarilla, and T. Watanabe. Training
constrained deconvolutional networks for road scene seman-
tic segmentation. arXiv preprint arXiv:1604.01545, 2016. 3,
4

[50] K. Saenko, B. Kulis, M. Fritz, and T. Darrell. Adapting vi-
sual category models to new domains. In European Confer-
ence on Computer Vision (ECCV), pages 213–226, 2010. 2
[51] A. Shafaei, J. J. Little, and M. Schmidt. Play and learn: using
video Games to train computer vision models. arXiv preprint
arXiv:1608.01745, 2016. 3

[52] J. Shotton, M. Johnson, and R. Cipolla. Semantic texton
forests for image categorization and segmentation. In 2008
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 1–8, June 2008. 3

[53] A. Shrivastava, T. Pﬁster, O. Tuzel, J. Susskind, W. Wang,
Learning from simulated and unsuper-
and R. Webb.
vised images through adversarial training. arXiv preprint
arXiv:1612.07828, 2016. 1, 3
[54] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
arXiv:1409.1556, 2014. 5

[55] B. Sun, J. Feng, and K. Saenko. Return of frustratingly easy
domain adaptation. In AAAI Conference on Artiﬁcial Intelli-
gence (AAAI), 2016. 1

[56] B. Sun and K. Saenko. From virtual to reality: Fast adap-
tation of virtual object detectors to real domains. In BMVA
British Machine Vision Conference (BMVC), 2014. 3
[57] C. Szegedy, S. Ioffe, V. Vanhoucke, and A. Alemi. Inception-
v4, inception-resnet and the impact of residual connections
on learning. arXiv preprint arXiv:1602.07261, 2016. 4, 7

[58] J. Tighe and S. Lazebnik. Superparsing: scalable nonpara-
metric image parsing with superpixels. In European confer-
ence on computer vision, pages 352–365. Springer, 2010. 3
[59] T. Tommasi, N. Patricia, B. Caputo, and T. Tuytelaars. A
deeper look at dataset bias. CoRR, arXiv:1505.01257, 2015.
2

[60] A. Torralba and A. A. Efros. Unbiased look at dataset bias.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), 2011. 2

[61] E. Tzeng, J. Hoffman, T. Darrell, and K. Saenko. Simul-
In IEEE

taneous deep transfer across domains and tasks.

International Conference on Computer Vision (ICCV), pages
4068–4076, 2015. 2, 3

[62] E. Tzeng, J. Hoffman, N. Zhang, K. Saenko, and T. Darrell.
Deep domain confusion: Maximizing for domain invariance.
CoRR, arXiv:1412.3474, 2014. 2

[63] D. Vazquez, A. M. L´opez, J. Mar´ın, D. Ponsa, and
D. Ger´onimo. Virtual and real world adaptation for pedes-
trian detection. Transactions of Pattern Recognition and Ma-
chine Analyses (PAMI), 36(4):797 – 809, 2014. 3

[64] Z. Wu, C. Shen, and A. v. d. Hengel. Wider or Deeper:
Revisiting the ResNet Model for Visual Recognition. arXiv
preprint arXiv:1611.10080, 2016. 3

[65] J. Xu, S. Ramos, D. Vazquez, and A. L´opez. Hierarchi-
cal adaptive structural svm for domain adaptation. CoRR,
arXiv:1408.5400, 2014. 3

[66] M. Yamada, L. Sigal, and Y. Chang. Domain adaptation for
structured regression. International journal of computer vi-
sion, 109(1-2):126–145, 2014. 2

[67] M. D. Zeiler. ADADELTA: an adaptive learning rate method.

arXiv preprint arXiv:1212.5701, 2012. 5

[68] C. Zhang, L. Wang, and R. Yang. Semantic segmentation
of urban scenes using dense depth maps. In European Con-
ference on Computer Vision, pages 708–721. Springer, 2010.
3

[69] H. Zhao, J. Shi, X. Qi, X. Wang, and J. Jia. Pyramid Scene
Parsing Network. arXiv preprint arXiv:1612.01105, 2016. 3

GTA→Cityscapes

The main text above has been accepted to IEEE Interna-
tional Conference on Computer Vision (ICCV) 2017. After
the paper submission, we have been continuously working
on the project and have got more results. We include them
below to complement the experiments in the main text.

The new experiment is basically the same as the one in
the main text except that we replace SYNTHIA with the
GTA dataset [47]. GTA is a synthetic, vehicle-egocentric
image dataset collected from the open world in the realisti-
cally rendered computer game Grand Theft Auto V (GTA,
or GTA5). It contains 24,996 images, whose semantic seg-
mentation annotations are fully compatible with the classes
used in Cityscapes. Hence we use all the 19 ofﬁcial training
classes in our experiment. The results are shown in Table 3.
As in the main text, the same observations about our ap-
proach apply here. Additionally, we note that the results
are overall better than those adapting from SYNTHIA to
Cityscapes. This is not surprising, because the GTA images
are more photo-realistic than SYNTHIA’s.

Table 3: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from GTA [47].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
Ours (SP)
SP Lndmk
SP
Ours (I+SP)

21.1
27.1
22.3
23.1
27.8
21.4
26.8
28.9

e
k
i
b

0.0
0.0
13.8
9.5
15.6
0.0
0.3
14.6

e
c
n
e
f

3.1
5.4
8.7
9.4
11.7
0.0
4.1
11.9

l
l
a
w

7.4
14.9
7.3
10.2
5.7
0.0
7.6
6.0

n
g
i
s
-
t

1.0
2.7
16.8
14.0
12.0
0.0
0.0
11.1

e
l
o
p

16.0
10.9
21.0
20.2
9.2
0.0
0.2
8.4

e
k
i
b
m

0.0
3.5
4.3
3.8
12.9
0.0
0.9
16.8

t
h
g
i
l
-
t

10.4
14.2
14.9
13.6
15.5
0.0
0.0
16.3

y
k
s

58.9
64.6
64.4
63.8
64.9
82.9
81.6
66.5

s
u
b

3.7
7.3
5.0
3.4
15.5
10.0
25.3
18.9

r
e
d
i
r

1.0
4.2
17.5
10.6
9.1
0.0
3.5
9.3

g
e
v

76.5
79.2
45.9
56.9
74.6
74.5
73.0
75.7

n
i
a
r
r
e
t

13
21.3
2.4
2.8
11.1
22.5
32.1
13.3

n
i
a
r
t

0.0
0.0
6.9
10.9
0.0
0.0
0.0
0.0

g
d
l
b

47.7
62.1
64.1
69.7
70.5
69.9
71.0
71.7

r
a
c

67.1
70.4
55.3
60.5
56.1
52.7
61.9
55.2

n
o
s
r
e
p

36
44.1
41.6
31.8
34.8
13.1
26.2
38.0

k
c
u
r
t

9.5
8.0
8.4
10.9
15.9
11.2
30.4
18.8

k
l
a
w
e
d
i
s

18.9
32.4
6.8
10.8
21.8
8.0
19.2
22.0

d
a
o
r

31.9
70.4
18.1
26.4
72.1
61.8
71.8
74.9

8
1
0
2
 
v
o
N
 
4
1
 
 
]

V
C
.
s
c
[
 
 
5
v
5
6
4
9
0
.
7
0
7
1
:
v
i
X
r
a

Curriculum Domain Adaptation for Semantic Segmentation of Urban Scenes

Yang Zhang1, Philip David2, and Boqing Gong1

1 Center for Research in Computer Vision, University of Central Florida
2 Computational and Information Sciences Directorate, U.S. Army Research Laboratory
yangzhang@knights.ucf.edu, philip.j.david4.civ@mail.mil, bgong@crcv.ucf.edu

Abstract

During the last half decade, convolutional neural net-
works (CNNs) have triumphed over semantic segmentation,
which is a core task of various emerging industrial appli-
cations such as autonomous driving and medical imaging.
However, to train CNNs requires a huge amount of data,
which is difﬁcult to collect and laborious to annotate. Re-
cent advances in computer graphics make it possible to
train CNN models on photo-realistic synthetic data with
computer-generated annotations. Despite this, the domain
mismatch between the real images and the synthetic data
signiﬁcantly decreases the models’ performance. Hence we
propose a curriculum-style learning approach to minimize
the domain gap in semantic segmentation. The curriculum
domain adaptation solves easy tasks ﬁrst in order to infer
some necessary properties about the target domain; in par-
ticular, the ﬁrst task is to learn global label distributions
over images and local distributions over landmark super-
pixels. These are easy to estimate because images of urban
trafﬁc scenes have strong idiosyncrasies (e.g., the size and
spatial relations of buildings, streets, cars, etc.). We then
train the segmentation network in such a way that the net-
work predictions in the target domain follow those inferred
properties.
In experiments, our method signiﬁcantly out-
performs the baselines as well as the only known existing
approach to the same problem.

1. Introduction

This paper is concerned with domain adaptation for se-
mantic image segmentation of urban scenes, i.e., assigning a
category label to every pixel of an image or video frame [6].
Our interest in this problem is partially due to the exciting
vision of autonomous driving, where understanding com-
plex inner-city trafﬁc scenes is an essential module and se-

For better reproducibility, the code is available at:

https://github.com/YangZhang4065/AdaptationSeg.

mantic segmentation is one of its key constituents [12, 19].
Machine learning methods for automatic semantic seg-
mentation require massive amounts of high-quality anno-
tated imagery in order to produce effective classiﬁers that
generalize well to novel scenes. However, annotating train-
ing imagery for semantic segmentation is a very cumber-
some task for humans. Cordts et al. report that the annota-
tion and quality control take more than 1.5 hours on a single
image of the Cityscapes dataset [12]. Besides, it is very dif-
ﬁcult and time-consuming to collect imagery that depicts
the large number of variabilities possible of urban scenes in
different countries, seasons, and lighting conditions, etc.

To overcome both shortcomings, simulated urban en-
vironments may be used to automatically generate large
amounts of annotated training imagery. This, however, in-
troduces a new problem, that of domain mismatch between
the source (simulated) domain and the target (real) domain.
Figure 2 illustrates some examples drawn from the synthetic
SYNTHIA [48] dataset and the real Cityscapes [12] dataset.
It is readily apparent that there are signiﬁcant visual differ-
ences between the two datasets. Domain adaptation tech-
niques [48, 53, 27] may be used by machine learning meth-
ods to bridge this gap between the two domains.

In computer vision, learning domain-invariant features
has been a prevalent and successful strategy to tackle the
discrepancy between two domains, mainly for classiﬁcation
and regression problems [41, 43]. The core idea is to infer
a new feature space such that the marginal distributions of
the source domain (S) and the target domain (T) are about
the same, i.e., PS(Z) ≈ PT (Z). Furthermore, the predic-
tion function P (Y |Z) from that space is assumed to be the
same across the domains so that one can leverage the rich
labeled data in the source domain to train classiﬁers that
generalize well to the target.
It is hard to verify the as-
sumption, but the work along this line is rich and has led
to impressive practical results regardless, such as the algo-
rithms using linear transformation [22, 23, 15, 55], kernel
methods [40, 20, 2, 31], and the recent deep learning meth-

1

ods that directly extract domain-invariant features from raw
input images [62, 36, 61, 18, 17].

In contrast to prior arts, the semantic segmentation we
study in this paper is a highly structured prediction problem,
for which domain adaptation is only sparsely explored in
the literature [66, 27]. Under structured prediction, can we
still achieve good domain adaptation results by following
the above principles? Our intuition and experimental stud-
ies (cf. Section 4) tell us no. Learning a decision function
for structured prediction is more involved than classiﬁcation
because it has to resolve the predictions in an exponentially
large label space. As a result, the assumption that the source
and target domains share the same prediction function be-
comes less likely to hold. Besides, some discriminative cues
in the data would be suppressed if one matches the feature
representations of the two domains without taking careful
account of the structured labels. Finally, data instances are
the proxy to measure the domain difference [25, 17, 18].
However, it is not immediately clear what comprises the in-
stances in semantic segmentation [27], especially given that
the top-performing segmentation methods are built upon
deep neural networks [35, 44, 39, 10]. Hoffman et al.
take each spatial unit in the fully convolutional network
(FCN) [35] as an instance [27]. We contend that such in-
stances are actually non-i.i.d. in either individual domain,
as their receptive ﬁelds overlap with each other.

How can we avoid the assumption that the source and
target domains share the same prediction function in a trans-
formed domain-invariant feature space? Our proposed so-
lution draws on two key observations. One is that the ur-
ban trafﬁc scene images have strong idiosyncrasies (e.g.,
the size and spatial relations of buildings, streets, cars, etc.).
Therefore, some tasks are “easy” and, more importantly,
suffer less because of the domain discrepancy. Second, the
structured output in semantic segmentation enables conve-
nient posterior regularization [16], as opposed to the popu-
lar (e.g., (cid:96)2) regularization over model parameters.

Accordingly, we propose a curriculum-style [4] domain
adaptation approach. Recall that, in domain adaptation,
only the source domain supplies many labeled data while
there are no or only scarce labels from the target. The cur-
riculum domain adaptation begins with the easy tasks, in
order to gain some high-level properties about the unknown
pixel-level labels for each target image. It then learns a se-
mantic segmentation network — the hard task, whose pre-
dictions over the target images are forced to follow those
necessary properties as much as possible.

To develop the easy tasks in the curriculum, we consider
label distributions over both holistic images and some land-
mark superpixels of the target domain. Take the former for
instance. The label distribution of an image indicates the
percentage of pixels that belong to each category, respec-
tively. We argue that such tasks are easier, despite the do-

main mismatch, than assigning pixel-wise labels. Indeed,
we may directly estimate the label distributions without in-
ferring the pixel-wise labels. Moreover, the relative sizes
of road, vehicle, pedestrian, etc. constrain the shape of the
distributions, effectively reducing the search space. Finally,
models to estimate the label distributions over superpixels
may beneﬁt from the urban scenes’ canonical layout that
transcends domains, e.g., buildings stand beside streets.

Why and when are the seemingly simple label distribu-
tions useful for the domain adaptation of semantic segmen-
tation? In our experiments, we ﬁnd that the segmentation
networks trained on the source domain perform poorly on
many target images, giving rise to disproportionate label
assignments (e.g., many more pixels are classiﬁed to side-
walks than to streets). To rectify this, the image-level label
distribution informs the segmentation network how to up-
date the predictions while the label distributions of the land-
mark superpixels tell the network where to update. Jointly,
they guide the adaptation of the networks to the target do-
main to, at least, generate proportional label predictions.
Note that additional “easy tasks” can be conveniently in-
corporated into our framework in the future.

Our main contribution is on the proposed curriculum-
style domain adaptation for the semantic segmentation of
urban scenes. We select into the curriculum the easy and
useful tasks of inferring label distributions for the target im-
ages and landmark superpixels, in order to gain some nec-
essary properties about the target domain. Built upon these,
we learn a pixel-wise discriminative segmentation network
from the labeled source data and, meanwhile, conduct a
“sanity check” to ensure the network behavior is consistent
with the previously learned knowledge about the target do-
main. Our approach effectively eludes the assumption about
the existence of a common prediction function for both do-
mains in a transformed feature space. It readily applies to
different segmentation networks, as it does not change the
network architecture or tax any intermediate layers.

2. Related work

We discuss some related work on domain adaptation and
semantic segmentation, with special focus on that transfer-
ring knowledge from virtual images to real photos.
Domain adaptation. Conventional machine learning al-
gorithms rely on the assumption that the training and test
data are drawn i.i.d. from the same underlying distribution.
However, it is often the case that there exists some discrep-
ancy from the training to the test stage. Domain adaptation
aims to rectify this mismatch and tune the models toward
better generalization at testing [60, 59, 21, 30, 25].

The existing work on domain adaptation mostly focuses
on classiﬁcation and regression problems [43, 41], e.g.,
learning from online commercial images to classify real-
world objects [50, 22], and, more recently, aims to improve

the adaptability of deep neural networks [36, 18, 17, 61, 7,
37]. Among them, the most relevant work to ours is that
exploring simulated data [56, 65, 48, 63, 27, 45, 53]. Sun
and Saenko train generic object detectors from the synthetic
images [56], while Vazquez et al. use the virtual images to
improve pedestrian detections in real environment [63]. The
other way around, i.e., how to improve the quality of the
simulated images using the real ones, is studied in [53, 45].

Semantic segmentation. Semantic segmentation is the
task of assigning an object label to each pixel of an im-
age. Traditional methods [52, 58, 68] rely on local im-
age features manually designed by domain experts. After
the pioneering work [10, 35] that introduced the convo-
lutional neural network (CNN) [32] to semantic segmen-
tation, most recent top-performing methods are built on
CNNs [64, 49, 3, 69, 39, 13].

An enormous amount of labor-intensive work is required
to annotate the many images that are needed to obtain accu-
rate segmentation models. The PASCAL VOC2012 Chal-
lenge [14] contains nearly 10,000 annotated images for
the segmentation competition, and the MS COCO Chal-
lenge [34] includes over 200,000 annotated images. Ac-
cording to [47], it took about 60 minutes to manually seg-
ment each image in [8] and about 90 minutes for each in
[12]. A plausible approach to reducing the human workload
is to utilize weakly supervised information such as image
labels and bounding boxes [44, 28, 42, 46].

We instead explore the use of almost effortlessly labeled
virtual images for training high-quality segmentation net-
works. In [47], annotating a synthetic image took only 7
seconds on average through a computer game. For the urban
scenes, we use the SYNTHIA [48] dataset which contains
images of a virtual city.

Domain adaptation for semantic segmentation. Upon
observing the obvious mismatch between virtual and real
data [51, 47, 48], we expect domain adaptation to enhance
the segmentation performance on real images by networks
trained on virtual ones. To the best of our knowledge, the
only attempt to algorithmically address this problem is [27].
While it regularizes the intermediate layers and constrains
the output of the network, we propose a different curriculum
domain adaptation strategy. We solve the easy task ﬁrst and
then use the learned knowledge about the target domain to
regularize the network predictions.

3. Approach

In this section, we present the details of the proposed
curriculum domain adaptation for semantic segmentation of
urban scene images. Unlike previous work [43, 27] that
aligns the domains via an intermediate feature space and
thereby implicitly assumes the existence of the same deci-
sion function for the two domains, it is our intuition that,

for structured prediction (i.e., semantic segmentation here),
the cross-domain generalization of machine learning mod-
els can be more efﬁciently improved if we avoid this as-
sumption and instead train them subject to necessary prop-
erties they should retain in the target domain.

Preliminaries.
In particular, the properties are about the
pixel-wise category labels Yt ∈ RW ×H×C of an arbitrary
image It ∈ RW ×H from the target domain, where W and H
are the width and height of the image, respectively, and C is
the number of categories. We use one-hot vector encoding
for the groundtruth labels, i.e., Yt(i, j, c) takes the value of
0 or 1 and the latter means that the c-th label is assigned by
a human annotator to the pixel at (i, j). Correspondingly,
the prediction (cid:98)Yt(i, j, c) ∈ [0, 1] by a segmentation network
is realized by a softmax function per pixel.

We express each target property in the form of a distribu-
tion pt ∈ ∆ over the C categories, where pt(c) represents
the occupancy proportion of the category c over the t-th tar-
get image or a superpixel of the image. Therefore, one can
immediately calculate the distribution pt given the human
annotations Yt to the image. For instance, the image level
label distribution is expressed by

pt(c) =

Yt(i, j, c),

∀c.

(1)

1
W H

W
(cid:88)

H
(cid:88)

i=1

j=1

Similarly, we can compute the target property/distribution
from the network predictions (cid:98)Yt and denote it by (cid:98)pt.
3.1. Domain adaptation using the target properties

Ideally, we would like to have a segmentation network to
imitate human annotators on the target domain. Therefore,
necessarily, the properties of their annotation results should
be the same too. We capture this notion by minimizing the
cross entropy C(pt, (cid:98)pt) = H(pt) + KL(pt, (cid:98)pt) at training,
where the ﬁrst term of the right-hand side is the entropy and
the second is the KL-divergence.

Given a mini-batch consisting of both source images (S)
and target images (T ), the overall objective function for
training the cross-domain generalizing segmentation net-
work is,

min

γ
|S|

(cid:88)

(cid:16)

(cid:17)

L

Ys, (cid:98)Ys

+

s∈S

1 − γ
|T |

(cid:88)

(cid:88)

t∈T

k

(cid:16)

C

t , (cid:98)pk
pk

t

(cid:17)

(2)

where L is the pixel-wise cross-entropy loss deﬁned over
the sufﬁciently labeled source domain images, enforcing the
network to have the pixel level discriminative capabilities,
and the second term is over the unlabeled target domain im-
ages, hinting the network what necessary properties its pre-
dictions should have in the target domain. We use γ ∈ [0, 1]
to balance the two strengths in training and superscript k to
index different types of label distributions.

Note that in the domain adaptation context, we actually
cannot directly compute the label distribution pk
t from the
groundtruth annotations of the target domain. Nonetheless,
estimating them using the labeled source data is easier than
assigning labels to every single pixel of the target images.
We present the details in the next section.

Remarks. Mathematically, the objective function has a
similar form as in model compression [9, 26]. We thus
borrow some concepts to gain more intuitive understanding
about our domain adaptation procedure. The “student” net-
work follows a curriculum to learn simple knowledge about
the target domain before it addresses the hard one of seman-
tically segmenting images. The models inferring the target
properties act like “teachers”, as they hint what label dis-
tributions the ﬁnal solution (image annotation) may have in
the target domain at the image and superpixel levels.

Another perspective is to understand the target prop-
erties as a posterior regularization [16] for the network.
The posterior regularization can conveniently encode a pri-
ori knowledge into the objective function. Some applica-
tions include weakly supervised segmentation [44, 49] and
detection [5], and rule-regularized training of neural net-
works [29]. In addition to the domain adaptation setting and
novel target properties, another key distinction of our work
is that we decouple the label distributions from the network
predictions and thus avoid the EM type of optimizations.
Our approach learns the segmentation network with almost
effortless changes to the popular deep learning tools.

3.2. Inferring the target properties

Thus far we have presented the “hard” task in the cur-
riculum domain adaptation. In this section, we describe the
“easy” ones, i.e., how to infer the target properties without
accessing the image annotations of the target domain. Our
contributions also include selecting the particular property
of label distributions to constitute the simple tasks.

3.2.1 Global label distributions of images

Due to the domain disparity, a baseline segmentation net-
work trained on the source domain (i.e., using the ﬁrst term
of eq. (2)) could be easily crippled given the target images.
In our experiments, we ﬁnd that our baseline network con-
stantly mistakes streets for sidewalks and/or cars (cf. Fig-
ure 2). Consequently, the predicted labels for the pixels are
highly disproportionate.

To rectify this, we employ the label distribution pt over
the global image as our ﬁrst property (cf. eq. (1)). Without
access to the target labels, we have to train machine learn-
ing models from the labeled source images to estimate the
label distribution pt for the target image. Nonetheless, we
argue that this is less challenging than generating the per-
pixel predictions despite that both tasks are inﬂuenced by
the domain mismatch.

In our experiments, we examine different approaches to
this task. We extract image features using the Inception-
Resnet-v2 [57] as the input to the following models.

Logistic regression. Although multinomial logistic regres-
sion (LR) is mainly used for classiﬁcation, its output is
actually a valid distribution over the categories. For
our purpose, we thus train it by replacing the one-hot
vectors in the cross-entropy loss with the groundtruth
label distribution ps, which is calculated using eq. (1)
and the available human labels of the source domain.
Given a target image, we directly take the LR’s output
as the predicted label distribution.

Mean of nearest neighbors. We also test a nonparamet-
ric method by simply retrieving the nearest neighbors
(NNs) for a target image and then transferring the
mean of the NNs’ label distributions to the target im-
age. We use the (cid:96)2 distance for the NN retrieval.

Finally, we include two dumb predictions as the control
experiment. One is, for any target image, to output the mean
of all the label distributions in the source domain (source
mean), and the other is to output a uniform distribution.

3.2.2 Local label distributions of landmark superpixels

The image level label distribution globally penalizes poten-
tially disproportional segmentation output on the target do-
main, and yet is inadequate in providing spatial constraints.
In this section, we consider the use of label distributions
over some superpixels as the anchors to drive the network
towards spatially desired target properties.

Note that it is not necessary, and is even harmful, to
use all of the superpixels in a target image to regularize
the segmentation network, because that would be too strong
a force and may overrule the pixel-wise discriminativeness
revealed by the labeled source images, especially when the
label distributions are not inferred accurately enough.

In order to have the dual effect of both estimating the la-
bel distributions of superpixels and ﬁltering the superpixels,
we simplify the problem and employ a linear SVM in this
work. In particular, we segment each image into 100 super-
pixels using linear spectral clustering [33]. For the super-
pixels of the source domain, we are able to assign a single
dominant label to each of them, and then use the labels and
the corresponding features extracted from the superpixels to
train a multi-class SVM. Given a test superpixel of a target
image, the multi-class SVM returns a class label as well as a
decision value, which is interpreted as the conﬁdence score
about classifying this superpixel. We keep the top 60% su-
perpixels, called landmark superpixels, in the target domain
and calculate their label distributions as the second type of
In particular, the class label of a landmark
“easy” tasks.
superpixel is encoded into a one-hot vector, which serves
as a valid distribution about the categories in the landmark

ers with VGG-19 [54], and then train it using the AdaDelta
optimizer [67] with default parameters. Each mini-batch is
comprised of ﬁve source images and ﬁve randomly chosen
target images. When we train the baseline network with no
adaptation, however, we try to use the largest possible mini-
batch that includes 15 source images. The network is im-
plemented in Keras [11] and Theano [1]. We train different
versions of the network on a single Tesla K40 GPU.

Unlike the existing deep domain adaptation methods [17,
18, 36, 27] which introduce regularization to the intermedi-
ate layers, we only revise the loss function over the output.
Hence, our curriculum domain adaptation can be readily ap-
plied to other segmentation networks (e.g., [39, 10]).

4.2. Datasets and evaluation

We use the publicly available Cityscpaes [12] and SYN-

THIA [48] datasets in our experiments.

Cityscapes is a real-world, vehicle-egocentric image
dataset collected in 50 cities in Germany and nearby coun-
tries. It provides four disjoint subsets: 2,993 training im-
ages, 503 validation image, 1,531 test images, and 20,021
auxiliary images. All the training, validation, and test im-
ages are accurately annotated with per pixel category labels,
while the auxiliary set is coarsely labeled. There are 34 dis-
tinct categories in the dataset.

SYNTHIA [48] is a large dataset of synthetic images
and provides a particular subset, called SYNTHIA-RAND-
CITYSCAPES, to pair with Cityscapes. This subset con-
tains 9,400 images that are automatically annotated with
12 object categories, one void class, and some unnamed
classes. Note that the virtual city used to generate the syn-
thetic images does not correspond to any of the real cities
covered by Cityscapes. We abbreviate SYNTHIA-RAND-
CITYSCAPES to SYNTHIA hereon.

Domain idiosyncrasies. Although both datasets depict
urban scenes, and SYNTHIA is created to be as photo-
realistic as possible, they are mismatched domains in sev-
eral ways. The most noticeable difference is probably the
coarse-grained textures in SYNTHIA; very similar texture
patterns repeat in a regular manner across different im-
ages.
In contrast, the Cityscapes images are captured by
high-quality dash-cameras. Another major distinction is
the variability in view angles. Since Cityscapes images are
recorded by the dash cameras mounted on a moving car,
they are viewed from almost a constant angle that is about
parallel to the ground. More diverse view angles are em-
ployed by SYNTHIA — it seems like some cameras are
placed on the buildings that are signiﬁcantly higher than a
bus. Finally, some of the SYNTHIA images are severely
shadowed by extreme lighting conditions, while we ﬁnd no
such conditions in the Cityscapes images. These combined
factors, among others, make domain adaptation from SYN-
THIA to Cityscapes a very challenging problem.

Figure 1: The overall framework of curriculum domain
adaptation for semantic segmentation of urban scenes.

superpixel. Albeit simple, we ﬁnd this method works very
well in our experiments.

We encode both visual and contextual information to
represent a superpixel. First, we use the FCN-8s [35] pre-
trained on the PASCAL CONTEXT [38] dataset, which has
59 distinct classes, to obtain 59 detection scores for each
pixel. We then average them within each superpixel. Fi-
nally, we represent a superpixel by the concatenation of the
59D vectors of itself, its left and right superpixels, as well
as the two respectively above and below it.

3.3. Curriculum domain adaptation: recapitulation

We recap the proposed curriculum domain adaptation us-
ing Figure 1 before presenting the experiments in the next
section. Our main idea is to execute the domain adaptation
step by step, starting from the easy tasks that are less sensi-
tive to the domain discrepancy than the semantic segmenta-
tion. We choose the labels distributions over global images
and local landmark superpixels in this work; more tasks will
be explored in the future. The solutions to them provide
useful gradients originating from the target domain (cf. the
arrows with brown color in Figure 1), while the source do-
main feeds the network with well-labeled images and seg-
mentation masks (cf. the dark blue arrows in Figure 1).

4. Experiments

In this section, we describe the experimental setup and
compare the results of our approach, its variations, and
some existing baseline methods.

4.1. Segmentation network and optimization

In our experiments, we use FCN-8s [35] as our semantic
segmentation network. We initialize its convolutional lay-

t
s
e
r
a
e
n
s
t
i
e
v
e
i
r
t
e
r
e
w

,

n
m
u
l
o
c
t
s
r
ﬁ
e
h
t
n
i
e
g
a
m

i

t
e
g
r
a
t
h
c
a
e
r
o
F

.
)
n
i
a
m
o
d
t
e
g
r
a
t
(

]
8
4
[

t
e
s
a
t
a
d
s
e
p
a
c
s
y
t
i

C
e
h
t
n
o
s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
c
i
t
n
a
m
e
s
e
v
i
t
a
t
i
l
a
u
Q

:
2
e
r
u
g
i
F

,

n
o
i
t
a
t
o
n
n
a

c
i
t
n
a
m
e
s

e
s
i
w

-
l
e
x
i
p
h
t
u
r
t
d
n
u
o
r
g
e
h
t
o
t

e
u
d
s
n
o
i
t
u
b
i
r
t
s
i
d
l
e
b
a
l

e
h
t

s
t
o
l
p
n
m
u
l
o
c
d
r
i
h
t

e
h
T

.
)
n
i
a
m
o
d
e
c
r
u
o
s
(

t
e
s
a
t
a
d
]
2
1
[

I

A
H
T
N
Y
S
e
h
t

m
o
r
f

r
o
b
h
g
i
e
n

s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
e
h
t
e
r
a
s
n
m
u
l
o
c
e
e
r
h
t

t
s
a
l
e
h
T

.

n
o
i
s
s
e
r
g
e
r
c
i
t
s
i
g
o
l
y
b
n
o
i
t
u
b
i
r
t
s
i
d
d
e
r
r
e
f
n
i
e
h
t
d
n
a

,
n
o
i
t
a
t
p
a
d
a
o
n
h
t
i

w
k
r
o
w
t
e
n
e
n
i
l
e
s
a
b
e
h
t
y
b
s
n
o
i
t
c
i
d
e
r
p
e
h
t

.
s
r
o
t
a
t
o
n
n
a

n
a
m
u
h

d
n
a

,
h
c
a
o
r
p
p
a

n
o
i
t
a
t
p
a
d
a
n
i
a
m
o
d
r
u
o

,

k
r
o
w
t
e
n

e
n
i
l
e
s
a
b
e
h
t
y
b

Table 1: The χ2 distances between the groundtruth label
distributions and those predicted by different methods.

Method
χ2 Distance

Uniform NoAdapt

1.13

0.65

Src mean NN
0.33

0.44

LR
0.27

Figure 2 shows some example images from both
datasets. We pair each Cityscpaes image with its nearest
neighbor in SYNTHIA, retrieved by the Inception-Resnet-
v2 [57] features. However, the cross-dataset nearest neigh-
bors are visually very different from the query images, ver-
ifying the dramatic disparity between the two domains.

Experiment setup. Since our ultimate goal is to solve the
semantic segmentation problem for real images of urban
scenes, we take Cityscapes as the target domain and SYN-
THIA as the source domain. The Cityscapes validation set
is used as our test set. We split 500 images out of the Citysc-
paes training set for the validation purpose (e.g., to monitor
the convergence of the networks). In training, we randomly
sample mini-batches from both the images (and their labels)
of SYNTHIA and the remaining images of Cityscapes yet
with no labels.

As in [27], we manually ﬁnd 16 common classes be-
tween the two datasets: sky, building, road, sidewalk, fence,
vegetation, pole, car, trafﬁc sign, person, bicycle, motorcy-
cle, trafﬁc light, bus, wall, and rider. The last four are un-
named and yet labeled in SYNTHIA.

TP

Evaluation. We use the evaluation code released along
with the Cityscapes dataset to evaluate our results. It calcu-
lates the PASCAL VOC intersection-over-union, i.e., IoU =
TP+FP+FN [14], where TP, FP, and FN are the numbers of
true positive, false positive, and false negative pixels, re-
spectively, determined over the whole test set. Since we
have to resize the images before feeding them to the seg-
mentation network, we resize the output segmentation mask
back to the original image size before running the evaluation
against the groundtruth annotations.

4.3. Results of inferring global label distributions

Before presenting the ﬁnal semantic segmentation re-
sults, we ﬁrst compare the different approaches to inferring
the global label distributions of the target images (cf. Sec-
tion 3.2.1). We report the results on the held-out validation
images of Cityscapes in this experiment, and then select the
best method for the remaining experiments.

In Table 1, we compare the estimated label distributions
with the groundtruth ones using the χ2 distance, the smaller
the better. We see that the baseline network (NoAdapt),
which is directly learned from the source domain without
any adaptation methods, outperforms the dumb uniform dis-
tribution (Uniform) and yet no other methods. This con-
ﬁrms that the baseline network gives rise to severely dis-
proportionate predictions over the target domain.

Another dumb prediction (Src mean),

i.e., using the
mean of all label distributions over the source domain as
the prediction for the target images, however, performs rea-
sonably well. To some extent, this indicates the value of
the simulated source domain for the semantic segmentation
task of urban scenes.

Finally, the nearest neighbors (NN) based method and
the multinomial logistic regression (LR) (cf. Section 3.2.1)
perform the best. We use the output of LR on the target
domain in our remaining experiments.

4.4. Comparison results

We report the ﬁnal semantic segmentation results on the
test data of the target domain in this section. We compare
our approach to the following competing methods.

No adaptation (NoAdapt). We directly train the FCN-8s
model on SYNTHIA without applying any domain
adaptation methods. This is the most basic baseline
for our experiments.

Superpixel classiﬁcation (SP). Recall

have
trained a multi-class SVM using the dominant labels
of the superpixels in the source domain. We then use
them to classify the target superpixels.

that we

Landmark superpixels (SP Lndmk). Since we keep the
top 60% most conﬁdently classiﬁed superpixels as the
landmarks to regularize our segmentation network dur-
ing training (cf. Section 3.2.2), it is also interesting to
examine the classiﬁcation results of these superpixels.
We run the evaluation after assigning the void class la-
bel to the other pixels of the images.

In addition to the IoU, we have also evaluated the clas-
siﬁcation results of the superpixels by accuracy. We
ﬁnd that the classiﬁcation accuracy is 71% for all the
superpixels of the target domain, while for the selected
60% landmark superpixels, the classiﬁcation accuracy
is more than 88%.

FCNs in the wild (FCN Wld). Hoffman et al.’s work [27]
is the only existing one addressing the same problem
as ours, to the best of our knowledge. They introduce
a pixel-level adversarial loss to the intermediate lay-
ers of the network and impose constraints to the net-
work output. Their experimental setup is about identi-
cal to ours except that they do not specify which part
of Cityscapes is considered as the test set. Nonethe-
less, we include their results for comparison to put our
work in a better perspective.

The comparison results are shown in Table 2. Immedi-
ately, we note that all our domain adaptation results are sig-
niﬁcantly better than those without adaptation (NoAdapt).

Table 2: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from SYNTHIA [48].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
SP Lndmk
SP
Ours (SP)
Ours (I+SP)

17.4
20.2
22.0
25.5
23.0
25.6
28.1
29.0

e
k
i
b

0.0
0.6
18.0
16.7
0.0
0.0
10.2
13.1

e
c
n
e
f

0.0
0.0
0.5
0.8
0.0
0.0
0.4
0.5

l
l
a
w

1.2
4.4
0.8
2.3
0.0
0.0
0.1
0.1

n
g
i
s
-
t

7.2
11.7
5.3
6.4
0.0
0.0
2.7
3.0

e
l
o
p

15.1
20.3
21.5
21.7
0.0
0.0
8.1
10.7

e
k
i
b
m

0.1
0.2
0.5
1.0
0.0
0.0
0.8
0.7

t
h
g
i
l
-
t

0.0
0.1
8.0
9.9
0.0
0.0
3.7
3.7

y
k
s

66.8
68.7
75.6
59.6
83.1
80.5
68.7
70.6

s
u
b

3.9
3.2
4.5
12.1
26.1
22.1
21.4
20.7

r
e
d
i
r

1.5
3.8
9.0
7.9
0.0
0.0
7.9
8.2

g
e
v

30.3
42.3
72.4
70.2
73.1
71.9
75.5
76.1

g
d
l
b

29.7
30.8
59.6
67.5
67.7
69.3
74.6
74.9

r
a
c

47.3
54.0
23.6
32.0
41.1
45.9
42.9
43.2

n
o
s
r
e
p

51.1
51.2
35.1
29.3
5.8
24.6
47.3
47.1

k
l
a
w
e
d
i
s

17.7
19.6
11.2
18.1
10.6
19.8
23.9
26.1

d
a
o
r

6.4
11.5
5.6
51.9
60.8
75.0
61.8
65.2

We denote by (Ours (I)) the network trained using the
global label distributions over the target images (and the la-
beled source images). Although one may wonder that the
image-wise label distributions are too high-level to super-
vise the pixel-wise discriminative network, the gain is ac-
tually signiﬁcant. They are able to correct some obvious
errors of the baseline network, such as the disproportional
predictions about road and sidewalk (cf. the results of Ours
(I) vs. NoAdapt in the last two columns).

It is interesting to see that both superpixel classiﬁcation-
based segmentation results (SP and SP Lndmk) are also bet-
ter than the baseline network (NoAdapt). The label distribu-
tions obtained over the landmark superpixels boost the seg-
mentation network (Ours (SP)) to the mean IoU of 28.1%,
which is better than those by either superpixel classiﬁcation
or the baseline network individually. We have also tried to
use the label distributions over all the superpixels to train
the network, and observe little improvement over NoAdapt.
This is probably because it is too forceful to regularize the
network output at every single superpixel especially when
the estimated label distributions are not accurate enough.

The superpixel-based methods, including Ours (SP),
miss small objects such as fences, trafﬁc lights (t-light), and
trafﬁc signs (t-sign), and instead are very accurate for cat-
egories like the sky, road, and building, that typically oc-
cupy larger image regions. On the contrary, the label dis-
tributions on the images give rise to a network (Ours (I))
that performs better on the small objects than Ours (SP).
In other words, they mutually complement to some extent.
Re-training the network by using the label distributions over
both global images and local landmark superpixels (Ours
(I+SP)), we achieve the best semantic segmentation results
on the target domain. In the future work, it is worth explor-
ing other target properties, perhaps still in the form of label
distributions, that handle the small objects well, in order to
further complement the superpixel-level label distributions.

Comparison with FCNs in the wild [27]. Although we
use the same segmentation network (FCN-8s) as [27], our
baseline results (NoAdapt) are better than those reported

in [27]. This may be due to subtle differences in terms of
implementation or experimental setup. Although our own
baseline results are superior, we gain larger improvements
(7%) over them than the performance gain of [27] (3%) over
the seemingly underperforming baseline network there.

Comparison with learning domain-invariant features.
At our ﬁrst attempt to solve the domain adaptation problem
for the semantic segmentation of urban scenes, we tried to
learn domain invariant features following the deep domain
adaptation methods [36] for classiﬁcation. In particular, we
impose the maximum mean discrepancy [24] over the layer
before the output. We name such network layer the feature
layer. Since there are virtually three output layers in FCN-
8s, we experiment with all the three feature layers corre-
spondingly. We have also tested the domain adaptation by
reversing the gradients of a domain classiﬁer [17]. How-
ever, none of these efforts lead to any noticeable gain over
the baseline network so the results are omitted.

5. Conclusion

In this paper, we address domain adaptation for the se-
mantic segmentation of urban scenes. We propose a cur-
riculum style approach to this problem. We learn to esti-
mate the global label distributions of the images and local
label distributions of the landmark superpixels of the target
domain. Such tasks are easier to solve than the pixel-wise
label assignment. Therefore, we use their results to effec-
tively regularize our training of the semantic segmentation
network such that its predictions meet the inferred label dis-
tributions over the target domain. Our method outperforms
several competing methods that do domain adaptation from
simulated images to real photos of urban trafﬁc scenes. In
future work, we will explore more target properties that can
be conveniently inferred to enrich our curriculum domain
adaptation framework.

Acknowledgements. This work is supported by the NSF
award IIS #1566511, a gift from Adobe Systems Inc., and
a GPU from NVIDIA. We thank the anonymous reviewers
and area chairs for their insightful comments.

References

[1] R. Al-Rfou, G. Alain, A. Almahairi, C. Angermueller,
D. Bahdanau, N. Ballas, F. Bastien, J. Bayer, A. Belikov,
A. Belopolsky, and others. Theano: A Python framework
for fast computation of mathematical expressions. arXiv
preprint arXiv:1605.02688, 2016. 5

[2] R. Aljundi, R. Emonet, D. Muselet, and M. Sebban.
Landmarks-based kernelized subspace alignment for unsu-
pervised domain adaptation. In IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), pages 56–63,
2015. 1

[3] V. Badrinarayanan, A. Kendall, and R. Cipolla. Segnet: A
deep convolutional encoder-decoder architecture for image
segmentation. arXiv preprint arXiv:1511.00561, 2015. 3
[4] Y. Bengio, J. Louradour, R. Collobert, and J. Weston. Cur-
riculum learning. In Proceedings of the 26th annual interna-
tional conference on machine learning, pages 41–48. ACM,
2009. 2

[5] H. Bilen, M. Pedersoli, and T. Tuytelaars. Weakly supervised
In BMVA

object detection with posterior regularization.
British Machine Vision Conference (BMVC), 2014. 4

[6] E. Borenstein and S. Ullman. Class-speciﬁc, top-down seg-
In European conference on computer vision,

mentation.
pages 109–122. Springer, 2002. 1

[7] K. Bousmalis, N. Silberman, D. Dohan, D. Erhan, and
D. Krishnan. Unsupervised pixel-level domain adapta-
tion with generative adversarial networks. arXiv preprint
arXiv:1612.05424, 2016. 3

[8] G. J. Brostow, J. Fauqueur, and R. Cipolla. Semantic object
classes in video: A high-deﬁnition ground truth database.
Pattern Recognition Letters, 30(2):88–97, 2009. 3

[9] C. Bucilu, R. Caruana, and A. Niculescu-Mizil. Model com-
pression. In Proceedings of the 12th ACM SIGKDD interna-
tional conference on Knowledge discovery and data mining,
pages 535–541. ACM, 2006. 4

[10] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
arXiv preprint
volutional nets and fully connected crfs.
arXiv:1412.7062, 2014. 2, 3, 5

[11] F. Chollet. keras. https://github.com/fchollet/

keras, 2015. 5

[12] M. Cordts, M. Omran, S. Ramos, T. Rehfeld, M. Enzweiler,
R. Benenson, U. Franke, S. Roth, and B. Schiele. The
cityscapes dataset for semantic urban scene understanding.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 3213–3223, 2016. 1, 3, 5, 6,
8, 12

[13] J. Dai, K. He, and J. Sun. Instance-aware semantic segmen-
tation via multi-task network cascades. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3150–3158, 2016. 3

[14] M. Everingham, S. A. Eslami, L. Van Gool, C. K. Williams,
J. Winn, and A. Zisserman. The pascal visual object classes
International Journal of Com-
challenge: A retrospective.
puter Vision, 111(1):98–136, 2015. 3, 7

[15] B. Fernando, A. Habrard, M. Sebban, and T. Tuytelaars. Un-
supervised visual domain adaptation using subspace align-

ment. In IEEE International Conference on Computer Vision
(ICCV), pages 2960–2967, 2013. 1

[16] K. Ganchev, J. Gillenwater, B. Taskar, et al. Posterior reg-
ularization for structured latent variable models. Journal of
Machine Learning Research, 11(Jul):2001–2049, 2010. 2, 4
[17] Y. Ganin and V. Lempitsky. Unsupervised domain adapta-
In International Conference on
tion by backpropagation.
Machine Learning (ICML), pages 1180–1189, 2015. 2, 3,
5, 8

[18] Y. Ganin, E. Ustinova, H. Ajakan, P. Germain, H. Larochelle,
F. Laviolette, M. Marchand,
and V. S. Lempitsky.
Domain-adversarial training of neural networks. CoRR,
arXiv:1505.07818, 2015. 2, 3, 5

[19] A. Geiger, P. Lenz, C. Stiller, and R. Urtasun. Vision meets
robotics: The kitti dataset. The International Journal of
Robotics Research, 32(11):1231–1237, 2013. 1

[20] B. Gong, K. Grauman, and F. Sha. Connecting the dots with
landmarks: Discriminatively learning domain invariant fea-
tures for unsupervised domain adaptation. In International
Conference on Machine Learning (ICML), pages 222–230,
2013. 1

[21] B. Gong, F. Sha, and K. Grauman. Overcoming dataset
bias: An unsupervised domain adaptation approach. In NIPS
Workshop on Large Scale Visual Recognition and Retrieval
(LSVRR), 2012. 2

[22] B. Gong, Y. Shi, F. Sha, and K. Grauman. Geodesic ﬂow
kernel for unsupervised domain adaptation. In IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2066–2073, 2012. 1, 2

[23] R. Gopalan, R. Li, and R. Chellappa. Domain adaptation
for object recognition: An unsupervised approach. In IEEE
International Conference on Computer Vision (ICCV), pages
999–1006, 2011. 1

[24] A. Gretton, K. M. Borgwardt, M. J. Rasch, B. Sch¨olkopf, and
A. Smola. A kernel two-sample test. Journal of Machine
Learning Research, 13(Mar):723–773, 2012. 8

[25] A. Gretton, A. Smola, J. Huang, M. Schmittfull, K. Borg-
wardt, and B. Sch¨olkopf. Covariate shift by kernel mean
In J. Qui ˜A±onero-Candela, M. Sugiyama,
matching.
A. Schwaighofer, and N. D. Lawrence, editors, Dataset Shift
in Machine Learning. The MIT Press, 2008. 2

[26] G. Hinton, O. Vinyals, and J. Dean. Distilling the knowledge
in a neural network. arXiv preprint arXiv:1503.02531, 2015.
4

[27] J. Hoffman, D. Wang, F. Yu, and T. Darrell. FCNs in the
Wild: Pixel-level Adversarial and Constraint-based Adapta-
tion. arXiv preprint arXiv:1612.02649, 2016. 1, 2, 3, 5, 7, 8,
12

[28] S. Hong, J. Oh, H. Lee, and B. Han. Learning transferrable
knowledge for semantic segmentation with deep convolu-
In Proceedings of the IEEE Con-
tional neural network.
ference on Computer Vision and Pattern Recognition, pages
3204–3212, 2016. 3

[29] Z. Hu, X. Ma, Z. Liu, E. Hovy, and E. Xing. Harness-
ing deep neural networks with logic rules. arXiv preprint
arXiv:1603.06318, 2016. 4

[30] A. Khosla, T. Zhou, T. Malisiewicz, A. A. Efros, and A. Tor-
ralba. Undoing the damage of dataset bias. In European Con-
ference on Computer Vision (ECCV), pages 158–171, 2012.
2

[31] B. Kulis, K. Saenko, and T. Darrell. What you saw is not
what you get: Domain adaptation using asymmetric kernel
In IEEE Conference on Computer Vision and
transforms.
Pattern Recognition (CVPR), 2011. 1

[32] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-
based learning applied to document recognition. Proceed-
ings of the IEEE, 86(11):2278–2324, 1998. 3

[33] Z. Li and J. Chen. Superpixel segmentation using linear
spectral clustering. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1356–
1363, 2015. 4

[34] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Dollr, and C. L. Zitnick. Microsoft coco: Common
objects in context. In European Conference on Computer Vi-
sion, pages 740–755. Springer, 2014. 3

[35] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3431–3440, 2015. 2, 3, 5

[36] M. Long, Y. Cao, J. Wang, and M. I. Jordan. Learning trans-
ferable features with deep adaptation networks. In Interna-
tional Conference on Machine Learning (ICML), 2015. 2, 3,
5, 8

[37] A. M. L´opez, J. Xu, J. L. Gomez, D. V´azquez, and
G. Ros. From virtual to real world visual perception us-
ing domain adaptation–the dpm as example. arXiv preprint
arXiv:1612.09134, 2016. 3

[38] R. Mottaghi, X. Chen, X. Liu, N.-G. Cho, S.-W. Lee, S. Fi-
dler, R. Urtasun, and A. Yuille. The role of context for object
detection and semantic segmentation in the wild. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 891–898, 2014. 5

[39] H. Noh, S. Hong, and B. Han. Learning deconvolution
network for semantic segmentation. In IEEE International
Conference on Computer Vision (ICCV), pages 1520–1528,
2015. 2, 3, 5

[40] S. J. Pan, J. T. Tsang, Ivor W.and Kwok, and Q. Yang. Do-
main adaptation via transfer component analysis. Transac-
tions on Neural Networks, 22(2):199 – 210, 2011. 1

[41] S. J. Pan and Q. Yang. A survey on transfer learning. Trans-
actions on Knowledge and Data Engineering, 22(10):1345–
1359, 2010. 1, 2

[42] G. Papandreou, L.-C. Chen, K. P. Murphy, and A. L. Yuille.
Weakly-and semi-supervised learning of a deep convolu-
In Pro-
tional network for semantic image segmentation.
ceedings of the IEEE International Conference on Computer
Vision, pages 1742–1750, 2015. 3

[43] V. M. Patel, R. Gopalan, R. Li, and R. Chellappa. Visual do-
main adaptation: A survey of recent advances. Signal Pro-
cessing Magazine, 32(3):53–69, 2015. 1, 2, 3

[44] D. Pathak, P. Krahenbuhl, and T. Darrell. Constrained con-
volutional neural networks for weakly supervised segmenta-
tion. In Proceedings of the IEEE International Conference
on Computer Vision, pages 1796–1804, 2015. 2, 3, 4

[45] X. Peng and K. Saenko.

Synthetic to real adaptation
with deep generative correlation alignment networks. arXiv
preprint arXiv:1701.05524, 2017. 3

[46] P. O. Pinheiro and R. Collobert. From image-level to pixel-
level labeling with convolutional networks. In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1713–1721, 2015. 3

[47] S. R. Richter, V. Vineet, S. Roth, and V. Koltun. Playing
for data: Ground truth from computer games. In European
Conference on Computer Vision, pages 102–118. Springer,
2016. 3, 11, 12

[48] G. Ros, L. Sellart, J. Materzynska, D. Vazquez, and A. M.
Lopez. The synthia dataset: A large collection of synthetic
images for semantic segmentation of urban scenes. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 3234–3243, 2016. 1, 3, 5, 6, 8

[49] G. Ros, S. Stent, P. F. Alcantarilla, and T. Watanabe. Training
constrained deconvolutional networks for road scene seman-
tic segmentation. arXiv preprint arXiv:1604.01545, 2016. 3,
4

[50] K. Saenko, B. Kulis, M. Fritz, and T. Darrell. Adapting vi-
sual category models to new domains. In European Confer-
ence on Computer Vision (ECCV), pages 213–226, 2010. 2
[51] A. Shafaei, J. J. Little, and M. Schmidt. Play and learn: using
video Games to train computer vision models. arXiv preprint
arXiv:1608.01745, 2016. 3

[52] J. Shotton, M. Johnson, and R. Cipolla. Semantic texton
forests for image categorization and segmentation. In 2008
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 1–8, June 2008. 3

[53] A. Shrivastava, T. Pﬁster, O. Tuzel, J. Susskind, W. Wang,
Learning from simulated and unsuper-
and R. Webb.
vised images through adversarial training. arXiv preprint
arXiv:1612.07828, 2016. 1, 3
[54] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
arXiv:1409.1556, 2014. 5

[55] B. Sun, J. Feng, and K. Saenko. Return of frustratingly easy
domain adaptation. In AAAI Conference on Artiﬁcial Intelli-
gence (AAAI), 2016. 1

[56] B. Sun and K. Saenko. From virtual to reality: Fast adap-
tation of virtual object detectors to real domains. In BMVA
British Machine Vision Conference (BMVC), 2014. 3
[57] C. Szegedy, S. Ioffe, V. Vanhoucke, and A. Alemi. Inception-
v4, inception-resnet and the impact of residual connections
on learning. arXiv preprint arXiv:1602.07261, 2016. 4, 7

[58] J. Tighe and S. Lazebnik. Superparsing: scalable nonpara-
metric image parsing with superpixels. In European confer-
ence on computer vision, pages 352–365. Springer, 2010. 3
[59] T. Tommasi, N. Patricia, B. Caputo, and T. Tuytelaars. A
deeper look at dataset bias. CoRR, arXiv:1505.01257, 2015.
2

[60] A. Torralba and A. A. Efros. Unbiased look at dataset bias.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), 2011. 2

[61] E. Tzeng, J. Hoffman, T. Darrell, and K. Saenko. Simul-
In IEEE

taneous deep transfer across domains and tasks.

International Conference on Computer Vision (ICCV), pages
4068–4076, 2015. 2, 3

[62] E. Tzeng, J. Hoffman, N. Zhang, K. Saenko, and T. Darrell.
Deep domain confusion: Maximizing for domain invariance.
CoRR, arXiv:1412.3474, 2014. 2

[63] D. Vazquez, A. M. L´opez, J. Mar´ın, D. Ponsa, and
D. Ger´onimo. Virtual and real world adaptation for pedes-
trian detection. Transactions of Pattern Recognition and Ma-
chine Analyses (PAMI), 36(4):797 – 809, 2014. 3

[64] Z. Wu, C. Shen, and A. v. d. Hengel. Wider or Deeper:
Revisiting the ResNet Model for Visual Recognition. arXiv
preprint arXiv:1611.10080, 2016. 3

[65] J. Xu, S. Ramos, D. Vazquez, and A. L´opez. Hierarchi-
cal adaptive structural svm for domain adaptation. CoRR,
arXiv:1408.5400, 2014. 3

[66] M. Yamada, L. Sigal, and Y. Chang. Domain adaptation for
structured regression. International journal of computer vi-
sion, 109(1-2):126–145, 2014. 2

[67] M. D. Zeiler. ADADELTA: an adaptive learning rate method.

arXiv preprint arXiv:1212.5701, 2012. 5

[68] C. Zhang, L. Wang, and R. Yang. Semantic segmentation
of urban scenes using dense depth maps. In European Con-
ference on Computer Vision, pages 708–721. Springer, 2010.
3

[69] H. Zhao, J. Shi, X. Qi, X. Wang, and J. Jia. Pyramid Scene
Parsing Network. arXiv preprint arXiv:1612.01105, 2016. 3

GTA→Cityscapes

The main text above has been accepted to IEEE Interna-
tional Conference on Computer Vision (ICCV) 2017. After
the paper submission, we have been continuously working
on the project and have got more results. We include them
below to complement the experiments in the main text.

The new experiment is basically the same as the one in
the main text except that we replace SYNTHIA with the
GTA dataset [47]. GTA is a synthetic, vehicle-egocentric
image dataset collected from the open world in the realisti-
cally rendered computer game Grand Theft Auto V (GTA,
or GTA5). It contains 24,996 images, whose semantic seg-
mentation annotations are fully compatible with the classes
used in Cityscapes. Hence we use all the 19 ofﬁcial training
classes in our experiment. The results are shown in Table 3.
As in the main text, the same observations about our ap-
proach apply here. Additionally, we note that the results
are overall better than those adapting from SYNTHIA to
Cityscapes. This is not surprising, because the GTA images
are more photo-realistic than SYNTHIA’s.

Table 3: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from GTA [47].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
Ours (SP)
SP Lndmk
SP
Ours (I+SP)

21.1
27.1
22.3
23.1
27.8
21.4
26.8
28.9

e
k
i
b

0.0
0.0
13.8
9.5
15.6
0.0
0.3
14.6

e
c
n
e
f

3.1
5.4
8.7
9.4
11.7
0.0
4.1
11.9

l
l
a
w

7.4
14.9
7.3
10.2
5.7
0.0
7.6
6.0

n
g
i
s
-
t

1.0
2.7
16.8
14.0
12.0
0.0
0.0
11.1

e
l
o
p

16.0
10.9
21.0
20.2
9.2
0.0
0.2
8.4

e
k
i
b
m

0.0
3.5
4.3
3.8
12.9
0.0
0.9
16.8

t
h
g
i
l
-
t

10.4
14.2
14.9
13.6
15.5
0.0
0.0
16.3

y
k
s

58.9
64.6
64.4
63.8
64.9
82.9
81.6
66.5

s
u
b

3.7
7.3
5.0
3.4
15.5
10.0
25.3
18.9

r
e
d
i
r

1.0
4.2
17.5
10.6
9.1
0.0
3.5
9.3

g
e
v

76.5
79.2
45.9
56.9
74.6
74.5
73.0
75.7

n
i
a
r
r
e
t

13
21.3
2.4
2.8
11.1
22.5
32.1
13.3

n
i
a
r
t

0.0
0.0
6.9
10.9
0.0
0.0
0.0
0.0

g
d
l
b

47.7
62.1
64.1
69.7
70.5
69.9
71.0
71.7

r
a
c

67.1
70.4
55.3
60.5
56.1
52.7
61.9
55.2

n
o
s
r
e
p

36
44.1
41.6
31.8
34.8
13.1
26.2
38.0

k
c
u
r
t

9.5
8.0
8.4
10.9
15.9
11.2
30.4
18.8

k
l
a
w
e
d
i
s

18.9
32.4
6.8
10.8
21.8
8.0
19.2
22.0

d
a
o
r

31.9
70.4
18.1
26.4
72.1
61.8
71.8
74.9

8
1
0
2
 
v
o
N
 
4
1
 
 
]

V
C
.
s
c
[
 
 
5
v
5
6
4
9
0
.
7
0
7
1
:
v
i
X
r
a

Curriculum Domain Adaptation for Semantic Segmentation of Urban Scenes

Yang Zhang1, Philip David2, and Boqing Gong1

1 Center for Research in Computer Vision, University of Central Florida
2 Computational and Information Sciences Directorate, U.S. Army Research Laboratory
yangzhang@knights.ucf.edu, philip.j.david4.civ@mail.mil, bgong@crcv.ucf.edu

Abstract

During the last half decade, convolutional neural net-
works (CNNs) have triumphed over semantic segmentation,
which is a core task of various emerging industrial appli-
cations such as autonomous driving and medical imaging.
However, to train CNNs requires a huge amount of data,
which is difﬁcult to collect and laborious to annotate. Re-
cent advances in computer graphics make it possible to
train CNN models on photo-realistic synthetic data with
computer-generated annotations. Despite this, the domain
mismatch between the real images and the synthetic data
signiﬁcantly decreases the models’ performance. Hence we
propose a curriculum-style learning approach to minimize
the domain gap in semantic segmentation. The curriculum
domain adaptation solves easy tasks ﬁrst in order to infer
some necessary properties about the target domain; in par-
ticular, the ﬁrst task is to learn global label distributions
over images and local distributions over landmark super-
pixels. These are easy to estimate because images of urban
trafﬁc scenes have strong idiosyncrasies (e.g., the size and
spatial relations of buildings, streets, cars, etc.). We then
train the segmentation network in such a way that the net-
work predictions in the target domain follow those inferred
properties.
In experiments, our method signiﬁcantly out-
performs the baselines as well as the only known existing
approach to the same problem.

1. Introduction

This paper is concerned with domain adaptation for se-
mantic image segmentation of urban scenes, i.e., assigning a
category label to every pixel of an image or video frame [6].
Our interest in this problem is partially due to the exciting
vision of autonomous driving, where understanding com-
plex inner-city trafﬁc scenes is an essential module and se-

For better reproducibility, the code is available at:

https://github.com/YangZhang4065/AdaptationSeg.

mantic segmentation is one of its key constituents [12, 19].
Machine learning methods for automatic semantic seg-
mentation require massive amounts of high-quality anno-
tated imagery in order to produce effective classiﬁers that
generalize well to novel scenes. However, annotating train-
ing imagery for semantic segmentation is a very cumber-
some task for humans. Cordts et al. report that the annota-
tion and quality control take more than 1.5 hours on a single
image of the Cityscapes dataset [12]. Besides, it is very dif-
ﬁcult and time-consuming to collect imagery that depicts
the large number of variabilities possible of urban scenes in
different countries, seasons, and lighting conditions, etc.

To overcome both shortcomings, simulated urban en-
vironments may be used to automatically generate large
amounts of annotated training imagery. This, however, in-
troduces a new problem, that of domain mismatch between
the source (simulated) domain and the target (real) domain.
Figure 2 illustrates some examples drawn from the synthetic
SYNTHIA [48] dataset and the real Cityscapes [12] dataset.
It is readily apparent that there are signiﬁcant visual differ-
ences between the two datasets. Domain adaptation tech-
niques [48, 53, 27] may be used by machine learning meth-
ods to bridge this gap between the two domains.

In computer vision, learning domain-invariant features
has been a prevalent and successful strategy to tackle the
discrepancy between two domains, mainly for classiﬁcation
and regression problems [41, 43]. The core idea is to infer
a new feature space such that the marginal distributions of
the source domain (S) and the target domain (T) are about
the same, i.e., PS(Z) ≈ PT (Z). Furthermore, the predic-
tion function P (Y |Z) from that space is assumed to be the
same across the domains so that one can leverage the rich
labeled data in the source domain to train classiﬁers that
generalize well to the target.
It is hard to verify the as-
sumption, but the work along this line is rich and has led
to impressive practical results regardless, such as the algo-
rithms using linear transformation [22, 23, 15, 55], kernel
methods [40, 20, 2, 31], and the recent deep learning meth-

1

ods that directly extract domain-invariant features from raw
input images [62, 36, 61, 18, 17].

In contrast to prior arts, the semantic segmentation we
study in this paper is a highly structured prediction problem,
for which domain adaptation is only sparsely explored in
the literature [66, 27]. Under structured prediction, can we
still achieve good domain adaptation results by following
the above principles? Our intuition and experimental stud-
ies (cf. Section 4) tell us no. Learning a decision function
for structured prediction is more involved than classiﬁcation
because it has to resolve the predictions in an exponentially
large label space. As a result, the assumption that the source
and target domains share the same prediction function be-
comes less likely to hold. Besides, some discriminative cues
in the data would be suppressed if one matches the feature
representations of the two domains without taking careful
account of the structured labels. Finally, data instances are
the proxy to measure the domain difference [25, 17, 18].
However, it is not immediately clear what comprises the in-
stances in semantic segmentation [27], especially given that
the top-performing segmentation methods are built upon
deep neural networks [35, 44, 39, 10]. Hoffman et al.
take each spatial unit in the fully convolutional network
(FCN) [35] as an instance [27]. We contend that such in-
stances are actually non-i.i.d. in either individual domain,
as their receptive ﬁelds overlap with each other.

How can we avoid the assumption that the source and
target domains share the same prediction function in a trans-
formed domain-invariant feature space? Our proposed so-
lution draws on two key observations. One is that the ur-
ban trafﬁc scene images have strong idiosyncrasies (e.g.,
the size and spatial relations of buildings, streets, cars, etc.).
Therefore, some tasks are “easy” and, more importantly,
suffer less because of the domain discrepancy. Second, the
structured output in semantic segmentation enables conve-
nient posterior regularization [16], as opposed to the popu-
lar (e.g., (cid:96)2) regularization over model parameters.

Accordingly, we propose a curriculum-style [4] domain
adaptation approach. Recall that, in domain adaptation,
only the source domain supplies many labeled data while
there are no or only scarce labels from the target. The cur-
riculum domain adaptation begins with the easy tasks, in
order to gain some high-level properties about the unknown
pixel-level labels for each target image. It then learns a se-
mantic segmentation network — the hard task, whose pre-
dictions over the target images are forced to follow those
necessary properties as much as possible.

To develop the easy tasks in the curriculum, we consider
label distributions over both holistic images and some land-
mark superpixels of the target domain. Take the former for
instance. The label distribution of an image indicates the
percentage of pixels that belong to each category, respec-
tively. We argue that such tasks are easier, despite the do-

main mismatch, than assigning pixel-wise labels. Indeed,
we may directly estimate the label distributions without in-
ferring the pixel-wise labels. Moreover, the relative sizes
of road, vehicle, pedestrian, etc. constrain the shape of the
distributions, effectively reducing the search space. Finally,
models to estimate the label distributions over superpixels
may beneﬁt from the urban scenes’ canonical layout that
transcends domains, e.g., buildings stand beside streets.

Why and when are the seemingly simple label distribu-
tions useful for the domain adaptation of semantic segmen-
tation? In our experiments, we ﬁnd that the segmentation
networks trained on the source domain perform poorly on
many target images, giving rise to disproportionate label
assignments (e.g., many more pixels are classiﬁed to side-
walks than to streets). To rectify this, the image-level label
distribution informs the segmentation network how to up-
date the predictions while the label distributions of the land-
mark superpixels tell the network where to update. Jointly,
they guide the adaptation of the networks to the target do-
main to, at least, generate proportional label predictions.
Note that additional “easy tasks” can be conveniently in-
corporated into our framework in the future.

Our main contribution is on the proposed curriculum-
style domain adaptation for the semantic segmentation of
urban scenes. We select into the curriculum the easy and
useful tasks of inferring label distributions for the target im-
ages and landmark superpixels, in order to gain some nec-
essary properties about the target domain. Built upon these,
we learn a pixel-wise discriminative segmentation network
from the labeled source data and, meanwhile, conduct a
“sanity check” to ensure the network behavior is consistent
with the previously learned knowledge about the target do-
main. Our approach effectively eludes the assumption about
the existence of a common prediction function for both do-
mains in a transformed feature space. It readily applies to
different segmentation networks, as it does not change the
network architecture or tax any intermediate layers.

2. Related work

We discuss some related work on domain adaptation and
semantic segmentation, with special focus on that transfer-
ring knowledge from virtual images to real photos.
Domain adaptation. Conventional machine learning al-
gorithms rely on the assumption that the training and test
data are drawn i.i.d. from the same underlying distribution.
However, it is often the case that there exists some discrep-
ancy from the training to the test stage. Domain adaptation
aims to rectify this mismatch and tune the models toward
better generalization at testing [60, 59, 21, 30, 25].

The existing work on domain adaptation mostly focuses
on classiﬁcation and regression problems [43, 41], e.g.,
learning from online commercial images to classify real-
world objects [50, 22], and, more recently, aims to improve

the adaptability of deep neural networks [36, 18, 17, 61, 7,
37]. Among them, the most relevant work to ours is that
exploring simulated data [56, 65, 48, 63, 27, 45, 53]. Sun
and Saenko train generic object detectors from the synthetic
images [56], while Vazquez et al. use the virtual images to
improve pedestrian detections in real environment [63]. The
other way around, i.e., how to improve the quality of the
simulated images using the real ones, is studied in [53, 45].

Semantic segmentation. Semantic segmentation is the
task of assigning an object label to each pixel of an im-
age. Traditional methods [52, 58, 68] rely on local im-
age features manually designed by domain experts. After
the pioneering work [10, 35] that introduced the convo-
lutional neural network (CNN) [32] to semantic segmen-
tation, most recent top-performing methods are built on
CNNs [64, 49, 3, 69, 39, 13].

An enormous amount of labor-intensive work is required
to annotate the many images that are needed to obtain accu-
rate segmentation models. The PASCAL VOC2012 Chal-
lenge [14] contains nearly 10,000 annotated images for
the segmentation competition, and the MS COCO Chal-
lenge [34] includes over 200,000 annotated images. Ac-
cording to [47], it took about 60 minutes to manually seg-
ment each image in [8] and about 90 minutes for each in
[12]. A plausible approach to reducing the human workload
is to utilize weakly supervised information such as image
labels and bounding boxes [44, 28, 42, 46].

We instead explore the use of almost effortlessly labeled
virtual images for training high-quality segmentation net-
works. In [47], annotating a synthetic image took only 7
seconds on average through a computer game. For the urban
scenes, we use the SYNTHIA [48] dataset which contains
images of a virtual city.

Domain adaptation for semantic segmentation. Upon
observing the obvious mismatch between virtual and real
data [51, 47, 48], we expect domain adaptation to enhance
the segmentation performance on real images by networks
trained on virtual ones. To the best of our knowledge, the
only attempt to algorithmically address this problem is [27].
While it regularizes the intermediate layers and constrains
the output of the network, we propose a different curriculum
domain adaptation strategy. We solve the easy task ﬁrst and
then use the learned knowledge about the target domain to
regularize the network predictions.

3. Approach

In this section, we present the details of the proposed
curriculum domain adaptation for semantic segmentation of
urban scene images. Unlike previous work [43, 27] that
aligns the domains via an intermediate feature space and
thereby implicitly assumes the existence of the same deci-
sion function for the two domains, it is our intuition that,

for structured prediction (i.e., semantic segmentation here),
the cross-domain generalization of machine learning mod-
els can be more efﬁciently improved if we avoid this as-
sumption and instead train them subject to necessary prop-
erties they should retain in the target domain.

Preliminaries.
In particular, the properties are about the
pixel-wise category labels Yt ∈ RW ×H×C of an arbitrary
image It ∈ RW ×H from the target domain, where W and H
are the width and height of the image, respectively, and C is
the number of categories. We use one-hot vector encoding
for the groundtruth labels, i.e., Yt(i, j, c) takes the value of
0 or 1 and the latter means that the c-th label is assigned by
a human annotator to the pixel at (i, j). Correspondingly,
the prediction (cid:98)Yt(i, j, c) ∈ [0, 1] by a segmentation network
is realized by a softmax function per pixel.

We express each target property in the form of a distribu-
tion pt ∈ ∆ over the C categories, where pt(c) represents
the occupancy proportion of the category c over the t-th tar-
get image or a superpixel of the image. Therefore, one can
immediately calculate the distribution pt given the human
annotations Yt to the image. For instance, the image level
label distribution is expressed by

pt(c) =

Yt(i, j, c),

∀c.

(1)

1
W H

W
(cid:88)

H
(cid:88)

i=1

j=1

Similarly, we can compute the target property/distribution
from the network predictions (cid:98)Yt and denote it by (cid:98)pt.
3.1. Domain adaptation using the target properties

Ideally, we would like to have a segmentation network to
imitate human annotators on the target domain. Therefore,
necessarily, the properties of their annotation results should
be the same too. We capture this notion by minimizing the
cross entropy C(pt, (cid:98)pt) = H(pt) + KL(pt, (cid:98)pt) at training,
where the ﬁrst term of the right-hand side is the entropy and
the second is the KL-divergence.

Given a mini-batch consisting of both source images (S)
and target images (T ), the overall objective function for
training the cross-domain generalizing segmentation net-
work is,

min

γ
|S|

(cid:88)

(cid:16)

(cid:17)

L

Ys, (cid:98)Ys

+

s∈S

1 − γ
|T |

(cid:88)

(cid:88)

t∈T

k

(cid:16)

C

t , (cid:98)pk
pk

t

(cid:17)

(2)

where L is the pixel-wise cross-entropy loss deﬁned over
the sufﬁciently labeled source domain images, enforcing the
network to have the pixel level discriminative capabilities,
and the second term is over the unlabeled target domain im-
ages, hinting the network what necessary properties its pre-
dictions should have in the target domain. We use γ ∈ [0, 1]
to balance the two strengths in training and superscript k to
index different types of label distributions.

Note that in the domain adaptation context, we actually
cannot directly compute the label distribution pk
t from the
groundtruth annotations of the target domain. Nonetheless,
estimating them using the labeled source data is easier than
assigning labels to every single pixel of the target images.
We present the details in the next section.

Remarks. Mathematically, the objective function has a
similar form as in model compression [9, 26]. We thus
borrow some concepts to gain more intuitive understanding
about our domain adaptation procedure. The “student” net-
work follows a curriculum to learn simple knowledge about
the target domain before it addresses the hard one of seman-
tically segmenting images. The models inferring the target
properties act like “teachers”, as they hint what label dis-
tributions the ﬁnal solution (image annotation) may have in
the target domain at the image and superpixel levels.

Another perspective is to understand the target prop-
erties as a posterior regularization [16] for the network.
The posterior regularization can conveniently encode a pri-
ori knowledge into the objective function. Some applica-
tions include weakly supervised segmentation [44, 49] and
detection [5], and rule-regularized training of neural net-
works [29]. In addition to the domain adaptation setting and
novel target properties, another key distinction of our work
is that we decouple the label distributions from the network
predictions and thus avoid the EM type of optimizations.
Our approach learns the segmentation network with almost
effortless changes to the popular deep learning tools.

3.2. Inferring the target properties

Thus far we have presented the “hard” task in the cur-
riculum domain adaptation. In this section, we describe the
“easy” ones, i.e., how to infer the target properties without
accessing the image annotations of the target domain. Our
contributions also include selecting the particular property
of label distributions to constitute the simple tasks.

3.2.1 Global label distributions of images

Due to the domain disparity, a baseline segmentation net-
work trained on the source domain (i.e., using the ﬁrst term
of eq. (2)) could be easily crippled given the target images.
In our experiments, we ﬁnd that our baseline network con-
stantly mistakes streets for sidewalks and/or cars (cf. Fig-
ure 2). Consequently, the predicted labels for the pixels are
highly disproportionate.

To rectify this, we employ the label distribution pt over
the global image as our ﬁrst property (cf. eq. (1)). Without
access to the target labels, we have to train machine learn-
ing models from the labeled source images to estimate the
label distribution pt for the target image. Nonetheless, we
argue that this is less challenging than generating the per-
pixel predictions despite that both tasks are inﬂuenced by
the domain mismatch.

In our experiments, we examine different approaches to
this task. We extract image features using the Inception-
Resnet-v2 [57] as the input to the following models.

Logistic regression. Although multinomial logistic regres-
sion (LR) is mainly used for classiﬁcation, its output is
actually a valid distribution over the categories. For
our purpose, we thus train it by replacing the one-hot
vectors in the cross-entropy loss with the groundtruth
label distribution ps, which is calculated using eq. (1)
and the available human labels of the source domain.
Given a target image, we directly take the LR’s output
as the predicted label distribution.

Mean of nearest neighbors. We also test a nonparamet-
ric method by simply retrieving the nearest neighbors
(NNs) for a target image and then transferring the
mean of the NNs’ label distributions to the target im-
age. We use the (cid:96)2 distance for the NN retrieval.

Finally, we include two dumb predictions as the control
experiment. One is, for any target image, to output the mean
of all the label distributions in the source domain (source
mean), and the other is to output a uniform distribution.

3.2.2 Local label distributions of landmark superpixels

The image level label distribution globally penalizes poten-
tially disproportional segmentation output on the target do-
main, and yet is inadequate in providing spatial constraints.
In this section, we consider the use of label distributions
over some superpixels as the anchors to drive the network
towards spatially desired target properties.

Note that it is not necessary, and is even harmful, to
use all of the superpixels in a target image to regularize
the segmentation network, because that would be too strong
a force and may overrule the pixel-wise discriminativeness
revealed by the labeled source images, especially when the
label distributions are not inferred accurately enough.

In order to have the dual effect of both estimating the la-
bel distributions of superpixels and ﬁltering the superpixels,
we simplify the problem and employ a linear SVM in this
work. In particular, we segment each image into 100 super-
pixels using linear spectral clustering [33]. For the super-
pixels of the source domain, we are able to assign a single
dominant label to each of them, and then use the labels and
the corresponding features extracted from the superpixels to
train a multi-class SVM. Given a test superpixel of a target
image, the multi-class SVM returns a class label as well as a
decision value, which is interpreted as the conﬁdence score
about classifying this superpixel. We keep the top 60% su-
perpixels, called landmark superpixels, in the target domain
and calculate their label distributions as the second type of
In particular, the class label of a landmark
“easy” tasks.
superpixel is encoded into a one-hot vector, which serves
as a valid distribution about the categories in the landmark

ers with VGG-19 [54], and then train it using the AdaDelta
optimizer [67] with default parameters. Each mini-batch is
comprised of ﬁve source images and ﬁve randomly chosen
target images. When we train the baseline network with no
adaptation, however, we try to use the largest possible mini-
batch that includes 15 source images. The network is im-
plemented in Keras [11] and Theano [1]. We train different
versions of the network on a single Tesla K40 GPU.

Unlike the existing deep domain adaptation methods [17,
18, 36, 27] which introduce regularization to the intermedi-
ate layers, we only revise the loss function over the output.
Hence, our curriculum domain adaptation can be readily ap-
plied to other segmentation networks (e.g., [39, 10]).

4.2. Datasets and evaluation

We use the publicly available Cityscpaes [12] and SYN-

THIA [48] datasets in our experiments.

Cityscapes is a real-world, vehicle-egocentric image
dataset collected in 50 cities in Germany and nearby coun-
tries. It provides four disjoint subsets: 2,993 training im-
ages, 503 validation image, 1,531 test images, and 20,021
auxiliary images. All the training, validation, and test im-
ages are accurately annotated with per pixel category labels,
while the auxiliary set is coarsely labeled. There are 34 dis-
tinct categories in the dataset.

SYNTHIA [48] is a large dataset of synthetic images
and provides a particular subset, called SYNTHIA-RAND-
CITYSCAPES, to pair with Cityscapes. This subset con-
tains 9,400 images that are automatically annotated with
12 object categories, one void class, and some unnamed
classes. Note that the virtual city used to generate the syn-
thetic images does not correspond to any of the real cities
covered by Cityscapes. We abbreviate SYNTHIA-RAND-
CITYSCAPES to SYNTHIA hereon.

Domain idiosyncrasies. Although both datasets depict
urban scenes, and SYNTHIA is created to be as photo-
realistic as possible, they are mismatched domains in sev-
eral ways. The most noticeable difference is probably the
coarse-grained textures in SYNTHIA; very similar texture
patterns repeat in a regular manner across different im-
ages.
In contrast, the Cityscapes images are captured by
high-quality dash-cameras. Another major distinction is
the variability in view angles. Since Cityscapes images are
recorded by the dash cameras mounted on a moving car,
they are viewed from almost a constant angle that is about
parallel to the ground. More diverse view angles are em-
ployed by SYNTHIA — it seems like some cameras are
placed on the buildings that are signiﬁcantly higher than a
bus. Finally, some of the SYNTHIA images are severely
shadowed by extreme lighting conditions, while we ﬁnd no
such conditions in the Cityscapes images. These combined
factors, among others, make domain adaptation from SYN-
THIA to Cityscapes a very challenging problem.

Figure 1: The overall framework of curriculum domain
adaptation for semantic segmentation of urban scenes.

superpixel. Albeit simple, we ﬁnd this method works very
well in our experiments.

We encode both visual and contextual information to
represent a superpixel. First, we use the FCN-8s [35] pre-
trained on the PASCAL CONTEXT [38] dataset, which has
59 distinct classes, to obtain 59 detection scores for each
pixel. We then average them within each superpixel. Fi-
nally, we represent a superpixel by the concatenation of the
59D vectors of itself, its left and right superpixels, as well
as the two respectively above and below it.

3.3. Curriculum domain adaptation: recapitulation

We recap the proposed curriculum domain adaptation us-
ing Figure 1 before presenting the experiments in the next
section. Our main idea is to execute the domain adaptation
step by step, starting from the easy tasks that are less sensi-
tive to the domain discrepancy than the semantic segmenta-
tion. We choose the labels distributions over global images
and local landmark superpixels in this work; more tasks will
be explored in the future. The solutions to them provide
useful gradients originating from the target domain (cf. the
arrows with brown color in Figure 1), while the source do-
main feeds the network with well-labeled images and seg-
mentation masks (cf. the dark blue arrows in Figure 1).

4. Experiments

In this section, we describe the experimental setup and
compare the results of our approach, its variations, and
some existing baseline methods.

4.1. Segmentation network and optimization

In our experiments, we use FCN-8s [35] as our semantic
segmentation network. We initialize its convolutional lay-

t
s
e
r
a
e
n
s
t
i
e
v
e
i
r
t
e
r
e
w

,

n
m
u
l
o
c
t
s
r
ﬁ
e
h
t
n
i
e
g
a
m

i

t
e
g
r
a
t
h
c
a
e
r
o
F

.
)
n
i
a
m
o
d
t
e
g
r
a
t
(

]
8
4
[

t
e
s
a
t
a
d
s
e
p
a
c
s
y
t
i

C
e
h
t
n
o
s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
c
i
t
n
a
m
e
s
e
v
i
t
a
t
i
l
a
u
Q

:
2
e
r
u
g
i
F

,

n
o
i
t
a
t
o
n
n
a

c
i
t
n
a
m
e
s

e
s
i
w

-
l
e
x
i
p
h
t
u
r
t
d
n
u
o
r
g
e
h
t
o
t

e
u
d
s
n
o
i
t
u
b
i
r
t
s
i
d
l
e
b
a
l

e
h
t

s
t
o
l
p
n
m
u
l
o
c
d
r
i
h
t

e
h
T

.
)
n
i
a
m
o
d
e
c
r
u
o
s
(

t
e
s
a
t
a
d
]
2
1
[

I

A
H
T
N
Y
S
e
h
t

m
o
r
f

r
o
b
h
g
i
e
n

s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
e
h
t
e
r
a
s
n
m
u
l
o
c
e
e
r
h
t

t
s
a
l
e
h
T

.

n
o
i
s
s
e
r
g
e
r
c
i
t
s
i
g
o
l
y
b
n
o
i
t
u
b
i
r
t
s
i
d
d
e
r
r
e
f
n
i
e
h
t
d
n
a

,
n
o
i
t
a
t
p
a
d
a
o
n
h
t
i

w
k
r
o
w
t
e
n
e
n
i
l
e
s
a
b
e
h
t
y
b
s
n
o
i
t
c
i
d
e
r
p
e
h
t

.
s
r
o
t
a
t
o
n
n
a

n
a
m
u
h

d
n
a

,
h
c
a
o
r
p
p
a

n
o
i
t
a
t
p
a
d
a
n
i
a
m
o
d
r
u
o

,

k
r
o
w
t
e
n

e
n
i
l
e
s
a
b
e
h
t
y
b

Table 1: The χ2 distances between the groundtruth label
distributions and those predicted by different methods.

Method
χ2 Distance

Uniform NoAdapt

1.13

0.65

Src mean NN
0.33

0.44

LR
0.27

Figure 2 shows some example images from both
datasets. We pair each Cityscpaes image with its nearest
neighbor in SYNTHIA, retrieved by the Inception-Resnet-
v2 [57] features. However, the cross-dataset nearest neigh-
bors are visually very different from the query images, ver-
ifying the dramatic disparity between the two domains.

Experiment setup. Since our ultimate goal is to solve the
semantic segmentation problem for real images of urban
scenes, we take Cityscapes as the target domain and SYN-
THIA as the source domain. The Cityscapes validation set
is used as our test set. We split 500 images out of the Citysc-
paes training set for the validation purpose (e.g., to monitor
the convergence of the networks). In training, we randomly
sample mini-batches from both the images (and their labels)
of SYNTHIA and the remaining images of Cityscapes yet
with no labels.

As in [27], we manually ﬁnd 16 common classes be-
tween the two datasets: sky, building, road, sidewalk, fence,
vegetation, pole, car, trafﬁc sign, person, bicycle, motorcy-
cle, trafﬁc light, bus, wall, and rider. The last four are un-
named and yet labeled in SYNTHIA.

TP

Evaluation. We use the evaluation code released along
with the Cityscapes dataset to evaluate our results. It calcu-
lates the PASCAL VOC intersection-over-union, i.e., IoU =
TP+FP+FN [14], where TP, FP, and FN are the numbers of
true positive, false positive, and false negative pixels, re-
spectively, determined over the whole test set. Since we
have to resize the images before feeding them to the seg-
mentation network, we resize the output segmentation mask
back to the original image size before running the evaluation
against the groundtruth annotations.

4.3. Results of inferring global label distributions

Before presenting the ﬁnal semantic segmentation re-
sults, we ﬁrst compare the different approaches to inferring
the global label distributions of the target images (cf. Sec-
tion 3.2.1). We report the results on the held-out validation
images of Cityscapes in this experiment, and then select the
best method for the remaining experiments.

In Table 1, we compare the estimated label distributions
with the groundtruth ones using the χ2 distance, the smaller
the better. We see that the baseline network (NoAdapt),
which is directly learned from the source domain without
any adaptation methods, outperforms the dumb uniform dis-
tribution (Uniform) and yet no other methods. This con-
ﬁrms that the baseline network gives rise to severely dis-
proportionate predictions over the target domain.

Another dumb prediction (Src mean),

i.e., using the
mean of all label distributions over the source domain as
the prediction for the target images, however, performs rea-
sonably well. To some extent, this indicates the value of
the simulated source domain for the semantic segmentation
task of urban scenes.

Finally, the nearest neighbors (NN) based method and
the multinomial logistic regression (LR) (cf. Section 3.2.1)
perform the best. We use the output of LR on the target
domain in our remaining experiments.

4.4. Comparison results

We report the ﬁnal semantic segmentation results on the
test data of the target domain in this section. We compare
our approach to the following competing methods.

No adaptation (NoAdapt). We directly train the FCN-8s
model on SYNTHIA without applying any domain
adaptation methods. This is the most basic baseline
for our experiments.

Superpixel classiﬁcation (SP). Recall

have
trained a multi-class SVM using the dominant labels
of the superpixels in the source domain. We then use
them to classify the target superpixels.

that we

Landmark superpixels (SP Lndmk). Since we keep the
top 60% most conﬁdently classiﬁed superpixels as the
landmarks to regularize our segmentation network dur-
ing training (cf. Section 3.2.2), it is also interesting to
examine the classiﬁcation results of these superpixels.
We run the evaluation after assigning the void class la-
bel to the other pixels of the images.

In addition to the IoU, we have also evaluated the clas-
siﬁcation results of the superpixels by accuracy. We
ﬁnd that the classiﬁcation accuracy is 71% for all the
superpixels of the target domain, while for the selected
60% landmark superpixels, the classiﬁcation accuracy
is more than 88%.

FCNs in the wild (FCN Wld). Hoffman et al.’s work [27]
is the only existing one addressing the same problem
as ours, to the best of our knowledge. They introduce
a pixel-level adversarial loss to the intermediate lay-
ers of the network and impose constraints to the net-
work output. Their experimental setup is about identi-
cal to ours except that they do not specify which part
of Cityscapes is considered as the test set. Nonethe-
less, we include their results for comparison to put our
work in a better perspective.

The comparison results are shown in Table 2. Immedi-
ately, we note that all our domain adaptation results are sig-
niﬁcantly better than those without adaptation (NoAdapt).

Table 2: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from SYNTHIA [48].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
SP Lndmk
SP
Ours (SP)
Ours (I+SP)

17.4
20.2
22.0
25.5
23.0
25.6
28.1
29.0

e
k
i
b

0.0
0.6
18.0
16.7
0.0
0.0
10.2
13.1

e
c
n
e
f

0.0
0.0
0.5
0.8
0.0
0.0
0.4
0.5

l
l
a
w

1.2
4.4
0.8
2.3
0.0
0.0
0.1
0.1

n
g
i
s
-
t

7.2
11.7
5.3
6.4
0.0
0.0
2.7
3.0

e
l
o
p

15.1
20.3
21.5
21.7
0.0
0.0
8.1
10.7

e
k
i
b
m

0.1
0.2
0.5
1.0
0.0
0.0
0.8
0.7

t
h
g
i
l
-
t

0.0
0.1
8.0
9.9
0.0
0.0
3.7
3.7

y
k
s

66.8
68.7
75.6
59.6
83.1
80.5
68.7
70.6

s
u
b

3.9
3.2
4.5
12.1
26.1
22.1
21.4
20.7

r
e
d
i
r

1.5
3.8
9.0
7.9
0.0
0.0
7.9
8.2

g
e
v

30.3
42.3
72.4
70.2
73.1
71.9
75.5
76.1

g
d
l
b

29.7
30.8
59.6
67.5
67.7
69.3
74.6
74.9

r
a
c

47.3
54.0
23.6
32.0
41.1
45.9
42.9
43.2

n
o
s
r
e
p

51.1
51.2
35.1
29.3
5.8
24.6
47.3
47.1

k
l
a
w
e
d
i
s

17.7
19.6
11.2
18.1
10.6
19.8
23.9
26.1

d
a
o
r

6.4
11.5
5.6
51.9
60.8
75.0
61.8
65.2

We denote by (Ours (I)) the network trained using the
global label distributions over the target images (and the la-
beled source images). Although one may wonder that the
image-wise label distributions are too high-level to super-
vise the pixel-wise discriminative network, the gain is ac-
tually signiﬁcant. They are able to correct some obvious
errors of the baseline network, such as the disproportional
predictions about road and sidewalk (cf. the results of Ours
(I) vs. NoAdapt in the last two columns).

It is interesting to see that both superpixel classiﬁcation-
based segmentation results (SP and SP Lndmk) are also bet-
ter than the baseline network (NoAdapt). The label distribu-
tions obtained over the landmark superpixels boost the seg-
mentation network (Ours (SP)) to the mean IoU of 28.1%,
which is better than those by either superpixel classiﬁcation
or the baseline network individually. We have also tried to
use the label distributions over all the superpixels to train
the network, and observe little improvement over NoAdapt.
This is probably because it is too forceful to regularize the
network output at every single superpixel especially when
the estimated label distributions are not accurate enough.

The superpixel-based methods, including Ours (SP),
miss small objects such as fences, trafﬁc lights (t-light), and
trafﬁc signs (t-sign), and instead are very accurate for cat-
egories like the sky, road, and building, that typically oc-
cupy larger image regions. On the contrary, the label dis-
tributions on the images give rise to a network (Ours (I))
that performs better on the small objects than Ours (SP).
In other words, they mutually complement to some extent.
Re-training the network by using the label distributions over
both global images and local landmark superpixels (Ours
(I+SP)), we achieve the best semantic segmentation results
on the target domain. In the future work, it is worth explor-
ing other target properties, perhaps still in the form of label
distributions, that handle the small objects well, in order to
further complement the superpixel-level label distributions.

Comparison with FCNs in the wild [27]. Although we
use the same segmentation network (FCN-8s) as [27], our
baseline results (NoAdapt) are better than those reported

in [27]. This may be due to subtle differences in terms of
implementation or experimental setup. Although our own
baseline results are superior, we gain larger improvements
(7%) over them than the performance gain of [27] (3%) over
the seemingly underperforming baseline network there.

Comparison with learning domain-invariant features.
At our ﬁrst attempt to solve the domain adaptation problem
for the semantic segmentation of urban scenes, we tried to
learn domain invariant features following the deep domain
adaptation methods [36] for classiﬁcation. In particular, we
impose the maximum mean discrepancy [24] over the layer
before the output. We name such network layer the feature
layer. Since there are virtually three output layers in FCN-
8s, we experiment with all the three feature layers corre-
spondingly. We have also tested the domain adaptation by
reversing the gradients of a domain classiﬁer [17]. How-
ever, none of these efforts lead to any noticeable gain over
the baseline network so the results are omitted.

5. Conclusion

In this paper, we address domain adaptation for the se-
mantic segmentation of urban scenes. We propose a cur-
riculum style approach to this problem. We learn to esti-
mate the global label distributions of the images and local
label distributions of the landmark superpixels of the target
domain. Such tasks are easier to solve than the pixel-wise
label assignment. Therefore, we use their results to effec-
tively regularize our training of the semantic segmentation
network such that its predictions meet the inferred label dis-
tributions over the target domain. Our method outperforms
several competing methods that do domain adaptation from
simulated images to real photos of urban trafﬁc scenes. In
future work, we will explore more target properties that can
be conveniently inferred to enrich our curriculum domain
adaptation framework.

Acknowledgements. This work is supported by the NSF
award IIS #1566511, a gift from Adobe Systems Inc., and
a GPU from NVIDIA. We thank the anonymous reviewers
and area chairs for their insightful comments.

References

[1] R. Al-Rfou, G. Alain, A. Almahairi, C. Angermueller,
D. Bahdanau, N. Ballas, F. Bastien, J. Bayer, A. Belikov,
A. Belopolsky, and others. Theano: A Python framework
for fast computation of mathematical expressions. arXiv
preprint arXiv:1605.02688, 2016. 5

[2] R. Aljundi, R. Emonet, D. Muselet, and M. Sebban.
Landmarks-based kernelized subspace alignment for unsu-
pervised domain adaptation. In IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), pages 56–63,
2015. 1

[3] V. Badrinarayanan, A. Kendall, and R. Cipolla. Segnet: A
deep convolutional encoder-decoder architecture for image
segmentation. arXiv preprint arXiv:1511.00561, 2015. 3
[4] Y. Bengio, J. Louradour, R. Collobert, and J. Weston. Cur-
riculum learning. In Proceedings of the 26th annual interna-
tional conference on machine learning, pages 41–48. ACM,
2009. 2

[5] H. Bilen, M. Pedersoli, and T. Tuytelaars. Weakly supervised
In BMVA

object detection with posterior regularization.
British Machine Vision Conference (BMVC), 2014. 4

[6] E. Borenstein and S. Ullman. Class-speciﬁc, top-down seg-
In European conference on computer vision,

mentation.
pages 109–122. Springer, 2002. 1

[7] K. Bousmalis, N. Silberman, D. Dohan, D. Erhan, and
D. Krishnan. Unsupervised pixel-level domain adapta-
tion with generative adversarial networks. arXiv preprint
arXiv:1612.05424, 2016. 3

[8] G. J. Brostow, J. Fauqueur, and R. Cipolla. Semantic object
classes in video: A high-deﬁnition ground truth database.
Pattern Recognition Letters, 30(2):88–97, 2009. 3

[9] C. Bucilu, R. Caruana, and A. Niculescu-Mizil. Model com-
pression. In Proceedings of the 12th ACM SIGKDD interna-
tional conference on Knowledge discovery and data mining,
pages 535–541. ACM, 2006. 4

[10] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
arXiv preprint
volutional nets and fully connected crfs.
arXiv:1412.7062, 2014. 2, 3, 5

[11] F. Chollet. keras. https://github.com/fchollet/

keras, 2015. 5

[12] M. Cordts, M. Omran, S. Ramos, T. Rehfeld, M. Enzweiler,
R. Benenson, U. Franke, S. Roth, and B. Schiele. The
cityscapes dataset for semantic urban scene understanding.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 3213–3223, 2016. 1, 3, 5, 6,
8, 12

[13] J. Dai, K. He, and J. Sun. Instance-aware semantic segmen-
tation via multi-task network cascades. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3150–3158, 2016. 3

[14] M. Everingham, S. A. Eslami, L. Van Gool, C. K. Williams,
J. Winn, and A. Zisserman. The pascal visual object classes
International Journal of Com-
challenge: A retrospective.
puter Vision, 111(1):98–136, 2015. 3, 7

[15] B. Fernando, A. Habrard, M. Sebban, and T. Tuytelaars. Un-
supervised visual domain adaptation using subspace align-

ment. In IEEE International Conference on Computer Vision
(ICCV), pages 2960–2967, 2013. 1

[16] K. Ganchev, J. Gillenwater, B. Taskar, et al. Posterior reg-
ularization for structured latent variable models. Journal of
Machine Learning Research, 11(Jul):2001–2049, 2010. 2, 4
[17] Y. Ganin and V. Lempitsky. Unsupervised domain adapta-
In International Conference on
tion by backpropagation.
Machine Learning (ICML), pages 1180–1189, 2015. 2, 3,
5, 8

[18] Y. Ganin, E. Ustinova, H. Ajakan, P. Germain, H. Larochelle,
F. Laviolette, M. Marchand,
and V. S. Lempitsky.
Domain-adversarial training of neural networks. CoRR,
arXiv:1505.07818, 2015. 2, 3, 5

[19] A. Geiger, P. Lenz, C. Stiller, and R. Urtasun. Vision meets
robotics: The kitti dataset. The International Journal of
Robotics Research, 32(11):1231–1237, 2013. 1

[20] B. Gong, K. Grauman, and F. Sha. Connecting the dots with
landmarks: Discriminatively learning domain invariant fea-
tures for unsupervised domain adaptation. In International
Conference on Machine Learning (ICML), pages 222–230,
2013. 1

[21] B. Gong, F. Sha, and K. Grauman. Overcoming dataset
bias: An unsupervised domain adaptation approach. In NIPS
Workshop on Large Scale Visual Recognition and Retrieval
(LSVRR), 2012. 2

[22] B. Gong, Y. Shi, F. Sha, and K. Grauman. Geodesic ﬂow
kernel for unsupervised domain adaptation. In IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2066–2073, 2012. 1, 2

[23] R. Gopalan, R. Li, and R. Chellappa. Domain adaptation
for object recognition: An unsupervised approach. In IEEE
International Conference on Computer Vision (ICCV), pages
999–1006, 2011. 1

[24] A. Gretton, K. M. Borgwardt, M. J. Rasch, B. Sch¨olkopf, and
A. Smola. A kernel two-sample test. Journal of Machine
Learning Research, 13(Mar):723–773, 2012. 8

[25] A. Gretton, A. Smola, J. Huang, M. Schmittfull, K. Borg-
wardt, and B. Sch¨olkopf. Covariate shift by kernel mean
In J. Qui ˜A±onero-Candela, M. Sugiyama,
matching.
A. Schwaighofer, and N. D. Lawrence, editors, Dataset Shift
in Machine Learning. The MIT Press, 2008. 2

[26] G. Hinton, O. Vinyals, and J. Dean. Distilling the knowledge
in a neural network. arXiv preprint arXiv:1503.02531, 2015.
4

[27] J. Hoffman, D. Wang, F. Yu, and T. Darrell. FCNs in the
Wild: Pixel-level Adversarial and Constraint-based Adapta-
tion. arXiv preprint arXiv:1612.02649, 2016. 1, 2, 3, 5, 7, 8,
12

[28] S. Hong, J. Oh, H. Lee, and B. Han. Learning transferrable
knowledge for semantic segmentation with deep convolu-
In Proceedings of the IEEE Con-
tional neural network.
ference on Computer Vision and Pattern Recognition, pages
3204–3212, 2016. 3

[29] Z. Hu, X. Ma, Z. Liu, E. Hovy, and E. Xing. Harness-
ing deep neural networks with logic rules. arXiv preprint
arXiv:1603.06318, 2016. 4

[30] A. Khosla, T. Zhou, T. Malisiewicz, A. A. Efros, and A. Tor-
ralba. Undoing the damage of dataset bias. In European Con-
ference on Computer Vision (ECCV), pages 158–171, 2012.
2

[31] B. Kulis, K. Saenko, and T. Darrell. What you saw is not
what you get: Domain adaptation using asymmetric kernel
In IEEE Conference on Computer Vision and
transforms.
Pattern Recognition (CVPR), 2011. 1

[32] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-
based learning applied to document recognition. Proceed-
ings of the IEEE, 86(11):2278–2324, 1998. 3

[33] Z. Li and J. Chen. Superpixel segmentation using linear
spectral clustering. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1356–
1363, 2015. 4

[34] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Dollr, and C. L. Zitnick. Microsoft coco: Common
objects in context. In European Conference on Computer Vi-
sion, pages 740–755. Springer, 2014. 3

[35] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3431–3440, 2015. 2, 3, 5

[36] M. Long, Y. Cao, J. Wang, and M. I. Jordan. Learning trans-
ferable features with deep adaptation networks. In Interna-
tional Conference on Machine Learning (ICML), 2015. 2, 3,
5, 8

[37] A. M. L´opez, J. Xu, J. L. Gomez, D. V´azquez, and
G. Ros. From virtual to real world visual perception us-
ing domain adaptation–the dpm as example. arXiv preprint
arXiv:1612.09134, 2016. 3

[38] R. Mottaghi, X. Chen, X. Liu, N.-G. Cho, S.-W. Lee, S. Fi-
dler, R. Urtasun, and A. Yuille. The role of context for object
detection and semantic segmentation in the wild. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 891–898, 2014. 5

[39] H. Noh, S. Hong, and B. Han. Learning deconvolution
network for semantic segmentation. In IEEE International
Conference on Computer Vision (ICCV), pages 1520–1528,
2015. 2, 3, 5

[40] S. J. Pan, J. T. Tsang, Ivor W.and Kwok, and Q. Yang. Do-
main adaptation via transfer component analysis. Transac-
tions on Neural Networks, 22(2):199 – 210, 2011. 1

[41] S. J. Pan and Q. Yang. A survey on transfer learning. Trans-
actions on Knowledge and Data Engineering, 22(10):1345–
1359, 2010. 1, 2

[42] G. Papandreou, L.-C. Chen, K. P. Murphy, and A. L. Yuille.
Weakly-and semi-supervised learning of a deep convolu-
In Pro-
tional network for semantic image segmentation.
ceedings of the IEEE International Conference on Computer
Vision, pages 1742–1750, 2015. 3

[43] V. M. Patel, R. Gopalan, R. Li, and R. Chellappa. Visual do-
main adaptation: A survey of recent advances. Signal Pro-
cessing Magazine, 32(3):53–69, 2015. 1, 2, 3

[44] D. Pathak, P. Krahenbuhl, and T. Darrell. Constrained con-
volutional neural networks for weakly supervised segmenta-
tion. In Proceedings of the IEEE International Conference
on Computer Vision, pages 1796–1804, 2015. 2, 3, 4

[45] X. Peng and K. Saenko.

Synthetic to real adaptation
with deep generative correlation alignment networks. arXiv
preprint arXiv:1701.05524, 2017. 3

[46] P. O. Pinheiro and R. Collobert. From image-level to pixel-
level labeling with convolutional networks. In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1713–1721, 2015. 3

[47] S. R. Richter, V. Vineet, S. Roth, and V. Koltun. Playing
for data: Ground truth from computer games. In European
Conference on Computer Vision, pages 102–118. Springer,
2016. 3, 11, 12

[48] G. Ros, L. Sellart, J. Materzynska, D. Vazquez, and A. M.
Lopez. The synthia dataset: A large collection of synthetic
images for semantic segmentation of urban scenes. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 3234–3243, 2016. 1, 3, 5, 6, 8

[49] G. Ros, S. Stent, P. F. Alcantarilla, and T. Watanabe. Training
constrained deconvolutional networks for road scene seman-
tic segmentation. arXiv preprint arXiv:1604.01545, 2016. 3,
4

[50] K. Saenko, B. Kulis, M. Fritz, and T. Darrell. Adapting vi-
sual category models to new domains. In European Confer-
ence on Computer Vision (ECCV), pages 213–226, 2010. 2
[51] A. Shafaei, J. J. Little, and M. Schmidt. Play and learn: using
video Games to train computer vision models. arXiv preprint
arXiv:1608.01745, 2016. 3

[52] J. Shotton, M. Johnson, and R. Cipolla. Semantic texton
forests for image categorization and segmentation. In 2008
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 1–8, June 2008. 3

[53] A. Shrivastava, T. Pﬁster, O. Tuzel, J. Susskind, W. Wang,
Learning from simulated and unsuper-
and R. Webb.
vised images through adversarial training. arXiv preprint
arXiv:1612.07828, 2016. 1, 3
[54] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
arXiv:1409.1556, 2014. 5

[55] B. Sun, J. Feng, and K. Saenko. Return of frustratingly easy
domain adaptation. In AAAI Conference on Artiﬁcial Intelli-
gence (AAAI), 2016. 1

[56] B. Sun and K. Saenko. From virtual to reality: Fast adap-
tation of virtual object detectors to real domains. In BMVA
British Machine Vision Conference (BMVC), 2014. 3
[57] C. Szegedy, S. Ioffe, V. Vanhoucke, and A. Alemi. Inception-
v4, inception-resnet and the impact of residual connections
on learning. arXiv preprint arXiv:1602.07261, 2016. 4, 7

[58] J. Tighe and S. Lazebnik. Superparsing: scalable nonpara-
metric image parsing with superpixels. In European confer-
ence on computer vision, pages 352–365. Springer, 2010. 3
[59] T. Tommasi, N. Patricia, B. Caputo, and T. Tuytelaars. A
deeper look at dataset bias. CoRR, arXiv:1505.01257, 2015.
2

[60] A. Torralba and A. A. Efros. Unbiased look at dataset bias.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), 2011. 2

[61] E. Tzeng, J. Hoffman, T. Darrell, and K. Saenko. Simul-
In IEEE

taneous deep transfer across domains and tasks.

International Conference on Computer Vision (ICCV), pages
4068–4076, 2015. 2, 3

[62] E. Tzeng, J. Hoffman, N. Zhang, K. Saenko, and T. Darrell.
Deep domain confusion: Maximizing for domain invariance.
CoRR, arXiv:1412.3474, 2014. 2

[63] D. Vazquez, A. M. L´opez, J. Mar´ın, D. Ponsa, and
D. Ger´onimo. Virtual and real world adaptation for pedes-
trian detection. Transactions of Pattern Recognition and Ma-
chine Analyses (PAMI), 36(4):797 – 809, 2014. 3

[64] Z. Wu, C. Shen, and A. v. d. Hengel. Wider or Deeper:
Revisiting the ResNet Model for Visual Recognition. arXiv
preprint arXiv:1611.10080, 2016. 3

[65] J. Xu, S. Ramos, D. Vazquez, and A. L´opez. Hierarchi-
cal adaptive structural svm for domain adaptation. CoRR,
arXiv:1408.5400, 2014. 3

[66] M. Yamada, L. Sigal, and Y. Chang. Domain adaptation for
structured regression. International journal of computer vi-
sion, 109(1-2):126–145, 2014. 2

[67] M. D. Zeiler. ADADELTA: an adaptive learning rate method.

arXiv preprint arXiv:1212.5701, 2012. 5

[68] C. Zhang, L. Wang, and R. Yang. Semantic segmentation
of urban scenes using dense depth maps. In European Con-
ference on Computer Vision, pages 708–721. Springer, 2010.
3

[69] H. Zhao, J. Shi, X. Qi, X. Wang, and J. Jia. Pyramid Scene
Parsing Network. arXiv preprint arXiv:1612.01105, 2016. 3

GTA→Cityscapes

The main text above has been accepted to IEEE Interna-
tional Conference on Computer Vision (ICCV) 2017. After
the paper submission, we have been continuously working
on the project and have got more results. We include them
below to complement the experiments in the main text.

The new experiment is basically the same as the one in
the main text except that we replace SYNTHIA with the
GTA dataset [47]. GTA is a synthetic, vehicle-egocentric
image dataset collected from the open world in the realisti-
cally rendered computer game Grand Theft Auto V (GTA,
or GTA5). It contains 24,996 images, whose semantic seg-
mentation annotations are fully compatible with the classes
used in Cityscapes. Hence we use all the 19 ofﬁcial training
classes in our experiment. The results are shown in Table 3.
As in the main text, the same observations about our ap-
proach apply here. Additionally, we note that the results
are overall better than those adapting from SYNTHIA to
Cityscapes. This is not surprising, because the GTA images
are more photo-realistic than SYNTHIA’s.

Table 3: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from GTA [47].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
Ours (SP)
SP Lndmk
SP
Ours (I+SP)

21.1
27.1
22.3
23.1
27.8
21.4
26.8
28.9

e
k
i
b

0.0
0.0
13.8
9.5
15.6
0.0
0.3
14.6

e
c
n
e
f

3.1
5.4
8.7
9.4
11.7
0.0
4.1
11.9

l
l
a
w

7.4
14.9
7.3
10.2
5.7
0.0
7.6
6.0

n
g
i
s
-
t

1.0
2.7
16.8
14.0
12.0
0.0
0.0
11.1

e
l
o
p

16.0
10.9
21.0
20.2
9.2
0.0
0.2
8.4

e
k
i
b
m

0.0
3.5
4.3
3.8
12.9
0.0
0.9
16.8

t
h
g
i
l
-
t

10.4
14.2
14.9
13.6
15.5
0.0
0.0
16.3

y
k
s

58.9
64.6
64.4
63.8
64.9
82.9
81.6
66.5

s
u
b

3.7
7.3
5.0
3.4
15.5
10.0
25.3
18.9

r
e
d
i
r

1.0
4.2
17.5
10.6
9.1
0.0
3.5
9.3

g
e
v

76.5
79.2
45.9
56.9
74.6
74.5
73.0
75.7

n
i
a
r
r
e
t

13
21.3
2.4
2.8
11.1
22.5
32.1
13.3

n
i
a
r
t

0.0
0.0
6.9
10.9
0.0
0.0
0.0
0.0

g
d
l
b

47.7
62.1
64.1
69.7
70.5
69.9
71.0
71.7

r
a
c

67.1
70.4
55.3
60.5
56.1
52.7
61.9
55.2

n
o
s
r
e
p

36
44.1
41.6
31.8
34.8
13.1
26.2
38.0

k
c
u
r
t

9.5
8.0
8.4
10.9
15.9
11.2
30.4
18.8

k
l
a
w
e
d
i
s

18.9
32.4
6.8
10.8
21.8
8.0
19.2
22.0

d
a
o
r

31.9
70.4
18.1
26.4
72.1
61.8
71.8
74.9

8
1
0
2
 
v
o
N
 
4
1
 
 
]

V
C
.
s
c
[
 
 
5
v
5
6
4
9
0
.
7
0
7
1
:
v
i
X
r
a

Curriculum Domain Adaptation for Semantic Segmentation of Urban Scenes

Yang Zhang1, Philip David2, and Boqing Gong1

1 Center for Research in Computer Vision, University of Central Florida
2 Computational and Information Sciences Directorate, U.S. Army Research Laboratory
yangzhang@knights.ucf.edu, philip.j.david4.civ@mail.mil, bgong@crcv.ucf.edu

Abstract

During the last half decade, convolutional neural net-
works (CNNs) have triumphed over semantic segmentation,
which is a core task of various emerging industrial appli-
cations such as autonomous driving and medical imaging.
However, to train CNNs requires a huge amount of data,
which is difﬁcult to collect and laborious to annotate. Re-
cent advances in computer graphics make it possible to
train CNN models on photo-realistic synthetic data with
computer-generated annotations. Despite this, the domain
mismatch between the real images and the synthetic data
signiﬁcantly decreases the models’ performance. Hence we
propose a curriculum-style learning approach to minimize
the domain gap in semantic segmentation. The curriculum
domain adaptation solves easy tasks ﬁrst in order to infer
some necessary properties about the target domain; in par-
ticular, the ﬁrst task is to learn global label distributions
over images and local distributions over landmark super-
pixels. These are easy to estimate because images of urban
trafﬁc scenes have strong idiosyncrasies (e.g., the size and
spatial relations of buildings, streets, cars, etc.). We then
train the segmentation network in such a way that the net-
work predictions in the target domain follow those inferred
properties.
In experiments, our method signiﬁcantly out-
performs the baselines as well as the only known existing
approach to the same problem.

1. Introduction

This paper is concerned with domain adaptation for se-
mantic image segmentation of urban scenes, i.e., assigning a
category label to every pixel of an image or video frame [6].
Our interest in this problem is partially due to the exciting
vision of autonomous driving, where understanding com-
plex inner-city trafﬁc scenes is an essential module and se-

For better reproducibility, the code is available at:

https://github.com/YangZhang4065/AdaptationSeg.

mantic segmentation is one of its key constituents [12, 19].
Machine learning methods for automatic semantic seg-
mentation require massive amounts of high-quality anno-
tated imagery in order to produce effective classiﬁers that
generalize well to novel scenes. However, annotating train-
ing imagery for semantic segmentation is a very cumber-
some task for humans. Cordts et al. report that the annota-
tion and quality control take more than 1.5 hours on a single
image of the Cityscapes dataset [12]. Besides, it is very dif-
ﬁcult and time-consuming to collect imagery that depicts
the large number of variabilities possible of urban scenes in
different countries, seasons, and lighting conditions, etc.

To overcome both shortcomings, simulated urban en-
vironments may be used to automatically generate large
amounts of annotated training imagery. This, however, in-
troduces a new problem, that of domain mismatch between
the source (simulated) domain and the target (real) domain.
Figure 2 illustrates some examples drawn from the synthetic
SYNTHIA [48] dataset and the real Cityscapes [12] dataset.
It is readily apparent that there are signiﬁcant visual differ-
ences between the two datasets. Domain adaptation tech-
niques [48, 53, 27] may be used by machine learning meth-
ods to bridge this gap between the two domains.

In computer vision, learning domain-invariant features
has been a prevalent and successful strategy to tackle the
discrepancy between two domains, mainly for classiﬁcation
and regression problems [41, 43]. The core idea is to infer
a new feature space such that the marginal distributions of
the source domain (S) and the target domain (T) are about
the same, i.e., PS(Z) ≈ PT (Z). Furthermore, the predic-
tion function P (Y |Z) from that space is assumed to be the
same across the domains so that one can leverage the rich
labeled data in the source domain to train classiﬁers that
generalize well to the target.
It is hard to verify the as-
sumption, but the work along this line is rich and has led
to impressive practical results regardless, such as the algo-
rithms using linear transformation [22, 23, 15, 55], kernel
methods [40, 20, 2, 31], and the recent deep learning meth-

1

ods that directly extract domain-invariant features from raw
input images [62, 36, 61, 18, 17].

In contrast to prior arts, the semantic segmentation we
study in this paper is a highly structured prediction problem,
for which domain adaptation is only sparsely explored in
the literature [66, 27]. Under structured prediction, can we
still achieve good domain adaptation results by following
the above principles? Our intuition and experimental stud-
ies (cf. Section 4) tell us no. Learning a decision function
for structured prediction is more involved than classiﬁcation
because it has to resolve the predictions in an exponentially
large label space. As a result, the assumption that the source
and target domains share the same prediction function be-
comes less likely to hold. Besides, some discriminative cues
in the data would be suppressed if one matches the feature
representations of the two domains without taking careful
account of the structured labels. Finally, data instances are
the proxy to measure the domain difference [25, 17, 18].
However, it is not immediately clear what comprises the in-
stances in semantic segmentation [27], especially given that
the top-performing segmentation methods are built upon
deep neural networks [35, 44, 39, 10]. Hoffman et al.
take each spatial unit in the fully convolutional network
(FCN) [35] as an instance [27]. We contend that such in-
stances are actually non-i.i.d. in either individual domain,
as their receptive ﬁelds overlap with each other.

How can we avoid the assumption that the source and
target domains share the same prediction function in a trans-
formed domain-invariant feature space? Our proposed so-
lution draws on two key observations. One is that the ur-
ban trafﬁc scene images have strong idiosyncrasies (e.g.,
the size and spatial relations of buildings, streets, cars, etc.).
Therefore, some tasks are “easy” and, more importantly,
suffer less because of the domain discrepancy. Second, the
structured output in semantic segmentation enables conve-
nient posterior regularization [16], as opposed to the popu-
lar (e.g., (cid:96)2) regularization over model parameters.

Accordingly, we propose a curriculum-style [4] domain
adaptation approach. Recall that, in domain adaptation,
only the source domain supplies many labeled data while
there are no or only scarce labels from the target. The cur-
riculum domain adaptation begins with the easy tasks, in
order to gain some high-level properties about the unknown
pixel-level labels for each target image. It then learns a se-
mantic segmentation network — the hard task, whose pre-
dictions over the target images are forced to follow those
necessary properties as much as possible.

To develop the easy tasks in the curriculum, we consider
label distributions over both holistic images and some land-
mark superpixels of the target domain. Take the former for
instance. The label distribution of an image indicates the
percentage of pixels that belong to each category, respec-
tively. We argue that such tasks are easier, despite the do-

main mismatch, than assigning pixel-wise labels. Indeed,
we may directly estimate the label distributions without in-
ferring the pixel-wise labels. Moreover, the relative sizes
of road, vehicle, pedestrian, etc. constrain the shape of the
distributions, effectively reducing the search space. Finally,
models to estimate the label distributions over superpixels
may beneﬁt from the urban scenes’ canonical layout that
transcends domains, e.g., buildings stand beside streets.

Why and when are the seemingly simple label distribu-
tions useful for the domain adaptation of semantic segmen-
tation? In our experiments, we ﬁnd that the segmentation
networks trained on the source domain perform poorly on
many target images, giving rise to disproportionate label
assignments (e.g., many more pixels are classiﬁed to side-
walks than to streets). To rectify this, the image-level label
distribution informs the segmentation network how to up-
date the predictions while the label distributions of the land-
mark superpixels tell the network where to update. Jointly,
they guide the adaptation of the networks to the target do-
main to, at least, generate proportional label predictions.
Note that additional “easy tasks” can be conveniently in-
corporated into our framework in the future.

Our main contribution is on the proposed curriculum-
style domain adaptation for the semantic segmentation of
urban scenes. We select into the curriculum the easy and
useful tasks of inferring label distributions for the target im-
ages and landmark superpixels, in order to gain some nec-
essary properties about the target domain. Built upon these,
we learn a pixel-wise discriminative segmentation network
from the labeled source data and, meanwhile, conduct a
“sanity check” to ensure the network behavior is consistent
with the previously learned knowledge about the target do-
main. Our approach effectively eludes the assumption about
the existence of a common prediction function for both do-
mains in a transformed feature space. It readily applies to
different segmentation networks, as it does not change the
network architecture or tax any intermediate layers.

2. Related work

We discuss some related work on domain adaptation and
semantic segmentation, with special focus on that transfer-
ring knowledge from virtual images to real photos.
Domain adaptation. Conventional machine learning al-
gorithms rely on the assumption that the training and test
data are drawn i.i.d. from the same underlying distribution.
However, it is often the case that there exists some discrep-
ancy from the training to the test stage. Domain adaptation
aims to rectify this mismatch and tune the models toward
better generalization at testing [60, 59, 21, 30, 25].

The existing work on domain adaptation mostly focuses
on classiﬁcation and regression problems [43, 41], e.g.,
learning from online commercial images to classify real-
world objects [50, 22], and, more recently, aims to improve

the adaptability of deep neural networks [36, 18, 17, 61, 7,
37]. Among them, the most relevant work to ours is that
exploring simulated data [56, 65, 48, 63, 27, 45, 53]. Sun
and Saenko train generic object detectors from the synthetic
images [56], while Vazquez et al. use the virtual images to
improve pedestrian detections in real environment [63]. The
other way around, i.e., how to improve the quality of the
simulated images using the real ones, is studied in [53, 45].

Semantic segmentation. Semantic segmentation is the
task of assigning an object label to each pixel of an im-
age. Traditional methods [52, 58, 68] rely on local im-
age features manually designed by domain experts. After
the pioneering work [10, 35] that introduced the convo-
lutional neural network (CNN) [32] to semantic segmen-
tation, most recent top-performing methods are built on
CNNs [64, 49, 3, 69, 39, 13].

An enormous amount of labor-intensive work is required
to annotate the many images that are needed to obtain accu-
rate segmentation models. The PASCAL VOC2012 Chal-
lenge [14] contains nearly 10,000 annotated images for
the segmentation competition, and the MS COCO Chal-
lenge [34] includes over 200,000 annotated images. Ac-
cording to [47], it took about 60 minutes to manually seg-
ment each image in [8] and about 90 minutes for each in
[12]. A plausible approach to reducing the human workload
is to utilize weakly supervised information such as image
labels and bounding boxes [44, 28, 42, 46].

We instead explore the use of almost effortlessly labeled
virtual images for training high-quality segmentation net-
works. In [47], annotating a synthetic image took only 7
seconds on average through a computer game. For the urban
scenes, we use the SYNTHIA [48] dataset which contains
images of a virtual city.

Domain adaptation for semantic segmentation. Upon
observing the obvious mismatch between virtual and real
data [51, 47, 48], we expect domain adaptation to enhance
the segmentation performance on real images by networks
trained on virtual ones. To the best of our knowledge, the
only attempt to algorithmically address this problem is [27].
While it regularizes the intermediate layers and constrains
the output of the network, we propose a different curriculum
domain adaptation strategy. We solve the easy task ﬁrst and
then use the learned knowledge about the target domain to
regularize the network predictions.

3. Approach

In this section, we present the details of the proposed
curriculum domain adaptation for semantic segmentation of
urban scene images. Unlike previous work [43, 27] that
aligns the domains via an intermediate feature space and
thereby implicitly assumes the existence of the same deci-
sion function for the two domains, it is our intuition that,

for structured prediction (i.e., semantic segmentation here),
the cross-domain generalization of machine learning mod-
els can be more efﬁciently improved if we avoid this as-
sumption and instead train them subject to necessary prop-
erties they should retain in the target domain.

Preliminaries.
In particular, the properties are about the
pixel-wise category labels Yt ∈ RW ×H×C of an arbitrary
image It ∈ RW ×H from the target domain, where W and H
are the width and height of the image, respectively, and C is
the number of categories. We use one-hot vector encoding
for the groundtruth labels, i.e., Yt(i, j, c) takes the value of
0 or 1 and the latter means that the c-th label is assigned by
a human annotator to the pixel at (i, j). Correspondingly,
the prediction (cid:98)Yt(i, j, c) ∈ [0, 1] by a segmentation network
is realized by a softmax function per pixel.

We express each target property in the form of a distribu-
tion pt ∈ ∆ over the C categories, where pt(c) represents
the occupancy proportion of the category c over the t-th tar-
get image or a superpixel of the image. Therefore, one can
immediately calculate the distribution pt given the human
annotations Yt to the image. For instance, the image level
label distribution is expressed by

pt(c) =

Yt(i, j, c),

∀c.

(1)

1
W H

W
(cid:88)

H
(cid:88)

i=1

j=1

Similarly, we can compute the target property/distribution
from the network predictions (cid:98)Yt and denote it by (cid:98)pt.
3.1. Domain adaptation using the target properties

Ideally, we would like to have a segmentation network to
imitate human annotators on the target domain. Therefore,
necessarily, the properties of their annotation results should
be the same too. We capture this notion by minimizing the
cross entropy C(pt, (cid:98)pt) = H(pt) + KL(pt, (cid:98)pt) at training,
where the ﬁrst term of the right-hand side is the entropy and
the second is the KL-divergence.

Given a mini-batch consisting of both source images (S)
and target images (T ), the overall objective function for
training the cross-domain generalizing segmentation net-
work is,

min

γ
|S|

(cid:88)

(cid:16)

(cid:17)

L

Ys, (cid:98)Ys

+

s∈S

1 − γ
|T |

(cid:88)

(cid:88)

t∈T

k

(cid:16)

C

t , (cid:98)pk
pk

t

(cid:17)

(2)

where L is the pixel-wise cross-entropy loss deﬁned over
the sufﬁciently labeled source domain images, enforcing the
network to have the pixel level discriminative capabilities,
and the second term is over the unlabeled target domain im-
ages, hinting the network what necessary properties its pre-
dictions should have in the target domain. We use γ ∈ [0, 1]
to balance the two strengths in training and superscript k to
index different types of label distributions.

Note that in the domain adaptation context, we actually
cannot directly compute the label distribution pk
t from the
groundtruth annotations of the target domain. Nonetheless,
estimating them using the labeled source data is easier than
assigning labels to every single pixel of the target images.
We present the details in the next section.

Remarks. Mathematically, the objective function has a
similar form as in model compression [9, 26]. We thus
borrow some concepts to gain more intuitive understanding
about our domain adaptation procedure. The “student” net-
work follows a curriculum to learn simple knowledge about
the target domain before it addresses the hard one of seman-
tically segmenting images. The models inferring the target
properties act like “teachers”, as they hint what label dis-
tributions the ﬁnal solution (image annotation) may have in
the target domain at the image and superpixel levels.

Another perspective is to understand the target prop-
erties as a posterior regularization [16] for the network.
The posterior regularization can conveniently encode a pri-
ori knowledge into the objective function. Some applica-
tions include weakly supervised segmentation [44, 49] and
detection [5], and rule-regularized training of neural net-
works [29]. In addition to the domain adaptation setting and
novel target properties, another key distinction of our work
is that we decouple the label distributions from the network
predictions and thus avoid the EM type of optimizations.
Our approach learns the segmentation network with almost
effortless changes to the popular deep learning tools.

3.2. Inferring the target properties

Thus far we have presented the “hard” task in the cur-
riculum domain adaptation. In this section, we describe the
“easy” ones, i.e., how to infer the target properties without
accessing the image annotations of the target domain. Our
contributions also include selecting the particular property
of label distributions to constitute the simple tasks.

3.2.1 Global label distributions of images

Due to the domain disparity, a baseline segmentation net-
work trained on the source domain (i.e., using the ﬁrst term
of eq. (2)) could be easily crippled given the target images.
In our experiments, we ﬁnd that our baseline network con-
stantly mistakes streets for sidewalks and/or cars (cf. Fig-
ure 2). Consequently, the predicted labels for the pixels are
highly disproportionate.

To rectify this, we employ the label distribution pt over
the global image as our ﬁrst property (cf. eq. (1)). Without
access to the target labels, we have to train machine learn-
ing models from the labeled source images to estimate the
label distribution pt for the target image. Nonetheless, we
argue that this is less challenging than generating the per-
pixel predictions despite that both tasks are inﬂuenced by
the domain mismatch.

In our experiments, we examine different approaches to
this task. We extract image features using the Inception-
Resnet-v2 [57] as the input to the following models.

Logistic regression. Although multinomial logistic regres-
sion (LR) is mainly used for classiﬁcation, its output is
actually a valid distribution over the categories. For
our purpose, we thus train it by replacing the one-hot
vectors in the cross-entropy loss with the groundtruth
label distribution ps, which is calculated using eq. (1)
and the available human labels of the source domain.
Given a target image, we directly take the LR’s output
as the predicted label distribution.

Mean of nearest neighbors. We also test a nonparamet-
ric method by simply retrieving the nearest neighbors
(NNs) for a target image and then transferring the
mean of the NNs’ label distributions to the target im-
age. We use the (cid:96)2 distance for the NN retrieval.

Finally, we include two dumb predictions as the control
experiment. One is, for any target image, to output the mean
of all the label distributions in the source domain (source
mean), and the other is to output a uniform distribution.

3.2.2 Local label distributions of landmark superpixels

The image level label distribution globally penalizes poten-
tially disproportional segmentation output on the target do-
main, and yet is inadequate in providing spatial constraints.
In this section, we consider the use of label distributions
over some superpixels as the anchors to drive the network
towards spatially desired target properties.

Note that it is not necessary, and is even harmful, to
use all of the superpixels in a target image to regularize
the segmentation network, because that would be too strong
a force and may overrule the pixel-wise discriminativeness
revealed by the labeled source images, especially when the
label distributions are not inferred accurately enough.

In order to have the dual effect of both estimating the la-
bel distributions of superpixels and ﬁltering the superpixels,
we simplify the problem and employ a linear SVM in this
work. In particular, we segment each image into 100 super-
pixels using linear spectral clustering [33]. For the super-
pixels of the source domain, we are able to assign a single
dominant label to each of them, and then use the labels and
the corresponding features extracted from the superpixels to
train a multi-class SVM. Given a test superpixel of a target
image, the multi-class SVM returns a class label as well as a
decision value, which is interpreted as the conﬁdence score
about classifying this superpixel. We keep the top 60% su-
perpixels, called landmark superpixels, in the target domain
and calculate their label distributions as the second type of
In particular, the class label of a landmark
“easy” tasks.
superpixel is encoded into a one-hot vector, which serves
as a valid distribution about the categories in the landmark

ers with VGG-19 [54], and then train it using the AdaDelta
optimizer [67] with default parameters. Each mini-batch is
comprised of ﬁve source images and ﬁve randomly chosen
target images. When we train the baseline network with no
adaptation, however, we try to use the largest possible mini-
batch that includes 15 source images. The network is im-
plemented in Keras [11] and Theano [1]. We train different
versions of the network on a single Tesla K40 GPU.

Unlike the existing deep domain adaptation methods [17,
18, 36, 27] which introduce regularization to the intermedi-
ate layers, we only revise the loss function over the output.
Hence, our curriculum domain adaptation can be readily ap-
plied to other segmentation networks (e.g., [39, 10]).

4.2. Datasets and evaluation

We use the publicly available Cityscpaes [12] and SYN-

THIA [48] datasets in our experiments.

Cityscapes is a real-world, vehicle-egocentric image
dataset collected in 50 cities in Germany and nearby coun-
tries. It provides four disjoint subsets: 2,993 training im-
ages, 503 validation image, 1,531 test images, and 20,021
auxiliary images. All the training, validation, and test im-
ages are accurately annotated with per pixel category labels,
while the auxiliary set is coarsely labeled. There are 34 dis-
tinct categories in the dataset.

SYNTHIA [48] is a large dataset of synthetic images
and provides a particular subset, called SYNTHIA-RAND-
CITYSCAPES, to pair with Cityscapes. This subset con-
tains 9,400 images that are automatically annotated with
12 object categories, one void class, and some unnamed
classes. Note that the virtual city used to generate the syn-
thetic images does not correspond to any of the real cities
covered by Cityscapes. We abbreviate SYNTHIA-RAND-
CITYSCAPES to SYNTHIA hereon.

Domain idiosyncrasies. Although both datasets depict
urban scenes, and SYNTHIA is created to be as photo-
realistic as possible, they are mismatched domains in sev-
eral ways. The most noticeable difference is probably the
coarse-grained textures in SYNTHIA; very similar texture
patterns repeat in a regular manner across different im-
ages.
In contrast, the Cityscapes images are captured by
high-quality dash-cameras. Another major distinction is
the variability in view angles. Since Cityscapes images are
recorded by the dash cameras mounted on a moving car,
they are viewed from almost a constant angle that is about
parallel to the ground. More diverse view angles are em-
ployed by SYNTHIA — it seems like some cameras are
placed on the buildings that are signiﬁcantly higher than a
bus. Finally, some of the SYNTHIA images are severely
shadowed by extreme lighting conditions, while we ﬁnd no
such conditions in the Cityscapes images. These combined
factors, among others, make domain adaptation from SYN-
THIA to Cityscapes a very challenging problem.

Figure 1: The overall framework of curriculum domain
adaptation for semantic segmentation of urban scenes.

superpixel. Albeit simple, we ﬁnd this method works very
well in our experiments.

We encode both visual and contextual information to
represent a superpixel. First, we use the FCN-8s [35] pre-
trained on the PASCAL CONTEXT [38] dataset, which has
59 distinct classes, to obtain 59 detection scores for each
pixel. We then average them within each superpixel. Fi-
nally, we represent a superpixel by the concatenation of the
59D vectors of itself, its left and right superpixels, as well
as the two respectively above and below it.

3.3. Curriculum domain adaptation: recapitulation

We recap the proposed curriculum domain adaptation us-
ing Figure 1 before presenting the experiments in the next
section. Our main idea is to execute the domain adaptation
step by step, starting from the easy tasks that are less sensi-
tive to the domain discrepancy than the semantic segmenta-
tion. We choose the labels distributions over global images
and local landmark superpixels in this work; more tasks will
be explored in the future. The solutions to them provide
useful gradients originating from the target domain (cf. the
arrows with brown color in Figure 1), while the source do-
main feeds the network with well-labeled images and seg-
mentation masks (cf. the dark blue arrows in Figure 1).

4. Experiments

In this section, we describe the experimental setup and
compare the results of our approach, its variations, and
some existing baseline methods.

4.1. Segmentation network and optimization

In our experiments, we use FCN-8s [35] as our semantic
segmentation network. We initialize its convolutional lay-

t
s
e
r
a
e
n
s
t
i
e
v
e
i
r
t
e
r
e
w

,

n
m
u
l
o
c
t
s
r
ﬁ
e
h
t
n
i
e
g
a
m

i

t
e
g
r
a
t
h
c
a
e
r
o
F

.
)
n
i
a
m
o
d
t
e
g
r
a
t
(

]
8
4
[

t
e
s
a
t
a
d
s
e
p
a
c
s
y
t
i

C
e
h
t
n
o
s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
c
i
t
n
a
m
e
s
e
v
i
t
a
t
i
l
a
u
Q

:
2
e
r
u
g
i
F

,

n
o
i
t
a
t
o
n
n
a

c
i
t
n
a
m
e
s

e
s
i
w

-
l
e
x
i
p
h
t
u
r
t
d
n
u
o
r
g
e
h
t
o
t

e
u
d
s
n
o
i
t
u
b
i
r
t
s
i
d
l
e
b
a
l

e
h
t

s
t
o
l
p
n
m
u
l
o
c
d
r
i
h
t

e
h
T

.
)
n
i
a
m
o
d
e
c
r
u
o
s
(

t
e
s
a
t
a
d
]
2
1
[

I

A
H
T
N
Y
S
e
h
t

m
o
r
f

r
o
b
h
g
i
e
n

s
t
l
u
s
e
r
n
o
i
t
a
t
n
e
m
g
e
s
e
h
t
e
r
a
s
n
m
u
l
o
c
e
e
r
h
t

t
s
a
l
e
h
T

.

n
o
i
s
s
e
r
g
e
r
c
i
t
s
i
g
o
l
y
b
n
o
i
t
u
b
i
r
t
s
i
d
d
e
r
r
e
f
n
i
e
h
t
d
n
a

,
n
o
i
t
a
t
p
a
d
a
o
n
h
t
i

w
k
r
o
w
t
e
n
e
n
i
l
e
s
a
b
e
h
t
y
b
s
n
o
i
t
c
i
d
e
r
p
e
h
t

.
s
r
o
t
a
t
o
n
n
a

n
a
m
u
h

d
n
a

,
h
c
a
o
r
p
p
a

n
o
i
t
a
t
p
a
d
a
n
i
a
m
o
d
r
u
o

,

k
r
o
w
t
e
n

e
n
i
l
e
s
a
b
e
h
t
y
b

Table 1: The χ2 distances between the groundtruth label
distributions and those predicted by different methods.

Method
χ2 Distance

Uniform NoAdapt

1.13

0.65

Src mean NN
0.33

0.44

LR
0.27

Figure 2 shows some example images from both
datasets. We pair each Cityscpaes image with its nearest
neighbor in SYNTHIA, retrieved by the Inception-Resnet-
v2 [57] features. However, the cross-dataset nearest neigh-
bors are visually very different from the query images, ver-
ifying the dramatic disparity between the two domains.

Experiment setup. Since our ultimate goal is to solve the
semantic segmentation problem for real images of urban
scenes, we take Cityscapes as the target domain and SYN-
THIA as the source domain. The Cityscapes validation set
is used as our test set. We split 500 images out of the Citysc-
paes training set for the validation purpose (e.g., to monitor
the convergence of the networks). In training, we randomly
sample mini-batches from both the images (and their labels)
of SYNTHIA and the remaining images of Cityscapes yet
with no labels.

As in [27], we manually ﬁnd 16 common classes be-
tween the two datasets: sky, building, road, sidewalk, fence,
vegetation, pole, car, trafﬁc sign, person, bicycle, motorcy-
cle, trafﬁc light, bus, wall, and rider. The last four are un-
named and yet labeled in SYNTHIA.

TP

Evaluation. We use the evaluation code released along
with the Cityscapes dataset to evaluate our results. It calcu-
lates the PASCAL VOC intersection-over-union, i.e., IoU =
TP+FP+FN [14], where TP, FP, and FN are the numbers of
true positive, false positive, and false negative pixels, re-
spectively, determined over the whole test set. Since we
have to resize the images before feeding them to the seg-
mentation network, we resize the output segmentation mask
back to the original image size before running the evaluation
against the groundtruth annotations.

4.3. Results of inferring global label distributions

Before presenting the ﬁnal semantic segmentation re-
sults, we ﬁrst compare the different approaches to inferring
the global label distributions of the target images (cf. Sec-
tion 3.2.1). We report the results on the held-out validation
images of Cityscapes in this experiment, and then select the
best method for the remaining experiments.

In Table 1, we compare the estimated label distributions
with the groundtruth ones using the χ2 distance, the smaller
the better. We see that the baseline network (NoAdapt),
which is directly learned from the source domain without
any adaptation methods, outperforms the dumb uniform dis-
tribution (Uniform) and yet no other methods. This con-
ﬁrms that the baseline network gives rise to severely dis-
proportionate predictions over the target domain.

Another dumb prediction (Src mean),

i.e., using the
mean of all label distributions over the source domain as
the prediction for the target images, however, performs rea-
sonably well. To some extent, this indicates the value of
the simulated source domain for the semantic segmentation
task of urban scenes.

Finally, the nearest neighbors (NN) based method and
the multinomial logistic regression (LR) (cf. Section 3.2.1)
perform the best. We use the output of LR on the target
domain in our remaining experiments.

4.4. Comparison results

We report the ﬁnal semantic segmentation results on the
test data of the target domain in this section. We compare
our approach to the following competing methods.

No adaptation (NoAdapt). We directly train the FCN-8s
model on SYNTHIA without applying any domain
adaptation methods. This is the most basic baseline
for our experiments.

Superpixel classiﬁcation (SP). Recall

have
trained a multi-class SVM using the dominant labels
of the superpixels in the source domain. We then use
them to classify the target superpixels.

that we

Landmark superpixels (SP Lndmk). Since we keep the
top 60% most conﬁdently classiﬁed superpixels as the
landmarks to regularize our segmentation network dur-
ing training (cf. Section 3.2.2), it is also interesting to
examine the classiﬁcation results of these superpixels.
We run the evaluation after assigning the void class la-
bel to the other pixels of the images.

In addition to the IoU, we have also evaluated the clas-
siﬁcation results of the superpixels by accuracy. We
ﬁnd that the classiﬁcation accuracy is 71% for all the
superpixels of the target domain, while for the selected
60% landmark superpixels, the classiﬁcation accuracy
is more than 88%.

FCNs in the wild (FCN Wld). Hoffman et al.’s work [27]
is the only existing one addressing the same problem
as ours, to the best of our knowledge. They introduce
a pixel-level adversarial loss to the intermediate lay-
ers of the network and impose constraints to the net-
work output. Their experimental setup is about identi-
cal to ours except that they do not specify which part
of Cityscapes is considered as the test set. Nonethe-
less, we include their results for comparison to put our
work in a better perspective.

The comparison results are shown in Table 2. Immedi-
ately, we note that all our domain adaptation results are sig-
niﬁcantly better than those without adaptation (NoAdapt).

Table 2: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from SYNTHIA [48].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
SP Lndmk
SP
Ours (SP)
Ours (I+SP)

17.4
20.2
22.0
25.5
23.0
25.6
28.1
29.0

e
k
i
b

0.0
0.6
18.0
16.7
0.0
0.0
10.2
13.1

e
c
n
e
f

0.0
0.0
0.5
0.8
0.0
0.0
0.4
0.5

l
l
a
w

1.2
4.4
0.8
2.3
0.0
0.0
0.1
0.1

n
g
i
s
-
t

7.2
11.7
5.3
6.4
0.0
0.0
2.7
3.0

e
l
o
p

15.1
20.3
21.5
21.7
0.0
0.0
8.1
10.7

e
k
i
b
m

0.1
0.2
0.5
1.0
0.0
0.0
0.8
0.7

t
h
g
i
l
-
t

0.0
0.1
8.0
9.9
0.0
0.0
3.7
3.7

y
k
s

66.8
68.7
75.6
59.6
83.1
80.5
68.7
70.6

s
u
b

3.9
3.2
4.5
12.1
26.1
22.1
21.4
20.7

r
e
d
i
r

1.5
3.8
9.0
7.9
0.0
0.0
7.9
8.2

g
e
v

30.3
42.3
72.4
70.2
73.1
71.9
75.5
76.1

g
d
l
b

29.7
30.8
59.6
67.5
67.7
69.3
74.6
74.9

r
a
c

47.3
54.0
23.6
32.0
41.1
45.9
42.9
43.2

n
o
s
r
e
p

51.1
51.2
35.1
29.3
5.8
24.6
47.3
47.1

k
l
a
w
e
d
i
s

17.7
19.6
11.2
18.1
10.6
19.8
23.9
26.1

d
a
o
r

6.4
11.5
5.6
51.9
60.8
75.0
61.8
65.2

We denote by (Ours (I)) the network trained using the
global label distributions over the target images (and the la-
beled source images). Although one may wonder that the
image-wise label distributions are too high-level to super-
vise the pixel-wise discriminative network, the gain is ac-
tually signiﬁcant. They are able to correct some obvious
errors of the baseline network, such as the disproportional
predictions about road and sidewalk (cf. the results of Ours
(I) vs. NoAdapt in the last two columns).

It is interesting to see that both superpixel classiﬁcation-
based segmentation results (SP and SP Lndmk) are also bet-
ter than the baseline network (NoAdapt). The label distribu-
tions obtained over the landmark superpixels boost the seg-
mentation network (Ours (SP)) to the mean IoU of 28.1%,
which is better than those by either superpixel classiﬁcation
or the baseline network individually. We have also tried to
use the label distributions over all the superpixels to train
the network, and observe little improvement over NoAdapt.
This is probably because it is too forceful to regularize the
network output at every single superpixel especially when
the estimated label distributions are not accurate enough.

The superpixel-based methods, including Ours (SP),
miss small objects such as fences, trafﬁc lights (t-light), and
trafﬁc signs (t-sign), and instead are very accurate for cat-
egories like the sky, road, and building, that typically oc-
cupy larger image regions. On the contrary, the label dis-
tributions on the images give rise to a network (Ours (I))
that performs better on the small objects than Ours (SP).
In other words, they mutually complement to some extent.
Re-training the network by using the label distributions over
both global images and local landmark superpixels (Ours
(I+SP)), we achieve the best semantic segmentation results
on the target domain. In the future work, it is worth explor-
ing other target properties, perhaps still in the form of label
distributions, that handle the small objects well, in order to
further complement the superpixel-level label distributions.

Comparison with FCNs in the wild [27]. Although we
use the same segmentation network (FCN-8s) as [27], our
baseline results (NoAdapt) are better than those reported

in [27]. This may be due to subtle differences in terms of
implementation or experimental setup. Although our own
baseline results are superior, we gain larger improvements
(7%) over them than the performance gain of [27] (3%) over
the seemingly underperforming baseline network there.

Comparison with learning domain-invariant features.
At our ﬁrst attempt to solve the domain adaptation problem
for the semantic segmentation of urban scenes, we tried to
learn domain invariant features following the deep domain
adaptation methods [36] for classiﬁcation. In particular, we
impose the maximum mean discrepancy [24] over the layer
before the output. We name such network layer the feature
layer. Since there are virtually three output layers in FCN-
8s, we experiment with all the three feature layers corre-
spondingly. We have also tested the domain adaptation by
reversing the gradients of a domain classiﬁer [17]. How-
ever, none of these efforts lead to any noticeable gain over
the baseline network so the results are omitted.

5. Conclusion

In this paper, we address domain adaptation for the se-
mantic segmentation of urban scenes. We propose a cur-
riculum style approach to this problem. We learn to esti-
mate the global label distributions of the images and local
label distributions of the landmark superpixels of the target
domain. Such tasks are easier to solve than the pixel-wise
label assignment. Therefore, we use their results to effec-
tively regularize our training of the semantic segmentation
network such that its predictions meet the inferred label dis-
tributions over the target domain. Our method outperforms
several competing methods that do domain adaptation from
simulated images to real photos of urban trafﬁc scenes. In
future work, we will explore more target properties that can
be conveniently inferred to enrich our curriculum domain
adaptation framework.

Acknowledgements. This work is supported by the NSF
award IIS #1566511, a gift from Adobe Systems Inc., and
a GPU from NVIDIA. We thank the anonymous reviewers
and area chairs for their insightful comments.

References

[1] R. Al-Rfou, G. Alain, A. Almahairi, C. Angermueller,
D. Bahdanau, N. Ballas, F. Bastien, J. Bayer, A. Belikov,
A. Belopolsky, and others. Theano: A Python framework
for fast computation of mathematical expressions. arXiv
preprint arXiv:1605.02688, 2016. 5

[2] R. Aljundi, R. Emonet, D. Muselet, and M. Sebban.
Landmarks-based kernelized subspace alignment for unsu-
pervised domain adaptation. In IEEE Conference on Com-
puter Vision and Pattern Recognition (CVPR), pages 56–63,
2015. 1

[3] V. Badrinarayanan, A. Kendall, and R. Cipolla. Segnet: A
deep convolutional encoder-decoder architecture for image
segmentation. arXiv preprint arXiv:1511.00561, 2015. 3
[4] Y. Bengio, J. Louradour, R. Collobert, and J. Weston. Cur-
riculum learning. In Proceedings of the 26th annual interna-
tional conference on machine learning, pages 41–48. ACM,
2009. 2

[5] H. Bilen, M. Pedersoli, and T. Tuytelaars. Weakly supervised
In BMVA

object detection with posterior regularization.
British Machine Vision Conference (BMVC), 2014. 4

[6] E. Borenstein and S. Ullman. Class-speciﬁc, top-down seg-
In European conference on computer vision,

mentation.
pages 109–122. Springer, 2002. 1

[7] K. Bousmalis, N. Silberman, D. Dohan, D. Erhan, and
D. Krishnan. Unsupervised pixel-level domain adapta-
tion with generative adversarial networks. arXiv preprint
arXiv:1612.05424, 2016. 3

[8] G. J. Brostow, J. Fauqueur, and R. Cipolla. Semantic object
classes in video: A high-deﬁnition ground truth database.
Pattern Recognition Letters, 30(2):88–97, 2009. 3

[9] C. Bucilu, R. Caruana, and A. Niculescu-Mizil. Model com-
pression. In Proceedings of the 12th ACM SIGKDD interna-
tional conference on Knowledge discovery and data mining,
pages 535–541. ACM, 2006. 4

[10] L.-C. Chen, G. Papandreou, I. Kokkinos, K. Murphy, and
A. L. Yuille. Semantic image segmentation with deep con-
arXiv preprint
volutional nets and fully connected crfs.
arXiv:1412.7062, 2014. 2, 3, 5

[11] F. Chollet. keras. https://github.com/fchollet/

keras, 2015. 5

[12] M. Cordts, M. Omran, S. Ramos, T. Rehfeld, M. Enzweiler,
R. Benenson, U. Franke, S. Roth, and B. Schiele. The
cityscapes dataset for semantic urban scene understanding.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 3213–3223, 2016. 1, 3, 5, 6,
8, 12

[13] J. Dai, K. He, and J. Sun. Instance-aware semantic segmen-
tation via multi-task network cascades. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3150–3158, 2016. 3

[14] M. Everingham, S. A. Eslami, L. Van Gool, C. K. Williams,
J. Winn, and A. Zisserman. The pascal visual object classes
International Journal of Com-
challenge: A retrospective.
puter Vision, 111(1):98–136, 2015. 3, 7

[15] B. Fernando, A. Habrard, M. Sebban, and T. Tuytelaars. Un-
supervised visual domain adaptation using subspace align-

ment. In IEEE International Conference on Computer Vision
(ICCV), pages 2960–2967, 2013. 1

[16] K. Ganchev, J. Gillenwater, B. Taskar, et al. Posterior reg-
ularization for structured latent variable models. Journal of
Machine Learning Research, 11(Jul):2001–2049, 2010. 2, 4
[17] Y. Ganin and V. Lempitsky. Unsupervised domain adapta-
In International Conference on
tion by backpropagation.
Machine Learning (ICML), pages 1180–1189, 2015. 2, 3,
5, 8

[18] Y. Ganin, E. Ustinova, H. Ajakan, P. Germain, H. Larochelle,
F. Laviolette, M. Marchand,
and V. S. Lempitsky.
Domain-adversarial training of neural networks. CoRR,
arXiv:1505.07818, 2015. 2, 3, 5

[19] A. Geiger, P. Lenz, C. Stiller, and R. Urtasun. Vision meets
robotics: The kitti dataset. The International Journal of
Robotics Research, 32(11):1231–1237, 2013. 1

[20] B. Gong, K. Grauman, and F. Sha. Connecting the dots with
landmarks: Discriminatively learning domain invariant fea-
tures for unsupervised domain adaptation. In International
Conference on Machine Learning (ICML), pages 222–230,
2013. 1

[21] B. Gong, F. Sha, and K. Grauman. Overcoming dataset
bias: An unsupervised domain adaptation approach. In NIPS
Workshop on Large Scale Visual Recognition and Retrieval
(LSVRR), 2012. 2

[22] B. Gong, Y. Shi, F. Sha, and K. Grauman. Geodesic ﬂow
kernel for unsupervised domain adaptation. In IEEE Confer-
ence on Computer Vision and Pattern Recognition (CVPR),
pages 2066–2073, 2012. 1, 2

[23] R. Gopalan, R. Li, and R. Chellappa. Domain adaptation
for object recognition: An unsupervised approach. In IEEE
International Conference on Computer Vision (ICCV), pages
999–1006, 2011. 1

[24] A. Gretton, K. M. Borgwardt, M. J. Rasch, B. Sch¨olkopf, and
A. Smola. A kernel two-sample test. Journal of Machine
Learning Research, 13(Mar):723–773, 2012. 8

[25] A. Gretton, A. Smola, J. Huang, M. Schmittfull, K. Borg-
wardt, and B. Sch¨olkopf. Covariate shift by kernel mean
In J. Qui ˜A±onero-Candela, M. Sugiyama,
matching.
A. Schwaighofer, and N. D. Lawrence, editors, Dataset Shift
in Machine Learning. The MIT Press, 2008. 2

[26] G. Hinton, O. Vinyals, and J. Dean. Distilling the knowledge
in a neural network. arXiv preprint arXiv:1503.02531, 2015.
4

[27] J. Hoffman, D. Wang, F. Yu, and T. Darrell. FCNs in the
Wild: Pixel-level Adversarial and Constraint-based Adapta-
tion. arXiv preprint arXiv:1612.02649, 2016. 1, 2, 3, 5, 7, 8,
12

[28] S. Hong, J. Oh, H. Lee, and B. Han. Learning transferrable
knowledge for semantic segmentation with deep convolu-
In Proceedings of the IEEE Con-
tional neural network.
ference on Computer Vision and Pattern Recognition, pages
3204–3212, 2016. 3

[29] Z. Hu, X. Ma, Z. Liu, E. Hovy, and E. Xing. Harness-
ing deep neural networks with logic rules. arXiv preprint
arXiv:1603.06318, 2016. 4

[30] A. Khosla, T. Zhou, T. Malisiewicz, A. A. Efros, and A. Tor-
ralba. Undoing the damage of dataset bias. In European Con-
ference on Computer Vision (ECCV), pages 158–171, 2012.
2

[31] B. Kulis, K. Saenko, and T. Darrell. What you saw is not
what you get: Domain adaptation using asymmetric kernel
In IEEE Conference on Computer Vision and
transforms.
Pattern Recognition (CVPR), 2011. 1

[32] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-
based learning applied to document recognition. Proceed-
ings of the IEEE, 86(11):2278–2324, 1998. 3

[33] Z. Li and J. Chen. Superpixel segmentation using linear
spectral clustering. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 1356–
1363, 2015. 4

[34] T.-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona, D. Ra-
manan, P. Dollr, and C. L. Zitnick. Microsoft coco: Common
objects in context. In European Conference on Computer Vi-
sion, pages 740–755. Springer, 2014. 3

[35] J. Long, E. Shelhamer, and T. Darrell. Fully convolutional
networks for semantic segmentation. In Proceedings of the
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 3431–3440, 2015. 2, 3, 5

[36] M. Long, Y. Cao, J. Wang, and M. I. Jordan. Learning trans-
ferable features with deep adaptation networks. In Interna-
tional Conference on Machine Learning (ICML), 2015. 2, 3,
5, 8

[37] A. M. L´opez, J. Xu, J. L. Gomez, D. V´azquez, and
G. Ros. From virtual to real world visual perception us-
ing domain adaptation–the dpm as example. arXiv preprint
arXiv:1612.09134, 2016. 3

[38] R. Mottaghi, X. Chen, X. Liu, N.-G. Cho, S.-W. Lee, S. Fi-
dler, R. Urtasun, and A. Yuille. The role of context for object
detection and semantic segmentation in the wild. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 891–898, 2014. 5

[39] H. Noh, S. Hong, and B. Han. Learning deconvolution
network for semantic segmentation. In IEEE International
Conference on Computer Vision (ICCV), pages 1520–1528,
2015. 2, 3, 5

[40] S. J. Pan, J. T. Tsang, Ivor W.and Kwok, and Q. Yang. Do-
main adaptation via transfer component analysis. Transac-
tions on Neural Networks, 22(2):199 – 210, 2011. 1

[41] S. J. Pan and Q. Yang. A survey on transfer learning. Trans-
actions on Knowledge and Data Engineering, 22(10):1345–
1359, 2010. 1, 2

[42] G. Papandreou, L.-C. Chen, K. P. Murphy, and A. L. Yuille.
Weakly-and semi-supervised learning of a deep convolu-
In Pro-
tional network for semantic image segmentation.
ceedings of the IEEE International Conference on Computer
Vision, pages 1742–1750, 2015. 3

[43] V. M. Patel, R. Gopalan, R. Li, and R. Chellappa. Visual do-
main adaptation: A survey of recent advances. Signal Pro-
cessing Magazine, 32(3):53–69, 2015. 1, 2, 3

[44] D. Pathak, P. Krahenbuhl, and T. Darrell. Constrained con-
volutional neural networks for weakly supervised segmenta-
tion. In Proceedings of the IEEE International Conference
on Computer Vision, pages 1796–1804, 2015. 2, 3, 4

[45] X. Peng and K. Saenko.

Synthetic to real adaptation
with deep generative correlation alignment networks. arXiv
preprint arXiv:1701.05524, 2017. 3

[46] P. O. Pinheiro and R. Collobert. From image-level to pixel-
level labeling with convolutional networks. In Proceedings
of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1713–1721, 2015. 3

[47] S. R. Richter, V. Vineet, S. Roth, and V. Koltun. Playing
for data: Ground truth from computer games. In European
Conference on Computer Vision, pages 102–118. Springer,
2016. 3, 11, 12

[48] G. Ros, L. Sellart, J. Materzynska, D. Vazquez, and A. M.
Lopez. The synthia dataset: A large collection of synthetic
images for semantic segmentation of urban scenes. In Pro-
ceedings of the IEEE Conference on Computer Vision and
Pattern Recognition, pages 3234–3243, 2016. 1, 3, 5, 6, 8

[49] G. Ros, S. Stent, P. F. Alcantarilla, and T. Watanabe. Training
constrained deconvolutional networks for road scene seman-
tic segmentation. arXiv preprint arXiv:1604.01545, 2016. 3,
4

[50] K. Saenko, B. Kulis, M. Fritz, and T. Darrell. Adapting vi-
sual category models to new domains. In European Confer-
ence on Computer Vision (ECCV), pages 213–226, 2010. 2
[51] A. Shafaei, J. J. Little, and M. Schmidt. Play and learn: using
video Games to train computer vision models. arXiv preprint
arXiv:1608.01745, 2016. 3

[52] J. Shotton, M. Johnson, and R. Cipolla. Semantic texton
forests for image categorization and segmentation. In 2008
IEEE Conference on Computer Vision and Pattern Recogni-
tion, pages 1–8, June 2008. 3

[53] A. Shrivastava, T. Pﬁster, O. Tuzel, J. Susskind, W. Wang,
Learning from simulated and unsuper-
and R. Webb.
vised images through adversarial training. arXiv preprint
arXiv:1612.07828, 2016. 1, 3
[54] K. Simonyan and A. Zisserman.

Very deep convolu-
tional networks for large-scale image recognition. CoRR,
arXiv:1409.1556, 2014. 5

[55] B. Sun, J. Feng, and K. Saenko. Return of frustratingly easy
domain adaptation. In AAAI Conference on Artiﬁcial Intelli-
gence (AAAI), 2016. 1

[56] B. Sun and K. Saenko. From virtual to reality: Fast adap-
tation of virtual object detectors to real domains. In BMVA
British Machine Vision Conference (BMVC), 2014. 3
[57] C. Szegedy, S. Ioffe, V. Vanhoucke, and A. Alemi. Inception-
v4, inception-resnet and the impact of residual connections
on learning. arXiv preprint arXiv:1602.07261, 2016. 4, 7

[58] J. Tighe and S. Lazebnik. Superparsing: scalable nonpara-
metric image parsing with superpixels. In European confer-
ence on computer vision, pages 352–365. Springer, 2010. 3
[59] T. Tommasi, N. Patricia, B. Caputo, and T. Tuytelaars. A
deeper look at dataset bias. CoRR, arXiv:1505.01257, 2015.
2

[60] A. Torralba and A. A. Efros. Unbiased look at dataset bias.
In IEEE Conference on Computer Vision and Pattern Recog-
nition (CVPR), 2011. 2

[61] E. Tzeng, J. Hoffman, T. Darrell, and K. Saenko. Simul-
In IEEE

taneous deep transfer across domains and tasks.

International Conference on Computer Vision (ICCV), pages
4068–4076, 2015. 2, 3

[62] E. Tzeng, J. Hoffman, N. Zhang, K. Saenko, and T. Darrell.
Deep domain confusion: Maximizing for domain invariance.
CoRR, arXiv:1412.3474, 2014. 2

[63] D. Vazquez, A. M. L´opez, J. Mar´ın, D. Ponsa, and
D. Ger´onimo. Virtual and real world adaptation for pedes-
trian detection. Transactions of Pattern Recognition and Ma-
chine Analyses (PAMI), 36(4):797 – 809, 2014. 3

[64] Z. Wu, C. Shen, and A. v. d. Hengel. Wider or Deeper:
Revisiting the ResNet Model for Visual Recognition. arXiv
preprint arXiv:1611.10080, 2016. 3

[65] J. Xu, S. Ramos, D. Vazquez, and A. L´opez. Hierarchi-
cal adaptive structural svm for domain adaptation. CoRR,
arXiv:1408.5400, 2014. 3

[66] M. Yamada, L. Sigal, and Y. Chang. Domain adaptation for
structured regression. International journal of computer vi-
sion, 109(1-2):126–145, 2014. 2

[67] M. D. Zeiler. ADADELTA: an adaptive learning rate method.

arXiv preprint arXiv:1212.5701, 2012. 5

[68] C. Zhang, L. Wang, and R. Yang. Semantic segmentation
of urban scenes using dense depth maps. In European Con-
ference on Computer Vision, pages 708–721. Springer, 2010.
3

[69] H. Zhao, J. Shi, X. Qi, X. Wang, and J. Jia. Pyramid Scene
Parsing Network. arXiv preprint arXiv:1612.01105, 2016. 3

GTA→Cityscapes

The main text above has been accepted to IEEE Interna-
tional Conference on Computer Vision (ICCV) 2017. After
the paper submission, we have been continuously working
on the project and have got more results. We include them
below to complement the experiments in the main text.

The new experiment is basically the same as the one in
the main text except that we replace SYNTHIA with the
GTA dataset [47]. GTA is a synthetic, vehicle-egocentric
image dataset collected from the open world in the realisti-
cally rendered computer game Grand Theft Auto V (GTA,
or GTA5). It contains 24,996 images, whose semantic seg-
mentation annotations are fully compatible with the classes
used in Cityscapes. Hence we use all the 19 ofﬁcial training
classes in our experiment. The results are shown in Table 3.
As in the main text, the same observations about our ap-
proach apply here. Additionally, we note that the results
are overall better than those adapting from SYNTHIA to
Cityscapes. This is not surprising, because the GTA images
are more photo-realistic than SYNTHIA’s.

Table 3: Comparison results for the semantic segmentation of the Cityscapes images [12] by adapting from GTA [47].

Class-wise IoU

Method %

IoU

NoAdapt [27]
FCN Wld [27]
NoAdapt
Ours (I)
Ours (SP)
SP Lndmk
SP
Ours (I+SP)

21.1
27.1
22.3
23.1
27.8
21.4
26.8
28.9

e
k
i
b

0.0
0.0
13.8
9.5
15.6
0.0
0.3
14.6

e
c
n
e
f

3.1
5.4
8.7
9.4
11.7
0.0
4.1
11.9

l
l
a
w

7.4
14.9
7.3
10.2
5.7
0.0
7.6
6.0

n
g
i
s
-
t

1.0
2.7
16.8
14.0
12.0
0.0
0.0
11.1

e
l
o
p

16.0
10.9
21.0
20.2
9.2
0.0
0.2
8.4

e
k
i
b
m

0.0
3.5
4.3
3.8
12.9
0.0
0.9
16.8

t
h
g
i
l
-
t

10.4
14.2
14.9
13.6
15.5
0.0
0.0
16.3

y
k
s

58.9
64.6
64.4
63.8
64.9
82.9
81.6
66.5

s
u
b

3.7
7.3
5.0
3.4
15.5
10.0
25.3
18.9

r
e
d
i
r

1.0
4.2
17.5
10.6
9.1
0.0
3.5
9.3

g
e
v

76.5
79.2
45.9
56.9
74.6
74.5
73.0
75.7

n
i
a
r
r
e
t

13
21.3
2.4
2.8
11.1
22.5
32.1
13.3

n
i
a
r
t

0.0
0.0
6.9
10.9
0.0
0.0
0.0
0.0

g
d
l
b

47.7
62.1
64.1
69.7
70.5
69.9
71.0
71.7

r
a
c

67.1
70.4
55.3
60.5
56.1
52.7
61.9
55.2

n
o
s
r
e
p

36
44.1
41.6
31.8
34.8
13.1
26.2
38.0

k
c
u
r
t

9.5
8.0
8.4
10.9
15.9
11.2
30.4
18.8

k
l
a
w
e
d
i
s

18.9
32.4
6.8
10.8
21.8
8.0
19.2
22.0

d
a
o
r

31.9
70.4
18.1
26.4
72.1
61.8
71.8
74.9

