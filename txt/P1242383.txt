8
1
0
2
 
v
o
N
 
0
3
 
 
]

V
C
.
s
c
[
 
 
1
v
1
5
7
2
1
.
1
1
8
1
:
v
i
X
r
a

Domain-Invariant Adversarial Learning for Unsupervised Domain Adaption

Yexun Zhang1, Ya Zhang1, Yanfeng Wang1, and Qi Tian2

1Cooperative Medianet Innovation Center, Shanghai Jiao Tong University
2Huawei Noah’s Ark Lab
{zhyxun,ya zhang,wangyanfeng}@sjtu.edu.cn, tian.qi1@huawei.com

Abstract

Unsupervised domain adaption aims to learn a powerful
classiﬁer for the target domain given a labeled source data
set and an unlabeled target data set. To alleviate the effect
of ‘domain shift’, the major challenge in domain adapta-
tion, studies have attempted to align the distributions of the
two domains. Recent research has suggested that generative
adversarial network (GAN) has the capability of implicitly
capturing data distribution. In this paper, we thus propose
a simple but effective model for unsupervised domain adap-
tion leveraging adversarial learning. The same encoder
is shared between the source and target domains which is
expected to extract domain-invariant representations with
the help of an adversarial discriminator. With the labeled
source data, we introduce the center loss to increase the
discriminative power of feature learned. We further align
the conditional distribution of the two domains to enforce
the discrimination of the features in the target domain. Un-
like previous studies where the source features are extracted
with a ﬁxed pre-trained encoder, our method jointly learns
feature representations of two domains. Moreover, by shar-
ing the encoder, the model does not need to know the source
of images during testing and hence is more widely applica-
ble. We evaluate the proposed method on several unsuper-
vised domain adaption benchmarks and achieve superior or
comparable performance to state-of-the-art results.

1. Introduction

Deep neural networks have drawn broad attention due to
its impressive performance on a variety of tasks. Training a
deep neural network usually requires a large labeled dataset.
However, collecting and annotating a dataset for each new
task is time-consuming and expensive. Fortunately, there
are often a large amount of data available from other re-
lated domains and tasks and using the auxiliary data may
alleviate the necessity of annotating a new dataset. How-

ever, due to factors such as image condition and illumina-
tion, datasets from two domains usually have different dis-
tributions. When the model trained on one dataset is tested
on the other, the performance often greatly drops due to the
‘domain shift’ problem. Domain adaption, as a sub-line of
transfer learning, aims to solve the ‘domain shift’ problem.

For unsupervised domain adaption, where all samples
in the target domain are unlabeled, many studies try to
align the statistical distributions of the source and tar-
get domains using various mechanisms, such as maximum
mean discrepancy (MMD) [13, 16, 18], correlation align-
ment (CORAL) [24, 25] and Kullback-Leibler (KL) diver-
gence [34]. Recently, adversarial learning is adopted to
align the distributions by extracting features which are in-
distinguishable by the domain discriminator [28]. Usually
two separate encoders are trained, one for source domain
and one for target domain. The source encoder is usually
pretrained ﬁrst and ﬁxed during domain adaption.

In this paper, we propose a simple but effective model for
unsupervised domain adaption. Inspired by the fact that hu-
mans can correctly recognize an object without being aware
of its domain, we design a Domain-Invariant Adversarial
Learning (DIAL) network, consisting of an encoder, a clas-
siﬁer, and a discriminator (Fig. 1), for representations that
are both domain-invariant and discriminative. Unlike the
models using two separate feature extractors for the source
and target domains, DIAL shares a single encoder between
two domains and has no need to know the source of im-
ages during testing. The extracted features are then sent
to the adversarial discriminator. The encoder and the dis-
criminator play a min-max game, with the goal that the
source of features cannot be distinguished by the discrim-
inator. In this way, the encoder is expected to learn domain-
invariant representations and ignore domain-speciﬁc infor-
mation. Furthermore, to enforce the discriminative power of
feature representations, with the labeled data in the source
domain, we introduce the center loss. We also align the con-
ditional distribution of the source and target domains, which

1

Figure 1: The detailed architecture of the proposed DIAL network for unsupervised domain adaption.

has been largely ignored by existing adversarial-based do-
main adaption methods. However, aligning conditional dis-
tribution P (Y |X) is quite challenging due to the absence of
labels in target domain. We thus resort to the pesudo labels
in target domain and align the class-conditional distribution
P (X| ˆY ), which is expected to guide the target features to
fall into correct clusters. With the above design, the feature
representations of the two domains are learned simultane-
ously, unlike previous studies where the source features are
ﬁxed during adaptation.

We evaluate the proposed DIAL on several unsupervised
benchmarks and achieve new state-of-the-art results. The
main contributions of this paper are summarized as follow-
ing.
• We propose a simple but effective model for unsu-
pervised domain adaption, which is shown to extract
domain-invariant and discriminative features for source
and target images.

• The model shares one feature extractor between two do-
mains and has no need to know the source of images dur-
ing testing.

• We introduce the center loss in order to learn more dis-

criminative feature representations.

• Besides the marginal distribution, we also align the con-

ditional distributions of source and target domain.

• We evaluate the proposed method on several unsuper-
vised domain adaption benchmarks and achieve new
state-of-the-art results.

2. Related Work

For unsupervised domain adaption, the main approach is
to guide the feature learning by minimizing the difference
between the distributions of source domain and target do-
main. Several methods have used the MMD to measure the
difference of distributions. [18] proposed the transfer com-
ponent analysis (TCA) to minimize the discrepancy of two
domains in a Reproducing Kernel Hilbert Space (RKHS)
using MMD. Then, [13, 29] extended the MMD to deep
neural networks and achieved great success. Rather than

using a single adaption layer and linear MMD, Long et al.
[13] proposed the deep adaptation network (DAN) which
matches the shift in marginal distributions across domains
by adding multiple adaptation layers and exploring multi-
ple kernels. Further, Long et al. proposed a joint adapta-
tion network (JAN) [15] which aligns the shift in the joint
distributions of input images and output labels. Different
than MMD, CORAL [24] learns a linear transformation that
aligns convariance of the source and target domains. Then,
Sun et al. [25] extended CORAL to deep neural networks.
Another commonly used metric to measure the discrepancy
between domains is central moment discrepancy (CMD)
[32], which restrains the domain discrepancy by matching
the higher-order moments of the domain distributions.

Inspired by the generative adversarial networks (GANs)
[5], adversarial learning is introduced to restrain the domain
discrepancy by learning representations which is simultane-
ously discriminative in source labels and indistinguishable
in domains. Tzeng et al. proposed the adversarial discrim-
inative domain adaption (ADDA) [28], which uses GANs
to train an encoder for target samples, by making the fea-
tures extracted with this encoder indistinguishable from the
ones extracted through an encoder trained with source sam-
ples. Then, Volpi et al. [30] extended the ADDA frame-
work by forcing the learned feature extractor to be domain-
invariant and training it through data augmentation in the
feature space.

Other methods have chosen generative methods to mini-
mize the domain discrepancy. In [4], a deep reconstruction-
classiﬁcation network (DRCN) is introduced to learn com-
mon representations for both domains through the joint
optimization of supervised classiﬁcation of labeled source
data and unsupervised reconstruction of unlabeled target
data. In [1], Bousmalis et al. proposed the domain separa-
tion network (DSN) which explicitly learns to extract image
representations that are partitioned into two components,
one for the private information of each domain (domain fea-
ture) and the other for the shared representation across do-
mains (content feature), to reconstruct the images and fea-

2

tures from both domains.

Recently, image-to-image translation based methods are
proposed for domain adaption by transferring images into
target domain and then directly training classiﬁers on them.
Taigman et al. proposed the Domain Transfer Network
(DTN) [27] which is optimized by a compound loss func-
tion including a multi-class GAN loss, an f-constancy com-
ponent, and a regularizing component that encourages the
transfer network to map samples from target domain to
themselves. This network can transfer one image from the
source domain to the target domain. In [12], Liu and Tuzel
introduced the coupled GANs (CoGAN) which can learn a
joint distribution across multiple domains without require-
ment for paired images. CoGAN consists of a pair of GANs
and each has a generative model for synthesizing realistic
images in one domain and a discriminative model for clas-
sifying whether an image is real or synthesized. It can be
applied for domain adaption by attaching a softmax layer to
the last hidden layer of the discriminator, and jointly solv-
ing the classiﬁcation problem in the source domain and the
CoGAN learning problem. As an extension of CoGAN, Liu
et al. proposed the unsupervised image-to-image translation
(UNIT) [11] network, which combined the GANs with vari-
ational auto-encoders (VAEs) and achieved unsupervised
image-to-image translation based on the shared-latent space
assumption. Lu et al. proposed the duplex GAN (Dup-
GAN) [8] to achieve domain invariant feature extraction
and domain transformation. Cycle-Consistent Adversarial
Domain Adaptation (CyCADA) proposed in [7] adapts rep-
resentations at both the pixel-level and feature-level while
enforcing semantic consistency, which achieved satisfying
performance on both digital classiﬁcation and semantic seg-
mentation.

3. Model

In this section, we introduce the proposed DIAL net-
work in detail, whose architecture is displayed in Fig. 1.
The whole network is elegant and consists of an encoder,
a classiﬁer and an adversarial discriminator. Our goal is
to learn both domain-invariant and discriminative features
which will beneﬁt the domain adaption. In the following,
we will introduce how we achieve this.

3.1. Domain-invariant Feature Extraction

For unsupervised domain adaption, extracting domain-
invariant features is critical to alleviate the effect of the do-
main shift. In previous studies [20, 28], totally separate or
partially tied feature extractors are usually used for source
domain and target domain. However, in this study, we
ﬁnd that sharing a single feature extractor between source
and target domain seems more effective to learn domain-
invariant features for unsupervised domain adaption.

In Figure 1, the images from the source domain and tar-
get domain are passed through one shared encoder E and
we aim to extract features which only contain the infor-
mation about the content of the image, namely domain-
invariant features. Here, we adopt the adversarial learning
and add a discriminator to distinguish which domain the ex-
tracted feature is from and simultaneously, the encoder tries
to extract features which are indistinguishable for the dis-
criminator. The following adversarial loss is applied:

min
θE

max
θD

LGAN =

logD(E(xi))

(1)

(cid:88)

+

xi∈Xs
(cid:88)

xi∈Xt

log(1 − D(E(xi)))

where D(·) is the probability of being source features pre-
dicted by the discriminator D, θE and θD are parameters
of encoder E and discriminator D, Xs and Xt are distri-
butions of samples in source domain and target domain, re-
spectively.

Although the inputs of the encoder are from two different
domains, the extracted features cannot be distinguished by
the discriminator about domains. By this limited condition,
we expect the encoder to only extract the content informa-
tion which is shared between these two domains and ignore
the private domain information. Besides, with the shared
encoder, the model can receive images from both source
domain and target domain and we do not need to know the
source of images during testing.

3.2. Discriminative Feature Extraction

Since we have labels for samples in the source domain,
the features of the source domain will be classiﬁed by the
classiﬁer C, which is a fully connected softmax layer with
the size dependent on the task. The optimization function
for the classiﬁcation of the labeled data in source domain is
deﬁned as:

min
θE ,θC

Ls =

(cid:88)

(xi,yi)∈(Xs,Ys)

H(C(E(xi)), yi)

(2)

where H(·) is the cross entropy loss used in the softmax
layer, (Xs, Ys) is the distribution of samples and labels in
the source domain and θC are parameters of the classiﬁer.

Furthermore, it is important to keep the discriminative
power of feature representations during domain adaption.
Although the distributions of source and target domains
are aligned, there may sill be some samples falling into
inter-class gaps, which proposes the requirement for learn-
ing more discriminative features. In the learning literature,
there exists several methods for learning discriminative fea-
tures, such as the triplet loss [22], the contrastive loss [26]
and the center loss [31]. Both the triplet loss and the con-
trastive loss need to construct a lot of image pairs and com-
pute the distance between images of each pair, which is

3

computationally complicated. Therefore, in this study, we
introduce the center loss, which can be ﬂexibly combined
with the above classiﬁcation loss.

For samples in source domain which have labels, we
adopt the following loss to cluster the features belonging
to the same class:

where p(xi) is a K-dimensional vector with the i-th dimen-
sion being the predicted probability of belonging to i-th
class, max(p(xi)) is the probability of sample xi belong-
ing to the predicted class, and T is the threshold we set. By
this way, samples in target domain are expected to fall into
corresponding clusters.

Therefore, the total objective function of the model can

min
θE

Lcs =

(xi,yi)∈(Xs,Ys)

(cid:88)

||E(xi) − cyi||2
2

(3)

be formulated as:

where cyi is a d-dimensional vector representing the center
of the yi-th class. Ideally, each class center should be cal-
culated using the features of all samples belonging to that
class. But due to we optimize the model with mini-batch
samples, it is difﬁcult to compute the average of all sam-
ples. Therefore, we ﬁrst initialize the class center by the
batch in the ﬁrst iteration, then update the centers by the
following strategy:

ct+1
k = ct

k − γ∆ct
k,

k = 1, 2, . . . , K

(4)

where ct
k is the center for the k-th class in iteration t, γ is the
learning rate for updating the centers, K is the total number
of classes and

(cid:80)

(xi,yi)∈Bt I(yi = k)(ct

k − E(xi))

(5)

∆ct

k =

1 + Nk

where Bt represents the mini-batch in iteration t, I(·) is an
indicator function and Nk = (cid:80)
(xi,yi)∈Bt I(yi = k) is the
number of samples in batch Bt which belong to class k.

3.3. Conditional Distribution Alignment

In existing adversarial-based domain adaption methods,
only marginal distribution adaption is concerned by align-
ing the distribution P (X). However, as veriﬁed in some
previous research [14], the conditional distribution P (Y |X)
of two domains may also be different. Since we have no
labels for target domain, directly aligning the P (Y |X) is
challenging. Inspired by [14, 30], we explore the pseudo
labels of target samples and resort to explore the sufﬁcient
statistics of class-conditional distributions P (X|Y ) instead
as done in [14].

Therefore, for unlabeled samples in target domain, we
assign each sample with the pesudo label predicted by the
source classiﬁer and deﬁne the following loss:

min
θE

Lct =

(cid:88)

xi∈Φ(Xt)

||E(xi) − cˆyi||2
2

(6)

where ˆyi is the label of xi predicted by the classiﬁer C.
Since not all the predicted labels are accurate, we calculate
the above Lct only on Φ(Xt) which is a subset of Xt and
the samples in it satisfy:

Φ(Xt) = {xi|xi ∈ Xt and max(p(xi)) ≥ T }

(7)

min
θE ,θC

max
θD

LGAN + αLs + β1Lcs + β2Lct

(8)

where α, β1 and β2 are weighted parameters.

4. Experiments

In this section, we evaluate the proposed method by com-
paring it with several state-of-the-art methods for unsuper-
vised domain adaption. We ﬁrst introduce the datasets we
used. Then, we introduce the implementation details and
ﬁnally, the experimental results are analyzed in detail.

4.1. Datasets

Digital Dataset For digit classiﬁcation, the datasets of
MNIST [10], USPS [2] and SVHN [17] are used for evalu-
ating all of the methods. All three datasets contain images
of digits 0-9 but with different styles. MNIST is composed
of 60,000 training and 10,000 testing images. USPS con-
sists of 7,291 training and 2,007 testing images. SVHN
contains 73,257 training, 26,032 testing and 531,131 extra
training images. Following [30], we evaluate the adaption
between MNIST and USPS by setting two protocols. For
the ﬁrst protocol (P1), we follow the training protocol es-
tablished in [14] and randomly sampled 2,000 MNIST im-
ages and 1,800 USPS images for training. The second pro-
tocol (P2) uses the whole MNIST training set and USPS
training set. For both P1 and P2, we evaluate the two di-
rections of the split (MNIST→USPS and USPS→MNIST).
For the adaption of SVHN and MNIST, we only evaluate on
SVHN→MNIST following previous studies [28, 30]. All
images in MNIST and USPS are transformed to be RGB
with size 32×32 which is the size of images in SVHN.

Ofﬁce-31 Dataset The Ofﬁce-31 dataset consists of
4,110 images spread across 31 classes in 3 domains: Ama-
zon (2,817 images), Webcam (795 images), and Dslr (498
images). We compare the methods on all of the six combi-
nation pairs of the three domains: A↔W, A↔D and W↔D.
Following previous work [28], we train the model on all la-
beled data in source domain and all unlabeled data in target
domain, and then test it on the data in target domain.

ImageCLEF-DA Dataset ImageCLEF-DA [33] is a
benchmark dataset for ImageCLEF 2014 domain adaptation
challenge, which is collected by selecting the 12 common
categories shared by the following three public datasets,
each is considered as a domain: Caltech-256 (C), ImageNet

4

MNIST→USPS(P1) USPS→MNIST(P1) MNIST→USPS(P2) USPS→MNIST(P2) SVHN→MNIST

Method
Source
DANN [3]
ADDA [28]
UNIT [11]
CoGAN [12]
DI [30]
DIFA [30]
CyCADA [7]
DupGAN [8]
SimNet [19]
ACGAN [21]
DIAL (ours)
Target

74.59±1.30
77.1±1.8
89.4±0.2
-
91.2±0.8
91.4±0.0
92.3±0.1
-
-
-
92.8
95.02±0.22
95.65±0.14

60.54±1.33
73.0±2.0
90.1±0.8

89.1±0.8
87.9±0.5
89.7±0.5
-
-
-
90.8
97.28±0.25
97.83±0.49

86.33±0.47
-
-
95.97
95.65
95.4±0.2
96.2±0.2
95.6±0.2
96.0
96.4
95.3
97.06±0.20
96.71±0.18

67.49±1.34
-
-
93.58
93.15
-
-
96.5±0.1
98.75
95.6
-
99.12±0.06
99.36±0.04

67.95±0.89
73.9
76.0±1.8
90.53
-
85.1±2.6
89.2±2.0
90.4±0.4
92.46
-
92.4
95.85±0.81
99.36±0.04

Table 1: Comparison results of different models for unsupervised domain adaption on the digital dataset.

ILSVRC 2012 (I), and Pascal VOC 2012 (P). There are 50
images in each category and 600 images in each domain.
We follow [15] and [33] to report our results for six settings.

4.3. Results

4.2. Implementation Details

For experiments on digital classiﬁcation, we use the sim-
ple modiﬁed LeNet architecture following previous work
[28]. The discriminator is composed of 3 fully connected
layers: two layers with 500 hidden units followed by the ﬁ-
nal discriminator output. Each of the 500-unit layers uses
a ReLU activation function. The whole network is opti-
mized by the RMSPropOptimizer with batch size 64 for
MNIST↔USPS in P1 and 256 for other cases. We set
the initial learning rate being 0.001 and decaying 0.5 times
for very 60 epochs. The threshold T is set to be 0.99 for
all cases. We train the model progressively with α=10,
β1=0.001 and β2=0 for the ﬁrst 30 epochs and then we
change β1=β2=0.002 for another 30 epochs and then train
the model with β1=β2=0.02 until convergence.

For Ofﬁce-31 and ImageCLEF-DA dataset, we adopt the
ResNet-50 [6] as the base model which is pretrained on Im-
ageNet, and the activations of the last layer pool5 are used
as the image representations. Since the dataset is small, we
only ﬁne-tune the last block and the fully-connected layer
of ResNet-50. We optimize the network by the Stochastic
Gradient Descent (SGD) optimizer with the momentum of
0.9 and batch size 64, namely total 128 images from the
source and target domain. We set the initial learning rate
as 0.001 and decay 0.5 times for every 50 epochs to avoid
over-ﬁtting. Similarly, we ﬁrst train the model with α=10,
β1=0.001 and β2=0 for 50 epochs and β1=β2=0.002 for an-
other 50 epochs and then train the model with β1=β2=0.01
until convergence. The learning rate γ for updating centers
is set to be 0.5 in all cases. For fair comparison, we conduct
each experiment for several times with random initialization
and show the mean±std as the result.

5

In this section, we will ﬁrst display and analyze the ex-
perimental results on both digital classiﬁcation and object
recognition tasks. Then ablation study is conducted and ﬁ-
nally, we visualize the features extracted by the encoder to
further verify the proposed DIAL model.

4.3.1 Results on Digital Classiﬁcation

For experiments on digital classiﬁcation, we compare the
proposed method with state-of-the-art methods to verify the
effectiveness of the proposed method. The results are dis-
played in Table 1. The row of “Source” reports the ac-
curacies on target data achieved by non-adapted classiﬁers
trained on the source data. And the row of “Target” reports
the results on target data achieved by classiﬁers trained on
target data. Since we follow the same experimental settings
with most compared methods, we directly copy the results
from corresponding papers.

As observed in Table 1, deep transfer learning mod-
els perform better than non-adapted classiﬁers trained on
the source data, indicating that integrating domain adap-
tion modules into deep networks will help reduce the do-
main discrepancy. Among the deep transfer learning mod-
els, our proposed method outperforms all baselines on all
In particular, our method improves the accuracy
tasks.
for a large margin even on difﬁcult transfer tasks, e.g.
SVHN→MNIST, where the SVHN dataset contains signiﬁ-
cant variations in scale, background, rotation and so on, and
there is only slightly variation in the digits shapes, which
makes it substantially different from MNIST dataset. These
experimental results demonstrate that the proposed method
is effective for unsupervised domain adaption with large
scale datasets. We owe the improvements to three points.
First, we share one encoder between the source domain and
target domain to extract domain-invariant representations
and the features of source and target domains are jointly

Method
AlexNet [9]
DDC [29]
DAN [13]
DANN [3]
JAN [15]
VGG-16 [23]
CMD [32]
ResNet-50 [6]
DDC [29]
ADDA [28]
DAN [13]
DANN [3]
JAN [15]
SimNet [19]
ACGAN [21]
iCAN [33]
DIAL (ours)
DIAL (ours best)

A→W
61.6±0.5
61.8±0.4
68.5±0.5
73.0±0.5
75.2±0.4
67.6±0.6
77.0±0.6
68.4±0.2
75.6±0.2
75.1
80.5±0.4
82.0±0.4
86.0±0.4
88.6±0.5
89.5±0.5
92.5
91.7±0.4
92.1

D→W
95.4±0.3
95.0±0.5
96.0±0.3
96.4±0.3
96.6±0.2
96.1±0.3
96.3±0.4
96.7±0.1
96.0±0.2
97.0
97.1±0.2
96.9±0.2
96.7±0.3
98.2±0.2
97.9±0.3
98.8
97.1±0.3
97.5

W→D
99.0±0.2
98.5±0.4
99.0±0.3
99.2±0.3
99.6±0.1
99.2±0.2
99.2±0.2
99.3±0.1
98.2±0.1
99.6
99.6±0.1
99.1±0.1
99.7±0.1
99.7±0.2
99.8±0.4
100.0
99.8±0.0
99.8

A→D
63.8±0.5
64.4±0.3
67.0±0.4
72.3±0.3
72.8±0.3
73.9±0.9
79.6±0.6
68.9±0.2
76.5±0.3
-
78.6±0.2
79.7±0.4
85.1±0.4
85.3±0.3
87.7±0.5
90.1
89.3±0.4
89.6

D→A
51.1±0.6
52.1±0.6
54.0±0.5
53.4±0.4
57.5±0.2
58.2±0.5
63.8±0.7
62.5±0.3
62.2±0.4
-
63.6±0.3
68.2±0.4
69.2±0.4
73.4±0.8
72.8±0.3
72.1
71.7±0.7
72.7

W→A
49.8±0.4
52.2±0.4
53.1±0.5
51.2±0.5
56.3±0.2
57.8±0.4
63.3±0.6
60.7±0.3
61.5±0.5
-
62.8±0.2
67.4±0.5
70.7±0.5
71.8±0.6
71.4±0.4
69.9
71.4±0.2
71.5

Average
70.1
70.6
72.9
74.3
76.3
75.5
79.9
76.1
78.3
-
80.4
82.2
84.6
86.2
86.5
87.2
86.8
87.2

Table 2: Comparison results of different models for unsupervised domain adaption the Ofﬁce-31 dataset.

Method

I→P P→I I→C C→I C→P P→C Avg.
ResNet-50 [6] 74.6 82.9 91.2 79.8 66.8 86.9 80.4
74.5 82.2 92.8 86.3 69.2 89.8 82.5
DAN [13]
RTN [16]
74.6 85.8 94.3 85.9 71.7 91.2 83.9
75.6 84.0 93.0 86.0 71.7 87.5 83.0
DANN [3]
76.8 88.0 94.7 89.7 74.2 91.7 85.8
JAN [15]
iCAN [33]
79.5 89.7 94.7 89.9 78.5 92.0 87.4
DIAL (ours) 79.6 90.7 95.7 90.6 77.0 93.5 87.9

Table 3: Comparison results of different models for unsu-
pervised domain adaption on the ImageCLEF-DA dataset.
“Avg.” represents the average score.

learned. Secondly, we extract discriminative features by in-
tegrating the classiﬁcation loss with the center loss, which
makes samples of the same class more compact. Thirdly,
rather than only aligning the marginal distributions, we also
align the class-conditional distribution P (X|Y ) of the two
domains, by which samples in target domain will be guided
to fall into corresponding class clusters.

4.3.2 Results on Ofﬁce-31

In contrast to digital classiﬁcation which has a large dataset,
object recognition on ofﬁce-31 is a task where both source
and target domains only have a small number of samples.
The comparison results of the proposed method and state-
of-the-art methods are shown in Table 2. For fair compari-
son, the results of compared methods are copied from pub-
lished papers. The “AlexNet”, “VGG-16” and “ResNet50”
display the results on target domain obtained by ﬁne-tuning
the AlexNet, VGG-16 and ResNet-50 respectively using the
source data, which are pretrained on ImageNet. Besides the

mean value and the standard deviation, we also show the
best performance achieved by our model on each task in the
row “DIAL (ours best)”.

As shown in Table 2, our proposed approach achieves su-
perior or comparable performance to state-of-the-art results,
demonstrating that our method is also effective for unsuper-
vised domain adaption when source domain and target do-
main only have a small number of samples. It is worth not-
ing that our method signiﬁcantly improves the accuracies
on difﬁcult tasks compared with JAN, such as A→W and
A→D where samples in source domain and target domain
are very different, and W→A and D→A where the size
of the source domain is very small. Besides, our method
achieves comparable results with state-of-the-art methods,
such as ACGAN and iCAN. However, our model is more
elegant than ACGAN and iCAN, where ACGAN is based
on the Auxiliary Classiﬁer GAN and iCAN adopted com-
plicated tricks to select pseudo-labelled target samples. In
addition, models based on VGG-16 and ResNet-50 perform
better than AlexNet-based models which implies that very
deep models like VGG-16 and ResNet-50 not only learn
better representations for general learning tasks but also
learn more generalizable features for domain adaption.

4.3.3 Results on ImageCLEF-DA

Different from Ofﬁce-31 where different domains are of
different sizes, the three domains in ImageCLEF-DA are
of equal size, which makes it a good complement
to
Ofﬁce-31 for more controlled experiments. The results on
ImageCLEF-DA dataset are shown in Table 3, where we
only show the mean value of multiple experiments due to

6

Method
MLs+LGAN
MLs+LGAN +Lcs
MLs+LGAN +Lcs+Lct

MNIST→USPS(P1) USPS→MNIST(P1) MNIST→USPS(P2) USPS→MNIST(P2) SVHN→MNIST

91.56±0.91
93.52±0.81
95.02±0.22

93.81±1.36
96.89±0.99
97.28±0.25

96.29±0.39
96.06±0.30
97.06±0.20

98.89±0.11
99.06±0.05
99.12±0.06

88.34±0.89
89.27±1.76
95.85±0.81

Table 4: Ablation study on the digital dataset.

Method
MLs+LGAN
MLs+LGAN +Lcs
MLs+LGAN +Lcs+Lct

A→W
81.33±0.76
90.00±0.96
91.72±0.42

D→W
96.49±0.32
96.18±0.23
97.15±0.31

W→D
96.99±0.49
99.68±0.1
99.8±0.00

A→D
78.35±0.75
84.48±1.18
89.29±0.38

D→A
61.90±0.30
68.64±0.82
71.72±0.73

W→A
66.30±0.36
69.08±0.96
71.35±0.24

Average
80.31
84.68
86.84

Table 5: Ablation study on the Ofﬁce-31 dataset.

the limited space. As we can observe, the proposed method
performs better than state-of-the-art methods on most cases
except the C→P, where iCAN performs best with the care-
fully selected pesudo-labelled target samples.

4.3.4 Ablation Study

To verify the effectiveness of each component in our model,
we conduct ablation study on digital dataset and Ofﬁce-
31 dataset. We trained another two models: one model
is trained only using the softmax loss and the GAN loss
which is denoted as “MLs+LGAN ”, and the other model is
trained using the softmax loss, the GAN loss and the cen-
ter loss for the source domain Lcs, which is denoted as
“MLs+LGAN +Lcs”. We compare the two models with the
model trained with all losses and the results are shown in
Table 4 and Table 5.

As shown in these tables, after removing one or more
parts, the performance degrades in most cases. The more
parts are removed, the worse the performance is. This indi-
cates that all parts are reasonably designed and they work
harmoniously forming an effective solution for unsuper-
vised domain adaption. Comparing Table 1 and Table 4, we
can observe that “MLs+LGAN ” performs better than mod-
els which use two different encoders for source domain and
target domain, such as ADDA, indicating that sharing one
feature extractor between two domains is better for unsu-
pervised domain adaption to extract domain-invariant fea-
tures. In addition, “MLs+LGAN ” performs better than DI
model which also shares one encoder for source and tar-
get domains. The difference between the DI model and
“MLs+LGAN ” lies in the way of distribution alignment. In
DI model, the features of the two domains extracted by
the encoder will be aligned with features from a pretrained
source encoder. But in “MLs+LGAN ”, the features sent into
the discriminator are from the shared being trained encoder,
namely the features of source domain and target domain
are jointly learned. Experimental results demonstrate that
jointly learning the feature representation for source do-
main and target domain is better. In Table 4 and Table 5,
“MLs+LGAN +Lcs” performs better than “MLs+LGAN ” on

Source MLs MLs+LGAN MLs+Lcs MLs+LGAN +Lcs
M(P1) 97.83
M(P2) 99.36
U(P1) 95.65
U(P2) 96.71
92.44
96.40

98.34
99.52
96.62
97.54
91.16
96.64

98.56
98.34
96.51
97.02
93.34
96.75

97.56
99.43
95.28
96.98
92.18
96.29

S
Avg.

Table 6: Results on test dataset in source domain classi-
ﬁed with model MLs and MLs+Lcs and the domain adapted
models MLs+LGAN and MLs+LGAN +Lcs . M: MNIST, U:
USPS, S: SVHN. “Avg.” represents the average accuracy.

most tasks, showing that keeping the discriminative power
of learned representations in source domain helps to learn
a better classiﬁer. Furthermore, after adding the loss Lct,
the accuracies are improved further, indicating that align-
ing the class-conditional distribution P (X|Y ) is helpful for
unsupervised domain adaption.

Besides, we evaluate the models MLs and MLs+Lcs and
the corresponding domain adapted models MLs+LGAN and
MLs+LGAN +Lcs on test set in source domain, and the re-
sults are shown in Table 6. As observed, the accuracies have
little change before (96.40 and 96.75) and after (96.29 and
96.64) adaption, implying that our model can still keep good
performance on source domain after domain adaption and
simultaneously improve the performance on target domain.
Therefore, the model does not need to know the source of
images during testing and hence is more widely applicable.

4.3.5 Feature Visualization

To understand the proposed DIAL network more intuitively,
in Fig. 2, we visualize the t-SNE embeddings of features ex-
tracted by four models trained with different loss functions.
In ﬁgures (a)-(d), we plot the distribution from category per-
spective and each color represents one category. In ﬁgures
(e)-(h), we plot the distribution from domain perspective
with red color and blue color representing source domain
and target domain respectively. As shown in (a) and (e), the

7

(a) Ls (68.9)

(b) Ls+LGAN (78.35)

(c) Ls+LGAN +Lcs (84.48)

(d) Ls+LGAN +Lcs+Lct (89.29)

(e) Ls (68.9)

(f) Ls+LGAN (78.35)

(g) Ls+LGAN +Lcs (84.48)

(h) Ls+LGAN +Lcs+Lct (89.29)

Figure 2: The t-SNE visualization of features extracted by models trained with different loss functions for A→D task (best
viewed in color). In ﬁgures (a)-(d) we plot the distribution from category perspective and each color represents one class. In
ﬁgures (e)-(h), we plot the distribution from domain perspective and points in red color represents samples from the source
domain and blue points are samples from target domain. The values in parenthesis are corresponding accuracies.

features of these two domains are separately distributed and
there exists an obvious separation between features in two
domains. In ﬁgures (b) and (f), after domain adaption, the
features of two domains are merged in distribution and can-
not be distinguished about the domain, which beneﬁts from
the domain-invariant feature extraction. However, there are
many points scattered in the inter-class gap, whose labels
may be misclassiﬁed with large possibility. After introduc-
ing the center loss on source samples, the features are more
compacted and form clear clusters as observed in ﬁgures (c)
and (g), indicating that the features learned are much more
discriminative. Furthermore, since the model tries to extract
domain-invariant features, the center loss for source sam-
ples also enforces the features in target domain like clusters.
But they may fall into incorrect clusters, seeing the center
cluster in ﬁgure (c), containing points of many colors. As
shown in ﬁgures (d) and (h), after adding the Lct, the num-
ber of misclustered points decreased and more points fall
into correct areas, which indicates that aligning the condi-
tional distribution will guide more target samples to correct

clusters. Through the feature visualization, we further vali-
date the effectiveness of each component in the DIAL net-
work.

5. Conclusion

In this paper, we propose a Domain-Invariant Adver-
sarial Learning (DIAL) network for unsupervised domain
adaption, which is shown to extract both domain-invariant
and discriminative features for source and target images.
DIAL consists of an encoder, a classiﬁer and an adversar-
ial discriminator. The encoder is totally shared between
the source and target domains, which is expected to learn
domain-invariant features with the help of an adversarial
discriminator. By sharing the encoder, the features of source
and target domains can be jointly learned and the model
does not need to know the source of images during testing
and hence is more widely applicable. To learn discrimina-
tive features, we introduce the center loss. We also resort to
the pesudo labels in target domain and align the conditional

8

distributions of two domains. We evaluated the DIAL net-
work on several unsupervised domain adaption benchmarks
and achieved superior or comparable performance to state-
of-the-art results.

References

[1] K. Bousmalis, G. Trigeorgis, N. Silberman, D. Krishnan, and
D. Erhan. Domain separation networks. In Advances in Neu-
ral Information Processing Systems, pages 343–351, 2016.

[2] J. S. Denker, W. Gardner, H. P. Graf, D. Henderson, R. E.
Howard, W. Hubbard, L. D. Jackel, H. S. Baird, and
I. Guyon. Neural network recognizer for hand-written zip
code digits. In Advances in neural information processing
systems, pages 323–331, 1989.

[3] Y. Ganin and V. Lempitsky. Unsupervised domain adaptation
by backpropagation. arXiv preprint arXiv:1409.7495, 2014.
[4] M. Ghifary, W. B. Kleijn, M. Zhang, D. Balduzzi, and
W. Li. Deep reconstruction-classiﬁcation networks for un-
supervised domain adaptation. In European Conference on
Computer Vision, pages 597–613. Springer, 2016.

[5] I. Goodfellow,

J. Pouget-Abadie, M. Mirza, B. Xu,
D. Warde-Farley, S. Ozair, A. Courville, and Y. Bengio. Gen-
erative adversarial nets. In Advances in neural information
processing systems, pages 2672–2680, 2014.

[6] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learn-
ing for image recognition. In Proceedings of the IEEE con-
ference on computer vision and pattern recognition, pages
770–778, 2016.

[7] J. Hoffman, E. Tzeng, T. Park, J.-Y. Zhu, P. Isola, K. Saenko,
A. A. Efros, and T. Darrell. Cycada: Cycle-consistent adver-
sarial domain adaptation. arXiv preprint arXiv:1711.03213,
2017.

[8] L. Hu, M. Kan, S. Shan, and X. Chen. Duplex generative ad-
versarial network for unsupervised domain adaptation.
In
Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 1498–1507, 2018.
[9] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
Advances in neural information processing systems, pages
1097–1105, 2012.

[10] Y. LeCun, L. Bottou, Y. Bengio, and P. Haffner. Gradient-
based learning applied to document recognition. Proceed-
ings of the IEEE, 86(11):2278–2324, 1998.

[11] M.-Y. Liu, T. Breuel, and J. Kautz. Unsupervised image-to-
image translation networks. In Advances in Neural Informa-
tion Processing Systems, pages 700–708, 2017.

[12] M.-Y. Liu and O. Tuzel. Coupled generative adversarial net-
In Advances in neural information processing sys-

works.
tems, pages 469–477, 2016.

[13] M. Long, Y. Cao, J. Wang, and M. I. Jordan. Learning
transferable features with deep adaptation networks. arXiv
preprint arXiv:1502.02791, 2015.

[14] M. Long, J. Wang, G. Ding, J. Sun, and S. Y. Philip. Transfer
feature learning with joint distribution adaptation. In 2013
IEEE International Conference on Computer Vision, pages
2200–2207. IEEE, 2013.

[15] M. Long, H. Zhu, J. Wang, and M. I. Jordan. Deep trans-
fer learning with joint adaptation networks. arXiv preprint
arXiv:1605.06636, 2016.

[16] M. Long, H. Zhu, J. Wang, and M. I. Jordan. Unsuper-
vised domain adaptation with residual transfer networks. In
Advances in Neural Information Processing Systems, pages
136–144, 2016.

[17] Y. Netzer, T. Wang, A. Coates, A. Bissacco, B. Wu, and A. Y.
Ng. Reading digits in natural images with unsupervised fea-
ture learning. In NIPS workshop on deep learning and unsu-
pervised feature learning, volume 2011, page 5, 2011.
[18] S. J. Pan, I. W. Tsang, J. T. Kwok, and Q. Yang. Domain
adaptation via transfer component analysis. IEEE Transac-
tions on Neural Networks, 22(2):199–210, 2011.

[19] P. O. Pinheiro and A. Element. Unsupervised domain adap-
tation with similarity learning. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recognition,
pages 8004–8013, 2018.

[20] A. Rozantsev, M. Salzmann, and P. Fua. Beyond sharing
weights for deep domain adaptation. IEEE Transactions on
Pattern Analysis and Machine Intelligence, 2018.

[21] S. Sankaranarayanan, Y. Balaji, and C. D. C. R. Chellappa.
Generate to adapt: Aligning domains using generative adver-
sarial networks. pages 8503–8512, 2018.

[22] F. Schroff, D. Kalenichenko, and J. Philbin. Facenet: A
uniﬁed embedding for face recognition and clustering.
In
Proceedings of the IEEE conference on computer vision and
pattern recognition, pages 815–823, 2015.

[23] K. Simonyan and A. Zisserman. Very deep convolutional
networks for large-scale image recognition. arXiv preprint
arXiv:1409.1556, 2014.

[24] B. Sun, J. Feng, and K. Saenko. Return of frustratingly easy
domain adaptation. In AAAI, volume 6, page 8, 2016.
[25] B. Sun and K. Saenko. Deep coral: Correlation alignment for
deep domain adaptation. In European Conference on Com-
puter Vision, pages 443–450. Springer, 2016.

[26] Y. Sun, Y. Chen, X. Wang, and X. Tang. Deep learning
face representation by joint identiﬁcation-veriﬁcation.
In
Advances in neural information processing systems, pages
1988–1996, 2014.

[27] Y. Taigman, A. Polyak, and L. Wolf. Unsupervised cross-
domain image generation. arXiv preprint arXiv:1611.02200,
2016.

[28] E. Tzeng, J. Hoffman, K. Saenko, and T. Darrell. Adversarial
discriminative domain adaptation. In Computer Vision and
Pattern Recognition (CVPR), volume 1, page 4, 2017.
[29] E. Tzeng, J. Hoffman, N. Zhang, K. Saenko, and T. Darrell.
Deep domain confusion: Maximizing for domain invariance.
arXiv preprint arXiv:1412.3474, 2014.

[30] R. Volpi, P. Morerio, S. Savarese, and V. Murino. Adver-
sarial feature augmentation for unsupervised domain adapta-
tion. arXiv preprint arXiv:1711.08561, 2017.

[31] Y. Wen, K. Zhang, Z. Li, and Y. Qiao. A discrimina-
tive feature learning approach for deep face recognition. In
European Conference on Computer Vision, pages 499–515.
Springer, 2016.

9

[32] W. Zellinger, T. Grubinger, E. Lughofer, T. Natschl¨ager,
and S. Saminger-Platz. Central moment discrepancy (cmd)
for domain-invariant representation learning. arXiv preprint
arXiv:1702.08811, 2017.

[33] W. Zhang, W. Ouyang, W. Li, and D. Xu. Collaborative
and adversarial network for unsupervised domain adaptation.
In Proceedings of the IEEE Conference on Computer Vision
and Pattern Recognition, pages 3801–3809, 2018.

[34] F. Zhuang, X. Cheng, P. Luo, S. J. Pan, and Q. He. Super-
vised representation learning: Transfer learning with deep
autoencoders. In IJCAI, pages 4119–4125, 2015.

10

