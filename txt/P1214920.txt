Acquiring Common Sense Spatial Knowledge through Implicit Spatial Templates

Guillem Collell
Department of Computer Science
KU Leuven
gcollell@kuleuven.be

Luc Van Gool
Computer Vision Laboratory
ETH Zurich
vangool@vision.ee.ethz.ch

Marie-Francine Moens
Department of Computer Science
KU Leuven
sien.moens@cs.kuleuven.be

0
2
0
2
 
r
a

M
 
6
 
 
]
I

A
.
s
c
[
 
 
3
v
1
2
8
6
0
.
1
1
7
1
:
v
i
X
r
a

Abstract

Spatial understanding is a fundamental problem with wide-
reaching real-world applications. The representation of spatial
knowledge is often modeled with spatial templates, i.e., re-
gions of acceptability of two objects under an explicit spatial
relationship (e.g., “on”, “below”, etc.). In contrast with prior
work that restricts spatial templates to explicit spatial preposi-
tions (e.g., “glass on table”), here we extend this concept to
implicit spatial language, i.e., those relationships (generally
actions) for which the spatial arrangement of the objects is
only implicitly implied (e.g., “man riding horse”). In contrast
with explicit relationships, predicting spatial arrangements
from implicit spatial language requires signiﬁcant common
sense spatial understanding. Here, we introduce the task of
predicting spatial templates for two objects under a relation-
ship, which can be seen as a spatial question-answering task
with a (2D) continuous output (“where is the man w.r.t. a
horse when the man is walking the horse?”). We present two
simple neural-based models that leverage annotated images
and structured text to learn this task. The good performance
of these models reveals that spatial locations are to a large
extent predictable from implicit spatial language. Crucially,
the models attain similar performance in a challenging gener-
alized setting, where the object-relation-object combinations
(e.g.,“man walking dog”) have never been seen before. Next,
we go one step further by presenting the models with unseen
objects (e.g., “dog”). In this scenario, we show that leveraging
word embeddings enables the models to output accurate spa-
tial predictions, proving that the models acquire solid common
sense spatial knowledge allowing for such generalization.

1

Introduction

To provide machines with common sense is one of the ma-
jor long term goals of artiﬁcial intelligence. Common sense
knowledge regards knowledge that humans have acquired
through a lifetime of experiences. It is crucial in language
understanding because a lot of content needed for correct
understanding is not expressed explicitly but resides in the
mind of communicator and audience. In addition, humans
rely on their common sense knowledge when performing a
variety of tasks including interpreting images, navigation and
reasoning, to name a few. Representing and understanding
spatial knowledge are in fact imperative for any agent (human,
animal or robot) that navigates in a physical world. In this

paper, we are interested in acquiring spatial commonsense
knowledge from language paired with visual data.

Computational and cognitive models often handle spa-
tial representations as spatial templates or regions of ac-
ceptability for two objects under an explicit (a.k.a. deic-
tic) spatial preposition such as “on”, “below” or “left” (Lo-
gan and Sadler 1996). Contrary to previous work that con-
ceives spatial templates only for explicit spatial language
(Malinowski and Fritz 2014; Moratz and Tenbrink 2006;
Logan and Sadler 1996), we extend such concept to im-
plicit (a.k.a. intrinsic) spatial language, i.e., relationships—
generally actions—that do not explicitly deﬁne the relative
spatial conﬁguration between the two objects (e.g., “glass
on table”) but only implicitly (e.g., “woman riding horse”).
In other words, implicit spatial templates capture the com-
mon sense spatial knowledge that humans possess and is not
explicit in the language utterances.

Predicting spatial templates for implicit relationships is no-
tably more challenging than for explicit relationships. Firstly,
whereas there are only a few tens of explicit spatial preposi-
tions, there exist thousands of actions, entailing thus a drastic
increase in the sparsity of (object1, relationship, object2)
combinations. Secondly, the complexity of the task radically
increases in implicit language. More precisely, while explicit
spatial prepositions1 are highly deterministic about the spatial
arrangements (e.g., (object1, below, object2) unequivocally
implies that object1 is relatively lower than object2), actions
generally are not. E.g., the relative spatial conﬁguration of
“man” and the object is clearly distinct in (man, pulling, kite)
than in (man, pulling, luggage) yet the action is the same.
Contrarily, other relationships such as “jumping” are highly
informative about the spatial template, i.e., in (object1, jump-
ing, object2), object2 is in a lower position than object1.
Hence, unlike explicit relationships, predicting spatial lay-
outs from implicit spatial language requires spatial common
sense knowledge about the objects, actions and their inter-
action, which suggests the need of learning to compose the
triplet (Subject, Relationship, Object) as a whole instead of
learning a template for each Relationship.

To systematically study these questions, we propose the

1Some prepositions (e.g., “on”) might be ambiguous as they can
express other circumstantial arguments such as time. Here, we refer
to spatial prepositions once they have been disambiguated as such.

task of predicting the relative spatial locations of two objects
given a structured text input (Subject, Relationship, Object).
We introduce two simple neural-based models trained from
annotated images that successfully address the two challenges
of implicit spatial language discussed above. Our quantita-
tive evaluation reveals that spatial templates can be reliably
predicted from implicit spatial language—as accurately as
from explicit spatial language. We also show that our models
generalize well to templates of unseen combinations, e.g.,
predicting (man, riding, elephant) without having been ex-
posed to such scene before, tackling thus the challenge of
sparsity. Furthermore, by leveraging word embeddings, the
models can correctly generalize to spatial templates with un-
seen words, e.g., predicting (man, riding, elephant) without
having ever seen an “elephant” before. Since word embed-
dings capture attributes of objects (Collell and Moens 2016),
one can reasonably expect that embeddings are informative
about the spatial behavior of objects, i.e., their likelihood of
exhibiting certain spatial patterns with respect to other ob-
jects. For instance, without having ever seen “boots” before
but only “sandals”, the model correctly predicts the template
of (person, wearing, boots) by inferring that, since “boots”
are similar to “sandals”, they must be worn at the same lo-
cation of the “person”’s body. Hence, the model leverages
the acquired common sense spatial knowledge to generalize
to unseen objects. Furthermore, we provide both, a qualita-
tive 2D visualization of the predictions, and an analysis of
the learned weights of the network which provide insight
into the spatial connotations of words, revealing fundamental
differences between implicit and explicit spatial language.

The rest of the paper is organized as follows. In Sect. 2 we
review related research. In Sect. 3 we ﬁrst introduce the task
of predicting spatial templates and then present two simple
neural models. Then, in Sect. 4, we describe our experimental
setup. In Sect. 5 we present and discuss our results. Finally,
in Sect. 6 we summarize the contributions of this article.

2 Related work
Spatial processing has drawn signiﬁcant attention from
the cognitive (Logan and Sadler 1996) and artiﬁcial
intelligence communities (Kruijff et al. 2007). More specif-
ically, spatial understanding is essential in tasks involving
text-to-scene conversion such as robots’ understanding
of natural language commands (Guadarrama et al. 2013;
Moratz and Tenbrink 2006) or robot navigation.

Spatial
templates. Earlier approaches have predomi-
nantly considered rule-based spatial representations (Kruijff
et al. 2007; Moratz and Tenbrink 2006). In contrast,
Malinowski and Fritz (2014) propose a learning-based
pooling approach to retrieve images given queries of the form
(object1, spatial preposition, object2). They learn the parame-
ters of a spatial template for each explicit spatial preposition
(e.g., “left” or “above”) which computes a soft spatial ﬁt
of two objects under the relationship. E.g., an object to the
left of the referent object obtains a high score for the “left”
template and low for the “right” template. Contrary to them,
we consider implicit spatial language instead of explicit.
Additionally, while they build a spatial template for each

(explicit) Relationship, we build a template for each (Subject,
Relationship, Object) combination, allowing the template to
be determined by the interaction/composition of the Subject,
Relationship and Object instead of the Relationship alone.
Additionally, the model from Malinowski and Fritz (2014)
does not output spatial arrangements of objects, nor can it
perform predictions with generalized (unseen) relationships.

Leveraging spatial knowledge in tasks. It has been
shown that knowledge of the spatial structure in images
improves the task of image captioning (Elliott and Keller
2013). These authors manually annotate images with
geometric relationships between objects and show that a
rule-based caption generation system beneﬁts from this
knowledge. In contrast to this work, our interest lies in
predicting spatial arrangements of objects from text instead
of generating text given images. Furthermore, while they
employ a small domain of only 10 actions, our goal is to learn
from frequent spatial conﬁgurations and generalize these to
unseen and rare objects/actions (and their combinations).
Spatial knowledge has also improved object recognition
(Shiang et al. 2017). These authors mine texts and labeled
images to obtain spatial knowledge in the form of object
co-occurrences and their relative positions. This knowledge
is represented in a graph and a random walk algorithm over
this graph results in a ranking of possible object labellings.
Contrarily, our representations of spatial knowledge are
neural network based, are not primarily used for object
recognition, and we furthermore predict spatial templates.

Common sense spatial knowledge. Yatskar, Ordonez,
and Farhadi (2016) propose a model to extract common
sense facts from annotated images and their textual de-
scriptions using co-occurrence statistics among which is
point-wise mutual information (PMI). These facts include
six spatial relationships (“on”, “under”, “touches”, ”above”,
”besides”, ”holds”, ”on”, and ”disconnected”). The result is
a symbolic (discretized) representation of common sense
knowledge in the form of relations between objects that
logically entail other relational facts. Our method also
extracts common sense knowledge from images and text,
but predicts (continuous) spatial templates. Lin and Parikh
(2015) leverage common sense visual knowledge (e.g., object
locations and co-occurrences) in the tasks of ﬁll-in-the-blank
and visual paraphrasing. They compute the likelihood of a
scene to identify the most likely answer to multiple-choice
textual scene descriptions. In contrast, we focus solely on
spatial information—and in assuring the correctness of our
spatial predictions—rather than on scene understanding.

Image generation. Although models
that generate
images from text exist (e.g., DRAW model (Gregor et al.
2015)), their focus is quite distant from producing “spatially
sensible” images and they are generally meant to generate a
single object rather than placing it relative to other objects.

As discussed, spatial knowledge can improve a wide
range of tasks (Shiang et al. 2017; Lin and Parikh 2015;
Elliott and Keller 2013). This suggests that the predictions

such as “if a man is feeding a horse, where is the man relative
to the horse?” or ”where would a child wear her shoes?”

3.2 Proposed models

To build a mapping from the input to the output in our task
(Sect. 3.1) we propose two simple neural models (Fig. 1).
Their architecture is identical in the input and representation
layers, yet they differ in the output and loss function.

(i) Input and representation layers. An embedding layer
maps the three input words (S, R, O) to their respec-
tive d-dimensional vectors wSWS, wRWR, wOWO, where
wS ∈ R|VS |, wR ∈ R|VR|, wO ∈ R|VO| are one-hot encod-
ings of S, R, O (a.k.a. one-of-k encoding, i.e., a sparse vector
with 0 everywhere except for a 1 at the position of the k-th
word) and WS ∈ Rd×|VS |, WR ∈ Rd×|VR|, WO ∈ Rd×|VO|
their embedding matrices with |VS|, |VR|, |VO| their vocab-
ulary sizes. This layer represents objects and relationships
as continuous features, enabling thus to introduce external
knowledge of unseen objects as features. The embeddings are
then concatenated with the Subject center Sc and size Sb in
a vector [wSWS, wRWR, wOWO, Sc, Sb] which is inputted
to a stack of hidden layers that compose S, R and O into a
joint hidden representation zh:

zh = f (Wh[wSWS, wRWR, wOWO, Sc, Sb] + bh)

where f (·) is an element-wise non-linear function and Wh
and bh are the weight matrix and bias respectively.3

(ii) Output and loss. We consider two different possibilities
for the output ˆy that follows immediately after the last layer:
zout = Woutzh + bout (Fig. 1, top left).

• Model 1 (REG). A regression model where the output are
the Object coordinates and size ˆy = zout = [(cid:99)Oc,(cid:99)Ob] ∈ R4
and is evaluated against the true y = [Oc, Ob] with a mean
squared error (MSE) loss: L(y, ˆy) = (cid:107)ˆy − y(cid:107)2.

• Model 2 (PIX). The output ˆy = σ(zout) = (ˆyi,j) ∈
RM ×M , where M is the number of pixels per side and σ()
an element-wise sigmoid, is now a 2D heatmap of pixel
activations ˆyi,j ∈ [0, 1] indicating the probability that a
pixel belongs to the Object (class 1). Predictions ˆy are eval-
uated against the true y = (yi,j) ∈ RM ×M with a binary
cross-entropy loss: L(y, ˆy) = − (cid:80)M
j=1 yi,j ˆyi,j −
i=1
(1 − yi,j) log(1 − ˆyi,j), where yi,j ∈ {0, 1}.

(cid:80)M

These models are conceptually different and have different
capabilities. While the REG model outputs “crisp” pointwise
predictions, PIX can model more diffuse spatial templates
where the location of the object has more variability, e.g., in
(man, ﬂying, kite) the “kite” can easily move around. Notice
that in contrast with convolutional neural networks (CNNs)
our approach does not make use of the image pixels (Fig. 1),
yielding a model fully specialized in spatial knowledge.

3Similarly, zh can be composed with more hidden layers.

Figure 1: Overview of our models (left) and the image pre-
processing setting (right).

of our models can be used as spatial common sense input
for methods that rely on good spatial priors. Additionally,
existing methods require the spatial information to be present
in the data and lack the capacity to extrapolate/generalize.
Thus,
in this paper we focus, ﬁrst, on showing that
generalizing spatial arrangements to unseen objects and
object-relation-object combinations is possible and, second,
on ensuring that the predicted templates are accurate by
performing several quantitative and qualitative evaluations.

3 Proposed task and model

y] ∈ R2, where Oc

3.1 Proposed task
To learn spatial templates, we propose the task of predicting
the 2D relative spatial arrangement of two objects under a
relationship given a structured text input of the form (Subject,
Relationship, Object)—henceforth abbreviated as (S, R, O).
Let us denote the 2D coordinates of the center (“c”) of the
x ∈ R and
x, Oc
Object’s box as Oc = [Oc
y ∈ R are the horizontal and vertical components respec-
Oc
y] ∈ R2 be half of the width (Ob
x, Ob
tively. Let Ob = [Ob
x) and
half of the height (Ob
y) of the Object’s box (“b”). We employ
a similar notation for the Subject (Sc, Sb), and model predic-
tions are denoted with a hat (cid:99)Oc, (cid:99)Ob. The task consists in pre-
dicting the Object’s location and size [Oc,Ob] ∈ R4 (output)
given the structured text input (S, R, O) and the location Sc
and size Sb of the Subject (Fig. 1).2 This deﬁnes a supervised
task where the size and location of bounding boxes in images
serve as ground truth. Our task can be interpreted as a spatial
question-answering with structured questions (triplets) that
allows evaluating the answer quantitatively in a 2D space.
Hence, the goal is to answer common sense spatial questions

2Crucially, we notice that knowing the Subject’s coordinates is
not a requirement for generating templates (but only for evaluating
against the ground truth) since inputting arbitrary coordinates (e.g.,
Sc=[0.5, 0.5]) still enables visualizing relative object locations. Ad-
ditionally, we input the Subject’s size in order to provide a reference
size to the model. However, we ﬁnd that without this input, the
model still learns to predict an “average size” for each Object.

4 Experimental setup
We employ a 10-fold cross-validation (CV) setting. Data are
randomly split into 10 disjoint parts and 10% is employed
for testing and 90% for training, repeating this for each of
the 10 folds. Reported results are averages over the 10 folds.

4.1 Visual Genome data set
We use the Visual Genome dataset (Krishna et al. 2017) as
our source of annotated images. The Visual Genome consists
of ∼108K images containing ∼1.5M human-annotated (Sub-
ject, Relationship, Object) instances with bounding boxes for
Subject and Object (Fig. 2). We ﬁlter out all the instances con-
taining explicit spatial prepositions, preserving only instances
with implicit spatial relationships. We keep only combina-
tions for which we have word embeddings available for the
whole triplet (S, R, O). After this ﬁltering, ∼378K instances
are preserved, yielding 2,183 unique implicit Relationships
and 5,614 unique objects (i.e., Subjects and Objects). The left
out instances of explicit language yield ∼852K instances, 36
unique explicit spatial prepositions and 6,749 unique objects.

Figure 2: Sample of images with object boxes and relation-
ships from Visual Genome.

4.2 Evaluation sets
We consider the following subsets of the Visual Genome data
to evaluate performance.
(i) Raw data: Simply the unﬁltered instances from the Visual
Genome data (Sect. 4.1). This set contains a substantial pro-
portion of meaningless (e.g., (nose, almost, touching)) and
irrelevant (e.g., (sign, says, gate 2)) instances.
(ii) Generalized Triplets: We pick at random 100 combi-
nations (S, R, O) among the 1,000 most frequent implicit
combinations in Visual Genome. This yields ∼25K instances
such as (person, holding, racket), (man, ﬂying, kite), etc.4
(iii) Generalized Words: We randomly choose 25 objects
(e.g., “woman”, “apple”, etc.)5 among the 100 most frequent
objects in Visual Genome and take all the instances (∼130K)
that contain any of these words. For example, since “apple”
is in our list, e.g., (cat, snifﬁng, apple) is kept.6 Notice that a
combination (S, R, O) with a generalized word is automati-
cally a generalized triplet too.

4This evaluation set along with our Supplementary material are

available at https://github.com/gcollell/spatial-commonsense.

5The complete list of objects is: [surfboard, shadow, head, surfer,
woman, bear, bag, sunglasses, hair, apple, grass, water, eye, shoes,
foot, jeans, jacket, bus, bike, cat, sky, elephant, tree, plane, eyes].

6We also evaluated a list of generalized Relationships, obtaining
similar results. We additionally tested two extra lists of generalized
objects, which yielded consistent results.

When enforcing generalization conditions in our experi-
ments, all combinations from sets (ii) and (iii) are removed
from the training data to prevent the model from seeing
them.7 Even without imposing generalization conditions (or
when testing with Raw data), reported results are always on
unseen instances—yet the combinations (S, R, O) may have
been seen during training (e.g., in different images). All sets
above contain exclusively implicit spatial language, although
an analogous version of the Raw set where R are explicit
spatial prepositions is also considered in our experiments.

4.3 Data pre-processing
The coordinates of bounding boxes in the images are normal-
ized by the width and height of the image. Thus, Sc, Oc ∈
[0, 1]2. Additionally, we notice that the distinction between
left and right is arbitrary regarding the semantics of the im-
age (Singhal, Luo, and Zhu 2003). That is, a mirrored image
preserves entirely its meaning—while a vertically inverted
image does not. For example, a “child” “walking” a “horse”
can meaningfully be at either side of the “horse”, while a
“child” “riding” a “horse” cannot be either above or below
the “horse”. Hence, to free the model from such arbitrariness,
we mirror the image when (and only when) the Object is
at the left hand side of the Subject. This leaves the Object
always to the right-hand side of the Subject. Notice that mir-
roring is aimed at properly measuring performance and does
not impose any big constraint (one can simply consider the
symmetric reﬂection of the predictions as equally likely).

4.4 Evaluation metrics
The REG model directly outputs Object coordinates, while
PIX outputs 2D heatmaps. We however enable evaluating the
PIX model with regression/classiﬁcation metrics by taking
the point of maximum activation (or their average, if there are
many) as the Object center (cid:99)Oc. The predicted Object size (cid:99)Ob
is not estimated. We use the following performance metrics.

(A) Intersection over Union (IoU). We compute the
bounding box overlap (IoU) from the PASCAL VOC
object detection task (Everingham et al. 2015): IoU =
area((cid:100)BO∩BO)
where (cid:99)BO and BO are the predicted and
area((cid:100)BO∪BO)
ground truth Object bounding boxes, respectively. If the IoU
is larger than 50%, the prediction is counted as correct. It
must be noted that our setting is not comparable to object
detection (nor our results) since we do not employ the image
as input (but text) and thus we cannot leverage the pixels to
predict the Object’s location.

(B) Regression. We consider standard regression metrics.

7To avoid confusion with the term ‘zero-shot’ in classiﬁcation,
we denote our unseen words/triplets as generalized. Although both
settings have resemblances, they differ in that, in ours, the unseen
categories are inputs while in classiﬁcation are targets. Notice that in
both settings one must necessarily have semantic knowledge about
the “zero-shot” class at hand (Socher et al. 2013) (e.g., in the form
of word embeddings), otherwise the task is clearly infeasible.

(i) Coefﬁcient of Determination (R2) of model predictions
ˆy = [(cid:99)Oc, (cid:99)Ob] and ground truth y = [Oc, Ob]. R2 is widely
used to evaluate goodness of ﬁt of a model in regression. The
best R2 score is 1 while the worst one is arbitrarily negative.
A constant prediction would obtain a score of 0.
(ii) Pearson Correlation (r) between the predicted (cid:99)Oc
the true Oc
the y-components (cid:99)Oc

x and
x x-component of the Object center. Similarly for

y and Oc
y.

(C) Above/below classiﬁcation. With the semantic distinc-
tion between vertical and horizontal axes in mind (Sect. 4.3),
we consider the problem of classifying above/below rela-
tive locations. If the model predicts that the Object center is
above/below the Subject center and this actually occurs in
the image we count it as correct. That is, sign( (cid:99)Oc
y) and
sign(Oc
y) must match. We report macro-averaged F1
(F1y) and macro-averaged accuracy (accy).

y − Sc

y − Sc

(D) Pixel macro accuracy (px-acc). Accuracy or correct
classiﬁcation rate per pixel may not be a good measure here,
where class 1 (Object box) comprises, on average, only 5%
of the pixels. Thus, a constant prediction of zeros everywhere
would obtain 95% accuracy. Hence, we consider macro-
averaged pixel accuracy (px-acc), namely the average of
recall of class 0 and recall of class 1. We report the best
px-acc across the full range of decision thresholds on the
predicted pixel-wise conﬁdence scores.

4.5 Word embeddings
We use 300-dimensional GloVe word embeddings (Penning-
ton, Socher, and Manning 2014) pre-trained on the Common
Crawl corpus (consisting of 840B-tokens), which we obtain
from the authors’ website.8

4.6 Model hyperparameters and implementation
Our experiments are implemented in Python 2.7 and we use
Keras deep learning framework for our models (Chollet and
others 2015). Model hyperparameters are ﬁrst selected in a 10-
fold cross-validation setting and we report (averaged) results
on 10 new splits. Models are trained for 10 epochs on batches
of size 64 with the RMSprop optimizer using a learning rate
of 0.0001 and 2 hidden layers with 100 ReLu units. We ﬁnd
that the models are not very sensitive to parameter variations.
The parameters of the embeddings are not backpropagated,
although we ﬁnd that this choice has little effect on the results.
We employ a 15 × 15 pixel grid as output of the PIX model.

5 Results and discussion
We consider the evaluation sets from Sect. 4.2 and the fol-
lowing variations of PIX and REG models (Sect. 3.2). The
subindex EMB denotes a model that employs GloVe embed-
dings and RND a model with embeddings randomly drawn
from a dimension-wise normal distribution of mean (µ) and
standard deviation (σ) equal to those of the GloVe embed-
dings, preserving the original dimensionality (d=300). A

8 http://nlp.stanford.edu/projects/glove

t
i
c
i
l
p
m

I

t
i
c
i
l
p
x
E

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.704
0.693
0.720
-0.999

0.585
0.576
0.604
-1.001

-
-
-
-

-
-
-
-

accy
0.751
0.750
0.764
0.522

0.713
0.702
0.716
0.514

0.771
0.769
0.779
0.633

0.729
0.721
0.723
0.589

F1y
0.750
0.749
0.764
0.522

0.714
0.702
0.717
0.513

0.773
0.769
0.780
0.630

0.726
0.719
0.720
0.581

rx
0.892
0.890
0.897
0.002

0.831
0.821
0.852
0.000

0.810
0.806
0.814
0.000

0.716
0.709
0.709
0.001

ry
0.835
0.828
0.843
0.001

0.755
0.742
0.778
-0.001

0.822
0.815
0.827
-0.001

0.768
0.758
0.760
0.000

IoU

px-acc

0.117
0.120
0.152
0.075

0.345
0.327
0.384
0.042

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.862
0.856
0.857
0.500

0.817
0.812
0.810
0.500

Table 1: Results on the Raw test data.

third type employs one-hot vectors (1H). We additionally
consider a control method (ctrl) that outputs random normal
predictions of µ and σ equal to the dimension-wise mean and
standard deviation of the training targets. We test statistical
signiﬁcance with a Friedman rank test and post hoc Nemenyi
tests on the results of the 10 folds. We indicate with an aster-
isk ∗ in the tables when a method is signiﬁcantly better than
the rest (p < 0.01) within the same model (PIX or REG).

5.1 Evaluation with raw data
Table 1 shows that all methods perform well considering the
amount of noise present in the Raw data. Especially note-
worthy is the ﬁnding that relative locations can be predicted
from implicit spatial language approximately as accurately as
from explicit spatial language. Interestingly, unlike the other
metrics, the IoU (which only counts a prediction as correct if
the overlap between true and predicted boxes is larger than
50%) is clearly higher in explicit than in implicit language,
which suggests that implicit templates exhibit more ﬂexibility
on the Object’s location. Hence, “blurrier” predictions such
as those of PIX can be a good choice in some applications,
e.g., computing the soft ﬁt between images and templates to
perform (spatially informed) image retrieval. We also observe
that models with 1H embeddings tend to perform better, yet
differences are generally only signiﬁcant against RND.

5.2 Generalized evaluations
Table 2 shows that all models perform well on generalized
triplets (top left), remarkably closely to their performance
without imposing generalization conditions (right). Again,
1H performs slightly better, yet only signiﬁcantly better than
RND (p < 0.005). Notably, the good performance of RND
on generalized triplets evidences that the model does not
rely on external knowledge (word embeddings) to predict un-
seen combinations. This ability of generalizing from frequent
combinations (S, R, O) to rare/unseen ones is especially
valuable given the sparsity of implicit combinations and the
impossibility of learning all of them from data.

Contrarily, larger performance differences are observed
with generalized words (Tab. 2, bottom left) where, as ex-
pected, EMB outperforms RND and 1H embeddings by a

Generalization

No Generalization

IoU

px-acc

IoU

px-acc

s
t
e
l
p
i
r
T

s
d
r
o
W

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.746
0.731
0.764
-1.097

-
-
-
-
0.633∗
0.438
0.425
-1.022

-
-
-
-

accy
0.784
0.770
0.790
0.516

0.751
0.740
0.738
0.509
0.742∗
0.630
0.596
0.519
0.717∗
0.644
0.591
0.512

F1y
0.777
0.770
0.794
0.506

0.760
0.750
0.752
0.502
0.741∗
0.629
0.586
0.518
0.719∗
0.643
0.590
0.511

rx
0.903
0.899
0.906
0.001

0.835
0.836
0.868
-0.002
0.877∗
0.852
0.855
0.000

0.802
0.764
0.813
-0.001

ry
0.877
0.863
0.880
0.002

0.813
0.799
0.830
0.001
0.795∗
0.603
0.621
0.000
0.722∗
0.587
0.573
0.000

0.122
0.126
0.166
0.077

-
-
-
-
0.075∗
0.046
0.053
0.075

-
-
-
-

-
-
-
-

0.878
0.868
0.874
0.500

-
-
-
-
0.835∗
0.780
0.764
0.500

R2

0.774
0.776
0.791
-1.097

0.725
0.718
0.740
-1.017

-
-
-
-

-
-
-
-

accy
0.795
0.796
0.802
0.515

0.756
0.744
0.748
0.511

0.788
0.788
0.802
0.518

0.757
0.747
0.760
0.511

F1y
0.797
0.797
0.807
0.506

0.766
0.756
0.761
0.503

0.786
0.787
0.802
0.518

0.760
0.749
0.763
0.511

rx
0.908
0.909
0.913
-0.004

0.852
0.843
0.876
-0.009

0.896
0.895
0.900
0.002

0.832
0.823
0.852
0.002

ry
0.889
0.887
0.895
-0.002

0.824
0.820
0.842
-0.001

0.856
0.850
0.862
-0.001

0.784
0.775
0.799
-0.001

0.151
0.161
0.203
0.077

0.128
0.132
0.167
0.074

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.886
0.885
0.887
0.501

0.870
0.866
0.866
0.500

Table 2: Results on generalized triplets (top) and generalized words (bottom) (see Sect. 4.2). The tables on the right show results
on the same sets without imposing generalization conditions, i.e., allowing to see all combinations/words during training.

margin thanks to the transference of knowledge from word
embeddings combined with the acquired spatial knowledge.

5.3 Qualitative evaluation (spatial templates)
To ensure that model predictions are meaningful and inter-
pretable, we further validate the quantitative results above
with a qualitative evaluation. Notice that all plots in Fig. 3
are generalized (either unseen words or triplets). Both, PIX
and REG are able to infer the size and location of the Object
notably well in unseen triplets (Fig. 3, bottom), regardless
of the embedding type (EMB or RND). However, in unseen
words (Fig. 3, top), the models that leverage word embed-
dings (EMB) tend to perform better, aligning with the quanti-
tative results above. Remarkably, both PIXEMB and REGEMB
output very accurate predictions in generalized words (top),
e.g., predicting correctly the size (and location) of an “ele-
phant” relative to a “kid” even though the model has never
seen an “elephant” before. Noticeably, the models learn to
compose the triplets, distinguishing, for instance, between
“carrying a surfboard” and “riding a surfboard” or between
“playing frisbee” and “holding a frisbee”, etc.

The mapping of language to a 2D visualization provides
another interesting property. Traditional language processing
systems translate spatial information to qualitative symbolic
representations that capture spatial knowledge with a limited
symbolic vocabulary and that are used in qualitative spatial
reasoning (Cohn and Renz 2008). Research shows that trans-
lation of language to qualitative spatial symbolic representa-
tions is difﬁcult (Kordjamshidi and Moens 2015), obtaining
rather low F1 measures on recognition performance, even if
the language utterance is accompanied by visual data (Ko-
rdjamshidi et al. 2017). Here, we have shown that we can
translate language utterances into visualizations in a quantita-
tive 2D space, complementing thus existing symbolic models.

Interpretation of model weights

5.4
We study how the weights of the model provide insight into
the spatial properties of words. To obtain more interpretable

weights, we learn a REG9 model without hidden layers, result-
ing in only an embedding layer followed by a linear output
layer ˆy = Woutu + bout, where u := [wS, wR, wO, Sc, Sb].
By using one-hot encodings wS, wR, wO, the concatenation
layer u becomes of size |VS| + |VR| + |VO| + 2 + 2. E.g., if
“wearing” has one-hot index j in the Relationships’ vocabu-
lary (VR), its index in the concatenation layer is |VS| + j. The
product Woutu is a 4-dimensional vector, where its i-th com-
ponent is the product of the i-th row of Wout with the vector
u. Thus, the component |VS|+j of the i-th row of Wout gives
us the inﬂuence of the j-th relationship (i.e., “wearing”) on
y] ∈ R4.
the i-th dimension of the output ˆy = [ (cid:99)Oc

x, (cid:99)Oc

x, (cid:99)Ob

y, (cid:99)Ob

Implicit

Explicit

Objects

Relationships

Objects

Relationships

headband
visor
hoof
sandals
kite

-0.275
-0.266
0.246
0.241
-0.234

ﬂying
kicking
cutting
catching
riding

fryer
books
avenue
english
burger

see
ﬂoat

3.7e-5
3.2e-5
-3.0e-5 ﬁnding
pulled
2.6e-5
removes
8.2e-5

-0.194
0.148
0.142
-0.132
0.119

-6.8e-5
5.8e-5
5.2e-5
2.6e-5
1.6e-5

hook
glasses
sailboat
vase
woods

spools
glasss
dune
cookies
sill

-0.160
-0.160
-0.159
0.151
-0.149

below
above
beneath
under
over

in

7.5e-5
-7.1e-5 along
7.0e-5
6.7e-5
-5.1e-5 inside

at
on

-0.212
0.199
-0.144
-0.140
0.131

-0.011
0.008
-0.006
0.005
-0.002

Table 3: Words with the ten largest (top) and smallest (bot-
tom) weights in absolute value for the Object’s y-coordinate
( (cid:99)Oc
y), in implicit and explicit language (learned in Raw data).

Table 3 shows the weights inﬂuencing the y-coordinate (cid:99)Oc
y.
We notice that objects such as “kite” or “headband” which
tend to be above the Subject have a large negative weight,
while objects that tend to be below, e.g., “sandals” or “hoof”,
have a large positive weight, i.e., a large positive inﬂuence
on the Object’s y-coordinate. While implicit relations such
as “kicking” or “riding” are strong predictors of the Object’s

9Unlike PIX, the REG model directly outputs coordinates and

thus allows for an easy interpretation of the weights.

Figure 3: Model predictions for generalized words (top) and triplets (bottom). Model (PIX, REG) and embedding types (EMB,
RND) are as indicated in the legend on the left. The Subject’s location is given (blue box) and the model predicts the Object
(red). In PIX, the intensity of the red corresponds to the predicted probability. The generalized (unseen) words are underlined.

gether, the generally small weights of the implicit relations
(and therefore their inﬂuence on the template) emphasize the
need of composing the triplet (Subject, Relationship, Object)
as a whole rather than modeling the Relationship alone.

6 Conclusions

Overall, this paper provides insight into the fundamental dif-
ferences between implicit and explicit spatial language and
extends the concept of spatial templates to implicit spatial
language, the understanding of which requires common sense
spatial knowledge about objects and actions. We deﬁne the
task of predicting relative spatial arrangements of two objects
under a relationship and present two embedding-based neu-
ral models that attain promising performance, proving that
spatial templates can be accurately predicted from implicit
spatial language. Remarkably, our models generalize well,
predicting correctly unseen (generalized) object-relationship-
object combinations. Furthermore, the acquired common
sense spatial knowledge—aided with word embeddings—
allows the model to correctly predict templates for unseen
words. Finally, we show that the weights of the model provide
great insight into the spatial connotations of words.

A ﬁrst limitation of our approach is the fully supervised
setting where the models are trained using images with de-
tected ground truth objects and parsed text—which aims at
keeping the design clean in this ﬁrst study on implicit spa-
tial templates. Notice however that methods to automatically
parse images and text exist. In future work, we aim at im-
plementing our approach in a weakly supervised setting. A
second limitation is the 2D spatial treatment of the actual
3D world. It is worth noting however, that our models (PIX
and REG) and setting trivially generalize to 3D if appropriate
data are available.

Figure 4: Weights in absolute value of the REG model for
implicit (top) and explicit (bottom) Relationships. For read-
ability, the labels on the x-axis have been undersampled.

y-coordinate, “ﬁnding” or “pulled” are weak, suggesting that
the spatial template rather depends on their composition with
the Subject and Object. In fact, the weights of implicit rela-
tions such as “ﬂying” or “riding” are comparable to those
of explicit relations such as “above” or “atop”, behaving
similarly to explicit language. Notice that even the less infor-
mative explicit relations have weights of at least one order of
magnitude larger that the least informative implicit relations.
Figure 4 further evidences that explicit relationships generally
have larger weights than those of implicit relationships. Alto-

[Logan and Sadler 1996] Logan, G. D., and Sadler, D. D.
1996. A computational analysis of the apprehension of spatial
relations. Language and space.
[Long, Shelhamer, and Darrell 2015] Long, J.; Shelhamer,
E.; and Darrell, T. 2015. Fully convolutional networks for
semantic segmentation. In CVPR, 3431–3440.
[Malinowski and Fritz 2014] Malinowski, M., and Fritz, M.
2014. A pooling approach to modelling spatial rela-
tions for image retrieval and annotation. arXiv preprint
arXiv:1411.5190.
[Moratz and Tenbrink 2006] Moratz, R., and Tenbrink, T.
2006. Spatial reference in linguistic human-robot interac-
tion: Iterative, empirically supported development of a model
of projective relations. Spatial Cognition and Computation
6(1):63–107.
J.;
[Pennington, Socher, and Manning 2014] Pennington,
Socher, R.; and Manning, C. D. 2014. Glove: Global vectors
for word representation. In EMNLP, volume 14, 1532–1543.
[Shiang et al. 2017] Shiang, S.-R.; Rosenthal, S.; Gershman,
A.; Carbonell, J. G.; and Oh, J. 2017. Vision-language fusion
for object recognition. In AAAI, 4603–4610.
[Singhal, Luo, and Zhu 2003] Singhal, A.; Luo, J.; and Zhu,
W. 2003. Probabilistic spatial context models for scene
content understanding. In CVPR, volume 1, I–I. IEEE.
[Socher et al. 2013] Socher, R.; Ganjoo, M.; Manning, C. D.;
and Ng, A. 2013. Zero-shot learning through cross-modal
transfer. In NIPS, 935–943.
[Yatskar, Ordonez, and Farhadi 2016] Yatskar, M.; Ordonez,
V.; and Farhadi, A. 2016. Stating the obvious: Extracting
visual common sense knowledge. In NAACL-HLT, 193–198.

Acknowledgments
This work has been supported by the CHIST-ERA EU project
MUSTER10 and by the KU Leuven grant RUN/15/005. G.C.
additionally acknowledges a grant from the IV&L network11
(ICT COST Action IC1307).

References
[Chollet and others 2015] Chollet, F., et al. 2015. Keras.
https://github.com/fchollet/keras.
[Cohn and Renz 2008] Cohn, A. G., and Renz, J. 2008. Qual-
itative spatial representation and reasoning. In van Harmelen,
F.; Lifschitz, V.; and Porter, B. W., eds., Handbook of Knowl-
edge Representation, volume 3 of Foundations of Artiﬁcial
Intelligence. Elsevier. 551–596.
[Collell and Moens 2016] Collell, G., and Moens, M.-F. 2016.
Is an image worth more than a thousand words? On the
ﬁne-grain semantic differences between visual and linguistic
representations. In COLING, 2807–2817. ACL.
[Elliott and Keller 2013] Elliott, D., and Keller, F. 2013. Im-
age description using visual dependency representations. In
EMNLP, volume 13, 1292–1302.
[Everingham et al. 2015] Everingham, M.; Eslami, S. A.;
Van Gool, L.; Williams, C. K.; Winn, J.; and Zisserman,
A. 2015. The PASCAL visual object classes challenge:
A retrospective. International Journal of Computer Vision
111(1):98–136.
[Gregor et al. 2015] Gregor, K.; Danihelka, I.; Graves, A.;
Rezende, D. J.; and Wierstra, D. 2015. Draw: A recur-
rent neural network for image generation. arXiv preprint
arXiv:1502.04623.
[Guadarrama et al. 2013] Guadarrama, S.; Riano, L.; Gol-
land, D.; Go, D.; Jia, Y.; Klein, D.; Abbeel, P.; Darrell, T.;
et al. 2013. Grounding spatial relations for human-robot
interaction. In IROS, 1640–1647. IEEE.
[Kordjamshidi and Moens 2015] Kordjamshidi,
and
Moens, M.-F. 2015. Global machine learning for spatial
ontology population. Journal of Web Semantics 30:3–21.
[Kordjamshidi et al. 2017] Kordjamshidi, P.; Rahgooy, T.;
Moens, M.-F.; Pustejovsky, J.; Manzoor, U.; and Roberts,
K. 2017. CLEF 2017: Multimodal spatial role labeling
(mSpRL) task overview. In CLEF, 367–376.
[Krishna et al. 2017] Krishna, R.; Zhu, Y.; Groth, O.; John-
son, J.; Hata, K.; Kravitz, J.; Chen, S.; Kalantidis, Y.; Li,
L.-J.; Shamma, D. A.; et al. 2017. Visual genome: Con-
necting language and vision using crowdsourced dense im-
age annotations. International Journal of Computer Vision
123(1):32–73.
[Kruijff et al. 2007] Kruijff, G.-J. M.; Zender, H.; Jensfelt, P.;
and Christensen, H. I. 2007. Situated dialogue and spatial
organization: What, where and why? International Journal
of Advanced Robotic Systems 4(1):16.
[Lin and Parikh 2015] Lin, X., and Parikh, D. 2015. Don’t
just listen, use your imagination: Leveraging visual common
sense for non-visual tasks. In CVPR, 2984–2993.

P.,

10http://www.chistera.eu/projects/muster
11http://ivl-net.eu

Acquiring Common Sense Spatial Knowledge through Implicit Spatial Templates

Guillem Collell
Department of Computer Science
KU Leuven
gcollell@kuleuven.be

Luc Van Gool
Computer Vision Laboratory
ETH Zurich
vangool@vision.ee.ethz.ch

Marie-Francine Moens
Department of Computer Science
KU Leuven
sien.moens@cs.kuleuven.be

0
2
0
2
 
r
a

M
 
6
 
 
]
I

A
.
s
c
[
 
 
3
v
1
2
8
6
0
.
1
1
7
1
:
v
i
X
r
a

Abstract

Spatial understanding is a fundamental problem with wide-
reaching real-world applications. The representation of spatial
knowledge is often modeled with spatial templates, i.e., re-
gions of acceptability of two objects under an explicit spatial
relationship (e.g., “on”, “below”, etc.). In contrast with prior
work that restricts spatial templates to explicit spatial preposi-
tions (e.g., “glass on table”), here we extend this concept to
implicit spatial language, i.e., those relationships (generally
actions) for which the spatial arrangement of the objects is
only implicitly implied (e.g., “man riding horse”). In contrast
with explicit relationships, predicting spatial arrangements
from implicit spatial language requires signiﬁcant common
sense spatial understanding. Here, we introduce the task of
predicting spatial templates for two objects under a relation-
ship, which can be seen as a spatial question-answering task
with a (2D) continuous output (“where is the man w.r.t. a
horse when the man is walking the horse?”). We present two
simple neural-based models that leverage annotated images
and structured text to learn this task. The good performance
of these models reveals that spatial locations are to a large
extent predictable from implicit spatial language. Crucially,
the models attain similar performance in a challenging gener-
alized setting, where the object-relation-object combinations
(e.g.,“man walking dog”) have never been seen before. Next,
we go one step further by presenting the models with unseen
objects (e.g., “dog”). In this scenario, we show that leveraging
word embeddings enables the models to output accurate spa-
tial predictions, proving that the models acquire solid common
sense spatial knowledge allowing for such generalization.

1

Introduction

To provide machines with common sense is one of the ma-
jor long term goals of artiﬁcial intelligence. Common sense
knowledge regards knowledge that humans have acquired
through a lifetime of experiences. It is crucial in language
understanding because a lot of content needed for correct
understanding is not expressed explicitly but resides in the
mind of communicator and audience. In addition, humans
rely on their common sense knowledge when performing a
variety of tasks including interpreting images, navigation and
reasoning, to name a few. Representing and understanding
spatial knowledge are in fact imperative for any agent (human,
animal or robot) that navigates in a physical world. In this

paper, we are interested in acquiring spatial commonsense
knowledge from language paired with visual data.

Computational and cognitive models often handle spa-
tial representations as spatial templates or regions of ac-
ceptability for two objects under an explicit (a.k.a. deic-
tic) spatial preposition such as “on”, “below” or “left” (Lo-
gan and Sadler 1996). Contrary to previous work that con-
ceives spatial templates only for explicit spatial language
(Malinowski and Fritz 2014; Moratz and Tenbrink 2006;
Logan and Sadler 1996), we extend such concept to im-
plicit (a.k.a. intrinsic) spatial language, i.e., relationships—
generally actions—that do not explicitly deﬁne the relative
spatial conﬁguration between the two objects (e.g., “glass
on table”) but only implicitly (e.g., “woman riding horse”).
In other words, implicit spatial templates capture the com-
mon sense spatial knowledge that humans possess and is not
explicit in the language utterances.

Predicting spatial templates for implicit relationships is no-
tably more challenging than for explicit relationships. Firstly,
whereas there are only a few tens of explicit spatial preposi-
tions, there exist thousands of actions, entailing thus a drastic
increase in the sparsity of (object1, relationship, object2)
combinations. Secondly, the complexity of the task radically
increases in implicit language. More precisely, while explicit
spatial prepositions1 are highly deterministic about the spatial
arrangements (e.g., (object1, below, object2) unequivocally
implies that object1 is relatively lower than object2), actions
generally are not. E.g., the relative spatial conﬁguration of
“man” and the object is clearly distinct in (man, pulling, kite)
than in (man, pulling, luggage) yet the action is the same.
Contrarily, other relationships such as “jumping” are highly
informative about the spatial template, i.e., in (object1, jump-
ing, object2), object2 is in a lower position than object1.
Hence, unlike explicit relationships, predicting spatial lay-
outs from implicit spatial language requires spatial common
sense knowledge about the objects, actions and their inter-
action, which suggests the need of learning to compose the
triplet (Subject, Relationship, Object) as a whole instead of
learning a template for each Relationship.

To systematically study these questions, we propose the

1Some prepositions (e.g., “on”) might be ambiguous as they can
express other circumstantial arguments such as time. Here, we refer
to spatial prepositions once they have been disambiguated as such.

task of predicting the relative spatial locations of two objects
given a structured text input (Subject, Relationship, Object).
We introduce two simple neural-based models trained from
annotated images that successfully address the two challenges
of implicit spatial language discussed above. Our quantita-
tive evaluation reveals that spatial templates can be reliably
predicted from implicit spatial language—as accurately as
from explicit spatial language. We also show that our models
generalize well to templates of unseen combinations, e.g.,
predicting (man, riding, elephant) without having been ex-
posed to such scene before, tackling thus the challenge of
sparsity. Furthermore, by leveraging word embeddings, the
models can correctly generalize to spatial templates with un-
seen words, e.g., predicting (man, riding, elephant) without
having ever seen an “elephant” before. Since word embed-
dings capture attributes of objects (Collell and Moens 2016),
one can reasonably expect that embeddings are informative
about the spatial behavior of objects, i.e., their likelihood of
exhibiting certain spatial patterns with respect to other ob-
jects. For instance, without having ever seen “boots” before
but only “sandals”, the model correctly predicts the template
of (person, wearing, boots) by inferring that, since “boots”
are similar to “sandals”, they must be worn at the same lo-
cation of the “person”’s body. Hence, the model leverages
the acquired common sense spatial knowledge to generalize
to unseen objects. Furthermore, we provide both, a qualita-
tive 2D visualization of the predictions, and an analysis of
the learned weights of the network which provide insight
into the spatial connotations of words, revealing fundamental
differences between implicit and explicit spatial language.

The rest of the paper is organized as follows. In Sect. 2 we
review related research. In Sect. 3 we ﬁrst introduce the task
of predicting spatial templates and then present two simple
neural models. Then, in Sect. 4, we describe our experimental
setup. In Sect. 5 we present and discuss our results. Finally,
in Sect. 6 we summarize the contributions of this article.

2 Related work
Spatial processing has drawn signiﬁcant attention from
the cognitive (Logan and Sadler 1996) and artiﬁcial
intelligence communities (Kruijff et al. 2007). More specif-
ically, spatial understanding is essential in tasks involving
text-to-scene conversion such as robots’ understanding
of natural language commands (Guadarrama et al. 2013;
Moratz and Tenbrink 2006) or robot navigation.

Spatial
templates. Earlier approaches have predomi-
nantly considered rule-based spatial representations (Kruijff
et al. 2007; Moratz and Tenbrink 2006). In contrast,
Malinowski and Fritz (2014) propose a learning-based
pooling approach to retrieve images given queries of the form
(object1, spatial preposition, object2). They learn the parame-
ters of a spatial template for each explicit spatial preposition
(e.g., “left” or “above”) which computes a soft spatial ﬁt
of two objects under the relationship. E.g., an object to the
left of the referent object obtains a high score for the “left”
template and low for the “right” template. Contrary to them,
we consider implicit spatial language instead of explicit.
Additionally, while they build a spatial template for each

(explicit) Relationship, we build a template for each (Subject,
Relationship, Object) combination, allowing the template to
be determined by the interaction/composition of the Subject,
Relationship and Object instead of the Relationship alone.
Additionally, the model from Malinowski and Fritz (2014)
does not output spatial arrangements of objects, nor can it
perform predictions with generalized (unseen) relationships.

Leveraging spatial knowledge in tasks. It has been
shown that knowledge of the spatial structure in images
improves the task of image captioning (Elliott and Keller
2013). These authors manually annotate images with
geometric relationships between objects and show that a
rule-based caption generation system beneﬁts from this
knowledge. In contrast to this work, our interest lies in
predicting spatial arrangements of objects from text instead
of generating text given images. Furthermore, while they
employ a small domain of only 10 actions, our goal is to learn
from frequent spatial conﬁgurations and generalize these to
unseen and rare objects/actions (and their combinations).
Spatial knowledge has also improved object recognition
(Shiang et al. 2017). These authors mine texts and labeled
images to obtain spatial knowledge in the form of object
co-occurrences and their relative positions. This knowledge
is represented in a graph and a random walk algorithm over
this graph results in a ranking of possible object labellings.
Contrarily, our representations of spatial knowledge are
neural network based, are not primarily used for object
recognition, and we furthermore predict spatial templates.

Common sense spatial knowledge. Yatskar, Ordonez,
and Farhadi (2016) propose a model to extract common
sense facts from annotated images and their textual de-
scriptions using co-occurrence statistics among which is
point-wise mutual information (PMI). These facts include
six spatial relationships (“on”, “under”, “touches”, ”above”,
”besides”, ”holds”, ”on”, and ”disconnected”). The result is
a symbolic (discretized) representation of common sense
knowledge in the form of relations between objects that
logically entail other relational facts. Our method also
extracts common sense knowledge from images and text,
but predicts (continuous) spatial templates. Lin and Parikh
(2015) leverage common sense visual knowledge (e.g., object
locations and co-occurrences) in the tasks of ﬁll-in-the-blank
and visual paraphrasing. They compute the likelihood of a
scene to identify the most likely answer to multiple-choice
textual scene descriptions. In contrast, we focus solely on
spatial information—and in assuring the correctness of our
spatial predictions—rather than on scene understanding.

Image generation. Although models
that generate
images from text exist (e.g., DRAW model (Gregor et al.
2015)), their focus is quite distant from producing “spatially
sensible” images and they are generally meant to generate a
single object rather than placing it relative to other objects.

As discussed, spatial knowledge can improve a wide
range of tasks (Shiang et al. 2017; Lin and Parikh 2015;
Elliott and Keller 2013). This suggests that the predictions

such as “if a man is feeding a horse, where is the man relative
to the horse?” or ”where would a child wear her shoes?”

3.2 Proposed models

To build a mapping from the input to the output in our task
(Sect. 3.1) we propose two simple neural models (Fig. 1).
Their architecture is identical in the input and representation
layers, yet they differ in the output and loss function.

(i) Input and representation layers. An embedding layer
maps the three input words (S, R, O) to their respec-
tive d-dimensional vectors wSWS, wRWR, wOWO, where
wS ∈ R|VS |, wR ∈ R|VR|, wO ∈ R|VO| are one-hot encod-
ings of S, R, O (a.k.a. one-of-k encoding, i.e., a sparse vector
with 0 everywhere except for a 1 at the position of the k-th
word) and WS ∈ Rd×|VS |, WR ∈ Rd×|VR|, WO ∈ Rd×|VO|
their embedding matrices with |VS|, |VR|, |VO| their vocab-
ulary sizes. This layer represents objects and relationships
as continuous features, enabling thus to introduce external
knowledge of unseen objects as features. The embeddings are
then concatenated with the Subject center Sc and size Sb in
a vector [wSWS, wRWR, wOWO, Sc, Sb] which is inputted
to a stack of hidden layers that compose S, R and O into a
joint hidden representation zh:

zh = f (Wh[wSWS, wRWR, wOWO, Sc, Sb] + bh)

where f (·) is an element-wise non-linear function and Wh
and bh are the weight matrix and bias respectively.3

(ii) Output and loss. We consider two different possibilities
for the output ˆy that follows immediately after the last layer:
zout = Woutzh + bout (Fig. 1, top left).

• Model 1 (REG). A regression model where the output are
the Object coordinates and size ˆy = zout = [(cid:99)Oc,(cid:99)Ob] ∈ R4
and is evaluated against the true y = [Oc, Ob] with a mean
squared error (MSE) loss: L(y, ˆy) = (cid:107)ˆy − y(cid:107)2.

• Model 2 (PIX). The output ˆy = σ(zout) = (ˆyi,j) ∈
RM ×M , where M is the number of pixels per side and σ()
an element-wise sigmoid, is now a 2D heatmap of pixel
activations ˆyi,j ∈ [0, 1] indicating the probability that a
pixel belongs to the Object (class 1). Predictions ˆy are eval-
uated against the true y = (yi,j) ∈ RM ×M with a binary
cross-entropy loss: L(y, ˆy) = − (cid:80)M
j=1 yi,j ˆyi,j −
i=1
(1 − yi,j) log(1 − ˆyi,j), where yi,j ∈ {0, 1}.

(cid:80)M

These models are conceptually different and have different
capabilities. While the REG model outputs “crisp” pointwise
predictions, PIX can model more diffuse spatial templates
where the location of the object has more variability, e.g., in
(man, ﬂying, kite) the “kite” can easily move around. Notice
that in contrast with convolutional neural networks (CNNs)
our approach does not make use of the image pixels (Fig. 1),
yielding a model fully specialized in spatial knowledge.

3Similarly, zh can be composed with more hidden layers.

Figure 1: Overview of our models (left) and the image pre-
processing setting (right).

of our models can be used as spatial common sense input
for methods that rely on good spatial priors. Additionally,
existing methods require the spatial information to be present
in the data and lack the capacity to extrapolate/generalize.
Thus,
in this paper we focus, ﬁrst, on showing that
generalizing spatial arrangements to unseen objects and
object-relation-object combinations is possible and, second,
on ensuring that the predicted templates are accurate by
performing several quantitative and qualitative evaluations.

3 Proposed task and model

y] ∈ R2, where Oc

3.1 Proposed task
To learn spatial templates, we propose the task of predicting
the 2D relative spatial arrangement of two objects under a
relationship given a structured text input of the form (Subject,
Relationship, Object)—henceforth abbreviated as (S, R, O).
Let us denote the 2D coordinates of the center (“c”) of the
x ∈ R and
x, Oc
Object’s box as Oc = [Oc
y ∈ R are the horizontal and vertical components respec-
Oc
y] ∈ R2 be half of the width (Ob
x, Ob
tively. Let Ob = [Ob
x) and
half of the height (Ob
y) of the Object’s box (“b”). We employ
a similar notation for the Subject (Sc, Sb), and model predic-
tions are denoted with a hat (cid:99)Oc, (cid:99)Ob. The task consists in pre-
dicting the Object’s location and size [Oc,Ob] ∈ R4 (output)
given the structured text input (S, R, O) and the location Sc
and size Sb of the Subject (Fig. 1).2 This deﬁnes a supervised
task where the size and location of bounding boxes in images
serve as ground truth. Our task can be interpreted as a spatial
question-answering with structured questions (triplets) that
allows evaluating the answer quantitatively in a 2D space.
Hence, the goal is to answer common sense spatial questions

2Crucially, we notice that knowing the Subject’s coordinates is
not a requirement for generating templates (but only for evaluating
against the ground truth) since inputting arbitrary coordinates (e.g.,
Sc=[0.5, 0.5]) still enables visualizing relative object locations. Ad-
ditionally, we input the Subject’s size in order to provide a reference
size to the model. However, we ﬁnd that without this input, the
model still learns to predict an “average size” for each Object.

4 Experimental setup
We employ a 10-fold cross-validation (CV) setting. Data are
randomly split into 10 disjoint parts and 10% is employed
for testing and 90% for training, repeating this for each of
the 10 folds. Reported results are averages over the 10 folds.

4.1 Visual Genome data set
We use the Visual Genome dataset (Krishna et al. 2017) as
our source of annotated images. The Visual Genome consists
of ∼108K images containing ∼1.5M human-annotated (Sub-
ject, Relationship, Object) instances with bounding boxes for
Subject and Object (Fig. 2). We ﬁlter out all the instances con-
taining explicit spatial prepositions, preserving only instances
with implicit spatial relationships. We keep only combina-
tions for which we have word embeddings available for the
whole triplet (S, R, O). After this ﬁltering, ∼378K instances
are preserved, yielding 2,183 unique implicit Relationships
and 5,614 unique objects (i.e., Subjects and Objects). The left
out instances of explicit language yield ∼852K instances, 36
unique explicit spatial prepositions and 6,749 unique objects.

Figure 2: Sample of images with object boxes and relation-
ships from Visual Genome.

4.2 Evaluation sets
We consider the following subsets of the Visual Genome data
to evaluate performance.
(i) Raw data: Simply the unﬁltered instances from the Visual
Genome data (Sect. 4.1). This set contains a substantial pro-
portion of meaningless (e.g., (nose, almost, touching)) and
irrelevant (e.g., (sign, says, gate 2)) instances.
(ii) Generalized Triplets: We pick at random 100 combi-
nations (S, R, O) among the 1,000 most frequent implicit
combinations in Visual Genome. This yields ∼25K instances
such as (person, holding, racket), (man, ﬂying, kite), etc.4
(iii) Generalized Words: We randomly choose 25 objects
(e.g., “woman”, “apple”, etc.)5 among the 100 most frequent
objects in Visual Genome and take all the instances (∼130K)
that contain any of these words. For example, since “apple”
is in our list, e.g., (cat, snifﬁng, apple) is kept.6 Notice that a
combination (S, R, O) with a generalized word is automati-
cally a generalized triplet too.

4This evaluation set along with our Supplementary material are

available at https://github.com/gcollell/spatial-commonsense.

5The complete list of objects is: [surfboard, shadow, head, surfer,
woman, bear, bag, sunglasses, hair, apple, grass, water, eye, shoes,
foot, jeans, jacket, bus, bike, cat, sky, elephant, tree, plane, eyes].

6We also evaluated a list of generalized Relationships, obtaining
similar results. We additionally tested two extra lists of generalized
objects, which yielded consistent results.

When enforcing generalization conditions in our experi-
ments, all combinations from sets (ii) and (iii) are removed
from the training data to prevent the model from seeing
them.7 Even without imposing generalization conditions (or
when testing with Raw data), reported results are always on
unseen instances—yet the combinations (S, R, O) may have
been seen during training (e.g., in different images). All sets
above contain exclusively implicit spatial language, although
an analogous version of the Raw set where R are explicit
spatial prepositions is also considered in our experiments.

4.3 Data pre-processing
The coordinates of bounding boxes in the images are normal-
ized by the width and height of the image. Thus, Sc, Oc ∈
[0, 1]2. Additionally, we notice that the distinction between
left and right is arbitrary regarding the semantics of the im-
age (Singhal, Luo, and Zhu 2003). That is, a mirrored image
preserves entirely its meaning—while a vertically inverted
image does not. For example, a “child” “walking” a “horse”
can meaningfully be at either side of the “horse”, while a
“child” “riding” a “horse” cannot be either above or below
the “horse”. Hence, to free the model from such arbitrariness,
we mirror the image when (and only when) the Object is
at the left hand side of the Subject. This leaves the Object
always to the right-hand side of the Subject. Notice that mir-
roring is aimed at properly measuring performance and does
not impose any big constraint (one can simply consider the
symmetric reﬂection of the predictions as equally likely).

4.4 Evaluation metrics
The REG model directly outputs Object coordinates, while
PIX outputs 2D heatmaps. We however enable evaluating the
PIX model with regression/classiﬁcation metrics by taking
the point of maximum activation (or their average, if there are
many) as the Object center (cid:99)Oc. The predicted Object size (cid:99)Ob
is not estimated. We use the following performance metrics.

(A) Intersection over Union (IoU). We compute the
bounding box overlap (IoU) from the PASCAL VOC
object detection task (Everingham et al. 2015): IoU =
area((cid:100)BO∩BO)
where (cid:99)BO and BO are the predicted and
area((cid:100)BO∪BO)
ground truth Object bounding boxes, respectively. If the IoU
is larger than 50%, the prediction is counted as correct. It
must be noted that our setting is not comparable to object
detection (nor our results) since we do not employ the image
as input (but text) and thus we cannot leverage the pixels to
predict the Object’s location.

(B) Regression. We consider standard regression metrics.

7To avoid confusion with the term ‘zero-shot’ in classiﬁcation,
we denote our unseen words/triplets as generalized. Although both
settings have resemblances, they differ in that, in ours, the unseen
categories are inputs while in classiﬁcation are targets. Notice that in
both settings one must necessarily have semantic knowledge about
the “zero-shot” class at hand (Socher et al. 2013) (e.g., in the form
of word embeddings), otherwise the task is clearly infeasible.

(i) Coefﬁcient of Determination (R2) of model predictions
ˆy = [(cid:99)Oc, (cid:99)Ob] and ground truth y = [Oc, Ob]. R2 is widely
used to evaluate goodness of ﬁt of a model in regression. The
best R2 score is 1 while the worst one is arbitrarily negative.
A constant prediction would obtain a score of 0.
(ii) Pearson Correlation (r) between the predicted (cid:99)Oc
the true Oc
the y-components (cid:99)Oc

x and
x x-component of the Object center. Similarly for

y and Oc
y.

(C) Above/below classiﬁcation. With the semantic distinc-
tion between vertical and horizontal axes in mind (Sect. 4.3),
we consider the problem of classifying above/below rela-
tive locations. If the model predicts that the Object center is
above/below the Subject center and this actually occurs in
the image we count it as correct. That is, sign( (cid:99)Oc
y) and
sign(Oc
y) must match. We report macro-averaged F1
(F1y) and macro-averaged accuracy (accy).

y − Sc

y − Sc

(D) Pixel macro accuracy (px-acc). Accuracy or correct
classiﬁcation rate per pixel may not be a good measure here,
where class 1 (Object box) comprises, on average, only 5%
of the pixels. Thus, a constant prediction of zeros everywhere
would obtain 95% accuracy. Hence, we consider macro-
averaged pixel accuracy (px-acc), namely the average of
recall of class 0 and recall of class 1. We report the best
px-acc across the full range of decision thresholds on the
predicted pixel-wise conﬁdence scores.

4.5 Word embeddings
We use 300-dimensional GloVe word embeddings (Penning-
ton, Socher, and Manning 2014) pre-trained on the Common
Crawl corpus (consisting of 840B-tokens), which we obtain
from the authors’ website.8

4.6 Model hyperparameters and implementation
Our experiments are implemented in Python 2.7 and we use
Keras deep learning framework for our models (Chollet and
others 2015). Model hyperparameters are ﬁrst selected in a 10-
fold cross-validation setting and we report (averaged) results
on 10 new splits. Models are trained for 10 epochs on batches
of size 64 with the RMSprop optimizer using a learning rate
of 0.0001 and 2 hidden layers with 100 ReLu units. We ﬁnd
that the models are not very sensitive to parameter variations.
The parameters of the embeddings are not backpropagated,
although we ﬁnd that this choice has little effect on the results.
We employ a 15 × 15 pixel grid as output of the PIX model.

5 Results and discussion
We consider the evaluation sets from Sect. 4.2 and the fol-
lowing variations of PIX and REG models (Sect. 3.2). The
subindex EMB denotes a model that employs GloVe embed-
dings and RND a model with embeddings randomly drawn
from a dimension-wise normal distribution of mean (µ) and
standard deviation (σ) equal to those of the GloVe embed-
dings, preserving the original dimensionality (d=300). A

8 http://nlp.stanford.edu/projects/glove

t
i
c
i
l
p
m

I

t
i
c
i
l
p
x
E

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.704
0.693
0.720
-0.999

0.585
0.576
0.604
-1.001

-
-
-
-

-
-
-
-

accy
0.751
0.750
0.764
0.522

0.713
0.702
0.716
0.514

0.771
0.769
0.779
0.633

0.729
0.721
0.723
0.589

F1y
0.750
0.749
0.764
0.522

0.714
0.702
0.717
0.513

0.773
0.769
0.780
0.630

0.726
0.719
0.720
0.581

rx
0.892
0.890
0.897
0.002

0.831
0.821
0.852
0.000

0.810
0.806
0.814
0.000

0.716
0.709
0.709
0.001

ry
0.835
0.828
0.843
0.001

0.755
0.742
0.778
-0.001

0.822
0.815
0.827
-0.001

0.768
0.758
0.760
0.000

IoU

px-acc

0.117
0.120
0.152
0.075

0.345
0.327
0.384
0.042

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.862
0.856
0.857
0.500

0.817
0.812
0.810
0.500

Table 1: Results on the Raw test data.

third type employs one-hot vectors (1H). We additionally
consider a control method (ctrl) that outputs random normal
predictions of µ and σ equal to the dimension-wise mean and
standard deviation of the training targets. We test statistical
signiﬁcance with a Friedman rank test and post hoc Nemenyi
tests on the results of the 10 folds. We indicate with an aster-
isk ∗ in the tables when a method is signiﬁcantly better than
the rest (p < 0.01) within the same model (PIX or REG).

5.1 Evaluation with raw data
Table 1 shows that all methods perform well considering the
amount of noise present in the Raw data. Especially note-
worthy is the ﬁnding that relative locations can be predicted
from implicit spatial language approximately as accurately as
from explicit spatial language. Interestingly, unlike the other
metrics, the IoU (which only counts a prediction as correct if
the overlap between true and predicted boxes is larger than
50%) is clearly higher in explicit than in implicit language,
which suggests that implicit templates exhibit more ﬂexibility
on the Object’s location. Hence, “blurrier” predictions such
as those of PIX can be a good choice in some applications,
e.g., computing the soft ﬁt between images and templates to
perform (spatially informed) image retrieval. We also observe
that models with 1H embeddings tend to perform better, yet
differences are generally only signiﬁcant against RND.

5.2 Generalized evaluations
Table 2 shows that all models perform well on generalized
triplets (top left), remarkably closely to their performance
without imposing generalization conditions (right). Again,
1H performs slightly better, yet only signiﬁcantly better than
RND (p < 0.005). Notably, the good performance of RND
on generalized triplets evidences that the model does not
rely on external knowledge (word embeddings) to predict un-
seen combinations. This ability of generalizing from frequent
combinations (S, R, O) to rare/unseen ones is especially
valuable given the sparsity of implicit combinations and the
impossibility of learning all of them from data.

Contrarily, larger performance differences are observed
with generalized words (Tab. 2, bottom left) where, as ex-
pected, EMB outperforms RND and 1H embeddings by a

Generalization

No Generalization

IoU

px-acc

IoU

px-acc

s
t
e
l
p
i
r
T

s
d
r
o
W

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.746
0.731
0.764
-1.097

-
-
-
-
0.633∗
0.438
0.425
-1.022

-
-
-
-

accy
0.784
0.770
0.790
0.516

0.751
0.740
0.738
0.509
0.742∗
0.630
0.596
0.519
0.717∗
0.644
0.591
0.512

F1y
0.777
0.770
0.794
0.506

0.760
0.750
0.752
0.502
0.741∗
0.629
0.586
0.518
0.719∗
0.643
0.590
0.511

rx
0.903
0.899
0.906
0.001

0.835
0.836
0.868
-0.002
0.877∗
0.852
0.855
0.000

0.802
0.764
0.813
-0.001

ry
0.877
0.863
0.880
0.002

0.813
0.799
0.830
0.001
0.795∗
0.603
0.621
0.000
0.722∗
0.587
0.573
0.000

0.122
0.126
0.166
0.077

-
-
-
-
0.075∗
0.046
0.053
0.075

-
-
-
-

-
-
-
-

0.878
0.868
0.874
0.500

-
-
-
-
0.835∗
0.780
0.764
0.500

R2

0.774
0.776
0.791
-1.097

0.725
0.718
0.740
-1.017

-
-
-
-

-
-
-
-

accy
0.795
0.796
0.802
0.515

0.756
0.744
0.748
0.511

0.788
0.788
0.802
0.518

0.757
0.747
0.760
0.511

F1y
0.797
0.797
0.807
0.506

0.766
0.756
0.761
0.503

0.786
0.787
0.802
0.518

0.760
0.749
0.763
0.511

rx
0.908
0.909
0.913
-0.004

0.852
0.843
0.876
-0.009

0.896
0.895
0.900
0.002

0.832
0.823
0.852
0.002

ry
0.889
0.887
0.895
-0.002

0.824
0.820
0.842
-0.001

0.856
0.850
0.862
-0.001

0.784
0.775
0.799
-0.001

0.151
0.161
0.203
0.077

0.128
0.132
0.167
0.074

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.886
0.885
0.887
0.501

0.870
0.866
0.866
0.500

Table 2: Results on generalized triplets (top) and generalized words (bottom) (see Sect. 4.2). The tables on the right show results
on the same sets without imposing generalization conditions, i.e., allowing to see all combinations/words during training.

margin thanks to the transference of knowledge from word
embeddings combined with the acquired spatial knowledge.

5.3 Qualitative evaluation (spatial templates)
To ensure that model predictions are meaningful and inter-
pretable, we further validate the quantitative results above
with a qualitative evaluation. Notice that all plots in Fig. 3
are generalized (either unseen words or triplets). Both, PIX
and REG are able to infer the size and location of the Object
notably well in unseen triplets (Fig. 3, bottom), regardless
of the embedding type (EMB or RND). However, in unseen
words (Fig. 3, top), the models that leverage word embed-
dings (EMB) tend to perform better, aligning with the quanti-
tative results above. Remarkably, both PIXEMB and REGEMB
output very accurate predictions in generalized words (top),
e.g., predicting correctly the size (and location) of an “ele-
phant” relative to a “kid” even though the model has never
seen an “elephant” before. Noticeably, the models learn to
compose the triplets, distinguishing, for instance, between
“carrying a surfboard” and “riding a surfboard” or between
“playing frisbee” and “holding a frisbee”, etc.

The mapping of language to a 2D visualization provides
another interesting property. Traditional language processing
systems translate spatial information to qualitative symbolic
representations that capture spatial knowledge with a limited
symbolic vocabulary and that are used in qualitative spatial
reasoning (Cohn and Renz 2008). Research shows that trans-
lation of language to qualitative spatial symbolic representa-
tions is difﬁcult (Kordjamshidi and Moens 2015), obtaining
rather low F1 measures on recognition performance, even if
the language utterance is accompanied by visual data (Ko-
rdjamshidi et al. 2017). Here, we have shown that we can
translate language utterances into visualizations in a quantita-
tive 2D space, complementing thus existing symbolic models.

Interpretation of model weights

5.4
We study how the weights of the model provide insight into
the spatial properties of words. To obtain more interpretable

weights, we learn a REG9 model without hidden layers, result-
ing in only an embedding layer followed by a linear output
layer ˆy = Woutu + bout, where u := [wS, wR, wO, Sc, Sb].
By using one-hot encodings wS, wR, wO, the concatenation
layer u becomes of size |VS| + |VR| + |VO| + 2 + 2. E.g., if
“wearing” has one-hot index j in the Relationships’ vocabu-
lary (VR), its index in the concatenation layer is |VS| + j. The
product Woutu is a 4-dimensional vector, where its i-th com-
ponent is the product of the i-th row of Wout with the vector
u. Thus, the component |VS|+j of the i-th row of Wout gives
us the inﬂuence of the j-th relationship (i.e., “wearing”) on
y] ∈ R4.
the i-th dimension of the output ˆy = [ (cid:99)Oc

x, (cid:99)Oc

x, (cid:99)Ob

y, (cid:99)Ob

Implicit

Explicit

Objects

Relationships

Objects

Relationships

headband
visor
hoof
sandals
kite

-0.275
-0.266
0.246
0.241
-0.234

ﬂying
kicking
cutting
catching
riding

fryer
books
avenue
english
burger

see
ﬂoat

3.7e-5
3.2e-5
-3.0e-5 ﬁnding
pulled
2.6e-5
removes
8.2e-5

-0.194
0.148
0.142
-0.132
0.119

-6.8e-5
5.8e-5
5.2e-5
2.6e-5
1.6e-5

hook
glasses
sailboat
vase
woods

spools
glasss
dune
cookies
sill

-0.160
-0.160
-0.159
0.151
-0.149

below
above
beneath
under
over

in

7.5e-5
-7.1e-5 along
7.0e-5
6.7e-5
-5.1e-5 inside

at
on

-0.212
0.199
-0.144
-0.140
0.131

-0.011
0.008
-0.006
0.005
-0.002

Table 3: Words with the ten largest (top) and smallest (bot-
tom) weights in absolute value for the Object’s y-coordinate
( (cid:99)Oc
y), in implicit and explicit language (learned in Raw data).

Table 3 shows the weights inﬂuencing the y-coordinate (cid:99)Oc
y.
We notice that objects such as “kite” or “headband” which
tend to be above the Subject have a large negative weight,
while objects that tend to be below, e.g., “sandals” or “hoof”,
have a large positive weight, i.e., a large positive inﬂuence
on the Object’s y-coordinate. While implicit relations such
as “kicking” or “riding” are strong predictors of the Object’s

9Unlike PIX, the REG model directly outputs coordinates and

thus allows for an easy interpretation of the weights.

Figure 3: Model predictions for generalized words (top) and triplets (bottom). Model (PIX, REG) and embedding types (EMB,
RND) are as indicated in the legend on the left. The Subject’s location is given (blue box) and the model predicts the Object
(red). In PIX, the intensity of the red corresponds to the predicted probability. The generalized (unseen) words are underlined.

gether, the generally small weights of the implicit relations
(and therefore their inﬂuence on the template) emphasize the
need of composing the triplet (Subject, Relationship, Object)
as a whole rather than modeling the Relationship alone.

6 Conclusions

Overall, this paper provides insight into the fundamental dif-
ferences between implicit and explicit spatial language and
extends the concept of spatial templates to implicit spatial
language, the understanding of which requires common sense
spatial knowledge about objects and actions. We deﬁne the
task of predicting relative spatial arrangements of two objects
under a relationship and present two embedding-based neu-
ral models that attain promising performance, proving that
spatial templates can be accurately predicted from implicit
spatial language. Remarkably, our models generalize well,
predicting correctly unseen (generalized) object-relationship-
object combinations. Furthermore, the acquired common
sense spatial knowledge—aided with word embeddings—
allows the model to correctly predict templates for unseen
words. Finally, we show that the weights of the model provide
great insight into the spatial connotations of words.

A ﬁrst limitation of our approach is the fully supervised
setting where the models are trained using images with de-
tected ground truth objects and parsed text—which aims at
keeping the design clean in this ﬁrst study on implicit spa-
tial templates. Notice however that methods to automatically
parse images and text exist. In future work, we aim at im-
plementing our approach in a weakly supervised setting. A
second limitation is the 2D spatial treatment of the actual
3D world. It is worth noting however, that our models (PIX
and REG) and setting trivially generalize to 3D if appropriate
data are available.

Figure 4: Weights in absolute value of the REG model for
implicit (top) and explicit (bottom) Relationships. For read-
ability, the labels on the x-axis have been undersampled.

y-coordinate, “ﬁnding” or “pulled” are weak, suggesting that
the spatial template rather depends on their composition with
the Subject and Object. In fact, the weights of implicit rela-
tions such as “ﬂying” or “riding” are comparable to those
of explicit relations such as “above” or “atop”, behaving
similarly to explicit language. Notice that even the less infor-
mative explicit relations have weights of at least one order of
magnitude larger that the least informative implicit relations.
Figure 4 further evidences that explicit relationships generally
have larger weights than those of implicit relationships. Alto-

[Logan and Sadler 1996] Logan, G. D., and Sadler, D. D.
1996. A computational analysis of the apprehension of spatial
relations. Language and space.
[Long, Shelhamer, and Darrell 2015] Long, J.; Shelhamer,
E.; and Darrell, T. 2015. Fully convolutional networks for
semantic segmentation. In CVPR, 3431–3440.
[Malinowski and Fritz 2014] Malinowski, M., and Fritz, M.
2014. A pooling approach to modelling spatial rela-
tions for image retrieval and annotation. arXiv preprint
arXiv:1411.5190.
[Moratz and Tenbrink 2006] Moratz, R., and Tenbrink, T.
2006. Spatial reference in linguistic human-robot interac-
tion: Iterative, empirically supported development of a model
of projective relations. Spatial Cognition and Computation
6(1):63–107.
J.;
[Pennington, Socher, and Manning 2014] Pennington,
Socher, R.; and Manning, C. D. 2014. Glove: Global vectors
for word representation. In EMNLP, volume 14, 1532–1543.
[Shiang et al. 2017] Shiang, S.-R.; Rosenthal, S.; Gershman,
A.; Carbonell, J. G.; and Oh, J. 2017. Vision-language fusion
for object recognition. In AAAI, 4603–4610.
[Singhal, Luo, and Zhu 2003] Singhal, A.; Luo, J.; and Zhu,
W. 2003. Probabilistic spatial context models for scene
content understanding. In CVPR, volume 1, I–I. IEEE.
[Socher et al. 2013] Socher, R.; Ganjoo, M.; Manning, C. D.;
and Ng, A. 2013. Zero-shot learning through cross-modal
transfer. In NIPS, 935–943.
[Yatskar, Ordonez, and Farhadi 2016] Yatskar, M.; Ordonez,
V.; and Farhadi, A. 2016. Stating the obvious: Extracting
visual common sense knowledge. In NAACL-HLT, 193–198.

Acknowledgments
This work has been supported by the CHIST-ERA EU project
MUSTER10 and by the KU Leuven grant RUN/15/005. G.C.
additionally acknowledges a grant from the IV&L network11
(ICT COST Action IC1307).

References
[Chollet and others 2015] Chollet, F., et al. 2015. Keras.
https://github.com/fchollet/keras.
[Cohn and Renz 2008] Cohn, A. G., and Renz, J. 2008. Qual-
itative spatial representation and reasoning. In van Harmelen,
F.; Lifschitz, V.; and Porter, B. W., eds., Handbook of Knowl-
edge Representation, volume 3 of Foundations of Artiﬁcial
Intelligence. Elsevier. 551–596.
[Collell and Moens 2016] Collell, G., and Moens, M.-F. 2016.
Is an image worth more than a thousand words? On the
ﬁne-grain semantic differences between visual and linguistic
representations. In COLING, 2807–2817. ACL.
[Elliott and Keller 2013] Elliott, D., and Keller, F. 2013. Im-
age description using visual dependency representations. In
EMNLP, volume 13, 1292–1302.
[Everingham et al. 2015] Everingham, M.; Eslami, S. A.;
Van Gool, L.; Williams, C. K.; Winn, J.; and Zisserman,
A. 2015. The PASCAL visual object classes challenge:
A retrospective. International Journal of Computer Vision
111(1):98–136.
[Gregor et al. 2015] Gregor, K.; Danihelka, I.; Graves, A.;
Rezende, D. J.; and Wierstra, D. 2015. Draw: A recur-
rent neural network for image generation. arXiv preprint
arXiv:1502.04623.
[Guadarrama et al. 2013] Guadarrama, S.; Riano, L.; Gol-
land, D.; Go, D.; Jia, Y.; Klein, D.; Abbeel, P.; Darrell, T.;
et al. 2013. Grounding spatial relations for human-robot
interaction. In IROS, 1640–1647. IEEE.
[Kordjamshidi and Moens 2015] Kordjamshidi,
and
Moens, M.-F. 2015. Global machine learning for spatial
ontology population. Journal of Web Semantics 30:3–21.
[Kordjamshidi et al. 2017] Kordjamshidi, P.; Rahgooy, T.;
Moens, M.-F.; Pustejovsky, J.; Manzoor, U.; and Roberts,
K. 2017. CLEF 2017: Multimodal spatial role labeling
(mSpRL) task overview. In CLEF, 367–376.
[Krishna et al. 2017] Krishna, R.; Zhu, Y.; Groth, O.; John-
son, J.; Hata, K.; Kravitz, J.; Chen, S.; Kalantidis, Y.; Li,
L.-J.; Shamma, D. A.; et al. 2017. Visual genome: Con-
necting language and vision using crowdsourced dense im-
age annotations. International Journal of Computer Vision
123(1):32–73.
[Kruijff et al. 2007] Kruijff, G.-J. M.; Zender, H.; Jensfelt, P.;
and Christensen, H. I. 2007. Situated dialogue and spatial
organization: What, where and why? International Journal
of Advanced Robotic Systems 4(1):16.
[Lin and Parikh 2015] Lin, X., and Parikh, D. 2015. Don’t
just listen, use your imagination: Leveraging visual common
sense for non-visual tasks. In CVPR, 2984–2993.

P.,

10http://www.chistera.eu/projects/muster
11http://ivl-net.eu

Acquiring Common Sense Spatial Knowledge through Implicit Spatial Templates

Guillem Collell
Department of Computer Science
KU Leuven
gcollell@kuleuven.be

Luc Van Gool
Computer Vision Laboratory
ETH Zurich
vangool@vision.ee.ethz.ch

Marie-Francine Moens
Department of Computer Science
KU Leuven
sien.moens@cs.kuleuven.be

0
2
0
2
 
r
a

M
 
6
 
 
]
I

A
.
s
c
[
 
 
3
v
1
2
8
6
0
.
1
1
7
1
:
v
i
X
r
a

Abstract

Spatial understanding is a fundamental problem with wide-
reaching real-world applications. The representation of spatial
knowledge is often modeled with spatial templates, i.e., re-
gions of acceptability of two objects under an explicit spatial
relationship (e.g., “on”, “below”, etc.). In contrast with prior
work that restricts spatial templates to explicit spatial preposi-
tions (e.g., “glass on table”), here we extend this concept to
implicit spatial language, i.e., those relationships (generally
actions) for which the spatial arrangement of the objects is
only implicitly implied (e.g., “man riding horse”). In contrast
with explicit relationships, predicting spatial arrangements
from implicit spatial language requires signiﬁcant common
sense spatial understanding. Here, we introduce the task of
predicting spatial templates for two objects under a relation-
ship, which can be seen as a spatial question-answering task
with a (2D) continuous output (“where is the man w.r.t. a
horse when the man is walking the horse?”). We present two
simple neural-based models that leverage annotated images
and structured text to learn this task. The good performance
of these models reveals that spatial locations are to a large
extent predictable from implicit spatial language. Crucially,
the models attain similar performance in a challenging gener-
alized setting, where the object-relation-object combinations
(e.g.,“man walking dog”) have never been seen before. Next,
we go one step further by presenting the models with unseen
objects (e.g., “dog”). In this scenario, we show that leveraging
word embeddings enables the models to output accurate spa-
tial predictions, proving that the models acquire solid common
sense spatial knowledge allowing for such generalization.

1

Introduction

To provide machines with common sense is one of the ma-
jor long term goals of artiﬁcial intelligence. Common sense
knowledge regards knowledge that humans have acquired
through a lifetime of experiences. It is crucial in language
understanding because a lot of content needed for correct
understanding is not expressed explicitly but resides in the
mind of communicator and audience. In addition, humans
rely on their common sense knowledge when performing a
variety of tasks including interpreting images, navigation and
reasoning, to name a few. Representing and understanding
spatial knowledge are in fact imperative for any agent (human,
animal or robot) that navigates in a physical world. In this

paper, we are interested in acquiring spatial commonsense
knowledge from language paired with visual data.

Computational and cognitive models often handle spa-
tial representations as spatial templates or regions of ac-
ceptability for two objects under an explicit (a.k.a. deic-
tic) spatial preposition such as “on”, “below” or “left” (Lo-
gan and Sadler 1996). Contrary to previous work that con-
ceives spatial templates only for explicit spatial language
(Malinowski and Fritz 2014; Moratz and Tenbrink 2006;
Logan and Sadler 1996), we extend such concept to im-
plicit (a.k.a. intrinsic) spatial language, i.e., relationships—
generally actions—that do not explicitly deﬁne the relative
spatial conﬁguration between the two objects (e.g., “glass
on table”) but only implicitly (e.g., “woman riding horse”).
In other words, implicit spatial templates capture the com-
mon sense spatial knowledge that humans possess and is not
explicit in the language utterances.

Predicting spatial templates for implicit relationships is no-
tably more challenging than for explicit relationships. Firstly,
whereas there are only a few tens of explicit spatial preposi-
tions, there exist thousands of actions, entailing thus a drastic
increase in the sparsity of (object1, relationship, object2)
combinations. Secondly, the complexity of the task radically
increases in implicit language. More precisely, while explicit
spatial prepositions1 are highly deterministic about the spatial
arrangements (e.g., (object1, below, object2) unequivocally
implies that object1 is relatively lower than object2), actions
generally are not. E.g., the relative spatial conﬁguration of
“man” and the object is clearly distinct in (man, pulling, kite)
than in (man, pulling, luggage) yet the action is the same.
Contrarily, other relationships such as “jumping” are highly
informative about the spatial template, i.e., in (object1, jump-
ing, object2), object2 is in a lower position than object1.
Hence, unlike explicit relationships, predicting spatial lay-
outs from implicit spatial language requires spatial common
sense knowledge about the objects, actions and their inter-
action, which suggests the need of learning to compose the
triplet (Subject, Relationship, Object) as a whole instead of
learning a template for each Relationship.

To systematically study these questions, we propose the

1Some prepositions (e.g., “on”) might be ambiguous as they can
express other circumstantial arguments such as time. Here, we refer
to spatial prepositions once they have been disambiguated as such.

task of predicting the relative spatial locations of two objects
given a structured text input (Subject, Relationship, Object).
We introduce two simple neural-based models trained from
annotated images that successfully address the two challenges
of implicit spatial language discussed above. Our quantita-
tive evaluation reveals that spatial templates can be reliably
predicted from implicit spatial language—as accurately as
from explicit spatial language. We also show that our models
generalize well to templates of unseen combinations, e.g.,
predicting (man, riding, elephant) without having been ex-
posed to such scene before, tackling thus the challenge of
sparsity. Furthermore, by leveraging word embeddings, the
models can correctly generalize to spatial templates with un-
seen words, e.g., predicting (man, riding, elephant) without
having ever seen an “elephant” before. Since word embed-
dings capture attributes of objects (Collell and Moens 2016),
one can reasonably expect that embeddings are informative
about the spatial behavior of objects, i.e., their likelihood of
exhibiting certain spatial patterns with respect to other ob-
jects. For instance, without having ever seen “boots” before
but only “sandals”, the model correctly predicts the template
of (person, wearing, boots) by inferring that, since “boots”
are similar to “sandals”, they must be worn at the same lo-
cation of the “person”’s body. Hence, the model leverages
the acquired common sense spatial knowledge to generalize
to unseen objects. Furthermore, we provide both, a qualita-
tive 2D visualization of the predictions, and an analysis of
the learned weights of the network which provide insight
into the spatial connotations of words, revealing fundamental
differences between implicit and explicit spatial language.

The rest of the paper is organized as follows. In Sect. 2 we
review related research. In Sect. 3 we ﬁrst introduce the task
of predicting spatial templates and then present two simple
neural models. Then, in Sect. 4, we describe our experimental
setup. In Sect. 5 we present and discuss our results. Finally,
in Sect. 6 we summarize the contributions of this article.

2 Related work
Spatial processing has drawn signiﬁcant attention from
the cognitive (Logan and Sadler 1996) and artiﬁcial
intelligence communities (Kruijff et al. 2007). More specif-
ically, spatial understanding is essential in tasks involving
text-to-scene conversion such as robots’ understanding
of natural language commands (Guadarrama et al. 2013;
Moratz and Tenbrink 2006) or robot navigation.

Spatial
templates. Earlier approaches have predomi-
nantly considered rule-based spatial representations (Kruijff
et al. 2007; Moratz and Tenbrink 2006). In contrast,
Malinowski and Fritz (2014) propose a learning-based
pooling approach to retrieve images given queries of the form
(object1, spatial preposition, object2). They learn the parame-
ters of a spatial template for each explicit spatial preposition
(e.g., “left” or “above”) which computes a soft spatial ﬁt
of two objects under the relationship. E.g., an object to the
left of the referent object obtains a high score for the “left”
template and low for the “right” template. Contrary to them,
we consider implicit spatial language instead of explicit.
Additionally, while they build a spatial template for each

(explicit) Relationship, we build a template for each (Subject,
Relationship, Object) combination, allowing the template to
be determined by the interaction/composition of the Subject,
Relationship and Object instead of the Relationship alone.
Additionally, the model from Malinowski and Fritz (2014)
does not output spatial arrangements of objects, nor can it
perform predictions with generalized (unseen) relationships.

Leveraging spatial knowledge in tasks. It has been
shown that knowledge of the spatial structure in images
improves the task of image captioning (Elliott and Keller
2013). These authors manually annotate images with
geometric relationships between objects and show that a
rule-based caption generation system beneﬁts from this
knowledge. In contrast to this work, our interest lies in
predicting spatial arrangements of objects from text instead
of generating text given images. Furthermore, while they
employ a small domain of only 10 actions, our goal is to learn
from frequent spatial conﬁgurations and generalize these to
unseen and rare objects/actions (and their combinations).
Spatial knowledge has also improved object recognition
(Shiang et al. 2017). These authors mine texts and labeled
images to obtain spatial knowledge in the form of object
co-occurrences and their relative positions. This knowledge
is represented in a graph and a random walk algorithm over
this graph results in a ranking of possible object labellings.
Contrarily, our representations of spatial knowledge are
neural network based, are not primarily used for object
recognition, and we furthermore predict spatial templates.

Common sense spatial knowledge. Yatskar, Ordonez,
and Farhadi (2016) propose a model to extract common
sense facts from annotated images and their textual de-
scriptions using co-occurrence statistics among which is
point-wise mutual information (PMI). These facts include
six spatial relationships (“on”, “under”, “touches”, ”above”,
”besides”, ”holds”, ”on”, and ”disconnected”). The result is
a symbolic (discretized) representation of common sense
knowledge in the form of relations between objects that
logically entail other relational facts. Our method also
extracts common sense knowledge from images and text,
but predicts (continuous) spatial templates. Lin and Parikh
(2015) leverage common sense visual knowledge (e.g., object
locations and co-occurrences) in the tasks of ﬁll-in-the-blank
and visual paraphrasing. They compute the likelihood of a
scene to identify the most likely answer to multiple-choice
textual scene descriptions. In contrast, we focus solely on
spatial information—and in assuring the correctness of our
spatial predictions—rather than on scene understanding.

Image generation. Although models
that generate
images from text exist (e.g., DRAW model (Gregor et al.
2015)), their focus is quite distant from producing “spatially
sensible” images and they are generally meant to generate a
single object rather than placing it relative to other objects.

As discussed, spatial knowledge can improve a wide
range of tasks (Shiang et al. 2017; Lin and Parikh 2015;
Elliott and Keller 2013). This suggests that the predictions

such as “if a man is feeding a horse, where is the man relative
to the horse?” or ”where would a child wear her shoes?”

3.2 Proposed models

To build a mapping from the input to the output in our task
(Sect. 3.1) we propose two simple neural models (Fig. 1).
Their architecture is identical in the input and representation
layers, yet they differ in the output and loss function.

(i) Input and representation layers. An embedding layer
maps the three input words (S, R, O) to their respec-
tive d-dimensional vectors wSWS, wRWR, wOWO, where
wS ∈ R|VS |, wR ∈ R|VR|, wO ∈ R|VO| are one-hot encod-
ings of S, R, O (a.k.a. one-of-k encoding, i.e., a sparse vector
with 0 everywhere except for a 1 at the position of the k-th
word) and WS ∈ Rd×|VS |, WR ∈ Rd×|VR|, WO ∈ Rd×|VO|
their embedding matrices with |VS|, |VR|, |VO| their vocab-
ulary sizes. This layer represents objects and relationships
as continuous features, enabling thus to introduce external
knowledge of unseen objects as features. The embeddings are
then concatenated with the Subject center Sc and size Sb in
a vector [wSWS, wRWR, wOWO, Sc, Sb] which is inputted
to a stack of hidden layers that compose S, R and O into a
joint hidden representation zh:

zh = f (Wh[wSWS, wRWR, wOWO, Sc, Sb] + bh)

where f (·) is an element-wise non-linear function and Wh
and bh are the weight matrix and bias respectively.3

(ii) Output and loss. We consider two different possibilities
for the output ˆy that follows immediately after the last layer:
zout = Woutzh + bout (Fig. 1, top left).

• Model 1 (REG). A regression model where the output are
the Object coordinates and size ˆy = zout = [(cid:99)Oc,(cid:99)Ob] ∈ R4
and is evaluated against the true y = [Oc, Ob] with a mean
squared error (MSE) loss: L(y, ˆy) = (cid:107)ˆy − y(cid:107)2.

• Model 2 (PIX). The output ˆy = σ(zout) = (ˆyi,j) ∈
RM ×M , where M is the number of pixels per side and σ()
an element-wise sigmoid, is now a 2D heatmap of pixel
activations ˆyi,j ∈ [0, 1] indicating the probability that a
pixel belongs to the Object (class 1). Predictions ˆy are eval-
uated against the true y = (yi,j) ∈ RM ×M with a binary
cross-entropy loss: L(y, ˆy) = − (cid:80)M
j=1 yi,j ˆyi,j −
i=1
(1 − yi,j) log(1 − ˆyi,j), where yi,j ∈ {0, 1}.

(cid:80)M

These models are conceptually different and have different
capabilities. While the REG model outputs “crisp” pointwise
predictions, PIX can model more diffuse spatial templates
where the location of the object has more variability, e.g., in
(man, ﬂying, kite) the “kite” can easily move around. Notice
that in contrast with convolutional neural networks (CNNs)
our approach does not make use of the image pixels (Fig. 1),
yielding a model fully specialized in spatial knowledge.

3Similarly, zh can be composed with more hidden layers.

Figure 1: Overview of our models (left) and the image pre-
processing setting (right).

of our models can be used as spatial common sense input
for methods that rely on good spatial priors. Additionally,
existing methods require the spatial information to be present
in the data and lack the capacity to extrapolate/generalize.
Thus,
in this paper we focus, ﬁrst, on showing that
generalizing spatial arrangements to unseen objects and
object-relation-object combinations is possible and, second,
on ensuring that the predicted templates are accurate by
performing several quantitative and qualitative evaluations.

3 Proposed task and model

y] ∈ R2, where Oc

3.1 Proposed task
To learn spatial templates, we propose the task of predicting
the 2D relative spatial arrangement of two objects under a
relationship given a structured text input of the form (Subject,
Relationship, Object)—henceforth abbreviated as (S, R, O).
Let us denote the 2D coordinates of the center (“c”) of the
x ∈ R and
x, Oc
Object’s box as Oc = [Oc
y ∈ R are the horizontal and vertical components respec-
Oc
y] ∈ R2 be half of the width (Ob
x, Ob
tively. Let Ob = [Ob
x) and
half of the height (Ob
y) of the Object’s box (“b”). We employ
a similar notation for the Subject (Sc, Sb), and model predic-
tions are denoted with a hat (cid:99)Oc, (cid:99)Ob. The task consists in pre-
dicting the Object’s location and size [Oc,Ob] ∈ R4 (output)
given the structured text input (S, R, O) and the location Sc
and size Sb of the Subject (Fig. 1).2 This deﬁnes a supervised
task where the size and location of bounding boxes in images
serve as ground truth. Our task can be interpreted as a spatial
question-answering with structured questions (triplets) that
allows evaluating the answer quantitatively in a 2D space.
Hence, the goal is to answer common sense spatial questions

2Crucially, we notice that knowing the Subject’s coordinates is
not a requirement for generating templates (but only for evaluating
against the ground truth) since inputting arbitrary coordinates (e.g.,
Sc=[0.5, 0.5]) still enables visualizing relative object locations. Ad-
ditionally, we input the Subject’s size in order to provide a reference
size to the model. However, we ﬁnd that without this input, the
model still learns to predict an “average size” for each Object.

4 Experimental setup
We employ a 10-fold cross-validation (CV) setting. Data are
randomly split into 10 disjoint parts and 10% is employed
for testing and 90% for training, repeating this for each of
the 10 folds. Reported results are averages over the 10 folds.

4.1 Visual Genome data set
We use the Visual Genome dataset (Krishna et al. 2017) as
our source of annotated images. The Visual Genome consists
of ∼108K images containing ∼1.5M human-annotated (Sub-
ject, Relationship, Object) instances with bounding boxes for
Subject and Object (Fig. 2). We ﬁlter out all the instances con-
taining explicit spatial prepositions, preserving only instances
with implicit spatial relationships. We keep only combina-
tions for which we have word embeddings available for the
whole triplet (S, R, O). After this ﬁltering, ∼378K instances
are preserved, yielding 2,183 unique implicit Relationships
and 5,614 unique objects (i.e., Subjects and Objects). The left
out instances of explicit language yield ∼852K instances, 36
unique explicit spatial prepositions and 6,749 unique objects.

Figure 2: Sample of images with object boxes and relation-
ships from Visual Genome.

4.2 Evaluation sets
We consider the following subsets of the Visual Genome data
to evaluate performance.
(i) Raw data: Simply the unﬁltered instances from the Visual
Genome data (Sect. 4.1). This set contains a substantial pro-
portion of meaningless (e.g., (nose, almost, touching)) and
irrelevant (e.g., (sign, says, gate 2)) instances.
(ii) Generalized Triplets: We pick at random 100 combi-
nations (S, R, O) among the 1,000 most frequent implicit
combinations in Visual Genome. This yields ∼25K instances
such as (person, holding, racket), (man, ﬂying, kite), etc.4
(iii) Generalized Words: We randomly choose 25 objects
(e.g., “woman”, “apple”, etc.)5 among the 100 most frequent
objects in Visual Genome and take all the instances (∼130K)
that contain any of these words. For example, since “apple”
is in our list, e.g., (cat, snifﬁng, apple) is kept.6 Notice that a
combination (S, R, O) with a generalized word is automati-
cally a generalized triplet too.

4This evaluation set along with our Supplementary material are

available at https://github.com/gcollell/spatial-commonsense.

5The complete list of objects is: [surfboard, shadow, head, surfer,
woman, bear, bag, sunglasses, hair, apple, grass, water, eye, shoes,
foot, jeans, jacket, bus, bike, cat, sky, elephant, tree, plane, eyes].

6We also evaluated a list of generalized Relationships, obtaining
similar results. We additionally tested two extra lists of generalized
objects, which yielded consistent results.

When enforcing generalization conditions in our experi-
ments, all combinations from sets (ii) and (iii) are removed
from the training data to prevent the model from seeing
them.7 Even without imposing generalization conditions (or
when testing with Raw data), reported results are always on
unseen instances—yet the combinations (S, R, O) may have
been seen during training (e.g., in different images). All sets
above contain exclusively implicit spatial language, although
an analogous version of the Raw set where R are explicit
spatial prepositions is also considered in our experiments.

4.3 Data pre-processing
The coordinates of bounding boxes in the images are normal-
ized by the width and height of the image. Thus, Sc, Oc ∈
[0, 1]2. Additionally, we notice that the distinction between
left and right is arbitrary regarding the semantics of the im-
age (Singhal, Luo, and Zhu 2003). That is, a mirrored image
preserves entirely its meaning—while a vertically inverted
image does not. For example, a “child” “walking” a “horse”
can meaningfully be at either side of the “horse”, while a
“child” “riding” a “horse” cannot be either above or below
the “horse”. Hence, to free the model from such arbitrariness,
we mirror the image when (and only when) the Object is
at the left hand side of the Subject. This leaves the Object
always to the right-hand side of the Subject. Notice that mir-
roring is aimed at properly measuring performance and does
not impose any big constraint (one can simply consider the
symmetric reﬂection of the predictions as equally likely).

4.4 Evaluation metrics
The REG model directly outputs Object coordinates, while
PIX outputs 2D heatmaps. We however enable evaluating the
PIX model with regression/classiﬁcation metrics by taking
the point of maximum activation (or their average, if there are
many) as the Object center (cid:99)Oc. The predicted Object size (cid:99)Ob
is not estimated. We use the following performance metrics.

(A) Intersection over Union (IoU). We compute the
bounding box overlap (IoU) from the PASCAL VOC
object detection task (Everingham et al. 2015): IoU =
area((cid:100)BO∩BO)
where (cid:99)BO and BO are the predicted and
area((cid:100)BO∪BO)
ground truth Object bounding boxes, respectively. If the IoU
is larger than 50%, the prediction is counted as correct. It
must be noted that our setting is not comparable to object
detection (nor our results) since we do not employ the image
as input (but text) and thus we cannot leverage the pixels to
predict the Object’s location.

(B) Regression. We consider standard regression metrics.

7To avoid confusion with the term ‘zero-shot’ in classiﬁcation,
we denote our unseen words/triplets as generalized. Although both
settings have resemblances, they differ in that, in ours, the unseen
categories are inputs while in classiﬁcation are targets. Notice that in
both settings one must necessarily have semantic knowledge about
the “zero-shot” class at hand (Socher et al. 2013) (e.g., in the form
of word embeddings), otherwise the task is clearly infeasible.

(i) Coefﬁcient of Determination (R2) of model predictions
ˆy = [(cid:99)Oc, (cid:99)Ob] and ground truth y = [Oc, Ob]. R2 is widely
used to evaluate goodness of ﬁt of a model in regression. The
best R2 score is 1 while the worst one is arbitrarily negative.
A constant prediction would obtain a score of 0.
(ii) Pearson Correlation (r) between the predicted (cid:99)Oc
the true Oc
the y-components (cid:99)Oc

x and
x x-component of the Object center. Similarly for

y and Oc
y.

(C) Above/below classiﬁcation. With the semantic distinc-
tion between vertical and horizontal axes in mind (Sect. 4.3),
we consider the problem of classifying above/below rela-
tive locations. If the model predicts that the Object center is
above/below the Subject center and this actually occurs in
the image we count it as correct. That is, sign( (cid:99)Oc
y) and
sign(Oc
y) must match. We report macro-averaged F1
(F1y) and macro-averaged accuracy (accy).

y − Sc

y − Sc

(D) Pixel macro accuracy (px-acc). Accuracy or correct
classiﬁcation rate per pixel may not be a good measure here,
where class 1 (Object box) comprises, on average, only 5%
of the pixels. Thus, a constant prediction of zeros everywhere
would obtain 95% accuracy. Hence, we consider macro-
averaged pixel accuracy (px-acc), namely the average of
recall of class 0 and recall of class 1. We report the best
px-acc across the full range of decision thresholds on the
predicted pixel-wise conﬁdence scores.

4.5 Word embeddings
We use 300-dimensional GloVe word embeddings (Penning-
ton, Socher, and Manning 2014) pre-trained on the Common
Crawl corpus (consisting of 840B-tokens), which we obtain
from the authors’ website.8

4.6 Model hyperparameters and implementation
Our experiments are implemented in Python 2.7 and we use
Keras deep learning framework for our models (Chollet and
others 2015). Model hyperparameters are ﬁrst selected in a 10-
fold cross-validation setting and we report (averaged) results
on 10 new splits. Models are trained for 10 epochs on batches
of size 64 with the RMSprop optimizer using a learning rate
of 0.0001 and 2 hidden layers with 100 ReLu units. We ﬁnd
that the models are not very sensitive to parameter variations.
The parameters of the embeddings are not backpropagated,
although we ﬁnd that this choice has little effect on the results.
We employ a 15 × 15 pixel grid as output of the PIX model.

5 Results and discussion
We consider the evaluation sets from Sect. 4.2 and the fol-
lowing variations of PIX and REG models (Sect. 3.2). The
subindex EMB denotes a model that employs GloVe embed-
dings and RND a model with embeddings randomly drawn
from a dimension-wise normal distribution of mean (µ) and
standard deviation (σ) equal to those of the GloVe embed-
dings, preserving the original dimensionality (d=300). A

8 http://nlp.stanford.edu/projects/glove

t
i
c
i
l
p
m

I

t
i
c
i
l
p
x
E

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.704
0.693
0.720
-0.999

0.585
0.576
0.604
-1.001

-
-
-
-

-
-
-
-

accy
0.751
0.750
0.764
0.522

0.713
0.702
0.716
0.514

0.771
0.769
0.779
0.633

0.729
0.721
0.723
0.589

F1y
0.750
0.749
0.764
0.522

0.714
0.702
0.717
0.513

0.773
0.769
0.780
0.630

0.726
0.719
0.720
0.581

rx
0.892
0.890
0.897
0.002

0.831
0.821
0.852
0.000

0.810
0.806
0.814
0.000

0.716
0.709
0.709
0.001

ry
0.835
0.828
0.843
0.001

0.755
0.742
0.778
-0.001

0.822
0.815
0.827
-0.001

0.768
0.758
0.760
0.000

IoU

px-acc

0.117
0.120
0.152
0.075

0.345
0.327
0.384
0.042

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.862
0.856
0.857
0.500

0.817
0.812
0.810
0.500

Table 1: Results on the Raw test data.

third type employs one-hot vectors (1H). We additionally
consider a control method (ctrl) that outputs random normal
predictions of µ and σ equal to the dimension-wise mean and
standard deviation of the training targets. We test statistical
signiﬁcance with a Friedman rank test and post hoc Nemenyi
tests on the results of the 10 folds. We indicate with an aster-
isk ∗ in the tables when a method is signiﬁcantly better than
the rest (p < 0.01) within the same model (PIX or REG).

5.1 Evaluation with raw data
Table 1 shows that all methods perform well considering the
amount of noise present in the Raw data. Especially note-
worthy is the ﬁnding that relative locations can be predicted
from implicit spatial language approximately as accurately as
from explicit spatial language. Interestingly, unlike the other
metrics, the IoU (which only counts a prediction as correct if
the overlap between true and predicted boxes is larger than
50%) is clearly higher in explicit than in implicit language,
which suggests that implicit templates exhibit more ﬂexibility
on the Object’s location. Hence, “blurrier” predictions such
as those of PIX can be a good choice in some applications,
e.g., computing the soft ﬁt between images and templates to
perform (spatially informed) image retrieval. We also observe
that models with 1H embeddings tend to perform better, yet
differences are generally only signiﬁcant against RND.

5.2 Generalized evaluations
Table 2 shows that all models perform well on generalized
triplets (top left), remarkably closely to their performance
without imposing generalization conditions (right). Again,
1H performs slightly better, yet only signiﬁcantly better than
RND (p < 0.005). Notably, the good performance of RND
on generalized triplets evidences that the model does not
rely on external knowledge (word embeddings) to predict un-
seen combinations. This ability of generalizing from frequent
combinations (S, R, O) to rare/unseen ones is especially
valuable given the sparsity of implicit combinations and the
impossibility of learning all of them from data.

Contrarily, larger performance differences are observed
with generalized words (Tab. 2, bottom left) where, as ex-
pected, EMB outperforms RND and 1H embeddings by a

Generalization

No Generalization

IoU

px-acc

IoU

px-acc

s
t
e
l
p
i
r
T

s
d
r
o
W

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.746
0.731
0.764
-1.097

-
-
-
-
0.633∗
0.438
0.425
-1.022

-
-
-
-

accy
0.784
0.770
0.790
0.516

0.751
0.740
0.738
0.509
0.742∗
0.630
0.596
0.519
0.717∗
0.644
0.591
0.512

F1y
0.777
0.770
0.794
0.506

0.760
0.750
0.752
0.502
0.741∗
0.629
0.586
0.518
0.719∗
0.643
0.590
0.511

rx
0.903
0.899
0.906
0.001

0.835
0.836
0.868
-0.002
0.877∗
0.852
0.855
0.000

0.802
0.764
0.813
-0.001

ry
0.877
0.863
0.880
0.002

0.813
0.799
0.830
0.001
0.795∗
0.603
0.621
0.000
0.722∗
0.587
0.573
0.000

0.122
0.126
0.166
0.077

-
-
-
-
0.075∗
0.046
0.053
0.075

-
-
-
-

-
-
-
-

0.878
0.868
0.874
0.500

-
-
-
-
0.835∗
0.780
0.764
0.500

R2

0.774
0.776
0.791
-1.097

0.725
0.718
0.740
-1.017

-
-
-
-

-
-
-
-

accy
0.795
0.796
0.802
0.515

0.756
0.744
0.748
0.511

0.788
0.788
0.802
0.518

0.757
0.747
0.760
0.511

F1y
0.797
0.797
0.807
0.506

0.766
0.756
0.761
0.503

0.786
0.787
0.802
0.518

0.760
0.749
0.763
0.511

rx
0.908
0.909
0.913
-0.004

0.852
0.843
0.876
-0.009

0.896
0.895
0.900
0.002

0.832
0.823
0.852
0.002

ry
0.889
0.887
0.895
-0.002

0.824
0.820
0.842
-0.001

0.856
0.850
0.862
-0.001

0.784
0.775
0.799
-0.001

0.151
0.161
0.203
0.077

0.128
0.132
0.167
0.074

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.886
0.885
0.887
0.501

0.870
0.866
0.866
0.500

Table 2: Results on generalized triplets (top) and generalized words (bottom) (see Sect. 4.2). The tables on the right show results
on the same sets without imposing generalization conditions, i.e., allowing to see all combinations/words during training.

margin thanks to the transference of knowledge from word
embeddings combined with the acquired spatial knowledge.

5.3 Qualitative evaluation (spatial templates)
To ensure that model predictions are meaningful and inter-
pretable, we further validate the quantitative results above
with a qualitative evaluation. Notice that all plots in Fig. 3
are generalized (either unseen words or triplets). Both, PIX
and REG are able to infer the size and location of the Object
notably well in unseen triplets (Fig. 3, bottom), regardless
of the embedding type (EMB or RND). However, in unseen
words (Fig. 3, top), the models that leverage word embed-
dings (EMB) tend to perform better, aligning with the quanti-
tative results above. Remarkably, both PIXEMB and REGEMB
output very accurate predictions in generalized words (top),
e.g., predicting correctly the size (and location) of an “ele-
phant” relative to a “kid” even though the model has never
seen an “elephant” before. Noticeably, the models learn to
compose the triplets, distinguishing, for instance, between
“carrying a surfboard” and “riding a surfboard” or between
“playing frisbee” and “holding a frisbee”, etc.

The mapping of language to a 2D visualization provides
another interesting property. Traditional language processing
systems translate spatial information to qualitative symbolic
representations that capture spatial knowledge with a limited
symbolic vocabulary and that are used in qualitative spatial
reasoning (Cohn and Renz 2008). Research shows that trans-
lation of language to qualitative spatial symbolic representa-
tions is difﬁcult (Kordjamshidi and Moens 2015), obtaining
rather low F1 measures on recognition performance, even if
the language utterance is accompanied by visual data (Ko-
rdjamshidi et al. 2017). Here, we have shown that we can
translate language utterances into visualizations in a quantita-
tive 2D space, complementing thus existing symbolic models.

Interpretation of model weights

5.4
We study how the weights of the model provide insight into
the spatial properties of words. To obtain more interpretable

weights, we learn a REG9 model without hidden layers, result-
ing in only an embedding layer followed by a linear output
layer ˆy = Woutu + bout, where u := [wS, wR, wO, Sc, Sb].
By using one-hot encodings wS, wR, wO, the concatenation
layer u becomes of size |VS| + |VR| + |VO| + 2 + 2. E.g., if
“wearing” has one-hot index j in the Relationships’ vocabu-
lary (VR), its index in the concatenation layer is |VS| + j. The
product Woutu is a 4-dimensional vector, where its i-th com-
ponent is the product of the i-th row of Wout with the vector
u. Thus, the component |VS|+j of the i-th row of Wout gives
us the inﬂuence of the j-th relationship (i.e., “wearing”) on
y] ∈ R4.
the i-th dimension of the output ˆy = [ (cid:99)Oc

x, (cid:99)Oc

x, (cid:99)Ob

y, (cid:99)Ob

Implicit

Explicit

Objects

Relationships

Objects

Relationships

headband
visor
hoof
sandals
kite

-0.275
-0.266
0.246
0.241
-0.234

ﬂying
kicking
cutting
catching
riding

fryer
books
avenue
english
burger

see
ﬂoat

3.7e-5
3.2e-5
-3.0e-5 ﬁnding
pulled
2.6e-5
removes
8.2e-5

-0.194
0.148
0.142
-0.132
0.119

-6.8e-5
5.8e-5
5.2e-5
2.6e-5
1.6e-5

hook
glasses
sailboat
vase
woods

spools
glasss
dune
cookies
sill

-0.160
-0.160
-0.159
0.151
-0.149

below
above
beneath
under
over

in

7.5e-5
-7.1e-5 along
7.0e-5
6.7e-5
-5.1e-5 inside

at
on

-0.212
0.199
-0.144
-0.140
0.131

-0.011
0.008
-0.006
0.005
-0.002

Table 3: Words with the ten largest (top) and smallest (bot-
tom) weights in absolute value for the Object’s y-coordinate
( (cid:99)Oc
y), in implicit and explicit language (learned in Raw data).

Table 3 shows the weights inﬂuencing the y-coordinate (cid:99)Oc
y.
We notice that objects such as “kite” or “headband” which
tend to be above the Subject have a large negative weight,
while objects that tend to be below, e.g., “sandals” or “hoof”,
have a large positive weight, i.e., a large positive inﬂuence
on the Object’s y-coordinate. While implicit relations such
as “kicking” or “riding” are strong predictors of the Object’s

9Unlike PIX, the REG model directly outputs coordinates and

thus allows for an easy interpretation of the weights.

Figure 3: Model predictions for generalized words (top) and triplets (bottom). Model (PIX, REG) and embedding types (EMB,
RND) are as indicated in the legend on the left. The Subject’s location is given (blue box) and the model predicts the Object
(red). In PIX, the intensity of the red corresponds to the predicted probability. The generalized (unseen) words are underlined.

gether, the generally small weights of the implicit relations
(and therefore their inﬂuence on the template) emphasize the
need of composing the triplet (Subject, Relationship, Object)
as a whole rather than modeling the Relationship alone.

6 Conclusions

Overall, this paper provides insight into the fundamental dif-
ferences between implicit and explicit spatial language and
extends the concept of spatial templates to implicit spatial
language, the understanding of which requires common sense
spatial knowledge about objects and actions. We deﬁne the
task of predicting relative spatial arrangements of two objects
under a relationship and present two embedding-based neu-
ral models that attain promising performance, proving that
spatial templates can be accurately predicted from implicit
spatial language. Remarkably, our models generalize well,
predicting correctly unseen (generalized) object-relationship-
object combinations. Furthermore, the acquired common
sense spatial knowledge—aided with word embeddings—
allows the model to correctly predict templates for unseen
words. Finally, we show that the weights of the model provide
great insight into the spatial connotations of words.

A ﬁrst limitation of our approach is the fully supervised
setting where the models are trained using images with de-
tected ground truth objects and parsed text—which aims at
keeping the design clean in this ﬁrst study on implicit spa-
tial templates. Notice however that methods to automatically
parse images and text exist. In future work, we aim at im-
plementing our approach in a weakly supervised setting. A
second limitation is the 2D spatial treatment of the actual
3D world. It is worth noting however, that our models (PIX
and REG) and setting trivially generalize to 3D if appropriate
data are available.

Figure 4: Weights in absolute value of the REG model for
implicit (top) and explicit (bottom) Relationships. For read-
ability, the labels on the x-axis have been undersampled.

y-coordinate, “ﬁnding” or “pulled” are weak, suggesting that
the spatial template rather depends on their composition with
the Subject and Object. In fact, the weights of implicit rela-
tions such as “ﬂying” or “riding” are comparable to those
of explicit relations such as “above” or “atop”, behaving
similarly to explicit language. Notice that even the less infor-
mative explicit relations have weights of at least one order of
magnitude larger that the least informative implicit relations.
Figure 4 further evidences that explicit relationships generally
have larger weights than those of implicit relationships. Alto-

[Logan and Sadler 1996] Logan, G. D., and Sadler, D. D.
1996. A computational analysis of the apprehension of spatial
relations. Language and space.
[Long, Shelhamer, and Darrell 2015] Long, J.; Shelhamer,
E.; and Darrell, T. 2015. Fully convolutional networks for
semantic segmentation. In CVPR, 3431–3440.
[Malinowski and Fritz 2014] Malinowski, M., and Fritz, M.
2014. A pooling approach to modelling spatial rela-
tions for image retrieval and annotation. arXiv preprint
arXiv:1411.5190.
[Moratz and Tenbrink 2006] Moratz, R., and Tenbrink, T.
2006. Spatial reference in linguistic human-robot interac-
tion: Iterative, empirically supported development of a model
of projective relations. Spatial Cognition and Computation
6(1):63–107.
J.;
[Pennington, Socher, and Manning 2014] Pennington,
Socher, R.; and Manning, C. D. 2014. Glove: Global vectors
for word representation. In EMNLP, volume 14, 1532–1543.
[Shiang et al. 2017] Shiang, S.-R.; Rosenthal, S.; Gershman,
A.; Carbonell, J. G.; and Oh, J. 2017. Vision-language fusion
for object recognition. In AAAI, 4603–4610.
[Singhal, Luo, and Zhu 2003] Singhal, A.; Luo, J.; and Zhu,
W. 2003. Probabilistic spatial context models for scene
content understanding. In CVPR, volume 1, I–I. IEEE.
[Socher et al. 2013] Socher, R.; Ganjoo, M.; Manning, C. D.;
and Ng, A. 2013. Zero-shot learning through cross-modal
transfer. In NIPS, 935–943.
[Yatskar, Ordonez, and Farhadi 2016] Yatskar, M.; Ordonez,
V.; and Farhadi, A. 2016. Stating the obvious: Extracting
visual common sense knowledge. In NAACL-HLT, 193–198.

Acknowledgments
This work has been supported by the CHIST-ERA EU project
MUSTER10 and by the KU Leuven grant RUN/15/005. G.C.
additionally acknowledges a grant from the IV&L network11
(ICT COST Action IC1307).

References
[Chollet and others 2015] Chollet, F., et al. 2015. Keras.
https://github.com/fchollet/keras.
[Cohn and Renz 2008] Cohn, A. G., and Renz, J. 2008. Qual-
itative spatial representation and reasoning. In van Harmelen,
F.; Lifschitz, V.; and Porter, B. W., eds., Handbook of Knowl-
edge Representation, volume 3 of Foundations of Artiﬁcial
Intelligence. Elsevier. 551–596.
[Collell and Moens 2016] Collell, G., and Moens, M.-F. 2016.
Is an image worth more than a thousand words? On the
ﬁne-grain semantic differences between visual and linguistic
representations. In COLING, 2807–2817. ACL.
[Elliott and Keller 2013] Elliott, D., and Keller, F. 2013. Im-
age description using visual dependency representations. In
EMNLP, volume 13, 1292–1302.
[Everingham et al. 2015] Everingham, M.; Eslami, S. A.;
Van Gool, L.; Williams, C. K.; Winn, J.; and Zisserman,
A. 2015. The PASCAL visual object classes challenge:
A retrospective. International Journal of Computer Vision
111(1):98–136.
[Gregor et al. 2015] Gregor, K.; Danihelka, I.; Graves, A.;
Rezende, D. J.; and Wierstra, D. 2015. Draw: A recur-
rent neural network for image generation. arXiv preprint
arXiv:1502.04623.
[Guadarrama et al. 2013] Guadarrama, S.; Riano, L.; Gol-
land, D.; Go, D.; Jia, Y.; Klein, D.; Abbeel, P.; Darrell, T.;
et al. 2013. Grounding spatial relations for human-robot
interaction. In IROS, 1640–1647. IEEE.
[Kordjamshidi and Moens 2015] Kordjamshidi,
and
Moens, M.-F. 2015. Global machine learning for spatial
ontology population. Journal of Web Semantics 30:3–21.
[Kordjamshidi et al. 2017] Kordjamshidi, P.; Rahgooy, T.;
Moens, M.-F.; Pustejovsky, J.; Manzoor, U.; and Roberts,
K. 2017. CLEF 2017: Multimodal spatial role labeling
(mSpRL) task overview. In CLEF, 367–376.
[Krishna et al. 2017] Krishna, R.; Zhu, Y.; Groth, O.; John-
son, J.; Hata, K.; Kravitz, J.; Chen, S.; Kalantidis, Y.; Li,
L.-J.; Shamma, D. A.; et al. 2017. Visual genome: Con-
necting language and vision using crowdsourced dense im-
age annotations. International Journal of Computer Vision
123(1):32–73.
[Kruijff et al. 2007] Kruijff, G.-J. M.; Zender, H.; Jensfelt, P.;
and Christensen, H. I. 2007. Situated dialogue and spatial
organization: What, where and why? International Journal
of Advanced Robotic Systems 4(1):16.
[Lin and Parikh 2015] Lin, X., and Parikh, D. 2015. Don’t
just listen, use your imagination: Leveraging visual common
sense for non-visual tasks. In CVPR, 2984–2993.

P.,

10http://www.chistera.eu/projects/muster
11http://ivl-net.eu

Acquiring Common Sense Spatial Knowledge through Implicit Spatial Templates

Guillem Collell
Department of Computer Science
KU Leuven
gcollell@kuleuven.be

Luc Van Gool
Computer Vision Laboratory
ETH Zurich
vangool@vision.ee.ethz.ch

Marie-Francine Moens
Department of Computer Science
KU Leuven
sien.moens@cs.kuleuven.be

0
2
0
2
 
r
a

M
 
6
 
 
]
I

A
.
s
c
[
 
 
3
v
1
2
8
6
0
.
1
1
7
1
:
v
i
X
r
a

Abstract

Spatial understanding is a fundamental problem with wide-
reaching real-world applications. The representation of spatial
knowledge is often modeled with spatial templates, i.e., re-
gions of acceptability of two objects under an explicit spatial
relationship (e.g., “on”, “below”, etc.). In contrast with prior
work that restricts spatial templates to explicit spatial preposi-
tions (e.g., “glass on table”), here we extend this concept to
implicit spatial language, i.e., those relationships (generally
actions) for which the spatial arrangement of the objects is
only implicitly implied (e.g., “man riding horse”). In contrast
with explicit relationships, predicting spatial arrangements
from implicit spatial language requires signiﬁcant common
sense spatial understanding. Here, we introduce the task of
predicting spatial templates for two objects under a relation-
ship, which can be seen as a spatial question-answering task
with a (2D) continuous output (“where is the man w.r.t. a
horse when the man is walking the horse?”). We present two
simple neural-based models that leverage annotated images
and structured text to learn this task. The good performance
of these models reveals that spatial locations are to a large
extent predictable from implicit spatial language. Crucially,
the models attain similar performance in a challenging gener-
alized setting, where the object-relation-object combinations
(e.g.,“man walking dog”) have never been seen before. Next,
we go one step further by presenting the models with unseen
objects (e.g., “dog”). In this scenario, we show that leveraging
word embeddings enables the models to output accurate spa-
tial predictions, proving that the models acquire solid common
sense spatial knowledge allowing for such generalization.

1

Introduction

To provide machines with common sense is one of the ma-
jor long term goals of artiﬁcial intelligence. Common sense
knowledge regards knowledge that humans have acquired
through a lifetime of experiences. It is crucial in language
understanding because a lot of content needed for correct
understanding is not expressed explicitly but resides in the
mind of communicator and audience. In addition, humans
rely on their common sense knowledge when performing a
variety of tasks including interpreting images, navigation and
reasoning, to name a few. Representing and understanding
spatial knowledge are in fact imperative for any agent (human,
animal or robot) that navigates in a physical world. In this

paper, we are interested in acquiring spatial commonsense
knowledge from language paired with visual data.

Computational and cognitive models often handle spa-
tial representations as spatial templates or regions of ac-
ceptability for two objects under an explicit (a.k.a. deic-
tic) spatial preposition such as “on”, “below” or “left” (Lo-
gan and Sadler 1996). Contrary to previous work that con-
ceives spatial templates only for explicit spatial language
(Malinowski and Fritz 2014; Moratz and Tenbrink 2006;
Logan and Sadler 1996), we extend such concept to im-
plicit (a.k.a. intrinsic) spatial language, i.e., relationships—
generally actions—that do not explicitly deﬁne the relative
spatial conﬁguration between the two objects (e.g., “glass
on table”) but only implicitly (e.g., “woman riding horse”).
In other words, implicit spatial templates capture the com-
mon sense spatial knowledge that humans possess and is not
explicit in the language utterances.

Predicting spatial templates for implicit relationships is no-
tably more challenging than for explicit relationships. Firstly,
whereas there are only a few tens of explicit spatial preposi-
tions, there exist thousands of actions, entailing thus a drastic
increase in the sparsity of (object1, relationship, object2)
combinations. Secondly, the complexity of the task radically
increases in implicit language. More precisely, while explicit
spatial prepositions1 are highly deterministic about the spatial
arrangements (e.g., (object1, below, object2) unequivocally
implies that object1 is relatively lower than object2), actions
generally are not. E.g., the relative spatial conﬁguration of
“man” and the object is clearly distinct in (man, pulling, kite)
than in (man, pulling, luggage) yet the action is the same.
Contrarily, other relationships such as “jumping” are highly
informative about the spatial template, i.e., in (object1, jump-
ing, object2), object2 is in a lower position than object1.
Hence, unlike explicit relationships, predicting spatial lay-
outs from implicit spatial language requires spatial common
sense knowledge about the objects, actions and their inter-
action, which suggests the need of learning to compose the
triplet (Subject, Relationship, Object) as a whole instead of
learning a template for each Relationship.

To systematically study these questions, we propose the

1Some prepositions (e.g., “on”) might be ambiguous as they can
express other circumstantial arguments such as time. Here, we refer
to spatial prepositions once they have been disambiguated as such.

task of predicting the relative spatial locations of two objects
given a structured text input (Subject, Relationship, Object).
We introduce two simple neural-based models trained from
annotated images that successfully address the two challenges
of implicit spatial language discussed above. Our quantita-
tive evaluation reveals that spatial templates can be reliably
predicted from implicit spatial language—as accurately as
from explicit spatial language. We also show that our models
generalize well to templates of unseen combinations, e.g.,
predicting (man, riding, elephant) without having been ex-
posed to such scene before, tackling thus the challenge of
sparsity. Furthermore, by leveraging word embeddings, the
models can correctly generalize to spatial templates with un-
seen words, e.g., predicting (man, riding, elephant) without
having ever seen an “elephant” before. Since word embed-
dings capture attributes of objects (Collell and Moens 2016),
one can reasonably expect that embeddings are informative
about the spatial behavior of objects, i.e., their likelihood of
exhibiting certain spatial patterns with respect to other ob-
jects. For instance, without having ever seen “boots” before
but only “sandals”, the model correctly predicts the template
of (person, wearing, boots) by inferring that, since “boots”
are similar to “sandals”, they must be worn at the same lo-
cation of the “person”’s body. Hence, the model leverages
the acquired common sense spatial knowledge to generalize
to unseen objects. Furthermore, we provide both, a qualita-
tive 2D visualization of the predictions, and an analysis of
the learned weights of the network which provide insight
into the spatial connotations of words, revealing fundamental
differences between implicit and explicit spatial language.

The rest of the paper is organized as follows. In Sect. 2 we
review related research. In Sect. 3 we ﬁrst introduce the task
of predicting spatial templates and then present two simple
neural models. Then, in Sect. 4, we describe our experimental
setup. In Sect. 5 we present and discuss our results. Finally,
in Sect. 6 we summarize the contributions of this article.

2 Related work
Spatial processing has drawn signiﬁcant attention from
the cognitive (Logan and Sadler 1996) and artiﬁcial
intelligence communities (Kruijff et al. 2007). More specif-
ically, spatial understanding is essential in tasks involving
text-to-scene conversion such as robots’ understanding
of natural language commands (Guadarrama et al. 2013;
Moratz and Tenbrink 2006) or robot navigation.

Spatial
templates. Earlier approaches have predomi-
nantly considered rule-based spatial representations (Kruijff
et al. 2007; Moratz and Tenbrink 2006). In contrast,
Malinowski and Fritz (2014) propose a learning-based
pooling approach to retrieve images given queries of the form
(object1, spatial preposition, object2). They learn the parame-
ters of a spatial template for each explicit spatial preposition
(e.g., “left” or “above”) which computes a soft spatial ﬁt
of two objects under the relationship. E.g., an object to the
left of the referent object obtains a high score for the “left”
template and low for the “right” template. Contrary to them,
we consider implicit spatial language instead of explicit.
Additionally, while they build a spatial template for each

(explicit) Relationship, we build a template for each (Subject,
Relationship, Object) combination, allowing the template to
be determined by the interaction/composition of the Subject,
Relationship and Object instead of the Relationship alone.
Additionally, the model from Malinowski and Fritz (2014)
does not output spatial arrangements of objects, nor can it
perform predictions with generalized (unseen) relationships.

Leveraging spatial knowledge in tasks. It has been
shown that knowledge of the spatial structure in images
improves the task of image captioning (Elliott and Keller
2013). These authors manually annotate images with
geometric relationships between objects and show that a
rule-based caption generation system beneﬁts from this
knowledge. In contrast to this work, our interest lies in
predicting spatial arrangements of objects from text instead
of generating text given images. Furthermore, while they
employ a small domain of only 10 actions, our goal is to learn
from frequent spatial conﬁgurations and generalize these to
unseen and rare objects/actions (and their combinations).
Spatial knowledge has also improved object recognition
(Shiang et al. 2017). These authors mine texts and labeled
images to obtain spatial knowledge in the form of object
co-occurrences and their relative positions. This knowledge
is represented in a graph and a random walk algorithm over
this graph results in a ranking of possible object labellings.
Contrarily, our representations of spatial knowledge are
neural network based, are not primarily used for object
recognition, and we furthermore predict spatial templates.

Common sense spatial knowledge. Yatskar, Ordonez,
and Farhadi (2016) propose a model to extract common
sense facts from annotated images and their textual de-
scriptions using co-occurrence statistics among which is
point-wise mutual information (PMI). These facts include
six spatial relationships (“on”, “under”, “touches”, ”above”,
”besides”, ”holds”, ”on”, and ”disconnected”). The result is
a symbolic (discretized) representation of common sense
knowledge in the form of relations between objects that
logically entail other relational facts. Our method also
extracts common sense knowledge from images and text,
but predicts (continuous) spatial templates. Lin and Parikh
(2015) leverage common sense visual knowledge (e.g., object
locations and co-occurrences) in the tasks of ﬁll-in-the-blank
and visual paraphrasing. They compute the likelihood of a
scene to identify the most likely answer to multiple-choice
textual scene descriptions. In contrast, we focus solely on
spatial information—and in assuring the correctness of our
spatial predictions—rather than on scene understanding.

Image generation. Although models
that generate
images from text exist (e.g., DRAW model (Gregor et al.
2015)), their focus is quite distant from producing “spatially
sensible” images and they are generally meant to generate a
single object rather than placing it relative to other objects.

As discussed, spatial knowledge can improve a wide
range of tasks (Shiang et al. 2017; Lin and Parikh 2015;
Elliott and Keller 2013). This suggests that the predictions

such as “if a man is feeding a horse, where is the man relative
to the horse?” or ”where would a child wear her shoes?”

3.2 Proposed models

To build a mapping from the input to the output in our task
(Sect. 3.1) we propose two simple neural models (Fig. 1).
Their architecture is identical in the input and representation
layers, yet they differ in the output and loss function.

(i) Input and representation layers. An embedding layer
maps the three input words (S, R, O) to their respec-
tive d-dimensional vectors wSWS, wRWR, wOWO, where
wS ∈ R|VS |, wR ∈ R|VR|, wO ∈ R|VO| are one-hot encod-
ings of S, R, O (a.k.a. one-of-k encoding, i.e., a sparse vector
with 0 everywhere except for a 1 at the position of the k-th
word) and WS ∈ Rd×|VS |, WR ∈ Rd×|VR|, WO ∈ Rd×|VO|
their embedding matrices with |VS|, |VR|, |VO| their vocab-
ulary sizes. This layer represents objects and relationships
as continuous features, enabling thus to introduce external
knowledge of unseen objects as features. The embeddings are
then concatenated with the Subject center Sc and size Sb in
a vector [wSWS, wRWR, wOWO, Sc, Sb] which is inputted
to a stack of hidden layers that compose S, R and O into a
joint hidden representation zh:

zh = f (Wh[wSWS, wRWR, wOWO, Sc, Sb] + bh)

where f (·) is an element-wise non-linear function and Wh
and bh are the weight matrix and bias respectively.3

(ii) Output and loss. We consider two different possibilities
for the output ˆy that follows immediately after the last layer:
zout = Woutzh + bout (Fig. 1, top left).

• Model 1 (REG). A regression model where the output are
the Object coordinates and size ˆy = zout = [(cid:99)Oc,(cid:99)Ob] ∈ R4
and is evaluated against the true y = [Oc, Ob] with a mean
squared error (MSE) loss: L(y, ˆy) = (cid:107)ˆy − y(cid:107)2.

• Model 2 (PIX). The output ˆy = σ(zout) = (ˆyi,j) ∈
RM ×M , where M is the number of pixels per side and σ()
an element-wise sigmoid, is now a 2D heatmap of pixel
activations ˆyi,j ∈ [0, 1] indicating the probability that a
pixel belongs to the Object (class 1). Predictions ˆy are eval-
uated against the true y = (yi,j) ∈ RM ×M with a binary
cross-entropy loss: L(y, ˆy) = − (cid:80)M
j=1 yi,j ˆyi,j −
i=1
(1 − yi,j) log(1 − ˆyi,j), where yi,j ∈ {0, 1}.

(cid:80)M

These models are conceptually different and have different
capabilities. While the REG model outputs “crisp” pointwise
predictions, PIX can model more diffuse spatial templates
where the location of the object has more variability, e.g., in
(man, ﬂying, kite) the “kite” can easily move around. Notice
that in contrast with convolutional neural networks (CNNs)
our approach does not make use of the image pixels (Fig. 1),
yielding a model fully specialized in spatial knowledge.

3Similarly, zh can be composed with more hidden layers.

Figure 1: Overview of our models (left) and the image pre-
processing setting (right).

of our models can be used as spatial common sense input
for methods that rely on good spatial priors. Additionally,
existing methods require the spatial information to be present
in the data and lack the capacity to extrapolate/generalize.
Thus,
in this paper we focus, ﬁrst, on showing that
generalizing spatial arrangements to unseen objects and
object-relation-object combinations is possible and, second,
on ensuring that the predicted templates are accurate by
performing several quantitative and qualitative evaluations.

3 Proposed task and model

y] ∈ R2, where Oc

3.1 Proposed task
To learn spatial templates, we propose the task of predicting
the 2D relative spatial arrangement of two objects under a
relationship given a structured text input of the form (Subject,
Relationship, Object)—henceforth abbreviated as (S, R, O).
Let us denote the 2D coordinates of the center (“c”) of the
x ∈ R and
x, Oc
Object’s box as Oc = [Oc
y ∈ R are the horizontal and vertical components respec-
Oc
y] ∈ R2 be half of the width (Ob
x, Ob
tively. Let Ob = [Ob
x) and
half of the height (Ob
y) of the Object’s box (“b”). We employ
a similar notation for the Subject (Sc, Sb), and model predic-
tions are denoted with a hat (cid:99)Oc, (cid:99)Ob. The task consists in pre-
dicting the Object’s location and size [Oc,Ob] ∈ R4 (output)
given the structured text input (S, R, O) and the location Sc
and size Sb of the Subject (Fig. 1).2 This deﬁnes a supervised
task where the size and location of bounding boxes in images
serve as ground truth. Our task can be interpreted as a spatial
question-answering with structured questions (triplets) that
allows evaluating the answer quantitatively in a 2D space.
Hence, the goal is to answer common sense spatial questions

2Crucially, we notice that knowing the Subject’s coordinates is
not a requirement for generating templates (but only for evaluating
against the ground truth) since inputting arbitrary coordinates (e.g.,
Sc=[0.5, 0.5]) still enables visualizing relative object locations. Ad-
ditionally, we input the Subject’s size in order to provide a reference
size to the model. However, we ﬁnd that without this input, the
model still learns to predict an “average size” for each Object.

4 Experimental setup
We employ a 10-fold cross-validation (CV) setting. Data are
randomly split into 10 disjoint parts and 10% is employed
for testing and 90% for training, repeating this for each of
the 10 folds. Reported results are averages over the 10 folds.

4.1 Visual Genome data set
We use the Visual Genome dataset (Krishna et al. 2017) as
our source of annotated images. The Visual Genome consists
of ∼108K images containing ∼1.5M human-annotated (Sub-
ject, Relationship, Object) instances with bounding boxes for
Subject and Object (Fig. 2). We ﬁlter out all the instances con-
taining explicit spatial prepositions, preserving only instances
with implicit spatial relationships. We keep only combina-
tions for which we have word embeddings available for the
whole triplet (S, R, O). After this ﬁltering, ∼378K instances
are preserved, yielding 2,183 unique implicit Relationships
and 5,614 unique objects (i.e., Subjects and Objects). The left
out instances of explicit language yield ∼852K instances, 36
unique explicit spatial prepositions and 6,749 unique objects.

Figure 2: Sample of images with object boxes and relation-
ships from Visual Genome.

4.2 Evaluation sets
We consider the following subsets of the Visual Genome data
to evaluate performance.
(i) Raw data: Simply the unﬁltered instances from the Visual
Genome data (Sect. 4.1). This set contains a substantial pro-
portion of meaningless (e.g., (nose, almost, touching)) and
irrelevant (e.g., (sign, says, gate 2)) instances.
(ii) Generalized Triplets: We pick at random 100 combi-
nations (S, R, O) among the 1,000 most frequent implicit
combinations in Visual Genome. This yields ∼25K instances
such as (person, holding, racket), (man, ﬂying, kite), etc.4
(iii) Generalized Words: We randomly choose 25 objects
(e.g., “woman”, “apple”, etc.)5 among the 100 most frequent
objects in Visual Genome and take all the instances (∼130K)
that contain any of these words. For example, since “apple”
is in our list, e.g., (cat, snifﬁng, apple) is kept.6 Notice that a
combination (S, R, O) with a generalized word is automati-
cally a generalized triplet too.

4This evaluation set along with our Supplementary material are

available at https://github.com/gcollell/spatial-commonsense.

5The complete list of objects is: [surfboard, shadow, head, surfer,
woman, bear, bag, sunglasses, hair, apple, grass, water, eye, shoes,
foot, jeans, jacket, bus, bike, cat, sky, elephant, tree, plane, eyes].

6We also evaluated a list of generalized Relationships, obtaining
similar results. We additionally tested two extra lists of generalized
objects, which yielded consistent results.

When enforcing generalization conditions in our experi-
ments, all combinations from sets (ii) and (iii) are removed
from the training data to prevent the model from seeing
them.7 Even without imposing generalization conditions (or
when testing with Raw data), reported results are always on
unseen instances—yet the combinations (S, R, O) may have
been seen during training (e.g., in different images). All sets
above contain exclusively implicit spatial language, although
an analogous version of the Raw set where R are explicit
spatial prepositions is also considered in our experiments.

4.3 Data pre-processing
The coordinates of bounding boxes in the images are normal-
ized by the width and height of the image. Thus, Sc, Oc ∈
[0, 1]2. Additionally, we notice that the distinction between
left and right is arbitrary regarding the semantics of the im-
age (Singhal, Luo, and Zhu 2003). That is, a mirrored image
preserves entirely its meaning—while a vertically inverted
image does not. For example, a “child” “walking” a “horse”
can meaningfully be at either side of the “horse”, while a
“child” “riding” a “horse” cannot be either above or below
the “horse”. Hence, to free the model from such arbitrariness,
we mirror the image when (and only when) the Object is
at the left hand side of the Subject. This leaves the Object
always to the right-hand side of the Subject. Notice that mir-
roring is aimed at properly measuring performance and does
not impose any big constraint (one can simply consider the
symmetric reﬂection of the predictions as equally likely).

4.4 Evaluation metrics
The REG model directly outputs Object coordinates, while
PIX outputs 2D heatmaps. We however enable evaluating the
PIX model with regression/classiﬁcation metrics by taking
the point of maximum activation (or their average, if there are
many) as the Object center (cid:99)Oc. The predicted Object size (cid:99)Ob
is not estimated. We use the following performance metrics.

(A) Intersection over Union (IoU). We compute the
bounding box overlap (IoU) from the PASCAL VOC
object detection task (Everingham et al. 2015): IoU =
area((cid:100)BO∩BO)
where (cid:99)BO and BO are the predicted and
area((cid:100)BO∪BO)
ground truth Object bounding boxes, respectively. If the IoU
is larger than 50%, the prediction is counted as correct. It
must be noted that our setting is not comparable to object
detection (nor our results) since we do not employ the image
as input (but text) and thus we cannot leverage the pixels to
predict the Object’s location.

(B) Regression. We consider standard regression metrics.

7To avoid confusion with the term ‘zero-shot’ in classiﬁcation,
we denote our unseen words/triplets as generalized. Although both
settings have resemblances, they differ in that, in ours, the unseen
categories are inputs while in classiﬁcation are targets. Notice that in
both settings one must necessarily have semantic knowledge about
the “zero-shot” class at hand (Socher et al. 2013) (e.g., in the form
of word embeddings), otherwise the task is clearly infeasible.

(i) Coefﬁcient of Determination (R2) of model predictions
ˆy = [(cid:99)Oc, (cid:99)Ob] and ground truth y = [Oc, Ob]. R2 is widely
used to evaluate goodness of ﬁt of a model in regression. The
best R2 score is 1 while the worst one is arbitrarily negative.
A constant prediction would obtain a score of 0.
(ii) Pearson Correlation (r) between the predicted (cid:99)Oc
the true Oc
the y-components (cid:99)Oc

x and
x x-component of the Object center. Similarly for

y and Oc
y.

(C) Above/below classiﬁcation. With the semantic distinc-
tion between vertical and horizontal axes in mind (Sect. 4.3),
we consider the problem of classifying above/below rela-
tive locations. If the model predicts that the Object center is
above/below the Subject center and this actually occurs in
the image we count it as correct. That is, sign( (cid:99)Oc
y) and
sign(Oc
y) must match. We report macro-averaged F1
(F1y) and macro-averaged accuracy (accy).

y − Sc

y − Sc

(D) Pixel macro accuracy (px-acc). Accuracy or correct
classiﬁcation rate per pixel may not be a good measure here,
where class 1 (Object box) comprises, on average, only 5%
of the pixels. Thus, a constant prediction of zeros everywhere
would obtain 95% accuracy. Hence, we consider macro-
averaged pixel accuracy (px-acc), namely the average of
recall of class 0 and recall of class 1. We report the best
px-acc across the full range of decision thresholds on the
predicted pixel-wise conﬁdence scores.

4.5 Word embeddings
We use 300-dimensional GloVe word embeddings (Penning-
ton, Socher, and Manning 2014) pre-trained on the Common
Crawl corpus (consisting of 840B-tokens), which we obtain
from the authors’ website.8

4.6 Model hyperparameters and implementation
Our experiments are implemented in Python 2.7 and we use
Keras deep learning framework for our models (Chollet and
others 2015). Model hyperparameters are ﬁrst selected in a 10-
fold cross-validation setting and we report (averaged) results
on 10 new splits. Models are trained for 10 epochs on batches
of size 64 with the RMSprop optimizer using a learning rate
of 0.0001 and 2 hidden layers with 100 ReLu units. We ﬁnd
that the models are not very sensitive to parameter variations.
The parameters of the embeddings are not backpropagated,
although we ﬁnd that this choice has little effect on the results.
We employ a 15 × 15 pixel grid as output of the PIX model.

5 Results and discussion
We consider the evaluation sets from Sect. 4.2 and the fol-
lowing variations of PIX and REG models (Sect. 3.2). The
subindex EMB denotes a model that employs GloVe embed-
dings and RND a model with embeddings randomly drawn
from a dimension-wise normal distribution of mean (µ) and
standard deviation (σ) equal to those of the GloVe embed-
dings, preserving the original dimensionality (d=300). A

8 http://nlp.stanford.edu/projects/glove

t
i
c
i
l
p
m

I

t
i
c
i
l
p
x
E

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.704
0.693
0.720
-0.999

0.585
0.576
0.604
-1.001

-
-
-
-

-
-
-
-

accy
0.751
0.750
0.764
0.522

0.713
0.702
0.716
0.514

0.771
0.769
0.779
0.633

0.729
0.721
0.723
0.589

F1y
0.750
0.749
0.764
0.522

0.714
0.702
0.717
0.513

0.773
0.769
0.780
0.630

0.726
0.719
0.720
0.581

rx
0.892
0.890
0.897
0.002

0.831
0.821
0.852
0.000

0.810
0.806
0.814
0.000

0.716
0.709
0.709
0.001

ry
0.835
0.828
0.843
0.001

0.755
0.742
0.778
-0.001

0.822
0.815
0.827
-0.001

0.768
0.758
0.760
0.000

IoU

px-acc

0.117
0.120
0.152
0.075

0.345
0.327
0.384
0.042

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.862
0.856
0.857
0.500

0.817
0.812
0.810
0.500

Table 1: Results on the Raw test data.

third type employs one-hot vectors (1H). We additionally
consider a control method (ctrl) that outputs random normal
predictions of µ and σ equal to the dimension-wise mean and
standard deviation of the training targets. We test statistical
signiﬁcance with a Friedman rank test and post hoc Nemenyi
tests on the results of the 10 folds. We indicate with an aster-
isk ∗ in the tables when a method is signiﬁcantly better than
the rest (p < 0.01) within the same model (PIX or REG).

5.1 Evaluation with raw data
Table 1 shows that all methods perform well considering the
amount of noise present in the Raw data. Especially note-
worthy is the ﬁnding that relative locations can be predicted
from implicit spatial language approximately as accurately as
from explicit spatial language. Interestingly, unlike the other
metrics, the IoU (which only counts a prediction as correct if
the overlap between true and predicted boxes is larger than
50%) is clearly higher in explicit than in implicit language,
which suggests that implicit templates exhibit more ﬂexibility
on the Object’s location. Hence, “blurrier” predictions such
as those of PIX can be a good choice in some applications,
e.g., computing the soft ﬁt between images and templates to
perform (spatially informed) image retrieval. We also observe
that models with 1H embeddings tend to perform better, yet
differences are generally only signiﬁcant against RND.

5.2 Generalized evaluations
Table 2 shows that all models perform well on generalized
triplets (top left), remarkably closely to their performance
without imposing generalization conditions (right). Again,
1H performs slightly better, yet only signiﬁcantly better than
RND (p < 0.005). Notably, the good performance of RND
on generalized triplets evidences that the model does not
rely on external knowledge (word embeddings) to predict un-
seen combinations. This ability of generalizing from frequent
combinations (S, R, O) to rare/unseen ones is especially
valuable given the sparsity of implicit combinations and the
impossibility of learning all of them from data.

Contrarily, larger performance differences are observed
with generalized words (Tab. 2, bottom left) where, as ex-
pected, EMB outperforms RND and 1H embeddings by a

Generalization

No Generalization

IoU

px-acc

IoU

px-acc

s
t
e
l
p
i
r
T

s
d
r
o
W

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

REGEMB
REGRND
REG1H
ctrl

PIXEMB
PIXRND
PIX1H
ctrl

R2

0.746
0.731
0.764
-1.097

-
-
-
-
0.633∗
0.438
0.425
-1.022

-
-
-
-

accy
0.784
0.770
0.790
0.516

0.751
0.740
0.738
0.509
0.742∗
0.630
0.596
0.519
0.717∗
0.644
0.591
0.512

F1y
0.777
0.770
0.794
0.506

0.760
0.750
0.752
0.502
0.741∗
0.629
0.586
0.518
0.719∗
0.643
0.590
0.511

rx
0.903
0.899
0.906
0.001

0.835
0.836
0.868
-0.002
0.877∗
0.852
0.855
0.000

0.802
0.764
0.813
-0.001

ry
0.877
0.863
0.880
0.002

0.813
0.799
0.830
0.001
0.795∗
0.603
0.621
0.000
0.722∗
0.587
0.573
0.000

0.122
0.126
0.166
0.077

-
-
-
-
0.075∗
0.046
0.053
0.075

-
-
-
-

-
-
-
-

0.878
0.868
0.874
0.500

-
-
-
-
0.835∗
0.780
0.764
0.500

R2

0.774
0.776
0.791
-1.097

0.725
0.718
0.740
-1.017

-
-
-
-

-
-
-
-

accy
0.795
0.796
0.802
0.515

0.756
0.744
0.748
0.511

0.788
0.788
0.802
0.518

0.757
0.747
0.760
0.511

F1y
0.797
0.797
0.807
0.506

0.766
0.756
0.761
0.503

0.786
0.787
0.802
0.518

0.760
0.749
0.763
0.511

rx
0.908
0.909
0.913
-0.004

0.852
0.843
0.876
-0.009

0.896
0.895
0.900
0.002

0.832
0.823
0.852
0.002

ry
0.889
0.887
0.895
-0.002

0.824
0.820
0.842
-0.001

0.856
0.850
0.862
-0.001

0.784
0.775
0.799
-0.001

0.151
0.161
0.203
0.077

0.128
0.132
0.167
0.074

-
-
-
-

-
-
-
-

-
-
-
-

-
-
-
-

0.886
0.885
0.887
0.501

0.870
0.866
0.866
0.500

Table 2: Results on generalized triplets (top) and generalized words (bottom) (see Sect. 4.2). The tables on the right show results
on the same sets without imposing generalization conditions, i.e., allowing to see all combinations/words during training.

margin thanks to the transference of knowledge from word
embeddings combined with the acquired spatial knowledge.

5.3 Qualitative evaluation (spatial templates)
To ensure that model predictions are meaningful and inter-
pretable, we further validate the quantitative results above
with a qualitative evaluation. Notice that all plots in Fig. 3
are generalized (either unseen words or triplets). Both, PIX
and REG are able to infer the size and location of the Object
notably well in unseen triplets (Fig. 3, bottom), regardless
of the embedding type (EMB or RND). However, in unseen
words (Fig. 3, top), the models that leverage word embed-
dings (EMB) tend to perform better, aligning with the quanti-
tative results above. Remarkably, both PIXEMB and REGEMB
output very accurate predictions in generalized words (top),
e.g., predicting correctly the size (and location) of an “ele-
phant” relative to a “kid” even though the model has never
seen an “elephant” before. Noticeably, the models learn to
compose the triplets, distinguishing, for instance, between
“carrying a surfboard” and “riding a surfboard” or between
“playing frisbee” and “holding a frisbee”, etc.

The mapping of language to a 2D visualization provides
another interesting property. Traditional language processing
systems translate spatial information to qualitative symbolic
representations that capture spatial knowledge with a limited
symbolic vocabulary and that are used in qualitative spatial
reasoning (Cohn and Renz 2008). Research shows that trans-
lation of language to qualitative spatial symbolic representa-
tions is difﬁcult (Kordjamshidi and Moens 2015), obtaining
rather low F1 measures on recognition performance, even if
the language utterance is accompanied by visual data (Ko-
rdjamshidi et al. 2017). Here, we have shown that we can
translate language utterances into visualizations in a quantita-
tive 2D space, complementing thus existing symbolic models.

Interpretation of model weights

5.4
We study how the weights of the model provide insight into
the spatial properties of words. To obtain more interpretable

weights, we learn a REG9 model without hidden layers, result-
ing in only an embedding layer followed by a linear output
layer ˆy = Woutu + bout, where u := [wS, wR, wO, Sc, Sb].
By using one-hot encodings wS, wR, wO, the concatenation
layer u becomes of size |VS| + |VR| + |VO| + 2 + 2. E.g., if
“wearing” has one-hot index j in the Relationships’ vocabu-
lary (VR), its index in the concatenation layer is |VS| + j. The
product Woutu is a 4-dimensional vector, where its i-th com-
ponent is the product of the i-th row of Wout with the vector
u. Thus, the component |VS|+j of the i-th row of Wout gives
us the inﬂuence of the j-th relationship (i.e., “wearing”) on
y] ∈ R4.
the i-th dimension of the output ˆy = [ (cid:99)Oc

x, (cid:99)Oc

x, (cid:99)Ob

y, (cid:99)Ob

Implicit

Explicit

Objects

Relationships

Objects

Relationships

headband
visor
hoof
sandals
kite

-0.275
-0.266
0.246
0.241
-0.234

ﬂying
kicking
cutting
catching
riding

fryer
books
avenue
english
burger

see
ﬂoat

3.7e-5
3.2e-5
-3.0e-5 ﬁnding
pulled
2.6e-5
removes
8.2e-5

-0.194
0.148
0.142
-0.132
0.119

-6.8e-5
5.8e-5
5.2e-5
2.6e-5
1.6e-5

hook
glasses
sailboat
vase
woods

spools
glasss
dune
cookies
sill

-0.160
-0.160
-0.159
0.151
-0.149

below
above
beneath
under
over

in

7.5e-5
-7.1e-5 along
7.0e-5
6.7e-5
-5.1e-5 inside

at
on

-0.212
0.199
-0.144
-0.140
0.131

-0.011
0.008
-0.006
0.005
-0.002

Table 3: Words with the ten largest (top) and smallest (bot-
tom) weights in absolute value for the Object’s y-coordinate
( (cid:99)Oc
y), in implicit and explicit language (learned in Raw data).

Table 3 shows the weights inﬂuencing the y-coordinate (cid:99)Oc
y.
We notice that objects such as “kite” or “headband” which
tend to be above the Subject have a large negative weight,
while objects that tend to be below, e.g., “sandals” or “hoof”,
have a large positive weight, i.e., a large positive inﬂuence
on the Object’s y-coordinate. While implicit relations such
as “kicking” or “riding” are strong predictors of the Object’s

9Unlike PIX, the REG model directly outputs coordinates and

thus allows for an easy interpretation of the weights.

Figure 3: Model predictions for generalized words (top) and triplets (bottom). Model (PIX, REG) and embedding types (EMB,
RND) are as indicated in the legend on the left. The Subject’s location is given (blue box) and the model predicts the Object
(red). In PIX, the intensity of the red corresponds to the predicted probability. The generalized (unseen) words are underlined.

gether, the generally small weights of the implicit relations
(and therefore their inﬂuence on the template) emphasize the
need of composing the triplet (Subject, Relationship, Object)
as a whole rather than modeling the Relationship alone.

6 Conclusions

Overall, this paper provides insight into the fundamental dif-
ferences between implicit and explicit spatial language and
extends the concept of spatial templates to implicit spatial
language, the understanding of which requires common sense
spatial knowledge about objects and actions. We deﬁne the
task of predicting relative spatial arrangements of two objects
under a relationship and present two embedding-based neu-
ral models that attain promising performance, proving that
spatial templates can be accurately predicted from implicit
spatial language. Remarkably, our models generalize well,
predicting correctly unseen (generalized) object-relationship-
object combinations. Furthermore, the acquired common
sense spatial knowledge—aided with word embeddings—
allows the model to correctly predict templates for unseen
words. Finally, we show that the weights of the model provide
great insight into the spatial connotations of words.

A ﬁrst limitation of our approach is the fully supervised
setting where the models are trained using images with de-
tected ground truth objects and parsed text—which aims at
keeping the design clean in this ﬁrst study on implicit spa-
tial templates. Notice however that methods to automatically
parse images and text exist. In future work, we aim at im-
plementing our approach in a weakly supervised setting. A
second limitation is the 2D spatial treatment of the actual
3D world. It is worth noting however, that our models (PIX
and REG) and setting trivially generalize to 3D if appropriate
data are available.

Figure 4: Weights in absolute value of the REG model for
implicit (top) and explicit (bottom) Relationships. For read-
ability, the labels on the x-axis have been undersampled.

y-coordinate, “ﬁnding” or “pulled” are weak, suggesting that
the spatial template rather depends on their composition with
the Subject and Object. In fact, the weights of implicit rela-
tions such as “ﬂying” or “riding” are comparable to those
of explicit relations such as “above” or “atop”, behaving
similarly to explicit language. Notice that even the less infor-
mative explicit relations have weights of at least one order of
magnitude larger that the least informative implicit relations.
Figure 4 further evidences that explicit relationships generally
have larger weights than those of implicit relationships. Alto-

[Logan and Sadler 1996] Logan, G. D., and Sadler, D. D.
1996. A computational analysis of the apprehension of spatial
relations. Language and space.
[Long, Shelhamer, and Darrell 2015] Long, J.; Shelhamer,
E.; and Darrell, T. 2015. Fully convolutional networks for
semantic segmentation. In CVPR, 3431–3440.
[Malinowski and Fritz 2014] Malinowski, M., and Fritz, M.
2014. A pooling approach to modelling spatial rela-
tions for image retrieval and annotation. arXiv preprint
arXiv:1411.5190.
[Moratz and Tenbrink 2006] Moratz, R., and Tenbrink, T.
2006. Spatial reference in linguistic human-robot interac-
tion: Iterative, empirically supported development of a model
of projective relations. Spatial Cognition and Computation
6(1):63–107.
J.;
[Pennington, Socher, and Manning 2014] Pennington,
Socher, R.; and Manning, C. D. 2014. Glove: Global vectors
for word representation. In EMNLP, volume 14, 1532–1543.
[Shiang et al. 2017] Shiang, S.-R.; Rosenthal, S.; Gershman,
A.; Carbonell, J. G.; and Oh, J. 2017. Vision-language fusion
for object recognition. In AAAI, 4603–4610.
[Singhal, Luo, and Zhu 2003] Singhal, A.; Luo, J.; and Zhu,
W. 2003. Probabilistic spatial context models for scene
content understanding. In CVPR, volume 1, I–I. IEEE.
[Socher et al. 2013] Socher, R.; Ganjoo, M.; Manning, C. D.;
and Ng, A. 2013. Zero-shot learning through cross-modal
transfer. In NIPS, 935–943.
[Yatskar, Ordonez, and Farhadi 2016] Yatskar, M.; Ordonez,
V.; and Farhadi, A. 2016. Stating the obvious: Extracting
visual common sense knowledge. In NAACL-HLT, 193–198.

Acknowledgments
This work has been supported by the CHIST-ERA EU project
MUSTER10 and by the KU Leuven grant RUN/15/005. G.C.
additionally acknowledges a grant from the IV&L network11
(ICT COST Action IC1307).

References
[Chollet and others 2015] Chollet, F., et al. 2015. Keras.
https://github.com/fchollet/keras.
[Cohn and Renz 2008] Cohn, A. G., and Renz, J. 2008. Qual-
itative spatial representation and reasoning. In van Harmelen,
F.; Lifschitz, V.; and Porter, B. W., eds., Handbook of Knowl-
edge Representation, volume 3 of Foundations of Artiﬁcial
Intelligence. Elsevier. 551–596.
[Collell and Moens 2016] Collell, G., and Moens, M.-F. 2016.
Is an image worth more than a thousand words? On the
ﬁne-grain semantic differences between visual and linguistic
representations. In COLING, 2807–2817. ACL.
[Elliott and Keller 2013] Elliott, D., and Keller, F. 2013. Im-
age description using visual dependency representations. In
EMNLP, volume 13, 1292–1302.
[Everingham et al. 2015] Everingham, M.; Eslami, S. A.;
Van Gool, L.; Williams, C. K.; Winn, J.; and Zisserman,
A. 2015. The PASCAL visual object classes challenge:
A retrospective. International Journal of Computer Vision
111(1):98–136.
[Gregor et al. 2015] Gregor, K.; Danihelka, I.; Graves, A.;
Rezende, D. J.; and Wierstra, D. 2015. Draw: A recur-
rent neural network for image generation. arXiv preprint
arXiv:1502.04623.
[Guadarrama et al. 2013] Guadarrama, S.; Riano, L.; Gol-
land, D.; Go, D.; Jia, Y.; Klein, D.; Abbeel, P.; Darrell, T.;
et al. 2013. Grounding spatial relations for human-robot
interaction. In IROS, 1640–1647. IEEE.
[Kordjamshidi and Moens 2015] Kordjamshidi,
and
Moens, M.-F. 2015. Global machine learning for spatial
ontology population. Journal of Web Semantics 30:3–21.
[Kordjamshidi et al. 2017] Kordjamshidi, P.; Rahgooy, T.;
Moens, M.-F.; Pustejovsky, J.; Manzoor, U.; and Roberts,
K. 2017. CLEF 2017: Multimodal spatial role labeling
(mSpRL) task overview. In CLEF, 367–376.
[Krishna et al. 2017] Krishna, R.; Zhu, Y.; Groth, O.; John-
son, J.; Hata, K.; Kravitz, J.; Chen, S.; Kalantidis, Y.; Li,
L.-J.; Shamma, D. A.; et al. 2017. Visual genome: Con-
necting language and vision using crowdsourced dense im-
age annotations. International Journal of Computer Vision
123(1):32–73.
[Kruijff et al. 2007] Kruijff, G.-J. M.; Zender, H.; Jensfelt, P.;
and Christensen, H. I. 2007. Situated dialogue and spatial
organization: What, where and why? International Journal
of Advanced Robotic Systems 4(1):16.
[Lin and Parikh 2015] Lin, X., and Parikh, D. 2015. Don’t
just listen, use your imagination: Leveraging visual common
sense for non-visual tasks. In CVPR, 2984–2993.

P.,

10http://www.chistera.eu/projects/muster
11http://ivl-net.eu

