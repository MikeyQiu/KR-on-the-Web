7
1
0
2
 
r
p
A
 
4
 
 
]

V
C
.
s
c
[
 
 
2
v
1
6
9
8
0
.
3
0
7
1
:
v
i
X
r
a

Scaling the Scattering Transform: Deep Hybrid Networks

Edouard Oyallon
D´epartement Informatique
Ecole Normale Sup´erieure
Paris, France
edouard.oyallon@ens.fr

Eugene Belilovsky
University of Paris-Saclay
INRIA and KU Leuven
eugene.belilovsky@inria.fr

Sergey Zagoruyko
Universit´e Paris-Est
´Ecole des Ponts ParisTech
Paris, France
sergey.zagoruyko@enpc.fr

Abstract

We use the scattering network as a generic and ﬁxed ini-
tialization of the ﬁrst layers of a supervised hybrid deep
network. We show that early layers do not necessarily
need to be learned, providing the best results to-date with
pre-deﬁned representations while being competitive with
Deep CNNs. Using a shallow cascade of 1 × 1 convo-
lutions, which encodes scattering coefﬁcients that corre-
spond to spatial windows of very small sizes, permits to ob-
tain AlexNet accuracy on the imagenet ILSVRC2012. We
demonstrate that this local encoding explicitly learns in-
variance w.r.t. rotations. Combining scattering networks
with a modern ResNet, we achieve a single-crop top 5 er-
ror of 11.4% on imagenet ILSVRC2012, comparable to the
Resnet-18 architecture, while utilizing only 10 layers. We
also ﬁnd that hybrid architectures can yield excellent per-
formance in the small sample regime, exceeding their end-
to-end counterparts, through their ability to incorporate ge-
ometrical priors. We demonstrate this on subsets of the
CIFAR-10 dataset and on the STL-10 dataset.

1. Introduction

Image classiﬁcation is a high dimensional problem that
requires building lower dimensional representations that re-
duce the non-informative images variabilities. For exam-
ple, some of the main source of variability are often due
to geometrical operations such as translations and rotations.
An efﬁcient classiﬁcation pipeline necessarily builds invari-
ants to these variabilities. Deep architectures build repre-
sentations that lead to state-of-the-art results on image clas-
siﬁcation tasks [13]. These architectures are designed as
very deep cascades of non-linear end-to-end learned mod-
ules [22]. When trained on large-scale datasets they have
been shown to produce representations that are transferable
to other datasets [42, 15], which indicate they have captured
generic properties of a supervised task that consequently do

not need to be learned. Indeed several works indicate geo-
metrical structures in the ﬁlters of the earlier layers [19, 39]
of Deep CNNs. However, understanding the precise op-
erations performed by those early layers is a complicated
[38, 26] and possibly intractable task. In this work we in-
vestigate if it is possible to replace these early layers, by
simpler cascades of non-learned operators that reduce vari-
ability while retaining discriminative information.

Indeed, there can be several advantages to incorporating
pre-deﬁned geometric priors, via a hybrid approach of com-
bining pre-deﬁned and learned representations. First, end-
to-end pipelines can be data hungry and ineffective when
the number of samples is low. Secondly, it could permit
to obtain more interpertable classiﬁcation pipelines which
are amenable to analysis. Finally, it can reduce the spatial
dimensions and the required depth of the learned modules.
A potential candidate for an image representation is the
SIFT descriptor [23] that was widely used before 2012 as
a feature extractor in classiﬁcation pipelines [30, 31]. This
representation was typically encoded via an unsupervised
Fisher Vector (FV) and fed to a linear SVM. However, sev-
eral works indicate that this is not a generic enough rep-
resentation to build further modules on top of [21, 2]. In-
deed end-to-end learned features produce substantially bet-
ter classiﬁcation accuracy. A major improvement over SIFT
can be found in the scattering transform [24, 6, 33], which
is a type of deep convolutional network, which permits
to retain discriminative information normally discarded by
methods like SIFT while introducing geometric invariances
and stability. Scattering transforms have been shown to al-
ready produce representations that lead to the top results
on complex image datasets when compared to other un-
supervised representations (even learned ones) [27]. This
makes them an excellent candidate for the initial layers of a
deep network. We thus investigate the use of scattering as
a generic representation to combine with deep neural net-
works.

Related to our work [28] proposed a hybrid representa-
tion for large scale image recognition combining a prede-

1

x

|W1|

|W2|

AJ

Sx

2.1. Scattering Networks

Figure 1. A scattering network. AJ concatenates the averaged sig-
nals.

ﬁned representation and Neural Networks (NN), that uses
Fisher Vector encoding of SIFT and leverages NNs as scal-
able classiﬁers. In contrast we use the scattering transform
in combination with convolutional architectures. Our main
contributions are as follows: First, we demonstrate that us-
ing supervised local descriptors, obtained by shallow 1 × 1
convolutions, with very small spatial window sizes permits
to obtain AlexNet accuracy on the imagenet classiﬁcation
task (Subsection 2.3). We show empirically these encoders
build explicit invariance to local rotations (Subsection 3.2).
Second, we propose hybrid networks that combine scatter-
ing with modern CNNs (Section 4) and show that using
scattering and a ResNet of reduced depth, we obtain similar
accuracy to ResNet-18 on Imagenet (Subsection 4.1). Fi-
nally, we demonstrate in Subsection 4.3 that scattering per-
mits a substantial improvement in accuracy in the setting of
limited data.

Our highly efﬁcient GPU implementation of the scatter-
ing transform is, to our knowledge, orders of magnitude
faster than any other implementations, and allows training
very deep networks applying scattering on the ﬂy. Our scat-
tering implementation 1 and pre-trained hybrid models 2are
available.

2. Scattering Networks and Hybrid Architec-

tures

We introduce the scattering transform and motivate its
use as a generic input for supervised tasks. A scattering net-
work belongs to the class of CNNs whose ﬁlters are ﬁxed as
wavelets [27]. The construction of this network has strong
mathematical foundations [24], meaning it is well under-
stood, relies on few parameters and is stable to a large class
of geometric transformations. In general, the parameters of
this representation do not need to be adapted to the bias of
the dataset [27], making its output a suitable generic repre-
sentation.

We then propose and motivate the use of supervised
CNNs built on top of the scattering network. Finally we
propose a supervised encodings of scattering coefﬁcients
using 1x1 convolutions, that can retain interpertability and
locality properties.

In this section, we recall the deﬁnition of the scattering
transform. Consider a signal x(u), with u the spatial posi-
tion index and an integer J ∈ N, which is the spatial scale
of our scattering transform. Let φJ be a local averaging
ﬁlter with a spatial window of scale 2J (here, a Gaussian
smoothing function). Applying the local averaging oper-
ator, AJ x(u) = x ⋆ φJ (2J u) we obtain the zeroth order
scattering coefﬁcient, S0x(u) = AJ x(u). This operation
builds an approximate invariant to translations smaller than
2J , but it also results in a loss of high frequencies that are
necessary to discriminate signals.

A solution to avoid the loss of high frequency informa-
tion is provided by the use of wavelets. A wavelet is an
integrable and localized function in the Fourier and space
domain, with zero mean. A family of wavelets is obtained
by dilating a complex mother wavelet ψ (here, a Morlet
wavelet) such that ψj,θ(u) = 1
u
2j ), where r−θ is
the rotation by −θ, and j ≥ 0 is the scale of the wavelet.
A given wavelet ψj,θ has thus its energy concentrated at
a scale j, in the angular sector θ. Let L ∈ N be an in-
teger parametrizing a discretization of [0, 2π]. A wavelet
transform is the convolution of a signal with the family of
wavelets introduced above, with an appropriate downsam-
pling:

22j ψ(r−θ

W1x(j1, θ1, u) = {x ⋆ ψj1,θ1(2j1u)}j1≤J,θ1=2π l

L ,1≤l≤L

Observe that j1 and θ1 have been discretized: the wavelet
is chosen to be selective in angle and localized in Fourier.
With appropriate discretization [27], {AJ x, W1x} is ap-
proximatively an isometry on the set of signals with limited
bandwidth, and this implies the energy of the signal is pre-
served. This operator then belongs to the category of multi-
resolution analysis operators, each ﬁlter being excited by
a speciﬁc scale and angle, but with the output coefﬁcients
not being invariant to translation. To achieve invariance we
can not apply AJ to W1x since it gives a trivial invariant,
namely zero.

To tackle this issue, we apply a non-linear point-wise
complex modulus to W1x, followed by an averaging AJ ,
which builds a non trivial invariant. Here, the mother
wavelet is analytic, thus |W1x| is regular [1] which im-
plies that the energy in Fourier of |W1x| is more likely
to be contained in a lower frequency domain than W1x.
Thus, AJ preserves more energy of |W1x|. It is possible
to deﬁne S1x = AJ |W1|x, which can also be written as:
S1x(j1, θ1, u) = |x ⋆ ψj1,θ1| ⋆ φJ (2J u); this is the ﬁrst or-
der scattering coefﬁcients. Again, the use of the averaging
builds an invariant to translation up to 2J .

1http://github.com/edouardoyallon/pyscatwave
2http://github.com/edouardoyallon/scalingscattering

Once more, we apply a second wavelet transform W2,
with the same ﬁlters as W1, on each channel. This permits
the recovery of the high-frequency lost due to the averaging
applied to the ﬁrst order, leading to S2x = AJ |W2||W1|,
which can also be written as S2x(j1, j2, θ1, θ2, u) = |x ⋆
ψj1,θ1| ⋆ ψj2,θ2| ⋆ φJ (2J u). We only compute increasing
j1 < j2 because non-increasing paths have
paths, e.g.
been shown to bear no energy [6]. We do not compute
higher order scatterings, because their energy is negligible
[6]. We call Sx(u) the ﬁnal scattering coefﬁcient corre-
sponding to the concatenation of the order 0, 1 and 2 scat-
tering coefﬁcients, intentionally omitting the path index of
each representation. In the case of colored images, we ap-
ply independently a scattering transform to each RGB chan-
nel of the image, which means Sx(u) has a size equal to
, and the original image is
3 ×
down-sampled by a factor 2J [6].
(cid:1)
This representation is proved to linearize small deforma-
tions [24] of images, be non-expansive and almost complete
[10, 5], which makes it an ideal input to a deep network al-
gorithm, that can build invariants to this local variability via
a ﬁrst linear operator. We discuss it as an ideal initialization
in the next subsection.

1 + JL + 1
(cid:0)

2 J(J − 1)L2

2.2. Cascading a supervised Deep architecture

We now motivate the use of a supervised architecture
on top of a scattering network. Scattering transforms have
yielded excellent numerical results [6] on datasets where
the variabilities are completely known, such as MNIST or
FERET. In these task, the problems encountered are linked
to sample and geometric variance and handling these vari-
ances leads to solving these problems. However, in classiﬁ-
cation tasks on more complex image datasets, such variabil-
ities are only partially known as there are also non geomet-
rical intra-class variabilities. Although applying the scat-
tering transform on datasets like CIFAR or Caltech leads to
nearly state-of-the-art results in comparison to other unsu-
pervised representations there is a large gap in performance
when comparing to supervised representations [27]. CNNs
ﬁll in this gap, thus we consider the use of deep neural net-
works utilizing generic scattering representations in order
to reduce more complex variabilities than geometric ones.

Recent works [25, 7, 17] have suggested that deep net-
works could build an approximation of the group of symme-
tries of a classiﬁcation task and apply transformations along
the orbits of this group, like convolutions. This group of
symmetry corresponds to some of the non-informative intra
class variabilities, which must be reduced by a supervised
classiﬁer. [25] motivates that to each layer corresponds an
approximated Lie group of symmetry, and this approxima-
tion is progressive, in the sense that the dimension of these
groups is increasing with depth. For instance, the main lin-
ear Lie group of symmetry of an image is the translation

group, R2. In the case of a wavelet transform obtained by
rotation of a mother wavelet, it is possible to recover a new
subgroup of symmetry after a modulus non-linearity, the ro-
tation SO2, and the group of symmetry at this layer is the
roto-translation group: R2 ⋉ SO2. If no non-linearity was
applied, a convolution along R2 ⋉ SO2 would be equiv-
alent to a spatial convolution. Discovering explicitly the
next new and non-geometrical groups of symmetry is how-
ever a difﬁcult task [17]; nonetheless, the roto-translation
group seems to be a good initialization for the ﬁrst layers.
In this work, we investigate this hypothesis and avoid learn-
ing those well-known symmetries.

Thus, we consider two types of cascaded deep network
on top of scattering. The ﬁrst, referred to as the Shared Lo-
cal Encoder (SLE), learns a supervised local encoding of
the scattering coefﬁcients. We motivate and describe the
SLE in the next subsection as an intermediate representa-
tion between unsupervised local pipelines, widely used in
computer vision prior to 2012, and modern supervised deep
feature learning approaches. The second, referred to as a
hybrid CNN, is a cascade of a scattering network and a
standard CNN architecture, such as a ResNet [13]. In the
sequel we empirically analyse hybrid CNNs, which permits
to greatly reduce the spatial dimensions on which convolu-
tions are learned and can reduce sample complexity.

2.3. Shared Local Encoder for Scattering Represen 

tations

We now discuss the spatial support of different ap-
proaches, in order to motivate our local encoder for scatter-
ing. In CNNs constructed for large scale image recognition,
the representations at a speciﬁc spatial location and depth
depend upon large parts of the initial input image and thus
mixes global information. For example, at depth 2 of [19],
the effective spatial support of the corresponding ﬁlter is al-
ready 32 pixels (out of 224). The speciﬁc representations
derived from CNNs trained on large scale image recogni-
tion are often used as representations in other computer vi-
sion tasks or datasets [40, 42].

On the other hand prior to 2012 local encoding meth-
ods led to state of the art performance on large scale visual
recognition tasks [30]. In these approaches local neighbor-
hoods of an image were encoded using method such as SIFT
descriptors [23], HOG [9], and wavelet transforms [32].
They were also often combined with an unsupervised en-
coding, such as sparse coding [4] or Fisher Vectors(FVs)
[30]. Indeed, many works in classical image processing or
classiﬁcation [18, 4, 30, 28] suggests that the local encod-
ing of an image permit to describe efﬁciently an image. Ad-
ditionally for some algorithms that rely on local neighbour-
hoods, the use of local descriptors is essential [23]. Observe
that a representation based on local non overlapping spatial
neighborhood is simpler to analyze, as there is no ad-hoc

mixing of spatial information. Nevertheless, on large scale
classiﬁcation, this approach was surpassed by fully super-
vised learned methods [19].

We show that it is possible to apply, a similarly local, yet
supervised encoding algorithm to a scattering transform, as
suggested in the conclusion of [28]. First observe that at
each spatial position u, a scattering coefﬁcient S(u) cor-
responds to a descriptor of a local neighborhood of spatial
size 2J. As explained in the ﬁrst Subsection 2.1, each of
our scattering coefﬁcients are obtained using a stride of 2J ,
which means the ﬁnal representation can be interpreted as
a non-overlapping concatenation of descriptors. Then, let
f be a cascade of fully connected layers that we identi-
cally apply on each Sx(u). Then f is a cascade of CNN
operators with spatial support size 1 × 1, thus we write
f Sx , {f (Sx(u))}u. In the sequel, we do not make any
distinction between the 1 × 1 CNN operators and the oper-
ator acting on Sx(u), ∀u. We refer to f as a Shared Local
Encoder. We note that similarly to Sx, f Sx corresponds
to non-overlapping encoded descriptors. To learn a super-
vised classiﬁer on a large scale image recognition task, we
cascade fully connected layers on top of the SLE.

Combined with a scattering network,

the supervised
SLE, has several advantages. Since the input corresponds
to scattering coefﬁcients, whose channels are structured, the
ﬁrst layer of f is as well structured. We further explain and
investigate this ﬁrst layer in Subsection 3.2. Unlike standard
CNNs, there is no linear combinations of spatial neighbor-
hoods of the different feature maps, thus the analysis of this
network need only focus on the channel axis. Observe that
if f was fed with raw images, for example in gray scale, it
could not build any non-trivial operation except separating
different level sets of these images.

In the next section, we investigate empirically this super-

vised SLE trained on the ILSVRC2012 dataset.

3. Local Encoding of Scattering

We evaluate the supervised SLE on the Imagenet
ILSVRC2012 dataset. This is a large and challenging nat-
ural color image dataset consisting of 1.2 million training
images and 50, 000 validation images, divided into 1000
classes. We then show some unique properties of this net-
work and evaluate its features on a separate task.

3.1. Shared Local Encoder on Imagenet

We ﬁrst describe our training pipeline, which is similar
to [41]. We trained our network for 90 epochs to minimize
the standard cross entropy loss, using SGD with momentum
0.9 and a batch size of 256. We used a weight decay of
1 × 10−4. The initial learning rate is 0.1, and is dropped off
by 0.1 at epochs 30, 50, 70, 80. During the training process,
each image is randomly rescaled, cropped, and ﬂipped as in
[13]. The ﬁnal crop size is 224 × 224. At testing, we rescale

...
Sx(u − 2J )

Sx(u)

Sx(u + 2J )
...

F1

F1

F1

F2

F2

F2

...
F3

F3

F3
...

F4

F5

F6

Figure 2. Architecture of the SLE, which is a cascade of 3 1 ×
1 convolutions followed by 3 fully connected layers. The ReLU
non-linearity are included inside the Fi blocks for clarity.

Method
FV + FC [28]
FV + SVM [30]
AlexNet
Scat + SLE

Top 1 Top 5
78.4
55.6
74.3
54.3
80.1
56.9
57.0
79.6

Table 1. Top 1 and Top 5 percentage accuracy reported from one
single crop on ILSVRC2012. We compare to other local encoding
methods, and SLE outperforms them. [28] single-crop result was
provided by private communication.

the image to a size of 256, and extract a center crop of size
224 × 224.

24 × 224

We use an architecture which consists of a cascade of a
scattering network, a SLE f , followed by fully connected
layers. Figure 2 describes our architecture. We select the
parameter J = 4 for our scattering network, which means
the output representation has size 224
24 = 14 × 14 spa-
tially and 1251 in the channel dimension. f is implemented
as 3 layers of 1x1 convolutions F1, F2, F3 with layer size
1024. There are 2 fully connected layers of ouput size 1524.
For all learned layers we use batch normalization [16] fol-
lowed by a ReLU [19] non-linearity. We compute the mean
and variance of the scattering coefﬁcients on the whole Im-
agenet, and standardized each spatial scattering coefﬁcients
with it.

Table 3.1 reports our numerical accuracies obtained with
a single crop at testing, compared with local encoding meth-
ods, and the AlexNet that was the state-of-the-art approach
in 2012. We obtain 20.4% at Top 5 and 43.0% Top 1 er-
rors. The performance is analogous to the AlexNet [19].
In term of architecture, our hybrid model is analogous, and
comparable to that of [30, 28], for which SIFT features are
extracted followed by FV [31] encoding. Observe the FV is
an unsupervised encoding compared to our supervised en-
coding. Two approaches are then used: either the spatial
localization is handled either by a Spatial Pyramid Pool-
ing [20], which is then fed to a linear SVM, either the spa-
tial variables are directly encoded in the FVs, and classi-
ﬁed with a stack of four fully connected layers. This last
method is a major difference with ours, as the obtained de-

scriptor does not have a spatial indexing anymore which
are instead quantiﬁed. Furthermore, in both case, the SIFT
are densely extracted which correspond to approximatively
2 104 descriptors, whereas in our case, only 142 = 196 scat-
tering coefﬁcients are extracted. Indeed, we tackle the non-
linear aliasing (due to the fact the scattering transform is
not oversampled) via random cropping during training, al-
lowing to build an invariant to small translations. In Top
1, [30] and [28] obtain respectively 44.4% and 45.7%. Our
method brings a substantial improvement of 1.4% and 2.7%
respectively.

The BVLC AlexNet 3 obtains a of 43.1% single-crop Top
1 error, which is nearly equivalent to the 43.0% of our SLE
network. The AlexNet has 8 learned layers and as explained
before, large receptive ﬁelds. On the contrary, our training
pipeline consists in 6 learned layers with constant receptive
ﬁeld of size 16 × 16, except for the fully connected layers
that build a representation mixing spatial information from
different locations. This is a surprising result, as it seems
to suggest context information is only necessary at the very
last layers, to reach AlexNet accuracy.

We study brieﬂy the local SLE, which has only a spatial
extent of 16 × 16, as a generic local image descriptor. We
use the Caltech-101 benchmark which is a dataset of 9144
image and 102 classes. We followed the standard proto-
col for evaluation [4] with 10 folds and evaluate per class
accuracy, with 30 training samples per class, using a lin-
ear SVM used with the SLE descriptors. Applying our raw
scattering network leads to an accuracy of 62.8 ± 0.7, and
the outputs features from F1, F2, F3 brings respectively an
absolute improvement of 13.7, 17.3, 20.1. The accuracy of
the ﬁnal SLE descriptor is thus 82.9 ± 0.4, similar to that
reported for the ﬁnal AlexNet ﬁnal layer in [42] and sparse
coding with SIFT [4]. However in both cases spatial vari-
ability is removed, either by Spatial Pyramid Pooling [20],
or the cascade of large ﬁlters. By contrasts the concatena-
tion of SLE descriptors are completely local.

3.2. Interprating SLE’s ﬁrst layer

Finding structure in the kernel of the layers of depth less
than 2 [39, 42] is a complex task, and few empirical analy-
ses exist that shed light on the structure [17] of deeper lay-
ers. A scattering transform with scale J can be interpreted
as a CNN with depth J [27], whose channels indexes cor-
respond to different scattering frequency indexes, which is
a structuration. This structure is consequently inherited by
the ﬁrst layer F1 of our SLE f . We analyse F1 and show that
it builds explicitly invariance to local rotations, yet also that
the Fourier bases associated to rotation are a natural bases
of our operator. It is a promising direction to understand the
nature of the two next layers.

3https://github.com/BVLC/caffe/wiki/Models-accuracy-on-ImageNet-

2012-val

Order 1

Order 2

n
o
i
t
u
b
i
r
t
s
i
D

0.35

0.30

0.25

0.20

0.15

0.10

0.05

0.00

e
d
u
t
i
l

p
m
A

1.0

0.8

0.6

0.4

0.2

0.0

-3

n
o
i
t
u
b
i
r
t
s
i
D

3

2

θ
ω

0

0.00 0.02 0.04 0.06 0.08 0.10 0.12 0.14

0.00 0.02 0.04 0.06 0.08 0.10 0.12 0.14

Amplitude

Amplitude

Figure 3. Histogram of ˆF1 amplitude for ﬁrst and second order
coefﬁcients. The vertical lines indicate a threshold that is used in
Subsection 3.2 to sparsify ˆF1. Best viewed in color.

100

10−1

10−2

0

ωθ1

3

-3

-3

0

ωθ1

3

Figure 4. Energy Ω1{F } (left) and Ω2{F } (right) from Eq. 1 for
given angular frequencies. Best viewed in color.

We ﬁrst establish some mathematical notions linked to
the rotation group that we use in our analysis. For the sake
of clarity, we do not consider the roto-translation group. For
a given input image x, let rθ.x(u) , x(r−θ(u)) be the im-
age rotated by angle θ, which corresponds to the linear ac-
tion of rotation on images. Observe the scattering represen-
tation is covariant with the rotation in the following sense:

S1(rθ.x)(θ1, u) = S1x(θ1 − θ, r−θu) , rθ.(S1x)(θ1, u)

S2(rθ.x)(θ1, θ2, u) = S2x(θ1 − θ, θ2 − θ, r−θu)

, rθ.(S2x)(θ1, θ2, u)

Besides, in the case of the second order coefﬁcients, (θ1, θ2)
is covariant with rotations, but θ2 − θ1 is an invariant to
rotation that correspond to a relative rotation.

Unitary representation framework [36] permits the build-
ing of a Fourier transform on compact group, like rotations.
It is even possible to build a scattering transform on the roto-
translation group [33]. Fourier analysis permits the mea-
surement of the smoothness of the operator and, in the case
of CNN operator, it is a natural basis.

1 S1x, F 2

1 S0x, F 1

We can now numerically analyse the nature of the op-
erations performed along angle variables by the ﬁrst layer
F1 of f , with output size K = 1024. Let us deﬁne as
{F 0
1 S2x} the restrictions of F1 to the order
0,1,2 scattering coefﬁcients respectively. Let 1 ≤ k ≤ K
an index of a feature channel and 1 ≤ c ≤ 3 the color index.
In this case, F 0
1 S0x is simply the weights associated to the
1 S1x depends only (k, c, j1, θ1), and F 2
smoothing S0x. F 1
1

depends on (k, c, j1, j2, θ1, θ2). We would like to charac-
terize the smoothness of these operators with respect to the
variables (θ1, θ2), because Sx is covariant to rotations.

1 , ˆF 2

To this end, we deﬁne by ˆF 1

1 the Fourier transform of
these operators along the variables θ1 and (θ1, θ2) respec-
tively. These operator are expressed in the tensorial Fre-
quency domain, which corresponds to a change of basis. In
this experiment, we normalized each ﬁlter of F such that
they have a ℓ2 norm equal to 1, and each order of the scat-
tering coefﬁcients are normalized as well. Figure 3 shows
the distribution of the amplitude of ˆF 1
2 . We observe that
the distribution is shaped as a Laplace distribution, which is
an indicator of sparsity.

1 , ˆF 2

1 , ˆF 2

1 by 1| ˆF 1

To illustrate that this is a natural basis we explicitly spar-
sify this operator in its frequency basis and verify that em-
pirically the network accuracy is minimally changed. We
do this by thresholding by ǫ the coefﬁcients of the operators
in the Fourier domain. Speciﬁcally we replace the opera-
tors ˆF 1
1 . We select an ǫ
1 and 1| ˆF 2
that sets 80% of the coefﬁcients to 0, which is indicated on
Figure 3. Without retraining our network performance de-
grades by only an absolute value of 2% worse on Top 1 and
Top 5 ILSVRC2012. We have thus shown that this basis
permits a sparse approximation of the ﬁrst layer, F1. We
now show evidence that this operator builds an explicit in-
variant to local rotations.

ˆF 1

ˆF 2

1 |>ǫ

1 |>ǫ

To aid our analysis we introduce the following quanti-

ties:

Ω1{F }(ω1) ,

| ˆF 1

1 (k, c, j1, ωθ1)|

2

(1)

Xk,j1,c

Xk,c,j1,j2

Ω2{F }(ωθ1, ωθ2) ,

| ˆF 2

1 (k, c, j1, j2, ωθ1, ωθ2)|2

They correspond to the energy propagated by F1 for a given
frequency, and permit to quantify the smoothness of our
ﬁrst layer operator w.r.t.
the angular variables. Figure 4
shows variation of Ω1{F } and Ω2{F } along frequencies.
For example, if F 1
1 were convolutional along θ1 and
(θ1, θ2), these quantities would correspond to their respec-
tive singular values. One sees that the energy is concen-
trated in the low frequency domain, which indicates that F1
builds explicitly an invariant to local rotations.

1 and F 2

4. Numerical performances of hybrid networks

We now demonstrate cascading modern CNN architec-
tures on top of the scattering network can produce high per-
formance classiﬁcation systems. We apply hybrid convo-
lutional networks on the Imagenet ILSVRC 2012 dataset
as well as the CIFAR-10 dataset and show that they can
achieve performance comparable to modern end-to-end
learned approaches. We then evaluate the hybrid networks
in the setting of limited data by utilizing a subset of CIFAR-
10 as well as the STL-10 dataset and show that we can

Method
AlexNet
VGG-16 [12]
Scat + Resnet-10 (ours)
Resnet-18 (ours)
Resnet-200 [41]

Top 1 Top 5 Params
80.1
56.9
88.7
68.5
88.6
68.7
88.8
68.9
94.2
78.3

61M
138M
12.8M
11.7M
64.7M

Table 2. ILSVRC-2012 validation accuracy (single crop) of hy-
brid scattering and 10 layer resnet, a comparable 18 layer resnet,
and other well known benchmarks. We obtain comparable per-
formance using analogous amount of parameters while learning
parameters at a spatial resolution of 28 × 28

Method
Unsupervised Representations
Roto-Scat + SVM [27]
ExemplarCNN [11]
DCGAN [29]
Scat + FC (ours)
Supervised and Hybrid
Scat + Resnet (ours)
Highway network [35]
All-CNN [34]
WRN 16 - 8 [41]
WRN 28 - 10 [41]

Accuracy

82.3
84.3
82.8
84.7

93.1
92.4
92.8
95.7
96.0

Table 3. Accuracy of scattering compared to similar architectures
on CIFAR10. We set a new state-of-the-art in the unsupervised
case and obtain competitive performance with hybrid CNNs in the
supervised case.

obtain substantial improvement in performance over anal-
ogous end-to-end learned CNNs.

4.1. Deep Hybrid CNNs on ILSVRC2012

We showed in the previous section that a SLE followed
by FC layers can produce results comparable with the
AlexNet [19] on the Imagenet classiﬁcation task. Here we
consider cascading the scattering transform with a modern
CNN architecture, such as Resnet [41, 13]. We take the
Resnet-18 [41], as a reference and construct a similar archi-
tecture with only 10 layers on top of the scattering network.
We utilize a scattering transform with J = 3 such that the
CNN is learned over a spatial dimension of 28 × 28 and a
channel dimension of 651 (3 color channels of 217 each).
The ResNet-18 typically has 4 residual stages of 2 blocks
each which gradually decrease the spatial resolution [41].
Since we utilize the scattering as a ﬁrst stage we remove
two blocks from our model. The network is described in
Table 4.

We use the same optimization and data augmentation
procedure described in Section 3.1 but with learning rate
drops at 30, 60, and 80. We ﬁnd that, when both methods
are trained with the same settings of optimization and data

Stage
scattering
conv1

Output size
28 × 28
28×28

Stage details
J = 3, 651 channels
[256]

conv2

28×28

conv3

avg-pool

14×14

1 × 1

×2

256
256 (cid:21)
512
512 (cid:21)
[14 × 14]

×2

(cid:20)

(cid:20)

Table 4. Structure of Scattering and Resnet-10 used in imagenet
experiments. Taking the convention of [41] we describe the con-
volution size and channels in the Stage details

Stage
scattering
conv1

Output size
8 × 8, 24 × 24
8×8, 24×24

Stage details
J = 2
16×k , 32×k

conv2

8×8, 24×24

conv3

8×8, 12×12

avg-pool

1 × 1

(cid:20)

×n

32×k
32×k (cid:21)
64×k
64×k (cid:21)
[8 × 8], [12 × 12]

×n

(cid:20)

Table 5. Structure of Scattering and Wide ResNet hybrid used in
small sample experiments. Network width is determined by factor
k. For sizes and stage details if settings vary we list CIFAR-10
and then the STL-10 network information. All convolutions are of
size 3 × 3 and the channel width is shown in brackets for both the
network applied to STL-10 and CIFAR-10. For CIFAR-10 we use
n = 2 and for the larger STL-10 we use n = 4.

augmentation, and when the number of parameters is simi-
lar (12.8M versus 11.7 M) the scattering network combined
with a resnet can achieve analogous performance (11.4%
Top 5 for our model versus 11.1 %), while utilizing fewer
layers. The accuracy is reported in Table 2 and compared to
other modern CNNs.

This demonstrates both that the scattering networks does
not lose discriminative power and that it can be used to
replace early layers of standard CNNs. We also note that
learned convolutions occur over a drastically reduced spa-
tial resolution without resorting to pre-trained early layers
which can potentially lose discriminative information or be-
come too task speciﬁc.

4.2. Hybrid Supervised and Unsupervised Repre 

sentations on CIFAR 10

We now consider the popular CIFAR-10 dataset consist-
ing of colored images composed of 5×104 images for train-
ing, and 1 × 104 images for testing divided into 10 classes.
We perform two experiments, the ﬁrst with a cascade of
fully connected layers, that allows us to evaluate the scatter-
ing transform as an unsupervised representation. In a sec-

ond experiment, we again use a hybrid CNN architecture
with a ResNet built on top of the scattering transform.

For the scattering transform we used J = 2 which means
the output of the scattering stage will be 8 × 8 spatially and
243 in the channel dimension. We follow the training pro-
cedure prescribed in [41] utilizing SGD with momentum of
0.9, batch size of 128, weigh decay of 5 × 10−4, and modest
data augmentation of the dataset by using random cropping
and ﬂipping. The initial learning rate is 0.1, and we reduce
it by a factor of 5 at epochs 60, 120 and 160. The models are
trained for 200 epochs in total. We used the same optimiza-
tion and data augmentation pipeline for training and eval-
uation in both case. We utilize batch normalization tech-
niques at all layers which lead to a better conditioning of
the optimization [16]. Table 4.1 reports the accuracy in the
unsupervised and supervised settings and compares them to
other approaches.

In the unsupervised comparison we consider the task of
classiﬁcation using only unsupervised features. Combin-
ing the scattering transform with a NN classiﬁer consisting
of 3 hidden layers, with width 1.1 × 104, we show that one
can obtain a new state of the art classiﬁcation for the case of
unsupervised features. This approach outperforms all meth-
ods utilizing learned and not learned unsupervised features
further demonstrating the discriminative power of the scat-
tering network representation.

In the case of the supervised task we compare to state-
of-the-art approaches on CIFAR-10, all based on end-to-end
learned CNNs. We use a similar hybrid architecture to the
successful wide residual network (WRN) [41]. Speciﬁcally
we modify the WRN of 16 layers which consists of 4 con-
volutional stages. Denoting the widening factor, k, after the
scattering output we use a ﬁrst stage of 32 × k. We add
intermediate 1 × 1 to increase the effective depth, without
increasing too much the number of parameters. Finally we
apply a dropout of 0.2 as speciﬁed in [41]. Using a width
of 32 we achieve an accuracy of 93.1%. This is superior
to several benchmarks but performs worse than the original
ResNet [13] and the wide resnet [41]. We note that train-
ing procedures for learning directly from images, includ-
ing data augmentation and optimization settings, have been
heavily optimized for networks trained directly on natural
images, while we use them largely out of the box we do
believe there are regularization techniques, normalization
techniques, and data augmentation techniques which can be
designed speciﬁcally for the scattering networks.

4.3. Limited samples setting

A major application of a hybrid representation is in the
setting of limited data. Here the learning algorithm is lim-
ited in the variations it can observe or learn from the data,
such that introducing a geometric prior can substantially
improve performance. We evaluate our algorithm on the

Method
WRN 16-8
Scat + WRN 12-8

100
34.7 ± 0.8
38.9 ± 1.2

500
46.5 ±1.4
54.7±0.6

1000
60.0 ±1.8
62.0±1.1

Table 6. Mean accuracy of a hybrid scattering in a limited sample
situation on CIFAR-10 dataset. We ﬁnd that including a scattering
network is signiﬁcantly better in the smaller sample regime of 500
and 100 samples.

limited sample setting using a subset of CIFAR-10 and the
STL-10 dataset.

4.3.1 CIFAR-10

We take subsets of decreasing size of the CIFAR dataset
and train both baseline CNNs and counterparts that utilize
the scattering as a ﬁrst stage. We perform experiments us-
ing subsets of 1000, 500, and 100 samples, that are split
uniformly amongst the 10 classes.

We use as a baseline the Wide ResNet [41] of depth 16
and width 8, which shows near state-of-the-art performance
on the full CIFAR-10 task in the supervised setting. This
network consists of 4 stages of progressively decreasing
spatial resolution detailed in Table 1 of [41]. We construct a
comparable hybrid architecture that removes a single stage
and all strides, as the scattering already down-sampled the
spatial resolution. This architecture is described in Table 5.
Unlike the baseline, refereed from here-on as WRN 16-8,
our architecture has 12 layers and equivalent width, while
keeping the spatial resolution constant through all stages
prior to the ﬁnal average pooling.

We use the same training settings for our baseline, WRN
16-8, and our hybrid scattering and WRN-12. The settings
are the same as those described for CIFAR-10 in the previ-
ous section with the only difference being that we apply a
multiplier to the learning rate schedule and to the maximum
number of epochs. The multiplier is set to 10,20,100 for the
1000,500, and 100 sample case respectively. For example
the default schedule of 60,120,160 becomes 600,1200,1600
for the case of 1000 samples and a multiplier of 10. Finally
in the case of 100 samples we use a batch size of 32 in lieu
of 128.

Table 6 corresponds to the averaged accuracy over 5 dif-
ferent subsets, with the corresponding standard error.
In
this small sample setting, a hybrid network outperforms the
purely CNN based baseline, particularly when the sample
size is smaller. This is not surprising as we incorporate a
geometric prior in the representation.

4.3.2 STL-10

The SLT-10 dataset consists of colored images of size 96 ×
96, with only 5000 labeled images in the training set divided

Method
Supervised methods
Scat + WRN 19-8
CNN[37]
Unsupervised methods
Exemplar CNN [11]
Stacked what-where AE [43]
Hierarchical Matching Pursuit (HMP) [3]
Convolutional K-means Network [8]

Accuracy

76.0 ± 0.6
70.1 ± 0.6

75.4 ± 0.3
74.33
64.5±1
60.1±1

Table 7. Mean accuracy of a hybrid CNN on the STL-10 dataset.
We ﬁnd that our model is better in all cases even compared to those
utilizing the large unsupervised part of the dataset.

equally in 10 classes and 8000 images in the test set. The
larger size of the images and the small number of available
samples make this a challenging image classiﬁcation task.
The dataset also provides 100 thousand unlabeled images
for unsupervised learning. We do not utilize these images
in our experiments, yet we ﬁnd we are able to outperform
all methods which learn unsupervised representations using
these unlabeled images, obtaining very competitive results
on the STL-10 dataset.

We apply a hybrid convolutional architecture, similar to
the one applied in the small sample CIFAR task, adapted
to the size of 96 × 96. The architecture is described in Ta-
ble 5 and is similar to that used in the CIFAR small sample
task. We use the same data augmentation as with the CIFAR
datasets. We apply SGD with learning rate 0.1 and learning
rate decay of 0.2 applied at epochs 1500,2000,3000,4000.
Training is run for 5000 epochs. We use at training and eval-
uation the standard 10 folds procedure which takes 1000
training images. The averaged result for 10 folds is reported
in Table 7. Unlike other approaches we do not use the
4000 remaining training image to perform hyper-parameter
tuning on each fold, as this is not representative of typi-
cal small sample situations, instead we train the same set-
tings on each fold. The best reported result in the purely
supervised case is a CNN [37, 11] whose hyper parameters
have been automatically tuned using 4000 images for val-
idation achieving 70.1% accuracy. The other competitive
methods on this dataset utilize the unlabeled data to learn in
an unsupervised manner before applying supervised meth-
ods. To compare with [14] we also train on the full training
set of 5000 images obtaining an accuracy of 87.6% on the
test set, which is substantially higher than 81.3% reported
in [14] using unsupervised learning and the full unlabeled
and labeled training set. The competing techniques add sev-
eral hyper parameters and require an additional engineering
process. Applying a hybrid network is on the other hand
straightforward and is very competitive with all the existing
approaches, without using any unsupervised learning.

In addition to showing hybrid networks perform well

in the small sample regime these results, along with our
unsupervised CIFAR-10 results, suggest that completely
unsupervised feature learning on natural image data, for
downstream discriminative tasks, may still not outperform
supervised learning methods and pre-deﬁned representa-
tions. One possible explanation is that in the case of nat-
ural images, learning in an unsupervised way more com-
plex variabilities than geometric ones ( e.g the rototransla-
tion group), might be very challenging or possibly ill-posed.

5. Conclusion

This work demonstrates a competitive approach for large
scale visual recognition, based on scattering networks, in
particular for ILSVRC2012. When compared with unsu-
pervised representation on CIFAR-10 or small data regimes
on CIFAR-10 and STL-10, we demonstrate state-of-the-art
results. We build a supervised Shared Local Encoder that
permits the scattering networks to surpass other local en-
coding methods on ILSVRC2012. This network of just 3
learned layers permits analysis on the operation performed.
Our work also suggests that pre-deﬁned features are still
of interest and can provide enlightenment on deep learn-
ing techniques and to allow them to be more interpretable.
Combined with appropriate learning methods, they could
permit having more theoretical guarantees that are neces-
sary to engineer better deep models and stable representa-
tions.

Acknowledgments

The authors would like to thank Mathieu Andreux, Matthew
Blaschko, Carmine Cella, Bogdan Cirstea, Michael Eick-
enberg, St´ephane Mallat for helpful discussions and sup-
port. The authors would also like to thank Rafael Marini
and Nikos Paragios for use of computing resources. We
would like to thank Florent Perronnin for providing impor-
tant details of their work. This work is funded by the ERC
grant InvariantClass 320959, via a grant for PhD Students
of the Conseil r´egional d’Ile-de-France (RDM-IdF), Inter-
nal Funds KU Leuven, FP7-MC-CIG 334380, an Amazon
Academic Research Award, and DIGITEO 2013-0788D -
SOPRANO.

References

[1] S. Bernstein, J.-L. Bouchot, M. Reinhardt, and B. Heise.
Generalized analytic signals in image processing: compar-
In Quaternion and Clifford
ison, theory and applications.
Fourier Transforms and Wavelets, pages 221–246. Springer,
2013.

[2] L. Bo, X. Ren, and D. Fox. Multipath sparse coding using
In Proceedings of the IEEE
hierarchical matching pursuit.
Conference on Computer Vision and Pattern Recognition,
pages 660–667, 2013.

[3] L. Bo, X. Ren, and D. Fox. Unsupervised feature learning for
In Experimental Robotics,

rgb-d based object recognition.
pages 387–402. Springer, 2013.

[4] Y.-L. Boureau, N. Le Roux, F. Bach, J. Ponce, and Y. LeCun.
Ask the locals: multi-way local pooling for image recogni-
tion. In Computer Vision (ICCV), 2011 IEEE International
Conference on, pages 2651–2658. IEEE, 2011.

[5] J. Bruna and S. Mallat. Audio texture synthesis with scatter-

ing moments. arXiv preprint arXiv:1311.0407, 2013.

[6] J. Bruna and S. Mallat. Invariant scattering convolution net-
works. IEEE transactions on pattern analysis and machine
intelligence, 35(8):1872–1886, 2013.

[7] J. Bruna, A. Szlam, and Y. LeCun. Learning stable group
invariant representations with convolutional networks. arXiv
preprint arXiv:1301.3537, 2013.

[8] A. Coates and A. Y. Ng. Selecting receptive ﬁelds in deep
In Advances in Neural Information Processing

networks.
Systems, pages 2528–2536, 2011.

[9] N. Dalal and B. Triggs. Histograms of oriented gradients for
human detection. In Computer Vision and Pattern Recogni-
tion, 2005. CVPR 2005. IEEE Computer Society Conference
on, volume 1, pages 886–893. IEEE, 2005.

[10] I. Dokmani´c, J. Bruna, S. Mallat, and M. de Hoop. Inverse
problems with invariant multiscale statistics. arXiv preprint
arXiv:1609.05502, 2016.

[11] A. Dosovitskiy, J. T. Springenberg, M. Riedmiller, and
T. Brox. Discriminative unsupervised feature learning with
convolutional neural networks. In Advances in Neural Infor-
mation Processing Systems, pages 766–774, 2014.

[12] S. Han, J. Pool, J. Tran, and W. Dally. Learning both weights
and connections for efﬁcient neural network. In Advances in
Neural Information Processing Systems, pages 1135–1143,
2015.

[13] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learn-
ing for image recognition. arXiv preprint arXiv:1512.03385,
2015.
[14] E. Hoffer,

Deep unsuper-
vised learning through spatial contrasting. arXiv preprint
arXiv:1610.00243, 2016.

I. Hubara, and N. Ailon.

[15] M. Huh, P. Agrawal, and A. A. Efros. What makes
arXiv preprint

imagenet good for transfer learning?
arXiv:1608.08614, 2016.

[16] S. Ioffe and C. Szegedy. Batch normalization: Accelerating
deep network training by reducing internal covariate shift.
arXiv preprint arXiv:1502.03167, 2015.

[17] J.-H. Jacobsen, E. Oyallon, S. Mallat, and A. W. Smeul-
ders. Multiscale hierarchical convolutional networks. arXiv
preprint arXiv:1703.01775, 2017.

[18] J. J. Koenderink and A. J. Van Doorn. The structure of locally
orderless images. International Journal of Computer Vision,
31(2-3):159–168, 1999.

[19] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
Advances in neural information processing systems, pages
1097–1105, 2012.

[20] S. Lazebnik, C. Schmid, and J. Ponce. Beyond bags of
features: Spatial pyramid matching for recognizing natural

[38] C. Szegedy, W. Zaremba, I. Sutskever, J. Bruna, D. Erhan,
I. Goodfellow, and R. Fergus. Intriguing properties of neural
networks. arXiv preprint arXiv:1312.6199, 2013.

[39] I. Waldspurger.

These de doctorat de lEcole normale

sup´erieure. PhD thesis, ´Ecole normale sup´erieure, 2015.
[40] J. Yosinski, J. Clune, Y. Bengio, and H. Lipson. How trans-
ferable are features in deep neural networks? In Advances
in neural information processing systems, pages 3320–3328,
2014.

[41] S. Zagoruyko and N. Komodakis. Wide residual networks.

arXiv preprint arXiv:1605.07146, 2016.

[42] M. D. Zeiler and R. Fergus. Visualizing and understanding
In European conference on com-

convolutional networks.
puter vision, pages 818–833. Springer, 2014.

[43] J. Zhao, M. Mathieu, R. Goroshin, and Y. LeCun.
arXiv preprint

Stacked what-where auto-encoders.
arXiv:1506.02351, 2016.

scene categories. In Computer vision and pattern recogni-
tion, 2006 IEEE computer society conference on, volume 2,
pages 2169–2178. IEEE, 2006.

[21] Q. V. Le, W. Y. Zou, S. Y. Yeung, and A. Y. Ng. Learn-
ing hierarchical invariant spatio-temporal features for action
In Com-
recognition with independent subspace analysis.
puter Vision and Pattern Recognition (CVPR), 2011 IEEE
Conference on, pages 3361–3368. IEEE, 2011.

[22] Y. LeCun, K. Kavukcuoglu, C. Farabet, et al. Convolutional
networks and applications in vision. In ISCAS, pages 253–
256, 2010.

[23] D. G. Lowe. Object recognition from local scale-invariant
features. In Computer vision, 1999. The proceedings of the
seventh IEEE international conference on, volume 2, pages
1150–1157. Ieee, 1999.

[24] S. Mallat. Group invariant scattering. Communications on

Pure and Applied Mathematics, 65(10):1331–1398, 2012.

[25] S. Mallat. Understanding deep convolutional networks. Phil.

Trans. R. Soc. A, 374(2065):20150203, 2016.

[26] E. Oyallon. Building a regular decision boundary with deep

networks. arXiv preprint arXiv:1703.01775, 2017.

[27] E. Oyallon and S. Mallat. Deep roto-translation scattering for
object classiﬁcation. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 2865–
2873, 2015.

[28] F. Perronnin and D. Larlus. Fisher vectors meet neural net-
In Proceed-
works: A hybrid classiﬁcation architecture.
ings of the IEEE conference on computer vision and pattern
recognition, pages 3743–3752, 2015.

[29] A. Radford, L. Metz, and S. Chintala. Unsupervised repre-
sentation learning with deep convolutional generative adver-
sarial networks. arXiv preprint arXiv:1511.06434, 2015.
[30] J. S´anchez and F. Perronnin. High-dimensional signature
In Com-
compression for large-scale image classiﬁcation.
puter Vision and Pattern Recognition (CVPR), 2011 IEEE
Conference on, pages 1665–1672. IEEE, 2011.

[31] J. S´anchez, F. Perronnin, T. Mensink, and J. Verbeek. Im-
age classiﬁcation with the ﬁsher vector: Theory and practice.
International journal of computer vision, 105(3):222–245,
2013.

[32] T. Serre and M. Riesenhuber. Realistic modeling of simple
and complex cell tuning in the hmax model, and implications
for invariant object recognition in cortex. Technical report,
DTIC Document, 2004.

[33] L. Sifre and S. Mallat. Rotation, scaling and deformation
invariant scattering for texture discrimination. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1233–1240, 2013.

[34] J. T. Springenberg, A. Dosovitskiy, T. Brox, and M. Ried-
miller. Striving for simplicity: The all convolutional net.
arXiv preprint arXiv:1412.6806, 2014.

[35] R. K. Srivastava, K. Greff, and J. Schmidhuber. Highway

networks. arXiv preprint arXiv:1505.00387, 2015.

[36] M. Sugiura. Unitary representations and harmonic analysis:

an introduction, volume 44. Elsevier, 1990.

[37] K. Swersky, J. Snoek, and R. P. Adams. Multi-task bayesian
optimization. In Advances in neural information processing
systems, pages 2004–2012, 2013.

3

2

θ
ω

0

100

10−1

10−2

-3

-3

0

ωθ1

3

7
1
0
2
 
r
p
A
 
4
 
 
]

V
C
.
s
c
[
 
 
2
v
1
6
9
8
0
.
3
0
7
1
:
v
i
X
r
a

Scaling the Scattering Transform: Deep Hybrid Networks

Edouard Oyallon
D´epartement Informatique
Ecole Normale Sup´erieure
Paris, France
edouard.oyallon@ens.fr

Eugene Belilovsky
University of Paris-Saclay
INRIA and KU Leuven
eugene.belilovsky@inria.fr

Sergey Zagoruyko
Universit´e Paris-Est
´Ecole des Ponts ParisTech
Paris, France
sergey.zagoruyko@enpc.fr

Abstract

We use the scattering network as a generic and ﬁxed ini-
tialization of the ﬁrst layers of a supervised hybrid deep
network. We show that early layers do not necessarily
need to be learned, providing the best results to-date with
pre-deﬁned representations while being competitive with
Deep CNNs. Using a shallow cascade of 1 × 1 convo-
lutions, which encodes scattering coefﬁcients that corre-
spond to spatial windows of very small sizes, permits to ob-
tain AlexNet accuracy on the imagenet ILSVRC2012. We
demonstrate that this local encoding explicitly learns in-
variance w.r.t. rotations. Combining scattering networks
with a modern ResNet, we achieve a single-crop top 5 er-
ror of 11.4% on imagenet ILSVRC2012, comparable to the
Resnet-18 architecture, while utilizing only 10 layers. We
also ﬁnd that hybrid architectures can yield excellent per-
formance in the small sample regime, exceeding their end-
to-end counterparts, through their ability to incorporate ge-
ometrical priors. We demonstrate this on subsets of the
CIFAR-10 dataset and on the STL-10 dataset.

1. Introduction

Image classiﬁcation is a high dimensional problem that
requires building lower dimensional representations that re-
duce the non-informative images variabilities. For exam-
ple, some of the main source of variability are often due
to geometrical operations such as translations and rotations.
An efﬁcient classiﬁcation pipeline necessarily builds invari-
ants to these variabilities. Deep architectures build repre-
sentations that lead to state-of-the-art results on image clas-
siﬁcation tasks [13]. These architectures are designed as
very deep cascades of non-linear end-to-end learned mod-
ules [22]. When trained on large-scale datasets they have
been shown to produce representations that are transferable
to other datasets [42, 15], which indicate they have captured
generic properties of a supervised task that consequently do

not need to be learned. Indeed several works indicate geo-
metrical structures in the ﬁlters of the earlier layers [19, 39]
of Deep CNNs. However, understanding the precise op-
erations performed by those early layers is a complicated
[38, 26] and possibly intractable task. In this work we in-
vestigate if it is possible to replace these early layers, by
simpler cascades of non-learned operators that reduce vari-
ability while retaining discriminative information.

Indeed, there can be several advantages to incorporating
pre-deﬁned geometric priors, via a hybrid approach of com-
bining pre-deﬁned and learned representations. First, end-
to-end pipelines can be data hungry and ineffective when
the number of samples is low. Secondly, it could permit
to obtain more interpertable classiﬁcation pipelines which
are amenable to analysis. Finally, it can reduce the spatial
dimensions and the required depth of the learned modules.
A potential candidate for an image representation is the
SIFT descriptor [23] that was widely used before 2012 as
a feature extractor in classiﬁcation pipelines [30, 31]. This
representation was typically encoded via an unsupervised
Fisher Vector (FV) and fed to a linear SVM. However, sev-
eral works indicate that this is not a generic enough rep-
resentation to build further modules on top of [21, 2]. In-
deed end-to-end learned features produce substantially bet-
ter classiﬁcation accuracy. A major improvement over SIFT
can be found in the scattering transform [24, 6, 33], which
is a type of deep convolutional network, which permits
to retain discriminative information normally discarded by
methods like SIFT while introducing geometric invariances
and stability. Scattering transforms have been shown to al-
ready produce representations that lead to the top results
on complex image datasets when compared to other un-
supervised representations (even learned ones) [27]. This
makes them an excellent candidate for the initial layers of a
deep network. We thus investigate the use of scattering as
a generic representation to combine with deep neural net-
works.

Related to our work [28] proposed a hybrid representa-
tion for large scale image recognition combining a prede-

1

x

|W1|

|W2|

AJ

Sx

2.1. Scattering Networks

Figure 1. A scattering network. AJ concatenates the averaged sig-
nals.

ﬁned representation and Neural Networks (NN), that uses
Fisher Vector encoding of SIFT and leverages NNs as scal-
able classiﬁers. In contrast we use the scattering transform
in combination with convolutional architectures. Our main
contributions are as follows: First, we demonstrate that us-
ing supervised local descriptors, obtained by shallow 1 × 1
convolutions, with very small spatial window sizes permits
to obtain AlexNet accuracy on the imagenet classiﬁcation
task (Subsection 2.3). We show empirically these encoders
build explicit invariance to local rotations (Subsection 3.2).
Second, we propose hybrid networks that combine scatter-
ing with modern CNNs (Section 4) and show that using
scattering and a ResNet of reduced depth, we obtain similar
accuracy to ResNet-18 on Imagenet (Subsection 4.1). Fi-
nally, we demonstrate in Subsection 4.3 that scattering per-
mits a substantial improvement in accuracy in the setting of
limited data.

Our highly efﬁcient GPU implementation of the scatter-
ing transform is, to our knowledge, orders of magnitude
faster than any other implementations, and allows training
very deep networks applying scattering on the ﬂy. Our scat-
tering implementation 1 and pre-trained hybrid models 2are
available.

2. Scattering Networks and Hybrid Architec-

tures

We introduce the scattering transform and motivate its
use as a generic input for supervised tasks. A scattering net-
work belongs to the class of CNNs whose ﬁlters are ﬁxed as
wavelets [27]. The construction of this network has strong
mathematical foundations [24], meaning it is well under-
stood, relies on few parameters and is stable to a large class
of geometric transformations. In general, the parameters of
this representation do not need to be adapted to the bias of
the dataset [27], making its output a suitable generic repre-
sentation.

We then propose and motivate the use of supervised
CNNs built on top of the scattering network. Finally we
propose a supervised encodings of scattering coefﬁcients
using 1x1 convolutions, that can retain interpertability and
locality properties.

In this section, we recall the deﬁnition of the scattering
transform. Consider a signal x(u), with u the spatial posi-
tion index and an integer J ∈ N, which is the spatial scale
of our scattering transform. Let φJ be a local averaging
ﬁlter with a spatial window of scale 2J (here, a Gaussian
smoothing function). Applying the local averaging oper-
ator, AJ x(u) = x ⋆ φJ (2J u) we obtain the zeroth order
scattering coefﬁcient, S0x(u) = AJ x(u). This operation
builds an approximate invariant to translations smaller than
2J , but it also results in a loss of high frequencies that are
necessary to discriminate signals.

A solution to avoid the loss of high frequency informa-
tion is provided by the use of wavelets. A wavelet is an
integrable and localized function in the Fourier and space
domain, with zero mean. A family of wavelets is obtained
by dilating a complex mother wavelet ψ (here, a Morlet
wavelet) such that ψj,θ(u) = 1
u
2j ), where r−θ is
the rotation by −θ, and j ≥ 0 is the scale of the wavelet.
A given wavelet ψj,θ has thus its energy concentrated at
a scale j, in the angular sector θ. Let L ∈ N be an in-
teger parametrizing a discretization of [0, 2π]. A wavelet
transform is the convolution of a signal with the family of
wavelets introduced above, with an appropriate downsam-
pling:

22j ψ(r−θ

W1x(j1, θ1, u) = {x ⋆ ψj1,θ1(2j1u)}j1≤J,θ1=2π l

L ,1≤l≤L

Observe that j1 and θ1 have been discretized: the wavelet
is chosen to be selective in angle and localized in Fourier.
With appropriate discretization [27], {AJ x, W1x} is ap-
proximatively an isometry on the set of signals with limited
bandwidth, and this implies the energy of the signal is pre-
served. This operator then belongs to the category of multi-
resolution analysis operators, each ﬁlter being excited by
a speciﬁc scale and angle, but with the output coefﬁcients
not being invariant to translation. To achieve invariance we
can not apply AJ to W1x since it gives a trivial invariant,
namely zero.

To tackle this issue, we apply a non-linear point-wise
complex modulus to W1x, followed by an averaging AJ ,
which builds a non trivial invariant. Here, the mother
wavelet is analytic, thus |W1x| is regular [1] which im-
plies that the energy in Fourier of |W1x| is more likely
to be contained in a lower frequency domain than W1x.
Thus, AJ preserves more energy of |W1x|. It is possible
to deﬁne S1x = AJ |W1|x, which can also be written as:
S1x(j1, θ1, u) = |x ⋆ ψj1,θ1| ⋆ φJ (2J u); this is the ﬁrst or-
der scattering coefﬁcients. Again, the use of the averaging
builds an invariant to translation up to 2J .

1http://github.com/edouardoyallon/pyscatwave
2http://github.com/edouardoyallon/scalingscattering

Once more, we apply a second wavelet transform W2,
with the same ﬁlters as W1, on each channel. This permits
the recovery of the high-frequency lost due to the averaging
applied to the ﬁrst order, leading to S2x = AJ |W2||W1|,
which can also be written as S2x(j1, j2, θ1, θ2, u) = |x ⋆
ψj1,θ1| ⋆ ψj2,θ2| ⋆ φJ (2J u). We only compute increasing
j1 < j2 because non-increasing paths have
paths, e.g.
been shown to bear no energy [6]. We do not compute
higher order scatterings, because their energy is negligible
[6]. We call Sx(u) the ﬁnal scattering coefﬁcient corre-
sponding to the concatenation of the order 0, 1 and 2 scat-
tering coefﬁcients, intentionally omitting the path index of
each representation. In the case of colored images, we ap-
ply independently a scattering transform to each RGB chan-
nel of the image, which means Sx(u) has a size equal to
, and the original image is
3 ×
down-sampled by a factor 2J [6].
(cid:1)
This representation is proved to linearize small deforma-
tions [24] of images, be non-expansive and almost complete
[10, 5], which makes it an ideal input to a deep network al-
gorithm, that can build invariants to this local variability via
a ﬁrst linear operator. We discuss it as an ideal initialization
in the next subsection.

1 + JL + 1
(cid:0)

2 J(J − 1)L2

2.2. Cascading a supervised Deep architecture

We now motivate the use of a supervised architecture
on top of a scattering network. Scattering transforms have
yielded excellent numerical results [6] on datasets where
the variabilities are completely known, such as MNIST or
FERET. In these task, the problems encountered are linked
to sample and geometric variance and handling these vari-
ances leads to solving these problems. However, in classiﬁ-
cation tasks on more complex image datasets, such variabil-
ities are only partially known as there are also non geomet-
rical intra-class variabilities. Although applying the scat-
tering transform on datasets like CIFAR or Caltech leads to
nearly state-of-the-art results in comparison to other unsu-
pervised representations there is a large gap in performance
when comparing to supervised representations [27]. CNNs
ﬁll in this gap, thus we consider the use of deep neural net-
works utilizing generic scattering representations in order
to reduce more complex variabilities than geometric ones.

Recent works [25, 7, 17] have suggested that deep net-
works could build an approximation of the group of symme-
tries of a classiﬁcation task and apply transformations along
the orbits of this group, like convolutions. This group of
symmetry corresponds to some of the non-informative intra
class variabilities, which must be reduced by a supervised
classiﬁer. [25] motivates that to each layer corresponds an
approximated Lie group of symmetry, and this approxima-
tion is progressive, in the sense that the dimension of these
groups is increasing with depth. For instance, the main lin-
ear Lie group of symmetry of an image is the translation

group, R2. In the case of a wavelet transform obtained by
rotation of a mother wavelet, it is possible to recover a new
subgroup of symmetry after a modulus non-linearity, the ro-
tation SO2, and the group of symmetry at this layer is the
roto-translation group: R2 ⋉ SO2. If no non-linearity was
applied, a convolution along R2 ⋉ SO2 would be equiv-
alent to a spatial convolution. Discovering explicitly the
next new and non-geometrical groups of symmetry is how-
ever a difﬁcult task [17]; nonetheless, the roto-translation
group seems to be a good initialization for the ﬁrst layers.
In this work, we investigate this hypothesis and avoid learn-
ing those well-known symmetries.

Thus, we consider two types of cascaded deep network
on top of scattering. The ﬁrst, referred to as the Shared Lo-
cal Encoder (SLE), learns a supervised local encoding of
the scattering coefﬁcients. We motivate and describe the
SLE in the next subsection as an intermediate representa-
tion between unsupervised local pipelines, widely used in
computer vision prior to 2012, and modern supervised deep
feature learning approaches. The second, referred to as a
hybrid CNN, is a cascade of a scattering network and a
standard CNN architecture, such as a ResNet [13]. In the
sequel we empirically analyse hybrid CNNs, which permits
to greatly reduce the spatial dimensions on which convolu-
tions are learned and can reduce sample complexity.

2.3. Shared Local Encoder for Scattering Represen 

tations

We now discuss the spatial support of different ap-
proaches, in order to motivate our local encoder for scatter-
ing. In CNNs constructed for large scale image recognition,
the representations at a speciﬁc spatial location and depth
depend upon large parts of the initial input image and thus
mixes global information. For example, at depth 2 of [19],
the effective spatial support of the corresponding ﬁlter is al-
ready 32 pixels (out of 224). The speciﬁc representations
derived from CNNs trained on large scale image recogni-
tion are often used as representations in other computer vi-
sion tasks or datasets [40, 42].

On the other hand prior to 2012 local encoding meth-
ods led to state of the art performance on large scale visual
recognition tasks [30]. In these approaches local neighbor-
hoods of an image were encoded using method such as SIFT
descriptors [23], HOG [9], and wavelet transforms [32].
They were also often combined with an unsupervised en-
coding, such as sparse coding [4] or Fisher Vectors(FVs)
[30]. Indeed, many works in classical image processing or
classiﬁcation [18, 4, 30, 28] suggests that the local encod-
ing of an image permit to describe efﬁciently an image. Ad-
ditionally for some algorithms that rely on local neighbour-
hoods, the use of local descriptors is essential [23]. Observe
that a representation based on local non overlapping spatial
neighborhood is simpler to analyze, as there is no ad-hoc

mixing of spatial information. Nevertheless, on large scale
classiﬁcation, this approach was surpassed by fully super-
vised learned methods [19].

We show that it is possible to apply, a similarly local, yet
supervised encoding algorithm to a scattering transform, as
suggested in the conclusion of [28]. First observe that at
each spatial position u, a scattering coefﬁcient S(u) cor-
responds to a descriptor of a local neighborhood of spatial
size 2J. As explained in the ﬁrst Subsection 2.1, each of
our scattering coefﬁcients are obtained using a stride of 2J ,
which means the ﬁnal representation can be interpreted as
a non-overlapping concatenation of descriptors. Then, let
f be a cascade of fully connected layers that we identi-
cally apply on each Sx(u). Then f is a cascade of CNN
operators with spatial support size 1 × 1, thus we write
f Sx , {f (Sx(u))}u. In the sequel, we do not make any
distinction between the 1 × 1 CNN operators and the oper-
ator acting on Sx(u), ∀u. We refer to f as a Shared Local
Encoder. We note that similarly to Sx, f Sx corresponds
to non-overlapping encoded descriptors. To learn a super-
vised classiﬁer on a large scale image recognition task, we
cascade fully connected layers on top of the SLE.

Combined with a scattering network,

the supervised
SLE, has several advantages. Since the input corresponds
to scattering coefﬁcients, whose channels are structured, the
ﬁrst layer of f is as well structured. We further explain and
investigate this ﬁrst layer in Subsection 3.2. Unlike standard
CNNs, there is no linear combinations of spatial neighbor-
hoods of the different feature maps, thus the analysis of this
network need only focus on the channel axis. Observe that
if f was fed with raw images, for example in gray scale, it
could not build any non-trivial operation except separating
different level sets of these images.

In the next section, we investigate empirically this super-

vised SLE trained on the ILSVRC2012 dataset.

3. Local Encoding of Scattering

We evaluate the supervised SLE on the Imagenet
ILSVRC2012 dataset. This is a large and challenging nat-
ural color image dataset consisting of 1.2 million training
images and 50, 000 validation images, divided into 1000
classes. We then show some unique properties of this net-
work and evaluate its features on a separate task.

3.1. Shared Local Encoder on Imagenet

We ﬁrst describe our training pipeline, which is similar
to [41]. We trained our network for 90 epochs to minimize
the standard cross entropy loss, using SGD with momentum
0.9 and a batch size of 256. We used a weight decay of
1 × 10−4. The initial learning rate is 0.1, and is dropped off
by 0.1 at epochs 30, 50, 70, 80. During the training process,
each image is randomly rescaled, cropped, and ﬂipped as in
[13]. The ﬁnal crop size is 224 × 224. At testing, we rescale

...
Sx(u − 2J )

Sx(u)

Sx(u + 2J )
...

F1

F1

F1

F2

F2

F2

...
F3

F3

F3
...

F4

F5

F6

Figure 2. Architecture of the SLE, which is a cascade of 3 1 ×
1 convolutions followed by 3 fully connected layers. The ReLU
non-linearity are included inside the Fi blocks for clarity.

Method
FV + FC [28]
FV + SVM [30]
AlexNet
Scat + SLE

Top 1 Top 5
78.4
55.6
74.3
54.3
80.1
56.9
57.0
79.6

Table 1. Top 1 and Top 5 percentage accuracy reported from one
single crop on ILSVRC2012. We compare to other local encoding
methods, and SLE outperforms them. [28] single-crop result was
provided by private communication.

the image to a size of 256, and extract a center crop of size
224 × 224.

24 × 224

We use an architecture which consists of a cascade of a
scattering network, a SLE f , followed by fully connected
layers. Figure 2 describes our architecture. We select the
parameter J = 4 for our scattering network, which means
the output representation has size 224
24 = 14 × 14 spa-
tially and 1251 in the channel dimension. f is implemented
as 3 layers of 1x1 convolutions F1, F2, F3 with layer size
1024. There are 2 fully connected layers of ouput size 1524.
For all learned layers we use batch normalization [16] fol-
lowed by a ReLU [19] non-linearity. We compute the mean
and variance of the scattering coefﬁcients on the whole Im-
agenet, and standardized each spatial scattering coefﬁcients
with it.

Table 3.1 reports our numerical accuracies obtained with
a single crop at testing, compared with local encoding meth-
ods, and the AlexNet that was the state-of-the-art approach
in 2012. We obtain 20.4% at Top 5 and 43.0% Top 1 er-
rors. The performance is analogous to the AlexNet [19].
In term of architecture, our hybrid model is analogous, and
comparable to that of [30, 28], for which SIFT features are
extracted followed by FV [31] encoding. Observe the FV is
an unsupervised encoding compared to our supervised en-
coding. Two approaches are then used: either the spatial
localization is handled either by a Spatial Pyramid Pool-
ing [20], which is then fed to a linear SVM, either the spa-
tial variables are directly encoded in the FVs, and classi-
ﬁed with a stack of four fully connected layers. This last
method is a major difference with ours, as the obtained de-

scriptor does not have a spatial indexing anymore which
are instead quantiﬁed. Furthermore, in both case, the SIFT
are densely extracted which correspond to approximatively
2 104 descriptors, whereas in our case, only 142 = 196 scat-
tering coefﬁcients are extracted. Indeed, we tackle the non-
linear aliasing (due to the fact the scattering transform is
not oversampled) via random cropping during training, al-
lowing to build an invariant to small translations. In Top
1, [30] and [28] obtain respectively 44.4% and 45.7%. Our
method brings a substantial improvement of 1.4% and 2.7%
respectively.

The BVLC AlexNet 3 obtains a of 43.1% single-crop Top
1 error, which is nearly equivalent to the 43.0% of our SLE
network. The AlexNet has 8 learned layers and as explained
before, large receptive ﬁelds. On the contrary, our training
pipeline consists in 6 learned layers with constant receptive
ﬁeld of size 16 × 16, except for the fully connected layers
that build a representation mixing spatial information from
different locations. This is a surprising result, as it seems
to suggest context information is only necessary at the very
last layers, to reach AlexNet accuracy.

We study brieﬂy the local SLE, which has only a spatial
extent of 16 × 16, as a generic local image descriptor. We
use the Caltech-101 benchmark which is a dataset of 9144
image and 102 classes. We followed the standard proto-
col for evaluation [4] with 10 folds and evaluate per class
accuracy, with 30 training samples per class, using a lin-
ear SVM used with the SLE descriptors. Applying our raw
scattering network leads to an accuracy of 62.8 ± 0.7, and
the outputs features from F1, F2, F3 brings respectively an
absolute improvement of 13.7, 17.3, 20.1. The accuracy of
the ﬁnal SLE descriptor is thus 82.9 ± 0.4, similar to that
reported for the ﬁnal AlexNet ﬁnal layer in [42] and sparse
coding with SIFT [4]. However in both cases spatial vari-
ability is removed, either by Spatial Pyramid Pooling [20],
or the cascade of large ﬁlters. By contrasts the concatena-
tion of SLE descriptors are completely local.

3.2. Interprating SLE’s ﬁrst layer

Finding structure in the kernel of the layers of depth less
than 2 [39, 42] is a complex task, and few empirical analy-
ses exist that shed light on the structure [17] of deeper lay-
ers. A scattering transform with scale J can be interpreted
as a CNN with depth J [27], whose channels indexes cor-
respond to different scattering frequency indexes, which is
a structuration. This structure is consequently inherited by
the ﬁrst layer F1 of our SLE f . We analyse F1 and show that
it builds explicitly invariance to local rotations, yet also that
the Fourier bases associated to rotation are a natural bases
of our operator. It is a promising direction to understand the
nature of the two next layers.

3https://github.com/BVLC/caffe/wiki/Models-accuracy-on-ImageNet-

2012-val

Order 1

Order 2

n
o
i
t
u
b
i
r
t
s
i
D

0.35

0.30

0.25

0.20

0.15

0.10

0.05

0.00

e
d
u
t
i
l

p
m
A

1.0

0.8

0.6

0.4

0.2

0.0

-3

n
o
i
t
u
b
i
r
t
s
i
D

3

2

θ
ω

0

0.00 0.02 0.04 0.06 0.08 0.10 0.12 0.14

0.00 0.02 0.04 0.06 0.08 0.10 0.12 0.14

Amplitude

Amplitude

Figure 3. Histogram of ˆF1 amplitude for ﬁrst and second order
coefﬁcients. The vertical lines indicate a threshold that is used in
Subsection 3.2 to sparsify ˆF1. Best viewed in color.

100

10−1

10−2

0

ωθ1

3

-3

-3

0

ωθ1

3

Figure 4. Energy Ω1{F } (left) and Ω2{F } (right) from Eq. 1 for
given angular frequencies. Best viewed in color.

We ﬁrst establish some mathematical notions linked to
the rotation group that we use in our analysis. For the sake
of clarity, we do not consider the roto-translation group. For
a given input image x, let rθ.x(u) , x(r−θ(u)) be the im-
age rotated by angle θ, which corresponds to the linear ac-
tion of rotation on images. Observe the scattering represen-
tation is covariant with the rotation in the following sense:

S1(rθ.x)(θ1, u) = S1x(θ1 − θ, r−θu) , rθ.(S1x)(θ1, u)

S2(rθ.x)(θ1, θ2, u) = S2x(θ1 − θ, θ2 − θ, r−θu)

, rθ.(S2x)(θ1, θ2, u)

Besides, in the case of the second order coefﬁcients, (θ1, θ2)
is covariant with rotations, but θ2 − θ1 is an invariant to
rotation that correspond to a relative rotation.

Unitary representation framework [36] permits the build-
ing of a Fourier transform on compact group, like rotations.
It is even possible to build a scattering transform on the roto-
translation group [33]. Fourier analysis permits the mea-
surement of the smoothness of the operator and, in the case
of CNN operator, it is a natural basis.

1 S1x, F 2

1 S0x, F 1

We can now numerically analyse the nature of the op-
erations performed along angle variables by the ﬁrst layer
F1 of f , with output size K = 1024. Let us deﬁne as
{F 0
1 S2x} the restrictions of F1 to the order
0,1,2 scattering coefﬁcients respectively. Let 1 ≤ k ≤ K
an index of a feature channel and 1 ≤ c ≤ 3 the color index.
In this case, F 0
1 S0x is simply the weights associated to the
1 S1x depends only (k, c, j1, θ1), and F 2
smoothing S0x. F 1
1

depends on (k, c, j1, j2, θ1, θ2). We would like to charac-
terize the smoothness of these operators with respect to the
variables (θ1, θ2), because Sx is covariant to rotations.

1 , ˆF 2

To this end, we deﬁne by ˆF 1

1 the Fourier transform of
these operators along the variables θ1 and (θ1, θ2) respec-
tively. These operator are expressed in the tensorial Fre-
quency domain, which corresponds to a change of basis. In
this experiment, we normalized each ﬁlter of F such that
they have a ℓ2 norm equal to 1, and each order of the scat-
tering coefﬁcients are normalized as well. Figure 3 shows
the distribution of the amplitude of ˆF 1
2 . We observe that
the distribution is shaped as a Laplace distribution, which is
an indicator of sparsity.

1 , ˆF 2

1 , ˆF 2

1 by 1| ˆF 1

To illustrate that this is a natural basis we explicitly spar-
sify this operator in its frequency basis and verify that em-
pirically the network accuracy is minimally changed. We
do this by thresholding by ǫ the coefﬁcients of the operators
in the Fourier domain. Speciﬁcally we replace the opera-
tors ˆF 1
1 . We select an ǫ
1 and 1| ˆF 2
that sets 80% of the coefﬁcients to 0, which is indicated on
Figure 3. Without retraining our network performance de-
grades by only an absolute value of 2% worse on Top 1 and
Top 5 ILSVRC2012. We have thus shown that this basis
permits a sparse approximation of the ﬁrst layer, F1. We
now show evidence that this operator builds an explicit in-
variant to local rotations.

ˆF 1

ˆF 2

1 |>ǫ

1 |>ǫ

To aid our analysis we introduce the following quanti-

ties:

Ω1{F }(ω1) ,

| ˆF 1

1 (k, c, j1, ωθ1)|

2

(1)

Xk,j1,c

Xk,c,j1,j2

Ω2{F }(ωθ1, ωθ2) ,

| ˆF 2

1 (k, c, j1, j2, ωθ1, ωθ2)|2

They correspond to the energy propagated by F1 for a given
frequency, and permit to quantify the smoothness of our
ﬁrst layer operator w.r.t.
the angular variables. Figure 4
shows variation of Ω1{F } and Ω2{F } along frequencies.
For example, if F 1
1 were convolutional along θ1 and
(θ1, θ2), these quantities would correspond to their respec-
tive singular values. One sees that the energy is concen-
trated in the low frequency domain, which indicates that F1
builds explicitly an invariant to local rotations.

1 and F 2

4. Numerical performances of hybrid networks

We now demonstrate cascading modern CNN architec-
tures on top of the scattering network can produce high per-
formance classiﬁcation systems. We apply hybrid convo-
lutional networks on the Imagenet ILSVRC 2012 dataset
as well as the CIFAR-10 dataset and show that they can
achieve performance comparable to modern end-to-end
learned approaches. We then evaluate the hybrid networks
in the setting of limited data by utilizing a subset of CIFAR-
10 as well as the STL-10 dataset and show that we can

Method
AlexNet
VGG-16 [12]
Scat + Resnet-10 (ours)
Resnet-18 (ours)
Resnet-200 [41]

Top 1 Top 5 Params
80.1
56.9
88.7
68.5
88.6
68.7
88.8
68.9
94.2
78.3

61M
138M
12.8M
11.7M
64.7M

Table 2. ILSVRC-2012 validation accuracy (single crop) of hy-
brid scattering and 10 layer resnet, a comparable 18 layer resnet,
and other well known benchmarks. We obtain comparable per-
formance using analogous amount of parameters while learning
parameters at a spatial resolution of 28 × 28

Method
Unsupervised Representations
Roto-Scat + SVM [27]
ExemplarCNN [11]
DCGAN [29]
Scat + FC (ours)
Supervised and Hybrid
Scat + Resnet (ours)
Highway network [35]
All-CNN [34]
WRN 16 - 8 [41]
WRN 28 - 10 [41]

Accuracy

82.3
84.3
82.8
84.7

93.1
92.4
92.8
95.7
96.0

Table 3. Accuracy of scattering compared to similar architectures
on CIFAR10. We set a new state-of-the-art in the unsupervised
case and obtain competitive performance with hybrid CNNs in the
supervised case.

obtain substantial improvement in performance over anal-
ogous end-to-end learned CNNs.

4.1. Deep Hybrid CNNs on ILSVRC2012

We showed in the previous section that a SLE followed
by FC layers can produce results comparable with the
AlexNet [19] on the Imagenet classiﬁcation task. Here we
consider cascading the scattering transform with a modern
CNN architecture, such as Resnet [41, 13]. We take the
Resnet-18 [41], as a reference and construct a similar archi-
tecture with only 10 layers on top of the scattering network.
We utilize a scattering transform with J = 3 such that the
CNN is learned over a spatial dimension of 28 × 28 and a
channel dimension of 651 (3 color channels of 217 each).
The ResNet-18 typically has 4 residual stages of 2 blocks
each which gradually decrease the spatial resolution [41].
Since we utilize the scattering as a ﬁrst stage we remove
two blocks from our model. The network is described in
Table 4.

We use the same optimization and data augmentation
procedure described in Section 3.1 but with learning rate
drops at 30, 60, and 80. We ﬁnd that, when both methods
are trained with the same settings of optimization and data

Stage
scattering
conv1

Output size
28 × 28
28×28

Stage details
J = 3, 651 channels
[256]

conv2

28×28

conv3

avg-pool

14×14

1 × 1

×2

256
256 (cid:21)
512
512 (cid:21)
[14 × 14]

×2

(cid:20)

(cid:20)

Table 4. Structure of Scattering and Resnet-10 used in imagenet
experiments. Taking the convention of [41] we describe the con-
volution size and channels in the Stage details

Stage
scattering
conv1

Output size
8 × 8, 24 × 24
8×8, 24×24

Stage details
J = 2
16×k , 32×k

conv2

8×8, 24×24

conv3

8×8, 12×12

avg-pool

1 × 1

(cid:20)

×n

32×k
32×k (cid:21)
64×k
64×k (cid:21)
[8 × 8], [12 × 12]

×n

(cid:20)

Table 5. Structure of Scattering and Wide ResNet hybrid used in
small sample experiments. Network width is determined by factor
k. For sizes and stage details if settings vary we list CIFAR-10
and then the STL-10 network information. All convolutions are of
size 3 × 3 and the channel width is shown in brackets for both the
network applied to STL-10 and CIFAR-10. For CIFAR-10 we use
n = 2 and for the larger STL-10 we use n = 4.

augmentation, and when the number of parameters is simi-
lar (12.8M versus 11.7 M) the scattering network combined
with a resnet can achieve analogous performance (11.4%
Top 5 for our model versus 11.1 %), while utilizing fewer
layers. The accuracy is reported in Table 2 and compared to
other modern CNNs.

This demonstrates both that the scattering networks does
not lose discriminative power and that it can be used to
replace early layers of standard CNNs. We also note that
learned convolutions occur over a drastically reduced spa-
tial resolution without resorting to pre-trained early layers
which can potentially lose discriminative information or be-
come too task speciﬁc.

4.2. Hybrid Supervised and Unsupervised Repre 

sentations on CIFAR 10

We now consider the popular CIFAR-10 dataset consist-
ing of colored images composed of 5×104 images for train-
ing, and 1 × 104 images for testing divided into 10 classes.
We perform two experiments, the ﬁrst with a cascade of
fully connected layers, that allows us to evaluate the scatter-
ing transform as an unsupervised representation. In a sec-

ond experiment, we again use a hybrid CNN architecture
with a ResNet built on top of the scattering transform.

For the scattering transform we used J = 2 which means
the output of the scattering stage will be 8 × 8 spatially and
243 in the channel dimension. We follow the training pro-
cedure prescribed in [41] utilizing SGD with momentum of
0.9, batch size of 128, weigh decay of 5 × 10−4, and modest
data augmentation of the dataset by using random cropping
and ﬂipping. The initial learning rate is 0.1, and we reduce
it by a factor of 5 at epochs 60, 120 and 160. The models are
trained for 200 epochs in total. We used the same optimiza-
tion and data augmentation pipeline for training and eval-
uation in both case. We utilize batch normalization tech-
niques at all layers which lead to a better conditioning of
the optimization [16]. Table 4.1 reports the accuracy in the
unsupervised and supervised settings and compares them to
other approaches.

In the unsupervised comparison we consider the task of
classiﬁcation using only unsupervised features. Combin-
ing the scattering transform with a NN classiﬁer consisting
of 3 hidden layers, with width 1.1 × 104, we show that one
can obtain a new state of the art classiﬁcation for the case of
unsupervised features. This approach outperforms all meth-
ods utilizing learned and not learned unsupervised features
further demonstrating the discriminative power of the scat-
tering network representation.

In the case of the supervised task we compare to state-
of-the-art approaches on CIFAR-10, all based on end-to-end
learned CNNs. We use a similar hybrid architecture to the
successful wide residual network (WRN) [41]. Speciﬁcally
we modify the WRN of 16 layers which consists of 4 con-
volutional stages. Denoting the widening factor, k, after the
scattering output we use a ﬁrst stage of 32 × k. We add
intermediate 1 × 1 to increase the effective depth, without
increasing too much the number of parameters. Finally we
apply a dropout of 0.2 as speciﬁed in [41]. Using a width
of 32 we achieve an accuracy of 93.1%. This is superior
to several benchmarks but performs worse than the original
ResNet [13] and the wide resnet [41]. We note that train-
ing procedures for learning directly from images, includ-
ing data augmentation and optimization settings, have been
heavily optimized for networks trained directly on natural
images, while we use them largely out of the box we do
believe there are regularization techniques, normalization
techniques, and data augmentation techniques which can be
designed speciﬁcally for the scattering networks.

4.3. Limited samples setting

A major application of a hybrid representation is in the
setting of limited data. Here the learning algorithm is lim-
ited in the variations it can observe or learn from the data,
such that introducing a geometric prior can substantially
improve performance. We evaluate our algorithm on the

Method
WRN 16-8
Scat + WRN 12-8

100
34.7 ± 0.8
38.9 ± 1.2

500
46.5 ±1.4
54.7±0.6

1000
60.0 ±1.8
62.0±1.1

Table 6. Mean accuracy of a hybrid scattering in a limited sample
situation on CIFAR-10 dataset. We ﬁnd that including a scattering
network is signiﬁcantly better in the smaller sample regime of 500
and 100 samples.

limited sample setting using a subset of CIFAR-10 and the
STL-10 dataset.

4.3.1 CIFAR-10

We take subsets of decreasing size of the CIFAR dataset
and train both baseline CNNs and counterparts that utilize
the scattering as a ﬁrst stage. We perform experiments us-
ing subsets of 1000, 500, and 100 samples, that are split
uniformly amongst the 10 classes.

We use as a baseline the Wide ResNet [41] of depth 16
and width 8, which shows near state-of-the-art performance
on the full CIFAR-10 task in the supervised setting. This
network consists of 4 stages of progressively decreasing
spatial resolution detailed in Table 1 of [41]. We construct a
comparable hybrid architecture that removes a single stage
and all strides, as the scattering already down-sampled the
spatial resolution. This architecture is described in Table 5.
Unlike the baseline, refereed from here-on as WRN 16-8,
our architecture has 12 layers and equivalent width, while
keeping the spatial resolution constant through all stages
prior to the ﬁnal average pooling.

We use the same training settings for our baseline, WRN
16-8, and our hybrid scattering and WRN-12. The settings
are the same as those described for CIFAR-10 in the previ-
ous section with the only difference being that we apply a
multiplier to the learning rate schedule and to the maximum
number of epochs. The multiplier is set to 10,20,100 for the
1000,500, and 100 sample case respectively. For example
the default schedule of 60,120,160 becomes 600,1200,1600
for the case of 1000 samples and a multiplier of 10. Finally
in the case of 100 samples we use a batch size of 32 in lieu
of 128.

Table 6 corresponds to the averaged accuracy over 5 dif-
ferent subsets, with the corresponding standard error.
In
this small sample setting, a hybrid network outperforms the
purely CNN based baseline, particularly when the sample
size is smaller. This is not surprising as we incorporate a
geometric prior in the representation.

4.3.2 STL-10

The SLT-10 dataset consists of colored images of size 96 ×
96, with only 5000 labeled images in the training set divided

Method
Supervised methods
Scat + WRN 19-8
CNN[37]
Unsupervised methods
Exemplar CNN [11]
Stacked what-where AE [43]
Hierarchical Matching Pursuit (HMP) [3]
Convolutional K-means Network [8]

Accuracy

76.0 ± 0.6
70.1 ± 0.6

75.4 ± 0.3
74.33
64.5±1
60.1±1

Table 7. Mean accuracy of a hybrid CNN on the STL-10 dataset.
We ﬁnd that our model is better in all cases even compared to those
utilizing the large unsupervised part of the dataset.

equally in 10 classes and 8000 images in the test set. The
larger size of the images and the small number of available
samples make this a challenging image classiﬁcation task.
The dataset also provides 100 thousand unlabeled images
for unsupervised learning. We do not utilize these images
in our experiments, yet we ﬁnd we are able to outperform
all methods which learn unsupervised representations using
these unlabeled images, obtaining very competitive results
on the STL-10 dataset.

We apply a hybrid convolutional architecture, similar to
the one applied in the small sample CIFAR task, adapted
to the size of 96 × 96. The architecture is described in Ta-
ble 5 and is similar to that used in the CIFAR small sample
task. We use the same data augmentation as with the CIFAR
datasets. We apply SGD with learning rate 0.1 and learning
rate decay of 0.2 applied at epochs 1500,2000,3000,4000.
Training is run for 5000 epochs. We use at training and eval-
uation the standard 10 folds procedure which takes 1000
training images. The averaged result for 10 folds is reported
in Table 7. Unlike other approaches we do not use the
4000 remaining training image to perform hyper-parameter
tuning on each fold, as this is not representative of typi-
cal small sample situations, instead we train the same set-
tings on each fold. The best reported result in the purely
supervised case is a CNN [37, 11] whose hyper parameters
have been automatically tuned using 4000 images for val-
idation achieving 70.1% accuracy. The other competitive
methods on this dataset utilize the unlabeled data to learn in
an unsupervised manner before applying supervised meth-
ods. To compare with [14] we also train on the full training
set of 5000 images obtaining an accuracy of 87.6% on the
test set, which is substantially higher than 81.3% reported
in [14] using unsupervised learning and the full unlabeled
and labeled training set. The competing techniques add sev-
eral hyper parameters and require an additional engineering
process. Applying a hybrid network is on the other hand
straightforward and is very competitive with all the existing
approaches, without using any unsupervised learning.

In addition to showing hybrid networks perform well

in the small sample regime these results, along with our
unsupervised CIFAR-10 results, suggest that completely
unsupervised feature learning on natural image data, for
downstream discriminative tasks, may still not outperform
supervised learning methods and pre-deﬁned representa-
tions. One possible explanation is that in the case of nat-
ural images, learning in an unsupervised way more com-
plex variabilities than geometric ones ( e.g the rototransla-
tion group), might be very challenging or possibly ill-posed.

5. Conclusion

This work demonstrates a competitive approach for large
scale visual recognition, based on scattering networks, in
particular for ILSVRC2012. When compared with unsu-
pervised representation on CIFAR-10 or small data regimes
on CIFAR-10 and STL-10, we demonstrate state-of-the-art
results. We build a supervised Shared Local Encoder that
permits the scattering networks to surpass other local en-
coding methods on ILSVRC2012. This network of just 3
learned layers permits analysis on the operation performed.
Our work also suggests that pre-deﬁned features are still
of interest and can provide enlightenment on deep learn-
ing techniques and to allow them to be more interpretable.
Combined with appropriate learning methods, they could
permit having more theoretical guarantees that are neces-
sary to engineer better deep models and stable representa-
tions.

Acknowledgments

The authors would like to thank Mathieu Andreux, Matthew
Blaschko, Carmine Cella, Bogdan Cirstea, Michael Eick-
enberg, St´ephane Mallat for helpful discussions and sup-
port. The authors would also like to thank Rafael Marini
and Nikos Paragios for use of computing resources. We
would like to thank Florent Perronnin for providing impor-
tant details of their work. This work is funded by the ERC
grant InvariantClass 320959, via a grant for PhD Students
of the Conseil r´egional d’Ile-de-France (RDM-IdF), Inter-
nal Funds KU Leuven, FP7-MC-CIG 334380, an Amazon
Academic Research Award, and DIGITEO 2013-0788D -
SOPRANO.

References

[1] S. Bernstein, J.-L. Bouchot, M. Reinhardt, and B. Heise.
Generalized analytic signals in image processing: compar-
In Quaternion and Clifford
ison, theory and applications.
Fourier Transforms and Wavelets, pages 221–246. Springer,
2013.

[2] L. Bo, X. Ren, and D. Fox. Multipath sparse coding using
In Proceedings of the IEEE
hierarchical matching pursuit.
Conference on Computer Vision and Pattern Recognition,
pages 660–667, 2013.

[3] L. Bo, X. Ren, and D. Fox. Unsupervised feature learning for
In Experimental Robotics,

rgb-d based object recognition.
pages 387–402. Springer, 2013.

[4] Y.-L. Boureau, N. Le Roux, F. Bach, J. Ponce, and Y. LeCun.
Ask the locals: multi-way local pooling for image recogni-
tion. In Computer Vision (ICCV), 2011 IEEE International
Conference on, pages 2651–2658. IEEE, 2011.

[5] J. Bruna and S. Mallat. Audio texture synthesis with scatter-

ing moments. arXiv preprint arXiv:1311.0407, 2013.

[6] J. Bruna and S. Mallat. Invariant scattering convolution net-
works. IEEE transactions on pattern analysis and machine
intelligence, 35(8):1872–1886, 2013.

[7] J. Bruna, A. Szlam, and Y. LeCun. Learning stable group
invariant representations with convolutional networks. arXiv
preprint arXiv:1301.3537, 2013.

[8] A. Coates and A. Y. Ng. Selecting receptive ﬁelds in deep
In Advances in Neural Information Processing

networks.
Systems, pages 2528–2536, 2011.

[9] N. Dalal and B. Triggs. Histograms of oriented gradients for
human detection. In Computer Vision and Pattern Recogni-
tion, 2005. CVPR 2005. IEEE Computer Society Conference
on, volume 1, pages 886–893. IEEE, 2005.

[10] I. Dokmani´c, J. Bruna, S. Mallat, and M. de Hoop. Inverse
problems with invariant multiscale statistics. arXiv preprint
arXiv:1609.05502, 2016.

[11] A. Dosovitskiy, J. T. Springenberg, M. Riedmiller, and
T. Brox. Discriminative unsupervised feature learning with
convolutional neural networks. In Advances in Neural Infor-
mation Processing Systems, pages 766–774, 2014.

[12] S. Han, J. Pool, J. Tran, and W. Dally. Learning both weights
and connections for efﬁcient neural network. In Advances in
Neural Information Processing Systems, pages 1135–1143,
2015.

[13] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learn-
ing for image recognition. arXiv preprint arXiv:1512.03385,
2015.
[14] E. Hoffer,

Deep unsuper-
vised learning through spatial contrasting. arXiv preprint
arXiv:1610.00243, 2016.

I. Hubara, and N. Ailon.

[15] M. Huh, P. Agrawal, and A. A. Efros. What makes
arXiv preprint

imagenet good for transfer learning?
arXiv:1608.08614, 2016.

[16] S. Ioffe and C. Szegedy. Batch normalization: Accelerating
deep network training by reducing internal covariate shift.
arXiv preprint arXiv:1502.03167, 2015.

[17] J.-H. Jacobsen, E. Oyallon, S. Mallat, and A. W. Smeul-
ders. Multiscale hierarchical convolutional networks. arXiv
preprint arXiv:1703.01775, 2017.

[18] J. J. Koenderink and A. J. Van Doorn. The structure of locally
orderless images. International Journal of Computer Vision,
31(2-3):159–168, 1999.

[19] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet
classiﬁcation with deep convolutional neural networks.
In
Advances in neural information processing systems, pages
1097–1105, 2012.

[20] S. Lazebnik, C. Schmid, and J. Ponce. Beyond bags of
features: Spatial pyramid matching for recognizing natural

[38] C. Szegedy, W. Zaremba, I. Sutskever, J. Bruna, D. Erhan,
I. Goodfellow, and R. Fergus. Intriguing properties of neural
networks. arXiv preprint arXiv:1312.6199, 2013.

[39] I. Waldspurger.

These de doctorat de lEcole normale

sup´erieure. PhD thesis, ´Ecole normale sup´erieure, 2015.
[40] J. Yosinski, J. Clune, Y. Bengio, and H. Lipson. How trans-
ferable are features in deep neural networks? In Advances
in neural information processing systems, pages 3320–3328,
2014.

[41] S. Zagoruyko and N. Komodakis. Wide residual networks.

arXiv preprint arXiv:1605.07146, 2016.

[42] M. D. Zeiler and R. Fergus. Visualizing and understanding
In European conference on com-

convolutional networks.
puter vision, pages 818–833. Springer, 2014.

[43] J. Zhao, M. Mathieu, R. Goroshin, and Y. LeCun.
arXiv preprint

Stacked what-where auto-encoders.
arXiv:1506.02351, 2016.

scene categories. In Computer vision and pattern recogni-
tion, 2006 IEEE computer society conference on, volume 2,
pages 2169–2178. IEEE, 2006.

[21] Q. V. Le, W. Y. Zou, S. Y. Yeung, and A. Y. Ng. Learn-
ing hierarchical invariant spatio-temporal features for action
In Com-
recognition with independent subspace analysis.
puter Vision and Pattern Recognition (CVPR), 2011 IEEE
Conference on, pages 3361–3368. IEEE, 2011.

[22] Y. LeCun, K. Kavukcuoglu, C. Farabet, et al. Convolutional
networks and applications in vision. In ISCAS, pages 253–
256, 2010.

[23] D. G. Lowe. Object recognition from local scale-invariant
features. In Computer vision, 1999. The proceedings of the
seventh IEEE international conference on, volume 2, pages
1150–1157. Ieee, 1999.

[24] S. Mallat. Group invariant scattering. Communications on

Pure and Applied Mathematics, 65(10):1331–1398, 2012.

[25] S. Mallat. Understanding deep convolutional networks. Phil.

Trans. R. Soc. A, 374(2065):20150203, 2016.

[26] E. Oyallon. Building a regular decision boundary with deep

networks. arXiv preprint arXiv:1703.01775, 2017.

[27] E. Oyallon and S. Mallat. Deep roto-translation scattering for
object classiﬁcation. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pages 2865–
2873, 2015.

[28] F. Perronnin and D. Larlus. Fisher vectors meet neural net-
In Proceed-
works: A hybrid classiﬁcation architecture.
ings of the IEEE conference on computer vision and pattern
recognition, pages 3743–3752, 2015.

[29] A. Radford, L. Metz, and S. Chintala. Unsupervised repre-
sentation learning with deep convolutional generative adver-
sarial networks. arXiv preprint arXiv:1511.06434, 2015.
[30] J. S´anchez and F. Perronnin. High-dimensional signature
In Com-
compression for large-scale image classiﬁcation.
puter Vision and Pattern Recognition (CVPR), 2011 IEEE
Conference on, pages 1665–1672. IEEE, 2011.

[31] J. S´anchez, F. Perronnin, T. Mensink, and J. Verbeek. Im-
age classiﬁcation with the ﬁsher vector: Theory and practice.
International journal of computer vision, 105(3):222–245,
2013.

[32] T. Serre and M. Riesenhuber. Realistic modeling of simple
and complex cell tuning in the hmax model, and implications
for invariant object recognition in cortex. Technical report,
DTIC Document, 2004.

[33] L. Sifre and S. Mallat. Rotation, scaling and deformation
invariant scattering for texture discrimination. In Proceed-
ings of the IEEE Conference on Computer Vision and Pattern
Recognition, pages 1233–1240, 2013.

[34] J. T. Springenberg, A. Dosovitskiy, T. Brox, and M. Ried-
miller. Striving for simplicity: The all convolutional net.
arXiv preprint arXiv:1412.6806, 2014.

[35] R. K. Srivastava, K. Greff, and J. Schmidhuber. Highway

networks. arXiv preprint arXiv:1505.00387, 2015.

[36] M. Sugiura. Unitary representations and harmonic analysis:

an introduction, volume 44. Elsevier, 1990.

[37] K. Swersky, J. Snoek, and R. P. Adams. Multi-task bayesian
optimization. In Advances in neural information processing
systems, pages 2004–2012, 2013.

3

2

θ
ω

0

100

10−1

10−2

-3

-3

0

ωθ1

3

