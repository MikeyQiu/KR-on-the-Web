4
1
0
2
 
l
u
J
 
7
 
 
]

V
C
.
s
c
[
 
 
2
v
7
7
7
1
.
4
0
4
1
:
v
i
X
r
a

Neural Codes for Image Retrieval

Artem Babenko1,3, Anton Slesarev1, Alexandr Chigorin1, Victor Lempitsky2

1Yandex,

2Skolkovo Institute of Science and Technology (Skoltech),
3Moscow Institute of Physics and Technology

Abstract. It has been shown that the activations invoked by an image
within the top layers of a large convolutional neural network provide a
high-level descriptor of the visual content of the image. In this paper, we
investigate the use of such descriptors (neural codes) within the image
retrieval application. In the experiments with several standard retrieval
benchmarks, we establish that neural codes perform competitively even
when the convolutional neural network has been trained for an unrelated
classiﬁcation task (e.g. Image-Net). We also evaluate the improvement in
the retrieval performance of neural codes, when the network is retrained
on a dataset of images that are similar to images encountered at test
time.
We further evaluate the performance of the compressed neural codes and
show that a simple PCA compression provides very good short codes
that give state-of-the-art accuracy on a number of datasets. In general,
neural codes turn out to be much more resilient to such compression
in comparison other state-of-the-art descriptors. Finally, we show that
discriminative dimensionality reduction trained on a dataset of pairs
of matched photographs improves the performance of PCA-compressed
neural codes even further. Overall, our quantitative experiments demon-
strate the promise of neural codes as visual descriptors for image re-
trieval.

Keywords: image retrieval, same-object image search, deep learning,
convolutional neural networks, feature extraction

1 Introduction

Deep convolutional neural networks [13] have recently advanced the state-of-the-
art in image classiﬁcation dramatically [10] and have consequently attracted a
lot of interest within the computer vision community. A separate but related to
the image classiﬁcation problem is the problem of image retrieval, i.e. the task
of ﬁnding images containing the same object or scene as in a query image. It
has been suggested that the features emerging in the upper layers of the CNN
learned to classify images can serve as good descriptors for image retrieval. In
particular, Krizhevsky et al. [10] have shown some qualitative evidence for that.
Here we interesed in establishing the quantitative performance of such features
(which we refer to as neural codes) and their variations.

We start by providing a quantitative evaluation of the image retrieval per-
formance of the features that emerge within the convolutional neural network

2

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

trained to recognize Image-Net [1] classes. We measure such performance on
four standard benchmark datasets: INRIA Holidays [8], Oxford Buildings, Ox-
ford Building 105K [19], and the University of Kentucky benchmark (UKB) [16].
Perhaps unsurprisingly, these deep features perform well, although not better
than other state-of-the-art holistic features (e.g. Fisher vectors). Interestingly,
the relative performance of diﬀerent layers of the CNN varies in diﬀerent re-
trieval setups, and the best performance on the standard retrieval datasets is
achieved by the features in the middle of the fully-connected layers hierarchy.

Fig. 1. The convolutional neural network architecture used on our experiments. Purple
nodes correspond to input (an RGB image of size 224 × 224) and output (1000 class
labels). Green units correspond to outputs of convolutions, red units correspond to the
outputs of max pooling, and blue units correspond to the outputs of rectiﬁed linear
(ReLU) transform. Layers 6, 7, and 8 (the output) are fully connected to the preceding
layers. The units that correspond to the neural codes used in our experiments are
shown with red arrows. Stride=4 are used in the ﬁrst convolutional layer, and stride=1
in the rest.

The good performance of neural codes demonstrate their universality, since
the task the network was trained for (i.e. classifying Image-Net classes) is quite
diﬀerent from the retrieval task we consider. Despite the evidence of such univer-
sality, there is an obvious possibility to improve the performance of deep features
by adapting them to the task, and such adaptation is the subject of the second
part of the paper. Towards this end, we assemble a large-scale image dataset,
where the classes correspond to landmarks (similar to [14]), and retrain the CNN
on this collection using the original image-net network parameters as initializa-
tion. After such training, we observe a considerable improvement of the retrieval
performance on the datasets with similar image statistics, such as INRIA Holi-
days and Oxford Buildings, while the performance on the unrelated UKB dataset
degrades. In the second experiment of this kind, we retrain the initial network
on the Multi-view RGB-D dataset [12] of turntable views of diﬀerent objects. As
expected, we observe the improvement on the more related UKB dataset, while
the performance on other datasets degrades or stays the same.

Finally, we focus our evaluation on the performance of the compact ver-
sions of the neural codes. We evaluate the performance of the PCA compression

Neural Codes for Image Retrieval

3

and observe that neural codes can be compressed very substantially, e.g. to 128
dimensions, with virtually no loss of the retrieval accuracy. Overall, the degra-
dation from the PCA compression incurred by the neural codes is considerably
smaller than the degradation incurred by other holistic descriptors. This makes
the use of neural codes particularly attractive for large-scale retrieval applica-
tions, where the memory footprint of a descriptor often represents the major
bottleneck.

Pushing the compression to the extreme, to e.g. 16 dimensions leads to con-
siderable degradation, as long as PCA is used for the compression. We experi-
ment with discriminative dimensionality reduction learned on an automatically
collected large collection of pairs of photos depicting the same object (around
900K pairs). When trained on such a dataset, the discriminative dimension-
ality reduction performs substantially better than PCA and achieves high re-
trieval accuracy for very short codes (e.g. 0.368 mAP on Oxford Buildings for
16-dimensional features).

2 Related work

Our paper was inspired by the strong performance of convolutional neural net-
works (CNN) in image classiﬁcation tasks, and the qualitative evidence of their
feasibility for image retrieval provided in [10]. A subsequent report [4] demon-
strated that features emerging within the top layers of large deep CNNs can
be reused for classiﬁcation tasks dissimilar from the original classiﬁcation task.
Convolutional networks have also been used to produce descriptors suitable for
retrieval within the siamese architectures [3].

In the domain of “shallow” architectures, there is a line of works on apply-
ing the responses of discriminatively trained multiclass classiﬁers as descriptors
within retrieval applications. Thus, [24] uses the output of classiﬁers trained to
predict membership of Flickr groups as image descriptors. Likewise, very com-
pact descriptors based on the output of binary classiﬁers trained for a large
number of classes (classemes) were proposed in [23]. Several works such as [11]
used the outputs of discriminatively trained classiﬁers to describe human faces,
obtaining high-performing face descriptors.

The current state-of-the-art holistic image descriptors are obtained by the
aggregation of local gradient-based descriptors. Fisher Vectors [18] is the best
known descriptor of this kind, however its performance has been recently su-
perceded by the triangulation embedding suggested in [9] (another recent pa-
per [22] have introduced descriptors that can also achieve very high performance,
however the memory footprint of such descriptors is at least an order of mag-
nitude larger than uncompressed Fisher vectors, which makes such descriptors
unsuitable for most applications).

In [7], the dimensionality reduction of Fisher vectors is considered, and it is
suggested to use Image-Net to discover discriminative low-dimensional subspace.
The best performing variant of such dimensionality reduction in [7] is based on
adding a hidden unit layer and a classiﬁer output layer on top of Fisher vectors.

4

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

After training on a subset of Image-Net, the low-dimensional activations of the
hidden layer are used as descriptors for image retrieval. The architecture of [7]
therefore is in many respects similar to those we investigate here, as it is deep
(although not as multi-layered as in our case), and is trained on image-net classes.
Still, the representations derived in [7] are based on hand-crafted features (SIFT
and local color histograms) as opposed to neural codes derived from CNNs that
are learned from the bottom up.

There is also a large body of work on dimensionality reduction and metric
learning [26]. In the last part of the paper we used a variant of the discriminative
dimensionality reduction similar to [21].

Independently and in parallel with our work, the use of neural codes for image
retrieval (among other applications) has been investigated in [20]. Their ﬁndings
are largely consistent with ours, however there is a substantial diﬀerence from
this work in the way the neural codes are extracted from images. Speciﬁcally,
[20] extract a large number of neural codes from each image by applying a
CNN in a “jumping window” manner. In contrast to that, we focus on holistic
descriptors where the whole image is mapped to a single vector, thus resulting
in a substantially more compact and faster-to-compute descriptors, and we also
investigate the performance of compressed holistic descriptors.

Furthermore, we investigate in details how retraining of a CNN on diﬀerent
datasets impact the retrieval performance of the corresponding neural codes.
Another concurrent work [17] investigated how similar retraining can be used to
adapt the Image-Net derived networks to smaller classiﬁcation datasets.

3 Using Pretrained Neural Codes

Deep convolutional architecture. In this section, we evaluate the perfor-
mance of neural codes obtained by passing images through a deep convolution
network, trained to classify 1000 Image-Net classes [10]. In particular, we use our
own reimplementation of the system from [10]. The model includes ﬁve convolu-
tional layers, each including a convolution, a rectiﬁed linear (ReLU) transform
(f (x) = max(x, 0)), and a max pooling transform (layers 1, 2, and 2). At the top
of the architecture are three fully connected layers (“layer 6”, “layer 7”, “layer
8”), which take as an input the output of the previous layer, multiply it by a
matrix, and, in the case of layers 6, and 7 applies a rectiﬁed linear transform.
The network is trained so that the layer 8 output corresponds to the one-hot
encoding of the class label. The softmax loss is used during training. The results
of the training on the ILSVRC dataset [1] closely matches the result of a single
CNN reported in [10] (more precisely, the resulting accuracy is worse by 2%).
Our network architecture is schematically illustrated on Figure 1.

The network is applicable to 224×224 images. Images of other dimensions are
resized to 224 × 224 (without cropping). The CNN architecture is feed-forward,
and given an image I, it produces a sequence of layer activations. We denote
with L5(I), L6(I), and L7(I) the activations (output) of the corresponding layer

Neural Codes for Image Retrieval

5

prior to the ReLU transform. Naturally, each of these high-dimensional vectors
represent a deep descriptor (a neural code) of the input image.

Benchmark datasets. We evaluate the performance of neural codes on four
standard datasets listed below. The results for top performing methods based
on holistic descriptors (of dimensionality upto 32K) are given in Table 1.

Oxford Buildings dataset [19] (Oxford). The dataset consists of 5062 pho-
tographs collected from Flickr and corresponding to major Oxford landmarks.
Images corresponding to 11 landmarks (some having complex structure and com-
prising several buildings) are manually annotated. The 55 hold-out queries evenly
distributed over those 11 landmarks are provided, and the performance of a re-
trieval method is reported as a mean average precision (mAP) [19] over the
provided queries.

Oxford Buildings dataset+100K [19] (Oxford 105K). The same dataset with
the same associated protocol, but with additional 100K distractor images pro-
vided by the dataset authors.

INRIA Holidays dataset [8] (Holidays). The dataset consists of 1491 vacation
photographs corresponding to 500 groups based on same scene or object. One
image from each group serves as a query. The performance is reported as mean
average precision over 500 queries. Some images in the dataset are not in a
natural orientation (rotated by ±90 degrees). As deep architectures that we
consider are trained on the images in a normal orientation, we follow several
previous works, and manually bring all images in the dataset to the normal
orientation. In a sequel, all our results are for this modiﬁed dataset. We also
experimented with an unrotated version and found the performance in most
settings to be worse by about 0.03 mAP. Most of the performance drop can be
regained back using data augmentation (rotating by ±90) on the dataset and on
the query sides.

University of Kentucky Benchmark dataset [16] (UKB). The dataset includes
10,200 indoor photographs of 2550 objects (4 photos per object). Each image is
used to query the rest of the dataset. The performance is reported as the average
number of same-object images within the top-4 results, and is a number between
0 and 4.

Results. The results for neural codes produced with a network trained on
ILSVRC classes are given in the middle part of Table 1. All results were ob-
tained using L2-distance on L2-normalized neural codes. We give the results
corresponding to each of the layers 5, 6, 7. We have also tried the output of layer
8 (corresponding to the ILSVRC class probabilities and thus closely related to
previous works that used class probabilities as descriptors), however it performed
considerably worse (e.g. 0.02 mAP worse than layer 5 on Holidays).

Among all the layers, the 6th layer performs the best, however it is not
uniformly better for all queries (see Figure 2 and Figure 3). Still, the results
obtained using simple combination of the codes (e.g. sum or concatenation)
were worse than L6(I)-codes alone, and more complex non-linear combination
rules we experimented with gave only marginal improvement.

6

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

Overall, the results obtained using L6(I)-codes are in the same ballpark, but
not superior compared to state-of-the-art. Their strong performance is however
remarkable given the disparity between the ILSVRC classiﬁcation task and the
retrieval tasks considered here.

Fig. 2. A retrieval example on Holidays dataset where Layer 5 gives the best result
among other layers, presumably because of its reliance on relatively low-level texture
features rather than high level concepts. The left-most image in each row corresponds
to the query, correct answers are outlined in green.

L5(I)

L6(I)

L7(I)

L5(I)

L6(I)

L7(I)

Fig. 3. A retrieval example on Holidays dataset where Layer 7 gives the best result
among other layers, presumably because of its reliance on high level concepts. The
left-most image in each row corresponds to the query, correct answers are outlined in
green.

Neural Codes for Image Retrieval

7

4 Retrained neural codes

A straightforward idea for the improvement of the performance of neural codes
is to retrain the convolutional architecture on the dataset with image statistics
and classes that are more relevant for datasets considered at test time.

The Landmarks dataset. We ﬁrst focus on collecting the dataset that is
relevant to the landmark-type datasets (Holidays and Oxford Buildings). The
collection of such dataset is an untrivial task, and we chose a (semi)-automated
approach for that. We start by selecting 10,000 most viewed landmark Wikipedia
pages (over the last month). For each page, we used the title of the page as a
query to Yandex image search engine1, and then downloaded 1000 top images
returned in response to the query (or less, if the query returned less images).

At the second stage, we eyeballed the returned images by looking at the
hundred of photographs from the top of the response and at an another hundred
sampled uniformly from the remaining images (900 or less). We then manually
classify the downloaded list into one of the following three classes: (1) “take all”
(at least 80% in both hundreds are relevant, i.e. are actual photographs of the
landmark), (2) “take top” (at least 80% in the ﬁrst hundred are relevant, but the
second hundred has more than 20% non-relevant images, including logos, maps,
portraits, wrong scenes/objects), (3) “unsuitable” (more than 20% non-relevant
images even within the ﬁrst hundred). Overall, in this way we found 252 “take
all” classes, and 420 “take top” images. Figure 4 shows two typical examples
of classes in the collected dataset. We then assembled the dataset out of these
classes, taking either top 1000 images (for “take all” classes) or top 100 images
(for “take top” classes) for each query. Overall the resulting dataset has 672
classes and 213,678 images. During the collection, we excluded queries related
to Oxford, and we also removed few near-duplicates with the Holidays dataset
from the ﬁnal dataset. We provide the list of the queries and the URLs at the
project webpage2.

Our approach for a landmark dataset collection is thus diﬀerent from that of
[14] that uses Flickr crawling to assemble a similar dataset in a fully automatic
way. The statistics of images indexed by image search engines and of geotagged
user photographs is diﬀerent, so it would be interesting to try the adaptation
using the Flickr-crawled dataset.

We then used the collected dataset to train the CNN with the same architec-
ture as for the ILSVRC (except for the number of output nodes that we changed
to 672). We initialized our model by the original ILSVRC CNN (again except for
the last layer). Otherwise, the training was the same as for the original network.
Results for retrained neural codes. The results for neural codes pro-
duced with a network retrained on the landmark classes are given in Table 1.
As expected, the diﬀerence with respect to the original neural codes is related
to the similarity between the landmark photographs and the particular retrieval
dataset. Thus, there is a very big improvement for Oxford and Oxford 105K

1 http://images.yandex.ru
2 http://sites.skoltech.ru/compvision/projects/neuralcodes/

8

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

Descriptor
Fisher+color[7]
VLAD+adapt+innorm[2]
Sparse-coded features[6]

Dims Oxford Oxford 105K Holidays UKB
3.19
—
4096
—
—
32768
3.76
—
11024 —
3.53
0.611

0.774
0.646
0.767
0.771

—
0.555

0.676

Triangulation embedding[9] 8064

Neural codes trained on ILSVRC

After retraining on the Landmarks dataset

Layer 5
Layer 6
Layer 7

Layer 5
Layer 6
Layer 7

Layer 5
Layer 6
Layer 7

9216
4096
4096

9216
4096
4096

9216
4096
4096

0.389
0.435
0.430

0.387
0.545
0.538

0.348
0.393
0.362

—
0.392
—

—
0.512
—

—
0.351
—

0.690*
0.749*
0.736*

0.674*
0.793*
0.764*

0.682*
0.754*
0.730*

3.09
3.43
3.39

2.99
3.29
3.19

3.13
3.56
3.53

After retraining on turntable views (Multi-view RGB-D)

Table 1. Full-size holistic descriptors: comparison with state-of-the-art (holistic de-
scriptors with the dimensionality up to 32K). The neural codes are competitive with
the state-of-the-art and beneﬁt considerably from retraining on related datasets (Land-
marks for Oxford Buildings and Holidays; turntable sequences for UKB). (cid:63) indicate the
results obtained for the rotated version of Holidays, where all images are set into their
natural orientation.

datasets, which are also based on landmark photographs. The improvement for
the Holidays dataset is smaller but still very considerable. The performance of
adapted L6(I) features on the Holidays dataset is better then for previously
published systems based on holistic features (unless much higher dimensional-
ity as in [22] is considered). Representative retrieval examples comparing the
results obtained with the original and the retrained neural codes are presented
in Figure 5. We also tried to train a CNN on the landmarks dataset with ran-
dom initialization (i.e. trained from scratch) but observed poor performance due
to a smaller number of training images and a higher ratio of irrelevant images
compared to ILSVRC.

Interestingly, while we obtain an improvement by retraining the CNN on the
Landmarks dataset, no improvement over the original neural codes was obtained
by retraining the CNN on the SUN dataset [25]. Apparently, this is because each
SUN class still correspond to diﬀerent scenes with the same usage type, while
each class in the Landmark dataset as well as in the Holidays and Oxford datasets
corresponds to the same object (e.g. building).

Adaptation on the turntable sequences. After retraining on the Land-
marks collection, the performance on the UKB dataset drops. This reﬂects the
fact that the classes in the UKB dataset, which correspond to multiple indoor
views of diﬀerent small objects, are more similar to some classes within ILSVRC

Neural Codes for Image Retrieval

9

Fig. 4. Sample images from the ”Leeds Castle” and ”Kiev Pechersk Lavra” classes of
the collected Landmarks dataset. The ﬁrst class contains mostly “clean” outdoor images
sharing the same building while the second class contains a lot of indoor photographs
that do not share common geometry with the outdoor photos.

than to landmark photographs. To conﬁrm this, we performed the second re-
training experiment, where we used the Multi-view RGB-D dataset [12] which
contains turntable views of 300 household objects. We treat each object as a
separate class and sample 200 images per class. We retrain the network (again,
initialized by the ILSVRC CNN) on this dataset of 60,000 images (the depth
channel was discarded). Once again, we observed (Table 1) that this retrain-
ing provides an increase in the retrieval performance on the related dataset, as
the accuracy on the UKB increased from 3.43 to 3.56. The performance on the
unrelated datasets (Oxford, Oxford-105K) dropped.

5 Compressed neural codes

As the neural codes in our experiments are high-dimensional (e.g. 4096 for
L6(I)), albeit less high-dimensional than other state-of-the-art holistic descrip-
tors, a question of their eﬃcient compression arises. In this section, we evaluate
two diﬀerent strategies for such compression. First, we investigate how eﬃciency
of neural codes degrades with the common PCA-based compression. An impor-
tant ﬁnding is that this degradation is rather graceful. Second, we assess a more
sophisticated procedure based on discriminative dimensionality reduction. We
focus our evaluation on L6(I), since the performance of the neural codes associ-

10

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

Fig. 5. Examples of Holidays queries with large diﬀerences between the results of the
original and the retrained neural codes (retraining on Landmarks). In each row pair,
the left-most images correspond to the query, the top row corresponds to the result
with the original neural code, the bottom row corresponds to the retrained neural code.
For most queries, the adaptation by retraining is helpful. The bottom row shows a rare
exception.

Neural Codes for Image Retrieval

11

Dimensions

64

128

256

512

Layer 6
Layer 6 + landmark retraining
Layer 6 + turntable retraining

Layer 6
Layer 6 + landmark retraining
Layer 6 + turntable retraining

Layer 6
Layer 6 + landmark retraining
Layer 6 + turntable retraining

32

16
Oxford

0.328
0.418
0.289

0.390
0.515
0.349
Oxford 105K
0.330
0.467
0.293

0.260
0.354
0.223
Holidays
0.591
0.609
0.587

0.683
0.729
0.702

UKB

Layer 6
Layer 6 + landmark retraining
Layer 6 + turntable retraining

2.630
2.410
2.829

3.130
2.980
3.302

0.421
0.548
0.377

0.370
0.508
0.331

0.729
0.777
0.741

3.381
3.256
3.526

0.433
0.557
0.391

0.388
0.523
0.348

0.747
0.789
0.756

3.416
3.297
3.552

0.435
0.557
0.392

0.392
0.524
0.350

0.749
0.789
0.756

3.423
3.298
3.556

0.435
0.557
0.393

0.392
0.522
0.351

0.749
0.789
0.756

3.426
3.300
3.557

Table 2. The performance of neural codes (original and retrained) for diﬀerent PCA-
compression rates. The performance of the descriptors is almost unaﬀected till the
dimensionality of 256 and the degradation associated with more extreme compression
is graceful.

ated with the sixth layer was consistently better than with the codes from other
layers.

PCA compression. We ﬁrst evaluate the performance of diﬀerent versions
of neural codes after PCA compression to a diﬀerent number of dimensions
(Table 2). Here, PCA training was performed on 100,000 random images from
the Landmark dataset.

The quality of neural codes L6(I) for diﬀerent PCA compression rates is
presented in Table 2. Overall, PCA works surprisingly well. Thus, the neural
codes can be compressed to 256 or even to 128 dimensions almost without any
quality loss. The advantage of the retrained codes persists through all compres-
sion rates. Table 3 further compares diﬀerent holistic descriptors compressed to
128-dimensions, as this dimensionality has been chosen for comparison in sev-
eral previous works. For Oxford and Holidays datasets, the landmark-retrained
neural codes provide a new state-of-the-art among the low-dimensional global
descriptors.

Discriminative dimensionality reduction. In this section, we further
perform discriminative dimensionality reduction via the learning of a low-rank
projection matrix W . The objective of the learning is to make distances between
codes small in the cases when the corresponding images contain the same object
and large otherwise, thus achieving additional tolerance for nuisance factors,
such as viewpoint changes. For such learning, we collected a number of image

12

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

Descriptor
Fisher+color[7]
VLAD+adapt+innorm[2]
Sparse-coded features[6]
Triangulation embedding[9]

Oxford Oxford 105K Holidays UKB
3.08
—
3.67
3.40

—
0.374
—
0.353

0.723
0.625
0.727
0.617

—
0.448
—
0.433

Neural codes trained on ILSVRC

0.433

Layer 6
After retraining on the Landmarks dataset
Layer 6

3.29
After retraining on turntable views (Multi-view RGB-D)
3.55

Layer 6

0.789*

0.756*

0.747*

0.523

0.557

0.348

0.386

0.391

3.42

Table 3. The comparison of the PCA-compressed neural codes (128 dimensions) with
the state-of-the-art holistic image descriptors of the same dimensionality. The PCA-
compressed landmark-retrained neural codes establish new state-of-the-art on Holidays,
Oxford, and Oxford 105K datasets.

Fig. 6. Examples of queries with large diﬀerences between the results of the PCA-
compressed and the discriminatively-compressed neural codes (for 32 dimensions). The
correct answers are outlined in green.

pairs which contained the same object. Again, the challenge here was to collect
a diverse set of pairs.

To obtain such a dataset, we sample pairs of images within the same classes
of the Landmark dataset. We built a matching graph using a standard image
matching pipeline (SIFT+nearest neighbor matching with the second-best neigh-
bor test [15] + RANSAC validation [5]). The pipeline is applied to all pairs of

Neural Codes for Image Retrieval

13

128
0.328 0.390 0.421 0.433
Discriminative dimensionality reduction 0.368 0.401 0.430 0.439

D =
PCA-compression

64

32

16

Table 4. The comparison of the performances of the PCA compression and a discrim-
inative dimensionality reduction for the original neural codes on the Oxford dataset.
Discriminative dimensionality reduction improves over the PCA reduction, in particu-
lar for the extreme dimensionality reduction.

images belonging to the same landmark. Once the graph for the landmark is
constructed, we took pairs of photographs that share at least one neighbor in
the graph but are not neighbors themselves (to ensure that we do not focus the
training process on near duplicates). Via such procedure we obtain 900K diverse
image pairs (Figure 7). We further greedily select a subset of 100K pairs so that
each photograph occurs at most once in such a subset, and use this subset of
pairs for training.

Fig. 7. Examples of training pairs for discriminative dimensionality reduction. The
pairs were obtained through time-consuming RANSAC matching of local features and
simple analysis of the resulting match graph (see the text for more details).

Given a dataset of matching pairs we learn a linear projection matrix W via
the method from [21]. In the experiments with large compression rates (D =
16, 32) we project original 4096-dimensional codes. For the dimensionality D =
64, 128, we observed signiﬁcantn overﬁtting due to a large number of parameters
within W . In this case we ﬁrst performed PCA-compression to 1024 dimensions
and then learned W for the preliminarily compressed 1024-dimensional codes.

The results of the two compression strategies (PCA and the discriminative re-
duction) are compared for non-retrained codes for the Oxford dataset in Table 4.
As can be seen, the biggest gain from discriminative dimensionality reduction
is achieved for the extremely compressed 16-dimensional codes. We have also
evaluated the discriminative dimensionality reduction on the neural codes re-
trained on the Landmarks dataset. In this case, however, we did not observed
any additional improvement from the discriminative reduction, presumably be-

14

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

cause the network retraining and the discriminative reduction were performed
using overlapping training data.

6 Discussion

We have evaluated the performance of the deep neural codes within the image
retrieval application. There are several conclusions and observations that one
can draw from our experiments.

First of all, as was expected, neural codes perform well, even when one uses
the CNN trained for the classiﬁcation task and when the training dataset and
the retrieval dataset are quite diﬀerent from each other. Unsurprisingly, this
performance can be further improved, when the CNN is retrained on photographs
that are more related to the retrieval dataset.

We note that there is an obvious room for improvement in terms of the re-
trieval accuracy, in that all images are downsampled to low resolution (224×224)
and therefore a lot of information about the texture, which can be quite discrim-
inative, is lost. As an indication of potential improvement, our experiments with
Fisher Vectors suggest that their drop in performance under similar circum-
stances is about 0.03 mAP on Holidays.

Interestingly, and perhaps unexpectedly, the best performance is observed not
on the very top of the network, but rather at the layer that is two levels below the
outputs. This eﬀect persists even after the CNN is retrained on related images.
We speculate, that this is because the very top layers are too much tuned for
the classiﬁcation task, while the bottom layers do not acquire enough invariance
to nuisance factors.

We also investigate the performance of compressed neural codes, where plain
PCA or a combination of PCA with discriminative dimensionality reduction
result in very short codes with very good (state-of-the-art) performance. An im-
portant result is that PCA aﬀects performance of neural codes much less than
the one of VLADs, Fisher Vectors, or triangulation embedding. One possible
explanation is that passing an image through the network discards much of the
information that is irrelevant for classiﬁcation (and for retrieval). Thus, CNN-
based neural codes from deeper layers retain less (useless) information than unsu-
pervised aggregation-based representations. Therefore PCA compression works
better for neural codes.

One possible interesting direction for investigation, is whether good neural
codes can be obtained directly by training the whole deep architecture using the
pairs of matched images (rather than using the classiﬁcation performance as the
training objective), e.g. using siamese architecture of [3]. Automated collection
of a suitable training collection having suﬃcient diversity would be an interesting
task on its own. Finally, we note that the dimensionality reduction to a required
dimensionality can be realized by choosing the size of a network layer used to
produce the codes, rather than a post-hoc procedure.

Neural Codes for Image Retrieval

15

References

1. A Berg and J Deng and and L Fei-Fei: Large scale visual recognition challenge

(ILSVRC). http://www.image-net.org/challenges/LSVRC/2010/ (2010)

2. Arandjelovi´c, R., Zisserman, A.: All about VLAD. In: Computer Vision and Pat-

tern Recognition (2013)

3. Chopra, S., Hadsell, R., LeCun, Y.: Learning a similarity metric discriminatively,
with application to face veriﬁcation. In: Computer Vision and Pattern Recognition
(2005)

4. Donahue, J., Jia, Y., Vinyals, O., Hoﬀman, J., Zhang, N., Tzeng, E., Darrell, T.:
Decaf: A deep convolutional activation feature for generic visual recognition. CoRR
abs/1310.1531 (2013)

5. Fischler, M.A., Bolles, R.C.: Random sample consensus: A paradigm for model
ﬁtting with applications to image analysis and automated cartography. Commun.
ACM (1981)

6. Ge, T., Ke, Q., Sun, J.: Sparse-coded features for image retrieval. In: British Ma-

chine Vision Conference (2013)

7. Gordo, A., Rodr´ıguez-Serrano, J.A., Perronnin, F., Valveny, E.: Leveraging
category-level labels for instance-level image retrieval. In: Computer Vision and
Pattern Recognition (2012)

8. J´egou, H., Douze, M., Schmid, C.: Hamming embedding and weak geometric con-
sistency for large scale image search. In: European Conference on Computer Vision
(2008)

9. J´egou, H., Zisserman, A.: Triangulation embedding and democratic aggregation

for image search. In: Computer Vision and Pattern Recognition (2014)

10. Krizhevsky, A., Sutskever, I., Hinton, G.E.: Imagenet classiﬁcation with deep con-
volutional neural networks. In: Neural Information Processing Systems (2012)
11. Kumar, N., Berg, A.C., Belhumeur, P.N., Nayar, S.K.: Attribute and simile clas-
siﬁers for face veriﬁcation. In: International Conference on Computer Vision. pp.
365–372 (2009)

12. Lai, K., Bo, L., Ren, X., , Fox, D.: A large-scale hierarchical multi-view rgb-d

object dataset. In: Neural Information Processing Systems (2011)

13. LeCun, Y., Boser, B.E., Denker, J.S., Henderson, D., Howard, R.E., Hubbard,
W.E., Jackel, L.D.: Handwritten digit recognition with a back-propagation net-
work. In: Neural Information Processing Systems. pp. 396–404 (1989)

14. Li, Y., Crandall, D., Huttenlocher, D.: Landmark classiﬁcation in large-scale image

collections. In: International Conference on Computer Vision (2009)

15. Lowe, D.G.: Distinctive image features from scale-invariant keypoints. Interna-

tional Journal of Computer Vision (2004)

16. Nist´er, D., Stew´enius, H.: Scalable recognition with a vocabulary tree. In: Com-

puter Vision and Pattern Recognition (2006)

17. Oquab, M., Bottou, L., Laptev, I., Sivic, J.: Learning and transferring mid-level
image representations using convolutional neural networks. In: Computer Vision
and Pattern Recognition (June 2014)

18. Perronnin, F., S´anchez, J., Mensink, T.: Improving the ﬁsher kernel for large-scale

image classiﬁcation. In: European Conference on Computer Vision (2010)

19. Philbin, J., Chum, O., Isard, M., Sivic, J., Zisserman, A.: Object retrieval with
large vocabularies and fast spatial matching. In: Computer Vision and Pattern
Recognition (2007)

16

A. Babenko, A. Slesarev, A. Chigorin, V. Lempitsky

20. Razavian, A.S., Azizpour, H., Sullivan, J., Carlsson, S.: CNN features oﬀ-the-shelf:

an astounding baseline for recognition. CoRR (2014)

21. Simonyan, K., Parkhi, O.M., Vedaldi, A., Zisserman, A.: Fisher Vector Faces in

the Wild. In: British Machine Vision Conference (2013)

22. Tolias, G., Avrithis, Y., J´egou, H.: To aggregate or not to aggregate: selective
match kernels for image search. In: International Conference on Computer Vision
(2013)

23. Torresani, L., Szummer, M., Fitzgibbon, A.W.: Eﬃcient object category recogni-

tion using classemes. In: European Conference on Computer Vision (2010)

24. Wang, G., Hoiem, D., Forsyth, D.A.: Learning image similarity from ﬂickr groups
using stochastic intersection kernel machines. In: International Conference on Com-
puter Vision (2009)

25. Xiao, J., Hays, J., Ehinger, K.A., Oliva, A., Torralba, A.: Sun database: Large-scale
scene recognition from abbey to zoo. In: Computer Vision and Pattern Recognition
(2010)

26. Yang, L., Jin, R.: Distance metric learning: A comprehensive survey. Michigan

State Universiy 2 (2006)

