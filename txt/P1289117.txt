Image Captioning with Deep Bidirectional LSTMs

Cheng Wang, Haojin Yang, Christian Bartz, Christoph Meinel
Hasso Plattner Institute, University of Potsdam
Prof.-Dr.-Helmert-Str. 2-3, 14482 Potsdam, Germany
{cheng.wang, haojin.yang,christoph.meinel}@hpi.de
christian.bartz@student.hpi.uni-potsdam.de

6
1
0
2
 
l
u
J
 
0
2
 
 
]

V
C
.
s
c
[
 
 
3
v
0
9
7
0
0
.
4
0
6
1
:
v
i
X
r
a

ABSTRACT
This work presents an end-to-end trainable deep bidirec-
tional LSTM (Long-Short Term Memory) model for image
captioning. Our model builds on a deep convolutional neu-
ral network (CNN) and two separate LSTM networks.
It
is capable of learning long term visual-language interactions
by making use of history and future context information at
high level semantic space. Two novel deep bidirectional vari-
ant models, in which we increase the depth of nonlinearity
transition in diﬀerent way, are proposed to learn hierarchi-
cal visual-language embeddings. Data augmentation tech-
niques such as multi-crop, multi-scale and vertical mirror
are proposed to prevent overﬁtting in training deep models.
We visualize the evolution of bidirectional LSTM internal
states over time and qualitatively analyze how our models
“translate” image to sentence. Our proposed models are eval-
uated on caption generation and image-sentence retrieval
tasks with three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO datasets. We demonstrate that bidirectional
LSTM models achieve highly competitive performance to
the state-of-the-art results on caption generation even with-
out integrating additional mechanism (e.g. object detection,
attention model etc.) and signiﬁcantly outperform recent
methods on retrieval task.

CCS Concepts
•Computing methodologies → Natural language gen-
eration; Neural networks; Computer vision representa-
tions;

Keywords
deep learning, LSTM, image captioning, visual-language

1.

INTRODUCTION

Automatically describe an image using sentence-level cap-
tions has been receiving much attention recent years [11, 10,
13, 17, 16, 23, 34, 39]. It is a challenging task integrating

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
MM ’16, October 15-19, 2016, Amsterdam, Netherlands
c(cid:13) 2016 ACM. ISBN 978-1-4503-3603-1/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2964284.2964299

visual and language understanding. It requires not only the
recognition of visual objects in an image and the seman-
tic interactions between objects, but the ability to capture
visual-language interactions and learn how to “translate” the
visual understanding to sensible sentence descriptions. The
most important part of this visual-language modeling is to
capture the semantic correlations across image and sentence
by learning a multimodal joint model. While some previous
models [20, 15, 26, 17, 16] have been proposed to address
the problem of image captioning, they rely on either use sen-
tence templates, or treat it as retrieval task through ranking
the best matching sentence in database as caption. Those
approaches usually suﬀer diﬃculty in generating variable-
length and novel sentences. Recent work [11, 10, 13, 23,
34, 39] has indicated that embedding visual and language
to common semantic space with relatively shallow recurrent
neural network (RNN) can yield promising results.

In this work, we propose novel architectures to the prob-
lem of image captioning. Diﬀerent to previous models, we
learn a visual-language space where sentence embeddings
are encoded using bidirectional Long-Short Term Memory
(Bi-LSTM) and visual embeddings are encoded with CNN.
Bi-LSTM is able to summarize long range visual-language
interactions from forward and backward directions. Inspired
by the architectural depth of human brain, we also explore
the deep bidirectional LSTM architectures to learn higher
level visual-language embeddings. All proposed models can
be trained in end-to-end by optimizing a joint loss.

Why bidirectional LSTMs? In unidirectional sentence gen-
eration, one general way of predicting next word wt with
visual context I and history textual context w1:t−1 is max-
imize log P (wt|I, w1:t−1). While unidirectional model in-
cludes past context, it is still limited to retain future context
wt+1:T that can be used for reasoning previous word wt by
maximizing log P (wt|I, wt+1:T ). Bidirectional model tries
to overcome the shortcomings that each unidirectional (for-
ward and backward direction) model suﬀers on its own and
exploits the past and future dependence to give a prediction.
As shown in Figure 1, two example images with bidirection-
ally generated sentences intuitively support our assumption
that bidirectional captions are complementary, combining
them can generate more sensible captions.

Why deeper LSTMs? The recent success of deep CNN
in image classiﬁcation and object detection [14, 33] demon-
strates that deep, hierarchical models can be more eﬃcient
at learning representation than shallower ones. This mo-
tivated our work to explore deeper LSTM architectures in
the context of learning bidirectional visual-language embed-

in bridging the “semantic gap” of multimodal data. Image
captioning falls into this general category of learning multi-
modal representations.

Recently, several approaches have been proposed for im-
age captioning. We can roughly classify those methods into
three categories. The ﬁrst category is template based ap-
proaches that generate caption templates based on detect-
ing objects and discovering attributes within image. For
example, the work [20] was proposed to parse a whole sen-
tence into several phrases, and learn the relationships be-
tween phrases and objects within an image. In [15], condi-
tional random ﬁeld (CRF) was used to correspond objects,
attributes and prepositions of image content and predict the
best label. Other similar methods were presented in [26, 17,
16]. These methods are typically hard-designed and rely on
ﬁxed template, which mostly lead to poor performance in
generating variable-length sentences. The second category
is retrieval based approach, this sort of methods treat image
captioning as retrieval task. By leveraging distance met-
ric to retrieve similar captioned images, then modify and
combine retrieved captions to generate caption [17]. But
these approaches generally need additional procedures such
as modiﬁcation and generalization process to ﬁt image query.
Inspired by the success use of CNN [14, 45] and Recurrent
Neural Network [24, 25, 1]. The third category is emerged as
neural network based methods [39, 42, 13, 10, 11]. Our work
also belongs to this category. Among those work, Kiro et
al.[12] can been as pioneer work to use neural network for im-
age captioning with multimodal neural language model. In
their follow up work [13], Kiro et al. introduced an encoder-
decoder pipeline where sentence was encoded by LSTM and
decoded with structure-content neural language model (SC-
NLM). Socher et al.[34] presented a DT-RNN (Dependency
Tree-Recursive Neural Network) to embed sentence into a
vector space in order to retrieve images. Later on, Mao et
al.[23] proposed m-RNN which replaces feed-forward neu-
ral language model in [13]. Similar architectures were intro-
duced in NIC [39] and LRCN [4], both approaches use LSTM
to learn text context. But NIC only feed visual information
at ﬁrst time step while Mao et al.[23] and LRCN [4]’s model
consider image context at each time step. Another group
of neural network based approaches has been introduced in
[10, 11] where image captions generated by integrating ob-
ject detection with R-CNN (region-CNN) and inferring the
alignment between image regions and descriptions.

Most recently, Fang et al.[5] used multi-instance learning
and traditional maximum-entropy language model for de-
scription generation. Chen et al.[2] proposed to learn visual
representation with RNN for generating image caption. In
[42], Xu et al.
introduced attention mechanism of human
visual system into encoder-decoder framework. It is shown
that attention model can visualize what the model “see” and
yields signiﬁcant improvements on image caption genera-
tion. Unlike those models, our deep LSTM model directly
assumes the mapping relationship between visual-language
is antisymmetric and dynamically learns long term bidirec-
tional and hierarchical visual-language interactions. This is
proved to be very eﬀective in generation and retrieval tasks
as we demonstrate in Sec.4.5 and Sec.4.6.

3. MODEL

In this section, we describe our multimodal bidirectional
LSTM model (Bi-LSTM for short) and explore its deeper

Figure 1: Illustration of generated captions. Two example
images from Flickr8K dataset and their best matching cap-
tions that generated in forward order (blue) and backward
order (red). Bidirectional models capture diﬀerent levels
of visual-language interactions (more evidence see Sec.4.4).
The ﬁnal caption is the sentence with higher probabilities
In both examples, backward
(histogram under sentence).
caption is selected as ﬁnal caption for corresponding image.

dings. As claimed in [29], if we consider LSTM as a compo-
sition of multiple hidden layers that unfolded in time, LSTM
is already deep network. But this is the way of increasing
“horizontal depth” in which network weights W are reused at
each time step and limited to learn more representative fea-
tures as increasing the “vertical depth” of network. To design
deep LSTM, one straightforward way is to stack multiple
LSTM layers as hidden to hidden transition. Alternatively,
instead of stacking multiple LSTM layers, we propose to add
multilayer perception (MLP) as intermediate transition be-
tween LSTM layers. This can not only increase LSTM net-
work depth, but can also prevent the parameter size from
growing dramatically.

The core contributions of this work are threefold:

• We propose an end-to-end trainable multimodal bidi-
rectional LSTM (see Sec.3.2) and its deeper variant
models (see Sec.3.3) that embed image and sentence
into a high level semantic space by exploiting both
long term history and future context.

• We visualize the evolution of hidden states of bidirec-
tional LSTM units to qualitatively analyze and under-
stand how to generate sentence that conditioned by
visual context information over time (see Sec.4.4).

• We demonstrate the eﬀectiveness of proposed mod-
els on three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO. Our experimental results show that
bidirectional LSTM models achieve highly competitive
performance to the state-of-the-art on caption genera-
tion (see Sec.4.5) and perform signiﬁcantly better than
recent methods on retrieval task (see Sec.4.6).

2. RELATED WORK

Multimodal representation learning [27, 35] has signiﬁ-
cant value in multimedia understanding and retrieval. The
shared concept across modalities plays an important role

Figure 2: Long Short Term Memory (LSTM) cell. It is con-
sist of an input gate i, a forget gate f , a memory cell c and
an output gate o. The input gate decides let incoming sig-
nal go through to memory cell or block it. The output gate
can allow new output or prevent it. The forget gate decides
to remember or forget cell’s previous state. Updating cell
states is performed by feeding previous cell output to itself
by recurrent connections in two consecutive time steps.

variants. We ﬁrst brieﬂy introduce LSTM which is at the
center of model. The LSTM we used is described in [44].

3.1 Long Short Term Memory

Our model builds on LSTM cell, which is a particular
form of traditional recurrent neural network (RNN). It has
been successfully applied to machine translation [3], speech
recognition [8] and sequence learning [36]. As shown in Fig-
ure 2, the reading and writing memory cell c is controlled
by a group of sigmoid gates. At given time step t, LSTM
receives inputs from diﬀerent sources: current input xt, the
previous hidden state of all LSTM units ht−1 as well as pre-
vious memory cell state ct−1. The updating of those gates
at time step t for given inputs xt, ht−1 and ct−1 as follows.

it = σ(Wxixt + Whiht−1 + bi)
ft = σ(Wxf xt + Whf ht−1 + bf )
ot = σ(Wxoxt + Whoht−1 + bo)
gt = φ(Wxcxt + Whcht−1 + bc)
ct = ft (cid:12) ct−1 + it (cid:12) gt
ht = ot (cid:12) φ(ct)

(1)

(2)
(3)

(4)
(5)

(6)

where W are the weight matrices learned from the network
and b are bias vectors. σ is the sigmoid activation function
σ(x) = 1/(1 + exp(−x)) and φ presents hyperbolic tangent
φ(x) = (exp(x) − exp(−x))/(exp(x) + exp(−x)). (cid:12) denotes
the products with a gate value. The LSTM hidden output
ht={htk}K
k=0, ht ∈ RK will be used to predict the next word
by Softmax function with parameters Ws and bs:

F(pti; Ws, bs) =

exp(Wshti + bs)
j=1 exp(Wshtj + bs)

(cid:80)K

(7)

where pti is the probability distribution for predicted word.
Our key motivation of chosen LSTM is that it can learn
long-term temporal activities and avoid quick exploding and
vanishing problems that traditional RNN suﬀers from during
back propagation optimization.

3.2 Bidirectional LSTM

In order to make use of both the past and future context
information of a sentence in predicting word, we propose a

Figure 3: Multimodal Bidirectional LSTM. L1: sentence
embedding layer. L2: T-LSTM layer. L3: M-LSTM layer.
L4: Softmax layer. We feed sentence in both forward (blue
arrows) and backward (red arrows) order which allows our
model summarizes context information from both left and
right side for generating sentence word by word over time.
Our model is end-to-end trainable by minimize a joint loss.

bidirectional model by feeding sentence to LSTM from for-
ward and backward order. Figure 3 presents the overview of
our model, it is comprised of three modules: a CNN for en-
coding image inputs, a Text-LSTM (T-LSTM) for encoding
sentence inputs, a Multimodal LSTM (M-LSTM) for em-
bedding visual and textual vectors to a common semantic
space and decoding to sentence. The bidirectional LSTM is
implemented with two separate LSTM layers for computing
−→
h and backward hidden sequences
forward hidden sequences
←−
h . The forward LSTM starts at time t = 1 and the back-
ward LSTM starts at time t = T . Formally, our model works
−→
as follows, for raw image input (cid:101)I, forward order sentence
S
←−
S , the encoding performs as
and backward order sentence
−→
−→
Θl)
E

←−
Θl) (8)

It = C((cid:101)I; Θv)

t = T (

t = T (

−→
h 1

←−
h 1

−→
S ;

←−
S ;

←−
E

where C, T represent CNN, T-LSTM respectively and Θv,
←−
Θl are their corresponding weights.
E are bidi-
rectional embedding matrices learned from network. En-
coded visual and textual representations are then embedded
to multimodal LSTM by:
−→
Θm)

−→
E and

←−
Θm)

←−
h 2

−→
h 1

←−
h 1

−→
h 2

t = M(

t = M(

t , It;

t , It;

(9)

where M presents M-LSTM and its weight Θm. M aims
to capture the correlation of visual context and words at
diﬀerent time steps. We feed visual vector I to model at
each time step for capturing strong visual-word correlation.
On the top of M-LSTM are Softmax layers which compute
the probability distribution of next predicted word by
t ; Ws, bs) ←−p t+1 = F(

−→p t+1 = F(

t ; Ws, bs)

−→
h 2

←−
h 2

(10)

where p ∈ RK and K is the vocabulary size.

3.3 Deeper LSTM architecture

To design deeper LSTM architectures, in addition to di-
rectly stack multiple LSTMs on each other that we named
as Bi-S-LSTM (Figure 4(c)), we propose to use a fully con-
nected layer as intermediate transition layer. Our motiva-
tion comes from the ﬁnding of [29], in which DT(S)-RNN
(deep transition RNN with shortcut) is designed by adding
hidden to hidden multilayer perception (MLP) transition. It

Figure 4: Illustrations of proposed deep architectures for image captioning. The network in (a) is commonly used in previous
work, e.g. [4, 23]. (b) Our proposed Bidirectional LSTM (Bi-LSTM). (c) Our proposed Bidirectional Stacked LSTM (Bi-S-
LSTM). (d) Our proposed Bidirectional LSTM with fully connected (FC) transition layer (Bi-F-LSTM).

• Multi-Corp: Instead of randomly cropping on input
image, we crop at the four corners and center region.
Because we found random cropping is more tend to se-
lect center region and cause overﬁtting easily. By crop-
ping four corners and center, the variations of network
input can be increased to alleviate overﬁtting.

• Multi-Scale: To further increase the number of image-
sentence pairs, we rescale input image to multiple scales.
For each input image (cid:101)I with size H ×W , it is resized to
256 × 256, then we randomly select a region with size
of s ∗ H × s ∗ W , where s ∈ [1, 0.925, 0.875, 0.85] is scale
ratio. s = 1 means we do not multi-scale operation on
given image. Finally we resize it to AlexNet input size
227 ×227 or VggNet input size 224 × 224.

• Vertical Mirror: Motivated by the eﬀectiveness of
widely used horizontal mirror, it is natural to also con-
sider the vertical mirror of image for same purpose.

Those augmentation techniques are implemented in real-
time fashion. Each input image is randomly transformed
using one of augmentations to network input for training.
In principle, our data augmentation can increase image-
sentence training pairs by roughly 40 times (5×4×2).

3.5 Training and Inference

−→
L +

Our model is end-to-end trainable by using Stochastic
←−
Gradient Descent (SGD). The joint loss function L =
L
is computed by accumulating the Softmax losses of forward
and backward directions. Our objective is to minimize L,
which is equivalent to maximize the probabilities of cor-
rectly generated sentences. We compute the gradient (cid:79)L
with Back-Propagation Through Time (BPTT) algorithm.
The trained model is used to predict a word wt with
given image context I and previous word context w1:t−1 by
P (wt|w1:t−1, I) in forward order, or by P (wt|wt+1:T , I) in
backward order. We set w1=wT =0 at start point respec-
tively for forward and backward directions. Ultimately, with
generated sentences from two directions, we decide the ﬁnal
sentence for given image p(w1:T |I) according to the summa-
tion of word probability within sentence

p(w1:T |I) = max(

(cid:88)T

(−→p (wt|I)),

(cid:88)T

(←−p (wt|I))) (13)

t=1

t=1

−→p (wt|I) =

(cid:89)T

←−p (wt|I) =

(cid:89)T

t=1

t=1

p(wt|w1, w2, ..., wt−1, I)

p(wt|wt+1, wt+2, ..., wT , I)

(14)

(15)

Figure 5: Transition for Bi-S-LSTM(L) and Bi-F-LSTM(R)

is arguably easier to train such network. Inspired by this, we
extend Bi-LSTM (Figure 4(b)) with a fully connected layer
that we called Bi-F-LSTM (Figure 4(d)), shortcut connec-
tion between input and hidden states is introduced to make
it easier to train model. The aim of extension models is to
learn an extra hidden transition function Fh. In Bi-S-LSTM

t = Fh(hl−1
hl+1

t

, hl

t−1) = Uhl−1

t + Vhl

t−1

(11)

where hl
t presents the hidden states of l-th layer at time
t, U and V are matrices connect to transition layer (also
see Figure 5(L)). For readability, we consider one direction
training and suppress bias terms. Similarly, in Bi-F-LSTM,
to learn a hidden transition function Fh by

t = Fh(hl−1
hl+1

t

) = φr(Whl−1

t ⊕ (V(Uhl−1

t

))

(12)

where ⊕ is the operator that concatenates hl−1
and its ab-
stractions to a long hidden states (also see Figure 5(R)). φr
presents rectiﬁed linear unit (Relu) activation function for
transition layer, which performs φr(x) = max(0, x).

t

3.4 Data Augmentation

One of the most challenging aspects of training deep bidi-
rectional LSTM models is preventing overﬁtting. Since our
largest dataset has only 80K images [21] which might cause
overﬁtting easily, we adopted several techniques such as ﬁne-
tuning on pre-trained visual model, weight decay, dropout
and early stopping that commonly used in the literature.
Additionally, it has been proved that data augmentation
such as randomly cropping and horizontal mirror [32, 22],
adding noise, blur and rotation [40] can eﬀectively allevi-
Inspired by this, we designed
ate over-ﬁtting and other.
new data augmentation techniques to increase the number
of image-sentence pairs. Our implementation performs on
visual model, as follows:

Follow previous work, we adopted beam search to con-
sider the best k candidate sentences at time t to infer the
sentence at next time step. In our work, we ﬁx k = 1 in
all experiments although the average of 2 BLEU [28] points
better results can be achieved with k = 20 compare to k = 1
as reported in [39].

4. EXPERIMENTS

In this section, we design several groups of experiments to

accomplish following objectives:

• Qualitatively analyze and understand how bidirectional
multimodal LSTM learns to generate sentence condi-
tioned by visual context information over time.

• Measure the beneﬁts and performance of proposed bidi-
rectional model and its deeper variant models that we
increase their nonlinearity depth from diﬀerent ways.

• Compare our approach with state-of-the-art methods
in terms of sentence generation and image-sentence re-
trieval tasks on popular benchmark datasets.

4.1 Datasets

To validate the eﬀectiveness, generality and robustness of
our models, we conduct experiments on three benchmark
datasets: Flickr8K [31], Flickr30K [43] and MSCOCO [21].
Flickr8K. It consists of 8,000 images and each of them
has 5 sentence-level captions. We follow the standard dataset
divisions provided by authors, 6,000/1,000/1,000 images for
training/validation/testing respectively.

Flickr30K. An extension version of Flickr8K. It has 31,783
images and each of them has 5 captions. We follow the pub-
lic accessible1 dataset divisions by Karpathy et al. [11]. In
this dataset splits, 29,000/1,000/1,000 images are used for
training/validation/testing respectively.

MSCOCO. This is a recent released dataset that covers
82,783 images for training and 40,504 images for validation.
Each of images has 5 sentence annotations. Since there is
lack of standard splits, we also follow the splits provided by
[11]. Namely, 80,000 training images and
Karpathy et al.
5,000 images for both validation and testing.

4.2

Implementation Details

Visual feature. We use two visual models for encoding
image: Caﬀe [9] reference model which is pre-trained with
AlexNet [14] and 16-layer VggNet model [33]. We extract
features from last fully connected layer and feed to train
visual-language model with LSTM. Previous work [39, 23]
have demonstrated that with more powerful image models
such as GoogleNet [37] and VggNet [33] can achieve promis-
ing improvements. To make a fair comparison with recent
works, we select the widely used two models for experiments.
Textual feature. We ﬁrst represent each word w within
sentence as one-hot vector, w ∈ RK , K is vocabulary size
built on training sentences and diﬀerent for diﬀerent datasets.
By performing basic tokenization and removing the words
that occurs less than 5 times in the training set, we have
2028, 7400 and 8801 words for Flickr8K, Flickr30K and
MSCOCO dataset vocabularies respectively.

Our work uses the LSTM implementation of [4] on Caﬀe
framework. All of our experiments were conducted on Ubuntu

1http://cs.stanford.edu/people/karpathy/deepimagesent/

14.04, 16G RAM and single Titan X GPU with 12G mem-
ory. Our LSTMs use 1000 hidden units and weights ini-
tialized uniformly from [-0.08, 0.08]. The batch sizes are
150, 100, 100, 32 for Bi-LSTM, Bi-S-LSTM, Bi-F-LSTM
and Bi-LSTM (VGG) models respectively. Models were
trained with learning rate η = 0.01 (except η = 0.005 for
Bi-LSTM (VGG)), weight decay λ is 0.0005 and we used
momentum 0.9. Each model is trained for 18∼35 epochs
with early stopping. The code for this work can be found at
https:// github.com/ deepsemantic/ image captioning.

4.3 Evaluation Metrics

We evaluate our models on two tasks: caption generation
and image-sentence retrieval. In caption generation, we fol-
low previous work to use BLEU-N (N=1,2,3,4) scores [28]:

BN = min(1, e1− r

c ) · e

1
N

(cid:80)N

n=1 log pn

(16)

where r, c are the length of reference sentence and gener-
ated sentence, pn is the modiﬁed n-gram precisions. We
also report METETOR [18] and CIDEr [38] scores for fur-
ther comparison. In image-sentence retrieval (image query
sentence and vice versa), we adopt R@K (K=1,5,10) and
Med r as evaluation metrics. R@K is the recall rate R at
top K candidates and Med r is the median rank of the ﬁrst
retrieved ground-truth image and sentence. All mentioned
metric scores are computed by MSCOCO caption evalua-
tion server2, which is commonly used for image captioning
challenge3.

4.4 Visualization and Qualitative Analysis

The aim of this set experiment is to visualize the proper-
ties of proposed bidirectional LSTM model and explain how
it works in generating sentence word by word over time.

First, we examine the temporal evolution of internal gate
states and understand how bidirectional LSTM units retain
valuable context information and attenuate unimportant in-
formation. Figure 6 shows input and output data, the pat-
tern of three sigmoid gates (input, forget and output) as well
as cell states. We can clearly see that dynamic states are
periodically distilled to units from time step t = 0 to t = 11.
At t = 0, the input data are sigmoid modulated to input
gate i(t) where values lie within in [0,1]. At this step, the
values of forget gates f (t) of diﬀerent LSTM units are zeros.
Along with the increasing of time step, forget gate starts
to decide which unimportant information should be forgot-
ten, meanwhile, to retain those useful information. Then
the memory cell states c(t) and output gate o(t) gradually
absorb the valuable context information over time and make
a rich representation h(t) of the output data.

Next, we examine how visual and textual features are em-
bedded to common semantic space and used to predict word
over time. Figure 7 shows the evolution of hidden units at
diﬀerent layers. For T-LSTM layer, units are conditioned
by textual context from the past and future.
It performs
as the encoder of forward and backward sentences. At M-
LSTM layer, LSTM units are conditioned by both visual
and textual context. It learns the correlations between in-
put word sequence and visual information that encoded by
CNN. At given time step, by removing unimportant infor-
mation that make less contribution to correlate input word

2https://github.com/tylin/coco-caption
3http://mscoco.org/home/

(a) input

(b) input gate

(c) forget gate

(d) cell state

(e) output gate

(f) output

Figure 6: Visualization of LSTM cell. The horizontal axis corresponds to time steps. The vertical axis is cell index. Here we
visualize the gates and cell states of the ﬁrst 32 Bi-LSTM units of T-LSTM in forward direction over 11 time steps.

(a) T-LSTM (forward) units

(b) T-LSTM (backward) units

(c) M-LSTM (forward) units

(d) M-LSTM (backward) units

(e) probability (forward) units

(f) probability (backward) units

A man in a black jacket is walking down the street
2

7 3 2 23

76 8

36

38

41
(g) Generated words and corresponding word index in vocabulary

4 5

36

41

4

Street the on walking is suit a in man a
2

8 193 2 3 7

Figure 7: Pattern of the ﬁrst 96 hidden units chosen at each layer of Bi-LSTM in both forward and backward directions. The
vertical axis presents time steps. The horizontal axis corresponds to diﬀerent LSTM units. In this example, we visualize the
T-LSTM layer for text only, the M-LSTM layer for both text and image and Softmax layer for computing word probability
distribution. The model was trained on Flickr 30K dataset for generating sentence word by word at each time step. In (g),
we provide the predicted words at diﬀerent time steps and their corresponding index in vocabulary where we can also read
from (e) and (f) (the highlight point at each row). Word with highest probability is selected as the predicted word.

and visual context, the units tend to appear sparsity pattern
and learn more discriminative representations from inputs.
At higher layer, embedded multimodal representations are
used to compute the probability distribution of next predict
word with Softmax. It should be noted, for given image, the
number of words in generated sentence from forward and
backward direction can be diﬀerent.

Figure 8 presents some example images with generated
captions. From it we found some interesting patterns of bidi-
rectional captions: (1) Cover diﬀerent semantics, for ex-
ample, in (b) forward sentence captures “couch” and “table”
while backward one describes “chairs” and “table”. (2) De-
scribe static scenario and infer dynamics, in (a) and
(d), one caption describes the static scene, and the other one

presents the potential action or motion that possibly hap-
pen in the next time step. (3) Generate novel sentences,
from generated captions, we found that a signiﬁcant pro-
portion (88% by randomly select 1000 images on MSCOCO
validation set) of generated sentences are novel (not appear
in training set). But generated sentences are highly similar
to ground-truth captions, for example in (d), forward cap-
tion is similar to one of ground-truth captions (“A passenger
train that is pulling into a station”) and backward caption is
similar to ground-truth caption (“a train is in a tunnel by a
station”). It illustrates that our model has strong capability
in learning visual-language correlation and generating novel
sentences.

(a)

(b)

A woman in a tennis court
holding a tennis racket.
A woman getting ready to hit a
tennis ball.

A living room with a couch
and a table.
Two chairs and a table in a living
room.

(c)
A giraﬀe standing in a zoo en-
closure with a baby in the back-
ground.
A couple of giraﬀes are stand-
ing at a zoo.

(d)

A train is pulling into a train sta-
tion.
A train on the tracks at a
train station.

Figure 8: Examples of generated captions for given query image on MSCOCO validation set. Blue-colored captions are
generated in forward direction and red-colored captions are generated in backward direction. The ﬁnal caption is selected
according to equation (13) which selects the sentence with the higher probability. The ﬁnal captions are marked in bold.

Table 1: Performance comparison on BLEU-N(high score is good). The superscript “A” means the visual model is AlexNet
(or similar network), “V” is VggNet, “G” is GoogleNet, “-” indicates unknown value, “‡” means diﬀerent data splits4. The best
results are marked in bold and the second best results with underline. The superscripts are also applicable to Table 2.

Models
NIC[39]G,‡
LRCN[4]A,‡
DeepVS[11]V
m-RNN[23]A,‡
m-RNN[23]V,‡
Hard-Attention[42]V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

B-1
63
-
57.9
56.5
-
67
61.9
64.2
63.0
65.5

Flickr8K
B-3
27.2
-
24.5
25.6
-
31.4
29.7
29.2
29.2
32.0

B-2
41
-
38.3
38.6
-
45.7
43.3
44.3
43.7
46.8

B-4
-
-
16
17.0
-
21.3
20.0
18.6
19.1
21.5

B-1
66.3
58.8
57.3
54
60
66.9
58.9
59.5
58.6
62.1

Flickr30K
B-3
27.7
25.1
24.0
23
28
29.6
25.9
26.9
26.0
28.1

B-2
42.3
39.1
36.9
36
41
43.9
39.3
40.3
39.2
42.6

B-4
18.3
16.5
15.7
15
19
19.9
17.1
17.9
17.4
19.3

B-1
66.6
62.8
62.5
-
67
71.8
63.4
63.7
63.5
67.2

MSCOCO
B-3
B-2
32.9
46.1
30.4
44.2
32.1
45
-
-
35
49
35.7
50.4
30.6
44.7
31.8
45.7
30.7
44.8
35.2
49.2

B-4
24.6
-
23
-
25
25
20.6
21.9
20.6
24.4

4.5 Results on Caption Generation

Now, we compare with state-of-the-art methods. Table 1
presents the comparison results in terms of BLEU-N. Our
approach achieves very competitive performance on evalu-
ated datasets although with less powerful AlexNet visual
model. We can see that increase the depth of LSTM is ben-
eﬁcial on generation task. Deeper variant models mostly
obtain better performance compare to Bi-LSTM, but they
are inferior to latter one in B-3 and B-4 on Flickr8K. We
conjecture it should be the reason that Flick8K is a rela-
tively small dataset which suﬀers diﬃculty in training deep
models with limited data. One of interesting facts we found
is that by stacking multiple LSTM layers is generally supe-
rior to LSTM with fully connected transition layer although
Bi-S-LSTM needs more training time. By replacing AlexNet
with VggNet brings signiﬁcant improvements on all BLEU
evaluation metrics. We should be aware of that a recent
interesting work [42] achieves the best results by integrat-
ing attention mechanism [19, 42] on this task. Although
we believe incorporating such powerful mechanism into our
framework can make further improvements, note that our
current model Bi-LSTMV achieves the best or second best
results on most of metrics while the small gap in performance
between our model and Hard-AttentionV [42] is existed.

4On MSCOCO dataset, NIC uses 4K images for validation
and test. LRCN randomly selects 5K images from MSCOCO
validation set for validation and test. m-RNN uses 4K im-
ages for validation and 1K as test.

The further comparison on METEOR and CIDEr scores
is plotted in Figure 9. Without integrating object detection
and more powerful vision model, our model (Bi-LSTMA)
outperforms DeepVSV [11] in a certain margin. It achieves
19.4/49.6 on Flickr 8K (compare to 16.7/31.8 of DeepVSV )
and 16.2/28.2 on Flickr30K (15.3/24.7 of DeepVSV ). On
MSCOCO, our Bi-S-LSTMA obtains 20.8/66.6 for METEOR/CIDEr,
which exceeds 19.5/66.0 in DeepVSV .

(a) METEOR score

(b) CIDEr score

Figure 9: METEOR/CIDEr scores on diﬀerent datasets.

4.6 Results on Image-Sentence Retrieval

For retrieval evaluation, we focus on image to sentence
retrieval and vice versa. This is an instance of cross-modal
retrieval [6, 30, 41] which has been a hot research subject
in multimedia ﬁeld. Table 2 illustrates our results on diﬀer-
ent datasets. The performance of our models exceeds those
compared methods on most of metrics or matching exist-

Table 2: Comparison with state-of-the-art methods on R@K (high is good) and Med r (low is good). All scores are computed
by averaging the results of forward and backward results. “+O” means the approach with additional object detection.

Image to Sentence

Datasets

Flickr 8K

Flickr 30K

MSCOCO

Methods
DeViSE[7]
SDT-RNN[34]
DeFrag[10]+O
Kiros et al. [13]A
Kiros et al. [13]V
m-RNN[23]A
Mind’s Eye[2]V
DeepVS[11]+O,V
NIC[39]G
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeViSE[7]
SDT-RNN[34]
Kiros et al. [13]A
Kiros et al. [13]V
LRCN[4]A
NIC[39]G
m-RNN[23]A
Mind’s Eye[2]V
DeFrag [10]+O
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

R@1 R@5
16.5
4.8
18.0
4.5
32.9
12.6
36.2
13.5
40.9
18
37.2
14.5
42.5
17.3
40.6
16.5
-
20
44.7
21.3
43.7
19.6
44.0
19.9
58.2
29.3
18.1
4.5
29.8
9.6
39.2
14.8
50.7
23.0
34.9
14
-
17
40.2
18.4
45.7
18.5
40.2
16.4
48.2
22.2
41.2
18.7
43.0
21
44.4
20
53.1
28.1

16.5
10.8
13.4
11.2
16.6

39.2
28.1
33.1
30
39.4

R@10 Med r
27.3
28.6
44.0
45.7
55
48.5
57.4
54.2
60
56.5
55.7
56.0
69.6
29.2
41.1
50.9
62.9
47
56
50.9
58.1
54.7
61.4
52.6
54.1
55.2
64.2

28
32
14
13
8
11
7
7.6
6
6.5
7
7
3
26
16
10
5
11
7
10
7
8
4.8
8
7
7
4

52.0
38.9
44.7
41.2
52.4

9
18
13
16
9

R@1
5.9
6.1
9.7
10.4
12.5
11.5
15.4
11.8
19
15.1
14.5
14.9
19.7
6.7
8.9
11.8
16.8
-
17
12.6
16.6
10.3
15.2
14.0
15.1
15.1
19.6

10.7
7.8
9.4
8.3
11.6

Sentence to Image
R@5
20.1
18.5
29.6
31.0
37
31.0
40.6
32.1
-
37.8
36.4
37.4
47.0
21.9
29.8
34.0
42.0
-
-
31.2
42.5
31.4
37.7
34.0
35.3
35.8
43.8

R@10 Med r
29.6
29.0
42.5
43.7
51.5
42.4
50.1
44.7
64
50.1
48.3
49.8
60.6
32.7
41.1
46.3
56.5
-
57
41.5
58.9
44.5
50.5
44.0
46.0
46.8
55.8

29
29
15
14
10
15
8
12.4
5
9
10.5
10
5
25
16
13
8
-
8
16
8
13
9.2
14
12
12
7

29.6
22.4
26.5
24.9
30.9

42.2
32.8
37.7
35.1
43.4

14.0
24
19
22
13

ing results. In a few metrics, our model didn’t show better
result than Mind’s Eye [2] which combined image and text
features in ranking (it makes this task more like multimodal
retrieval) and NIC [39] which employed more powerful vision
model, large beam size and model ensemble. While adopt-
ing more powerful visual model VggNet results in signiﬁcant
improvements across all metrics, with less powerful AlexNet
model, our results are still competitive on some metrics, e.g.
R@1, R@5 on Flickr8K and Flickr30K. We also note that on
relatively small dataset Filckr8K, shallow model performs
slightly better than deeper ones on retrieval task, which in
contrast with the results on the other two datasets. As we
explained before, we think deeper LSTM architectures are
better suited for ranking task on large datasets which pro-
vides enough training data for more complicate model train-
ing, otherwise, overﬁtting occurs. By increasing data vari-
ations with our implemented data augmentation techniques
can alleviate it in a certain degree. But we foresee further
signiﬁcant improvement gains as training example grows, by
reducing reliance on augmentation with fresh data. Figure
10 presents some examples of retrieval experiments. For
each caption (image) query, sensible images and descriptive
captions are retrieved.
It shows our models captured the
visual-textual correlation for image and sentence ranking.

4.7 Discussion

Eﬃciency. In addition to showing superior performance,

Table 3: Time costs for testing 10 images on Flickr8K

Bi-LSTM Bi-S-LSTM Bi-F-LSTM

Generation
Retrieval

0.93s
5.62s

1.1s
7.46s

0.97s
5.69s

our models also possess high computational eﬃciency. Table
3 presents the computational costs of proposed models. We
randomly select 10 images from Flickr8K validation set, and
perform caption generation and image to sentence retrieval
test for 5 times respectively. The table shows the averaged
time costs across 5 test results. The time cost of network
initialization is excluded. The costs of caption generation
includes: computing image feature, sampling bidirectional
captions, computing the ﬁnal caption. The time costs for
retrieval considers: computing image-sentence pair scores
(totally 10 × 50 pairs), ranking sentences for each image
query. As can be seen from Table 1, 2 and 3, deep models
have only slightly higher time consumption but yield signiﬁ-
cant improvements and our proposed Bi-F-LSTM can strike
the balance between performance and eﬃciency.

Challenges in exact comparison. It is challenging to
make a direct, extract comparison with related methods due
to the diﬀerences in dataset division on MSCOCO. In prin-
ciple, testing on smaller validation set can lead to better
results, particularly in retrieval task. Since we strictly fol-
low dataset splits as in [11], we compare to it in most cases.
Another challenge is the visual model that utilized for en-

snowboarder
jumping

A man practices
boxing

Two guys one in
a red uniform and
one in a blue uni-
form playing soc-
cer

A soccer player
a player
tackles
from the
other
team

Two young men
tackle an opponent
scrim-
a
during
mage
football
game

Black dog jumping
out of the water
with a stick in his
mouth

A black dog jumps
in a body of water
with a stick in his
mouth

A black dog is
swimming through
water

for

A football player
preparing a foot-
a ﬁeld
ball
goal kick, while
his teammates can
coach watch him

A black dog swim-
ming in the water
with a tennis ball
in his mouth

Figure 10: Examples of image retrieval (top) and caption retrieval (bottom) with Bi-S-LSTM on Flickr30K validation set.
Queries are marked with red color and top-4 retrieved results are marked with green color.

coding image inputs. Diﬀerent models are employed in dif-
ferent works, to make a fair and comprehensive comparison,
we select commonly used AlexNet and VggNet in our work.

Y. Bengio. Learning phrase representations using rnn
encoder-decoder for statistical machine translation.
EMNLP, 2014.

5. CONCLUSIONS

We proposed a bidirectional LSTM model that generates
descriptive sentence for image by taking both history and
future context into account. We further designed deep bidi-
rectional LSTM architectures to embed image and sentence
at high semantic space for learning visual-language models.
We also qualitatively visualized internal states of proposed
model to understand how multimodal LSTM generates word
at consecutive time steps. The eﬀectiveness, generality and
robustness of proposed models were evaluated on numerous
datasets. Our models achieve highly completive or state-
of-the-art results on both generation and retrieval tasks.
Our future work will focus on exploring more sophisticated
language representation (e.g. word2vec) and incorporating
multitask learning and attention mechanism into our model.
We also plan to apply our model to other sequence learning
tasks such as text recognition and video captioning.

6. REFERENCES
[1] D. Bahdanau, K. Cho, and Y. Bengio. Neural machine
translation by jointly learning to align and translate.
ICLR, 2015.

[2] X. Chen and C. Lawrence Zitnick. Mind’s eye: A
recurrent visual representation for image caption
generation. In CVPR, pages 2422–2431, 2015.

[3] K. Cho, B. Van Merri¨enboer, C. Gulcehre,

D. Bahdanau, F. Bougares, H. Schwenk, and

[4] J. Donahue, L. A. Hendricks, S. Guadarrama,
M. Rohrbach, S. Venugopalan, K. Saenko, and
T. Darrell. Long-term recurrent convolutional
networks for visual recognition and description. In
CVPR, pages 2625–2634, 2015.

[5] H. Fang, S. Gupta, F. Iandola, R. Srivastava, L. Deng,
P. Doll´ar, J. Gao, X. He, M. Mitchell, and J. Platt.
From captions to visual concepts and back. In CVPR,
pages 1473–1482, 2015.

[6] F. Feng, X. Wang, and R. Li. Cross-modal retrieval

with correspondence autoencoder. In ACMMM, pages
7–16. ACM, 2014.

[7] A. Frome, G. Corrado, J. Shlens, S. Bengio, J. Dean,
and T. Mikolov. Devise: A deep visual-semantic
embedding model. In NIPS, pages 2121–2129, 2013.
[8] A. Graves, A. Mohamed, and G. E. Hinton. Speech
recognition with deep recurrent neural networks. In
ICASSP, pages 6645–6649. IEEE, 2013.

[9] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev,

J. Long, R. Girshick, S. Guadarrama, and T. Darrell.
Caﬀe: Convolutional architecture for fast feature
embedding. In ACMMM, pages 675–678. ACM, 2014.

[10] A. Karpathy, A. Joulin, and F-F. Li. Deep fragment

embeddings for bidirectional image sentence mapping.
In NIPS, pages 1889–1897, 2014.

[11] A. Karpathy and F-F. Li. Deep visual-semantic
alignments for generating image descriptions. In
CVPR, pages 3128–3137, 2015.

[12] R. Kiros, R. Salakhutdinov, and R. Zemel.

Multimodal neural language models. In ICML, pages
595–603, 2014.

[13] R. Kiros, R. Salakhutdinov, and R. Zemel. Unifying
visual-semantic embeddings with multimodal neural
language models. arXiv preprint arXiv:1411.2539,
2014.

[14] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet classiﬁcation with deep convolutional neural
networks. In NIPS, pages 1097–1105, 2012.

a method for automatic evaluation of machine
translation. In ACL, pages 311–318. ACL, 2002.
[29] R. Pascanu, C. Gulcehre, K. Cho, and Y. Bengio. How
to construct deep recurrent neural networks. arXiv
preprint arXiv:1312.6026, 2013.

[30] J. C. Pereira, E. Coviello, G. Doyle, N. Rasiwasia,
G. Lanckriet, R. Levy, and N. Vasconcelos. On the
role of correlation and abstraction in cross-modal
multimedia retrieval. IEEE Trans. on Pattern Analysis
and Machine Intelligence(PAMI), 36(3):521–535, 2014.

[15] G. Kulkarni, V. Premraj, V. Ordonez, S. Dhar, S. Li,

[31] C. Rashtchian, P. Young, M. Hodosh, and

Y. Choi, A. C. Berg, and T. Berg. Babytalk:
Understanding and generating simple image
descriptions. IEEE Trans. on Pattern Analysis and
Machine Intelligence(PAMI), 35(12):2891–2903, 2013.
[16] P. Kuznetsova, V. Ordonez, A. C. Berg, T. Berg, and
Y. Choi. Collective generation of natural image
descriptions. In ACL, volume 1, pages 359–368. ACL,
2012.

[17] P. Kuznetsova, V. Ordonez, T. Berg, and Y. Choi.
Treetalk: Composition and compression of trees for
image descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2(10):351–362,
2014.

[18] M. Lavie. Meteor universal: language speciﬁc

translation evaluation for any target language. ACL,
page 376, 2014.

[19] Y. LeCun, Y. Bengio, and G. E. Hinton. Deep
learning. Nature, 521(7553):436–444, 2015.
[20] S. Li, G. Kulkarni, T. L. Berg, A. C. Berg, and

Y. Choi. Composing simple image descriptions using
web-scale n-grams. In CoNLL, pages 220–228. ACL,
2011.

[21] T-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona,
D. Ramanan, P. Doll´ar, and C. Zitnick. Microsoft
coco: Common objects in context. In ECCV, pages
740–755. Springer, 2014.

[22] Xin Lu, Zhe Lin, Hailin Jin, Jianchao Yang, and

James Z Wang. Rapid: Rating pictorial aesthetics
using deep learning. In ACMMM, pages 457–466.
ACM, 2014.

[23] J. H. Mao, W. Xu, Y. Yang, J. Wang, Z. H. Huang,
and A. Yuille. Deep captioning with multimodal
recurrent neural networks (m-rnn). ICLR, 2015.
[24] T. Mikolov, M. Karaﬁ´at, L. Burget, J. Cernock`y, and
S. Khudanpur. Recurrent neural network based
language model. In INTERSPEECH, volume 2,
page 3, 2010.

[25] T. Mikolov, S. Kombrink, L. Burget, J. H. ˇCernock`y,
and S. Khudanpur. Extensions of recurrent neural
network language model. In ICASSP, pages
5528–5531. IEEE, 2011.

[26] M. Mitchell, X. Han, J. Dodge, A. Mensch, A. Goyal,
A. Berg, K. Yamaguchi, T. Berg, K. Stratos, and
H. Daum´e III. Midge: Generating image descriptions
from computer vision detections. In ACL, pages
747–756. ACL, 2012.

[27] J. Ngiam, A. Khosla, M. Kim, J. Nam, H. Lee, and

A. Ng. Multimodal deep learning. In ICML, pages
689–696, 2011.

J. Hockenmaier. Collecting image annotations using
amazon’s mechanical turk. In NAACL HLT
Workshop, pages 139–147. Association for
Computational Linguistics, 2010.

[32] K. Simonyan and A. Zisserman. Two-stream

convolutional networks for action recognition in
videos. In NIPS, pages 568–576, 2014.
[33] K. Simonyan and A. Zisserman. Very deep

convolutional networks for large-scale image
recognition. arXiv preprint arXiv:1409.1556, 2014.
[34] R. Socher, A. Karpathy, Q. V. Le, C. D. Manning,

and A. Y. Ng. Grounded compositional semantics for
ﬁnding and describing images with sentences. Trans.
of the Association for Computational
Linguistics(TACL), 2:207–218, 2014.

[35] N. Srivastava and R. Salakhutdinov. Multimodal

learning with deep boltzmann machines. In NIPS,
pages 2222–2230, 2012.

[36] I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to

sequence learning with neural networks. In NIPS,
pages 3104–3112, 2014.

[37] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed,
D. Anguelov, D. Erhan, V. Vanhoucke, and
A. Rabinovich. Going deeper with convolutions. In
CVPR, pages 1–9, 2015.

[38] R. Vedantam, Z. Lawrence, and D. Parikh. Cider:
Consensus-based image description evaluation. In
CVPR, pages 4566–4575, 2015.

[39] O. Vinyals, A. Toshev, S. Bengio, and D. Erhan. Show
and tell: A neural image caption generator. In CVPR,
pages 3156–3164, 2015.

[40] Zhangyang Wang, Jianchao Yang, Hailin Jin, Eli

Shechtman, Aseem Agarwala, Jonathan Brandt, and
Thomas S. Huang. Deepfont: Identify your font from
an image. In ACMMM, pages 451–459. ACM, 2015.

[41] X.Jiang, F. Wu, X. Li, Z. Zhao, W. Lu, S. Tang, and
Y. Zhuang. Deep compositional cross-modal learning
to rank via local-global alignment. In ACMMM, pages
69–78. ACM, 2015.

[42] K. Xu, J. Ba, R. Kiros, A. Courville,

R. Salakhutdinov, R. Zemel, and Y. Bengio. Show,
attend and tell: Neural image caption generation with
visual attention. ICML, 2015.

[43] P. Young, A. Lai, M. Hodosh, and J. Hockenmaier.
From image descriptions to visual denotations: New
similarity metrics for semantic inference over event
descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2:67–78, 2014.

[44] W. Zaremba and I. Sutskever. Learning to execute.

[28] K. Papineni, S. Roukos, T. Ward, and W. Zhu. Bleu:

arXiv preprint arXiv:1410.4615, 2014.

[45] M. D. Zeiler and R. Fergus. Visualizing and

understanding convolutional networks. In ECCV,
pages 818–833. Springer, 2014.

Image Captioning with Deep Bidirectional LSTMs

Cheng Wang, Haojin Yang, Christian Bartz, Christoph Meinel
Hasso Plattner Institute, University of Potsdam
Prof.-Dr.-Helmert-Str. 2-3, 14482 Potsdam, Germany
{cheng.wang, haojin.yang,christoph.meinel}@hpi.de
christian.bartz@student.hpi.uni-potsdam.de

6
1
0
2
 
l
u
J
 
0
2
 
 
]

V
C
.
s
c
[
 
 
3
v
0
9
7
0
0
.
4
0
6
1
:
v
i
X
r
a

ABSTRACT
This work presents an end-to-end trainable deep bidirec-
tional LSTM (Long-Short Term Memory) model for image
captioning. Our model builds on a deep convolutional neu-
ral network (CNN) and two separate LSTM networks.
It
is capable of learning long term visual-language interactions
by making use of history and future context information at
high level semantic space. Two novel deep bidirectional vari-
ant models, in which we increase the depth of nonlinearity
transition in diﬀerent way, are proposed to learn hierarchi-
cal visual-language embeddings. Data augmentation tech-
niques such as multi-crop, multi-scale and vertical mirror
are proposed to prevent overﬁtting in training deep models.
We visualize the evolution of bidirectional LSTM internal
states over time and qualitatively analyze how our models
“translate” image to sentence. Our proposed models are eval-
uated on caption generation and image-sentence retrieval
tasks with three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO datasets. We demonstrate that bidirectional
LSTM models achieve highly competitive performance to
the state-of-the-art results on caption generation even with-
out integrating additional mechanism (e.g. object detection,
attention model etc.) and signiﬁcantly outperform recent
methods on retrieval task.

CCS Concepts
•Computing methodologies → Natural language gen-
eration; Neural networks; Computer vision representa-
tions;

Keywords
deep learning, LSTM, image captioning, visual-language

1.

INTRODUCTION

Automatically describe an image using sentence-level cap-
tions has been receiving much attention recent years [11, 10,
13, 17, 16, 23, 34, 39]. It is a challenging task integrating

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
MM ’16, October 15-19, 2016, Amsterdam, Netherlands
c(cid:13) 2016 ACM. ISBN 978-1-4503-3603-1/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2964284.2964299

visual and language understanding. It requires not only the
recognition of visual objects in an image and the seman-
tic interactions between objects, but the ability to capture
visual-language interactions and learn how to “translate” the
visual understanding to sensible sentence descriptions. The
most important part of this visual-language modeling is to
capture the semantic correlations across image and sentence
by learning a multimodal joint model. While some previous
models [20, 15, 26, 17, 16] have been proposed to address
the problem of image captioning, they rely on either use sen-
tence templates, or treat it as retrieval task through ranking
the best matching sentence in database as caption. Those
approaches usually suﬀer diﬃculty in generating variable-
length and novel sentences. Recent work [11, 10, 13, 23,
34, 39] has indicated that embedding visual and language
to common semantic space with relatively shallow recurrent
neural network (RNN) can yield promising results.

In this work, we propose novel architectures to the prob-
lem of image captioning. Diﬀerent to previous models, we
learn a visual-language space where sentence embeddings
are encoded using bidirectional Long-Short Term Memory
(Bi-LSTM) and visual embeddings are encoded with CNN.
Bi-LSTM is able to summarize long range visual-language
interactions from forward and backward directions. Inspired
by the architectural depth of human brain, we also explore
the deep bidirectional LSTM architectures to learn higher
level visual-language embeddings. All proposed models can
be trained in end-to-end by optimizing a joint loss.

Why bidirectional LSTMs? In unidirectional sentence gen-
eration, one general way of predicting next word wt with
visual context I and history textual context w1:t−1 is max-
imize log P (wt|I, w1:t−1). While unidirectional model in-
cludes past context, it is still limited to retain future context
wt+1:T that can be used for reasoning previous word wt by
maximizing log P (wt|I, wt+1:T ). Bidirectional model tries
to overcome the shortcomings that each unidirectional (for-
ward and backward direction) model suﬀers on its own and
exploits the past and future dependence to give a prediction.
As shown in Figure 1, two example images with bidirection-
ally generated sentences intuitively support our assumption
that bidirectional captions are complementary, combining
them can generate more sensible captions.

Why deeper LSTMs? The recent success of deep CNN
in image classiﬁcation and object detection [14, 33] demon-
strates that deep, hierarchical models can be more eﬃcient
at learning representation than shallower ones. This mo-
tivated our work to explore deeper LSTM architectures in
the context of learning bidirectional visual-language embed-

in bridging the “semantic gap” of multimodal data. Image
captioning falls into this general category of learning multi-
modal representations.

Recently, several approaches have been proposed for im-
age captioning. We can roughly classify those methods into
three categories. The ﬁrst category is template based ap-
proaches that generate caption templates based on detect-
ing objects and discovering attributes within image. For
example, the work [20] was proposed to parse a whole sen-
tence into several phrases, and learn the relationships be-
tween phrases and objects within an image. In [15], condi-
tional random ﬁeld (CRF) was used to correspond objects,
attributes and prepositions of image content and predict the
best label. Other similar methods were presented in [26, 17,
16]. These methods are typically hard-designed and rely on
ﬁxed template, which mostly lead to poor performance in
generating variable-length sentences. The second category
is retrieval based approach, this sort of methods treat image
captioning as retrieval task. By leveraging distance met-
ric to retrieve similar captioned images, then modify and
combine retrieved captions to generate caption [17]. But
these approaches generally need additional procedures such
as modiﬁcation and generalization process to ﬁt image query.
Inspired by the success use of CNN [14, 45] and Recurrent
Neural Network [24, 25, 1]. The third category is emerged as
neural network based methods [39, 42, 13, 10, 11]. Our work
also belongs to this category. Among those work, Kiro et
al.[12] can been as pioneer work to use neural network for im-
age captioning with multimodal neural language model. In
their follow up work [13], Kiro et al. introduced an encoder-
decoder pipeline where sentence was encoded by LSTM and
decoded with structure-content neural language model (SC-
NLM). Socher et al.[34] presented a DT-RNN (Dependency
Tree-Recursive Neural Network) to embed sentence into a
vector space in order to retrieve images. Later on, Mao et
al.[23] proposed m-RNN which replaces feed-forward neu-
ral language model in [13]. Similar architectures were intro-
duced in NIC [39] and LRCN [4], both approaches use LSTM
to learn text context. But NIC only feed visual information
at ﬁrst time step while Mao et al.[23] and LRCN [4]’s model
consider image context at each time step. Another group
of neural network based approaches has been introduced in
[10, 11] where image captions generated by integrating ob-
ject detection with R-CNN (region-CNN) and inferring the
alignment between image regions and descriptions.

Most recently, Fang et al.[5] used multi-instance learning
and traditional maximum-entropy language model for de-
scription generation. Chen et al.[2] proposed to learn visual
representation with RNN for generating image caption. In
[42], Xu et al.
introduced attention mechanism of human
visual system into encoder-decoder framework. It is shown
that attention model can visualize what the model “see” and
yields signiﬁcant improvements on image caption genera-
tion. Unlike those models, our deep LSTM model directly
assumes the mapping relationship between visual-language
is antisymmetric and dynamically learns long term bidirec-
tional and hierarchical visual-language interactions. This is
proved to be very eﬀective in generation and retrieval tasks
as we demonstrate in Sec.4.5 and Sec.4.6.

3. MODEL

In this section, we describe our multimodal bidirectional
LSTM model (Bi-LSTM for short) and explore its deeper

Figure 1: Illustration of generated captions. Two example
images from Flickr8K dataset and their best matching cap-
tions that generated in forward order (blue) and backward
order (red). Bidirectional models capture diﬀerent levels
of visual-language interactions (more evidence see Sec.4.4).
The ﬁnal caption is the sentence with higher probabilities
In both examples, backward
(histogram under sentence).
caption is selected as ﬁnal caption for corresponding image.

dings. As claimed in [29], if we consider LSTM as a compo-
sition of multiple hidden layers that unfolded in time, LSTM
is already deep network. But this is the way of increasing
“horizontal depth” in which network weights W are reused at
each time step and limited to learn more representative fea-
tures as increasing the “vertical depth” of network. To design
deep LSTM, one straightforward way is to stack multiple
LSTM layers as hidden to hidden transition. Alternatively,
instead of stacking multiple LSTM layers, we propose to add
multilayer perception (MLP) as intermediate transition be-
tween LSTM layers. This can not only increase LSTM net-
work depth, but can also prevent the parameter size from
growing dramatically.

The core contributions of this work are threefold:

• We propose an end-to-end trainable multimodal bidi-
rectional LSTM (see Sec.3.2) and its deeper variant
models (see Sec.3.3) that embed image and sentence
into a high level semantic space by exploiting both
long term history and future context.

• We visualize the evolution of hidden states of bidirec-
tional LSTM units to qualitatively analyze and under-
stand how to generate sentence that conditioned by
visual context information over time (see Sec.4.4).

• We demonstrate the eﬀectiveness of proposed mod-
els on three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO. Our experimental results show that
bidirectional LSTM models achieve highly competitive
performance to the state-of-the-art on caption genera-
tion (see Sec.4.5) and perform signiﬁcantly better than
recent methods on retrieval task (see Sec.4.6).

2. RELATED WORK

Multimodal representation learning [27, 35] has signiﬁ-
cant value in multimedia understanding and retrieval. The
shared concept across modalities plays an important role

Figure 2: Long Short Term Memory (LSTM) cell. It is con-
sist of an input gate i, a forget gate f , a memory cell c and
an output gate o. The input gate decides let incoming sig-
nal go through to memory cell or block it. The output gate
can allow new output or prevent it. The forget gate decides
to remember or forget cell’s previous state. Updating cell
states is performed by feeding previous cell output to itself
by recurrent connections in two consecutive time steps.

variants. We ﬁrst brieﬂy introduce LSTM which is at the
center of model. The LSTM we used is described in [44].

3.1 Long Short Term Memory

Our model builds on LSTM cell, which is a particular
form of traditional recurrent neural network (RNN). It has
been successfully applied to machine translation [3], speech
recognition [8] and sequence learning [36]. As shown in Fig-
ure 2, the reading and writing memory cell c is controlled
by a group of sigmoid gates. At given time step t, LSTM
receives inputs from diﬀerent sources: current input xt, the
previous hidden state of all LSTM units ht−1 as well as pre-
vious memory cell state ct−1. The updating of those gates
at time step t for given inputs xt, ht−1 and ct−1 as follows.

it = σ(Wxixt + Whiht−1 + bi)
ft = σ(Wxf xt + Whf ht−1 + bf )
ot = σ(Wxoxt + Whoht−1 + bo)
gt = φ(Wxcxt + Whcht−1 + bc)
ct = ft (cid:12) ct−1 + it (cid:12) gt
ht = ot (cid:12) φ(ct)

(1)

(2)
(3)

(4)
(5)

(6)

where W are the weight matrices learned from the network
and b are bias vectors. σ is the sigmoid activation function
σ(x) = 1/(1 + exp(−x)) and φ presents hyperbolic tangent
φ(x) = (exp(x) − exp(−x))/(exp(x) + exp(−x)). (cid:12) denotes
the products with a gate value. The LSTM hidden output
ht={htk}K
k=0, ht ∈ RK will be used to predict the next word
by Softmax function with parameters Ws and bs:

F(pti; Ws, bs) =

exp(Wshti + bs)
j=1 exp(Wshtj + bs)

(cid:80)K

(7)

where pti is the probability distribution for predicted word.
Our key motivation of chosen LSTM is that it can learn
long-term temporal activities and avoid quick exploding and
vanishing problems that traditional RNN suﬀers from during
back propagation optimization.

3.2 Bidirectional LSTM

In order to make use of both the past and future context
information of a sentence in predicting word, we propose a

Figure 3: Multimodal Bidirectional LSTM. L1: sentence
embedding layer. L2: T-LSTM layer. L3: M-LSTM layer.
L4: Softmax layer. We feed sentence in both forward (blue
arrows) and backward (red arrows) order which allows our
model summarizes context information from both left and
right side for generating sentence word by word over time.
Our model is end-to-end trainable by minimize a joint loss.

bidirectional model by feeding sentence to LSTM from for-
ward and backward order. Figure 3 presents the overview of
our model, it is comprised of three modules: a CNN for en-
coding image inputs, a Text-LSTM (T-LSTM) for encoding
sentence inputs, a Multimodal LSTM (M-LSTM) for em-
bedding visual and textual vectors to a common semantic
space and decoding to sentence. The bidirectional LSTM is
implemented with two separate LSTM layers for computing
−→
h and backward hidden sequences
forward hidden sequences
←−
h . The forward LSTM starts at time t = 1 and the back-
ward LSTM starts at time t = T . Formally, our model works
−→
as follows, for raw image input (cid:101)I, forward order sentence
S
←−
S , the encoding performs as
and backward order sentence
−→
−→
Θl)
E

←−
Θl) (8)

It = C((cid:101)I; Θv)

t = T (

t = T (

−→
h 1

←−
h 1

−→
S ;

←−
S ;

←−
E

where C, T represent CNN, T-LSTM respectively and Θv,
←−
Θl are their corresponding weights.
E are bidi-
rectional embedding matrices learned from network. En-
coded visual and textual representations are then embedded
to multimodal LSTM by:
−→
Θm)

−→
E and

←−
Θm)

←−
h 2

−→
h 1

←−
h 1

−→
h 2

t = M(

t = M(

t , It;

t , It;

(9)

where M presents M-LSTM and its weight Θm. M aims
to capture the correlation of visual context and words at
diﬀerent time steps. We feed visual vector I to model at
each time step for capturing strong visual-word correlation.
On the top of M-LSTM are Softmax layers which compute
the probability distribution of next predicted word by
t ; Ws, bs) ←−p t+1 = F(

−→p t+1 = F(

t ; Ws, bs)

−→
h 2

←−
h 2

(10)

where p ∈ RK and K is the vocabulary size.

3.3 Deeper LSTM architecture

To design deeper LSTM architectures, in addition to di-
rectly stack multiple LSTMs on each other that we named
as Bi-S-LSTM (Figure 4(c)), we propose to use a fully con-
nected layer as intermediate transition layer. Our motiva-
tion comes from the ﬁnding of [29], in which DT(S)-RNN
(deep transition RNN with shortcut) is designed by adding
hidden to hidden multilayer perception (MLP) transition. It

Figure 4: Illustrations of proposed deep architectures for image captioning. The network in (a) is commonly used in previous
work, e.g. [4, 23]. (b) Our proposed Bidirectional LSTM (Bi-LSTM). (c) Our proposed Bidirectional Stacked LSTM (Bi-S-
LSTM). (d) Our proposed Bidirectional LSTM with fully connected (FC) transition layer (Bi-F-LSTM).

• Multi-Corp: Instead of randomly cropping on input
image, we crop at the four corners and center region.
Because we found random cropping is more tend to se-
lect center region and cause overﬁtting easily. By crop-
ping four corners and center, the variations of network
input can be increased to alleviate overﬁtting.

• Multi-Scale: To further increase the number of image-
sentence pairs, we rescale input image to multiple scales.
For each input image (cid:101)I with size H ×W , it is resized to
256 × 256, then we randomly select a region with size
of s ∗ H × s ∗ W , where s ∈ [1, 0.925, 0.875, 0.85] is scale
ratio. s = 1 means we do not multi-scale operation on
given image. Finally we resize it to AlexNet input size
227 ×227 or VggNet input size 224 × 224.

• Vertical Mirror: Motivated by the eﬀectiveness of
widely used horizontal mirror, it is natural to also con-
sider the vertical mirror of image for same purpose.

Those augmentation techniques are implemented in real-
time fashion. Each input image is randomly transformed
using one of augmentations to network input for training.
In principle, our data augmentation can increase image-
sentence training pairs by roughly 40 times (5×4×2).

3.5 Training and Inference

−→
L +

Our model is end-to-end trainable by using Stochastic
←−
Gradient Descent (SGD). The joint loss function L =
L
is computed by accumulating the Softmax losses of forward
and backward directions. Our objective is to minimize L,
which is equivalent to maximize the probabilities of cor-
rectly generated sentences. We compute the gradient (cid:79)L
with Back-Propagation Through Time (BPTT) algorithm.
The trained model is used to predict a word wt with
given image context I and previous word context w1:t−1 by
P (wt|w1:t−1, I) in forward order, or by P (wt|wt+1:T , I) in
backward order. We set w1=wT =0 at start point respec-
tively for forward and backward directions. Ultimately, with
generated sentences from two directions, we decide the ﬁnal
sentence for given image p(w1:T |I) according to the summa-
tion of word probability within sentence

p(w1:T |I) = max(

(cid:88)T

(−→p (wt|I)),

(cid:88)T

(←−p (wt|I))) (13)

t=1

t=1

−→p (wt|I) =

(cid:89)T

←−p (wt|I) =

(cid:89)T

t=1

t=1

p(wt|w1, w2, ..., wt−1, I)

p(wt|wt+1, wt+2, ..., wT , I)

(14)

(15)

Figure 5: Transition for Bi-S-LSTM(L) and Bi-F-LSTM(R)

is arguably easier to train such network. Inspired by this, we
extend Bi-LSTM (Figure 4(b)) with a fully connected layer
that we called Bi-F-LSTM (Figure 4(d)), shortcut connec-
tion between input and hidden states is introduced to make
it easier to train model. The aim of extension models is to
learn an extra hidden transition function Fh. In Bi-S-LSTM

t = Fh(hl−1
hl+1

t

, hl

t−1) = Uhl−1

t + Vhl

t−1

(11)

where hl
t presents the hidden states of l-th layer at time
t, U and V are matrices connect to transition layer (also
see Figure 5(L)). For readability, we consider one direction
training and suppress bias terms. Similarly, in Bi-F-LSTM,
to learn a hidden transition function Fh by

t = Fh(hl−1
hl+1

t

) = φr(Whl−1

t ⊕ (V(Uhl−1

t

))

(12)

where ⊕ is the operator that concatenates hl−1
and its ab-
stractions to a long hidden states (also see Figure 5(R)). φr
presents rectiﬁed linear unit (Relu) activation function for
transition layer, which performs φr(x) = max(0, x).

t

3.4 Data Augmentation

One of the most challenging aspects of training deep bidi-
rectional LSTM models is preventing overﬁtting. Since our
largest dataset has only 80K images [21] which might cause
overﬁtting easily, we adopted several techniques such as ﬁne-
tuning on pre-trained visual model, weight decay, dropout
and early stopping that commonly used in the literature.
Additionally, it has been proved that data augmentation
such as randomly cropping and horizontal mirror [32, 22],
adding noise, blur and rotation [40] can eﬀectively allevi-
Inspired by this, we designed
ate over-ﬁtting and other.
new data augmentation techniques to increase the number
of image-sentence pairs. Our implementation performs on
visual model, as follows:

Follow previous work, we adopted beam search to con-
sider the best k candidate sentences at time t to infer the
sentence at next time step. In our work, we ﬁx k = 1 in
all experiments although the average of 2 BLEU [28] points
better results can be achieved with k = 20 compare to k = 1
as reported in [39].

4. EXPERIMENTS

In this section, we design several groups of experiments to

accomplish following objectives:

• Qualitatively analyze and understand how bidirectional
multimodal LSTM learns to generate sentence condi-
tioned by visual context information over time.

• Measure the beneﬁts and performance of proposed bidi-
rectional model and its deeper variant models that we
increase their nonlinearity depth from diﬀerent ways.

• Compare our approach with state-of-the-art methods
in terms of sentence generation and image-sentence re-
trieval tasks on popular benchmark datasets.

4.1 Datasets

To validate the eﬀectiveness, generality and robustness of
our models, we conduct experiments on three benchmark
datasets: Flickr8K [31], Flickr30K [43] and MSCOCO [21].
Flickr8K. It consists of 8,000 images and each of them
has 5 sentence-level captions. We follow the standard dataset
divisions provided by authors, 6,000/1,000/1,000 images for
training/validation/testing respectively.

Flickr30K. An extension version of Flickr8K. It has 31,783
images and each of them has 5 captions. We follow the pub-
lic accessible1 dataset divisions by Karpathy et al. [11]. In
this dataset splits, 29,000/1,000/1,000 images are used for
training/validation/testing respectively.

MSCOCO. This is a recent released dataset that covers
82,783 images for training and 40,504 images for validation.
Each of images has 5 sentence annotations. Since there is
lack of standard splits, we also follow the splits provided by
[11]. Namely, 80,000 training images and
Karpathy et al.
5,000 images for both validation and testing.

4.2

Implementation Details

Visual feature. We use two visual models for encoding
image: Caﬀe [9] reference model which is pre-trained with
AlexNet [14] and 16-layer VggNet model [33]. We extract
features from last fully connected layer and feed to train
visual-language model with LSTM. Previous work [39, 23]
have demonstrated that with more powerful image models
such as GoogleNet [37] and VggNet [33] can achieve promis-
ing improvements. To make a fair comparison with recent
works, we select the widely used two models for experiments.
Textual feature. We ﬁrst represent each word w within
sentence as one-hot vector, w ∈ RK , K is vocabulary size
built on training sentences and diﬀerent for diﬀerent datasets.
By performing basic tokenization and removing the words
that occurs less than 5 times in the training set, we have
2028, 7400 and 8801 words for Flickr8K, Flickr30K and
MSCOCO dataset vocabularies respectively.

Our work uses the LSTM implementation of [4] on Caﬀe
framework. All of our experiments were conducted on Ubuntu

1http://cs.stanford.edu/people/karpathy/deepimagesent/

14.04, 16G RAM and single Titan X GPU with 12G mem-
ory. Our LSTMs use 1000 hidden units and weights ini-
tialized uniformly from [-0.08, 0.08]. The batch sizes are
150, 100, 100, 32 for Bi-LSTM, Bi-S-LSTM, Bi-F-LSTM
and Bi-LSTM (VGG) models respectively. Models were
trained with learning rate η = 0.01 (except η = 0.005 for
Bi-LSTM (VGG)), weight decay λ is 0.0005 and we used
momentum 0.9. Each model is trained for 18∼35 epochs
with early stopping. The code for this work can be found at
https:// github.com/ deepsemantic/ image captioning.

4.3 Evaluation Metrics

We evaluate our models on two tasks: caption generation
and image-sentence retrieval. In caption generation, we fol-
low previous work to use BLEU-N (N=1,2,3,4) scores [28]:

BN = min(1, e1− r

c ) · e

1
N

(cid:80)N

n=1 log pn

(16)

where r, c are the length of reference sentence and gener-
ated sentence, pn is the modiﬁed n-gram precisions. We
also report METETOR [18] and CIDEr [38] scores for fur-
ther comparison. In image-sentence retrieval (image query
sentence and vice versa), we adopt R@K (K=1,5,10) and
Med r as evaluation metrics. R@K is the recall rate R at
top K candidates and Med r is the median rank of the ﬁrst
retrieved ground-truth image and sentence. All mentioned
metric scores are computed by MSCOCO caption evalua-
tion server2, which is commonly used for image captioning
challenge3.

4.4 Visualization and Qualitative Analysis

The aim of this set experiment is to visualize the proper-
ties of proposed bidirectional LSTM model and explain how
it works in generating sentence word by word over time.

First, we examine the temporal evolution of internal gate
states and understand how bidirectional LSTM units retain
valuable context information and attenuate unimportant in-
formation. Figure 6 shows input and output data, the pat-
tern of three sigmoid gates (input, forget and output) as well
as cell states. We can clearly see that dynamic states are
periodically distilled to units from time step t = 0 to t = 11.
At t = 0, the input data are sigmoid modulated to input
gate i(t) where values lie within in [0,1]. At this step, the
values of forget gates f (t) of diﬀerent LSTM units are zeros.
Along with the increasing of time step, forget gate starts
to decide which unimportant information should be forgot-
ten, meanwhile, to retain those useful information. Then
the memory cell states c(t) and output gate o(t) gradually
absorb the valuable context information over time and make
a rich representation h(t) of the output data.

Next, we examine how visual and textual features are em-
bedded to common semantic space and used to predict word
over time. Figure 7 shows the evolution of hidden units at
diﬀerent layers. For T-LSTM layer, units are conditioned
by textual context from the past and future.
It performs
as the encoder of forward and backward sentences. At M-
LSTM layer, LSTM units are conditioned by both visual
and textual context. It learns the correlations between in-
put word sequence and visual information that encoded by
CNN. At given time step, by removing unimportant infor-
mation that make less contribution to correlate input word

2https://github.com/tylin/coco-caption
3http://mscoco.org/home/

(a) input

(b) input gate

(c) forget gate

(d) cell state

(e) output gate

(f) output

Figure 6: Visualization of LSTM cell. The horizontal axis corresponds to time steps. The vertical axis is cell index. Here we
visualize the gates and cell states of the ﬁrst 32 Bi-LSTM units of T-LSTM in forward direction over 11 time steps.

(a) T-LSTM (forward) units

(b) T-LSTM (backward) units

(c) M-LSTM (forward) units

(d) M-LSTM (backward) units

(e) probability (forward) units

(f) probability (backward) units

A man in a black jacket is walking down the street
2

7 3 2 23

76 8

36

4

38

41
(g) Generated words and corresponding word index in vocabulary

4 5

Street the on walking is suit a in man a
2

8 193 2 3 7

41

36

Figure 7: Pattern of the ﬁrst 96 hidden units chosen at each layer of Bi-LSTM in both forward and backward directions. The
vertical axis presents time steps. The horizontal axis corresponds to diﬀerent LSTM units. In this example, we visualize the
T-LSTM layer for text only, the M-LSTM layer for both text and image and Softmax layer for computing word probability
distribution. The model was trained on Flickr 30K dataset for generating sentence word by word at each time step. In (g),
we provide the predicted words at diﬀerent time steps and their corresponding index in vocabulary where we can also read
from (e) and (f) (the highlight point at each row). Word with highest probability is selected as the predicted word.

and visual context, the units tend to appear sparsity pattern
and learn more discriminative representations from inputs.
At higher layer, embedded multimodal representations are
used to compute the probability distribution of next predict
word with Softmax. It should be noted, for given image, the
number of words in generated sentence from forward and
backward direction can be diﬀerent.

Figure 8 presents some example images with generated
captions. From it we found some interesting patterns of bidi-
rectional captions: (1) Cover diﬀerent semantics, for ex-
ample, in (b) forward sentence captures “couch” and “table”
while backward one describes “chairs” and “table”. (2) De-
scribe static scenario and infer dynamics, in (a) and
(d), one caption describes the static scene, and the other one

presents the potential action or motion that possibly hap-
pen in the next time step. (3) Generate novel sentences,
from generated captions, we found that a signiﬁcant pro-
portion (88% by randomly select 1000 images on MSCOCO
validation set) of generated sentences are novel (not appear
in training set). But generated sentences are highly similar
to ground-truth captions, for example in (d), forward cap-
tion is similar to one of ground-truth captions (“A passenger
train that is pulling into a station”) and backward caption is
similar to ground-truth caption (“a train is in a tunnel by a
station”). It illustrates that our model has strong capability
in learning visual-language correlation and generating novel
sentences.

(a)

(b)

A woman in a tennis court
holding a tennis racket.
A woman getting ready to hit a
tennis ball.

A living room with a couch
and a table.
Two chairs and a table in a living
room.

(c)
A giraﬀe standing in a zoo en-
closure with a baby in the back-
ground.
A couple of giraﬀes are stand-
ing at a zoo.

(d)

A train is pulling into a train sta-
tion.
A train on the tracks at a
train station.

Figure 8: Examples of generated captions for given query image on MSCOCO validation set. Blue-colored captions are
generated in forward direction and red-colored captions are generated in backward direction. The ﬁnal caption is selected
according to equation (13) which selects the sentence with the higher probability. The ﬁnal captions are marked in bold.

Table 1: Performance comparison on BLEU-N(high score is good). The superscript “A” means the visual model is AlexNet
(or similar network), “V” is VggNet, “G” is GoogleNet, “-” indicates unknown value, “‡” means diﬀerent data splits4. The best
results are marked in bold and the second best results with underline. The superscripts are also applicable to Table 2.

Models
NIC[39]G,‡
LRCN[4]A,‡
DeepVS[11]V
m-RNN[23]A,‡
m-RNN[23]V,‡
Hard-Attention[42]V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

B-1
63
-
57.9
56.5
-
67
61.9
64.2
63.0
65.5

Flickr8K
B-3
27.2
-
24.5
25.6
-
31.4
29.7
29.2
29.2
32.0

B-2
41
-
38.3
38.6
-
45.7
43.3
44.3
43.7
46.8

B-4
-
-
16
17.0
-
21.3
20.0
18.6
19.1
21.5

B-1
66.3
58.8
57.3
54
60
66.9
58.9
59.5
58.6
62.1

Flickr30K
B-3
27.7
25.1
24.0
23
28
29.6
25.9
26.9
26.0
28.1

B-2
42.3
39.1
36.9
36
41
43.9
39.3
40.3
39.2
42.6

B-4
18.3
16.5
15.7
15
19
19.9
17.1
17.9
17.4
19.3

B-1
66.6
62.8
62.5
-
67
71.8
63.4
63.7
63.5
67.2

MSCOCO
B-3
B-2
32.9
46.1
30.4
44.2
32.1
45
-
-
35
49
35.7
50.4
30.6
44.7
31.8
45.7
30.7
44.8
35.2
49.2

B-4
24.6
-
23
-
25
25
20.6
21.9
20.6
24.4

4.5 Results on Caption Generation

Now, we compare with state-of-the-art methods. Table 1
presents the comparison results in terms of BLEU-N. Our
approach achieves very competitive performance on evalu-
ated datasets although with less powerful AlexNet visual
model. We can see that increase the depth of LSTM is ben-
eﬁcial on generation task. Deeper variant models mostly
obtain better performance compare to Bi-LSTM, but they
are inferior to latter one in B-3 and B-4 on Flickr8K. We
conjecture it should be the reason that Flick8K is a rela-
tively small dataset which suﬀers diﬃculty in training deep
models with limited data. One of interesting facts we found
is that by stacking multiple LSTM layers is generally supe-
rior to LSTM with fully connected transition layer although
Bi-S-LSTM needs more training time. By replacing AlexNet
with VggNet brings signiﬁcant improvements on all BLEU
evaluation metrics. We should be aware of that a recent
interesting work [42] achieves the best results by integrat-
ing attention mechanism [19, 42] on this task. Although
we believe incorporating such powerful mechanism into our
framework can make further improvements, note that our
current model Bi-LSTMV achieves the best or second best
results on most of metrics while the small gap in performance
between our model and Hard-AttentionV [42] is existed.

4On MSCOCO dataset, NIC uses 4K images for validation
and test. LRCN randomly selects 5K images from MSCOCO
validation set for validation and test. m-RNN uses 4K im-
ages for validation and 1K as test.

The further comparison on METEOR and CIDEr scores
is plotted in Figure 9. Without integrating object detection
and more powerful vision model, our model (Bi-LSTMA)
outperforms DeepVSV [11] in a certain margin. It achieves
19.4/49.6 on Flickr 8K (compare to 16.7/31.8 of DeepVSV )
and 16.2/28.2 on Flickr30K (15.3/24.7 of DeepVSV ). On
MSCOCO, our Bi-S-LSTMA obtains 20.8/66.6 for METEOR/CIDEr,
which exceeds 19.5/66.0 in DeepVSV .

(a) METEOR score

(b) CIDEr score

Figure 9: METEOR/CIDEr scores on diﬀerent datasets.

4.6 Results on Image-Sentence Retrieval

For retrieval evaluation, we focus on image to sentence
retrieval and vice versa. This is an instance of cross-modal
retrieval [6, 30, 41] which has been a hot research subject
in multimedia ﬁeld. Table 2 illustrates our results on diﬀer-
ent datasets. The performance of our models exceeds those
compared methods on most of metrics or matching exist-

Table 2: Comparison with state-of-the-art methods on R@K (high is good) and Med r (low is good). All scores are computed
by averaging the results of forward and backward results. “+O” means the approach with additional object detection.

Image to Sentence

Datasets

Flickr 8K

Flickr 30K

MSCOCO

Methods
DeViSE[7]
SDT-RNN[34]
DeFrag[10]+O
Kiros et al. [13]A
Kiros et al. [13]V
m-RNN[23]A
Mind’s Eye[2]V
DeepVS[11]+O,V
NIC[39]G
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeViSE[7]
SDT-RNN[34]
Kiros et al. [13]A
Kiros et al. [13]V
LRCN[4]A
NIC[39]G
m-RNN[23]A
Mind’s Eye[2]V
DeFrag [10]+O
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

R@1 R@5
16.5
4.8
18.0
4.5
32.9
12.6
36.2
13.5
40.9
18
37.2
14.5
42.5
17.3
40.6
16.5
-
20
44.7
21.3
43.7
19.6
44.0
19.9
58.2
29.3
18.1
4.5
29.8
9.6
39.2
14.8
50.7
23.0
34.9
14
-
17
40.2
18.4
45.7
18.5
40.2
16.4
48.2
22.2
41.2
18.7
43.0
21
44.4
20
53.1
28.1

16.5
10.8
13.4
11.2
16.6

39.2
28.1
33.1
30
39.4

R@10 Med r
27.3
28.6
44.0
45.7
55
48.5
57.4
54.2
60
56.5
55.7
56.0
69.6
29.2
41.1
50.9
62.9
47
56
50.9
58.1
54.7
61.4
52.6
54.1
55.2
64.2

28
32
14
13
8
11
7
7.6
6
6.5
7
7
3
26
16
10
5
11
7
10
7
8
4.8
8
7
7
4

52.0
38.9
44.7
41.2
52.4

9
18
13
16
9

R@1
5.9
6.1
9.7
10.4
12.5
11.5
15.4
11.8
19
15.1
14.5
14.9
19.7
6.7
8.9
11.8
16.8
-
17
12.6
16.6
10.3
15.2
14.0
15.1
15.1
19.6

10.7
7.8
9.4
8.3
11.6

Sentence to Image
R@5
20.1
18.5
29.6
31.0
37
31.0
40.6
32.1
-
37.8
36.4
37.4
47.0
21.9
29.8
34.0
42.0
-
-
31.2
42.5
31.4
37.7
34.0
35.3
35.8
43.8

R@10 Med r
29.6
29.0
42.5
43.7
51.5
42.4
50.1
44.7
64
50.1
48.3
49.8
60.6
32.7
41.1
46.3
56.5
-
57
41.5
58.9
44.5
50.5
44.0
46.0
46.8
55.8

29
29
15
14
10
15
8
12.4
5
9
10.5
10
5
25
16
13
8
-
8
16
8
13
9.2
14
12
12
7

29.6
22.4
26.5
24.9
30.9

42.2
32.8
37.7
35.1
43.4

14.0
24
19
22
13

ing results. In a few metrics, our model didn’t show better
result than Mind’s Eye [2] which combined image and text
features in ranking (it makes this task more like multimodal
retrieval) and NIC [39] which employed more powerful vision
model, large beam size and model ensemble. While adopt-
ing more powerful visual model VggNet results in signiﬁcant
improvements across all metrics, with less powerful AlexNet
model, our results are still competitive on some metrics, e.g.
R@1, R@5 on Flickr8K and Flickr30K. We also note that on
relatively small dataset Filckr8K, shallow model performs
slightly better than deeper ones on retrieval task, which in
contrast with the results on the other two datasets. As we
explained before, we think deeper LSTM architectures are
better suited for ranking task on large datasets which pro-
vides enough training data for more complicate model train-
ing, otherwise, overﬁtting occurs. By increasing data vari-
ations with our implemented data augmentation techniques
can alleviate it in a certain degree. But we foresee further
signiﬁcant improvement gains as training example grows, by
reducing reliance on augmentation with fresh data. Figure
10 presents some examples of retrieval experiments. For
each caption (image) query, sensible images and descriptive
captions are retrieved.
It shows our models captured the
visual-textual correlation for image and sentence ranking.

4.7 Discussion

Eﬃciency. In addition to showing superior performance,

Table 3: Time costs for testing 10 images on Flickr8K

Bi-LSTM Bi-S-LSTM Bi-F-LSTM

Generation
Retrieval

0.93s
5.62s

1.1s
7.46s

0.97s
5.69s

our models also possess high computational eﬃciency. Table
3 presents the computational costs of proposed models. We
randomly select 10 images from Flickr8K validation set, and
perform caption generation and image to sentence retrieval
test for 5 times respectively. The table shows the averaged
time costs across 5 test results. The time cost of network
initialization is excluded. The costs of caption generation
includes: computing image feature, sampling bidirectional
captions, computing the ﬁnal caption. The time costs for
retrieval considers: computing image-sentence pair scores
(totally 10 × 50 pairs), ranking sentences for each image
query. As can be seen from Table 1, 2 and 3, deep models
have only slightly higher time consumption but yield signiﬁ-
cant improvements and our proposed Bi-F-LSTM can strike
the balance between performance and eﬃciency.

Challenges in exact comparison. It is challenging to
make a direct, extract comparison with related methods due
to the diﬀerences in dataset division on MSCOCO. In prin-
ciple, testing on smaller validation set can lead to better
results, particularly in retrieval task. Since we strictly fol-
low dataset splits as in [11], we compare to it in most cases.
Another challenge is the visual model that utilized for en-

snowboarder
jumping

A man practices
boxing

Two guys one in
a red uniform and
one in a blue uni-
form playing soc-
cer

A soccer player
a player
tackles
from the
other
team

Two young men
tackle an opponent
scrim-
a
during
mage
football
game

Black dog jumping
out of the water
with a stick in his
mouth

A black dog jumps
in a body of water
with a stick in his
mouth

A black dog is
swimming through
water

for

A football player
preparing a foot-
a ﬁeld
ball
goal kick, while
his teammates can
coach watch him

A black dog swim-
ming in the water
with a tennis ball
in his mouth

Figure 10: Examples of image retrieval (top) and caption retrieval (bottom) with Bi-S-LSTM on Flickr30K validation set.
Queries are marked with red color and top-4 retrieved results are marked with green color.

coding image inputs. Diﬀerent models are employed in dif-
ferent works, to make a fair and comprehensive comparison,
we select commonly used AlexNet and VggNet in our work.

Y. Bengio. Learning phrase representations using rnn
encoder-decoder for statistical machine translation.
EMNLP, 2014.

5. CONCLUSIONS

We proposed a bidirectional LSTM model that generates
descriptive sentence for image by taking both history and
future context into account. We further designed deep bidi-
rectional LSTM architectures to embed image and sentence
at high semantic space for learning visual-language models.
We also qualitatively visualized internal states of proposed
model to understand how multimodal LSTM generates word
at consecutive time steps. The eﬀectiveness, generality and
robustness of proposed models were evaluated on numerous
datasets. Our models achieve highly completive or state-
of-the-art results on both generation and retrieval tasks.
Our future work will focus on exploring more sophisticated
language representation (e.g. word2vec) and incorporating
multitask learning and attention mechanism into our model.
We also plan to apply our model to other sequence learning
tasks such as text recognition and video captioning.

6. REFERENCES
[1] D. Bahdanau, K. Cho, and Y. Bengio. Neural machine
translation by jointly learning to align and translate.
ICLR, 2015.

[2] X. Chen and C. Lawrence Zitnick. Mind’s eye: A
recurrent visual representation for image caption
generation. In CVPR, pages 2422–2431, 2015.

[3] K. Cho, B. Van Merri¨enboer, C. Gulcehre,

D. Bahdanau, F. Bougares, H. Schwenk, and

[4] J. Donahue, L. A. Hendricks, S. Guadarrama,
M. Rohrbach, S. Venugopalan, K. Saenko, and
T. Darrell. Long-term recurrent convolutional
networks for visual recognition and description. In
CVPR, pages 2625–2634, 2015.

[5] H. Fang, S. Gupta, F. Iandola, R. Srivastava, L. Deng,
P. Doll´ar, J. Gao, X. He, M. Mitchell, and J. Platt.
From captions to visual concepts and back. In CVPR,
pages 1473–1482, 2015.

[6] F. Feng, X. Wang, and R. Li. Cross-modal retrieval

with correspondence autoencoder. In ACMMM, pages
7–16. ACM, 2014.

[7] A. Frome, G. Corrado, J. Shlens, S. Bengio, J. Dean,
and T. Mikolov. Devise: A deep visual-semantic
embedding model. In NIPS, pages 2121–2129, 2013.
[8] A. Graves, A. Mohamed, and G. E. Hinton. Speech
recognition with deep recurrent neural networks. In
ICASSP, pages 6645–6649. IEEE, 2013.

[9] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev,

J. Long, R. Girshick, S. Guadarrama, and T. Darrell.
Caﬀe: Convolutional architecture for fast feature
embedding. In ACMMM, pages 675–678. ACM, 2014.

[10] A. Karpathy, A. Joulin, and F-F. Li. Deep fragment

embeddings for bidirectional image sentence mapping.
In NIPS, pages 1889–1897, 2014.

[11] A. Karpathy and F-F. Li. Deep visual-semantic
alignments for generating image descriptions. In
CVPR, pages 3128–3137, 2015.

[12] R. Kiros, R. Salakhutdinov, and R. Zemel.

Multimodal neural language models. In ICML, pages
595–603, 2014.

[13] R. Kiros, R. Salakhutdinov, and R. Zemel. Unifying
visual-semantic embeddings with multimodal neural
language models. arXiv preprint arXiv:1411.2539,
2014.

[14] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet classiﬁcation with deep convolutional neural
networks. In NIPS, pages 1097–1105, 2012.

a method for automatic evaluation of machine
translation. In ACL, pages 311–318. ACL, 2002.
[29] R. Pascanu, C. Gulcehre, K. Cho, and Y. Bengio. How
to construct deep recurrent neural networks. arXiv
preprint arXiv:1312.6026, 2013.

[30] J. C. Pereira, E. Coviello, G. Doyle, N. Rasiwasia,
G. Lanckriet, R. Levy, and N. Vasconcelos. On the
role of correlation and abstraction in cross-modal
multimedia retrieval. IEEE Trans. on Pattern Analysis
and Machine Intelligence(PAMI), 36(3):521–535, 2014.

[15] G. Kulkarni, V. Premraj, V. Ordonez, S. Dhar, S. Li,

[31] C. Rashtchian, P. Young, M. Hodosh, and

Y. Choi, A. C. Berg, and T. Berg. Babytalk:
Understanding and generating simple image
descriptions. IEEE Trans. on Pattern Analysis and
Machine Intelligence(PAMI), 35(12):2891–2903, 2013.
[16] P. Kuznetsova, V. Ordonez, A. C. Berg, T. Berg, and
Y. Choi. Collective generation of natural image
descriptions. In ACL, volume 1, pages 359–368. ACL,
2012.

[17] P. Kuznetsova, V. Ordonez, T. Berg, and Y. Choi.
Treetalk: Composition and compression of trees for
image descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2(10):351–362,
2014.

[18] M. Lavie. Meteor universal: language speciﬁc

translation evaluation for any target language. ACL,
page 376, 2014.

[19] Y. LeCun, Y. Bengio, and G. E. Hinton. Deep
learning. Nature, 521(7553):436–444, 2015.
[20] S. Li, G. Kulkarni, T. L. Berg, A. C. Berg, and

Y. Choi. Composing simple image descriptions using
web-scale n-grams. In CoNLL, pages 220–228. ACL,
2011.

[21] T-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona,
D. Ramanan, P. Doll´ar, and C. Zitnick. Microsoft
coco: Common objects in context. In ECCV, pages
740–755. Springer, 2014.

[22] Xin Lu, Zhe Lin, Hailin Jin, Jianchao Yang, and

James Z Wang. Rapid: Rating pictorial aesthetics
using deep learning. In ACMMM, pages 457–466.
ACM, 2014.

[23] J. H. Mao, W. Xu, Y. Yang, J. Wang, Z. H. Huang,
and A. Yuille. Deep captioning with multimodal
recurrent neural networks (m-rnn). ICLR, 2015.
[24] T. Mikolov, M. Karaﬁ´at, L. Burget, J. Cernock`y, and
S. Khudanpur. Recurrent neural network based
language model. In INTERSPEECH, volume 2,
page 3, 2010.

[25] T. Mikolov, S. Kombrink, L. Burget, J. H. ˇCernock`y,
and S. Khudanpur. Extensions of recurrent neural
network language model. In ICASSP, pages
5528–5531. IEEE, 2011.

[26] M. Mitchell, X. Han, J. Dodge, A. Mensch, A. Goyal,
A. Berg, K. Yamaguchi, T. Berg, K. Stratos, and
H. Daum´e III. Midge: Generating image descriptions
from computer vision detections. In ACL, pages
747–756. ACL, 2012.

[27] J. Ngiam, A. Khosla, M. Kim, J. Nam, H. Lee, and

A. Ng. Multimodal deep learning. In ICML, pages
689–696, 2011.

J. Hockenmaier. Collecting image annotations using
amazon’s mechanical turk. In NAACL HLT
Workshop, pages 139–147. Association for
Computational Linguistics, 2010.

[32] K. Simonyan and A. Zisserman. Two-stream

convolutional networks for action recognition in
videos. In NIPS, pages 568–576, 2014.
[33] K. Simonyan and A. Zisserman. Very deep

convolutional networks for large-scale image
recognition. arXiv preprint arXiv:1409.1556, 2014.
[34] R. Socher, A. Karpathy, Q. V. Le, C. D. Manning,

and A. Y. Ng. Grounded compositional semantics for
ﬁnding and describing images with sentences. Trans.
of the Association for Computational
Linguistics(TACL), 2:207–218, 2014.

[35] N. Srivastava and R. Salakhutdinov. Multimodal

learning with deep boltzmann machines. In NIPS,
pages 2222–2230, 2012.

[36] I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to

sequence learning with neural networks. In NIPS,
pages 3104–3112, 2014.

[37] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed,
D. Anguelov, D. Erhan, V. Vanhoucke, and
A. Rabinovich. Going deeper with convolutions. In
CVPR, pages 1–9, 2015.

[38] R. Vedantam, Z. Lawrence, and D. Parikh. Cider:
Consensus-based image description evaluation. In
CVPR, pages 4566–4575, 2015.

[39] O. Vinyals, A. Toshev, S. Bengio, and D. Erhan. Show
and tell: A neural image caption generator. In CVPR,
pages 3156–3164, 2015.

[40] Zhangyang Wang, Jianchao Yang, Hailin Jin, Eli

Shechtman, Aseem Agarwala, Jonathan Brandt, and
Thomas S. Huang. Deepfont: Identify your font from
an image. In ACMMM, pages 451–459. ACM, 2015.

[41] X.Jiang, F. Wu, X. Li, Z. Zhao, W. Lu, S. Tang, and
Y. Zhuang. Deep compositional cross-modal learning
to rank via local-global alignment. In ACMMM, pages
69–78. ACM, 2015.

[42] K. Xu, J. Ba, R. Kiros, A. Courville,

R. Salakhutdinov, R. Zemel, and Y. Bengio. Show,
attend and tell: Neural image caption generation with
visual attention. ICML, 2015.

[43] P. Young, A. Lai, M. Hodosh, and J. Hockenmaier.
From image descriptions to visual denotations: New
similarity metrics for semantic inference over event
descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2:67–78, 2014.

[44] W. Zaremba and I. Sutskever. Learning to execute.

[28] K. Papineni, S. Roukos, T. Ward, and W. Zhu. Bleu:

arXiv preprint arXiv:1410.4615, 2014.

[45] M. D. Zeiler and R. Fergus. Visualizing and

understanding convolutional networks. In ECCV,
pages 818–833. Springer, 2014.

Image Captioning with Deep Bidirectional LSTMs

Cheng Wang, Haojin Yang, Christian Bartz, Christoph Meinel
Hasso Plattner Institute, University of Potsdam
Prof.-Dr.-Helmert-Str. 2-3, 14482 Potsdam, Germany
{cheng.wang, haojin.yang,christoph.meinel}@hpi.de
christian.bartz@student.hpi.uni-potsdam.de

6
1
0
2
 
l
u
J
 
0
2
 
 
]

V
C
.
s
c
[
 
 
3
v
0
9
7
0
0
.
4
0
6
1
:
v
i
X
r
a

ABSTRACT
This work presents an end-to-end trainable deep bidirec-
tional LSTM (Long-Short Term Memory) model for image
captioning. Our model builds on a deep convolutional neu-
ral network (CNN) and two separate LSTM networks.
It
is capable of learning long term visual-language interactions
by making use of history and future context information at
high level semantic space. Two novel deep bidirectional vari-
ant models, in which we increase the depth of nonlinearity
transition in diﬀerent way, are proposed to learn hierarchi-
cal visual-language embeddings. Data augmentation tech-
niques such as multi-crop, multi-scale and vertical mirror
are proposed to prevent overﬁtting in training deep models.
We visualize the evolution of bidirectional LSTM internal
states over time and qualitatively analyze how our models
“translate” image to sentence. Our proposed models are eval-
uated on caption generation and image-sentence retrieval
tasks with three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO datasets. We demonstrate that bidirectional
LSTM models achieve highly competitive performance to
the state-of-the-art results on caption generation even with-
out integrating additional mechanism (e.g. object detection,
attention model etc.) and signiﬁcantly outperform recent
methods on retrieval task.

CCS Concepts
•Computing methodologies → Natural language gen-
eration; Neural networks; Computer vision representa-
tions;

Keywords
deep learning, LSTM, image captioning, visual-language

1.

INTRODUCTION

Automatically describe an image using sentence-level cap-
tions has been receiving much attention recent years [11, 10,
13, 17, 16, 23, 34, 39]. It is a challenging task integrating

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
MM ’16, October 15-19, 2016, Amsterdam, Netherlands
c(cid:13) 2016 ACM. ISBN 978-1-4503-3603-1/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2964284.2964299

visual and language understanding. It requires not only the
recognition of visual objects in an image and the seman-
tic interactions between objects, but the ability to capture
visual-language interactions and learn how to “translate” the
visual understanding to sensible sentence descriptions. The
most important part of this visual-language modeling is to
capture the semantic correlations across image and sentence
by learning a multimodal joint model. While some previous
models [20, 15, 26, 17, 16] have been proposed to address
the problem of image captioning, they rely on either use sen-
tence templates, or treat it as retrieval task through ranking
the best matching sentence in database as caption. Those
approaches usually suﬀer diﬃculty in generating variable-
length and novel sentences. Recent work [11, 10, 13, 23,
34, 39] has indicated that embedding visual and language
to common semantic space with relatively shallow recurrent
neural network (RNN) can yield promising results.

In this work, we propose novel architectures to the prob-
lem of image captioning. Diﬀerent to previous models, we
learn a visual-language space where sentence embeddings
are encoded using bidirectional Long-Short Term Memory
(Bi-LSTM) and visual embeddings are encoded with CNN.
Bi-LSTM is able to summarize long range visual-language
interactions from forward and backward directions. Inspired
by the architectural depth of human brain, we also explore
the deep bidirectional LSTM architectures to learn higher
level visual-language embeddings. All proposed models can
be trained in end-to-end by optimizing a joint loss.

Why bidirectional LSTMs? In unidirectional sentence gen-
eration, one general way of predicting next word wt with
visual context I and history textual context w1:t−1 is max-
imize log P (wt|I, w1:t−1). While unidirectional model in-
cludes past context, it is still limited to retain future context
wt+1:T that can be used for reasoning previous word wt by
maximizing log P (wt|I, wt+1:T ). Bidirectional model tries
to overcome the shortcomings that each unidirectional (for-
ward and backward direction) model suﬀers on its own and
exploits the past and future dependence to give a prediction.
As shown in Figure 1, two example images with bidirection-
ally generated sentences intuitively support our assumption
that bidirectional captions are complementary, combining
them can generate more sensible captions.

Why deeper LSTMs? The recent success of deep CNN
in image classiﬁcation and object detection [14, 33] demon-
strates that deep, hierarchical models can be more eﬃcient
at learning representation than shallower ones. This mo-
tivated our work to explore deeper LSTM architectures in
the context of learning bidirectional visual-language embed-

in bridging the “semantic gap” of multimodal data. Image
captioning falls into this general category of learning multi-
modal representations.

Recently, several approaches have been proposed for im-
age captioning. We can roughly classify those methods into
three categories. The ﬁrst category is template based ap-
proaches that generate caption templates based on detect-
ing objects and discovering attributes within image. For
example, the work [20] was proposed to parse a whole sen-
tence into several phrases, and learn the relationships be-
tween phrases and objects within an image. In [15], condi-
tional random ﬁeld (CRF) was used to correspond objects,
attributes and prepositions of image content and predict the
best label. Other similar methods were presented in [26, 17,
16]. These methods are typically hard-designed and rely on
ﬁxed template, which mostly lead to poor performance in
generating variable-length sentences. The second category
is retrieval based approach, this sort of methods treat image
captioning as retrieval task. By leveraging distance met-
ric to retrieve similar captioned images, then modify and
combine retrieved captions to generate caption [17]. But
these approaches generally need additional procedures such
as modiﬁcation and generalization process to ﬁt image query.
Inspired by the success use of CNN [14, 45] and Recurrent
Neural Network [24, 25, 1]. The third category is emerged as
neural network based methods [39, 42, 13, 10, 11]. Our work
also belongs to this category. Among those work, Kiro et
al.[12] can been as pioneer work to use neural network for im-
age captioning with multimodal neural language model. In
their follow up work [13], Kiro et al. introduced an encoder-
decoder pipeline where sentence was encoded by LSTM and
decoded with structure-content neural language model (SC-
NLM). Socher et al.[34] presented a DT-RNN (Dependency
Tree-Recursive Neural Network) to embed sentence into a
vector space in order to retrieve images. Later on, Mao et
al.[23] proposed m-RNN which replaces feed-forward neu-
ral language model in [13]. Similar architectures were intro-
duced in NIC [39] and LRCN [4], both approaches use LSTM
to learn text context. But NIC only feed visual information
at ﬁrst time step while Mao et al.[23] and LRCN [4]’s model
consider image context at each time step. Another group
of neural network based approaches has been introduced in
[10, 11] where image captions generated by integrating ob-
ject detection with R-CNN (region-CNN) and inferring the
alignment between image regions and descriptions.

Most recently, Fang et al.[5] used multi-instance learning
and traditional maximum-entropy language model for de-
scription generation. Chen et al.[2] proposed to learn visual
representation with RNN for generating image caption. In
[42], Xu et al.
introduced attention mechanism of human
visual system into encoder-decoder framework. It is shown
that attention model can visualize what the model “see” and
yields signiﬁcant improvements on image caption genera-
tion. Unlike those models, our deep LSTM model directly
assumes the mapping relationship between visual-language
is antisymmetric and dynamically learns long term bidirec-
tional and hierarchical visual-language interactions. This is
proved to be very eﬀective in generation and retrieval tasks
as we demonstrate in Sec.4.5 and Sec.4.6.

3. MODEL

In this section, we describe our multimodal bidirectional
LSTM model (Bi-LSTM for short) and explore its deeper

Figure 1: Illustration of generated captions. Two example
images from Flickr8K dataset and their best matching cap-
tions that generated in forward order (blue) and backward
order (red). Bidirectional models capture diﬀerent levels
of visual-language interactions (more evidence see Sec.4.4).
The ﬁnal caption is the sentence with higher probabilities
In both examples, backward
(histogram under sentence).
caption is selected as ﬁnal caption for corresponding image.

dings. As claimed in [29], if we consider LSTM as a compo-
sition of multiple hidden layers that unfolded in time, LSTM
is already deep network. But this is the way of increasing
“horizontal depth” in which network weights W are reused at
each time step and limited to learn more representative fea-
tures as increasing the “vertical depth” of network. To design
deep LSTM, one straightforward way is to stack multiple
LSTM layers as hidden to hidden transition. Alternatively,
instead of stacking multiple LSTM layers, we propose to add
multilayer perception (MLP) as intermediate transition be-
tween LSTM layers. This can not only increase LSTM net-
work depth, but can also prevent the parameter size from
growing dramatically.

The core contributions of this work are threefold:

• We propose an end-to-end trainable multimodal bidi-
rectional LSTM (see Sec.3.2) and its deeper variant
models (see Sec.3.3) that embed image and sentence
into a high level semantic space by exploiting both
long term history and future context.

• We visualize the evolution of hidden states of bidirec-
tional LSTM units to qualitatively analyze and under-
stand how to generate sentence that conditioned by
visual context information over time (see Sec.4.4).

• We demonstrate the eﬀectiveness of proposed mod-
els on three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO. Our experimental results show that
bidirectional LSTM models achieve highly competitive
performance to the state-of-the-art on caption genera-
tion (see Sec.4.5) and perform signiﬁcantly better than
recent methods on retrieval task (see Sec.4.6).

2. RELATED WORK

Multimodal representation learning [27, 35] has signiﬁ-
cant value in multimedia understanding and retrieval. The
shared concept across modalities plays an important role

Figure 2: Long Short Term Memory (LSTM) cell. It is con-
sist of an input gate i, a forget gate f , a memory cell c and
an output gate o. The input gate decides let incoming sig-
nal go through to memory cell or block it. The output gate
can allow new output or prevent it. The forget gate decides
to remember or forget cell’s previous state. Updating cell
states is performed by feeding previous cell output to itself
by recurrent connections in two consecutive time steps.

variants. We ﬁrst brieﬂy introduce LSTM which is at the
center of model. The LSTM we used is described in [44].

3.1 Long Short Term Memory

Our model builds on LSTM cell, which is a particular
form of traditional recurrent neural network (RNN). It has
been successfully applied to machine translation [3], speech
recognition [8] and sequence learning [36]. As shown in Fig-
ure 2, the reading and writing memory cell c is controlled
by a group of sigmoid gates. At given time step t, LSTM
receives inputs from diﬀerent sources: current input xt, the
previous hidden state of all LSTM units ht−1 as well as pre-
vious memory cell state ct−1. The updating of those gates
at time step t for given inputs xt, ht−1 and ct−1 as follows.

it = σ(Wxixt + Whiht−1 + bi)
ft = σ(Wxf xt + Whf ht−1 + bf )
ot = σ(Wxoxt + Whoht−1 + bo)
gt = φ(Wxcxt + Whcht−1 + bc)
ct = ft (cid:12) ct−1 + it (cid:12) gt
ht = ot (cid:12) φ(ct)

(1)

(2)
(3)

(4)
(5)

(6)

where W are the weight matrices learned from the network
and b are bias vectors. σ is the sigmoid activation function
σ(x) = 1/(1 + exp(−x)) and φ presents hyperbolic tangent
φ(x) = (exp(x) − exp(−x))/(exp(x) + exp(−x)). (cid:12) denotes
the products with a gate value. The LSTM hidden output
ht={htk}K
k=0, ht ∈ RK will be used to predict the next word
by Softmax function with parameters Ws and bs:

F(pti; Ws, bs) =

exp(Wshti + bs)
j=1 exp(Wshtj + bs)

(cid:80)K

(7)

where pti is the probability distribution for predicted word.
Our key motivation of chosen LSTM is that it can learn
long-term temporal activities and avoid quick exploding and
vanishing problems that traditional RNN suﬀers from during
back propagation optimization.

3.2 Bidirectional LSTM

In order to make use of both the past and future context
information of a sentence in predicting word, we propose a

Figure 3: Multimodal Bidirectional LSTM. L1: sentence
embedding layer. L2: T-LSTM layer. L3: M-LSTM layer.
L4: Softmax layer. We feed sentence in both forward (blue
arrows) and backward (red arrows) order which allows our
model summarizes context information from both left and
right side for generating sentence word by word over time.
Our model is end-to-end trainable by minimize a joint loss.

bidirectional model by feeding sentence to LSTM from for-
ward and backward order. Figure 3 presents the overview of
our model, it is comprised of three modules: a CNN for en-
coding image inputs, a Text-LSTM (T-LSTM) for encoding
sentence inputs, a Multimodal LSTM (M-LSTM) for em-
bedding visual and textual vectors to a common semantic
space and decoding to sentence. The bidirectional LSTM is
implemented with two separate LSTM layers for computing
−→
h and backward hidden sequences
forward hidden sequences
←−
h . The forward LSTM starts at time t = 1 and the back-
ward LSTM starts at time t = T . Formally, our model works
−→
as follows, for raw image input (cid:101)I, forward order sentence
S
←−
S , the encoding performs as
and backward order sentence
−→
−→
Θl)
E

←−
Θl) (8)

It = C((cid:101)I; Θv)

t = T (

t = T (

−→
h 1

←−
h 1

−→
S ;

←−
S ;

←−
E

where C, T represent CNN, T-LSTM respectively and Θv,
←−
Θl are their corresponding weights.
E are bidi-
rectional embedding matrices learned from network. En-
coded visual and textual representations are then embedded
to multimodal LSTM by:
−→
Θm)

−→
E and

←−
Θm)

←−
h 2

−→
h 1

←−
h 1

−→
h 2

t = M(

t = M(

t , It;

t , It;

(9)

where M presents M-LSTM and its weight Θm. M aims
to capture the correlation of visual context and words at
diﬀerent time steps. We feed visual vector I to model at
each time step for capturing strong visual-word correlation.
On the top of M-LSTM are Softmax layers which compute
the probability distribution of next predicted word by
t ; Ws, bs) ←−p t+1 = F(

−→p t+1 = F(

t ; Ws, bs)

−→
h 2

←−
h 2

(10)

where p ∈ RK and K is the vocabulary size.

3.3 Deeper LSTM architecture

To design deeper LSTM architectures, in addition to di-
rectly stack multiple LSTMs on each other that we named
as Bi-S-LSTM (Figure 4(c)), we propose to use a fully con-
nected layer as intermediate transition layer. Our motiva-
tion comes from the ﬁnding of [29], in which DT(S)-RNN
(deep transition RNN with shortcut) is designed by adding
hidden to hidden multilayer perception (MLP) transition. It

Figure 4: Illustrations of proposed deep architectures for image captioning. The network in (a) is commonly used in previous
work, e.g. [4, 23]. (b) Our proposed Bidirectional LSTM (Bi-LSTM). (c) Our proposed Bidirectional Stacked LSTM (Bi-S-
LSTM). (d) Our proposed Bidirectional LSTM with fully connected (FC) transition layer (Bi-F-LSTM).

• Multi-Corp: Instead of randomly cropping on input
image, we crop at the four corners and center region.
Because we found random cropping is more tend to se-
lect center region and cause overﬁtting easily. By crop-
ping four corners and center, the variations of network
input can be increased to alleviate overﬁtting.

• Multi-Scale: To further increase the number of image-
sentence pairs, we rescale input image to multiple scales.
For each input image (cid:101)I with size H ×W , it is resized to
256 × 256, then we randomly select a region with size
of s ∗ H × s ∗ W , where s ∈ [1, 0.925, 0.875, 0.85] is scale
ratio. s = 1 means we do not multi-scale operation on
given image. Finally we resize it to AlexNet input size
227 ×227 or VggNet input size 224 × 224.

• Vertical Mirror: Motivated by the eﬀectiveness of
widely used horizontal mirror, it is natural to also con-
sider the vertical mirror of image for same purpose.

Those augmentation techniques are implemented in real-
time fashion. Each input image is randomly transformed
using one of augmentations to network input for training.
In principle, our data augmentation can increase image-
sentence training pairs by roughly 40 times (5×4×2).

3.5 Training and Inference

−→
L +

Our model is end-to-end trainable by using Stochastic
←−
Gradient Descent (SGD). The joint loss function L =
L
is computed by accumulating the Softmax losses of forward
and backward directions. Our objective is to minimize L,
which is equivalent to maximize the probabilities of cor-
rectly generated sentences. We compute the gradient (cid:79)L
with Back-Propagation Through Time (BPTT) algorithm.
The trained model is used to predict a word wt with
given image context I and previous word context w1:t−1 by
P (wt|w1:t−1, I) in forward order, or by P (wt|wt+1:T , I) in
backward order. We set w1=wT =0 at start point respec-
tively for forward and backward directions. Ultimately, with
generated sentences from two directions, we decide the ﬁnal
sentence for given image p(w1:T |I) according to the summa-
tion of word probability within sentence

p(w1:T |I) = max(

(cid:88)T

(−→p (wt|I)),

(cid:88)T

(←−p (wt|I))) (13)

t=1

t=1

−→p (wt|I) =

(cid:89)T

←−p (wt|I) =

(cid:89)T

t=1

t=1

p(wt|w1, w2, ..., wt−1, I)

p(wt|wt+1, wt+2, ..., wT , I)

(14)

(15)

Figure 5: Transition for Bi-S-LSTM(L) and Bi-F-LSTM(R)

is arguably easier to train such network. Inspired by this, we
extend Bi-LSTM (Figure 4(b)) with a fully connected layer
that we called Bi-F-LSTM (Figure 4(d)), shortcut connec-
tion between input and hidden states is introduced to make
it easier to train model. The aim of extension models is to
learn an extra hidden transition function Fh. In Bi-S-LSTM

t = Fh(hl−1
hl+1

t

, hl

t−1) = Uhl−1

t + Vhl

t−1

(11)

where hl
t presents the hidden states of l-th layer at time
t, U and V are matrices connect to transition layer (also
see Figure 5(L)). For readability, we consider one direction
training and suppress bias terms. Similarly, in Bi-F-LSTM,
to learn a hidden transition function Fh by

t = Fh(hl−1
hl+1

t

) = φr(Whl−1

t ⊕ (V(Uhl−1

t

))

(12)

where ⊕ is the operator that concatenates hl−1
and its ab-
stractions to a long hidden states (also see Figure 5(R)). φr
presents rectiﬁed linear unit (Relu) activation function for
transition layer, which performs φr(x) = max(0, x).

t

3.4 Data Augmentation

One of the most challenging aspects of training deep bidi-
rectional LSTM models is preventing overﬁtting. Since our
largest dataset has only 80K images [21] which might cause
overﬁtting easily, we adopted several techniques such as ﬁne-
tuning on pre-trained visual model, weight decay, dropout
and early stopping that commonly used in the literature.
Additionally, it has been proved that data augmentation
such as randomly cropping and horizontal mirror [32, 22],
adding noise, blur and rotation [40] can eﬀectively allevi-
Inspired by this, we designed
ate over-ﬁtting and other.
new data augmentation techniques to increase the number
of image-sentence pairs. Our implementation performs on
visual model, as follows:

Follow previous work, we adopted beam search to con-
sider the best k candidate sentences at time t to infer the
sentence at next time step. In our work, we ﬁx k = 1 in
all experiments although the average of 2 BLEU [28] points
better results can be achieved with k = 20 compare to k = 1
as reported in [39].

4. EXPERIMENTS

In this section, we design several groups of experiments to

accomplish following objectives:

• Qualitatively analyze and understand how bidirectional
multimodal LSTM learns to generate sentence condi-
tioned by visual context information over time.

• Measure the beneﬁts and performance of proposed bidi-
rectional model and its deeper variant models that we
increase their nonlinearity depth from diﬀerent ways.

• Compare our approach with state-of-the-art methods
in terms of sentence generation and image-sentence re-
trieval tasks on popular benchmark datasets.

4.1 Datasets

To validate the eﬀectiveness, generality and robustness of
our models, we conduct experiments on three benchmark
datasets: Flickr8K [31], Flickr30K [43] and MSCOCO [21].
Flickr8K. It consists of 8,000 images and each of them
has 5 sentence-level captions. We follow the standard dataset
divisions provided by authors, 6,000/1,000/1,000 images for
training/validation/testing respectively.

Flickr30K. An extension version of Flickr8K. It has 31,783
images and each of them has 5 captions. We follow the pub-
lic accessible1 dataset divisions by Karpathy et al. [11]. In
this dataset splits, 29,000/1,000/1,000 images are used for
training/validation/testing respectively.

MSCOCO. This is a recent released dataset that covers
82,783 images for training and 40,504 images for validation.
Each of images has 5 sentence annotations. Since there is
lack of standard splits, we also follow the splits provided by
[11]. Namely, 80,000 training images and
Karpathy et al.
5,000 images for both validation and testing.

4.2

Implementation Details

Visual feature. We use two visual models for encoding
image: Caﬀe [9] reference model which is pre-trained with
AlexNet [14] and 16-layer VggNet model [33]. We extract
features from last fully connected layer and feed to train
visual-language model with LSTM. Previous work [39, 23]
have demonstrated that with more powerful image models
such as GoogleNet [37] and VggNet [33] can achieve promis-
ing improvements. To make a fair comparison with recent
works, we select the widely used two models for experiments.
Textual feature. We ﬁrst represent each word w within
sentence as one-hot vector, w ∈ RK , K is vocabulary size
built on training sentences and diﬀerent for diﬀerent datasets.
By performing basic tokenization and removing the words
that occurs less than 5 times in the training set, we have
2028, 7400 and 8801 words for Flickr8K, Flickr30K and
MSCOCO dataset vocabularies respectively.

Our work uses the LSTM implementation of [4] on Caﬀe
framework. All of our experiments were conducted on Ubuntu

1http://cs.stanford.edu/people/karpathy/deepimagesent/

14.04, 16G RAM and single Titan X GPU with 12G mem-
ory. Our LSTMs use 1000 hidden units and weights ini-
tialized uniformly from [-0.08, 0.08]. The batch sizes are
150, 100, 100, 32 for Bi-LSTM, Bi-S-LSTM, Bi-F-LSTM
and Bi-LSTM (VGG) models respectively. Models were
trained with learning rate η = 0.01 (except η = 0.005 for
Bi-LSTM (VGG)), weight decay λ is 0.0005 and we used
momentum 0.9. Each model is trained for 18∼35 epochs
with early stopping. The code for this work can be found at
https:// github.com/ deepsemantic/ image captioning.

4.3 Evaluation Metrics

We evaluate our models on two tasks: caption generation
and image-sentence retrieval. In caption generation, we fol-
low previous work to use BLEU-N (N=1,2,3,4) scores [28]:

BN = min(1, e1− r

c ) · e

1
N

(cid:80)N

n=1 log pn

(16)

where r, c are the length of reference sentence and gener-
ated sentence, pn is the modiﬁed n-gram precisions. We
also report METETOR [18] and CIDEr [38] scores for fur-
ther comparison. In image-sentence retrieval (image query
sentence and vice versa), we adopt R@K (K=1,5,10) and
Med r as evaluation metrics. R@K is the recall rate R at
top K candidates and Med r is the median rank of the ﬁrst
retrieved ground-truth image and sentence. All mentioned
metric scores are computed by MSCOCO caption evalua-
tion server2, which is commonly used for image captioning
challenge3.

4.4 Visualization and Qualitative Analysis

The aim of this set experiment is to visualize the proper-
ties of proposed bidirectional LSTM model and explain how
it works in generating sentence word by word over time.

First, we examine the temporal evolution of internal gate
states and understand how bidirectional LSTM units retain
valuable context information and attenuate unimportant in-
formation. Figure 6 shows input and output data, the pat-
tern of three sigmoid gates (input, forget and output) as well
as cell states. We can clearly see that dynamic states are
periodically distilled to units from time step t = 0 to t = 11.
At t = 0, the input data are sigmoid modulated to input
gate i(t) where values lie within in [0,1]. At this step, the
values of forget gates f (t) of diﬀerent LSTM units are zeros.
Along with the increasing of time step, forget gate starts
to decide which unimportant information should be forgot-
ten, meanwhile, to retain those useful information. Then
the memory cell states c(t) and output gate o(t) gradually
absorb the valuable context information over time and make
a rich representation h(t) of the output data.

Next, we examine how visual and textual features are em-
bedded to common semantic space and used to predict word
over time. Figure 7 shows the evolution of hidden units at
diﬀerent layers. For T-LSTM layer, units are conditioned
by textual context from the past and future.
It performs
as the encoder of forward and backward sentences. At M-
LSTM layer, LSTM units are conditioned by both visual
and textual context. It learns the correlations between in-
put word sequence and visual information that encoded by
CNN. At given time step, by removing unimportant infor-
mation that make less contribution to correlate input word

2https://github.com/tylin/coco-caption
3http://mscoco.org/home/

(a) input

(b) input gate

(c) forget gate

(d) cell state

(e) output gate

(f) output

Figure 6: Visualization of LSTM cell. The horizontal axis corresponds to time steps. The vertical axis is cell index. Here we
visualize the gates and cell states of the ﬁrst 32 Bi-LSTM units of T-LSTM in forward direction over 11 time steps.

(a) T-LSTM (forward) units

(b) T-LSTM (backward) units

(c) M-LSTM (forward) units

(d) M-LSTM (backward) units

(e) probability (forward) units

(f) probability (backward) units

A man in a black jacket is walking down the street
2

7 3 2 23

76 8

38

36

4

41
(g) Generated words and corresponding word index in vocabulary

41

Street the on walking is suit a in man a
2

8 193 2 3 7

4 5

36

Figure 7: Pattern of the ﬁrst 96 hidden units chosen at each layer of Bi-LSTM in both forward and backward directions. The
vertical axis presents time steps. The horizontal axis corresponds to diﬀerent LSTM units. In this example, we visualize the
T-LSTM layer for text only, the M-LSTM layer for both text and image and Softmax layer for computing word probability
distribution. The model was trained on Flickr 30K dataset for generating sentence word by word at each time step. In (g),
we provide the predicted words at diﬀerent time steps and their corresponding index in vocabulary where we can also read
from (e) and (f) (the highlight point at each row). Word with highest probability is selected as the predicted word.

and visual context, the units tend to appear sparsity pattern
and learn more discriminative representations from inputs.
At higher layer, embedded multimodal representations are
used to compute the probability distribution of next predict
word with Softmax. It should be noted, for given image, the
number of words in generated sentence from forward and
backward direction can be diﬀerent.

Figure 8 presents some example images with generated
captions. From it we found some interesting patterns of bidi-
rectional captions: (1) Cover diﬀerent semantics, for ex-
ample, in (b) forward sentence captures “couch” and “table”
while backward one describes “chairs” and “table”. (2) De-
scribe static scenario and infer dynamics, in (a) and
(d), one caption describes the static scene, and the other one

presents the potential action or motion that possibly hap-
pen in the next time step. (3) Generate novel sentences,
from generated captions, we found that a signiﬁcant pro-
portion (88% by randomly select 1000 images on MSCOCO
validation set) of generated sentences are novel (not appear
in training set). But generated sentences are highly similar
to ground-truth captions, for example in (d), forward cap-
tion is similar to one of ground-truth captions (“A passenger
train that is pulling into a station”) and backward caption is
similar to ground-truth caption (“a train is in a tunnel by a
station”). It illustrates that our model has strong capability
in learning visual-language correlation and generating novel
sentences.

(a)

(b)

A woman in a tennis court
holding a tennis racket.
A woman getting ready to hit a
tennis ball.

A living room with a couch
and a table.
Two chairs and a table in a living
room.

(c)
A giraﬀe standing in a zoo en-
closure with a baby in the back-
ground.
A couple of giraﬀes are stand-
ing at a zoo.

(d)

A train is pulling into a train sta-
tion.
A train on the tracks at a
train station.

Figure 8: Examples of generated captions for given query image on MSCOCO validation set. Blue-colored captions are
generated in forward direction and red-colored captions are generated in backward direction. The ﬁnal caption is selected
according to equation (13) which selects the sentence with the higher probability. The ﬁnal captions are marked in bold.

Table 1: Performance comparison on BLEU-N(high score is good). The superscript “A” means the visual model is AlexNet
(or similar network), “V” is VggNet, “G” is GoogleNet, “-” indicates unknown value, “‡” means diﬀerent data splits4. The best
results are marked in bold and the second best results with underline. The superscripts are also applicable to Table 2.

Models
NIC[39]G,‡
LRCN[4]A,‡
DeepVS[11]V
m-RNN[23]A,‡
m-RNN[23]V,‡
Hard-Attention[42]V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

B-1
63
-
57.9
56.5
-
67
61.9
64.2
63.0
65.5

Flickr8K
B-3
27.2
-
24.5
25.6
-
31.4
29.7
29.2
29.2
32.0

B-2
41
-
38.3
38.6
-
45.7
43.3
44.3
43.7
46.8

B-4
-
-
16
17.0
-
21.3
20.0
18.6
19.1
21.5

B-1
66.3
58.8
57.3
54
60
66.9
58.9
59.5
58.6
62.1

Flickr30K
B-3
27.7
25.1
24.0
23
28
29.6
25.9
26.9
26.0
28.1

B-2
42.3
39.1
36.9
36
41
43.9
39.3
40.3
39.2
42.6

B-4
18.3
16.5
15.7
15
19
19.9
17.1
17.9
17.4
19.3

B-1
66.6
62.8
62.5
-
67
71.8
63.4
63.7
63.5
67.2

MSCOCO
B-3
B-2
32.9
46.1
30.4
44.2
32.1
45
-
-
35
49
35.7
50.4
30.6
44.7
31.8
45.7
30.7
44.8
35.2
49.2

B-4
24.6
-
23
-
25
25
20.6
21.9
20.6
24.4

4.5 Results on Caption Generation

Now, we compare with state-of-the-art methods. Table 1
presents the comparison results in terms of BLEU-N. Our
approach achieves very competitive performance on evalu-
ated datasets although with less powerful AlexNet visual
model. We can see that increase the depth of LSTM is ben-
eﬁcial on generation task. Deeper variant models mostly
obtain better performance compare to Bi-LSTM, but they
are inferior to latter one in B-3 and B-4 on Flickr8K. We
conjecture it should be the reason that Flick8K is a rela-
tively small dataset which suﬀers diﬃculty in training deep
models with limited data. One of interesting facts we found
is that by stacking multiple LSTM layers is generally supe-
rior to LSTM with fully connected transition layer although
Bi-S-LSTM needs more training time. By replacing AlexNet
with VggNet brings signiﬁcant improvements on all BLEU
evaluation metrics. We should be aware of that a recent
interesting work [42] achieves the best results by integrat-
ing attention mechanism [19, 42] on this task. Although
we believe incorporating such powerful mechanism into our
framework can make further improvements, note that our
current model Bi-LSTMV achieves the best or second best
results on most of metrics while the small gap in performance
between our model and Hard-AttentionV [42] is existed.

4On MSCOCO dataset, NIC uses 4K images for validation
and test. LRCN randomly selects 5K images from MSCOCO
validation set for validation and test. m-RNN uses 4K im-
ages for validation and 1K as test.

The further comparison on METEOR and CIDEr scores
is plotted in Figure 9. Without integrating object detection
and more powerful vision model, our model (Bi-LSTMA)
outperforms DeepVSV [11] in a certain margin. It achieves
19.4/49.6 on Flickr 8K (compare to 16.7/31.8 of DeepVSV )
and 16.2/28.2 on Flickr30K (15.3/24.7 of DeepVSV ). On
MSCOCO, our Bi-S-LSTMA obtains 20.8/66.6 for METEOR/CIDEr,
which exceeds 19.5/66.0 in DeepVSV .

(a) METEOR score

(b) CIDEr score

Figure 9: METEOR/CIDEr scores on diﬀerent datasets.

4.6 Results on Image-Sentence Retrieval

For retrieval evaluation, we focus on image to sentence
retrieval and vice versa. This is an instance of cross-modal
retrieval [6, 30, 41] which has been a hot research subject
in multimedia ﬁeld. Table 2 illustrates our results on diﬀer-
ent datasets. The performance of our models exceeds those
compared methods on most of metrics or matching exist-

Table 2: Comparison with state-of-the-art methods on R@K (high is good) and Med r (low is good). All scores are computed
by averaging the results of forward and backward results. “+O” means the approach with additional object detection.

Image to Sentence

Datasets

Flickr 8K

Flickr 30K

MSCOCO

Methods
DeViSE[7]
SDT-RNN[34]
DeFrag[10]+O
Kiros et al. [13]A
Kiros et al. [13]V
m-RNN[23]A
Mind’s Eye[2]V
DeepVS[11]+O,V
NIC[39]G
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeViSE[7]
SDT-RNN[34]
Kiros et al. [13]A
Kiros et al. [13]V
LRCN[4]A
NIC[39]G
m-RNN[23]A
Mind’s Eye[2]V
DeFrag [10]+O
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

R@1 R@5
16.5
4.8
18.0
4.5
32.9
12.6
36.2
13.5
40.9
18
37.2
14.5
42.5
17.3
40.6
16.5
-
20
44.7
21.3
43.7
19.6
44.0
19.9
58.2
29.3
18.1
4.5
29.8
9.6
39.2
14.8
50.7
23.0
34.9
14
-
17
40.2
18.4
45.7
18.5
40.2
16.4
48.2
22.2
41.2
18.7
43.0
21
44.4
20
53.1
28.1

16.5
10.8
13.4
11.2
16.6

39.2
28.1
33.1
30
39.4

R@10 Med r
27.3
28.6
44.0
45.7
55
48.5
57.4
54.2
60
56.5
55.7
56.0
69.6
29.2
41.1
50.9
62.9
47
56
50.9
58.1
54.7
61.4
52.6
54.1
55.2
64.2

28
32
14
13
8
11
7
7.6
6
6.5
7
7
3
26
16
10
5
11
7
10
7
8
4.8
8
7
7
4

52.0
38.9
44.7
41.2
52.4

9
18
13
16
9

R@1
5.9
6.1
9.7
10.4
12.5
11.5
15.4
11.8
19
15.1
14.5
14.9
19.7
6.7
8.9
11.8
16.8
-
17
12.6
16.6
10.3
15.2
14.0
15.1
15.1
19.6

10.7
7.8
9.4
8.3
11.6

Sentence to Image
R@5
20.1
18.5
29.6
31.0
37
31.0
40.6
32.1
-
37.8
36.4
37.4
47.0
21.9
29.8
34.0
42.0
-
-
31.2
42.5
31.4
37.7
34.0
35.3
35.8
43.8

R@10 Med r
29.6
29.0
42.5
43.7
51.5
42.4
50.1
44.7
64
50.1
48.3
49.8
60.6
32.7
41.1
46.3
56.5
-
57
41.5
58.9
44.5
50.5
44.0
46.0
46.8
55.8

29
29
15
14
10
15
8
12.4
5
9
10.5
10
5
25
16
13
8
-
8
16
8
13
9.2
14
12
12
7

29.6
22.4
26.5
24.9
30.9

42.2
32.8
37.7
35.1
43.4

14.0
24
19
22
13

ing results. In a few metrics, our model didn’t show better
result than Mind’s Eye [2] which combined image and text
features in ranking (it makes this task more like multimodal
retrieval) and NIC [39] which employed more powerful vision
model, large beam size and model ensemble. While adopt-
ing more powerful visual model VggNet results in signiﬁcant
improvements across all metrics, with less powerful AlexNet
model, our results are still competitive on some metrics, e.g.
R@1, R@5 on Flickr8K and Flickr30K. We also note that on
relatively small dataset Filckr8K, shallow model performs
slightly better than deeper ones on retrieval task, which in
contrast with the results on the other two datasets. As we
explained before, we think deeper LSTM architectures are
better suited for ranking task on large datasets which pro-
vides enough training data for more complicate model train-
ing, otherwise, overﬁtting occurs. By increasing data vari-
ations with our implemented data augmentation techniques
can alleviate it in a certain degree. But we foresee further
signiﬁcant improvement gains as training example grows, by
reducing reliance on augmentation with fresh data. Figure
10 presents some examples of retrieval experiments. For
each caption (image) query, sensible images and descriptive
captions are retrieved.
It shows our models captured the
visual-textual correlation for image and sentence ranking.

4.7 Discussion

Eﬃciency. In addition to showing superior performance,

Table 3: Time costs for testing 10 images on Flickr8K

Bi-LSTM Bi-S-LSTM Bi-F-LSTM

Generation
Retrieval

0.93s
5.62s

1.1s
7.46s

0.97s
5.69s

our models also possess high computational eﬃciency. Table
3 presents the computational costs of proposed models. We
randomly select 10 images from Flickr8K validation set, and
perform caption generation and image to sentence retrieval
test for 5 times respectively. The table shows the averaged
time costs across 5 test results. The time cost of network
initialization is excluded. The costs of caption generation
includes: computing image feature, sampling bidirectional
captions, computing the ﬁnal caption. The time costs for
retrieval considers: computing image-sentence pair scores
(totally 10 × 50 pairs), ranking sentences for each image
query. As can be seen from Table 1, 2 and 3, deep models
have only slightly higher time consumption but yield signiﬁ-
cant improvements and our proposed Bi-F-LSTM can strike
the balance between performance and eﬃciency.

Challenges in exact comparison. It is challenging to
make a direct, extract comparison with related methods due
to the diﬀerences in dataset division on MSCOCO. In prin-
ciple, testing on smaller validation set can lead to better
results, particularly in retrieval task. Since we strictly fol-
low dataset splits as in [11], we compare to it in most cases.
Another challenge is the visual model that utilized for en-

snowboarder
jumping

A man practices
boxing

Two guys one in
a red uniform and
one in a blue uni-
form playing soc-
cer

A soccer player
a player
tackles
from the
other
team

Two young men
tackle an opponent
scrim-
a
during
mage
football
game

Black dog jumping
out of the water
with a stick in his
mouth

A black dog jumps
in a body of water
with a stick in his
mouth

A black dog is
swimming through
water

for

A football player
preparing a foot-
a ﬁeld
ball
goal kick, while
his teammates can
coach watch him

A black dog swim-
ming in the water
with a tennis ball
in his mouth

Figure 10: Examples of image retrieval (top) and caption retrieval (bottom) with Bi-S-LSTM on Flickr30K validation set.
Queries are marked with red color and top-4 retrieved results are marked with green color.

coding image inputs. Diﬀerent models are employed in dif-
ferent works, to make a fair and comprehensive comparison,
we select commonly used AlexNet and VggNet in our work.

Y. Bengio. Learning phrase representations using rnn
encoder-decoder for statistical machine translation.
EMNLP, 2014.

5. CONCLUSIONS

We proposed a bidirectional LSTM model that generates
descriptive sentence for image by taking both history and
future context into account. We further designed deep bidi-
rectional LSTM architectures to embed image and sentence
at high semantic space for learning visual-language models.
We also qualitatively visualized internal states of proposed
model to understand how multimodal LSTM generates word
at consecutive time steps. The eﬀectiveness, generality and
robustness of proposed models were evaluated on numerous
datasets. Our models achieve highly completive or state-
of-the-art results on both generation and retrieval tasks.
Our future work will focus on exploring more sophisticated
language representation (e.g. word2vec) and incorporating
multitask learning and attention mechanism into our model.
We also plan to apply our model to other sequence learning
tasks such as text recognition and video captioning.

6. REFERENCES
[1] D. Bahdanau, K. Cho, and Y. Bengio. Neural machine
translation by jointly learning to align and translate.
ICLR, 2015.

[2] X. Chen and C. Lawrence Zitnick. Mind’s eye: A
recurrent visual representation for image caption
generation. In CVPR, pages 2422–2431, 2015.

[3] K. Cho, B. Van Merri¨enboer, C. Gulcehre,

D. Bahdanau, F. Bougares, H. Schwenk, and

[4] J. Donahue, L. A. Hendricks, S. Guadarrama,
M. Rohrbach, S. Venugopalan, K. Saenko, and
T. Darrell. Long-term recurrent convolutional
networks for visual recognition and description. In
CVPR, pages 2625–2634, 2015.

[5] H. Fang, S. Gupta, F. Iandola, R. Srivastava, L. Deng,
P. Doll´ar, J. Gao, X. He, M. Mitchell, and J. Platt.
From captions to visual concepts and back. In CVPR,
pages 1473–1482, 2015.

[6] F. Feng, X. Wang, and R. Li. Cross-modal retrieval

with correspondence autoencoder. In ACMMM, pages
7–16. ACM, 2014.

[7] A. Frome, G. Corrado, J. Shlens, S. Bengio, J. Dean,
and T. Mikolov. Devise: A deep visual-semantic
embedding model. In NIPS, pages 2121–2129, 2013.
[8] A. Graves, A. Mohamed, and G. E. Hinton. Speech
recognition with deep recurrent neural networks. In
ICASSP, pages 6645–6649. IEEE, 2013.

[9] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev,

J. Long, R. Girshick, S. Guadarrama, and T. Darrell.
Caﬀe: Convolutional architecture for fast feature
embedding. In ACMMM, pages 675–678. ACM, 2014.

[10] A. Karpathy, A. Joulin, and F-F. Li. Deep fragment

embeddings for bidirectional image sentence mapping.
In NIPS, pages 1889–1897, 2014.

[11] A. Karpathy and F-F. Li. Deep visual-semantic
alignments for generating image descriptions. In
CVPR, pages 3128–3137, 2015.

[12] R. Kiros, R. Salakhutdinov, and R. Zemel.

Multimodal neural language models. In ICML, pages
595–603, 2014.

[13] R. Kiros, R. Salakhutdinov, and R. Zemel. Unifying
visual-semantic embeddings with multimodal neural
language models. arXiv preprint arXiv:1411.2539,
2014.

[14] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet classiﬁcation with deep convolutional neural
networks. In NIPS, pages 1097–1105, 2012.

a method for automatic evaluation of machine
translation. In ACL, pages 311–318. ACL, 2002.
[29] R. Pascanu, C. Gulcehre, K. Cho, and Y. Bengio. How
to construct deep recurrent neural networks. arXiv
preprint arXiv:1312.6026, 2013.

[30] J. C. Pereira, E. Coviello, G. Doyle, N. Rasiwasia,
G. Lanckriet, R. Levy, and N. Vasconcelos. On the
role of correlation and abstraction in cross-modal
multimedia retrieval. IEEE Trans. on Pattern Analysis
and Machine Intelligence(PAMI), 36(3):521–535, 2014.

[15] G. Kulkarni, V. Premraj, V. Ordonez, S. Dhar, S. Li,

[31] C. Rashtchian, P. Young, M. Hodosh, and

Y. Choi, A. C. Berg, and T. Berg. Babytalk:
Understanding and generating simple image
descriptions. IEEE Trans. on Pattern Analysis and
Machine Intelligence(PAMI), 35(12):2891–2903, 2013.
[16] P. Kuznetsova, V. Ordonez, A. C. Berg, T. Berg, and
Y. Choi. Collective generation of natural image
descriptions. In ACL, volume 1, pages 359–368. ACL,
2012.

[17] P. Kuznetsova, V. Ordonez, T. Berg, and Y. Choi.
Treetalk: Composition and compression of trees for
image descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2(10):351–362,
2014.

[18] M. Lavie. Meteor universal: language speciﬁc

translation evaluation for any target language. ACL,
page 376, 2014.

[19] Y. LeCun, Y. Bengio, and G. E. Hinton. Deep
learning. Nature, 521(7553):436–444, 2015.
[20] S. Li, G. Kulkarni, T. L. Berg, A. C. Berg, and

Y. Choi. Composing simple image descriptions using
web-scale n-grams. In CoNLL, pages 220–228. ACL,
2011.

[21] T-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona,
D. Ramanan, P. Doll´ar, and C. Zitnick. Microsoft
coco: Common objects in context. In ECCV, pages
740–755. Springer, 2014.

[22] Xin Lu, Zhe Lin, Hailin Jin, Jianchao Yang, and

James Z Wang. Rapid: Rating pictorial aesthetics
using deep learning. In ACMMM, pages 457–466.
ACM, 2014.

[23] J. H. Mao, W. Xu, Y. Yang, J. Wang, Z. H. Huang,
and A. Yuille. Deep captioning with multimodal
recurrent neural networks (m-rnn). ICLR, 2015.
[24] T. Mikolov, M. Karaﬁ´at, L. Burget, J. Cernock`y, and
S. Khudanpur. Recurrent neural network based
language model. In INTERSPEECH, volume 2,
page 3, 2010.

[25] T. Mikolov, S. Kombrink, L. Burget, J. H. ˇCernock`y,
and S. Khudanpur. Extensions of recurrent neural
network language model. In ICASSP, pages
5528–5531. IEEE, 2011.

[26] M. Mitchell, X. Han, J. Dodge, A. Mensch, A. Goyal,
A. Berg, K. Yamaguchi, T. Berg, K. Stratos, and
H. Daum´e III. Midge: Generating image descriptions
from computer vision detections. In ACL, pages
747–756. ACL, 2012.

[27] J. Ngiam, A. Khosla, M. Kim, J. Nam, H. Lee, and

A. Ng. Multimodal deep learning. In ICML, pages
689–696, 2011.

J. Hockenmaier. Collecting image annotations using
amazon’s mechanical turk. In NAACL HLT
Workshop, pages 139–147. Association for
Computational Linguistics, 2010.

[32] K. Simonyan and A. Zisserman. Two-stream

convolutional networks for action recognition in
videos. In NIPS, pages 568–576, 2014.
[33] K. Simonyan and A. Zisserman. Very deep

convolutional networks for large-scale image
recognition. arXiv preprint arXiv:1409.1556, 2014.
[34] R. Socher, A. Karpathy, Q. V. Le, C. D. Manning,

and A. Y. Ng. Grounded compositional semantics for
ﬁnding and describing images with sentences. Trans.
of the Association for Computational
Linguistics(TACL), 2:207–218, 2014.

[35] N. Srivastava and R. Salakhutdinov. Multimodal

learning with deep boltzmann machines. In NIPS,
pages 2222–2230, 2012.

[36] I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to

sequence learning with neural networks. In NIPS,
pages 3104–3112, 2014.

[37] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed,
D. Anguelov, D. Erhan, V. Vanhoucke, and
A. Rabinovich. Going deeper with convolutions. In
CVPR, pages 1–9, 2015.

[38] R. Vedantam, Z. Lawrence, and D. Parikh. Cider:
Consensus-based image description evaluation. In
CVPR, pages 4566–4575, 2015.

[39] O. Vinyals, A. Toshev, S. Bengio, and D. Erhan. Show
and tell: A neural image caption generator. In CVPR,
pages 3156–3164, 2015.

[40] Zhangyang Wang, Jianchao Yang, Hailin Jin, Eli

Shechtman, Aseem Agarwala, Jonathan Brandt, and
Thomas S. Huang. Deepfont: Identify your font from
an image. In ACMMM, pages 451–459. ACM, 2015.

[41] X.Jiang, F. Wu, X. Li, Z. Zhao, W. Lu, S. Tang, and
Y. Zhuang. Deep compositional cross-modal learning
to rank via local-global alignment. In ACMMM, pages
69–78. ACM, 2015.

[42] K. Xu, J. Ba, R. Kiros, A. Courville,

R. Salakhutdinov, R. Zemel, and Y. Bengio. Show,
attend and tell: Neural image caption generation with
visual attention. ICML, 2015.

[43] P. Young, A. Lai, M. Hodosh, and J. Hockenmaier.
From image descriptions to visual denotations: New
similarity metrics for semantic inference over event
descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2:67–78, 2014.

[44] W. Zaremba and I. Sutskever. Learning to execute.

[28] K. Papineni, S. Roukos, T. Ward, and W. Zhu. Bleu:

arXiv preprint arXiv:1410.4615, 2014.

[45] M. D. Zeiler and R. Fergus. Visualizing and

understanding convolutional networks. In ECCV,
pages 818–833. Springer, 2014.

Image Captioning with Deep Bidirectional LSTMs

Cheng Wang, Haojin Yang, Christian Bartz, Christoph Meinel
Hasso Plattner Institute, University of Potsdam
Prof.-Dr.-Helmert-Str. 2-3, 14482 Potsdam, Germany
{cheng.wang, haojin.yang,christoph.meinel}@hpi.de
christian.bartz@student.hpi.uni-potsdam.de

6
1
0
2
 
l
u
J
 
0
2
 
 
]

V
C
.
s
c
[
 
 
3
v
0
9
7
0
0
.
4
0
6
1
:
v
i
X
r
a

ABSTRACT
This work presents an end-to-end trainable deep bidirec-
tional LSTM (Long-Short Term Memory) model for image
captioning. Our model builds on a deep convolutional neu-
ral network (CNN) and two separate LSTM networks.
It
is capable of learning long term visual-language interactions
by making use of history and future context information at
high level semantic space. Two novel deep bidirectional vari-
ant models, in which we increase the depth of nonlinearity
transition in diﬀerent way, are proposed to learn hierarchi-
cal visual-language embeddings. Data augmentation tech-
niques such as multi-crop, multi-scale and vertical mirror
are proposed to prevent overﬁtting in training deep models.
We visualize the evolution of bidirectional LSTM internal
states over time and qualitatively analyze how our models
“translate” image to sentence. Our proposed models are eval-
uated on caption generation and image-sentence retrieval
tasks with three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO datasets. We demonstrate that bidirectional
LSTM models achieve highly competitive performance to
the state-of-the-art results on caption generation even with-
out integrating additional mechanism (e.g. object detection,
attention model etc.) and signiﬁcantly outperform recent
methods on retrieval task.

CCS Concepts
•Computing methodologies → Natural language gen-
eration; Neural networks; Computer vision representa-
tions;

Keywords
deep learning, LSTM, image captioning, visual-language

1.

INTRODUCTION

Automatically describe an image using sentence-level cap-
tions has been receiving much attention recent years [11, 10,
13, 17, 16, 23, 34, 39]. It is a challenging task integrating

Permission to make digital or hard copies of all or part of this work for personal or
classroom use is granted without fee provided that copies are not made or distributed
for proﬁt or commercial advantage and that copies bear this notice and the full cita-
tion on the ﬁrst page. Copyrights for components of this work owned by others than
ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or re-
publish, to post on servers or to redistribute to lists, requires prior speciﬁc permission
and/or a fee. Request permissions from permissions@acm.org.
MM ’16, October 15-19, 2016, Amsterdam, Netherlands
c(cid:13) 2016 ACM. ISBN 978-1-4503-3603-1/16/10. . . $15.00
DOI: http://dx.doi.org/10.1145/2964284.2964299

visual and language understanding. It requires not only the
recognition of visual objects in an image and the seman-
tic interactions between objects, but the ability to capture
visual-language interactions and learn how to “translate” the
visual understanding to sensible sentence descriptions. The
most important part of this visual-language modeling is to
capture the semantic correlations across image and sentence
by learning a multimodal joint model. While some previous
models [20, 15, 26, 17, 16] have been proposed to address
the problem of image captioning, they rely on either use sen-
tence templates, or treat it as retrieval task through ranking
the best matching sentence in database as caption. Those
approaches usually suﬀer diﬃculty in generating variable-
length and novel sentences. Recent work [11, 10, 13, 23,
34, 39] has indicated that embedding visual and language
to common semantic space with relatively shallow recurrent
neural network (RNN) can yield promising results.

In this work, we propose novel architectures to the prob-
lem of image captioning. Diﬀerent to previous models, we
learn a visual-language space where sentence embeddings
are encoded using bidirectional Long-Short Term Memory
(Bi-LSTM) and visual embeddings are encoded with CNN.
Bi-LSTM is able to summarize long range visual-language
interactions from forward and backward directions. Inspired
by the architectural depth of human brain, we also explore
the deep bidirectional LSTM architectures to learn higher
level visual-language embeddings. All proposed models can
be trained in end-to-end by optimizing a joint loss.

Why bidirectional LSTMs? In unidirectional sentence gen-
eration, one general way of predicting next word wt with
visual context I and history textual context w1:t−1 is max-
imize log P (wt|I, w1:t−1). While unidirectional model in-
cludes past context, it is still limited to retain future context
wt+1:T that can be used for reasoning previous word wt by
maximizing log P (wt|I, wt+1:T ). Bidirectional model tries
to overcome the shortcomings that each unidirectional (for-
ward and backward direction) model suﬀers on its own and
exploits the past and future dependence to give a prediction.
As shown in Figure 1, two example images with bidirection-
ally generated sentences intuitively support our assumption
that bidirectional captions are complementary, combining
them can generate more sensible captions.

Why deeper LSTMs? The recent success of deep CNN
in image classiﬁcation and object detection [14, 33] demon-
strates that deep, hierarchical models can be more eﬃcient
at learning representation than shallower ones. This mo-
tivated our work to explore deeper LSTM architectures in
the context of learning bidirectional visual-language embed-

in bridging the “semantic gap” of multimodal data. Image
captioning falls into this general category of learning multi-
modal representations.

Recently, several approaches have been proposed for im-
age captioning. We can roughly classify those methods into
three categories. The ﬁrst category is template based ap-
proaches that generate caption templates based on detect-
ing objects and discovering attributes within image. For
example, the work [20] was proposed to parse a whole sen-
tence into several phrases, and learn the relationships be-
tween phrases and objects within an image. In [15], condi-
tional random ﬁeld (CRF) was used to correspond objects,
attributes and prepositions of image content and predict the
best label. Other similar methods were presented in [26, 17,
16]. These methods are typically hard-designed and rely on
ﬁxed template, which mostly lead to poor performance in
generating variable-length sentences. The second category
is retrieval based approach, this sort of methods treat image
captioning as retrieval task. By leveraging distance met-
ric to retrieve similar captioned images, then modify and
combine retrieved captions to generate caption [17]. But
these approaches generally need additional procedures such
as modiﬁcation and generalization process to ﬁt image query.
Inspired by the success use of CNN [14, 45] and Recurrent
Neural Network [24, 25, 1]. The third category is emerged as
neural network based methods [39, 42, 13, 10, 11]. Our work
also belongs to this category. Among those work, Kiro et
al.[12] can been as pioneer work to use neural network for im-
age captioning with multimodal neural language model. In
their follow up work [13], Kiro et al. introduced an encoder-
decoder pipeline where sentence was encoded by LSTM and
decoded with structure-content neural language model (SC-
NLM). Socher et al.[34] presented a DT-RNN (Dependency
Tree-Recursive Neural Network) to embed sentence into a
vector space in order to retrieve images. Later on, Mao et
al.[23] proposed m-RNN which replaces feed-forward neu-
ral language model in [13]. Similar architectures were intro-
duced in NIC [39] and LRCN [4], both approaches use LSTM
to learn text context. But NIC only feed visual information
at ﬁrst time step while Mao et al.[23] and LRCN [4]’s model
consider image context at each time step. Another group
of neural network based approaches has been introduced in
[10, 11] where image captions generated by integrating ob-
ject detection with R-CNN (region-CNN) and inferring the
alignment between image regions and descriptions.

Most recently, Fang et al.[5] used multi-instance learning
and traditional maximum-entropy language model for de-
scription generation. Chen et al.[2] proposed to learn visual
representation with RNN for generating image caption. In
[42], Xu et al.
introduced attention mechanism of human
visual system into encoder-decoder framework. It is shown
that attention model can visualize what the model “see” and
yields signiﬁcant improvements on image caption genera-
tion. Unlike those models, our deep LSTM model directly
assumes the mapping relationship between visual-language
is antisymmetric and dynamically learns long term bidirec-
tional and hierarchical visual-language interactions. This is
proved to be very eﬀective in generation and retrieval tasks
as we demonstrate in Sec.4.5 and Sec.4.6.

3. MODEL

In this section, we describe our multimodal bidirectional
LSTM model (Bi-LSTM for short) and explore its deeper

Figure 1: Illustration of generated captions. Two example
images from Flickr8K dataset and their best matching cap-
tions that generated in forward order (blue) and backward
order (red). Bidirectional models capture diﬀerent levels
of visual-language interactions (more evidence see Sec.4.4).
The ﬁnal caption is the sentence with higher probabilities
In both examples, backward
(histogram under sentence).
caption is selected as ﬁnal caption for corresponding image.

dings. As claimed in [29], if we consider LSTM as a compo-
sition of multiple hidden layers that unfolded in time, LSTM
is already deep network. But this is the way of increasing
“horizontal depth” in which network weights W are reused at
each time step and limited to learn more representative fea-
tures as increasing the “vertical depth” of network. To design
deep LSTM, one straightforward way is to stack multiple
LSTM layers as hidden to hidden transition. Alternatively,
instead of stacking multiple LSTM layers, we propose to add
multilayer perception (MLP) as intermediate transition be-
tween LSTM layers. This can not only increase LSTM net-
work depth, but can also prevent the parameter size from
growing dramatically.

The core contributions of this work are threefold:

• We propose an end-to-end trainable multimodal bidi-
rectional LSTM (see Sec.3.2) and its deeper variant
models (see Sec.3.3) that embed image and sentence
into a high level semantic space by exploiting both
long term history and future context.

• We visualize the evolution of hidden states of bidirec-
tional LSTM units to qualitatively analyze and under-
stand how to generate sentence that conditioned by
visual context information over time (see Sec.4.4).

• We demonstrate the eﬀectiveness of proposed mod-
els on three benchmark datasets: Flickr8K, Flickr30K
and MSCOCO. Our experimental results show that
bidirectional LSTM models achieve highly competitive
performance to the state-of-the-art on caption genera-
tion (see Sec.4.5) and perform signiﬁcantly better than
recent methods on retrieval task (see Sec.4.6).

2. RELATED WORK

Multimodal representation learning [27, 35] has signiﬁ-
cant value in multimedia understanding and retrieval. The
shared concept across modalities plays an important role

Figure 2: Long Short Term Memory (LSTM) cell. It is con-
sist of an input gate i, a forget gate f , a memory cell c and
an output gate o. The input gate decides let incoming sig-
nal go through to memory cell or block it. The output gate
can allow new output or prevent it. The forget gate decides
to remember or forget cell’s previous state. Updating cell
states is performed by feeding previous cell output to itself
by recurrent connections in two consecutive time steps.

variants. We ﬁrst brieﬂy introduce LSTM which is at the
center of model. The LSTM we used is described in [44].

3.1 Long Short Term Memory

Our model builds on LSTM cell, which is a particular
form of traditional recurrent neural network (RNN). It has
been successfully applied to machine translation [3], speech
recognition [8] and sequence learning [36]. As shown in Fig-
ure 2, the reading and writing memory cell c is controlled
by a group of sigmoid gates. At given time step t, LSTM
receives inputs from diﬀerent sources: current input xt, the
previous hidden state of all LSTM units ht−1 as well as pre-
vious memory cell state ct−1. The updating of those gates
at time step t for given inputs xt, ht−1 and ct−1 as follows.

it = σ(Wxixt + Whiht−1 + bi)
ft = σ(Wxf xt + Whf ht−1 + bf )
ot = σ(Wxoxt + Whoht−1 + bo)
gt = φ(Wxcxt + Whcht−1 + bc)
ct = ft (cid:12) ct−1 + it (cid:12) gt
ht = ot (cid:12) φ(ct)

(1)

(2)
(3)

(4)
(5)

(6)

where W are the weight matrices learned from the network
and b are bias vectors. σ is the sigmoid activation function
σ(x) = 1/(1 + exp(−x)) and φ presents hyperbolic tangent
φ(x) = (exp(x) − exp(−x))/(exp(x) + exp(−x)). (cid:12) denotes
the products with a gate value. The LSTM hidden output
ht={htk}K
k=0, ht ∈ RK will be used to predict the next word
by Softmax function with parameters Ws and bs:

F(pti; Ws, bs) =

exp(Wshti + bs)
j=1 exp(Wshtj + bs)

(cid:80)K

(7)

where pti is the probability distribution for predicted word.
Our key motivation of chosen LSTM is that it can learn
long-term temporal activities and avoid quick exploding and
vanishing problems that traditional RNN suﬀers from during
back propagation optimization.

3.2 Bidirectional LSTM

In order to make use of both the past and future context
information of a sentence in predicting word, we propose a

Figure 3: Multimodal Bidirectional LSTM. L1: sentence
embedding layer. L2: T-LSTM layer. L3: M-LSTM layer.
L4: Softmax layer. We feed sentence in both forward (blue
arrows) and backward (red arrows) order which allows our
model summarizes context information from both left and
right side for generating sentence word by word over time.
Our model is end-to-end trainable by minimize a joint loss.

bidirectional model by feeding sentence to LSTM from for-
ward and backward order. Figure 3 presents the overview of
our model, it is comprised of three modules: a CNN for en-
coding image inputs, a Text-LSTM (T-LSTM) for encoding
sentence inputs, a Multimodal LSTM (M-LSTM) for em-
bedding visual and textual vectors to a common semantic
space and decoding to sentence. The bidirectional LSTM is
implemented with two separate LSTM layers for computing
−→
h and backward hidden sequences
forward hidden sequences
←−
h . The forward LSTM starts at time t = 1 and the back-
ward LSTM starts at time t = T . Formally, our model works
−→
as follows, for raw image input (cid:101)I, forward order sentence
S
←−
S , the encoding performs as
and backward order sentence
−→
−→
Θl)
E

←−
Θl) (8)

It = C((cid:101)I; Θv)

t = T (

t = T (

−→
h 1

←−
h 1

−→
S ;

←−
S ;

←−
E

where C, T represent CNN, T-LSTM respectively and Θv,
←−
Θl are their corresponding weights.
E are bidi-
rectional embedding matrices learned from network. En-
coded visual and textual representations are then embedded
to multimodal LSTM by:
−→
Θm)

−→
E and

←−
Θm)

←−
h 2

←−
h 1

−→
h 1

−→
h 2

t = M(

t = M(

t , It;

t , It;

(9)

where M presents M-LSTM and its weight Θm. M aims
to capture the correlation of visual context and words at
diﬀerent time steps. We feed visual vector I to model at
each time step for capturing strong visual-word correlation.
On the top of M-LSTM are Softmax layers which compute
the probability distribution of next predicted word by
t ; Ws, bs) ←−p t+1 = F(

−→p t+1 = F(

t ; Ws, bs)

−→
h 2

←−
h 2

(10)

where p ∈ RK and K is the vocabulary size.

3.3 Deeper LSTM architecture

To design deeper LSTM architectures, in addition to di-
rectly stack multiple LSTMs on each other that we named
as Bi-S-LSTM (Figure 4(c)), we propose to use a fully con-
nected layer as intermediate transition layer. Our motiva-
tion comes from the ﬁnding of [29], in which DT(S)-RNN
(deep transition RNN with shortcut) is designed by adding
hidden to hidden multilayer perception (MLP) transition. It

Figure 4: Illustrations of proposed deep architectures for image captioning. The network in (a) is commonly used in previous
work, e.g. [4, 23]. (b) Our proposed Bidirectional LSTM (Bi-LSTM). (c) Our proposed Bidirectional Stacked LSTM (Bi-S-
LSTM). (d) Our proposed Bidirectional LSTM with fully connected (FC) transition layer (Bi-F-LSTM).

• Multi-Corp: Instead of randomly cropping on input
image, we crop at the four corners and center region.
Because we found random cropping is more tend to se-
lect center region and cause overﬁtting easily. By crop-
ping four corners and center, the variations of network
input can be increased to alleviate overﬁtting.

• Multi-Scale: To further increase the number of image-
sentence pairs, we rescale input image to multiple scales.
For each input image (cid:101)I with size H ×W , it is resized to
256 × 256, then we randomly select a region with size
of s ∗ H × s ∗ W , where s ∈ [1, 0.925, 0.875, 0.85] is scale
ratio. s = 1 means we do not multi-scale operation on
given image. Finally we resize it to AlexNet input size
227 ×227 or VggNet input size 224 × 224.

• Vertical Mirror: Motivated by the eﬀectiveness of
widely used horizontal mirror, it is natural to also con-
sider the vertical mirror of image for same purpose.

Those augmentation techniques are implemented in real-
time fashion. Each input image is randomly transformed
using one of augmentations to network input for training.
In principle, our data augmentation can increase image-
sentence training pairs by roughly 40 times (5×4×2).

3.5 Training and Inference

−→
L +

Our model is end-to-end trainable by using Stochastic
←−
Gradient Descent (SGD). The joint loss function L =
L
is computed by accumulating the Softmax losses of forward
and backward directions. Our objective is to minimize L,
which is equivalent to maximize the probabilities of cor-
rectly generated sentences. We compute the gradient (cid:79)L
with Back-Propagation Through Time (BPTT) algorithm.
The trained model is used to predict a word wt with
given image context I and previous word context w1:t−1 by
P (wt|w1:t−1, I) in forward order, or by P (wt|wt+1:T , I) in
backward order. We set w1=wT =0 at start point respec-
tively for forward and backward directions. Ultimately, with
generated sentences from two directions, we decide the ﬁnal
sentence for given image p(w1:T |I) according to the summa-
tion of word probability within sentence

p(w1:T |I) = max(

(cid:88)T

(−→p (wt|I)),

(cid:88)T

(←−p (wt|I))) (13)

t=1

t=1

−→p (wt|I) =

(cid:89)T

←−p (wt|I) =

(cid:89)T

t=1

t=1

p(wt|w1, w2, ..., wt−1, I)

p(wt|wt+1, wt+2, ..., wT , I)

(14)

(15)

Figure 5: Transition for Bi-S-LSTM(L) and Bi-F-LSTM(R)

is arguably easier to train such network. Inspired by this, we
extend Bi-LSTM (Figure 4(b)) with a fully connected layer
that we called Bi-F-LSTM (Figure 4(d)), shortcut connec-
tion between input and hidden states is introduced to make
it easier to train model. The aim of extension models is to
learn an extra hidden transition function Fh. In Bi-S-LSTM

t = Fh(hl−1
hl+1

t

, hl

t−1) = Uhl−1

t + Vhl

t−1

(11)

where hl
t presents the hidden states of l-th layer at time
t, U and V are matrices connect to transition layer (also
see Figure 5(L)). For readability, we consider one direction
training and suppress bias terms. Similarly, in Bi-F-LSTM,
to learn a hidden transition function Fh by

t = Fh(hl−1
hl+1

t

) = φr(Whl−1

t ⊕ (V(Uhl−1

t

))

(12)

where ⊕ is the operator that concatenates hl−1
and its ab-
stractions to a long hidden states (also see Figure 5(R)). φr
presents rectiﬁed linear unit (Relu) activation function for
transition layer, which performs φr(x) = max(0, x).

t

3.4 Data Augmentation

One of the most challenging aspects of training deep bidi-
rectional LSTM models is preventing overﬁtting. Since our
largest dataset has only 80K images [21] which might cause
overﬁtting easily, we adopted several techniques such as ﬁne-
tuning on pre-trained visual model, weight decay, dropout
and early stopping that commonly used in the literature.
Additionally, it has been proved that data augmentation
such as randomly cropping and horizontal mirror [32, 22],
adding noise, blur and rotation [40] can eﬀectively allevi-
Inspired by this, we designed
ate over-ﬁtting and other.
new data augmentation techniques to increase the number
of image-sentence pairs. Our implementation performs on
visual model, as follows:

Follow previous work, we adopted beam search to con-
sider the best k candidate sentences at time t to infer the
sentence at next time step. In our work, we ﬁx k = 1 in
all experiments although the average of 2 BLEU [28] points
better results can be achieved with k = 20 compare to k = 1
as reported in [39].

4. EXPERIMENTS

In this section, we design several groups of experiments to

accomplish following objectives:

• Qualitatively analyze and understand how bidirectional
multimodal LSTM learns to generate sentence condi-
tioned by visual context information over time.

• Measure the beneﬁts and performance of proposed bidi-
rectional model and its deeper variant models that we
increase their nonlinearity depth from diﬀerent ways.

• Compare our approach with state-of-the-art methods
in terms of sentence generation and image-sentence re-
trieval tasks on popular benchmark datasets.

4.1 Datasets

To validate the eﬀectiveness, generality and robustness of
our models, we conduct experiments on three benchmark
datasets: Flickr8K [31], Flickr30K [43] and MSCOCO [21].
Flickr8K. It consists of 8,000 images and each of them
has 5 sentence-level captions. We follow the standard dataset
divisions provided by authors, 6,000/1,000/1,000 images for
training/validation/testing respectively.

Flickr30K. An extension version of Flickr8K. It has 31,783
images and each of them has 5 captions. We follow the pub-
lic accessible1 dataset divisions by Karpathy et al. [11]. In
this dataset splits, 29,000/1,000/1,000 images are used for
training/validation/testing respectively.

MSCOCO. This is a recent released dataset that covers
82,783 images for training and 40,504 images for validation.
Each of images has 5 sentence annotations. Since there is
lack of standard splits, we also follow the splits provided by
[11]. Namely, 80,000 training images and
Karpathy et al.
5,000 images for both validation and testing.

4.2

Implementation Details

Visual feature. We use two visual models for encoding
image: Caﬀe [9] reference model which is pre-trained with
AlexNet [14] and 16-layer VggNet model [33]. We extract
features from last fully connected layer and feed to train
visual-language model with LSTM. Previous work [39, 23]
have demonstrated that with more powerful image models
such as GoogleNet [37] and VggNet [33] can achieve promis-
ing improvements. To make a fair comparison with recent
works, we select the widely used two models for experiments.
Textual feature. We ﬁrst represent each word w within
sentence as one-hot vector, w ∈ RK , K is vocabulary size
built on training sentences and diﬀerent for diﬀerent datasets.
By performing basic tokenization and removing the words
that occurs less than 5 times in the training set, we have
2028, 7400 and 8801 words for Flickr8K, Flickr30K and
MSCOCO dataset vocabularies respectively.

Our work uses the LSTM implementation of [4] on Caﬀe
framework. All of our experiments were conducted on Ubuntu

1http://cs.stanford.edu/people/karpathy/deepimagesent/

14.04, 16G RAM and single Titan X GPU with 12G mem-
ory. Our LSTMs use 1000 hidden units and weights ini-
tialized uniformly from [-0.08, 0.08]. The batch sizes are
150, 100, 100, 32 for Bi-LSTM, Bi-S-LSTM, Bi-F-LSTM
and Bi-LSTM (VGG) models respectively. Models were
trained with learning rate η = 0.01 (except η = 0.005 for
Bi-LSTM (VGG)), weight decay λ is 0.0005 and we used
momentum 0.9. Each model is trained for 18∼35 epochs
with early stopping. The code for this work can be found at
https:// github.com/ deepsemantic/ image captioning.

4.3 Evaluation Metrics

We evaluate our models on two tasks: caption generation
and image-sentence retrieval. In caption generation, we fol-
low previous work to use BLEU-N (N=1,2,3,4) scores [28]:

BN = min(1, e1− r

c ) · e

1
N

(cid:80)N

n=1 log pn

(16)

where r, c are the length of reference sentence and gener-
ated sentence, pn is the modiﬁed n-gram precisions. We
also report METETOR [18] and CIDEr [38] scores for fur-
ther comparison. In image-sentence retrieval (image query
sentence and vice versa), we adopt R@K (K=1,5,10) and
Med r as evaluation metrics. R@K is the recall rate R at
top K candidates and Med r is the median rank of the ﬁrst
retrieved ground-truth image and sentence. All mentioned
metric scores are computed by MSCOCO caption evalua-
tion server2, which is commonly used for image captioning
challenge3.

4.4 Visualization and Qualitative Analysis

The aim of this set experiment is to visualize the proper-
ties of proposed bidirectional LSTM model and explain how
it works in generating sentence word by word over time.

First, we examine the temporal evolution of internal gate
states and understand how bidirectional LSTM units retain
valuable context information and attenuate unimportant in-
formation. Figure 6 shows input and output data, the pat-
tern of three sigmoid gates (input, forget and output) as well
as cell states. We can clearly see that dynamic states are
periodically distilled to units from time step t = 0 to t = 11.
At t = 0, the input data are sigmoid modulated to input
gate i(t) where values lie within in [0,1]. At this step, the
values of forget gates f (t) of diﬀerent LSTM units are zeros.
Along with the increasing of time step, forget gate starts
to decide which unimportant information should be forgot-
ten, meanwhile, to retain those useful information. Then
the memory cell states c(t) and output gate o(t) gradually
absorb the valuable context information over time and make
a rich representation h(t) of the output data.

Next, we examine how visual and textual features are em-
bedded to common semantic space and used to predict word
over time. Figure 7 shows the evolution of hidden units at
diﬀerent layers. For T-LSTM layer, units are conditioned
by textual context from the past and future.
It performs
as the encoder of forward and backward sentences. At M-
LSTM layer, LSTM units are conditioned by both visual
and textual context. It learns the correlations between in-
put word sequence and visual information that encoded by
CNN. At given time step, by removing unimportant infor-
mation that make less contribution to correlate input word

2https://github.com/tylin/coco-caption
3http://mscoco.org/home/

(a) input

(b) input gate

(c) forget gate

(d) cell state

(e) output gate

(f) output

Figure 6: Visualization of LSTM cell. The horizontal axis corresponds to time steps. The vertical axis is cell index. Here we
visualize the gates and cell states of the ﬁrst 32 Bi-LSTM units of T-LSTM in forward direction over 11 time steps.

(a) T-LSTM (forward) units

(b) T-LSTM (backward) units

(c) M-LSTM (forward) units

(d) M-LSTM (backward) units

(e) probability (forward) units

(f) probability (backward) units

A man in a black jacket is walking down the street
2

7 3 2 23

76 8

36

4

38

41
(g) Generated words and corresponding word index in vocabulary

4 5

36

Street the on walking is suit a in man a
2

8 193 2 3 7

41

Figure 7: Pattern of the ﬁrst 96 hidden units chosen at each layer of Bi-LSTM in both forward and backward directions. The
vertical axis presents time steps. The horizontal axis corresponds to diﬀerent LSTM units. In this example, we visualize the
T-LSTM layer for text only, the M-LSTM layer for both text and image and Softmax layer for computing word probability
distribution. The model was trained on Flickr 30K dataset for generating sentence word by word at each time step. In (g),
we provide the predicted words at diﬀerent time steps and their corresponding index in vocabulary where we can also read
from (e) and (f) (the highlight point at each row). Word with highest probability is selected as the predicted word.

and visual context, the units tend to appear sparsity pattern
and learn more discriminative representations from inputs.
At higher layer, embedded multimodal representations are
used to compute the probability distribution of next predict
word with Softmax. It should be noted, for given image, the
number of words in generated sentence from forward and
backward direction can be diﬀerent.

Figure 8 presents some example images with generated
captions. From it we found some interesting patterns of bidi-
rectional captions: (1) Cover diﬀerent semantics, for ex-
ample, in (b) forward sentence captures “couch” and “table”
while backward one describes “chairs” and “table”. (2) De-
scribe static scenario and infer dynamics, in (a) and
(d), one caption describes the static scene, and the other one

presents the potential action or motion that possibly hap-
pen in the next time step. (3) Generate novel sentences,
from generated captions, we found that a signiﬁcant pro-
portion (88% by randomly select 1000 images on MSCOCO
validation set) of generated sentences are novel (not appear
in training set). But generated sentences are highly similar
to ground-truth captions, for example in (d), forward cap-
tion is similar to one of ground-truth captions (“A passenger
train that is pulling into a station”) and backward caption is
similar to ground-truth caption (“a train is in a tunnel by a
station”). It illustrates that our model has strong capability
in learning visual-language correlation and generating novel
sentences.

(a)

(b)

A woman in a tennis court
holding a tennis racket.
A woman getting ready to hit a
tennis ball.

A living room with a couch
and a table.
Two chairs and a table in a living
room.

(c)
A giraﬀe standing in a zoo en-
closure with a baby in the back-
ground.
A couple of giraﬀes are stand-
ing at a zoo.

(d)

A train is pulling into a train sta-
tion.
A train on the tracks at a
train station.

Figure 8: Examples of generated captions for given query image on MSCOCO validation set. Blue-colored captions are
generated in forward direction and red-colored captions are generated in backward direction. The ﬁnal caption is selected
according to equation (13) which selects the sentence with the higher probability. The ﬁnal captions are marked in bold.

Table 1: Performance comparison on BLEU-N(high score is good). The superscript “A” means the visual model is AlexNet
(or similar network), “V” is VggNet, “G” is GoogleNet, “-” indicates unknown value, “‡” means diﬀerent data splits4. The best
results are marked in bold and the second best results with underline. The superscripts are also applicable to Table 2.

Models
NIC[39]G,‡
LRCN[4]A,‡
DeepVS[11]V
m-RNN[23]A,‡
m-RNN[23]V,‡
Hard-Attention[42]V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

B-1
63
-
57.9
56.5
-
67
61.9
64.2
63.0
65.5

Flickr8K
B-3
27.2
-
24.5
25.6
-
31.4
29.7
29.2
29.2
32.0

B-2
41
-
38.3
38.6
-
45.7
43.3
44.3
43.7
46.8

B-4
-
-
16
17.0
-
21.3
20.0
18.6
19.1
21.5

B-1
66.3
58.8
57.3
54
60
66.9
58.9
59.5
58.6
62.1

Flickr30K
B-3
27.7
25.1
24.0
23
28
29.6
25.9
26.9
26.0
28.1

B-2
42.3
39.1
36.9
36
41
43.9
39.3
40.3
39.2
42.6

B-4
18.3
16.5
15.7
15
19
19.9
17.1
17.9
17.4
19.3

B-1
66.6
62.8
62.5
-
67
71.8
63.4
63.7
63.5
67.2

MSCOCO
B-3
B-2
32.9
46.1
30.4
44.2
32.1
45
-
-
35
49
35.7
50.4
30.6
44.7
31.8
45.7
30.7
44.8
35.2
49.2

B-4
24.6
-
23
-
25
25
20.6
21.9
20.6
24.4

4.5 Results on Caption Generation

Now, we compare with state-of-the-art methods. Table 1
presents the comparison results in terms of BLEU-N. Our
approach achieves very competitive performance on evalu-
ated datasets although with less powerful AlexNet visual
model. We can see that increase the depth of LSTM is ben-
eﬁcial on generation task. Deeper variant models mostly
obtain better performance compare to Bi-LSTM, but they
are inferior to latter one in B-3 and B-4 on Flickr8K. We
conjecture it should be the reason that Flick8K is a rela-
tively small dataset which suﬀers diﬃculty in training deep
models with limited data. One of interesting facts we found
is that by stacking multiple LSTM layers is generally supe-
rior to LSTM with fully connected transition layer although
Bi-S-LSTM needs more training time. By replacing AlexNet
with VggNet brings signiﬁcant improvements on all BLEU
evaluation metrics. We should be aware of that a recent
interesting work [42] achieves the best results by integrat-
ing attention mechanism [19, 42] on this task. Although
we believe incorporating such powerful mechanism into our
framework can make further improvements, note that our
current model Bi-LSTMV achieves the best or second best
results on most of metrics while the small gap in performance
between our model and Hard-AttentionV [42] is existed.

4On MSCOCO dataset, NIC uses 4K images for validation
and test. LRCN randomly selects 5K images from MSCOCO
validation set for validation and test. m-RNN uses 4K im-
ages for validation and 1K as test.

The further comparison on METEOR and CIDEr scores
is plotted in Figure 9. Without integrating object detection
and more powerful vision model, our model (Bi-LSTMA)
outperforms DeepVSV [11] in a certain margin. It achieves
19.4/49.6 on Flickr 8K (compare to 16.7/31.8 of DeepVSV )
and 16.2/28.2 on Flickr30K (15.3/24.7 of DeepVSV ). On
MSCOCO, our Bi-S-LSTMA obtains 20.8/66.6 for METEOR/CIDEr,
which exceeds 19.5/66.0 in DeepVSV .

(a) METEOR score

(b) CIDEr score

Figure 9: METEOR/CIDEr scores on diﬀerent datasets.

4.6 Results on Image-Sentence Retrieval

For retrieval evaluation, we focus on image to sentence
retrieval and vice versa. This is an instance of cross-modal
retrieval [6, 30, 41] which has been a hot research subject
in multimedia ﬁeld. Table 2 illustrates our results on diﬀer-
ent datasets. The performance of our models exceeds those
compared methods on most of metrics or matching exist-

Table 2: Comparison with state-of-the-art methods on R@K (high is good) and Med r (low is good). All scores are computed
by averaging the results of forward and backward results. “+O” means the approach with additional object detection.

Image to Sentence

Datasets

Flickr 8K

Flickr 30K

MSCOCO

Methods
DeViSE[7]
SDT-RNN[34]
DeFrag[10]+O
Kiros et al. [13]A
Kiros et al. [13]V
m-RNN[23]A
Mind’s Eye[2]V
DeepVS[11]+O,V
NIC[39]G
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeViSE[7]
SDT-RNN[34]
Kiros et al. [13]A
Kiros et al. [13]V
LRCN[4]A
NIC[39]G
m-RNN[23]A
Mind’s Eye[2]V
DeFrag [10]+O
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV
DeepVS[11]+O,V
Bi-LSTMA
Bi-S-LSTMA
Bi-F-LSTMA
Bi-LSTMV

R@1 R@5
16.5
4.8
18.0
4.5
32.9
12.6
36.2
13.5
40.9
18
37.2
14.5
42.5
17.3
40.6
16.5
-
20
44.7
21.3
43.7
19.6
44.0
19.9
58.2
29.3
18.1
4.5
29.8
9.6
39.2
14.8
50.7
23.0
34.9
14
-
17
40.2
18.4
45.7
18.5
40.2
16.4
48.2
22.2
41.2
18.7
43.0
21
44.4
20
53.1
28.1

16.5
10.8
13.4
11.2
16.6

39.2
28.1
33.1
30
39.4

R@10 Med r
27.3
28.6
44.0
45.7
55
48.5
57.4
54.2
60
56.5
55.7
56.0
69.6
29.2
41.1
50.9
62.9
47
56
50.9
58.1
54.7
61.4
52.6
54.1
55.2
64.2

28
32
14
13
8
11
7
7.6
6
6.5
7
7
3
26
16
10
5
11
7
10
7
8
4.8
8
7
7
4

52.0
38.9
44.7
41.2
52.4

9
18
13
16
9

R@1
5.9
6.1
9.7
10.4
12.5
11.5
15.4
11.8
19
15.1
14.5
14.9
19.7
6.7
8.9
11.8
16.8
-
17
12.6
16.6
10.3
15.2
14.0
15.1
15.1
19.6

10.7
7.8
9.4
8.3
11.6

Sentence to Image
R@5
20.1
18.5
29.6
31.0
37
31.0
40.6
32.1
-
37.8
36.4
37.4
47.0
21.9
29.8
34.0
42.0
-
-
31.2
42.5
31.4
37.7
34.0
35.3
35.8
43.8

R@10 Med r
29.6
29.0
42.5
43.7
51.5
42.4
50.1
44.7
64
50.1
48.3
49.8
60.6
32.7
41.1
46.3
56.5
-
57
41.5
58.9
44.5
50.5
44.0
46.0
46.8
55.8

29
29
15
14
10
15
8
12.4
5
9
10.5
10
5
25
16
13
8
-
8
16
8
13
9.2
14
12
12
7

29.6
22.4
26.5
24.9
30.9

42.2
32.8
37.7
35.1
43.4

14.0
24
19
22
13

ing results. In a few metrics, our model didn’t show better
result than Mind’s Eye [2] which combined image and text
features in ranking (it makes this task more like multimodal
retrieval) and NIC [39] which employed more powerful vision
model, large beam size and model ensemble. While adopt-
ing more powerful visual model VggNet results in signiﬁcant
improvements across all metrics, with less powerful AlexNet
model, our results are still competitive on some metrics, e.g.
R@1, R@5 on Flickr8K and Flickr30K. We also note that on
relatively small dataset Filckr8K, shallow model performs
slightly better than deeper ones on retrieval task, which in
contrast with the results on the other two datasets. As we
explained before, we think deeper LSTM architectures are
better suited for ranking task on large datasets which pro-
vides enough training data for more complicate model train-
ing, otherwise, overﬁtting occurs. By increasing data vari-
ations with our implemented data augmentation techniques
can alleviate it in a certain degree. But we foresee further
signiﬁcant improvement gains as training example grows, by
reducing reliance on augmentation with fresh data. Figure
10 presents some examples of retrieval experiments. For
each caption (image) query, sensible images and descriptive
captions are retrieved.
It shows our models captured the
visual-textual correlation for image and sentence ranking.

4.7 Discussion

Eﬃciency. In addition to showing superior performance,

Table 3: Time costs for testing 10 images on Flickr8K

Bi-LSTM Bi-S-LSTM Bi-F-LSTM

Generation
Retrieval

0.93s
5.62s

1.1s
7.46s

0.97s
5.69s

our models also possess high computational eﬃciency. Table
3 presents the computational costs of proposed models. We
randomly select 10 images from Flickr8K validation set, and
perform caption generation and image to sentence retrieval
test for 5 times respectively. The table shows the averaged
time costs across 5 test results. The time cost of network
initialization is excluded. The costs of caption generation
includes: computing image feature, sampling bidirectional
captions, computing the ﬁnal caption. The time costs for
retrieval considers: computing image-sentence pair scores
(totally 10 × 50 pairs), ranking sentences for each image
query. As can be seen from Table 1, 2 and 3, deep models
have only slightly higher time consumption but yield signiﬁ-
cant improvements and our proposed Bi-F-LSTM can strike
the balance between performance and eﬃciency.

Challenges in exact comparison. It is challenging to
make a direct, extract comparison with related methods due
to the diﬀerences in dataset division on MSCOCO. In prin-
ciple, testing on smaller validation set can lead to better
results, particularly in retrieval task. Since we strictly fol-
low dataset splits as in [11], we compare to it in most cases.
Another challenge is the visual model that utilized for en-

snowboarder
jumping

A man practices
boxing

Two guys one in
a red uniform and
one in a blue uni-
form playing soc-
cer

A soccer player
a player
tackles
from the
other
team

Two young men
tackle an opponent
scrim-
a
during
mage
football
game

Black dog jumping
out of the water
with a stick in his
mouth

A black dog jumps
in a body of water
with a stick in his
mouth

A black dog is
swimming through
water

for

A football player
preparing a foot-
a ﬁeld
ball
goal kick, while
his teammates can
coach watch him

A black dog swim-
ming in the water
with a tennis ball
in his mouth

Figure 10: Examples of image retrieval (top) and caption retrieval (bottom) with Bi-S-LSTM on Flickr30K validation set.
Queries are marked with red color and top-4 retrieved results are marked with green color.

coding image inputs. Diﬀerent models are employed in dif-
ferent works, to make a fair and comprehensive comparison,
we select commonly used AlexNet and VggNet in our work.

Y. Bengio. Learning phrase representations using rnn
encoder-decoder for statistical machine translation.
EMNLP, 2014.

5. CONCLUSIONS

We proposed a bidirectional LSTM model that generates
descriptive sentence for image by taking both history and
future context into account. We further designed deep bidi-
rectional LSTM architectures to embed image and sentence
at high semantic space for learning visual-language models.
We also qualitatively visualized internal states of proposed
model to understand how multimodal LSTM generates word
at consecutive time steps. The eﬀectiveness, generality and
robustness of proposed models were evaluated on numerous
datasets. Our models achieve highly completive or state-
of-the-art results on both generation and retrieval tasks.
Our future work will focus on exploring more sophisticated
language representation (e.g. word2vec) and incorporating
multitask learning and attention mechanism into our model.
We also plan to apply our model to other sequence learning
tasks such as text recognition and video captioning.

6. REFERENCES
[1] D. Bahdanau, K. Cho, and Y. Bengio. Neural machine
translation by jointly learning to align and translate.
ICLR, 2015.

[2] X. Chen and C. Lawrence Zitnick. Mind’s eye: A
recurrent visual representation for image caption
generation. In CVPR, pages 2422–2431, 2015.

[3] K. Cho, B. Van Merri¨enboer, C. Gulcehre,

D. Bahdanau, F. Bougares, H. Schwenk, and

[4] J. Donahue, L. A. Hendricks, S. Guadarrama,
M. Rohrbach, S. Venugopalan, K. Saenko, and
T. Darrell. Long-term recurrent convolutional
networks for visual recognition and description. In
CVPR, pages 2625–2634, 2015.

[5] H. Fang, S. Gupta, F. Iandola, R. Srivastava, L. Deng,
P. Doll´ar, J. Gao, X. He, M. Mitchell, and J. Platt.
From captions to visual concepts and back. In CVPR,
pages 1473–1482, 2015.

[6] F. Feng, X. Wang, and R. Li. Cross-modal retrieval

with correspondence autoencoder. In ACMMM, pages
7–16. ACM, 2014.

[7] A. Frome, G. Corrado, J. Shlens, S. Bengio, J. Dean,
and T. Mikolov. Devise: A deep visual-semantic
embedding model. In NIPS, pages 2121–2129, 2013.
[8] A. Graves, A. Mohamed, and G. E. Hinton. Speech
recognition with deep recurrent neural networks. In
ICASSP, pages 6645–6649. IEEE, 2013.

[9] Y. Jia, E. Shelhamer, J. Donahue, S. Karayev,

J. Long, R. Girshick, S. Guadarrama, and T. Darrell.
Caﬀe: Convolutional architecture for fast feature
embedding. In ACMMM, pages 675–678. ACM, 2014.

[10] A. Karpathy, A. Joulin, and F-F. Li. Deep fragment

embeddings for bidirectional image sentence mapping.
In NIPS, pages 1889–1897, 2014.

[11] A. Karpathy and F-F. Li. Deep visual-semantic
alignments for generating image descriptions. In
CVPR, pages 3128–3137, 2015.

[12] R. Kiros, R. Salakhutdinov, and R. Zemel.

Multimodal neural language models. In ICML, pages
595–603, 2014.

[13] R. Kiros, R. Salakhutdinov, and R. Zemel. Unifying
visual-semantic embeddings with multimodal neural
language models. arXiv preprint arXiv:1411.2539,
2014.

[14] A. Krizhevsky, I. Sutskever, and G. E. Hinton.

Imagenet classiﬁcation with deep convolutional neural
networks. In NIPS, pages 1097–1105, 2012.

a method for automatic evaluation of machine
translation. In ACL, pages 311–318. ACL, 2002.
[29] R. Pascanu, C. Gulcehre, K. Cho, and Y. Bengio. How
to construct deep recurrent neural networks. arXiv
preprint arXiv:1312.6026, 2013.

[30] J. C. Pereira, E. Coviello, G. Doyle, N. Rasiwasia,
G. Lanckriet, R. Levy, and N. Vasconcelos. On the
role of correlation and abstraction in cross-modal
multimedia retrieval. IEEE Trans. on Pattern Analysis
and Machine Intelligence(PAMI), 36(3):521–535, 2014.

[15] G. Kulkarni, V. Premraj, V. Ordonez, S. Dhar, S. Li,

[31] C. Rashtchian, P. Young, M. Hodosh, and

Y. Choi, A. C. Berg, and T. Berg. Babytalk:
Understanding and generating simple image
descriptions. IEEE Trans. on Pattern Analysis and
Machine Intelligence(PAMI), 35(12):2891–2903, 2013.
[16] P. Kuznetsova, V. Ordonez, A. C. Berg, T. Berg, and
Y. Choi. Collective generation of natural image
descriptions. In ACL, volume 1, pages 359–368. ACL,
2012.

[17] P. Kuznetsova, V. Ordonez, T. Berg, and Y. Choi.
Treetalk: Composition and compression of trees for
image descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2(10):351–362,
2014.

[18] M. Lavie. Meteor universal: language speciﬁc

translation evaluation for any target language. ACL,
page 376, 2014.

[19] Y. LeCun, Y. Bengio, and G. E. Hinton. Deep
learning. Nature, 521(7553):436–444, 2015.
[20] S. Li, G. Kulkarni, T. L. Berg, A. C. Berg, and

Y. Choi. Composing simple image descriptions using
web-scale n-grams. In CoNLL, pages 220–228. ACL,
2011.

[21] T-Y. Lin, M. Maire, S. Belongie, J. Hays, P. Perona,
D. Ramanan, P. Doll´ar, and C. Zitnick. Microsoft
coco: Common objects in context. In ECCV, pages
740–755. Springer, 2014.

[22] Xin Lu, Zhe Lin, Hailin Jin, Jianchao Yang, and

James Z Wang. Rapid: Rating pictorial aesthetics
using deep learning. In ACMMM, pages 457–466.
ACM, 2014.

[23] J. H. Mao, W. Xu, Y. Yang, J. Wang, Z. H. Huang,
and A. Yuille. Deep captioning with multimodal
recurrent neural networks (m-rnn). ICLR, 2015.
[24] T. Mikolov, M. Karaﬁ´at, L. Burget, J. Cernock`y, and
S. Khudanpur. Recurrent neural network based
language model. In INTERSPEECH, volume 2,
page 3, 2010.

[25] T. Mikolov, S. Kombrink, L. Burget, J. H. ˇCernock`y,
and S. Khudanpur. Extensions of recurrent neural
network language model. In ICASSP, pages
5528–5531. IEEE, 2011.

[26] M. Mitchell, X. Han, J. Dodge, A. Mensch, A. Goyal,
A. Berg, K. Yamaguchi, T. Berg, K. Stratos, and
H. Daum´e III. Midge: Generating image descriptions
from computer vision detections. In ACL, pages
747–756. ACL, 2012.

[27] J. Ngiam, A. Khosla, M. Kim, J. Nam, H. Lee, and

A. Ng. Multimodal deep learning. In ICML, pages
689–696, 2011.

J. Hockenmaier. Collecting image annotations using
amazon’s mechanical turk. In NAACL HLT
Workshop, pages 139–147. Association for
Computational Linguistics, 2010.

[32] K. Simonyan and A. Zisserman. Two-stream

convolutional networks for action recognition in
videos. In NIPS, pages 568–576, 2014.
[33] K. Simonyan and A. Zisserman. Very deep

convolutional networks for large-scale image
recognition. arXiv preprint arXiv:1409.1556, 2014.
[34] R. Socher, A. Karpathy, Q. V. Le, C. D. Manning,

and A. Y. Ng. Grounded compositional semantics for
ﬁnding and describing images with sentences. Trans.
of the Association for Computational
Linguistics(TACL), 2:207–218, 2014.

[35] N. Srivastava and R. Salakhutdinov. Multimodal

learning with deep boltzmann machines. In NIPS,
pages 2222–2230, 2012.

[36] I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to

sequence learning with neural networks. In NIPS,
pages 3104–3112, 2014.

[37] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed,
D. Anguelov, D. Erhan, V. Vanhoucke, and
A. Rabinovich. Going deeper with convolutions. In
CVPR, pages 1–9, 2015.

[38] R. Vedantam, Z. Lawrence, and D. Parikh. Cider:
Consensus-based image description evaluation. In
CVPR, pages 4566–4575, 2015.

[39] O. Vinyals, A. Toshev, S. Bengio, and D. Erhan. Show
and tell: A neural image caption generator. In CVPR,
pages 3156–3164, 2015.

[40] Zhangyang Wang, Jianchao Yang, Hailin Jin, Eli

Shechtman, Aseem Agarwala, Jonathan Brandt, and
Thomas S. Huang. Deepfont: Identify your font from
an image. In ACMMM, pages 451–459. ACM, 2015.

[41] X.Jiang, F. Wu, X. Li, Z. Zhao, W. Lu, S. Tang, and
Y. Zhuang. Deep compositional cross-modal learning
to rank via local-global alignment. In ACMMM, pages
69–78. ACM, 2015.

[42] K. Xu, J. Ba, R. Kiros, A. Courville,

R. Salakhutdinov, R. Zemel, and Y. Bengio. Show,
attend and tell: Neural image caption generation with
visual attention. ICML, 2015.

[43] P. Young, A. Lai, M. Hodosh, and J. Hockenmaier.
From image descriptions to visual denotations: New
similarity metrics for semantic inference over event
descriptions. Trans. of the Association for
Computational Linguistics(TACL), 2:67–78, 2014.

[44] W. Zaremba and I. Sutskever. Learning to execute.

[28] K. Papineni, S. Roukos, T. Ward, and W. Zhu. Bleu:

arXiv preprint arXiv:1410.4615, 2014.

[45] M. D. Zeiler and R. Fergus. Visualizing and

understanding convolutional networks. In ECCV,
pages 818–833. Springer, 2014.

