Explorations in Homeomorphic Variational Auto-Encoding

Luca Falorsi * 1 Pim de Haan * 1 Tim R. Davidson * 1 Nicola De Cao 1 Maurice Weiler 1
Patrick Forré 1 Taco S. Cohen 1 2

8
1
0
2
 
l
u
J
 
2
1
 
 
]
L
M

.
t
a
t
s
[
 
 
1
v
9
8
6
4
0
.
7
0
8
1
:
v
i
X
r
a

Abstract

The manifold hypothesis states that many kinds
of high-dimensional data are concentrated near
a low-dimensional manifold. If the topology of
this data manifold is non-trivial, a continuous en-
coder network cannot embed it in a one-to-one
manner without creating holes of low density in
the latent space. This is at odds with the Gaussian
prior assumption typically made in Variational
Auto-Encoders (VAEs), because the density of a
Gaussian concentrates near a blob-like manifold.

In this paper we investigate the use of manifold-
valued latent variables. Speciﬁcally, we focus
on the important case of continuously differen-
tiable symmetry groups (Lie groups), such as the
group of 3D rotations SO(3). We show how a
VAE with SO(3)-valued latent variables can be
constructed, by extending the reparameterization
trick to compact connected Lie groups. Our exper-
iments show that choosing manifold-valued latent
variables that match the topology of the latent data
manifold, is crucial to preserve the topological
structure and learn a well-behaved latent space.

1. Introduction

Many complex probability distributions can be represented
more compactly by introducing latent variables. Intuitively,
the idea is that there is some simple underlying latent struc-
ture, which is mapped to the observation space by a po-
tentially complex nonlinear function. It will come as no
surprise then, that most research effort has aimed at using
maximally simple priors for the latent variables (e.g. Gaus-
sians), combined with ﬂexible likelihood functions (e.g.
based on neural networks).

However, it is not hard to see (Fig. 1.1) that if the data is con-

*Equal

contribution

of Amsterdam
2Qualcomm AI Research. Correspondence to: Luca Falorsi
<luca.falorsi@gmail.com>.

1University

Presented at the ICML 2018 workshop on Theoretical Foundations
and Applications of Deep Generative Models, Stockholm, Sweden.
Copyright 2018 by the author(s).

Figure 1.1. An example of problems that arise in mapping mani-
folds not diffeomorphic to each other. Notice that in the illustrated
example the ‘holes’ in the ﬁrst manifold, prevent a smooth map-
ping to the second.

centrated near a low-dimensional manifold with non-trivial
topology, there is no continuous and invertible mapping to
a blob-like manifold (the region where prior mass is con-
centrated). We believe that for purposes of representation
learning, the embedding map (encoder) should be homeo-
morphic (i.e. continuous and invertible, with continuous in-
verse), which means that although dimensionality reduction
and geometrical simpliﬁcation (ﬂattening) may be possible,
the topological structure should be preserved.

Once could encode such a manifold in a higher dimensional
ﬂat space with a regular variational auto-encoder (VAE,
Kingma & Welling (2013); Rezende et al. (2014)), rather
than learning a homeomorphism. This has two disadvan-
tages. The prior on the ﬂat space will put density outside
of the embedding and traversals along the extra dimensions
that are normal to the manifold will either leave the decod-
ing invariant, or move out of the data manifold. This is
because at each point there will be many more degrees of
freedom than the dimensionality of the manifold.

In this paper we investigate this idea for the special case of

Homeomorphic VAE

Lie groups, which are symmetry groups that are simultane-
ously differentiable manifolds. Lie groups include rotations,
translations, scaling, and other geometric transformations,
which play an important role in many application domains
such as robotics and computer vision. More speciﬁcally,
we show how to construct1 a VAE with latent variables
that live on a Lie group, which is done by generalizing the
reparameterization trick.

We will describe an approach for reparameterizing densities
on SO(3), the group of 3D rotations, which can be extended
to general compact and connected Lie group VAEs in a
straightforward manner. The primary technical difﬁculty
in the construction of this theory is to show that the push-
forward measure induced by our reparameterization has a
density that is absolutely continuous w.r.t. the Haar measure.
Moreover, we show how to construct the encoder such that
it can learn a homeomorphic map from the data manifold to
the mean parameter of the posterior. Finally, we propose a
decoder that uses the group action to further encourage the
latent space to respect the group structure.

We perform experiments on two types of synthetic data:
SO(3) embedded into a high dimensional space through
its group representation, and images of 3D rotations of a
single colored cube. We ﬁnd that a theoretically sound
architecture is capable of continuously mapping the data
manifold to the latent space. On the other hand, models that
do not respect topological structure, and in particular those
with a standard Gaussian latent space, show discontinuities
when trajectories in the latent space are visualized. To better
study this phenomenon, we introduce a way to measure
the continuity of the embedding based on the concept of
Lipschitz continuity. We empirically demonstrate that only
a manifold-valued latent variable with the required topolog-
ical structure is capable of fully solving the difﬁcult task of
the more complicated experiment.

Our main contributions in this work are threefold:

1. A reparameterization trick for distributions on the

SO(3) group of rotations in three dimensions.

2. An encoder for the mean parameter that learns a home-
omorphism between the SO(3) manifold embedded in
the data and SO(3) itself.

3. A decoder that uses the group action to respect the

group structure.

2. Preliminary Concepts

In this section we will ﬁrst cover a number of preliminary
concepts that will be used in the rest of the paper.

1Our implementation is available at https://github.

com/pimdh/lie-vae.

2.1. Variational Auto-Encoders

The VAE is a latent variable model, in which x denotes
a set of observed variables, z stochastic latent variables,
and p(x, z) = p(x|z)p(z) a parameterized model of the
joint distribution called the generative model. Given a
dataset X = {x1, · · · , xN }, we typically wish to maxi-
mize the average marginal log-likelihood 1
N log p(X) =
i=1 log (cid:82) p(xi, zi)dz, w.r.t. the parameters. However
1
N
when the model is parameterized by neural networks, the
marginalization of this expression is generally intractable.
One solution to overcome this issue is applying variational
inference in order to maximize the Evidence Lower Bound
(ELBO) for each observation:

(cid:80)N

log p(x) = log

p(x, z)dz

(cid:90)

≥ Eq(z)[log p(x|z)] − KL(q(z)||p(z)),

(1)

where the approximate posterior q(z) belongs to the varia-
tional family Q. To make inference scalable an inference
network q(z|x) is introduced that outputs a probability dis-
tribution for each data point x, leading to the ﬁnal objective

L(x; θ) = Eq(z|x)[log p(x|z)] − KL(q(z|x)||p(z)), (2)

with θ representing the parameters of p and q. The ELBO
can be efﬁciently approximated for continuous latent vari-
able z by Monte Carlo estimates using the reparameteri-
zation trick of q(z|x) (Kingma & Welling, 2013; Rezende
et al., 2014).

2.2. Lie Groups and Lie Algebras

Lie Group A group is a set equipped with a product that
follows the four group axioms: the product is closed and
associative, there exists an identity element, and every group
element has an inverse. This is closely linked to symmetry
transformations that leave some property invariant. For ex-
ample, composing two symmetry transformations should
still maintain the invariance. A Lie group G has additional
structure, as its set is also a smooth manifold. This means
that we can, at least in local regions, describe group ele-
ments continuously with parameters. The number of pa-
rameters equals the dimension of the group. We can see
(connected) Lie groups as continuous symmetries where we
can continuously traverse between group elements2.

Lie Algebra The Lie algebra g, of a N dimensional Lie
group is its tangent space at the identity, which is a vector
space of N dimensions. We can see the algebra elements
as inﬁnitesimal generators, from which all other elements
in the group can be created. For matrix Lie groups we can
represent vectors v in the tangent space as matrices v×.

2We refer the interested reader to (Hall, 2003).

Homeomorphic VAE

Exponential Map The structure of the algebra creates a
map from an element of the algebra to a vector ﬁeld on
the group manifold. This gives rise to the exponential map
exp : g → G which maps an algebra element to the group
element at unit length from the identity along the ﬂow of
the vector ﬁeld. The zero vector is thus mapped to the
identity. For compact connected Lie groups, such as SO(3),
the exponential map is surjective.

2.3. The group SO(3)

The special orthogonal Lie group of three dimensional rota-
tions SO(3) is deﬁned as:

SO(3) := {R ∈ GL(R3) : R(cid:62)R = I ∧ det(R) = 1} (3)

where GL is the general linear group, which is the set of
square invertible matrices under the operation of matrix mul-
tiplication. Note that SO(3) is not homeomorphic to RN ,
since on RN every continuous path can be continuously con-
tracted to a point, while this is not true for SO(3). Consider
for example a full rotation around a ﬁxed axis.

The elements of Lie algebra so(3) of group SO(3), are
represented by the 3 dimensional vector space of the skew-
symmetric 3 × 3 matrices. We choose a basis for the algebra:

L1,2,3 :=





0
0 0
0 0 −1
0
0 1





 ,



0
0
−1

0 1
0 0
0 0





 ,

0 −1
0
1

0
0


0
0
 (4)
0

This provides a vector space isomorphism between R3 and
so(3), written as [ · ]× : R3 → so(3).

Assuming the decomposition v× = θu×, s.t.
θ ∈
R≥0, (cid:107)u(cid:107) = 1, the exponential map is given by the Ro-
drigues rotation formula (Rodrigues, 1840):

exp(v×) = I + sin(θ)u× + (1 − cos(θ))u2
×

(5)

Since SO(3) is a compact and connected Lie group this map
is surjective, however it is not injective.

3. Reparameterizing SO(3)

In this section we will explain our SO(3) reparameterization
trick by analogy to the classic version described in (Kingma
& Welling, 2013; Rezende et al., 2014). An overview of
the different steps and their relation to the classical case are
given in Figure 2.1.

We sample from a scale-reparameterizable distribution
r(v|σ) on R3 that is concentrated around the origin. Due
to the isomorphism between R3 and so(3) this can be
identiﬁed with a sample v× from the Lie algebra so(3).
Next we apply the exponential map to obtain a sample
R = exp(v×) ∼ ˆq(R|σ) of the group as visualized in

Figure 2.1 (a) to (b). Since the distribution r(v|σ) is concen-
trated around the origin, the distribution of ˆq(R|σ) will be
concentrated around the group identity. In order to change
the location of the distribution ˆq, we left multiply R by
another element Rµ, see Figure 2.1 (b) to (c).
To see the connection with the classical case, identify RN
under addition as a Lie group, with the Lie algebra iso-
morphic to RN . As the group and the algebra are in this
case isomorphic, the step of taking the exponential map can
be taken as the identity operation such that r = ˆq. The
multiplication with a group element to change the location
corresponds to a translation by µ.

One critical complication is that it is not obvious that the
measure we deﬁned above through the exp map has a density
function p : SO(3) → R+. For this to be the case we need
the constructed measure to be absolutely continuous with
respect to the Haar measure ν, the natural measure on the
Lie group. This is proven by the following theorem.
Theorem 1. Let (R3, λ, B[R3]) the real space, provided
with the Lebesgue measure on the Borel algebra on R3. Let
(SO(3), ν, B[SO(3)]) the group of 3 dimensional rotations,
provided with the normalized Haar measure ν on the Borel
σ-algebra on SO(3). Consider then the probability measure
µ : B[R3] → [0, 1] absolutely continuous w.r.t λ, with
density r. Consider the exponential map exp : R3 → SO(3)
that is differentiable, thus continuous, thus measurable. Let
then exp∗(µ) be the pushforward of µ by the exp function.
then exp∗(µ) is absolutely continuous with respect of the
Haar measure ν (exp∗(µ) (cid:28) ν).

Proof. See Appendix B

As further derived in Appendix B this implies the pushfor-
ward measure on SO(3) to be absolutely continuous w.r.t.
to the Haar measure where the density

ˆq(R|σ) =

(θ(R) + 2kπ)

σ

(cid:18) log(R)
θ(R)

r

(cid:88)

k∈Z

(cid:12)
(cid:12)
(cid:12)
(cid:12)

(cid:19) (θ(R) + 2kπ)2
3 − tr(R)
(6)

,

is deﬁned almost everywhere. Here R ∈ SO(3) and

θ(R) = (cid:107) log(R)(cid:107) = cos−1

(cid:19)

(cid:18) tr(R) − 1
2

(7)

Further, log(·) is deﬁned as a principal branch and maps
back the group element to the unique Lie algebra element
next to the origin. Notice that even if the density is singular
at R = I, it still integrates to 1. After rotating R by left
multiplying with another SO(3) element Rµ, we obtain the
ﬁnal sample:

Rz ∼ q(Rz|Rµ, σ) = ˆq(R(cid:62)

µ Rz|σ),

(8)

where the second step is valid because of the left invariance
of the Haar measure.

Homeomorphic VAE

Figure 2.1. Illustration of our extended reparameterization trick in comparison to the classic reparameterization trick.

Kullback-Leibler Divergence The KL divergence, or rel-
ative entropy can be decomposed into the entropy and the
cross-entropy terms, KL(q||p) = H(q, p) − H(q). Since
the Haar measure is invariant to left multiplication, we can
compute the entropy of the distribution ˆq instead of q. As
we have the expression of the density, the entropy can be
computed using Monte Carlo samples:

H(q) = H(ˆq) ≈ −

log ˆq(Ri|σ), Ri ∼ ˆq(Ri|σ)

1
N

N
(cid:88)

i=1

= −

log ˆq(exp(vi)|σ)

1
N

1
N

N
(cid:88)

i=1

N
(cid:88)

i=1

= −

log

(cid:88)

k∈Z

r

(cid:16) vi
(cid:107)vi(cid:107)

((cid:107)vi(cid:107) + 2kπ)2
2 − 2 cos((cid:107)vi(cid:107))

((cid:107)vi(cid:107) + 2kπ)|σ

(cid:17)

·

, vi ∼ r(vi|σ)

(9)

Notice that the last expression only depends on the samples
taken on the Lie algebra. We found that one sample sufﬁces
when mini-batches are used. In general the cross-entropy
term can be similarly approximated by MC estimates. How-
ever, in the special but important case of a uniform prior, p,
the cross-entropy reduces to: H(p, q) = − log (cid:0) 1
8π2

(cid:1).

4. Encoder and Decoder networks

Having deﬁned the reparameterizable density q(Rz|Rµ, σ),
we need to design encoder networks which map elements
from the input space X to the reparameterization parameters
Rµ, σ and decoder networks which map group elements to
the output prediction.

4.1. Homeomorphic Encoder

We split the encoder network in two parts encµ and encσ,
which predict reparameterization parameters Rµ and σ re-
spectively. Since σ are parameters of a distribution in R3,
the corresponding network encσ does not pose any problems
and can be chosen similarly as in classical VAEs. However,
special attention needs to be paid to designing encµ which
predicts a group element Rµ ∈ SO(3).

We consider the data as lying in a lower dimensional mani-
fold M, embedded in the input space X . In our particular
problem the manifold M is assumed to be generated by
SO(3), acting on a canonical object and a subsequent pro-
jection into ambient space (e.g. pixel space) X which, for
simplicity we assume to be injective. This means that we
can make the simplifying assumption that SO(3) can be re-
covered from its image in X , i.e. that the map SO(3) → M
is a homeomorphism. The encoder is now meant to learn
the inverse map, i.e. to learn a map from X to SO(3), which
when restricted to M is a homeomorphism and thus pre-
serves the topological structure of SO(3).

In general there is no standard way to deﬁne and parameter-
ize the class of functions which are guaranteed to have these
properties by design via a neural network. Instead we will
give a general way to build encµ capable of learning such a
mapping. We divide the encoder network in two functions:
encµ = π ◦ f , where f : X → Y, for some space Y, is
parametrized by a neural network, and π : Y → SO(3) is
a ﬁxed surjective function. Not any space Y or function π
is suited: since neural networks can only model continu-
ous functions, a necessary condition on Y for encµ to be
able to learn to be a homeomorphism (when its domain

Homeomorphic VAE

X is restricted to M), is that there exists an embedding
i : SO(3) → Y. Then by deﬁnition a function π exist, such
that π|i(SO(3)) = i−1|i(SO(3)) is a homeomorphism. Any
extension of π|i(SO(3)) to Y is a suitable candidate. More-
over, if we choose X = Rn and Y = Rm for some n, m,
then some continuous f : X → Y exists (which we can
approximate with neural networks) such that an appropriate
encµ = π ◦ f exist. Several choices for Y and π are pro-
posed in Appendix D and investigated in the experimental
section 6.

4.2. Group Action Decoder

Our decoder p(x|Rz) must be capable to map a group ele-
ment and optionally additional latent structure back to the
original high dimensional input space. When the factor of
variation in the input is the pose of an object, and we learn
a latent variable Rz ∈ SO(3), we desire that a transforma-
tion R ∈ SO(3) applied to a latent object representation
z results in a corresponding transformation of the pose of
the decoded object. The task of the decoder is thus to learn
a three dimensional representation of the object, to rotate
it according to the latent variable and ﬁnally to project it
back to the two dimensional frame of the input image. A
naive approach could be to simply provide the 9 elements of
the rotation matrix to a neural network. However, although
it may learn to reconstruct the input well, it provides no
guarantee that the latent space accurately reﬂects the pose
variations of the object. Therefore, we like to make the
method more explicit.

Hypothetically, one could learn a vector-valued signal on the
sphere, f : S2 → RN , to represent the three dimensional
object in the input, as 3D shapes can be well represented by
its information projected to a sphere (Cohen et al., 2018a).
The decoder can rotate this signal with the latent variable,
before projecting it back to pixel space. A major downside
of this approach is that parameterizing and projecting a
function on the sphere is highly non-trivial.

Alternatively, we propose a method based on the represen-
tation theory of groups (Hall, 2003). Rather than learning
the function f , we directly learn its (band-limited) Fourier
modes, which form a simple vector space. It can be shown
(Chirikjian & Kyatkin, 2000) that rotations of a signal on the
sphere correspond to a linear transformation of the Fourier
modes. The transformed Fourier modes are subsequently
fed through an image generative network, and the linear
transformation is the Wigner-D-matrix, which is a function
of the SO(3) element. Technically, the Wigner-D-matrices
form representations of the group. This means that as map-
ping to the linear transformations is a homomorphism, it
preserves the group structure: D(g)D(g(cid:48)) = D(gg(cid:48)), for
g, g(cid:48) ∈ SO(3) and D(g) a Wigner-D-matrix. This method
encourages the latent space to represent the actual pose of

Figure 4.1. The encoder infers the R ∈ SO(3) and Fourier modes
ˆf if working with multiple objects, otherwise ˆf is a parameter.
Shown is the commutative diagram between taking the Inverse
Fourier Transform, rotating the result and taking the Fourier Trans-
form, and acting with the group representation W on ˆf . The
decoder maps the transformed ˆf (cid:48) to pixels.

the input, while only requiring the construction of the W
matrices and performing a linear transformation. We refer
to Figure 4.1 and Appendix F for details.

An additional advantage is that this decoder allows for dis-
entangling of content and pose, as it is forced to encode the
pose in a meaningful way. The Fourier modes are in that
case also generated by the encoder. We leave this for future
work.

5. Related Work

As VAEs utilize VI to recover some distribution on a latent
manifold responsible for generating the observed data, the
majority of extensions is focused on increasing the ﬂexi-
bility of the prior and approximate posterior. Although the
majority of approaches make use of a normal Gaussian prior,
recently there has been a surge to provide additional options
to offset some of this distribution’s perceived limitations.
Tomczak & Welling (2017) propose to directly tie the prior
to the approximate posterior and learn it as a mixture over ap-
proximate posteriors. Nalisnick & Smyth (2017) introduce
a non-parametric prior applying a truncated stick-breaking
method. Research to support discrete latent variables was
done in Jang et al. (2017); Maddison et al. (2017), while
in Naesseth et al. (2017); Figurnov et al. (2018) recently
novel techniques were introduced to reparameterize a suite
of continuous distributions. In (Davidson et al., 2018), the
reparameterization technique of Naesseth et al. (2017) is
extended to explore the properties of the hyperspherical von
Mises-Fisher distribution to better capture intrinsically hy-
perspherical data. This is done in the context of avoiding
manifold mismatches, and as such is closely related to the
motivation of this work.

Homeomorphic VAE

(a) Ground truth

(b) SO(3)-action-s2s2

(c) SO(3)-action-alg

(d) SO(3)-action-q

(e) SO(3)-action-s2s1

(f) N -action-3-dim

(g) S-action-3-dim

Figure 4.2. The latent encoding of a S1 trajectory in the Toy data set. The SO(3) elements are mapped to R9 by taking the rotation matrix
elements and are subsequently mapped to 3D by Principal Component Analysis.

The predominant procedure to generate a more complex ap-
proximate posterior is through normalizing ﬂows (Rezende
& Mohamed, 2015), in which a class of invertible transfor-
mations is applied sequentially to a reparameterizable den-
sity. This general idea has later been extended Kingma et al.
(2016); Berg et al. (2018), to improve ﬂexibility even further.
As this framework does not hold any speciﬁc distributional
requirements on the prior besides being reparameterizable,
it would be interesting to investigate possible applications
to SO(3) in future work.

The problem of deﬁning distributions on homogeneous
spaces, including Lie groups, was investigated in (Chirikjian
& Kyatkin, 2000; Chirikjian, 2010; Chirikjian & Kyatkin,
2016; Chirikjian, 2012). Cohen & Welling (2015) devised
harmonic exponential families which are a powerful fam-
ily of distributions deﬁned on homogeneous spaces. These
works did not concentrate on making the distributions repa-
rameterizable.

Rendering complex scenes from multiple poses has been ex-
plored in (Eslami et al., 2018). However, this work assumes
access to ground truth poses and does not do unsupervised
pose learning as in the presented framework.

The idea of incorporating prior knowledge on mathematical
structures into machine learning models has proven fruitful
in many works. Cohen et al. (2018a) adapt convolutional
networks to operate on spherical and SO(3) valued data.
Equivariant networks, investigated in Cohen & Welling
(2016; 2017); Worrall et al. (2017); Weiler et al. (2018);
Cohen et al. (2018b) reduce the complexity of a learning
task by taking a quotient over group orbits which explain a
subset of dimensions of the data manifold.

6. Experiments

We perform two experiments to investigate the importance
of using a homeomorphic parameterization of the VAE in
recovering the original underlying SO(3) manifold. In both
experiments we explore three main axes of comparison:
(1) manifold topology, (2) decoder architecture, and (3)
speciﬁcally for the SO(3) models we compare different
mean parameterizations as discussed in section 4.1. For
each model we compute a tight bound on the negative log
likelihood (NLL) through importance sampling following
Burda et al. (2016).

For manifold topology we examine VAEs with the Gaussian
parameterization (N -VAE), the hyperspherical parameter-
ization of Davidson et al. (2018) (S-VAE), and the SO(3)
latent variable discussed above. The two decoder variants
are a simple MLP versus the group action decoder described
in section 4.2. Lastly we explore mean parameterizations
through unit Quaternions (q), the Lie algebra (alg), S 2 × S 1
(s2s1), and S 2 ×S 2 (s2s2). These parameterizations are cho-
sen to be either valid (S 2 × S 2) or invalid (q, alg, S 2 × S 1)
for the purpose of investigating the soundness of our theoret-
ical considerations and to compare their behaviour. Details
and derivations on the properties of these different parame-
terizations can be found in Appendix D.

6.1. Toy experiment

The simplest way of creating a non-linear embedding of
SO(3) in a high dimensional space is through the represen-
tation as discussed in Section 4.2. The data is created in
the following way: a ﬁxed representation W : SO(3) →
RN ×N is chosen, in this experiment this is three copies

Homeomorphic VAE

(a) 10 dimensional Normal latent space with MLP decoder

(b) SO(3) latent space with S2S2 mean and action decoder

Figure 6.1. Three interpolations of two models. Discontinuities in the reconstructions of the Normal model are outlines by a dashed line.

of the direct sum of the Wigner-D-matrices up to order 3,
making the embedding space R64. Subsequently a single
element v of R64 is generated. The data set now consists
of the vectors W (R)v, where R ∈ SO(3) sampled uni-
formly. Since the representation is faithful (W is injective)
the data points lie on a 3 dimensional submanifold of R64
homeomorphic to SO(3).

In order to verify the ability of the models to correctly learn
to encode from the embedded manifold to the manifold
itself, we learn various variational and non-variational auto-
encoders on this data set. The encoder is a 3 layer MLP,
and for the decoder we use the group action decoder of
Section 4.2. The same representation W is used as in the
data generation, but we learn v. In addition to the SO(3)
models, we use a 3 dimensional normal, which we map to
SO(3) using the ZYZ-Euler angles, and a S3 von Mises-
Fisher, which we map to SO(3) by identifying S3 as the
unit quaternions.

Results The quantitative results are shown in Table 1. We
observe that the choice for the mean parametrization signif-
icantly impacts the ability of the model to correctly learn
the manifold. The S 2 × S 2 method strongly outperforms
the competing methods in the non-variational Auto-Encoder
achieving near-perfect reconstructions. Additionally, the
metric indicating the continuity of the encoder, which we
deﬁne in Appendix E, shows it is the only model that does
not have discontinuities in the latent space. These results
are in line with our theoretical prediction outlined in Section
4.1 and Appendix D.

Algorithm

SO(3)-q
SO(3)-alg
SO(3)-s2s1
SO(3)-s2s2
N -3-dim
S-3-dim

VAE
NLL recon KL

AE

recon

disc.

10.9
13.4
11.0
10.7
18.9
13.6

2.32
6.24
2.12
1.81
9.91
1.79

9.16
9.36
9.41
9.21
10.3
11.8

0.29
4.02
0.29
0.01
14.7
0.27

.992
1.
1.
0.
1.
1.

Table 1. Summary of results for the toy experiment for Variational
Auto-Encoder (VAE) and Auto-Encoder (AE), including the dis-
continuity metric (disc.).

taking a S1 subgroup of SO(3) and making a S1 subman-
ifold in the data space using the same process with which
the data was generated. This embedded trajectory is then
encoded and reconstructed. The trajectory is divided in four
equally sized partitions, each shown in a different color. We
clearly see that only the S 2 × S 2 method is able to learn a
continuous latent space.

Moreover, the worst performing models are the 3 dimen-
sional N and SO(3) algebra mean models. Interestingly,
these share that at one intermediate point SO(3) is repre-
sented by R3. This indicates that using ﬂat space to rep-
resent a non-trivial manifold results in a poorly structured
latent space and worse reconstruction performance and Log
Likelihoods.

6.2. Sphere-Cube

The qualitative results in Figure 4.2 and Figures A.1, A.2 in
Appendix A tell a similar story. These plots are created by

For this experiment we learn auto-encoders on renderings of
a cube. The cube is made highly asymmetrical through the

Homeomorphic VAE

colors of the faces and the colored spheres at the vertices.
This should make it easier for the encoder to detect the
orientation. This sphere-cube is then rotated by applying
uniformly sampled group elements from SO(3), to create
a training set of 1M images. Ideally the model learns to
correctly represent these encodings in the latent space.

The encoder consists of 5 convolutional layers, followed by
one of the mean encoders and reparameterization methods.
The decoder uses either the group action or a 3 layer MLP,
both followed by a 5 deconvolutional layers. In order to
balance reconstruction and the KL divergence in a controlled
manner, we follow Burgess et al. (2018) and replace the
negative KL term in the original VAE loss with a squared
difference of the computed KL value and a target value. We
found that a target value of 7 early in training to 15 at the
end of the training gave good results. This allows the model
to ﬁrst organize the space and later become more certain of
its predictions. We found that two additional regularizing
loss terms were needed to correctly learn the latent space.
Details can be found in Appendix G.

Results Quantitative results comparing the best perform-
ing SO(3) parameterization to N -VAEs of diff dimension-
ality are shown in Table 2. Although the higher dimensional
N -VAEs are able to achieve competitive metrics compared
to the best SO(3) model, they only learn to embed SO(3) in
a high dimensional space in an unstructured fashion. As can
be seen in in 6.1, the SO(3) latent space with S 2 × S 2 mean
parameterization learns a nearly perfect encoding, while the
10 dimensional Normal learns disconnected patches of the
data manifold.3

It can be seen in Table 3 that the results from the Toy experi-
ment extend to this more complicated task. We observe that
only the continuous encoding, S 2 × S 2, achieves low log
likelihood and reconstruction losses compared to the other
mean parameterizations.

Lastly, we observe that the group action decoder yields
signiﬁcantly higher performance than the MLP decoder.
This is in line with the hypotheses that using the group
action encourages structure in the latent space.

7. Discussion & Conclusion

In this paper we explored the use of manifold-valued latent
variables, by proposing an extension of the reparameteriza-
tion trick to compact connected Lie groups. We worked out
the implementation details for the speciﬁc case of SO(3),
and highlighted the various subtleties that must be taken into
account to ensure a successful parameterization of the VAE.
Through a series of experiments, we showed the importance

3Animated interpolations can be found at https://sites.

google.com/view/lie-vae.

Algorithm

NLL

ELBO recon.

SO(3)-MLP-s2s2
SO(3)-action-s2s2
N -MLP 3-dim
N -MLP 10-dim
N -MLP 30-dim

123.6
46.90
140.7
64.02
55.7

144.6
63.35
157.7
80.80
74.37

129.6
48.35
142.7
65.80
59.37

Table 2. Results on sphere-cube of SO(3) encodings and RN em-
bedding encodings. The SO(3) models employ both regularizers,
the RN models neither. This achieved the best respective perfor-
mance.

Algorithm

NLL

ELBO recon.

SO(3)-MLP-q
SO(3)-MLP-alg
SO(3)-MLP-s2s1
SO(3)-MLP-s2s2
SO(3)-action-q
SO(3)-action-alg
SO(3)-action-s2s1
SO(3)-action-s2s2

111.8
218.9
106.0
123.6
378.6
241.2
128.5
46.90

140.1
316.7
144.5
144.6
471.2
333.2
173.0
63.35

135.1
301.7
129.5
129.6
456.2
318.2
158.0
48.35

Table 3. Summary of results comparing SO(3) mean parameteri-
zation and model decoder on sphere-cubes. The models employ
both regularizers.

of matching the topology of the latent data manifold with
that of the latent variables to induce a continuous, well-
behaved latent space. Additionally we demonstrated the
improvement in learned latent space structure by using a
group action decoder, and the need for care in choosing
an embedding space for the posterior distribution’s mean
parameter.

We believe that the use of SO(3) and other well-known
manifold-valued latent variables could present an interest-
ing addition to tackling problems in such ﬁelds as model
based RL and computer vision. Moving forward we thus
aim to extend this theory to other Lie groups such as SE(3).
A limitation of the current work, and reparameterizing dis-
tributions on speciﬁc manifolds in general, is that it relies
on the assumption of a priori knowledge about the observed
data’s latent structure. Hence in future work our ambition
is to ﬁnd a general theory to learn arbitrary manifolds not
known in advance.

Acknowledgements

The authors would like to thank Rianne van den Berg, Jakub
Tomczak, and Yvan Scher for their suggestions and support
in improving this paper.

Homeomorphic VAE

References

Berg, Rianne van den, Hasenclever, Leonard, Tomczak,
Jakub M, and Welling, Max. Sylvester normalizing ﬂows
for variational inference. UAI, 2018.

Burda, Yuri, Grosse, Roger, and Salakhutdinov, Ruslan.

Importance weighted autoencoders. ICLR, 2016.

Burgess, Christopher P, Higgins, Irina, Pal, Arka, Matthey,
Loic, Watters, Nick, Desjardins, Guillaume, and Lerch-
ner, Alexander. Understanding disentangling in beta-vae.
arXiv preprint arXiv:1804.03599, 2018.

Chirikjian, Gregory S. Information-theoretic inequalities on
unimodular lie groups. Journal of geometric mechanics,
2(2):119, 2010.

Demis. Neural scene representation and rendering. Sci-
ence, 360(6394):1204–1210, 2018. ISSN 0036-8075. doi:
10.1126/science.aar6170. URL http://science.
sciencemag.org/content/360/6394/1204.

Figurnov, Michael, Mohamed, Shakir, and Mnih, Andriy.
Implicit reparameterization gradients. arXiv preprint
arXiv:1805.08498, 2018.

Hall, B. Lie Groups, Lie Algebras, and Representations: An
Elementary Introduction. Graduate Texts in Mathematics.
Springer, 2003. ISBN 9780387401225.

Jang, Eric, Gu, Shixiang, and Poole, Ben. Categori-
ICLR,

cal reparameterization with gumbel-softmax.
abs/1611.01144, 2017.

Chirikjian, Gregory S. Stochastic Models, Information The-

ory, and Lie Groups. 2012.

Kingma, Diederik P. and Welling, Max. Auto-encoding

variational bayes. CoRR, abs/1312.6114, 2013.

Chirikjian, Gregory S and Kyatkin, Alexander B. Engineer-
ing applications of noncommutative harmonic analysis:
with emphasis on rotation and motion groups. CRC press,
2000.

Chirikjian, Gregory S and Kyatkin, Alexander B. Harmonic
Analysis for Engineers and Applied Scientists: Updated
and Expanded Edition. Courier Dover Publications, July
2016.

Cohen, Taco and Welling, Max. Group equivariant convolu-

tional networks. In ICML, pp. 2990–2999, 2016.

Cohen, Taco S and Welling, Max. Harmonic exponential

families on manifolds. ICML, 2015.

Cohen, Taco S and Welling, Max. Steerable cnns. ICLR,

2017.

Cohen, Taco S., Geiger, Mario, Köhler, Jonas, and Welling,

Max. Spherical CNNs. ICLR, 2018a.

Cohen, Taco S, Geiger, Mario, and Weiler, Maurice. Inter-
twiners between induced representations (with applica-
tions to the theory of equivariant neural networks). March
2018b.

Davidson, Tim R., Falorsi, Luca, Cao, Nicola De, Kipf,
Thomas, and Tomczak, Jakub M. Hyperspherical Varia-
tional Auto-Encoders. UAI, 2018.

Eslami, S. M. Ali, Jimenez Rezende, Danilo, Besse, Fred-
eric, Viola, Fabio, Morcos, Ari S., Garnelo, Marta, Ru-
derman, Avraham, Rusu, Andrei A., Danihelka, Ivo,
Gregor, Karol, Reichert, David P., Buesing, Lars, We-
ber, Theophane, Vinyals, Oriol, Rosenbaum, Dan, Ra-
binowitz, Neil, King, Helen, Hillier, Chloe, Botvinick,
Matt, Wierstra, Daan, Kavukcuoglu, Koray, and Hassabis,

Kingma, Diederik P, Salimans, Tim, Jozefowicz, Rafal,
Chen, Xi, Sutskever, Ilya, and Welling, Max. Improved
variational inference with inverse autoregressive ﬂow. In
NIPS, pp. 4743–4751, 2016.

Maddison, Chris J, Mnih, Andriy, and Teh, Yee Whye. The
concrete distribution: A continuous relaxation of discrete
random variables. ICLR, 2017.

Naesseth, Christian, Ruiz, Francisco, Linderman, Scott,
and Blei, David. Reparameterization gradients through
acceptance-rejection sampling algorithms. In AISTATS,
pp. 489–498, 2017.

Nalisnick, Eric and Smyth, Padhraic. Stick-breaking varia-

tional autoencoders. ICLR, 2017.

Rezende, Danilo and Mohamed, Shakir. Variational in-
ference with normalizing ﬂows. ICML, 37:1530–1538,
2015.

Rezende, Danilo Jimenez, Mohamed, Shakir, and Wierstra,
Daan. Stochastic backpropagation and approximate infer-
ence in deep generative models. ICML, pp. 1278–1286,
2014.

Rodrigues, Olinde. Des lois géométriques qui régissent les
déplacements d’un système solide dans l’espace: et de la
variation des cordonnées provenant de ces déplacements
considérés indépendamment des causes qui peuvent les
produire. 1840.

Tomczak, Jakub M and Welling, Max. VAE with a Vamp-

Prior. AISTATS, 2017.

Weiler, Maurice, Hamprecht, Fred A, and Storath, Martin.
Learning steerable ﬁlters for rotation equivariant CNNs.
In CVPR, 2018.

Homeomorphic VAE

Worrall, Daniel E, Garbin, Stephan J, Turmukhambetov,
Daniyar, and Brostow, Gabriel J. Harmonic networks:
In CVPR,
Deep translation and rotation equivariance.
2017.

A. Additional Figures

Homeomorphic VAE

(a) Ground truth

(b) SO(3)-action-s2s2

(c) SO(3)-action-alg

(d) SO(3)-action-q

(e) SO(3)-action-s2s1

(f) N -action-3-dim

(g) S-action-3-dim

Figure A.1. Reconstructions of a S1 trajectory in the Toy data set. The R64 elements are mapped to 3D by Principal Component Analysis.
See Section 6.1 for details.

(a) SO(3)-action-s2s2

(b) SO(3)-action-alg

(c) SO(3)-action-q

(d) SO(3)-action-s2s1

(e) N -action-3-dim

(f) S-action-3-dim

Figure A.2. Discontinuities in the latent space along a S1 trajectory in Toy data set. Shown is (cid:107)f (xi+1) − f (xi)(cid:107)2 for encoder f along
the trajectory. See Section 6.1 for details.

B. Pushforward Measure SO(3)

Theorem 1. Let (R3, λ, B[R3]) the real space provided with the Lebesgue measure on the Borel algebra on R3. Let
(SO(3), ν, B[SO(3)]) The group of 3 dimensional rotations provided with the normalized Haar measure ν on the Borel
algebra on SO(3). Consider then the probability measure µ : B[R3] → [0, 1] absolutely continuous w.r.t λ with density
r. Consider the exponential map exp : R3 → SO(3) that is differentiable thus continuous thus measurable. Let then
exp∗(µ) the pushforward of µ by the exp function. then exp∗(µ) is absolutely continuous with respect of the Haar measure
ν. (exp∗(µ) (cid:28) ν)

Proof. Deﬁne the sets:

Ak = {x ∈ R3 : (cid:107)x(cid:107) ∈ (kπ, (k + 1)π)} Bk = {x ∈ R3 : (cid:107)x(cid:107) = kπ} k ∈ N

(10)

Then note that:

And since m(Bk) = µ(Bk) = 0, then µBk (E) = 0 ∀E ∈ B[R3] k ∈ N . Therefore:

Homeomorphic VAE

(cid:32)

(cid:33)

(cid:32)

(cid:33)

R3 =

Ak

˙∪

˙(cid:91)

k∈N

˙(cid:91)

k∈N

Bk

µ(E) =

µAk (E) ∀E ∈ B[R3]

(cid:88)

k∈N

Then we have µ = (cid:80)
Now consider the pushforward measure exp∗(µ), we then have that:

k∈N µAk .

(exp∗(µ))(E) = µ(exp−1(E)) =

µAk (exp−1(E)) =

(exp∗(µAk ))(E) =

(cid:88)

k∈N

(cid:88)

k∈N

(cid:88)

k∈N

((exp|Ak

)∗(µ))(E) ∀E ∈ B[SO(3)]

Then we have exp∗(µ) = (cid:80)
Moreover notice that exp|Ak is a injective, therefore we can apply the change of variable formula:
(cid:90)

k∈N exp∗(µAk ) = (cid:80)

k∈N((exp|Ak

(cid:90)

)∗(µ)). Where exp|Ak is the exp function restricted to Ak.

((exp|Ak

)∗(µ))(E) =

r dλ =

(r ◦ exp−1
|Ak

) · |Jexp−1
|Ak

| dν

E

exp−1
|Ak

(E)

Then (exp|Ak

)∗(µ) (cid:28) ν and since exp∗(µ) = (cid:80)

k∈N((exp|Ak

)∗(µ)) then exp∗(µ) (cid:28) ν.

The proof then tells us how to compute the Radon-Nikodym derivative of the pushforward with respect to the Haar measure.
In fact:

)∗(µ)

d(exp|Ak
dν

= (r ◦ exp−1
|Ak

) · |Jexp−1
|Ak

|

,

d exp∗(µ)
dν

=

d(exp|Ak
dν

(cid:88)

k∈N

)∗(µ)

Deﬁning ˆq := d exp∗(µ)

dν

we then have:

From (Chirikjian, 2010) we have that

We then have:

ˆq(R) =

(r ◦ exp−1
|Ak

(R)) · |Jexp−1
|Ak

(R)| =

(cid:88)

k∈N

v∈exp−1(R)

(cid:88)

r(v) · |Jexp(v)|−1

|Jexp(v)| =

2 − 2 cos (cid:107)v(cid:107)
(cid:107)v(cid:107)2

ˆq(R) =

(cid:88)

v∈exp−1(R)

r(v)

(cid:107)v(cid:107)2
2 − 2 cos((cid:107)v(cid:107))

To then have an expression explicitly dependent on R consider that

exp−1
|A0
(cid:107) exp−1
|A0

(R)

(R)(cid:107)

exp−1
|A0
(cid:107) exp−1
|A0

(R)

(R)(cid:107)

log(R)
(cid:107) log(R)(cid:107)

log(R)
(cid:107) log(R)(cid:107)

Where we have deﬁned log := exp−1
|A0

(R). Moreover we then have:

exp−1
|Ak

(R) =

((cid:107) exp−1
|A0

(R)(cid:107) + 2kπ) =

((cid:107) log(R)(cid:107) + kπ)

if k is even

(20)

exp−1
|Ak

(R) =

((cid:107) exp−1
|A0

(R)(cid:107) + 2kπ) =

((cid:107) log(R)(cid:107) + −(k + 1)π)

if k is odd

(21)

|Jexp−1
|Ak

(R)| =

(R)(cid:107)2

(cid:107) exp−1
|Ak
2 − 2 cos((cid:107) exp−1
|Ak

(R)(cid:107))

=

((cid:107) log(R)(cid:107) + kπ)2
2 − 2 cos((cid:107) log(R)(cid:107))

if k is even

(22)

(11)

(12)

(13)

(14)

(15)

(16)

(17)

(18)

(19)

Homeomorphic VAE

|Jexp−1
|Ak

(R)| =

(R)(cid:107)2

(cid:107) exp−1
|Ak
2 − 2 cos((cid:107) exp−1
|Ak

(R)(cid:107))

=

((cid:107) log(R)(cid:107) − (k + 1)π)2
2 − 2 cos((cid:107) log(R)(cid:107))

if k is odd

(23)

Putting everything together:

ˆq(R) =

(cid:18) log(R)
(cid:107) log(R)(cid:107)

r

(cid:88)

k∈Z

((cid:107) log(R)(cid:107) + 2kπ)

(cid:19) ((cid:107) log(R)(cid:107) + 2kπ)2
2 − 2 cos((cid:107) log(R)(cid:107))

Where from (Chirikjian, 2010) we have:

This gives us the ﬁnal expression:

log(R) =

θ(R)
2 sin(θ(R))

(cid:0)R − R(cid:62)(cid:1)

θ(R) = cos−1

(cid:19)

(cid:18) tr(R) − 1
2

ˆq(R|σ) =

(θ(R) + 2kπ)

(cid:18) log(R)
θ(R)

r

(cid:88)

k∈Z

(cid:19) (θ(R) + 2kπ)2
3 − tr(R)

C. Entropy computation

We oprimize MC estimates of the Entropy:

H(q) = H(ˆq) ≈ −

log ˆq(Ri), Ri ∼ ˆq(Ri)

1
N

N
(cid:88)

i=1

(24)

(25)

(26)

(Where we dropped dependency on the parameters for simplicity) Then using, Equation (24):

H(q) = H(ˆq) ≈ −

1
N

N
(cid:88)

i=1

log

r

(cid:88)

k∈Z

(cid:18) log(Ri)
(cid:107) log(Ri)(cid:107)

((cid:107) log(Ri)(cid:107) + 2kπ)

(cid:19) ((cid:107) log(Ri)(cid:107) + 2kπ)2
2 − 2 cos((cid:107) log(Ri)(cid:107))

, Ri ∼ ˆq(Ri)

In the way we deﬁned ˆq we obtain samples from it in the following way:

Ri = exp(vi) vi ∼ r(vi)

(27)

Substituting it in in the previous expression we get:

H(q) ≈ −

log ˆq(exp(vi))

1
N

1
N

N
(cid:88)

i=1

N
(cid:88)

i=1

= −

log

(cid:88)

k∈Z

r

(cid:16) vi
(cid:107)vi(cid:107)

((cid:107)vi(cid:107) + 2kπ)

, vi ∼ r(vi)

(cid:17)

·

((cid:107)vi(cid:107) + 2kπ)2
2 − 2 cos((cid:107)vi(cid:107))

Notice that this expression depends only on the samples from r in the lie algebra

Assuming the density r decays quickly enough to zero, the above inﬁnite summation can be truncated. This is always the
case for exponentially decaying distributions, like the Normal. The truncated summation can then can be computed using
the logsumexp trick:

H(q) ≈ −

1
N

N
(cid:88)

i=1

logsumexpk

log r

((cid:107)vi(cid:107) + 2kπ)

+ log

, vi ∼ r(vi)

(28)

(cid:18)

(cid:16) vi
(cid:107)vi(cid:107)

(cid:17)

((cid:107)vi(cid:107) + 2kπ)2
2 − 2 cos((cid:107)vi(cid:107))

(cid:19)

D. Mean parameterization

Homeomorphic VAE

As discussed above, some requirements exist on π : Y → SO(3) for the encoder encmu to correctly represent the data
manifold.
We split π in the composition of φ : Y → Y (cid:48) and ψ : Y (cid:48) → SO(3), both generally discontinuous. We assume Y = Rm to
be a neural network output. The functions ψ below are known ways to surjectively map to SO(3). φ are constructed to map
from Rm to the domain of ψ.

We discuss the existence of a map i : SO(3) → Y (cid:48) such that it is a right inverse of ψ (ψ ◦ i = idSO(3)), which is necessary
for the correct encoder to exist.

1. Algebra with Y = Y (cid:48) = R3, φ = id. This method simply uses the exponential map:

π : R3 → SO(3)

v (cid:55)→ exp(v×)

It’s inverses are the branches of the log map. However, a path in SO(3) that is a full rotation around a ﬁxed axis
is continuous in SO(3) but discontinuous in the algebra, when mapped with the log map. Thus the log map is not
continuous.

2. Quaternions with Y = R4, Y (cid:48) = S3, φ(x) = x/(cid:107)x(cid:107). The unit Quaternions, which are homeomorphic to S3 are a
’double cover’ of SO(3), which means that a continuous surjective projection π : S3 → SO(3) exists that is two-to-one.
The projection map can be found in Chirikjian & Kyatkin (2000, Eqn. (5.60)). Using the theory of Fiber Bundles
(recognizing S3 as a non-trivial principle bundle with base space SO(3)), one can show that no embedding i exists.

3. s2s1(S2 × S1) with Y = R3 × R2, Y (cid:48) = S2 × S1, φ(x, y) = (x/(cid:107)x(cid:107), y/(cid:107)y(cid:107)). This is the map from an axis in S2 and

angle in S1.

vectors.

π : S 2 × S → SO(3)

(u, v) (cid:55)→ I + v2u× + (1 − v1)u2
×

For i, to be continuous, its image i(SO(3)) must be closed (as it is a compact subset of a Hausdorff space). Thus so
must the set A = i(SO(3)) ∩ S2 × {π}. However, as ψ(µ, π) = ψ(−µ, π) for µ ∈ S2, A is a hemisphere (times a
point) that does not contain its entire boundary, thus it is not closed and i is not continuous.

4. s2s2(S2 × S2) with Y = R3 × R3, Y (cid:48) = S2 × S2, φ(x, y) = (x/(cid:107)x(cid:107), y/(cid:107)y(cid:107)). This method creates two orthonormal

π : S 2 × S 2 → SO(3)

(u, v) (cid:55)→ concat(w1, w2, w3)

Where:
w1 = u
w2

(cid:48) = v − (cid:104)u, v(cid:105)u
(cid:48)

w2 =

w2
(cid:107)w2
w3 = w1 × w2

(cid:48)(cid:107)

Notice that there exists a continuous and injective map i : SO(3) → S2 × S2. It simply consists of taking the ﬁrst two
rows of the matrix representation of the SO(3) element (The third row is the vector product between the ﬁrst two, so it
can always be recovered). Moreover we have that π ◦ i = IdSO(3)

E. Continuity Metric

Consider a map f : X → Y where X, Y are metric spaces with metrics dX and dY respectively. In order to compute
the proposed continuity metric we take a continuous path (xi)i∈[N ], deﬁned as N pairwise close points, and compute the

(29)

(30)

(31)

(32)

(33)

(34)

(35)

(36)

(37)

(38)

(39)

(40)

(41)

relative distances

From this we further compute the quantities

Homeomorphic VAE

Li =

dY (f (xi+1), f (xi))
dX (xi+1, xi)

M := max

Li

and Pα := α-th percentile of {Li : i ∈ [N − 1]}.

i

By comparing these two values, we want to discover whether there is at least one outlier in the set of Li. Such outliers
corresponds to a transition with a big jump, signalling a discontinuity point. We deﬁne a path to be discontinuous if
M > γPα.

In order to capture stochastic effects we repeat the above procedure with several paths. The ﬁnal score is the fraction of
discontinuous paths. In the practical implementation we chose 1000 paths, using γ = 10 and α = 90 (90th percentile).

F. Group Action

For each degree l ∈ Z≥0, the Wigner-D-matrix can be expressed in a real basis as Dl : SO(3) → R(2l+1)×(2l+1). We
choose the nl copies of each degree l and stack the matrices in block-diagonal form to create our representation, which
amounts to taking the direct sum of the representations.

The Wigner-D-matrices represent rotations of the Fourier modes of a signal on the sphere, which provides an interpretation
for using the group action. We consider a real signal one the sphere f : S2 → R. It has a generalized Fourier transformation
(Chirikjian & Kyatkin, 2000):

f (s) =

(2l + 1)

ˆf l
mDl

m0(αs, βs, 0)

∞
(cid:88)

l=0

l
(cid:88)

m,n=−l

where ˆf are the Fourier components and D is the Wigner-D-matrix. We use identity Dl
m(α, β), where
α, β are the ﬁrst two Euler angles, to write the spherical harmonics that are the basis functions of the Fourier modes as
Wigner-D-matrices. Then for a rotation g ∈ SO(3), using the homomorphism property:

m0(α, β, 0) = Y l

f (g(s)) =

(2l + 1)

Dl

mr(g)Dl

r0(αs, βs, 0)

∞
(cid:88)

l=0

∞
(cid:88)

l=0

l
(cid:88)

l
(cid:88)

ˆf l
m

m=−l

r=−l

l
(cid:88)

(cid:32) l

(cid:88)

m=−l

r=−l

=

(2l + 1)

Dl

mr(g) ˆf l

m

Dl

r0(αs, βs, 0)

(cid:33)

where g(s) corresponds to rotating a point on the sphere.

We see that our method of using representations in the decoder corresponds to having the content latent code represent the
Fourier coefﬁcients of a virtual signal on the sphere.

G. Regularizers

Even when an appropriate mean parametrization is selected and proper behaviour of the decoder is encouraged by the group
action decoder, the network can still learn a discontinuous latent space. To encourage it to learn the data manifold correctly,
we employ two additional loss terms that act as regularizers. An ablative analysis of the effectiveness of these regularizers is
shown in Table 4.

G.1. Equivariance regularizer

If the 3D object on which SO(3) acts is centered in the frame, then a S1 subgroup H of SO(3) exist such that its
action corresponds to the rotations whose axis is orthogonal to the camera frame. For any R ∈ SO(3), angle θ, decoder

Homeomorphic VAE

Regularizer

NLL

ELBO recon. .

Neither
Equivariance
Continuity
Both

235.24
75.62
87.36
45.18

246.2
93.76
125.6
60.62

231.2
78.76
110.6
45.62

Table 4. Ablative analysis of the regularizers. The has model uses SO(3) latent space, the group action decoder and the S2S2 mean.

Figure G.1. Decodings of an orbit of the equivariance subgroup S1 whose axis is orthogonal to the camera frame. This orbit corresponds
to planar rotations of the pixels.

g : SO(3) → RN , action of subgroup H on the latent space, ψθ : SO(3) → SO(3) and action on the pixels through planar
rotations φθ : RN → RN , we have equivariance relationship:

g(ψθ(R)) = φθ(g(R))

(42)

This equivariance is shown in Figure G.1. The relationship is exact if the object is centered, SO(3) acts on all pixels and if
the camera is orthographic (located inﬁnitely far away from the subject). If the object is off center, the pixel rotation can be
performed around a learned center point. If the images have a rotation-invariant background, a learned mask can be applied.
If the camera is not orthographic, the equivariance relationship is not exact, but approximate. The decoder is regularized by
enforcing Equation (42) through a mean squared error loss on the pixels for uniformly sampled R ∈ SO(3) and θ ∈ S1. We
choose ψθ to correspond to rotation around the z-axis.

This regularizer helps align all rotations in each S1 orbit, but does not help in correctly aligning the orbits among each other.
Thus we reduce the problem from aligning SO(3) to aligning SO(3)/S1 ∼= S2, since the cosets of SO(3) after the orbit are
identiﬁed, are homeomorphic to the sphere.

G.2. Continuity regularizer

If the learner is provided with pairs images that are nearby with respect to the manifold metric, the encoder can be regularized
by penalizing differences in the encodings of the two inputs. This is done by penalizing the mean squared error of the
Frobenius norms of the two encoded rotation matrices, which is a proper metric on the SO(3) manifold.

This simpliﬁes the problem from unsupervised learning on i.i.d. samples to learning a VAE on two frame samples from
random trajectories of data lying on the SO(3) manifold.

