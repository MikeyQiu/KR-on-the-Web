Attribute-Guided Sketch Generation

Hao Tang1, Xinya Chen2, Wei Wang3, Dan Xu4, Jason J. Corso5, Nicu Sebe1, Yan Yan6
1University of Trento 2Huazhong University of Science and Technology 3EPFL
4University of Oxford 5University of Michigan 6Texas State University

9
1
0
2
 
r
p
A
 
4
1
 
 
]

V
C
.
s
c
[
 
 
2
v
4
7
7
9
0
.
1
0
9
1
:
v
i
X
r
a

Abstract— Facial attributes are important since they provide
a detailed description and determine the visual appearance of
human faces. In this paper, we aim at converting a face image
to a sketch while simultaneously generating facial attributes.
To this end, we propose a novel Attribute-Guided Sketch
Generative Adversarial Network (ASGAN) which is an end-
to-end framework and contains two pairs of generators and
discriminators, one of which is used to generate faces with
attributes while the other one is employed for image-to-sketch
translation. The two generators form a W-shaped network (W-
net) and they are trained jointly with a weight-sharing con-
straint. Additionally, we also propose two novel discriminators,
the residual one focusing on attribute generation and the triplex
one helping to generate realistic looking sketches. To validate
our model, we have created a new large dataset with 8,804
images, named the Attribute Face Photo & Sketch (AFPS)
dataset which is the ﬁrst dataset containing attributes associated
to face sketch images. The experimental results demonstrate
that the proposed network (i) generates more photo-realistic
faces with sharper facial attributes than baselines and (ii) has
good generalization capability on different generative tasks.

I. INTRODUCTION

Recently, there has been a new trend in computer vision
to use machines to express the “creativity” of art. Novel
and never-seen-before images can be generated by invert-
ing the convolution process in CNN (“upconvolution” or
“deconvolution”), which gives such networks the ability to
“dream” [23] and to generate images. To implement these
tasks, deep generative models have been usually adopted, and
these networks have also been employed for face-to-sketch
translation. These deep models can be roughly divided into
two categories, namely, the Generative Adversarial Networks
(GANs) [4] and Variational AutoEncoders (VAEs) [11], [14],
[18]. In GANs, there are two subnetworks, a generator and
a discriminator, which play the two-player minimax game
with a value function [4]. The generator acts as a mapping
function to convert an input image to the generated image so
that it fools the discriminator, which is trained to distinguish
the generated images from the input real images. In this
work, we rely on GANs as the basis to implement the face-
to-sketch translation model.

Face-to-sketch translation is quite challenging due to the
fact that it is a non-linear process conditioned on the ap-
pearance of the input face. To address this problem, several
methods have been proposed [35], [47], [50], [44], [15] for
image-to-image translation problems which convert a photo
to a sketch. However, these works focus only on the face-
to-sketch-translation ignoring the possibility of using facial

978-1-7281-0089-0/19/$31.00 ©2019 IEEE

Fig. 1: Architecture comparison of three generators. The goal
of this work is to generate facial attributes and sketches
simultaneously. To achieve this target, we need to train two
Encoder-Decoder networks [6] (Top), two U-nets [8] (Mid-
dle) or the proposed W-net (Bottom). The W-net consists of
two subnetworks which are fused together via a novel joint
learning strategy.

attributes (e.g., expressions, age) and of generating sketches
conditioned on external attributes (e.g., glasses, scarf).

To overcome this challenging problem, we present a novel
Attribute-Guided Sketch Generative Adversarial Network
(ASGAN) based on conditional generative adversarial net-
works. ASGAN contains two generators and two discrimi-
nators. The two generators Ga and Gs comprise a novel W-
shaped network (W-net) and they are learned jointly as shown
in Fig. 1. We set Ga as an Encoder-Decoder network [6] and
Gs as a U-net [8]. The proposed W-net can jointly perform
facial attribute generation and face-to-sketch translation. Our
formulation is similar to Pix2pix [8] but we signiﬁcantly
differ from them by extending it to handle the problem of
generating sketches with attributes which can be conditioned
not only on the image priors, but also on the attribute labels.
Ga learns the translation from images without attributes to
images with attributes guided by attribute labels. In this way,
the different attributes can be learned simultaneously as in
StarGAN [1] and G2GAN [39]. Next, Gs converts images to
sketches with the learned attributes. In detail, the ﬁrst branch
in the W-net
is a conditional Encoder-Decoder network
which learns to add attributes to the input images. This is
implemented by fusing the embeddings of the conditioning
label and the embeddings of the input face image at the
bottleneck. The second branch learns to convert the generated
face images with attribute to sketches with attribute. We train
the two generators Ga and Gs in an alternating way and
they share the same weights between the decoder of Ga and
the encoder of Gs, which limits the network behavior and

Fig. 2: The structure of the proposed ASGAN. The generator is a W-net composed of Ga and Gs, Ga is an Encoder-Decoder
network and Gs is a U-net. Ga receives the attribute labels at the bottleneck fully connected layer to guide the attribute
generation. Both generators are made up of an encoder (Enc.) and a decoder (Dec.). We train Ga and Gs in an alternating
way and they share the same weights between the decoder of Ga and the encoder of Gs. Moreover, the corresponding
discriminators Da and Ds are the residual and triplex discriminators.

beneﬁts them from each other. Moreover, two loss functions
are designed to train these generators, i.e., the attribute loss
and the sketch loss. Besides, compared with the simple
combination of two Pix2pix models, the proposed W-net only
needs 75% of parameters by a weight-sharing strategy.

We also propose two novel discriminators Da and Ds, the
residual and the triplex discriminator. To focus on learning of
facial attributes, the discriminator Da is trained to distinguish
the residuals between the input images and the generated
images from the residuals between the input images and the
ground truth image which have the conditioned attributes.
Moreover, since the input image, the attributed image, and
the attributed sketch have strong correlations, we take the
triplet (face, face with attribute, sketch with attribute) as
the input to the triplex discriminator Ds which is used to
distinguish the real triplet from the fake one as shown in
Fig. 2. In this way, Ds could also take into consideration the
correlations between the elements. To evaluate the quality
of a generated image, we present a novel evaluation metric
namely the Feature-Level Similarity Score (FLSS) inspired
by feature matching. FLSS works as a complementary
metric to Inception Score (IS) and Self Similarity Matrix
(SSIM). In addition, to validate the proposed network and
the overall framework, we have collected a new dataset of
8,804 images collected from ﬁve existing datasets by adding
visual attributes (glasses, beard, and bow tie), named the
Attributed Face Photo & Sketch (AFPS). AFPS consists
of two subsets, i.e., face images with attributes and face
sketches with attributes. To our knowledge, this is the ﬁrst
dataset containing attributes associated to face sketch images.
Experimental results demonstrate that the proposed ASGAN
(i) generates more photo-realistic faces with sharper/more
realistic facial attributes than baselines on the AFPS dataset

and (ii) has a good generalization ability on other generative
tasks, i.e., face colorization and face completion. In summary,
the contributions of this paper are as follows:
• We propose a novel Attribute Guided Sketch Genera-
tive Adversarial Network (ASGAN). The two generators
in ASGAN form a novel W-net using a weight-sharing
paradigm, which can generate faces with attributes and
the corresponding sketches jointly.

• We design two novel discriminators, the residual and the
triplex discriminators. The former one focuses on attribute
generation by distinguishing the generated attribute from
the real attribute. The latter one focuses on sketch transla-
tion by distinguishing the real triplet tuple (original face,
real face with attribute, real sketch with attribute) from
the fake triplet tuple (original face, generated face with
attribute, generated sketch with attribute).

• We introduce a new AFSP dataset, which contains 8,804
face images and sketches with visual attributes. The new
dataset will be made available to the research community.
The proposed FLSS metric and AFPS dataset are available
at https://github.com/Ha0Tang/ASGAN.

II. RELATED WORK

Many works have tried to address the face-to-sketch prob-
lem. For instance, Song et al. [35] present the Bidirectional
Transformation Network (BTN), which generates a whole
face/sketch recursively by using a small number of facial
patches. Zhang et al. [50] propose to integrate a Sparse
Representation-based Greedy Search (SRGS) and Bayesian
Inference (BI) for face sketch synthesis. However, all of
these works focus on the face-to-sketch-translation task, but
they could not generate sketches conditioned on external
facial attributes. Generating facial attributes (e.g., glasses,

scarf, facial expression, age) associated to the sketch is very
challenging.

Recently, Generative Adversarial Networks (GANs) [4]
have drawn signiﬁcant attention in both supervised and
unsupervised learning research ﬁelds, and a lot of GAN
variants have been explored. For example, the Conditional
GANs (CGANs) are introduced to solve ill-posed problems,
such as text-to-image translation [29], [19], image-to-image
translation [8], video-to-video translation [40]. CGANs in-
corporate additional information into GANs, e.g., category
labels [27], [24], [39], text description [48], [29], object
keypoints [16], [30], human skeleton [38], [34], context [2],
segmentation maps [22] and conditional images [8], [46].

Based on CGANs, Isola et al. [8] have developed a generic
framework “Pix2pix”, which is suitable for different gen-
erative tasks. In Pix2pix, one conditional image is adopted
as a reference during the training time. The generator in
Pix2pix is a U-net, which tries to synthesize a fake image
conditioned on the given conditional image in order to fool
the discriminator, while the discriminator tries to identify
the fake image by comparing it with the corresponding target
image. Under these settings, the discriminator takes the pairs
of images as input. The U-net is actually an Encoder-Decoder
network with skip connection, in which the encoder consists
of multiple convolution layers and the decoder consists of
multiple deconvolution layers. Isola et al. [8] added skip
connections between each layer i and layer n−i which allows
feature sharing between the encoder and decoder, where n
is the total number of layers. All channels at layer i are
simply concatenated with those at layer n−i by the skip
connections. [8] shares a similar goal with us, but it cannot
solve the face-to-attributed-sketch translation task since it
cannot convert a face image to a sketch conditioned on
external facial attributes while our ASGAN is speciﬁcally
designed to tackle this task.

III. MODEL DESCRIPTION

A. Objective Function

GANs are generative models that learn the mapping from
a random noise z to the output image y, G:z→y [4]. The
objective function of a traditional GAN [4] can be formulated
as follows:

(1)

LGAN (G, D) =
Ey∼pdata(y)[log D(y)] + Ez∼Pz (z)[log(1 − D(G(z)))].
In contrast, CGANs [8] learn the mapping from a con-
ditional image x and a random noise z to y, G:{x, z}→y.
The generator G is trained to produce outputs that cannot be
distinguished from “real” images by an adversarial discrimi-
nator D, while the discriminator is trained to distinguish the
“fake” images from the “real” ones. The objective function
of a CGAN [8] can be expressed as follows:

LcGAN (G, D) = Ex,y∼pdata(x,y)[log D(x, y)]
+ Ex∼pdata(x),z∼pz (z)[log(1 − D(x, G(x, z)))].
where G tries to minimize the objective function while D
tries to maximize it.

(2)

Our ASGAN contains two generator/discriminator pairs,
with Ga/Da controls facial attribute generation and and
Gs/Ds controls face-to-sketch translation, respectively. Sim-
ilar to StarGAN [1] and G2GAN [39], all the attributes can
be learned simultaneously as Ga can receive arbitrary facial
attribute label. The facial attribute is represented by a one
hot vector which is used to distinguish each attribute from
others. In the hot vector, only the element which corresponds
to the label is set to 1 while the others are set to 0. The
one hot vector is passed to a linear layer to get a feature
embedding with 64 dimensions and then the embeddings are
concatenated with an image embedding vector and passed
to the fully connected layer at the bottleneck of Ga. This
training procedure is shown in Fig. 2. The loss functions
of the facial attribute generation network and face-to-sketch
translation network write as,

Lattribute(Ga, Da) = Ex1,x2∼pdata(x1,x2)[log Da(x2 − x1)]
+ Ex1,(cid:99)x2∼pdata(x1,(cid:99)x2)[log(1 − Da((cid:99)x2 − x1))],

(3)

Lsketch(Gs, Ds) = Ex1,x2,y∼pdata(x1,x2,y)[log Ds(x1, x2, y)]
+ Ex1,(cid:99)x2,(cid:98)y∼pdata(x1,(cid:99)x2,(cid:98)y)[log(1 − Ds(x1, (cid:99)x2, (cid:98)y))],

(4)
where x1 represents the input image without attribute; x2
denotes the ground truth image with attribute, and y is the
ground truth sketch with attribute. The two noises z1 and z2
are sampled independently. The outputs are not two sketches
but one face image with attribute (cid:99)x2 = Ga(x1, l, z1) and one
sketch with attribute (cid:98)y = Gs(Ga(x1, l, z1), z2).

Previous approaches of CGANs have found it beneﬁcial to
mix the GAN objective function with a more traditional loss,
such as the L1 [8] or L2 losses [25]. Under that condition,
the generator is asked to not only fool the discriminator but
also to be closer to the ground truth output in a L1 or L2
sense. We also explore this option, using L1 distance rather
than the L2 since L1 encourages less blurring [8]:
LL1(Ga) = Ex2,(cid:99)x2∼pdata(x2,(cid:99)x2)[||x2 − (cid:99)x2||1].
LL1(Gs) = Ey,(cid:98)y∼pdata(y,(cid:98)y)[||y − (cid:98)y||1].
It is worth noting that there are many loss functions we could
try, e.g., feature loss [9] and total variation loss [17]. We did
not use them in our experiments and we list them here for
completeness. Therefore, the ﬁnal objective is:

(5)

(6)

G∗ = arg min
Ga,Gs

max
Da,Ds

Lattribute(Ga, Da)+

Lsketch(Gs, Ds) + λLL1(G),

(7)

where LL1(G) = LL1(Ga) + LL1(Gs). In our experiments,
instead of using Gaussian noises z1 and z2, we generate the
noise in the dropout layer, which is consistent with [8].

B. Network Architectures

The architectures of generators and discriminators in this
paper are developed based on [8]. The face-to-sketch trans-
lation problem is essentially the problem that maps a high
resolution input face image to a high resolution output sketch
image. In addition, although the input image and the output
sketch differ in appearance, the sketch is a rendering of

the real image and they share the same contour. Therefore,
the contour of the input image is roughly aligned with the
contour of the output sketch. Many previous solutions [25],
[41], [9] to this problem usually employ an Encoder-Decoder
network [6]. In such a network, the input is passed through
a series of layers and is progressively down-sampled, until
a bottleneck layer is reached, at which point the process is
reversed. Such a network requires that all information ﬂows
through all the layers, including the bottleneck. For many
image translation problems, there is a great deal of low-
level information shared between the input and output, and it
would be desirable to transfer this information directly across
the net. For example, in the case of face-to-sketch translation,
the input image and the output sketch share the location of
prominent structures and edges. Therefore, the design of the
generator architecture in [8] takes this into consideration. To
help the generator circumvent the bottleneck for information
like this, [8] adds skip connections, following the general
shape of a U-Net [31].
Generator Architectures. In this paper, we present a novel
generator which is a W-shaped network consisting of two
generators Ga and Gs. The components of the W-shaped
network are shown in the following.

i.e.,

Generator Ga: The encoder in Ga has eight Convolution-
BatchNorm-ReLu layers, while the decoder also has eight
layers,
three Convolution-BatchNorm-Dropout-ReLu
layers and ﬁve Convolution-BatchNorm-ReLu layers. The
feature maps in the en-
numbers of convolution layer
coder are [64, 128, 256, 512, 512, 512, 512, 512]. The num-
bers of convolution layer feature maps in the decoder are
[512, 512, 512, 512, 512, 256, 128, 64]. In the encoder and
decoder, the kernels in all the convolution layers have the
same shape which is 4×4 and the same stride which is 2.
The output of each convolution layer in the encoder is down-
sampled by 2 while the output of each convolution layer in
the decoder is up-sampled by 2. At the end of the decoder,
a convolution is applied to map it to a 3 channels result,
followed by a tanh function. BatchNorm is not employed
into the ﬁrst layer in the encoder.

Generator Gs: We aim to generate the attributed face and
the corresponding sketch jointly. Therefore, we select U-net
as the sketch generation model as it can reuse the features of
the attributed face via the skip connection. In this way, we
formulate the problem as a multi-task learning problem and
both attributed face and the corresponding sketches could
beneﬁt from each other. Generator Gs is a U-net, which
is an Encoder-Decoder net with skip connections between
mirrored layers in the encoder and decoder stacks [31]. The
number of the convolution layer feature maps of the encoder
in Gs is the same with the decoder in Ga. Besides, the
convolution layers in the encoder of Gs share the weights
with the decoder in Ga, which makes the ﬁnal output not
only learn the facial attribute but also the face-to-sketch
translation. However, the skip connections change the num-
ber of channels in the decoder, thus the convolution layer
feature map numbers in the decoder of the generative net
are [512, 1024, 1024, 1024, 1024, 512, 256, 128].

Discriminator Architectures. For Da and Ds we adopt the
same architectures in [8], which are built with the basic
Convolution-BatchNorm-ReLU layer. All ReLUs are leaky,
with slope 0.2. The convolution layer feature map numbers
in this discriminator are [64, 128, 256, 512, 512, 512]. After
the last layer, a convolution is applied to map it to a 1-D
value, followed by a sigmoid function. BatchNorm is not
adopted into the ﬁrst layer.

C. Optimization

We follow the standard optimization method from [4] to
optimize the proposed ASGAN, i.e., we alternate between
one gradient descent step on discriminator Da and Ds
with Ga and Gs ﬁxed,
then one step on generator Ga
and Gs with Da and Ds ﬁxed. In addition, following the
suggestion made in [4], we train the generator Ga (or Gs)
to maximize Da((cid:99)x2 − x1) (or Ds(x1, (cid:99)x2, (cid:98)y)) rather than
minimizing log(1−Da((cid:99)x2 −x1)) (or log(1−Ds(x1, (cid:99)x2, (cid:98)y))).
Moreover, in order to slow down the rate of the discriminator
Da (or Ds) relative to the generator Ga (or Gs) we divide
the objective by 2 while optimizing Da (or Ds). We employ
the Adam optimizer [10] as solver, the momentum terms β1
and β2 of Adam are 0.5 and 0.999, respectively. The initial
learning rate for Adam is 0.0002.

D. Feature-Level Similarity Score

Currently, there are two kinds of evaluation metrics for
the image generation task, i.e., qualitative and quantitative.
On one hand, the qualitative results are usually studied by
human observers and machines, e.g., previous work [34]
conduct a user survey on generated images and collected
the scores given by the users. Others [8], [49] ran “real
vs fake” perceptual studies on Amazon Mechanical Turk
(AMT). On the other hand, the quantitative results are usually
evaluated by algorithms, e.g., [27], [3], [5], [45] take an
image distance, such as, MSE (Mean Square Error), SSIM
(Structural Similarity) or PSNG (Peak Signal to Noise Ratio)
to measure the quality of the results. Others apply the
Inception or ResNet models to measure the generated images
[36], [24], [38]. Recent works adopt additional classiﬁers to
predict if the generated images can be correctly detected [41],
segmented [8] or classiﬁed [7], [32].

It is clear that there is no single metric that can be used
to measure the quality of the generated images accurately
and holistically [32]. However, measurements such as SSIM
and IS (Inception Score) are not good metrics as shown
in [33], [9], [16] since sometimes the generated images
with more sharper and more photo-realistic aspects have a
lower SSIM and IS. We, therefore, present an alternative
method to measure the quality of generated images called
Feature-Level Similarity Score (FLSS), which is similar
to the pixel-level similarity method [46]. The idea of the
FLSS derives from the feature matching methods in image
retrieval [37]. Let us deﬁne the generated images I i
g and
the ground truth images I i
t (where i denotes the index of
generated or ground truth images). Given a function of
feature extraction F , our task is to extract features from I i
g

TABLE I: Key characteristics of the proposed AFPS dataset.
Total
Dataset

Image Source

Training

Testing

Type

CUFS [42]
CUFSF [51]
E-PRIP [21]
PRIP-VSGC [13]
Caricature [12]
Total

CUHK student Hand-Drawn
Hand-Drawn
FERET [28]
Composite
AR [20]
Composite
AR [20]
Caricatural
Internet
-
AFPS dataset

94
562
70
70
101
897

94
561
16
16
30
717

188
1,123
86
86
131
1,614

g) (cid:84) F (I i

t and match them: F (I i

t ), where (cid:84) denotes the
and I i
number of matches between two sets of descriptors F (I i
g)
and F (I i
t ). In other words, we do feature matching between
two sets of descriptors, then calculate how many features
(matches) are shared between the two sets:
g) (cid:84) F (I i
t ))
g)), φ(F (I i

φ(F (I i
min(φ(F (I i

SFLSS =

N
(cid:88)

1
N

(8)

t )))

,

i=1

where φ(·) deﬁnes the cardinality of the set (·), N denotes
the number of the generated or ground truth images in a
dataset and SFLSS is the ﬁnal similarity score of the dataset.
IV. EXPERIMENTS
In this section, we ﬁrst introduce the dataset used and the
implementation details. We then show detailed qualitative
and quantitative results and analyses.

A. Experimental Setup

Datasets. To evaluate the proposed method and the overall
framework, we have investigated the available face sketch
datasets [26]. However, none of them considers attributes on
sketches. Therefore, we use a public photo-editing software
to produce the attributes (glasses, beard and bow tie) based
on ﬁve existing datasets, which are then incorporated into
the Attributed Face Photo & Sketch (AFPS) dataset. The
AFPS contains three types of face sketches, i.e., hand-drawn,
composite, and caricatural. The main features of the AFPS
are listed in Table I. The AFPS contains 897 training samples
and 717 testing samples. Each sample has two images, i.e.,
a face photo with attribute and a face sketch with attribute.
Since several face images in Caricature, R-PRIP and PRIP-
VSGC datasets do not have the room to allow augmenting
them with a bow tie, and there are already faces with
mustache in the Caricature dataset, we remove the bow tie
and beard attributes in Caricature dataset, and the bow tie
attribute in both R-PRIP and PRIP-VSGC datasets. Therefore
the total number of images in AFPS is 8,804.
Implementation Details. The proposed network is imple-
mented under the deep learning framework using PyTorch. In
our experiments, all the images are re-scaled to 256×256×3
and all models of each dataset were trained for 200 epochs.
For all datasets, we do left-right ﬂip for data augmentation.
During training time, we need to input x1, x2 and y. While
during testing time we only require x1, and the model will
output Ga(x1, l, z1) and Gs(Ga(x1, l, z1), z2). The weights
are initialized from a Gaussian distribution with mean 0
and standard deviation 0.02. Training and testing stages are
conducted on a Nvidia TITAN Xp GPU with 12 GB memory.

B. Experimental Results

Analysis of Loss Function. We ﬁrst investigate the per-
formance of the proposed ASGAN using the objective in

the proposed ASGAN for

face-to-
Fig. 3: Results of
attributed-sketch task with different
losses on the CUFS
(Top) and the CUFSF (Bottom) datasets. Ground truths are
provided only for comparison purpose.

Fig. 4: Results of the proposed ASGAN on the face-to-
attributed-sketch translation task on the E-PRIP (Top) and
PRIP-VSGC (Bottom) datasets. Ground truths are provided
only for comparison purpose.
Eq. 7. Ablation experiments are run to isolate the effect of the
attribute loss term, the sketch loss term and the L1 loss term.
Fig. 3 and 4 show the qualitative results of the variations of
face-to-attributed-sketch translation task. The attribute term
gives faces attributes. The sketch term controls face-to-sketch
translation. Finally, the L1 term with attribute and sketch
terms together can generate photo-realistic sketches and
sharp facial attributes simultaneously. Note that the ground
truth sketches on the E-PRIP and PRIP-VSGC datasets do
not have torsos such that we do not show the generated
results with bow tie attribute. We also try to generate a beard
on the face of a lady as shown in the ﬁrst row of Fig. 4, which
only to validate that the proposed ASGAN is able to generate
the correct attributes. At testing stage, we are able to control
the proposed ASGAN to generate the desired attributes.

We also provide the quantitative results of the generated
sketches. SSIM [43] and the proposed FLSS are adopted
to measure the quality of the generated images. The SIFT
matching function of the VLFeat library is applied for the
implementation of the proposed FLSS. We list the average
results of all attributes with SSIM and FLSS in Table II.
As we can see from Table II, the attribute + sketch + λ
L1 model produces high-quality results and photo-realistic
attributes as compared to other loss combinations. Beside, we
also report the time for evaluating the quality of the generated

TABLE II: Quantitative results of the generated sketches using different losses on the proposed APFS dataset, compared
with Encoder-Decoder [6] and Pix2pix [8]. For SSIM and FLSS, higher is better. For the table cell of Caricature, the top
value is the result of the colorization (col.) task and the bottom one is the result of the completion (com.) task.

Model

CUFS

CUFSF

E-PRIP

PRIP-VSGC

Caricature

SSIM

FLSS

SSIM

FLSS

SSIM

FLSS

SSIM

FLSS

SSIM

FLSS

attribute loss + sketch loss

0.5090

0.1571

0.3454

0.1225

0.3761

0.0790

0.3373

0.0781

attribute + sketch + λL1
ASGAN (Ours)

0.6249

0.2534

0.3515

0.1567

0.4864

0.1280

0.4122

0.1258

Encoder-Decoder [6]

0.5025

0.1387

0.3440

0.1386

0.4677

0.1190

0.4030

0.1119

Pix2pix [8]

Time (s)

0.6127

0.2431

239.9

15.3

0.3488

1416.8

0.1517

0.4781

0.1264

0.4018

0.1136

102.6

40.3

2.7

40.5

2.5

0.2466
0.8333
0.5830
0.9109
0.3719
0.3910
0.5477
0.6842
85.8

0.4554
0.6172
0.5686
0.6774
0.0391
0.0491
0.4724
0.4100
5.9

TABLE III: AMT “real vs fake” test of the generated attributed faces (attr.) and attributed sketches (sket.) on the APFS
dataset, compared with Encoder-Decoder [6] and Pix2pix [8].

Task

col.
com.
col.
com.
col.
com.
col.
com.

% Tukers label real

CUFS

CUFSF

E-PRIP

PRIP-VSGC

Model

attr.

sket.

attr.

sket.

attr.

sket.

attr.

sket.

Encoder-Decoder [6]
Pix2pix [8]
ASGAN (Ours)

1.6%
1.3%
40.1%
3.2%
42.7% 6.9% 46.7% 20.4% 43.7% 4.6% 15.6% 6.3%

15.3%
10.7%

1.1%
29.3%

3.1%
40.7%

2.8%
11.8%

0.7%
3.3%

0.3%
3.2%

Fig. 5: Comparisons of the Encoder-Decoder network [6],
Pix2pix [8], ASGAN (ours) and Ground Truths (GT) for
face-to-attributed-sketch translation task.

images. The proposed FLSS is much faster than SSIM, which
highlights the advantage of the proposed evaluation method.
Comparison against Baselines. Our joint learning task tries
to generate attributed faces and sketches simultaneously from
a single face image, which is quite novel. Therefore we
only compare our method with the most related ones, i.e.,
Encoder-Decoder net [6] and Pix2pix [8], which are the most
successful models on image-to-image translation. Note that
we need to train two Encoder-Decoder nets or two U-nets,
which doubles the parameters, but the proposed ASGAN
only has 75% amount of parameters compared with the
baseline methods since we share the parameters between
two generators. Moreover, for the baselines we need to train
these models multiple times for every attribute, while for the
proposed ASGAN we only need to train it once. Results are
shown in Fig. 5 and Table II. We observe that the proposed
method achieves superior results compared with Encoder-
Decoder [6] and Pix2pix [8] in Fig. 5. The proposed ASGAN

Fig. 6: Test results of the Caricature dataset [12] on the face
colorization (Left) and completion (Right) tasks, compared
to Encoder-Decoder network [6], Pix2pix [8], ASGAN and
GT. The input and output images with and without glasses,
respectively. For the face completion task, we add random
noise in the central square patch in the input image.

consistently generates clear and convincing visual attributes,
and produces more vivid and high-quality face sketches than
the baselines. As we can see in Table II, the proposed AS-
GAN consistently outperforms Encoder-Decoder network [6]
and Pix2pix [8] across both metrics on the ﬁve datasets.
Moreover, we follow the same protocol from Pix2pix [8] to
run “real vs fake” perceptual studies on Amazon Mechanical
Turk (AMT). The average results of all facial attributes are
listed in Table III. We can observe that the proposed ASGAN
achieves better performance than Encoder-Decoder net [6]
and Pix2pix [8] on both the generated faces and sketches.
Other Applications. In addition, to evaluate the effective-
ness of the proposed network on different generative tasks,
the Caricature dataset [12] is employed for face colorization
and face completion tasks. The test results are shown in
Fig. 6 and Table II. For face colorization, our approach
is quite effective at creating reasonable and realistic color
renderings and at the same time generating the right facial
attribute. For the completion task,
the Encoder-Decoder
network [6] cannot generate face images, while Pix2pix [8]

is able to generate face images but without convincing
attributes. We observe that the proposed ASGAN has better
qualitative results than both baselines and the missing part
can be restored correctly with glasses. We obtain good results
on both tasks, which indicates that the proposed approach can
be useful for other generative tasks.

V. CONCLUSION

In this paper, we present a novel Attributed-Sketch Gen-
erative Adversarial Network (ASGAN) which consists two
generators and two discriminators. The generators are jointly
trained through a weight-sharing strategy, which can generate
attributed face and attributed sketches at the same time. We
also propose two novel discriminators, the residual and the
triplex discriminators. Experimental results demonstrate that
the proposed ASGAN generates more photo-realistic faces
with sharper facial attributes than baselines on three different
i.e., face-to-attributed-sketch translation,
generative tasks,
face colorization and face completion. Finally, the proposed
ASGAN has a huge potential for forensic sketch synthesis,
which is our future research direction.
Acknowledgments. We acknowledge the National Institute
of Standards and Technology Grant 60NANB17D191 for
funding this research. We also acknowledge the gift donation
from Cisco, Inc for this research.

REFERENCES

[1] Y. Choi, M. Choi, M. Kim, J.-W. Ha, S. Kim, and J. Choo. Stargan:
Uniﬁed generative adversarial networks for multi-domain image-to-
image translation. In CVPR, 2018.
[2] E. Denton, S. Gross, and R. Fergus.
generative
context-conditional

Semi-supervised learning
networks.

adversarial

with
arXiv:1611.06430, 2016.

[3] A. Deshpande, J. Lu, M.-C. Yeh, and D. Forsyth. Learning diverse

image colorization. In CVPR, 2017.

[4] I. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu, D. Warde-Farley,
S. Ozair, A. Courville, and Y. Bengio. Generative adversarial nets. In
NIPS, 2014.

[5] Y. G¨uc¸l¨ut¨urk, U. G¨uc¸l¨u, R. van Lier, and M. A. van Gerven. Convo-

lutional sketch inversion. In ECCV, 2016.

[6] G. E. Hinton and R. R. Salakhutdinov. Reducing the dimensionality
of data with neural networks. Science, 313(5786):504–507, 2006.
[7] S. Iizuka, E. Simo-Serra, and H. Ishikawa. Let there be color!: Joint
end-to-end learning of global and local image priors for automatic
ACM TOG,
image colorization with simultaneous classiﬁcation.
35(4):110, 2016.

[8] P. Isola, J.-Y. Zhu, T. Zhou, and A. A. Efros.

Image-to-image

translation with conditional adversarial networks. In CVPR, 2017.
[9] J. Johnson, A. Alahi, and L. Fei-Fei. Perceptual losses for real-time

style transfer and super-resolution. In ECCV, 2016.

[10] D. Kingma and J. Ba. Adam: A method for stochastic optimization.

In ICLR, 2014.

ICLR, 2013.

[11] D. P. Kingma and M. Welling. Auto-encoding variational bayes. In

[12] B. F. Klare, S. S. Bucak, A. K. Jain, and T. Akgul. Towards automated

caricature recognition. In ICB, 2012.

[13] S. J. Klum, H. Han, B. F. Klare, and A. K. Jain. The facesketchid sys-
tem: Matching facial composites to mugshots. IEEE TIFS, 9(12):2248–
2263, 2014.

[14] A. B. L. Larsen, S. K. Sønderby, H. Larochelle, and O. Winther.
Autoencoding beyond pixels using a learned similarity metric.
In
ICML, 2015.

[15] Y. Lu, S. Wu, Y.-W. Tai, and C.-K. Tang.

Image generation from

sketch constraint using contextual gan. In ECCV, 2018.

[16] L. Ma, X. Jia, Q. Sun, B. Schiele, T. Tuytelaars, and L. Van Gool.

Pose guided person image generation. In NIPS, 2017.

[17] A. Mahendran and A. Vedaldi. Understanding deep image represen-

tations by inverting them. In CVPR, 2015.

[18] A. Makhzani, J. Shlens, N. Jaitly, I. Goodfellow, and B. Frey. Adver-

sarial autoencoders. In ICLR, 2016.

[19] E. Mansimov, E. Parisotto, J. L. Ba, and R. Salakhutdinov. Generating

images from captions with attention. In ICLR, 2016.

[20] A. M. Martinez. The ar face database. CVC Technical Report, 24,

1998.

[21] P. Mittal, A. Jain, G. Goswami, R. Singh, and M. Vatsa. Recognizing
composite sketches with digital face images via ssd dictionary.
In
IJCB, 2014.

[22] S. Mo, M. Cho, and J. Shin. Instagan: Instance-aware image-to-image

translation. In ICLR, 2019.

[23] A. Mordvintsev, C. Olah, and M. Tyka. Inceptionism: Going deeper

into neural networks. Google Research Blog, 2015.

[24] A. Odena, C. Olah, and J. Shlens. Conditional image synthesis with

auxiliary classiﬁer gans. In ICLR, 2017.

[25] D. Pathak, P. Krahenbuhl, J. Donahue, T. Darrell, and A. A. Efros.

Context encoders: Feature learning by inpainting. In CVPR, 2016.

[26] C. Peng, N. Wang, X. Gao, and J. Li. Face recognition from multiple
stylistic sketches: Scenarios, datasets, and evaluation. In ECCV, 2016.
´Alvarez.
In NIPS Workshop,

[27] G. Perarnau, J. van de Weijer, B. Raducanu, and J. M.

Invertible conditional gans for image editing.
2016.

[28] P. J. Phillips, H. Moon, S. A. Rizvi, and P. J. Rauss. The feret
evaluation methodology for face-recognition algorithms. IEEE TPAMI,
22(10):1090–1104, 2000.

[29] S. Reed, Z. Akata, X. Yan, L. Logeswaran, B. Schiele, and H. Lee.
Generative adversarial text-to-image synthesis. In ICML, 2016.
[30] S. E. Reed, Z. Akata, S. Mohan, S. Tenka, B. Schiele, and H. Lee.

Learning what and where to draw. In NIPS, 2016.

[31] O. Ronneberger, P. Fischer, and T. Brox. U-net: Convolutional
networks for biomedical image segmentation. In MICCAI, 2015.
[32] T. Salimans, I. Goodfellow, W. Zaremba, V. Cheung, A. Radford, and
X. Chen. Improved techniques for training gans. In NIPS, 2016.
[33] W. Shi, J. Caballero, F. Husz´ar, J. Totz, A. P. Aitken, R. Bishop,
D. Rueckert, and Z. Wang. Real-time single image and video super-
resolution using an efﬁcient sub-pixel convolutional neural network.
In CVPR, 2016.

[34] A. Siarohin, E. Sangineto, S. Lathuili`ere, and N. Sebe. Deformable
gans for pose-based human image generation. In CVPR, 2018.
[35] Y. Song, Z. Zhang, and H. Qi. Recursive cross-domain face/sketch
generation from limited facial parts. arXiv:1706.00556, 2017.
[36] C. Szegedy, V. Vanhoucke, S. Ioffe, J. Shlens, and Z. Wojna. Rethink-

ing the inception architecture for computer vision. In CVPR, 2016.

[37] H. Tang and H. Liu. A novel feature matching strategy for large scale

image retrieval. In IJCAI, 2016.

[38] H. Tang, W. Wang, D. Xu, Y. Yan, and N. Sebe. Gesturegan for hand
gesture-to-gesture translation in the wild. In ACM MM, 2018.
[39] H. Tang, D. Xu, W. Wang, Y. Yan, and N. Sebe. Dual generator genera-
tive adversarial networks for multi-domain image-to-image translation.
In ACCV, 2018.

[40] T.-C. Wang, M.-Y. Liu, J.-Y. Zhu, G. Liu, A. Tao, J. Kautz, and

B. Catanzaro. Video-to-video synthesis. In NeurIPS, 2018.

[41] X. Wang and A. Gupta. Generative image modeling using style and

structure adversarial networks. In ECCV, 2016.

[42] X. Wang and X. Tang. Face photo-sketch synthesis and recognition.

IEEE TPAMI, 31(11):1955–1967, 2009.

[43] Z. Wang, A. C. Bovik, H. R. Sheikh, and E. P. Simoncelli.

Image
quality assessment: from error visibility to structural similarity. IEEE
TIP, 13(4):600–612, 2004.

[44] L. Wolf, Y. Taigman, and A. Polyak. Unsupervised creation of

parameterized avatars. In ICCV, 2017.

[45] X. Yan, J. Yang, K. Sohn, and H. Lee. Attribute2image: Conditional

image generation from visual attributes. In ECCV, 2016.

[46] D. Yoo, N. Kim, S. Park, A. S. Paek, and I. S. Kweon. Pixel-level

domain transfer. In ECCV, 2016.

[47] D. Zhang, L. Lin, T. Chen, X. Wu, W. Tan, and E. Izquierdo. Content-
adaptive sketch portrait generation by decompositional representation
learning. IEEE TIP, 26(1):328–339, 2017.

[48] H. Zhang, T. Xu, H. Li, S. Zhang, X. Huang, X. Wang, and
D. Metaxas. Stackgan: Text to photo-realistic image synthesis with
stacked generative adversarial networks. In ICCV, 2017.

[49] R. Zhang, P. Isola, and A. A. Efros. Colorful image colorization. In

ECCV, 2016.

[50] S. Zhang, X. Gao, N. Wang, and J. Li. Face sketch synthesis from a
single photo–sketch pair. IEEE TCSVT, 27(2):275–287, 2017.
[51] W. Zhang, X. Wang, and X. Tang. Coupled information-theoretic

encoding for face photo-sketch recognition. In CVPR, 2011.

