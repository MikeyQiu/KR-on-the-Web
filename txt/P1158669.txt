Browsing and Supporting Pluricentric Global Wordnet, or just your Wordnet
of Interest

Ant´onio Branco, Ruben Branco, Chakaveh Saedi and Jo˜ao Silva
University of Lisbon
NLX-Natural Language and Speech Group, Department of Informatics
Faculdade de Ciˆencias
Campo Grande, 1749-016 Lisboa, Portugal
{antonio.branco, ruben.branco, chakaveh.saedi, jsilva}@di.fc.ul.pt

Abstract
In this paper we proceed with a systematic gathering of design requirements for wordnet browsers that permit to consult the content of
wordnets. This is undertaken together with a review of the functionalities of existing browsers. On the basis of this analysis, we present a
new wordnet browser we developed that meets these requirements and thus complies with the most ample range of design features. This
is an open source browser that is freely distributed and can be reused by anyone interested in doing research on or just using wordnets.
We also introduce the notion of a pluricentric global wordnet, for whose undertaking this new advanced browser appears as an important
instrument and motivation. This is a promising operative conception for a bootstrapped yet effective process towards the ultimate global
wordnet, where all individual wordnets from all languages are meant to eventually converge together, in spite of the plurality of their
formats, licenses, depth, etc. that is intrinsic to an inherently plural endeavor undertaken by multiple actors under multiple constraints
across the world.

Keywords: wordnet, wordnet browser, pluricentric global wordnet

1.

Introduction

2. Browser requirements

This paper reports on the results of the work initially mo-
tivated by the aim of making available an online service
that would permit to consult and browse a wordnet we have
been developing.

Our work started by looking for and trying to reuse some
pre-existing browser that could be adopted with as little
adaptation effort as possible. As we proceeded, we found
ourselves pondering on the needs and design requirements
that such an application should satisfy and the work even-
tually took the unanticipated route that would lead to the
building of a new browser from scratch.

This had yet further unanticipated consequences, beyond
the instrumental goal that triggered this implementation of
a new wordnet browser. The analysis of the requirements
on how wordnets should better be presented set us on the
path to ponder on how this could serve a wider purpose of
an as much inclusive support as possible for wordnets and
for their ﬂexible integration with each other. That is what
we are trying to capture with the notion of a pluricentric
global wordnet.

In the next Section 2., we present the list of design require-
ments that guided the development of the browser eventu-
ally implemented, which we collected after the analysis of
existing browsers, brieﬂy described in Section 3..

In Sections 4. and 5., the ﬁrst version of the browser is pre-
sented in its functional and technical aspects, respectively.
A second version is described in Section 6., which moti-
vates the notion of a pluricentric global wordnet, whose
browsing it can support.

Sections 7. and 8. close the paper, respectively, with in-
dication of the resources being distributed, and with some
concluding remarks and notes on future work.

In our initial quest for ﬁnding a reusable wordnet browser,
we end up coming across a number of browsers (addressed
in the next section) that had some features that others were
lacking and vice-versa. As a result of this exercise, we
eventually drew a list of all those should-have requirements,
which was further extended with possible other features
that a general purpose browser should have. It is that list
of requirements that we present now:

+ Detached from any editor

In order to maximize its re-usability,
the browser
should be detached from any particular wordnet edi-
tor so that it allows to peruse wordnets built with the
help any editing application or approach.

+ Detached from any online service

Likewise, the browser should be detachable from any
particular online service or website, so that it can be
reused locally or to support other online sites or ser-
vices.

+ Detached from any wordnet

The browser should allow to be associated with any
wordnet, modulo possible format adaptation or con-
version needed, to allow for its perusal.

+ Compatible with any license

The licensing terms of the browser should make its
usage compatible with wordnets distributed under any
license, and permit it to be distributed together with
the wordnets if convenient.

+ Peruses one or several wordnets

4562

The browser can be used to permit the consultation
of one wordnet in isolation, or the perusal of several
wordnets accessible to the user in the same working
space and connected to each other.

+ Displays translations into selected languages

In case several wordnets are accessible for browsing,
it should be possible to select the subset of the ones
from which results should be displayed that are the
translations of the lemma searched.

+ Performs multilingual search

Also when several wordnets are available for brows-
ing in the same working space, it should be possible
to perform multilingual searches, that is search by en-
tering a lemma in any of those languages without the
need of any previous selection of the intended lan-
guage.

+ Peruses wordnets aligned with any pivot language

It should allow to peruse any set of wordnets that hap-
pen to be aligned pairwise or with the help of any pivot
languages, and not only those aligned with English.

+ Adheres to a de facto standard format

To maximize its re-usability, the browser is compliant
with a de facto standard wordnet format, and should
be equipped with as many converters to that format as
possible.

+ Searches by input lemma

The browser should allow to have access to a given
concept/synset by retrieving it on the basis of a search
triggered by one of its lemmas.

+ Displays lemmas targeted by selected relations

It should be possible to have lemmas displayed that are
the target of relations outgoing from a source lemma,
and have the possibility to select the relations of inter-
est for that to happen.

+ Displays lemmas transitively targeted

The lemmas transitively targeted by outgoing relations
should also be possible to be displayed.

+ Displays deﬁnitions, examples, etc

Besides lemmas, displaying deﬁnitions and examples
should be possible.

+ Multilingual user interface

The browser should ensure a multilingual interface
where the menu and instruction can be displayed in
different languages, with the inclusion of further lan-
guages being possible.

+ Web-based platform independent

the largest number of possible locations, the wordnet
browser should be web-based and independent of the
web-browsing application at use.

+ Code open to reuse and extension

The browser should be cost-free and openly reusable,
distributed with a permissive license.

3. Reusable browsers
There is a variety of applications and browsers for word-
nets, most of which work as a dictionary providing the user
with the “synonyms” (e.g WordVis (Vercruysse, 2012)) or
in some cases “synonyms” as well as “antonyms” (e.g.
Synonym-net (Network, 2017)) of the searched word.
Bearing in mind that a wordnet includes many informative
relations, and not only synonymy and antonymy, we fo-
cused on applications and browsers with a more extensive
data coverage. Among the wordnet browsers, most are to be
used online while the rest can be downloaded to be installed
and run locally. Some are originally designed for the spe-
cial wordnet under development in the respective research
team while the others are more general and compatible with
other wordnets. In what follows, a brief overview of major
wordnet browsers is presented.

• DEBVisDic (Hor´ak et al., 2006) is one of the most
common tools for developing and browsing wordnets.
It is widely used since it is not developed for a particu-
lar wordnet. The user interface is in English and there
is a converter available to change the data in Princeton
format into the XML format accepted by DEBVisDic.
It allows to search in multiple wordnets. A major lim-
itation of this system is that it does not support further
installations given all the data must be uploaded and
saved in its supporting server.

• WordNetLoom (Piasecki et al., 2013), designed and
developed as part of the Polish WordNet project (Der-
wojedowa et al., 2008), is a tool for editing and brows-
It offers a variety of useful features
ing wordnets.
specially for editing a wordnet. As a browser, it has
a dynamic graphical view of the search results which
supports connections among various wordnets. It pro-
vides the user with several search options from the
lemma to POS and relation types. It is accessible both
online and ofﬂine. However, this browser is compat-
ible with the database created by the polish editor,
It
which makes it not independent from this editor.
must be mentioned the current online version only in-
cludes English and Polish WordNet.

• SloWTool (Fiˇser and Novak, 2011) is also a well
known tool for browsing, editing and visualizing
wordnets.
It is independent of any particular web
browser and can be used online or in a local installa-
tion. Although it provides the user with several inter-
esting search options, it does not support the mapping
among wordnets of different languages.

In order to be accessible by the largest possible type
or number of potential users (irrespective of the op-
erative systems or platforms they may be using), in

• English Princeton Browser, as a part of the English
Princeton wordnet (Fellbaum, 1998), is publicly avail-
It is designed to browse through
able to be reused.

4563

synsets and senses in any wordnet compatible with the
Princeton format. However, like the previous exam-
ple, it does not support connections among wordnets
of different languages.

• Visuwords (Critchﬁeld, 2017) is an online graphi-
cal wordnet browser that employs colors and shapes
to distinguish between synsets in various parts of
speeches and types of semantic relations. Although
very user friendly, this browser does not support mul-
tilingual wordnet browsing either.

• Open Multilingual Wordnet (Bond and Foster, 2013)
connects a large number of wordnets from different
languages while using the English Princeton word-
net as the pivot one. The wordnets it resorts to have
permissive licences for derivatives and redistribution
and searching through the browser shows results in
all their languages. However the source code of the
browser itself is not available to be reused, and it is
a browser that in any case offers no options to peruse
wordnets on the basis of, direct or transitive, semantic
relations.

• Multi-WordNet (Pianta et al., 2002) is a well-known
project aiming at aligning wordnets of different lan-
guages. Currently, it covers seven different languages
— English, Hebrew, Italian, Latin, Portuguese, Roma-
nian and Spanish. Its browser is accessible online and
provides the users with the possibility of navigating
through the wordnet graph in addition to showing the
aligned data in all included wordnets. As in the previ-
ous case, this browser is also among the non-reusable
ones in different installation given its source code is
not distributed.

• Wnbroswer is the browser for the Romanian wordnet
(Tuﬁs¸ et al., 2008). This system receives data in the
Princeton format and is freely available to be reused. It
contains several useful options for search and presents
a graphical representation of the search result. Even
though it has many good features, the static search re-
sult makes it impossible to navigate through the word-
net graph. Two other limitations, considering the items
listed in 2., are the need to run it in a local installation
and the lack of connections among wordnets of differ-
ent languages.

• GermaNet-Explorer (Finthammer et al., 2008) is a
software to visualize the German wordnet. It displays
word senses and synsets and can present all semantic
relations among them. This browser is freely available
for academic use. However, it needs to be installed and
run only locally and does not provide the user with
the option to search across wordnets of different lan-
guages.

• University of Rochester Computer Science wordnet
browser (Ferguson, 2010) can be installed on different
operating systems (Windows, Mac or Ubuntu). It uses
wordnet ﬁles compatible with the Princeton Format
and contains a simple interface to search for a word

in addition to options for the user to choose what to
receive as search results (e.g. deﬁnitions, examples,
sense numbers, links to related synsets, etc.). A lim-
itation of this browser is the need to run on a local
installation. Furthermore, there is no options for con-
nections among different wordnets.

4. Browser: Functional matters
While aiming at responding to concrete needs and con-
straints from their speciﬁc contexts of development, the dif-
ferent publicly available browsers brieﬂy reviewed in Sec-
tion 3. contributed to the advancement of the state of the
art in this respect by introducing novel functionalities. To
a very large extent, the set of requirements in Section 2.
results from gathering all such nice design features from
previous browsers.
As it turns out from the analysis in Section 3., every exist-
ing browser happens not to meet one or other of the require-
ments lined up in Section 2.. This provided the motivation
for our development of a new browser that seeks to meet all
these requirements, to whose presentation we turn now.
The user interface is rendered in a web page that is depicted
in Figure 1. There is a second page listing the wordnets
that may be at use in a given installation of the browser
and respective references, which can be accessed by press-
ing the button on the right of the search button. An in-
stallation of this browser 1can be experimented with here:
http://194.117.45.198:9001.
At the start, the user has two ﬁelds he can ﬁll in. In one of
these ﬁelds, he can type the lemma to search for, and press
the button to enter that query.
Right below that ﬁeld, in the second ﬁeld the user can
select, or deselect, the languages to which the retrieved
lemma should be translated and whose translations should
be displayed with the outcome of the search. Multiple lan-
guages are supported at the same time.
When entering a lemma to be searched for, if that lemma is
included in the wordnet being browsed, all concepts/synsets
that include that word are displayed, one per line.
The search can be continued from these results that are
shown. Each of the synsets is preﬁxed by the string ’rels’,
standing for ’related concepts’, which if pressed, permits to
toggle a menu containing links to all types of the semantic
relations available for that synset. That menu also includes
a link for a translation of that synset to be displayed, if such
translation exists.

1While many more wordnets are being prepared to be in-
cluded, at the moment of submitting this paper, the current in-
stallation of this browser makes use of the following ones: Finn
Wordnet (Lind´en and Carlson, 2010), Arabic Wordnet (Elkateb
et al., 2006), Portuguese Wordnet (Branco et al., 2009), Catalan,
Basque, Galician and Spanish Wordnet (Gonzalez-Agirre et al.,
2012), Chinese Wordnet (Wang and Bond, 2013), Danish Word-
net (Pedersen et al., 2009), Farsi Wordnet (Montazery and Faili,
2010), Hebrew Wordnet (Ordan and Wintner, 2007), Indone-
sian and Malaysian Wordnet (Noor et al., 2011), Japanese Word-
net (Isahara and Kanzaki, 2008), Nynorsk and Bokm˚al Wordnet
(Fjeld and Nygaard, 2009), Polish Wordnet (Piasecki et al., 2009),
Slovene Wordnet (Fiˇser et al., 2012), Swedish Wordnet (Borin et
al., 2013), Thai Wordnet (Thoongsup et al., 2009).

4564

By clicking on a given type of semantic relation, the synsets
that are the target of that relation are displayed (or hidden)
below the respective source synset.
Indentation is used
to represent the successive directed arcs on the semantic
graph.
By clicking on the translation link, in turn, translations
are showed (or hidden) on the right side of the page, with
each translation in a separate box, and with boxes stacking
as a column if multiple languages are selected. The lan-
guage name is included in the header of each box, with a
Wikipedia link to know more about it.
The current pilot installation of the wordnet browser used
for testing and debugging (depicted in Figure 1) resorts to
the Princeton wordnet for the semantic network that is to be
searched for. And for the translation functionality, it resorts
to several wordnets of other languages, whose list can be
found by opening a menu through the button to the left of
the search button.
This pilot installation is online only for demo purposes. The
head picture with ”MY WORDNET” is just a placeholder
where the logo of the wordnet being offered to be browsed
can be inserted, together with the link to the web page of
that wordnet.
The code of the browser can be downloaded from here:
https://github.com/nlx-group/LX-WordNetBrowser.
It is
being distributed under as open source as an MIT License.
The development of an installation of the browser based on
a particular wordnet is quite straightforward. With respect
to the wordnet to be browsed, it only needs that the ﬁles of
the Princeton Wordnet used in the pilot installation above
be replaced by the respective ﬁles of that wordnet of inter-
est. Similar procedure is needed with respect to the ﬁles for
the translations desired.
Concerning the language of the user interface, all that is
required is that the few English words of the menu be linked
(by straightforwardly editing the code) to their translation
equivalents in the language chosen for the user interface, if
such translation is not already existent in the current set of
user interface supported languages.
We will return to the issues of the support for multilingual-
ity and of the multilingual interface below in Section 6..

5. Browser: Technical matters

The browser runs on a client-server architecture based on
Apache and Django framework, and is implemented by re-
sorting to Python, JavaScript and some complementary li-
braries, viz. jQuery, Select2 and Bootstrap.
Looking from the side of the web page that acts as the user
interface, the interactions with the server are handled using
JavaScript and its libraries. As the information is received
from the user session, the DOM (Document Object Model)
is processed, which in turns changes the HTML displayed
on the screen.
Together with Django, Apache HTTP web server is used to
exchange the ﬁles (javascript, html, css and assets) with the
client as it takes care of the in- and out-going trafﬁc.
While Apache is acting as the web server, the information
retrieval is done with the help of Python. The request is
analyzed through Django’s request API and the appropri-

ate Python script is run, whose outcome is sent over to the
client for the JavaScript code to handle and display.
Concerning wordnet data, two formats are used. One of
them is the Princeton wordnet format.2 This is the format
needed to support the search of the information regarding
the semantic relations between the words that are relevant
to the lemma entered in the query.
The other format concerns the mapping of a lemma in some
language to their counterpart synset in English, and is used
for ﬁnding the translations of the input lemma. In this for-
mat, there is one lemma per line, which is tab-separated
from its translational equivalent.3
In our current implementation, the tab ﬁles resort to En-
glish as the pivot language. This does not hamper to opt
for other languages to function as a pivot language by sim-
ply replacing the tab-separated ﬁles with the ones suited for
that purpose.
In order to minimize the time spent accessing the data, the
result of each previous search has its offsets cached. If the
user wishes to explore a given synset that was retrieved,
its cached offset helps to perform a direct lookup. These
caches are kept in the lines of the list with the search results:
Each line of the list contains a lemma, and has its ’Class’
set as the offset of the respective wordnet.
The wordnet data is kept in memory in native Python data
structures, such as dictionaries, to speed up retrieval of in-
formation in each request. The data is kept separate from
the browser service by running in parallel through a local
and private XML-RPC server. The queries are submitted to
this server, and their outcome are used to proceed with the
handling of client requests.
To fully support multilinguality, the possibility of integrat-
ing as many languages as needed is vital. The queries, the
data processed and the information displayed to the user
must be able to encode any character featured in the alpha-
bets of the languages currently supported by the pilot instal-
lation of the browser and any future ones. This is achieved
by having all the processes encoded in UTF-8, allowing to
encode Latin alphabets and other more logo-graphic alpha-
bets and scripts.
Due to a simpler code base that the ﬁrst installation fea-
tures, it is a good choice for development and usage with
a single language system, compared to the extended code
base in the second installation, that supports multilingual-
ity.

6. Towards a pluricentric global wordnet
By allowing to look also for the translations of the lemma
searched for in the wordnet of interest, the browser pre-
sented in Section 4. permits the perusing of any wordnet,
on which it is based, in a multilingual setting. However,
this still offers a quite limited compliance with a truly mul-
tilingual browser.

2This

format

is

described

in

http://wordnet.princeton.edu/man/wndb.5WN.html

3This

format

in
http://compling.hss.ntu.edu.sg/omw/.
The ﬁles in this for-
mat used in the pilot installation of the browser were obtained
from http://compling.hss.ntu.edu.sg/omw/summx.html.

described

is

4565

This motivated another browser that, in addition to all de-
sign features of the one previously presented, has an en-
hanced multilingual design. Its interface page is depicted
in Figure 2. An installation of this browser can be experi-
mented with here: http://194.117.45.198:9002.
First, it accepts that the lemma entered to be searched
is from any language, and ensures that the language of
that query is automatically identiﬁed and the respective
synset(s) is retrieved from the respective wordnet.
Second, this other version of the browser also allows for
the customization on the ﬂy of the user interface. Above
the logo at the top of the page, there is a menu that per-
mits to chose the language in which the interface should be
displayed.4
Third, it should also be noted that by its very own design,
this browser (as well as the previous one) further supports
multilinguality by permitting to peruse sets of wordnets
from different languages that happen to be assembled and
linked with each other around a pivot language other than
English.
Importantly, it permits the perusal of wordnets that are not
linked to the Princeton wordnet 5 or to any other wordnet in
other language. And it permits to search and display synsets
that are not linked to synsets in the Princeton wordnet (even
if other synsets of the same wordnet are).
This is the kind of browser that is closer than any other
before to be ﬁt and useful to peruse the ultimate Global
Wordnet — eventually encompassing all wordnets of all
languages — one day when it comes into existence. While
that day has not arrived, this browser is a most useful in-
strument to peruse ensembles of wordnets whose different
composition respond to diverse interests, needs, constraints
or limitations.
For instance, there may be the interest of gathering just the
set of wordnets of the languages belonging to the same lan-
guage family; or the wordnets built around a given pivot
language, etc.
And there certainly exists the need to allow the browsing, in
a multilingual setting, of a given wordnet with some licens-
ing restrictions concerning its distribution.
In a counter-
factual setting that imposes that all wordnets must be re-
distributed under the same license to be displayed online
all together, that would not be feasible.
While the conditions are being prepared but not yet ful-
ﬁlled to eventually there being a Global Wordnet with all
world wordnets connected among themselves, the present
browser is an important instrument for there being multiple
installations and sites of multilingual wordnets of multiple
sizes and compositions, in what we would designate as an
interim pluricentric global wordnet.
Importantly, this browser is also a novel instrument to help
to browse and support any new multilingual wordnet that
will be set up as an alternative to an eventual multilingual
wordnet whose authors, based on their authorship of that
derivative work, may have it accessible for perusal behind

4At the moment of the submission of this paper, this design
feature is being expanded through crowd sourcing, where volun-
teers can offer the translation of menu items in their languages.

5Naturally, provided that they are in the de facto standard for-

mat the browser is based upon, that is the Princeton format.

a non detachable browser that cannot receive further inde-
pendent installations by other research teams — or may de-
cide to lock that derivative work in some restrictive license;
or even not to distribute it at all (even though the individual
wordnets they are based on have permissive licenses, and
may be not even conspicuously cited).6
Pluricentric global wordnet appears thus as a promising
operative conception for a bootstrapped yet effective pro-
cess towards an ultimate global wordnet, where all word-
nets from all languages are meant to eventually converge
together. It allows to progress in this direction in spite of
the plurality of formats, licenses, maturity, volume, cover-
age, depth, etc. of individual wordnets, thus supporting an
effective way to cope with the lack of their harmonization
— in the present days and in the foreseeable future — that
it is intrinsic to an inherently plural endeavor undertaken
by multiple actors in multiple circumstances under multi-
ple motivations and constraints across the world.
Pluricentric global wordnet allows also to circumvent the il-
lusory appeal of a monolithic derivative endeavor that gath-
ers as much wordnets as possible under some harmonized
ensemble that ends up however trapped behind the wall of
some non permissive license or even of non allowed redis-
tribution.

7. Resources Distributed
The software whose development is reported in the present
paper is distributed at https://github.com/nlx-group/LX-
WordNetBrowser under an MIT license.
This application is termed as LX-WordNetBrowser and
users of this resource should refer it by citing the present
paper.

8. Conclusions and Future Work
This paper presented a new wordnet browser that satis-
ﬁes the ample design requirements that were systematically
gathered after an analysis of the publicly available wordnet
browsers. This is an open source browser that is freely dis-
tributed and can be reused by anyone interested in doing
research on or using wordnets.
In one of its versions, this software is distributed under an
open source license to support the installations of indepen-
dent web based browsers for any wordnet.
In another version, distributed under identical license, this
software supports fully-ﬂedged multilingual installations of
wordnet browsers, and it is thus contributing to the ad-
vancement of a pluricentric global wordnet.
The distribution under an open source license meets the re-
quirement Code open to reuse and extension.
Both versions, successfully follow the requirements set forth
in Section 2., as described in Section 4. and 5..
As of now, it can be applied to the multiple existing word-
nets in the Princeton wordnet format, the de facto standard
format it is based on. By using this format, and given the
many tools that exist to convert from other formats into it, it
is possible to detach the browser from the wordnet editors.
Its full potential will be deployed when there will be more
converters from any wordnet format to that format, than

6The BabelNet approach in this respect comes to mind here.

4566

those that already exist today. Important future work will
thus consist in developing more converters of this sort, fur-
ther detaching the browser from any wordnet.
In a more ambitious and long term perspective, it would be
interesting to connect different installations of this browser
through web services such that the content of every wordnet
available to be searched in some of its installations would
be available to be searched from any other installation thus
connected. This will help to move from the browsing of
an interim pluricentric global wordnet to the browsing of a
fully global wordnet.
A pluricentric global wordnet appears as an operative con-
ception for a bootstrapped yet effective process towards
the ultimate global wordnet, where all individual wordnets
from all languages are meant to eventually converge to-
gether, despite their plurality that is inherent to a multifari-
ous endeavor undertaken by multiple actors under multiple
constraints across the world.

Acknowledgment

The present research was partly supported by the In-
frastructure for the Science and Technology of the Por-
tuguese Language (CLARIN L´ıngua Portuguesa), and by
the ANI/3279/2016 grant.

Bond, F. and Foster, R. (2013). Linking and Extending
an Open Multilingual Wordnet.
In Proc. 51st Annual
Meeting of the Association for Computational Linguis-
tics (Volume 1: Long Papers), pages 1352–1362.

Borin, L., Forsberg, M., and L¨onngren, L. (2013). Saldo: a
touch of yin to wordnet’s yang. Language resources and
evaluation, 47(4):1191–1211.

Branco, A., Costa, F., Ferreira, E., Martins, P., Nunes, F.,
Silva, J. a., and Silveira, S. (2009). Lx-center: a cen-
ter of online linguistic services. In Proceedings of the
ACL-IJCNLP 2009 Software Demonstrations, pages 5–
8. Association for Computational Linguistics.

Critchﬁeld, T. S. (2017). Visuwords R(cid:13): a handy online tool
for estimating what nonexperts may think when hearing
behavior analysis jargon. Behavior Analysis in Practice,
pages 1–5.

Derwojedowa, M., Piasecki, M., Szpakowicz, S., Za-
wisławska, M., and Broda, B. (2008). Words, concepts
and relations in the construction of polish wordnet. In
Proceedings of the Global WordNet Conference (GWC
2008), Seged, Hungary, pages 162–177.

Elkateb, S., Black, W., Rodr´ıguez, H., Alkhalifa, M., Vossen,
P., Pease, A., and Fellbaum, C.
(2006). Building a
wordnet for arabic. In Proceedings of The ﬁfth inter-
national conference on Language Resources and Evalua-
tion (LREC 2006), pages 22–28.

Fellbaum, C. (1998). WordNet. Wiley Online Library.
Ferguson, G.
computer
http://www.cs.rochester.edu/research/cisd/wordnet.

of
wordnet

University

science

(2010).

(urcs)

rochester
browser.

Finthammer, M., Cramer, I. M., et al. (2008). Exploring
and navigating: Tools for germanet. In Proceeding of
the 6th International Conference on Language Resources
and Evaluation (LREC-2008).

Fiˇser, D. and Novak, J. (2011). Visualizing slownet. Pro-
ceedings of the Electronic Lexicography in the 21st Cen-
tury (eLex 2011), pages 76–82.

Fiˇser, D., Novak, J., and Erjavec, T. (2012). slownet 3.0:
In Proceedings
development, extension and cleaning.
of 6th International Global Wordnet Conference (GWC
2012), pages 113–117.

Fjeld, R. V. and Nygaard, L. (2009). Nornet—a monolin-

gual wordnet of modern norwegian.

Gonzalez-Agirre, A., Laparra, E., and Rigau, G. (2012).
Multilingual central repository version 3.0: upgrading a
very large lexical knowledge base. In Proceedings of 6th
International Global Wordnet Conference (GWC 2012),
page 118.

Hor´ak, A., Pala, K., Rambousek, A., and Povoln`y, M.
(2006). Debvisdic–ﬁrst version of new client-server
wordnet browsing and editing tool. In Proceedings of the
Third International WordNet Conference (GWC 2006),
pages 325–328.

Isahara, Hitoshi, B. F. U. K. U. M. and Kanzaki, K. (2008).
Development of the japanese wordnet. In Proceedings
of the Sixth International Conference on Language Re-
sources and Evaluation (LREC’08). European Language
Resources Association (ELRA).

Lind´en, K. and Carlson, L. (2010). Finn wordnet-wordnet

p˚a ﬁnska via ¨overs¨attning. LexicoNordica, (17).

Montazery, M. and Faili, H. (2010). Automatic persian
wordnet construction.
In Proceedings of the 23rd In-
ternational Conference on Computational Linguistics:
Posters, pages 846–850. Association for Computational
Linguistics.
S.

(2017). Welcome

to synonyms.net.

Network,

http://www.synonyms.net/.

Noor, N. H. B. M., Sapuan, S., Bond, F., et al. (2011).
Creating the open wordnet bahasa.
In Paciﬁc Asia
Conference on Language, Information and Computation
(PACLIC), pages 255–264.

Ordan, N. and Wintner, S. (2007). Hebrew wordnet: a test
case of aligning lexical databases across languages. In-
ternational Journal of Translation, 19(1):39–58.

Pedersen, B. S., Nimb, S., Asmussen, J., Sørensen, N. H.,
Trap-Jensen, L., and Lorentzen, H. (2009). Dannet: the
challenge of compiling a wordnet for danish by reusing
a monolingual dictionary. Language resources and eval-
uation, 43(3):269–299.

Pianta, E., Bentivogli, L., and Girardi, C. (2002). Multi-
wordnet: developing an aligned multilingual database.
ﬁrst global wordnet conference (gwc 2002). India, Jan-
uary.

Piasecki, M., Broda, B., and Szpakowicz, S. (2009). A
wordnet from the ground up. Oﬁcyna Wydawnicza Po-
litechniki Wrocławskiej Wrocław.

Piasecki, M., Marci´nczuk, M., Ramocki, R., and Maziarz,
M. (2013). Wordnetloom: a wordnet development sys-
tem integrating form-based and graph-based perspec-
tives. International Journal of Data Mining, Modelling
and Management, 5(3):210–232.

Thoongsup, S., Robkop, K., Mokarat, C., Sinthurahat, T.,
Charoenporn, T., Sornlertlamvanich, V., and Isahara, H.

4567

(2009). Thai wordnet construction. In Proceedings of
the 7th workshop on Asian language resources, pages
139–144. Association for Computational Linguistics.
Tuﬁs¸, D., Ion, R., Ceaus¸u, A., and S¸tef˘anescu, D. (2008).
Racai’s linguistic web services. In Proceedings of the
6th international conference on Language Resources and
Evaluation (LREC 2008), pages 28–30.

Vercruysse,

(2012).
S.
http://wordvis.com/about.html.

About

wordvis.

Wang, S. and Bond, F. (2013). Building the chinese open
wordnet (cow): Starting from core synsets.
In Pro-
ceedings of the 11th Workshop on Asian Language Re-
sources, a Workshop at IJCNLP, pages 10–18.

4568

Annex

4569

Figure 1: ”My Wordnet” installation of the wordnet browser: example with Princeton Wordnet as the wordnet to be
browsed.

Figure 2: ”Pluricentric” installation of the wordnet browser: example with Portuguese selected to be browsed, and with
English for the user interface.

